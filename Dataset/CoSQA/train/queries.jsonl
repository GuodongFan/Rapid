{"_id": "437f08bbf3a575bff2a5214882fb01ac", "text": "Reads text file contents", "title": "", "metadata": ""}
{"_id": "097ea98cc71c12967eea2208caa654ec", "text": "Returns day number of the last day of the month : param t : datetime : return : int", "title": "", "metadata": ""}
{"_id": "d8c3f429a72b3ce3a47f58c41a595cc5", "text": "Return a base static url always ending with a /", "title": "", "metadata": ""}
{"_id": "7b3a3b8e1fb8ccd1663b01a9343890f6", "text": "Return a virtual concatenate of several NumPy arrays .", "title": "", "metadata": ""}
{"_id": "e6ce0cccbbb8de05b26211a1961840d5", "text": "Check if a file exists and is non - empty .", "title": "", "metadata": ""}
{"_id": "5d0841f38afb14d1298234b859e0127a", "text": "Returns the file exif", "title": "", "metadata": ""}
{"_id": "3ffd8b9ded10b9dbd1a4cdf056ae78b3", "text": "Get the MachineGuid from HKEY_LOCAL_MACHINE \\ Software \\ Microsoft \\ Cryptography \\ MachineGuid", "title": "", "metadata": ""}
{"_id": "f189fe1dd25edd3205a4095255c4b92c", "text": "Return array - like containing only true / non - NaN values possibly empty .", "title": "", "metadata": ""}
{"_id": "6b2644da0cef427f67d007283f5d4a38", "text": "Adds an object to the collection based on klass and key .", "title": "", "metadata": ""}
{"_id": "2edefec883629a8515a32243dcd9a84a", "text": "Finds first file in path whose filename matches pattern ( via : func : fnmatch . fnmatch ) or raises : exc : IndexError .", "title": "", "metadata": ""}
{"_id": "54c71787ab302aca46cd310ba0b00bfe", "text": "for a list of samples return the value of a global option", "title": "", "metadata": ""}
{"_id": "29509e790d802de357b675a6d0366f80", "text": "Removes trailing zeros in the list of integers and returns a new list of integers", "title": "", "metadata": ""}
{"_id": "79794fed0b66b0d039d6b8df8d4ff6ea", "text": "Yield one date per day from starting date to ending date .", "title": "", "metadata": ""}
{"_id": "20c40e0b9d3dc9c6f2f0227cad62f313", "text": "Return a list where the duplicates have been removed .", "title": "", "metadata": ""}
{"_id": "880573c84e22a0f56a5cddf21857f4e8", "text": "Returns a boolean index with True if the value is masked .", "title": "", "metadata": ""}
{"_id": "d75e5b4f2ff584cb81797d74da161ba9", "text": "Report whether the given value is a byte or unicode string .", "title": "", "metadata": ""}
{"_id": "9a409334d7f0f7a6553e9291ddeb866f", "text": "Split a number from its unit 1px - > ( q px ) Args : value ( str ) : input returns : tuple", "title": "", "metadata": ""}
{"_id": "385f5be4274ec4e0498120237a39d410", "text": "Return the number of active CPUs on a Darwin system .", "title": "", "metadata": ""}
{"_id": "d41d8cd98f00b204e9800998ecf8427e", "text": "", "title": "", "metadata": ""}
{"_id": "d6fcb18287eb4130fc0d154fd65b5447", "text": "Return BGR image read by opencv", "title": "", "metadata": ""}
{"_id": "241c87c72df92ad33f33b9dd968efce2", "text": "The current position of the cursor .", "title": "", "metadata": ""}
{"_id": "f04b3099105699abd30878a5739b8a40", "text": "Appends tzinfo and assumes UTC if datetime object has no tzinfo already .", "title": "", "metadata": ""}
{"_id": "b12b52c9b4a5a87e5c16c224990ca10e", "text": "Split s by sep unless it s inside a quote .", "title": "", "metadata": ""}
{"_id": "cfd0df30e130b154167736421f97d3cc", "text": "Read a file and close it . Returns the file source .", "title": "", "metadata": ""}
{"_id": "8944a8e1492009ab6f527df337ada2b3", "text": "Softsign op .", "title": "", "metadata": ""}
{"_id": "fbd412968ab62be17c6a0b185ad08ebb", "text": "Shorthand for returning a URL for the requested static file .", "title": "", "metadata": ""}
{"_id": "128a73f7620fd272546cc9b771602e8f", "text": "Iterate chunks of size chunk_size from a file - like object", "title": "", "metadata": ""}
{"_id": "2b9bb62ef74b37d7b3f719949c602c2e", "text": "Return n size lists from a given list l", "title": "", "metadata": ""}
{"_id": "2f2650c169cc377fd4c4e815991d3230", "text": "A non - negative integer .", "title": "", "metadata": ""}
{"_id": "918f1cf258f94e4ec681d93c4ccd5117", "text": "Format a byte sized value .", "title": "", "metadata": ""}
{"_id": "d52daf05c5ba92e98e0ce4c0efcb91b7", "text": "Print escape codes to set the terminal color .", "title": "", "metadata": ""}
{"_id": "bf85e29bf1e822e7b00a1db0da1990cc", "text": "Under UNIX : is a keystroke available?", "title": "", "metadata": ""}
{"_id": "ad75d697c450d6f084dd2e6d7de69b16", "text": "Returns given method name .", "title": "", "metadata": ""}
{"_id": "bb0edecc39a78457ddecbe3988ea2dfd", "text": "Given two data points [ X Y ] linearly interpolate those at x .", "title": "", "metadata": ""}
{"_id": "23f3c054d9cff2563992e1ecde52b971", "text": "Evaluates a piece of Javascript in the context of the current page and returns its value .", "title": "", "metadata": ""}
{"_id": "ffb501335f9d42e4e58be2691a51d2cb", "text": "Return all rows from a cursor as a dict .", "title": "", "metadata": ""}
{"_id": "0d3c9a2cb5e6e2c15b116d69b3d9c175", "text": "Trim a PIL image and remove white space .", "title": "", "metadata": ""}
{"_id": "e6ca3e803b29870b0adf72711aa47396", "text": "Get the number of rows in a particular table .", "title": "", "metadata": ""}
{"_id": "74e3916f7ea25b7750868520b0c71712", "text": "Return a list of the ( name value ) pairs of the enum .", "title": "", "metadata": ""}
{"_id": "d601911a710cca3d852aa263ece46365", "text": "Time execution of function . Returns ( res seconds ) .", "title": "", "metadata": ""}
{"_id": "b9c230f4b588a8a5c016267d933114a7", "text": "Selectively log an accepted request .", "title": "", "metadata": ""}
{"_id": "8e61b40a1590177d4c8b16023c165c57", "text": "Is the SQLAlchemy column type one that inherits from : class : Numeric such as : class : Float : class : Decimal ?", "title": "", "metadata": ""}
{"_id": "64be351e2494003d47fb31bfc4df10c7", "text": "Return manhattan distance between two lists of numbers .", "title": "", "metadata": ""}
{"_id": "99aaae044360e7ce92127697cd5cd2f5", "text": "Provides the color corresponding to value x in the form of a tuple ( R G B A ) with int values between 0 and 255 .", "title": "", "metadata": ""}
{"_id": "0e83015554848982ae8a141e82133ef6", "text": "return an iterator that returns a chunk of a string every time it is called . notice that even though bufsize_type might be line buffered we re not doing any line buffering here . that s because our StreamBufferer handles all buffering . we just need to return a reasonable - sized chunk .", "title": "", "metadata": ""}
{"_id": "dec9827da44398079be60cafd62e38d2", "text": "Cleans trailing whitespaces and replaces also multiple whitespaces with a single space .", "title": "", "metadata": ""}
{"_id": "fce7d667ae93b12d9120183e12dfe6a8", "text": "Like map but also chains the results .", "title": "", "metadata": ""}
{"_id": "807d16198eead708c501c3cd2a844b2f", "text": "From a list of intervals extract a list of sorted gaps in the form of [ ( g i ) ] where g is the size of the ith gap .", "title": "", "metadata": ""}
{"_id": "4a20efe4ab272d2b703239eb03175c61", "text": "Returns whether this is a complex floating point type .", "title": "", "metadata": ""}
{"_id": "057313ef72e8c2055c5b019b4e43ef1e", "text": "Creates a dictionary mapping aliases to their respective name . import_alias_names is used in module_definitions . py and visit_Call", "title": "", "metadata": ""}
{"_id": "e0cf510bbe0f76f2811aa2606ff381c5", "text": "Minifies the input javascript files to the output file .", "title": "", "metadata": ""}
{"_id": "813600cc61f4a94fa6a1ba26f0852cc1", "text": "Find the first location in our array that is not empty", "title": "", "metadata": ""}
{"_id": "d99e8665526ac5f6b3c9b1a528132b52", "text": "Simple function to convert naive : std : datetime . datetime object containing local time to a naive : std : datetime . datetime object with UTC time .", "title": "", "metadata": ""}
{"_id": "4982bcc0b826318c4567b26683e28f4c", "text": "Returns the topmost parent of the current category .", "title": "", "metadata": ""}
{"_id": "1797025439d4b630fb8eaea3c029a988", "text": "Round the number to the specified number of significant figures", "title": "", "metadata": ""}
{"_id": "af8c06e5d472ab0f4f8b4e1fb677c7a8", "text": "Serializes a numpy array to a compressed base64 string", "title": "", "metadata": ""}
{"_id": "d48e81e12f1c99dc8a9abf065a23ed93", "text": "Quit signal handler .", "title": "", "metadata": ""}
{"_id": "546e825258f88f85778b8c1b56bd93c0", "text": "Writes a file if it doesn t already exist with the same content .", "title": "", "metadata": ""}
{"_id": "bc3c09fecb44239ebabb8f47ba0f6325", "text": "Raise the elements of an asynchronous sequence to the given power .", "title": "", "metadata": ""}
{"_id": "2f692aec68dbd17393652d6f44c5bf1d", "text": "Check if n is a prime number", "title": "", "metadata": ""}
{"_id": "e7a217e15dd251f188f2e18dbaf695fc", "text": "Return unit sphere coordinates from window coordinates .", "title": "", "metadata": ""}
{"_id": "eb7fbe60077c61ce8cfabe92b3402182", "text": "Returns a list of literal values .", "title": "", "metadata": ""}
{"_id": "bf3d7c079da35fb9a626473a6e10e0b1", "text": "Clears the default matplotlib ticks .", "title": "", "metadata": ""}
{"_id": "1e4304257a625e59414056ac03a357be", "text": "As a convenience turn Python lists and tuples into NumPy arrays .", "title": "", "metadata": ""}
{"_id": "25dac4dbb59b079eb7915cc275a96c54", "text": "Return the unique elements of a collection even if those elements are unhashable and unsortable like dicts and sets", "title": "", "metadata": ""}
{"_id": "8363cd08a5c10996aae07db644f11864", "text": "Expire a specific object from cache .", "title": "", "metadata": ""}
{"_id": "fd0e7a794011f039a5ee310a3944491d", "text": "Turns a werkzeug . MultiDict or django . MultiValueDict into a dict with list values : param d : a MultiDict or MultiValueDict instance : return : a dict instance", "title": "", "metadata": ""}
{"_id": "a4d75231a6c4add955f7792af61e7ed7", "text": "splits iterables a in equal parts of size sz", "title": "", "metadata": ""}
{"_id": "62102c01fc48449c4f9fc633bebd13aa", "text": "Get the output shape from an array .", "title": "", "metadata": ""}
{"_id": "b542ff269386dac411de4a9fc5c9ce63", "text": "Strips spaces : param x : : return :", "title": "", "metadata": ""}
{"_id": "84021dac7d4192294f06e7c94cec28c6", "text": ">>> _isint ( 123 ) True >>> _isint ( 123 . 45 ) False", "title": "", "metadata": ""}
{"_id": "9b476ad68ad10b68dcf936e0645bfcc3", "text": "initializes 3D plot", "title": "", "metadata": ""}
{"_id": "64d56f2b3ab227b02a648f102758b741", "text": "Create a slug for each Work already in the DB .", "title": "", "metadata": ""}
{"_id": "0ae1c15a3eb024cd807b23f3944775b2", "text": "Returns a datetime object of a given timestamp ( in local tz ) .", "title": "", "metadata": ""}
{"_id": "1d67747c8c57a92fa7fe39792059d6c0", "text": "if we have a compatible fill_value and arr dtype then fill", "title": "", "metadata": ""}
{"_id": "8a6f7e34ac3895d886071decad2b1e17", "text": "Return a repr () for a list / tuple", "title": "", "metadata": ""}
{"_id": "ef4f4336715a8cecbce35a9fec332131", "text": "This method asserts that only one value of the provided list is True .", "title": "", "metadata": ""}
{"_id": "a2d03bcf504221e69763f67f31e1a05f", "text": "Download an HTML page using the requests session and return the final URL after following redirects .", "title": "", "metadata": ""}
{"_id": "d75f4bed4187554d2fdae8cea2773a8e", "text": "Gaussian pdf . : param x : free variable . : param mu : mean of the distribution . : param sig : standard deviation of the distribution . : return : sympy . Expr for a Gaussian pdf .", "title": "", "metadata": ""}
{"_id": "db200be7c6dc310025cbeec4996da7ce", "text": "globlookup finds filesystem objects whose relative path matches the given pattern .", "title": "", "metadata": ""}
{"_id": "4268fa6c79afb3d2e4d415f640f22a31", "text": "Decorator to ensure API calls are made and return expected data .", "title": "", "metadata": ""}
{"_id": "22940aab3e6f72372ebf82ea86e2ef27", "text": "Reads a stream discarding the data read and returns its size .", "title": "", "metadata": ""}
{"_id": "f901a76fac3820332564405780089eed", "text": "Get rid of all axis ticks lines etc .", "title": "", "metadata": ""}
{"_id": "2cdbd4a49a6378ae641b092ca8d9ef91", "text": "Add all of the members of the complex abundances to the graph .", "title": "", "metadata": ""}
{"_id": "9b4843f937592bef52380c2c867279ab", "text": "filter to keep bolts", "title": "", "metadata": ""}
{"_id": "c18cfc4263945d70f829bb3bbc5fdb21", "text": "Returns the first day of the current month", "title": "", "metadata": ""}
{"_id": "cadd585b3620dcbdd0b0354a4c5eaaa1", "text": "Test the multiprocess", "title": "", "metadata": ""}
{"_id": "c76849dbdb2348cbc4859bdd47fbccad", "text": "Spawns a kafka continuous consumer thread", "title": "", "metadata": ""}
{"_id": "9aaeb9dcf134592794cc9d1561d99363", "text": "Add index alias to index_name", "title": "", "metadata": ""}
{"_id": "dee7334b357e79c06859dd9e8335b75f", "text": "Submits the packaged application to spark using a spark - submit subprocess", "title": "", "metadata": ""}
{"_id": "55a457c8e1ab3dcc9fcb32cb70684709", "text": "Round a number to a precision", "title": "", "metadata": ""}
{"_id": "0998e4aac5d045d9a0e3d743045238e5", "text": ": param Path path :", "title": "", "metadata": ""}
{"_id": "a431e3dfa7b11380ea5c401a19254b3f", "text": "Determine if a file is empty or not .", "title": "", "metadata": ""}
{"_id": "c8d4b50ea6443ad07a9d69eddc7165b6", "text": "Fetch & return a new Domain object representing the domain s current state", "title": "", "metadata": ""}
{"_id": "b27a42d268aeaa7ce44eb40e766884a9", "text": "Creates a new dict from an existing dict that only has the given keys", "title": "", "metadata": ""}
{"_id": "20dd3463cbe1e6a62057d580441fc14a", "text": "Remove a variable from this dataset .", "title": "", "metadata": ""}
{"_id": "8d2d446cc58cb6b0cb9e49d862fb451b", "text": "Pass in a dictionary that has unsafe characters as the keys and the percent encoded value as the value .", "title": "", "metadata": ""}
{"_id": "5794a6ae27496920bfad2d1f70751307", "text": "Applies maspy . xml . clearTag () to the tag attribute of the element and recursively to all child elements .", "title": "", "metadata": ""}
{"_id": "7969d6ddfc9747967a4bde9d01b3a0a2", "text": "Check whether flyweight object with specified key has already been created .", "title": "", "metadata": ""}
{"_id": "50e0065e2d959356a9d2219ba6b7de80", "text": "Restore settings to default values .", "title": "", "metadata": ""}
{"_id": "9a8bd25a5a5f4c7da324138abcb28cfd", "text": ": rtype : bool", "title": "", "metadata": ""}
{"_id": "3fa00f041b1943f8d7d0a0a1dae57614", "text": "Pull a file directly from S3 .", "title": "", "metadata": ""}
{"_id": "e482d117b0363a006804be7846c76083", "text": "convert GPU arras to numpy and return them", "title": "", "metadata": ""}
{"_id": "e46a5f51ee733d25d091331391b8d802", "text": "Returns the deepest level of nesting within a list of lists", "title": "", "metadata": ""}
{"_id": "6450dc33338ba802cadb7cbae9bc6f78", "text": "Install some packages on the remote host .", "title": "", "metadata": ""}
{"_id": "8dfd3a08880c4776abd675401d0e6c8b", "text": "Read entire contents of file into a string .", "title": "", "metadata": ""}
{"_id": "13ffaba245f495e57939387d74ddf031", "text": "read an image from file - PIL doesnt close nicely", "title": "", "metadata": ""}
{"_id": "5840fb5d3e8edd02e59c95281ac1c819", "text": "Process an iterable of dictionaries . For each dictionary d change ( in place ) d [ key ] to value .", "title": "", "metadata": ""}
{"_id": "ca6f5e2db4519ee9687ae4c851de0976", "text": "Converts a dict to an encoded URL . Example : given data = { a : 1 b : 2 } it returns a = 1&b = 2", "title": "", "metadata": ""}
{"_id": "ce54b4244c1d0bb3977b57ed7bfe136a", "text": "Get line count of file", "title": "", "metadata": ""}
{"_id": "a218b20a0c604687fdb969fd3736c602", "text": "convert 3 3 a matrix to 6 element s list ( see Tauxe 1998 )", "title": "", "metadata": ""}
{"_id": "c7fe6460db77a312ddb4082a2cfc00b4", "text": "Pause for this many seconds", "title": "", "metadata": ""}
{"_id": "d6bc971bdd3c432909570157275cb626", "text": "Get list of datetime objects extracted from a filename", "title": "", "metadata": ""}
{"_id": "ee10c38468d4915a617fc78b522f1521", "text": "Hide the window .", "title": "", "metadata": ""}
{"_id": "1f75dc67b93d0b6ca531facc9ed8921d", "text": "Returns true if the job is still running or zero - os still knows about this job ID", "title": "", "metadata": ""}
{"_id": "e0e1c51c8706b96c34098328ed7c887c", "text": "generate random string with specified length", "title": "", "metadata": ""}
{"_id": "b3beb599121037c6189cf4515ee060a8", "text": "Unpacks sqlite rows as returned by fetchall into an array of simple dicts .", "title": "", "metadata": ""}
{"_id": "c25153e4a5e6d88e37d555e4d0364448", "text": "Returns a random positive integer ( for a Django PositiveIntegerField )", "title": "", "metadata": ""}
{"_id": "7d75592eaa9c20d3caceaec83041639f", "text": "Generate a random walk and return True if the walker has returned to the origin after taking n steps .", "title": "", "metadata": ""}
{"_id": "a16137f24f54b31aa2cb00d25d083e09", "text": "Return a consistent ( key value ) iterable on dict - like objects including lists of tuple pairs .", "title": "", "metadata": ""}
{"_id": "dbe82a7a6f731ad13b9331fe0490c1d3", "text": "Print emphasized good the given txt message", "title": "", "metadata": ""}
{"_id": "74493fa238bbb9241687ea751ae0ed53", "text": "Sample from independent normal distributions", "title": "", "metadata": ""}
{"_id": "7873bb9990ef8f320941276a373e55a1", "text": "inverse hyperbolic sine transformation", "title": "", "metadata": ""}
{"_id": "4def25d5b416e81e53047116389e5c40", "text": "Get user name provide by operating system", "title": "", "metadata": ""}
{"_id": "6326aa733c87c05b521b83645fd46476", "text": "Returns the angle between two points .", "title": "", "metadata": ""}
{"_id": "61ddc7a9540e3a79de12b2cfbc349d90", "text": "Returns the first line of a file .", "title": "", "metadata": ""}
{"_id": "eb56597b56935ac83bc42f06cf571677", "text": "Returns all dates between two dates .", "title": "", "metadata": ""}
{"_id": "166c756f5e64c2f0a6b4f0e2f46be95b", "text": "Returns True if the exception is always safe to retry .", "title": "", "metadata": ""}
{"_id": "13297987395f02c7169d26e04d4a5331", "text": "Render the plot with bokeh . io and push to notebook .", "title": "", "metadata": ""}
{"_id": "22dc8abb6b164f5bbadeb6fd3c7299ed", "text": "Return the sum of the element - wise product of vectors x and y . >>> dotproduct ( [ 1 2 3 ] [ 1000 100 10 ] ) 1230", "title": "", "metadata": ""}
{"_id": "f02e3630d1753e7b3649328bfb7a0e38", "text": "Extract the content of the zip - file at zip_path into target_folder .", "title": "", "metadata": ""}
{"_id": "20527319822d4e3d79fb6738d60da2d8", "text": "Path to tensorflow_datasets directory .", "title": "", "metadata": ""}
{"_id": "11ab804f19d486bd88f38d09ede424c5", "text": "Propagate a mean through linear Gaussian transformation .", "title": "", "metadata": ""}
{"_id": "3d650e65bc58280a66e51393de2e3391", "text": "Create a symbolic link", "title": "", "metadata": ""}
{"_id": "d48bdafca6dd239d84ea2e2f3ad4fc6f", "text": "Return start and end date of this quarter .", "title": "", "metadata": ""}
{"_id": "ec5441ac4f294514aa6528859970d12a", "text": "Original doc : A dialog to get a file name . Returns the name of a file or None if user chose to cancel .", "title": "", "metadata": ""}
{"_id": "40baeaf51c49abe78d2383e406af2c3f", "text": "Reverse the normalization done to a batch of images .", "title": "", "metadata": ""}
{"_id": "d1c6302ac4c7cf31ca7c08030be8f79f", "text": "Colorize text with given color .", "title": "", "metadata": ""}
{"_id": "2111ff1efc095aad79135689ce18b95c", "text": "If value is a datetime convert to timestamp", "title": "", "metadata": ""}
{"_id": "85e57a39ed96451fdd489dc9fcaf5021", "text": "Pull a querystring value from the request .", "title": "", "metadata": ""}
{"_id": "76e6f8d322be08a35969d43e256d469f", "text": "String hash ( djb2 ) with consistency between py2 / py3 and persistency between runs ( unlike hash ) .", "title": "", "metadata": ""}
{"_id": "540bc980ec57b04d4544a0e3ce11f186", "text": "Substitutes the replacement string / character at the given index in the given string returns the modified string .", "title": "", "metadata": ""}
{"_id": "9780924f8e467547f262404f3df247ce", "text": "Shuffle the data .", "title": "", "metadata": ""}
{"_id": "b54f358feffd76c95c73916e63ee144e", "text": "Set authenatication .", "title": "", "metadata": ""}
{"_id": "14cecb9f33b29f2495d1ff2da822bf38", "text": "Runs an asynchronous function without needing to use await - useful for lambda", "title": "", "metadata": ""}
{"_id": "b2f5ff47436671b6e533d8dc3614845d", "text": "g", "title": "", "metadata": ""}
{"_id": "190ea445cca07ee4536b00659b86a1ef", "text": "if the value is in the list move it to the front and return it .", "title": "", "metadata": ""}
{"_id": "a9740f75fd3e32cdc8a669a6ddedf9d3", "text": "helper function for quick base conversions from integers to strings", "title": "", "metadata": ""}
{"_id": "fe6eda0a2fb494eaaa3c0e1b2b58ec22", "text": "Return a string with punctuation removed .", "title": "", "metadata": ""}
{"_id": "d04dcbcee3f1cbe86ce2b5b6f1e5ca23", "text": "Return a dataframe that is a cross between dataframes df1 and df2", "title": "", "metadata": ""}
{"_id": "da8dbd7a466ef0fac686581444c6fcad", "text": "This parallel fetcher uses gevent one uses gevent", "title": "", "metadata": ""}
{"_id": "be0c4d7570990bd18552c31821451fce", "text": "Load the pickled model weights .", "title": "", "metadata": ""}
{"_id": "aa98244f8063276564c9b7d7b8cc2f69", "text": "Converts a list into a space - separated string and puts it in a dictionary", "title": "", "metadata": ""}
{"_id": "7c9b1bed371516e30f51cfbccb8851e7", "text": "If Python 2 replace non - ascii characters and return encoded string .", "title": "", "metadata": ""}
{"_id": "a5cb6e396b758058d5ec0bb19d7f1a48", "text": "Wrapper for the requests . request () function . It accepts the same arguments as the original plus an optional retries that overrides the default retry mechanism .", "title": "", "metadata": ""}
{"_id": "6cd37e5f6ccb5f1b674d2d924d634af9", "text": "Register a struct definition globally", "title": "", "metadata": ""}
{"_id": "c8fb14415eb19ac0d828c674cd8f8992", "text": "Show the stretched data .", "title": "", "metadata": ""}
{"_id": "c332369563a17ce9e81d14f7725a3f39", "text": "Handles the specified flask request for one of the POST URLS Invokes the specified endpoint to generate a response .", "title": "", "metadata": ""}
{"_id": "ec4c85b931fc5ae3d9942398512f914c", "text": "Copies file from default data directory to local directory .", "title": "", "metadata": ""}
{"_id": "2bcf263bed117f605e3f166799efc49a", "text": "round to closest resolution", "title": "", "metadata": ""}
{"_id": "8c2b3c1a7ae873e46d1c3b3e7469622c", "text": "Check if an element from a list is in a string .", "title": "", "metadata": ""}
{"_id": "9dc33777048961c4e192e278800750d8", "text": "Convert a python string to C string .", "title": "", "metadata": ""}
{"_id": "1cb96eb4fc0c94da3ddb03e6b1e49655", "text": "Keep one of the subplots completely empty .", "title": "", "metadata": ""}
{"_id": "e02b13618f9ff9275553c82a588251a9", "text": "Get the display length of a string . This can differ from the character length if the string contains wide characters .", "title": "", "metadata": ""}
{"_id": "dfa42592eeffce5a765db6fd35955d5e", "text": "Checks if the given type is a builtin one .", "title": "", "metadata": ""}
{"_id": "ad2a7dabc867078767de6a27c7bb0854", "text": "Exit execution with return code and message : param msg : Message displayed prior to exit : param code : code returned upon exiting", "title": "", "metadata": ""}
{"_id": "6a563b4c9041e040c4ac253e05b81bf0", "text": "Show a 3D surface plot .", "title": "", "metadata": ""}
{"_id": "e43b699bb4d46e8a0050bef09c66ccaf", "text": "Return True if the given DataFrame has a column of the given name ( string ) and there exists at least one non - NaN value in that column ; return False otherwise .", "title": "", "metadata": ""}
{"_id": "c185d1005d9ee0e3474bfa9903d9bc1b", "text": "Returns True if pip exists inside the virtual environment . Can be used as a naive way to verify that the environment is installed .", "title": "", "metadata": ""}
{"_id": "3157e6702d1ce33a6d457fa37bfe9a93", "text": "Log memory usage before and after a method .", "title": "", "metadata": ""}
{"_id": "dc8ab3d5c6730bd2f552a0ba7fe08d3d", "text": "This function flatten given nested list . Argument : nested list Returns : flat list", "title": "", "metadata": ""}
{"_id": "11b8673794b8bd7446b7bca894586af2", "text": "Delete credentials from the SQLAlchemy datastore .", "title": "", "metadata": ""}
{"_id": "41daaa98b4383bd2acad64db8dd99332", "text": "Delete a label by name .", "title": "", "metadata": ""}
{"_id": "78720998be461fcd79d92587dd9e2f45", "text": "zoom out full data range", "title": "", "metadata": ""}
{"_id": "cb28e679b76e736baa44e25b362a300d", "text": "Checks if two images have the same height and width ( and optionally channels ) .", "title": "", "metadata": ""}
{"_id": "8a5bb36b380d5ba5d77f119b0b500259", "text": "Helper function which returns an array with the Intervals boundaries .", "title": "", "metadata": ""}
{"_id": "442897d387932ac10957c7ae12b82f55", "text": "Callable function for the multiprocessing pool .", "title": "", "metadata": ""}
{"_id": "563551712852b9f2a807d5e4f871a163", "text": "Use Python % format strings as template format specifiers .", "title": "", "metadata": ""}
{"_id": "88cabf535567da0ed14dd88f0800c04e", "text": "Remove files specified multiple times in a list .", "title": "", "metadata": ""}
{"_id": "50aad5f6cb2f30f406824e90d7787936", "text": "Public function that reads a local file and generates a SHA256 hash digest for it", "title": "", "metadata": ""}
{"_id": "aa151a62cc10a85926e70c20849a2e11", "text": "Converts a list of lists into a flat list . Args : x : list of lists", "title": "", "metadata": ""}
{"_id": "970c14c4e9b03dbc74baf964dbc896d8", "text": "Converts list to string with comma separated values . For string is no - op .", "title": "", "metadata": ""}
{"_id": "b98e15568215be067d5db5554dc07f5a", "text": "Returns the length in bytes of a given file object . Necessary because os . fstat only works on real files and not file - like objects . This works on more types of streams primarily StringIO .", "title": "", "metadata": ""}
{"_id": "5c82ba1156b333a4c336a9c61831f92e", "text": "Returns a thread local stack uniquified by the given name .", "title": "", "metadata": ""}
{"_id": "2ee0c64db1f1ec64bfee04f56a113ce7", "text": "Uphold the spec rules about naming .", "title": "", "metadata": ""}
{"_id": "31cbd6d776c575f1f599f809db6d3099", "text": "Saves a pdf of the current matplotlib figure .", "title": "", "metadata": ""}
{"_id": "7bed22cc9dd232e1e66ac99ac70eb5cc", "text": "Return the dotproduct between self and another vector .", "title": "", "metadata": ""}
{"_id": "44e0f99fbc8dbf321443b04f063f838e", "text": "to get states from multiprocessing . queue", "title": "", "metadata": ""}
{"_id": "6fc8c17b330d933f81b566105af27907", "text": "Return flattened dictionary from MultiDict .", "title": "", "metadata": ""}
{"_id": "05829e933d73b33761d32b90284d58b8", "text": "Gets the median of a list of values Returns a float / int", "title": "", "metadata": ""}
{"_id": "10c52effceb383271ac0336aca168555", "text": "Discover the current time zone and it s standard string representation ( for source { d } ) .", "title": "", "metadata": ""}
{"_id": "bf0f2275dc7c0e7ab0e53aa896d9d33c", "text": "This class method could be used as decorator on subclasses it ensures update method is called after function execution .", "title": "", "metadata": ""}
{"_id": "0ca8792f215f469236a421c2e66bdaaf", "text": "execute jobs in processes using N threads", "title": "", "metadata": ""}
{"_id": "6f17e9ffd0563c97b22082726551a309", "text": "Decision Tree", "title": "", "metadata": ""}
{"_id": "46f082f64bce3f4c19d092e85086b452", "text": "Returns True if the given user is in all given groups", "title": "", "metadata": ""}
{"_id": "96d451a5da9d0126dc3e2e195bc05855", "text": "Return the number of leading spaces in line .", "title": "", "metadata": ""}
{"_id": "31680aecd8450e5f1e0d78a7d2e0e9e8", "text": "Function used to fit the exponential decay .", "title": "", "metadata": ""}
{"_id": "d422ff07cb28adaaf8419ca548b74317", "text": "get max for queryset .", "title": "", "metadata": ""}
{"_id": "8233d7dbd6d85c2e6e006300df4d761f", "text": "Update dict with fields from obj . attributes .", "title": "", "metadata": ""}
{"_id": "1ad3d79bcf1825d0b177416e8e654f98", "text": "Command line interface for PyBEL .", "title": "", "metadata": ""}
{"_id": "9ffb639d12e8077b519cfc1bf69a33e6", "text": "Get the local variables in the caller s frame .", "title": "", "metadata": ""}
{"_id": "8bd4a84b2955de6186784672468272d6", "text": "Perform a O ( 1 ) memory hash of an iterable of arbitrary length .", "title": "", "metadata": ""}
{"_id": "c2078acbed33b8c13469e777b2cb32c1", "text": "Show exception with traceback .", "title": "", "metadata": ""}
{"_id": "e893aba2804d68ef90874335b202f407", "text": "gets the dimensions depending on python version and os", "title": "", "metadata": ""}
{"_id": "2b2674c54d3143beb1f1c41427d476ac", "text": "Return the slice after at sub in string astr", "title": "", "metadata": ""}
{"_id": "d4f5e19b7ccfc346b4eb27382b91b4ea", "text": "Send signal to process .", "title": "", "metadata": ""}
{"_id": "484e15145f9625b5d40b4da4a0ae37f8", "text": "Square of the euclidean distance", "title": "", "metadata": ""}
{"_id": "9d816f95192e9f117e80c9ba5df85a92", "text": "Decorator that turns a synchronous function into one returning a future .", "title": "", "metadata": ""}
{"_id": "aa0370ac9b6e534fb53dcec4aa2b565a", "text": "Gaussian model m is [ psill range nugget ]", "title": "", "metadata": ""}
{"_id": "3794f3e2cc186820aeb42a7b8854ea6a", "text": "Segmented max op .", "title": "", "metadata": ""}
{"_id": "b7772a86ac48390abdc5309d53fa8ce8", "text": "Remove text nodes containing only whitespace", "title": "", "metadata": ""}
{"_id": "50c80d0491fe9eda4fc447ae2f5cbe19", "text": "Plot the empirical histogram versus best - fit distribution s PDF .", "title": "", "metadata": ""}
{"_id": "6e943c14edc6fb570e3742d3e27cd58a", "text": "Writes the passed chunk and flushes it to the client .", "title": "", "metadata": ""}
{"_id": "2da6daaaf1b0d7580a7eb7ed689bbdc7", "text": "Check if a Django project is being managed with manage . py or django - admin scripts", "title": "", "metadata": ""}
{"_id": "bb0385f7a6150fe97478e72c785ee4ef", "text": "Close the db and release memory", "title": "", "metadata": ""}
{"_id": "91b3b8be74e6524731dbf706ceafeceb", "text": "Given a float returns a rounded int . Should give the same result on both Py2 / 3", "title": "", "metadata": ""}
{"_id": "98b7d42081292e05397ad5284d1e7c46", "text": "convert record array to a dictionaries", "title": "", "metadata": ""}
{"_id": "31a0911a2af8cb1f9e6bed9721488d81", "text": "Determine the path to the virtualenv python", "title": "", "metadata": ""}
{"_id": "4b64ba439a0725ec11912befcf85b8c4", "text": "Clone a directory try by copying it .", "title": "", "metadata": ""}
{"_id": "7502b4c8df4da44f4f757c44f8aa9bbb", "text": "Connect to FTP server login and return an ftplib . FTP instance .", "title": "", "metadata": ""}
{"_id": "bb5ba2eebba6cea529d7d50e753a37e6", "text": "Returns a snake cased version of a string .", "title": "", "metadata": ""}
{"_id": "9c2e0ff6aa552372a22c051bf7134c36", "text": "kill process Args : process - Popen object for process", "title": "", "metadata": ""}
{"_id": "5e73866b77a1941ee73babbff7384526", "text": "Get longitudes from cartesian coordinates .", "title": "", "metadata": ""}
{"_id": "d6d76d3c9533cd4667c9571da4e809f6", "text": "closeEvent reimplementation", "title": "", "metadata": ""}
{"_id": "68c741196366de1c5b838f9242a93c0d", "text": "Flush the write buffers of the stream if applicable .", "title": "", "metadata": ""}
{"_id": "f987e23731a2b8855e085e036c2dfdf9", "text": "Returns True if the GET querstring contains on values but it can contain empty keys . This is better than doing not bool ( request . GET ) as an empty key will return True", "title": "", "metadata": ""}
{"_id": "5ebcc63e431ec837fe97336b461accc0", "text": "This is a workaround where Collections are no longer iterable when using JPype .", "title": "", "metadata": ""}
{"_id": "d03405157e966430eafd4864f3172d42", "text": "Takes a value or list of values and returns a single result joined by if necessary .", "title": "", "metadata": ""}
{"_id": "55f272e7fc499cfea6f6b671fbfc03a3", "text": "Load the correct module according to the version", "title": "", "metadata": ""}
{"_id": "641bd3a1ec8f3bc40bba4af86c99ffcc", "text": "Use the S3 SWAG backend .", "title": "", "metadata": ""}
{"_id": "d7f1bd24f2cf6da6a0170da870e5e61f", "text": "Returns a list consisting of the cumulative sum of the items in the passed list .", "title": "", "metadata": ""}
{"_id": "eedd0ff8676f2d4c903e98251831d91a", "text": "Convert arrays of datetime . datetime and datetime . timedelta objects into datetime64 and timedelta64 according to the pandas convention .", "title": "", "metadata": ""}
{"_id": "ddc79cd29a920be30759fccc5200601c", "text": "Get the help text ( signature + docstring ) for a command ( function ) .", "title": "", "metadata": ""}
{"_id": "a582b8aa05aaf20eaaac2b07d1f5f9e1", "text": "Return a list of the table names in the database .", "title": "", "metadata": ""}
{"_id": "109c5500c569351d8f1c550cc5ea2600", "text": "Returns number of days in the given month . 1 - based numbers as arguments . i . e . November = 11", "title": "", "metadata": ""}
{"_id": "a784e32e5801721f19df36bbf281806a", "text": "All commits with that message ( in current branch )", "title": "", "metadata": ""}
{"_id": "146efe5bb7368cdc7c8a2276fd42b81e", "text": "Returns the most common element in iterable .", "title": "", "metadata": ""}
{"_id": "006ca3c2d4cdff7c346ee4f642e781ed", "text": "Detects whether a line is present within a file .", "title": "", "metadata": ""}
{"_id": "100d4777c9b523de468591c8dff16d6d", "text": "Sync the database with the current state of the game .", "title": "", "metadata": ""}
{"_id": "4f16176f24f1c95c61b4acc70382971b", "text": "Load Context with data", "title": "", "metadata": ""}
{"_id": "fa256cf1426e632e934542bf91cbc1d5", "text": "Restores CMD and ENTRYPOINT values of the image", "title": "", "metadata": ""}
{"_id": "f2cf6730ee7cf2f58261ef34159d4694", "text": "Quits the application ( called when the last window is closed )", "title": "", "metadata": ""}
{"_id": "716d48056462efbbac650206ead991c1", "text": "Get the item at the given index .", "title": "", "metadata": ""}
{"_id": "d23c951465661b5c27c15d1778d14bd6", "text": "last row or column of square A", "title": "", "metadata": ""}
{"_id": "6d8834ca96c18bba61f08e675fe2940e", "text": "return the count of objects of key", "title": "", "metadata": ""}
{"_id": "2b378f09686edc9142174bd549ef7fdf", "text": "Command line parser .", "title": "", "metadata": ""}
{"_id": "23b91edb74a746211dcedea64235f2ae", "text": "Find earliest occurrence of one of substrings in line .", "title": "", "metadata": ""}
{"_id": "31b281a7b68b443b4cc2b4f7216b7b4b", "text": "Returns the shape of the region as ( x y w h )", "title": "", "metadata": ""}
{"_id": "bfc9873d5cfb614a003c53549139a264", "text": "Try popping a key from a dict . Instead of raising KeyError just return the default value .", "title": "", "metadata": ""}
{"_id": "42487f7ac3bc1ac155248c31b3580ab5", "text": "Is this an integer .", "title": "", "metadata": ""}
{"_id": "86710300502032fa7dbfe044f62c8a7d", "text": "Callback to go to the next tab . Called by the accel key .", "title": "", "metadata": ""}
{"_id": "e0d6bb9c98e074ba290ef8ab1ceace21", "text": "Remove the last NoteContainer in the Bar .", "title": "", "metadata": ""}
{"_id": "00d7a220cd2f6823b3aa59381afc4136", "text": "Delete all records from a table . Use caution!", "title": "", "metadata": ""}
{"_id": "df025eef97ce97636fd7eb38b79ee39d", "text": "Remove prefix ( and space ) from line", "title": "", "metadata": ""}
{"_id": "04f2b2c2179caba6f03567f856259c00", "text": "Helper for plotting .", "title": "", "metadata": ""}
{"_id": "02c59c4b881e8d4a8dc49de59b3eda26", "text": "Remove non - alphanumerical characters from metric word . And trim excessive underscores .", "title": "", "metadata": ""}
{"_id": "1d7451be627884919b455c87eeb06f07", "text": "Override of PantsService . terminate () that cleans up when the Pailgun server is terminated .", "title": "", "metadata": ""}
{"_id": "99f42e770c5ababf6a52a615cdbc25e2", "text": "Return iterator for items in each page", "title": "", "metadata": ""}
{"_id": "49eae42b75629cba2454c011d4d25ed6", "text": "Split a text into a list of tokens .", "title": "", "metadata": ""}
{"_id": "34d9a476a9c93575a1c2ce712c637241", "text": "Remove html code contained into the given string .", "title": "", "metadata": ""}
{"_id": "2d4cce4864c93416795abe5c00cd3935", "text": "Sort list elements by name .", "title": "", "metadata": ""}
{"_id": "146f31cbdc78a2ecdf29c1479c775675", "text": "A helper to create a proxy method in a class .", "title": "", "metadata": ""}
{"_id": "803b05538b40d04d1047d0a8bf31a820", "text": "Obtain a real address as an integer from an objectproxy .", "title": "", "metadata": ""}
{"_id": "dd890f520db91c572b7f2b02a456c2a9", "text": "Returns file name of file at given url .", "title": "", "metadata": ""}
{"_id": "e39cbe21ce92e2ca5f4809825140fcc2", "text": "Remove duplicates from a sequence ( of hashable items ) while maintaining order . NOTE : This only works if items in the list are hashable types .", "title": "", "metadata": ""}
{"_id": "0ce98a190b2d7d5be4d0dfd7f50bfb98", "text": "Returns numpy array of natural logarithms of values .", "title": "", "metadata": ""}
{"_id": "68ec5500bcb5d8e98a83430bb2657c91", "text": "Return the minimum of an array ignoring any NaNs .", "title": "", "metadata": ""}
{"_id": "f3df775ca75da86a18ccb0d29922e614", "text": "Deserialize b ( instance of bytes ) to a Python object .", "title": "", "metadata": ""}
{"_id": "52e17c54fa05cd3bd629d8f45bb7965d", "text": "Cumulative product of a list .", "title": "", "metadata": ""}
{"_id": "2a2ed6e9a3e5530baed8f56253a666d5", "text": "Quit and Restart Spyder application . If reset True it allows to reset spyder on restart .", "title": "", "metadata": ""}
{"_id": "bb9b6c664c7bd1cf446ce5f8b17e02fc", "text": "Establishes access of GettableProperty values", "title": "", "metadata": ""}
{"_id": "d90bb48f2408a872d20e2d71cdab89ff", "text": "Retrieve the next row .", "title": "", "metadata": ""}
{"_id": "a1068e88f81a4ce2cb0f6d8316c1a25c", "text": "Convert the entire image to bytes . : rtype : bytes", "title": "", "metadata": ""}
{"_id": "e43b6f636ca05b25ed6df66ff887a784", "text": "Determines if a list is sorted", "title": "", "metadata": ""}
{"_id": "fdd3a3dacaaba8a26d655d5127b29405", "text": "Display both SQLAlchemy and Python help statements", "title": "", "metadata": ""}
{"_id": "bfb02a8945faea0260a9bd11f285752e", "text": "Return the given path relative to this file .", "title": "", "metadata": ""}
{"_id": "40a7d692e0e3cdd5c404d8f558344761", "text": "Checks if the given type is an enum type .", "title": "", "metadata": ""}
{"_id": "ba90f2d238ed0e3f886715f56583a9ec", "text": "Make a tweepy auth object", "title": "", "metadata": ""}
{"_id": "0de9022966b781d89f49c22852822e47", "text": "Perform column - stacking on a list of 2d data blocks .", "title": "", "metadata": ""}
{"_id": "c6a964174a5e0f34beed8a4f70992c97", "text": "Make a function that checks whether a scalar or array is of a given kind ( e . g . float int datetime timedelta ) .", "title": "", "metadata": ""}
{"_id": "478f6f4435b61524960f61bd361b3cef", "text": "A function to display sympy expression using display style LaTeX in PNG .", "title": "", "metadata": ""}
{"_id": "151e94936b351a1a22f01d6df13ab61c", "text": "Runs a thing once and once only .", "title": "", "metadata": ""}
{"_id": "efd47c5fe28318a36078a87649839dc8", "text": "Return a new datetime . datetime object with values that represent a start of a month . : param val : Date to ... : type val : datetime . datetime | datetime . date : rtype : datetime . datetime", "title": "", "metadata": ""}
{"_id": "51429f1f42e5953ede0847e11b1a1d8a", "text": "Returns ( module locals ) of the funciton depth frames away from the caller", "title": "", "metadata": ""}
{"_id": "e1cbab8a9de6c170acfbe6efeba25b33", "text": "Closes the client connection to the database .", "title": "", "metadata": ""}
{"_id": "70fcd485141d6e86e8c4437394b0a06b", "text": "Deletes all the unnamed columns", "title": "", "metadata": ""}
{"_id": "9980120991ac9a11d25adc0089133eef", "text": "Convert special characters using %xx escape .", "title": "", "metadata": ""}
{"_id": "10ccd94aa63b7a74b2f343ae83ae3191", "text": "Run server with provided command line arguments .", "title": "", "metadata": ""}
{"_id": "7c0a3c300914772faa303ba020a32f43", "text": "create random string of selected size", "title": "", "metadata": ""}
{"_id": "7c1a5e415c190078505793ca3290dd30", "text": "Drops and re - creates the SQL schema", "title": "", "metadata": ""}
{"_id": "68237a325e3e3b4a45513e04b6ec1d91", "text": "Calculate the tanimoto set similarity .", "title": "", "metadata": ""}
{"_id": "4680f14c5a37adc46cc6853267ab1a4d", "text": "Helper to read an environment variable", "title": "", "metadata": ""}
{"_id": "acaf9bcd048a084d29d9c3032aa294d5", "text": "Disables legends if show_legend is disabled .", "title": "", "metadata": ""}
{"_id": "90a5de4fcc700ce17cd6ca99f88e2cb3", "text": "Returns the code object for this BUILD file .", "title": "", "metadata": ""}
{"_id": "c5508fca09eca08eb4c80715b65cfddc", "text": "Debug a single doctest docstring in argument src", "title": "", "metadata": ""}
{"_id": "f615f0f0fe38e2a60ed531c123944d38", "text": "Removes all . py files .", "title": "", "metadata": ""}
{"_id": "57773a3df207fc0b1b556d5775a0269e", "text": "Add a |_LineSegment| operation to the drawing sequence .", "title": "", "metadata": ""}
{"_id": "fd2b56c9e862f4349c6dbeaf768b2bfd", "text": "Clear screen and go to 0 0", "title": "", "metadata": ""}
{"_id": "2b4d1308bf0da61e129e8605e1db48c4", "text": "Read tag data from file and return as numpy array .", "title": "", "metadata": ""}
{"_id": "800f16f07e341cf7db144baf15eba97a", "text": "Take a US format date and return epoch .", "title": "", "metadata": ""}
{"_id": "10abaa94c5ef8a96549379490aeafe4c", "text": "Yields tokens from input string .", "title": "", "metadata": ""}
{"_id": "e3eba4975963a31d6ac1556c21eacf05", "text": "Retrieves the Python library directory path .", "title": "", "metadata": ""}
{"_id": "5f81b6471407ca47d05acb9e173a197b", "text": "Mocked decorator needed in the case we need to mock a decorator", "title": "", "metadata": ""}
{"_id": "64e445d3a1590414d30b07f9ac704c22", "text": "Last modified timestamp as a UTC datetime", "title": "", "metadata": ""}
{"_id": "9d9f831f40f7361e29595b2dfb6eb190", "text": "Get single system variable from CCU / Homegear", "title": "", "metadata": ""}
{"_id": "784042584d22575093f1faf8df31520f", "text": "Convenience function for loading yaml - encoded data from disk .", "title": "", "metadata": ""}
{"_id": "22bc815637f087ae4f570f9018f56a84", "text": "Calls a function . If an error of the given exception type with interrupted system call ( EINTR ) occurs calls the function again .", "title": "", "metadata": ""}
{"_id": "a8433c4fed9ac99e66127b83349d1667", "text": "Given a target dct and a dict of { key : default value } pairs calls setdefault for all of those pairs .", "title": "", "metadata": ""}
{"_id": "67e1935dc1f029b1c85bdbc17219341c", "text": "Set limits for the x - axis .", "title": "", "metadata": ""}
{"_id": "48eb62b5f8bf46064c76bac54eb0f733", "text": "Verifies that a string path actually exists and is a file", "title": "", "metadata": ""}
{"_id": "3606bf882443772158a83e39aaca8d7c", "text": "Sort input filename list by datetime", "title": "", "metadata": ""}
{"_id": "4815c40ec9daf68d4e5a5f9ce46bcfa0", "text": "Initialize python List with capacity of 10 or user given input . Python List type is a dynamic array so we have to restrict its dynamic nature to make it work like a static array .", "title": "", "metadata": ""}
{"_id": "882b87526e2e1e3080c62d0b357cf37d", "text": "parse the domain from the url", "title": "", "metadata": ""}
{"_id": "3b0be865e19dbda045baff79bcc1bf5b", "text": "Run a playbook .", "title": "", "metadata": ""}
{"_id": "3753f3b4df81d7f2bf26c7d86eac5335", "text": "Helper for Django s reverse in templates .", "title": "", "metadata": ""}
{"_id": "0c66c6fbca8b86fa77e0ed8f9ece1ded", "text": "Create ctypes pointer to object .", "title": "", "metadata": ""}
{"_id": "4659fe5c461027dc4dd22c6739626b84", "text": "Get the single element of iterable or raise an error .", "title": "", "metadata": ""}
{"_id": "87d67ffb9857180c61b8d44bf0dac5f4", "text": "Method to extract keywords from the text provided .", "title": "", "metadata": ""}
{"_id": "69ca86b4b1cdcee1d7bcd0a2b467d3da", "text": "Determine memory specifications of the machine .", "title": "", "metadata": ""}
{"_id": "d3fed53fe8f429fe25894289bee7b650", "text": "Convert input argument to bytes", "title": "", "metadata": ""}
{"_id": "15326f4e1fb90a8fdf1cb03ebf072779", "text": "Searches for the specified method and returns its descriptor .", "title": "", "metadata": ""}
{"_id": "093c1b0cabc8fa3368bdce470e4a9d3e", "text": "Return the base directory", "title": "", "metadata": ""}
{"_id": "cf26be03045bdb03a2ce74a0e031db5e", "text": "Aggregation function to get the first non - zero value .", "title": "", "metadata": ""}
{"_id": "68e5b1facce1dbaefbb07dcca87a0d4e", "text": "Create database tables from sqlalchemy models", "title": "", "metadata": ""}
{"_id": "b4202b83986bd9783f93bcde144fab54", "text": "Check if the folder exisits . If not create the folder", "title": "", "metadata": ""}
{"_id": "25645d146c51f49767c61f8c99b6ba76", "text": "Strip excess spaces from a string", "title": "", "metadata": ""}
{"_id": "d4581d89936b388443ab94717cb467aa", "text": "Perform check_array ( X ) after removing infinite values ( numpy . inf ) from the given distance matrix .", "title": "", "metadata": ""}
{"_id": "08778323b35a3d7ab434b1c4cc02ab76", "text": "Returns the flattened version of a 2D list . List - correlate to the a . flat () method of NumPy arrays .", "title": "", "metadata": ""}
{"_id": "7e6b3792a9a12625de8dbbca5002357d", "text": "Add plots to an existing plot", "title": "", "metadata": ""}
{"_id": "070b46c924586cf7600bcafe54ef9f39", "text": "Wrapper to uncheck a checkbox", "title": "", "metadata": ""}
{"_id": "4fcbc23656db34918146a710669b3724", "text": "Returns a list containing first n digits of Pi", "title": "", "metadata": ""}
{"_id": "1e71ef84eba30cd0e11c87456eacd80f", "text": "Returns the string name of an enum value .", "title": "", "metadata": ""}
{"_id": "1d2627151b78ec10da63e626466dd1cc", "text": "takes a string and parses via NLP ready for mapping", "title": "", "metadata": ""}
{"_id": "a48a5d3082761edacd1143fd0ce186d9", "text": "Setup the flask - cache on a flask app", "title": "", "metadata": ""}
{"_id": "6c011bc24d50592175b1709095e53d3f", "text": "Rotate and flip a quadrant appropriately", "title": "", "metadata": ""}
{"_id": "438b24e66b45279e6908fcb261d42789", "text": "r Determine the intersection of two line segments .", "title": "", "metadata": ""}
{"_id": "bfe3a98d86c3fdc960abcde3d251f544", "text": "updates the scale of all actors in the plotter", "title": "", "metadata": ""}
{"_id": "0766f5774121b8000a8d0bb569ca719b", "text": "For JSON the source it the file path", "title": "", "metadata": ""}
{"_id": "fa0a53c8a80ecdd1b5cbe4f7275bef99", "text": "Add one tick to progress bar", "title": "", "metadata": ""}
{"_id": "1a8e3ee718a5ecd5136e9f3bddb6f3d1", "text": "Determine if a Path or string is a file on the file system .", "title": "", "metadata": ""}
{"_id": "a4015139354f079c6c273e8a2f2932fc", "text": "Type casting .", "title": "", "metadata": ""}
{"_id": "006d859ad36d774451a1c67121db8ad9", "text": "1x1 convolution", "title": "", "metadata": ""}
{"_id": "9db011dfacd8151a0c950c71839c93c6", "text": "mono - exponential curve .", "title": "", "metadata": ""}
{"_id": "f50a2399483053b8feef81bb6e96a8dc", "text": "Generate a unique ID that is somewhat guaranteed to be unique among all instances running at the same time .", "title": "", "metadata": ""}
{"_id": "57c2a5582ccd8c4333c646b9726b137d", "text": "Waits until all outstanding tasks are completed .", "title": "", "metadata": ""}
{"_id": "0d6bce1f2b3fe48273c39e950bbeac7f", "text": "Return the set of implemented system flags .", "title": "", "metadata": ""}
{"_id": "c6dfc3ffac64efcc74fac639e0ec04c3", "text": "Has a 50 / 50 chance of calling a function", "title": "", "metadata": ""}
{"_id": "d2e4aaca9caa7b7f0705368a73baf66a", "text": "Rate limit a function .", "title": "", "metadata": ""}
{"_id": "a47b045a714a648c9a451032b88fe134", "text": "Select rows where the given field is None .", "title": "", "metadata": ""}
{"_id": "7e51a3ecc47929d9aeca3e2698b0581a", "text": "Return a new copied dictionary without the keys with None values from the given Mapping object .", "title": "", "metadata": ""}
{"_id": "5a18a5837610a26192ab443de2ad2fc6", "text": "Returns the year .", "title": "", "metadata": ""}
{"_id": "ac0b63740d697e3505c6dc2a07d53bdb", "text": "Lookup country for IP address .", "title": "", "metadata": ""}
{"_id": "c7709d22244b98e7ab9cab02e472d08f", "text": "Report whether another set contains this RangeSet .", "title": "", "metadata": ""}
{"_id": "1a3f14b59546608832fcaf0aee3dace4", "text": "Read text from stdin and print a helpful message for ttys .", "title": "", "metadata": ""}
{"_id": "8aee528b0254cca3bc97b8a91f3ac7e5", "text": "Initialise sets used for uniqueness checking .", "title": "", "metadata": ""}
{"_id": "f46c2541fff7eef797270b15b7f57dfc", "text": "Convenience method for just changing font size .", "title": "", "metadata": ""}
{"_id": "c10f8aa0d4102b868559e8add7c2dd2d", "text": "Generates RGB values from HSV values in line with a typical light spectrum .", "title": "", "metadata": ""}
{"_id": "ea7450b345ee36df3b2d1f2f39cc0df9", "text": "Estimates the memory of the supplied array in bytes", "title": "", "metadata": ""}
{"_id": "c608a93bc067b05bdc73879dd3e3970d", "text": "Retrieve core and memory information for the current machine .", "title": "", "metadata": ""}
{"_id": "84d82b02c8f2b8634ca3efd945af87b4", "text": "Create an aiosqlite cursor wrapping a sqlite3 cursor object .", "title": "", "metadata": ""}
{"_id": "53b9a56f18b67ca2265efe954f5fe060", "text": "Convert an ISO 8601 formatted string in UTC into a timezone - aware datetime object .", "title": "", "metadata": ""}
{"_id": "356e9fe4b3f14f760190faee3df71bb8", "text": "Extract a de - duped collection ( set ) of text from a file . Expected file format is one item per line .", "title": "", "metadata": ""}
{"_id": "584ab01ea053447bfd94f458ed318bb0", "text": "Called when websocket connection is closed", "title": "", "metadata": ""}
{"_id": "5cbb54a06a3c2aa010096181107920c0", "text": "Apply WHERE filter to input dataset : param input : : param params : : return : filtered data", "title": "", "metadata": ""}
{"_id": "8f1bdaa806ae257319a18e5cad60823b", "text": "Utility method to run commands synchronously for testing .", "title": "", "metadata": ""}
{"_id": "dd362a09b837554ad3ea3bb56b3ad844", "text": "Uniformly format a path .", "title": "", "metadata": ""}
{"_id": "bc70d7b383a22a5216f75292c3ffa725", "text": "Wrapper for pymongo . Collection . ensure_index", "title": "", "metadata": ""}
{"_id": "0e994a11f9baffc2d5fd03888b1c88aa", "text": "Return the high median of data .", "title": "", "metadata": ""}
{"_id": "126c2633347642129f422c3404df692d", "text": "Encodes numpy images into gif string .", "title": "", "metadata": ""}
{"_id": "4802758ed25b59fc4860f75326ce6400", "text": "Convert a list of JSON values to a list of models", "title": "", "metadata": ""}
{"_id": "bdf05f96103b1ae92081c4203e5abedc", "text": "Paints a cube at a certain position a color .", "title": "", "metadata": ""}
{"_id": "f5fbf3ef247ea59b1c1ac7a3faa71a82", "text": "update () extends rather than replaces existing key lists .", "title": "", "metadata": ""}
{"_id": "95c23319fff372154fd5f6c4c2c6faf5", "text": "Yield all items from iterable except the last one .", "title": "", "metadata": ""}
{"_id": "71a8f4788b6be977367a208487c3574b", "text": "Format a Python object into a pretty - printed representation .", "title": "", "metadata": ""}
{"_id": "66443ab2131d7a0b1307a4cbb64dbc34", "text": "Make a copy of a dictionary with all keys converted to snake case . This is just calls to_snake_case on each of the keys in the dictionary and returns a new dictionary .", "title": "", "metadata": ""}
{"_id": "79753209d87ef4532248f1e208d3a95a", "text": "Remove duplicates from list while preserving order .", "title": "", "metadata": ""}
{"_id": "cb11b4c102e41c927751433b4b555139", "text": "valid whether the point is located in a mulitpolygon ( donut polygon is not supported )", "title": "", "metadata": ""}
{"_id": "86a0644f7a98768e5bc53ea1a1202177", "text": "Extract text from a given lxml node .", "title": "", "metadata": ""}
{"_id": "fb567f88e86c9c6526eb5b87c3c09c8b", "text": "%D .", "title": "", "metadata": ""}
{"_id": "1f5efa3763473d14db5919d0f69efd6f", "text": "Truncates a value to a number of decimals places", "title": "", "metadata": ""}
{"_id": "f5a8f0dbcc10039ffde0934bc6d6f3ba", "text": "Returns svg from matplotlib chart", "title": "", "metadata": ""}
{"_id": "22cb1df6f67c38b03cdf1fc4a6bdbd6f", "text": "Measure length of a string for a Base14 font .", "title": "", "metadata": ""}
{"_id": "bcc766a49fe97bebd5d1c0bf38a42065", "text": "print_tree : prints out structure of tree Args : indent ( int ) : What level of indentation at which to start printing Returns : None", "title": "", "metadata": ""}
{"_id": "6a6297e6c424adbd2c36f4d6982baf6f", "text": "helper to clean up an input string", "title": "", "metadata": ""}
{"_id": "18d532a35076796191bf72966fdf1ac5", "text": "Rounds a float value off to the desired precision", "title": "", "metadata": ""}
{"_id": "4dc2ae58617551a6a64138eae0ef2bc3", "text": "A tensorflow variable tranfomed to be constrained in a L_inf unit ball .", "title": "", "metadata": ""}
{"_id": "c47946feccc788bffd9afa70ae2e00df", "text": "Return a re . match object if an empty comment was found on line .", "title": "", "metadata": ""}
{"_id": "36d530aac720f28ba2dab478d8cabbe8", "text": "Get the last modified time of path as a Timestamp .", "title": "", "metadata": ""}
{"_id": "7a251fb7e1cfa49ab6601969f16bdf97", "text": "Converts camel - case identifiers to snake - case .", "title": "", "metadata": ""}
{"_id": "71306bb9f22e7edc54384c222a8c6155", "text": "Gets the login credentials from the user if not specified while invoking the script .", "title": "", "metadata": ""}
{"_id": "344ab4b72fe8416395770c09c7a20699", "text": "Execute a python code object in the given environment .", "title": "", "metadata": ""}
{"_id": "42ee3a531b7cb530388447215271a443", "text": "R x M x R^ - 1", "title": "", "metadata": ""}
{"_id": "5e87ced07c4327323b173cadfd176ebf", "text": "Return a tuple of ( start end ) indices of an item from its index .", "title": "", "metadata": ""}
{"_id": "a0845d52a3ecbe2fe9188de46b50ef86", "text": "count occurences in a list of lists >>> count ( [[ a b ] [ a ]] ) defaultdict ( int { a : 2 b : 1 } )", "title": "", "metadata": ""}
{"_id": "f36b59ee743749c2af2beabe9453da5a", "text": "exit without breaking pipes .", "title": "", "metadata": ""}
{"_id": "25a133b322fe7cad0ac747a83c1872f0", "text": "Create an array . Keyword arguments as per : func : zarr . creation . zeros .", "title": "", "metadata": ""}
{"_id": "15cb98173bb0059b00db1502c68e4a57", "text": "Drops the trailinz zeros from decimal value . Returns a string", "title": "", "metadata": ""}
{"_id": "2c63e7a12262311da6266cb95bfdc96d", "text": "Returns the size of the layer with the border size already subtracted .", "title": "", "metadata": ""}
{"_id": "a94c50d265e92aca0c62d1b3f5b4824c", "text": "Plot a scatterplot matrix for a list of features colored by target value .", "title": "", "metadata": ""}
{"_id": "d37533e44c0e90ba4d3ab9d487d282e1", "text": "Helper function to pickle data in picklefile .", "title": "", "metadata": ""}
{"_id": "c334f9b7d9c3c5d92daff5cf50973ecd", "text": "Returns the keys that maps to the top n max values in the given dict .", "title": "", "metadata": ""}
{"_id": "0835d2cc997863356a451f667a000f6e", "text": "verify the validity of the given file . Never trust the End - User", "title": "", "metadata": ""}
{"_id": "95f574797e15c23c37f4f1fd76fe8f7e", "text": "Formats the given number in decimal format using a period and commas", "title": "", "metadata": ""}
{"_id": "5af48e03dfb365bd4b39790f6dc89805", "text": "Uses numpy . load to open the underlying file", "title": "", "metadata": ""}
{"_id": "84e1a6422bc007dc10d87b6eb7c94a2a", "text": "Add value to a set in a dictionary by key", "title": "", "metadata": ""}
{"_id": "e42f2f40723075090b8d3b184df7396f", "text": "\\ kills the child and exits", "title": "", "metadata": ""}
{"_id": "9e12b6c5540f0a248839117c95a66f1f", "text": "Select rows where the given field is a member of the given value .", "title": "", "metadata": ""}
{"_id": "67227c59c98afe0481f038d3f7e801f5", "text": "Return the channels of a palettebar .", "title": "", "metadata": ""}
{"_id": "3383f5b38db82d23987c312ba156c6ea", "text": "Like dict ( ** kwargs ) but where the source key is special .", "title": "", "metadata": ""}
{"_id": "5572f0db6ba120a2e175a77a90d4e431", "text": "Reset analyzer state", "title": "", "metadata": ""}
{"_id": "776487e3647925507d0a9d5767c8b867", "text": "Returns the total length of all of the flattened variables .", "title": "", "metadata": ""}
{"_id": "f1b21b5ee075298f1a5b03fb6d14e968", "text": "Interpolated flux at a given wavelength ( calls np . interp ) .", "title": "", "metadata": ""}
{"_id": "7b7e3ac3b88a28432d173470858dff42", "text": "Try to remove all comments from a file and save it if changes were made .", "title": "", "metadata": ""}
{"_id": "4b7290e8e73eb407e2b5b63886674c94", "text": "Delete the index if it exists .", "title": "", "metadata": ""}
{"_id": "29c55cf432faa1c14fa6a366004d05d5", "text": "raise a descriptive exception on a bad request response", "title": "", "metadata": ""}
{"_id": "ca6e520fc7054e43485bd6e98a5c0541", "text": "Return a yaml file s contents as a dictionary", "title": "", "metadata": ""}
{"_id": "1c2457c9080d54ff86b9e7f1df4af6b4", "text": "Check if email is valid", "title": "", "metadata": ""}
{"_id": "5394d2d90e44ecf59af01c743b2e3b43", "text": ": type aws_access_key_id : string : param aws_access_key_id : Your AWS Access Key ID", "title": "", "metadata": ""}
{"_id": "2a9177bf47520fec3cadbaf171e8833a", "text": "Extract a set of variables by name from another frame .", "title": "", "metadata": ""}
{"_id": "8041071939f8c361b9b545b8a3ae3f68", "text": "Rebuilds the pathing based on the parts .", "title": "", "metadata": ""}
{"_id": "b390f015eded89e81d711c968ae43990", "text": "Get dimension of an array getting the number of rows and the max num of columns .", "title": "", "metadata": ""}
{"_id": "8fb66771e360c8c9431cad981bf1310b", "text": "iterator version of get_list_column", "title": "", "metadata": ""}
{"_id": "73d1a8c96785e23e12688a52d2ebf158", "text": "Annual growth given growth from start date to end date .", "title": "", "metadata": ""}
{"_id": "113807ddd3c073dc336e343c120cf7c5", "text": "Convert a string of bytes into an integer as per X9 . 62 .", "title": "", "metadata": ""}
{"_id": "493d5529fe774698111a318d0c208b45", "text": "Check whether the passed variable is a tuple with two floats or integers", "title": "", "metadata": ""}
{"_id": "5cb7c9adcd59c7937357b6934fa51d40", "text": "Convert dict of ascii str / unicode to dict of str if necessary", "title": "", "metadata": ""}
{"_id": "3ef3708eb865fd226dce4ad272c52073", "text": "Generate a UUID .", "title": "", "metadata": ""}
{"_id": "e80fd0a949be26ff056ed6f08784a559", "text": "writes the line and count newlines after the line", "title": "", "metadata": ""}
{"_id": "12bf74800593d18bbf45cb9de8d7bb20", "text": "Return the size of a multidimansional array .", "title": "", "metadata": ""}
{"_id": "e87bcd57b2e5253e6f682d7befe97b1d", "text": "Initiates a graceful stop of the processes", "title": "", "metadata": ""}
{"_id": "93bd685e80f05201ab1dcae4d55ab3a2", "text": ": rtype : tuple", "title": "", "metadata": ""}
{"_id": "ae9fdd2f671c418ecb187ad7ca9313be", "text": "Lock connection from being used else where", "title": "", "metadata": ""}
{"_id": "02b6d513286cda0e4b2bd52a63d2756d", "text": "Convert hex string like \\ x0A \\ xE3 to 2787 .", "title": "", "metadata": ""}
{"_id": "7ccb2bd61c837ac96ca98f7430fb84ad", "text": "Convenience method that works with all 2 . x versions of Python to determine whether or not something is stringlike .", "title": "", "metadata": ""}
{"_id": "7ac6cb2cf82047138bedfcb58a10816f", "text": "Calls the specified Trigger of another Area with the optionally given parameters .", "title": "", "metadata": ""}
{"_id": "43ee4876c8d0c1e24f570008e717fc6f", "text": "Checks if an item is iterable ( list tuple generator ) but not string", "title": "", "metadata": ""}
{"_id": "491d779c643dd1a38a63e078e32945e1", "text": "Returns a lowercase string with punctuation and bad chars removed : param s : string to clean", "title": "", "metadata": ""}
{"_id": "01b2ce3bb0a0e094e3d0b7cbee05b725", "text": "Function that gets relative path to the filename", "title": "", "metadata": ""}
{"_id": "84066f49a7fa53892ea005e0b5282786", "text": "get element by name", "title": "", "metadata": ""}
{"_id": "f6f18bbd66786b5284080ec4dde25e5f", "text": "Return the index of the closest in xarr to value val", "title": "", "metadata": ""}
{"_id": "756a761de505f65a3885f0a9842ff9a3", "text": "Return whether this collection contains all items .", "title": "", "metadata": ""}
{"_id": "dc0f048378fa749135e57f85b970f9d4", "text": "Return a list of unique items ( similar to set functionality ) .", "title": "", "metadata": ""}
{"_id": "6924f25d5178b5b474c825910a90ab5d", "text": "Reads an array from bytestring with big - endian data .", "title": "", "metadata": ""}
{"_id": "acb9a7c8fbeb1bd07f1764aeed041c48", "text": "Get resource variable .", "title": "", "metadata": ""}
{"_id": "e28ca8783f327e6081432f6d65589bd1", "text": "Returns seconds since 0h00 .", "title": "", "metadata": ""}
{"_id": "558db436e7808530faa8f7545b3fe9a7", "text": "takes a list of lists l and returns a flat list", "title": "", "metadata": ""}
{"_id": "8b7f7b8c00973c4e9e183460ffa57847", "text": "Loads a model from specified file", "title": "", "metadata": ""}
{"_id": "135dc3e609def7ce28c6bbf6c6b3a57d", "text": "Replace all the ocurrences ( in a file ) of a string with another value .", "title": "", "metadata": ""}
{"_id": "693321f775789ae434a16a9a48ef2468", "text": "Exit this application", "title": "", "metadata": ""}
{"_id": "49521c91a9feb426fd77d1085d461ca5", "text": "Add pytest unit tests to be built as part of build / test / output .", "title": "", "metadata": ""}
{"_id": "61e64ba11cc03655025987a730a1986d", "text": "Tokenizes * source * and returns the tokens as a list of lists .", "title": "", "metadata": ""}
{"_id": "f3559523a39ca571d17d600780910074", "text": "Iterate over all JSON input ( Generator )", "title": "", "metadata": ""}
{"_id": "dbbb0c602ac2fe793fc9da4ad3620286", "text": "check if day is after month s 3rd friday", "title": "", "metadata": ""}
{"_id": "aefc3d6c478b72b071a5102933e5d6d7", "text": "Set the range of the colormap to [ * min_val * * max_val * ]", "title": "", "metadata": ""}
{"_id": "20037db65acddde96873e803ab1aefa6", "text": "Read MM_HEADER tag from file and return as numpy . rec . array .", "title": "", "metadata": ""}
{"_id": "81540d01a883180ae3c8a919cd457433", "text": "Categorical accuracy", "title": "", "metadata": ""}
{"_id": "73876345e53261e2cb846b2ebd9448ba", "text": "Capitalizes all the words and replaces some characters in the string to create a nicer looking title .", "title": "", "metadata": ""}
{"_id": "c6d48aa6411e1cf97ae01dd81ca1775e", "text": "Calculate the median of a list .", "title": "", "metadata": ""}
{"_id": "232ea61de23c6a51f518311a78ef12b8", "text": "Move the cursor up a number of lines .", "title": "", "metadata": ""}
{"_id": "5a93e894d708f804d1faa93a085146fd", "text": "assumes that a figure is open", "title": "", "metadata": ""}
{"_id": "0880707f5a2b98e6f9f669b94a57ed49", "text": "Convert a string to a list with sanitization .", "title": "", "metadata": ""}
{"_id": "4242e25ba607ade7f20e0d75e74aeab2", "text": "Returns a str if a bytes object is given .", "title": "", "metadata": ""}
{"_id": "7d21b3b618289d921926240d463515c4", "text": "Returns current utcoffset for a timezone . Uses DEFAULT_LOCAL_TZ by default . That value can be changed at runtime using the func below .", "title": "", "metadata": ""}
{"_id": "95d1b349f04c954d9a16b4ab83fc78a9", "text": "Counts the word frequences in a list of sentences .", "title": "", "metadata": ""}
{"_id": "396b62f5e63dfd430ca484ba4b62acbb", "text": "save the geometry before dialog is close to restore it later", "title": "", "metadata": ""}
{"_id": "a9b934b400a89c5f3af2fbb92edbfbfd", "text": "Visible width of a potentially multiline content .", "title": "", "metadata": ""}
{"_id": "2c121f7d4610f324226e8bf88531b724", "text": "Check if file or directory is world writable .", "title": "", "metadata": ""}
{"_id": "f5bc94e5afe638f76719938d7a917460", "text": "Encodes Unicode strings to byte strings if necessary .", "title": "", "metadata": ""}
{"_id": "1076a8c58d56c18388c91357133e2620", "text": "Process an iterable of dictionaries . For each dictionary d convert ( in place ) d [ key ] to a float . If that fails convert it to None .", "title": "", "metadata": ""}
{"_id": "b4e950320587a51eb4e26cabc11153d7", "text": "Appends a PDF to a pyPDF writer . Legacy interface .", "title": "", "metadata": ""}
{"_id": "b80fc561e748f8ea4272c18df3ef3b9a", "text": "Value of property .", "title": "", "metadata": ""}
{"_id": "08de97657372d00024035440cbb649a1", "text": "Returns a character delimited version of the provided list as a Python string", "title": "", "metadata": ""}
{"_id": "6f8ccd81c40e8b738764cf19b92be08f", "text": "Find longest ORF from the given list of ORFs .", "title": "", "metadata": ""}
{"_id": "56874621f77f280d158836a3cb0e1704", "text": "hacky inference of kwargs keys", "title": "", "metadata": ""}
{"_id": "e9a3a48ca4e82c8b242c94efea2f01e2", "text": "Prints a summary of all objects in the database . Input string or list of strings in ** ID ** or ** unum ** for specific objects .", "title": "", "metadata": ""}
{"_id": "21d0a879c09a4a3b86fee621e989aef7", "text": "Gets a naive datetime from a datetime .", "title": "", "metadata": ""}
{"_id": "742103d864917cce2734ea29b8de201a", "text": "Converts query strings into native Python objects", "title": "", "metadata": ""}
{"_id": "5644ebb1b3aeeda7034ba26f71205151", "text": "generate a lower - cased camelCase string from an underscore_string . For example : my_variable_name - > myVariableName", "title": "", "metadata": ""}
{"_id": "288846c8c461403cd1be1640e80c02a4", "text": "Apply last 2D transforms", "title": "", "metadata": ""}
{"_id": "1b8a8605d2ff5670a215e55c6645e0d9", "text": "OFFSET", "title": "", "metadata": ""}
{"_id": "ab9c5236b0fa1adfffef2a87cfa4de23", "text": "calculates a rough guess of runtime based on product of parameters", "title": "", "metadata": ""}
{"_id": "8e14e18f5cc05e886b139fd139a36569", "text": "Return the last n results ( or possibly less if not found ) . Note that the last results are not necessarily the best ones! Depending on the search type .", "title": "", "metadata": ""}
{"_id": "c57380fb076dbda422d1857a668c10ac", "text": "Determine if end - of - file is reached for file fd .", "title": "", "metadata": ""}
{"_id": "86c10dfb8ab8c0dfaf2c04eb512b7604", "text": "Generates rst codeblock for given text and language", "title": "", "metadata": ""}
{"_id": "994aaa6f01ba02b69fd90e261fd2ef48", "text": "MoveWindow from Win32 . handle : int the handle of a native window . x : int . y : int . width : int . height : int . repaint : int use 1 or 0 . Return bool True if succeed otherwise False .", "title": "", "metadata": ""}
{"_id": "bb53de3b0e69d857a8e55d3e09e5e0a3", "text": "Open a file .", "title": "", "metadata": ""}
{"_id": "2da6888bb6fb042a4442b1848eb2c2e4", "text": "Replace regex with string .", "title": "", "metadata": ""}
{"_id": "4cc582e9db598206149c93b07d506ed8", "text": "Execute the unit tests on an installed copy of unyt .", "title": "", "metadata": ""}
{"_id": "31dbd18c066a802737ae19886f51ee6e", "text": "Are two indexes equal? Checks by comparing str () versions of them . ( AM UNSURE IF THIS IS ENOUGH . )", "title": "", "metadata": ""}
{"_id": "f0e04cd09e61c8fb6491f4be6738c4bb", "text": "Helper method that escapes parameters to a SQL query .", "title": "", "metadata": ""}
{"_id": "c87a9ac7c5376089d75e39fac5b7e4c6", "text": "Apply a function in parallel to each element of the input", "title": "", "metadata": ""}
{"_id": "b3aa4d040ec902c6592a62166bcc596a", "text": "Return True if the given string starts with one of the prefixes in the given list otherwise return False .", "title": "", "metadata": ""}
{"_id": "43c9cac674ab73576b2fea63fb887320", "text": "Calculate the Hamming distance between two bit strings", "title": "", "metadata": ""}
{"_id": "9d3fd9e908d3cf8facfff6d3534b29dc", "text": "Process an iterable of dictionaries . For each dictionary d delete d [ key ] if it exists .", "title": "", "metadata": ""}
{"_id": "b4dc664dd1ec5955a76e4da3e361552e", "text": "Returns the default bucket from a list of buckets i . e . the largest bucket .", "title": "", "metadata": ""}
{"_id": "bd57703f498e7d898b7c3e1653b5709c", "text": "Convert a CSV object to a numpy array .", "title": "", "metadata": ""}
{"_id": "8878b41881e2541cc4a3f9d5d52391f4", "text": "Replace accentuated chars in string by their non accentuated equivalent .", "title": "", "metadata": ""}
{"_id": "9d9ed296775f132a2b12ae06082325a6", "text": "Temporary helper function to link to the API routes", "title": "", "metadata": ""}
{"_id": "66af8d7efc5e96cae852605eab28b805", "text": "Sets the window bounds from a tuple of ( x y w h )", "title": "", "metadata": ""}
{"_id": "dc2eedced0816fbe388342f01f83ba70", "text": "Return a column of the given matrix .", "title": "", "metadata": ""}
{"_id": "8fe5c21591612674cb35d9866415a4c7", "text": "Returns current grid cursor cell ( row col tab )", "title": "", "metadata": ""}
{"_id": "9033e0e305f247c0c3c80d0c7848c8b3", "text": "!", "title": "", "metadata": ""}
{"_id": "ea9d765e99d0d593917d319e524eb5e0", "text": "Make a set of unique n - grams from a string .", "title": "", "metadata": ""}
{"_id": "9ec4cc374893ed46fdb59b80ac945bb0", "text": "Search into instance attributes properties and return values of no - args methods .", "title": "", "metadata": ""}
{"_id": "f9c7e9bdfc65147524c21f6a762ff5f0", "text": "Converts bokehJS timestamp to datetime64 .", "title": "", "metadata": ""}
{"_id": "6aff045051493748bd7b34efc7302dcf", "text": "Checks if the filename exists under the path .", "title": "", "metadata": ""}
{"_id": "a1f0e2985755fabe13f3948ed2783175", "text": "Choose the most common item from the list or the first item if all items are unique .", "title": "", "metadata": ""}
{"_id": "4ce73ec64d0f8919200dd353f9fdf82b", "text": "how high in sorted list each key is . inverse permutation of sorter such that sorted [ rank ] == keys", "title": "", "metadata": ""}
{"_id": "558e9afefe56dc0bcf7eb1692026022a", "text": "Transforma una string con elementos separados por sep en una lista .", "title": "", "metadata": ""}
{"_id": "eb3686e8fd8d4b18baf60b6757d0809b", "text": "Returns the SQL typename required to store the given FieldDefinition", "title": "", "metadata": ""}
{"_id": "735579b0bd92889af461694e2bcc7c32", "text": "Removes the write permissions for the given file for owner groups and others .", "title": "", "metadata": ""}
{"_id": "d33f762528e3084d1287719bfab32054", "text": "Merge any number of dictionaries", "title": "", "metadata": ""}
{"_id": "c68da1e71494f0bc1af9c5b640d83395", "text": "Returns x rounded to n significant figures .", "title": "", "metadata": ""}
{"_id": "cb86551d8a4fc1852c59c24702866889", "text": "Deserialize s ( a str ) to a Python object .", "title": "", "metadata": ""}
{"_id": "7226ff60df26bd3571e4defc67d1b420", "text": "Return the path always without the \\\\ ? \\ prefix .", "title": "", "metadata": ""}
{"_id": "65fd0f57a120f5c91921df5979990cda", "text": "Return the attribute name identifier", "title": "", "metadata": ""}
{"_id": "7f8c62afcd3ee5335924eb0cf8308f56", "text": "Normalize a file / dir name for comparison purposes", "title": "", "metadata": ""}
{"_id": "03365de9d0fb04812163a2e7d7d4fcfa", "text": "A wrapper around tf multiplication that does more automatic casting of the input .", "title": "", "metadata": ""}
{"_id": "670112ec84e7910a735e6a3c573d272e", "text": "convert a code sequence to HTML", "title": "", "metadata": ""}
{"_id": "de309b35b8ba1cf2ae7134a8cc125056", "text": "I convert strings into integers floats and strings!", "title": "", "metadata": ""}
{"_id": "04098fa4480f613ebf6031e97e417e58", "text": "Terminate the pool immediately .", "title": "", "metadata": ""}
{"_id": "dcd46303674a817b069cdc59d9a09673", "text": "Gets the returned Celery result from the Airflow task ID provided to the sensor and returns True if the celery result has been finished execution .", "title": "", "metadata": ""}
{"_id": "390d8432a7f4e43072f4f92858eefbd8", "text": "Check if the memory is too full for further caching .", "title": "", "metadata": ""}
{"_id": "4f6e179a7d72cdbcd447fa1f45f7f9ca", "text": "Expect a comment end and return the match object .", "title": "", "metadata": ""}
{"_id": "37af4d96a64e08d000e27196d49bf56a", "text": "Extracts all integers from a string an return them in a list", "title": "", "metadata": ""}
{"_id": "cc98d28d4a195efef69529266e7c8092", "text": "Updates one element of the collection", "title": "", "metadata": ""}
{"_id": "e7c312a757cc9c141ef7f37d8e836e4d", "text": "Log out the active user", "title": "", "metadata": ""}
{"_id": "36ddf1bb3109c40a8433ece5ae4316f0", "text": "Is this a string .", "title": "", "metadata": ""}
{"_id": "b9255ba533f21e853fc31f3a884d85e3", "text": "Subclassing hook to specialize how JSON data is converted to keyword arguments", "title": "", "metadata": ""}
{"_id": "44cfd6b4dc4ae4a008c4101b13239581", "text": "r Checks if l is a numpy array of integers", "title": "", "metadata": ""}
{"_id": "94ea571e4b46d9850ebb46f7d0fda33e", "text": "Strip the whitespace from all column names in the given DataFrame and return the result .", "title": "", "metadata": ""}
{"_id": "91b55cf6e8a451d99bdfe5f574145c1b", "text": "Check if string could be a valid python identifier", "title": "", "metadata": ""}
{"_id": "1d7de1252028391a1186a94d81965591", "text": "Helper that returns if parent / item is a directory .", "title": "", "metadata": ""}
{"_id": "559594bea772ab34bf5b8a0b1f998820", "text": "Normal cumulative density function .", "title": "", "metadata": ""}
{"_id": "bde0275147e0ea7804e88877ef1dd757", "text": "shutdown : to be run by atexit handler . All open connection are closed .", "title": "", "metadata": ""}
{"_id": "b7f12fa815a16ffe0e264b7e991f1f26", "text": "Does a string replace with a list of search and replacements", "title": "", "metadata": ""}
{"_id": "5f4dcaab24d3c3d7ebed2e99f1b69f17", "text": "Returns true if the path exists and false otherwise .", "title": "", "metadata": ""}
{"_id": "8131955743820cc64f27bf7f6a701e89", "text": "Inserts a single document into a mongo collection https : // api . mongodb . com / python / current / api / pymongo / collection . html#pymongo . collection . Collection . insert_one", "title": "", "metadata": ""}
{"_id": "0cf30fa31ec78d727850faf1557e0e95", "text": "Transforms a list of 2 element tuples to a dictionary", "title": "", "metadata": ""}
{"_id": "1ec452103e8cef469bcf4706584831ec", "text": "Return a dict where the keys are all the values listed in the values of the original dict", "title": "", "metadata": ""}
{"_id": "37b675d2c7cdb9e0525ff6560abb173e", "text": "Returns the last location of the minimal value of x . The position is calculated relatively to the length of x .", "title": "", "metadata": ""}
{"_id": "b90e0d7054c78770ab90a3bfc20cade9", "text": "Make sure thre is no whitespace in the given string . Will raise a ValueError if whitespace is detected", "title": "", "metadata": ""}
{"_id": "246a73acfb62c9cd012f20525ccc803a", "text": "True if values are not increasing .", "title": "", "metadata": ""}
{"_id": "8d9d0f73f133c8462e4a6b2f84af4dd9", "text": "in string astr replace all occurences of thefind with thereplace", "title": "", "metadata": ""}
{"_id": "3bd6f792795d57f3705e700fc8abc96f", "text": "Validate str as a date and return string version of date", "title": "", "metadata": ""}
{"_id": "fe19d9e4e813a626eb666c77e3ff0e80", "text": "Returns the number of characters at the beginning of text that are whitespace .", "title": "", "metadata": ""}
{"_id": "a3f43d4aec4c12a641714916ff940816", "text": "Convert a dict of 1d array to a numpy recarray", "title": "", "metadata": ""}
{"_id": "749a6660bd53c5406820622cddda23db", "text": "Check whether the provided array or dtype is of the string dtype .", "title": "", "metadata": ""}
{"_id": "66b2c3b17b4b6070040d5d19f353e5d0", "text": "Remove duplicated elements in a list . Args : lista : List with elements to clean duplicates .", "title": "", "metadata": ""}
{"_id": "bea48445ad1d1ba2d2f2f144003375d6", "text": "Tries to load an encoded json string back into an object : param json_string : : return :", "title": "", "metadata": ""}
{"_id": "1151402e2d34fb7947fa12395bec6392", "text": "Helper function to get the location of a Python file .", "title": "", "metadata": ""}
{"_id": "63e9111bc9394b1da43acab860304ff5", "text": "Note that this code compresses into a buffer held in memory rather than a disk file . This is done through the use of cStringIO . StringIO () .", "title": "", "metadata": ""}
{"_id": "5bc65bc43afb185e42a9a3015fc588d3", "text": "Return an iterator over the values of a dictionary .", "title": "", "metadata": ""}
{"_id": "19244bedba793564f555fdd261f85295", "text": "Splits string into n sized chunks .", "title": "", "metadata": ""}
{"_id": "2233dbaff173cff8ba25129a40c1dde6", "text": "Internal helper to return the values of a dictionary sorted by key .", "title": "", "metadata": ""}
{"_id": "12ee214e8ca3a854d234038e3fb1db43", "text": "Add a leading hash # at the beginning of every line in the source .", "title": "", "metadata": ""}
{"_id": "edb248660df1eeb8a4eb6e9149ecfda1", "text": "Convert val into a local datetime for tz Europe / Amsterdam .", "title": "", "metadata": ""}
{"_id": "ebab59bb11dbf4f5accd6d541b534a58", "text": "Hex encode a binary string", "title": "", "metadata": ""}
{"_id": "1a86ce18fb5bfe370ece43ea38f63bb5", "text": "Converts DB - API parameter values into query parameters .", "title": "", "metadata": ""}
{"_id": "d72885c8db0f6c64a9606e416935938f", "text": "from http : // stackoverflow . com / a / 14033137 / 623735 # gets the indices of the rows with nan values in a dataframe pd . isnull ( df ) . any ( 1 ) . nonzero () [ 0 ]", "title": "", "metadata": ""}
{"_id": "f6c7a43327b4a76f6379834357c6c186", "text": "Set cursor position", "title": "", "metadata": ""}
{"_id": "9196d67b8d4c6e9bfabd9381c00c5fab", "text": "Set the pythonic string type .", "title": "", "metadata": ""}
{"_id": "ff18456d6017da1f4d39309953e3f346", "text": "r Return variable as a string to print with given precision .", "title": "", "metadata": ""}
{"_id": "70aa1e1aae3c17237cb9b9e452da1b54", "text": "Takes a text and drops all non - printable and non - ascii characters and also any whitespace characters that aren t space .", "title": "", "metadata": ""}
{"_id": "66930ce2028f157ce5e5faf670637ac1", "text": "Get the month start date a nd end date", "title": "", "metadata": ""}
{"_id": "da57379929ccf940433e3131480bed76", "text": "Select rows where the given field is not None .", "title": "", "metadata": ""}
{"_id": "218c8f90b8b8f400c03f574066434976", "text": "Whether path is a directory to which the user has write access .", "title": "", "metadata": ""}
{"_id": "4dc9b234837e356cdc37c395406bbaec", "text": "linear regression calculation", "title": "", "metadata": ""}
{"_id": "541936abf28d1381ad7d86ac80f71d09", "text": "Merges two with identical columns .", "title": "", "metadata": ""}
{"_id": "4004a7de384c55c5a49d59142b05e72b", "text": "Deinitialises the PulseIn and releases any hardware and software resources for reuse .", "title": "", "metadata": ""}
{"_id": "b339c816463b2ce116d400a54a72335a", "text": "Provide a 2D block view to 2D array .", "title": "", "metadata": ""}
{"_id": "e2b94c44d824b899ab590c9b75686da7", "text": "Should we skip logging for this handler?", "title": "", "metadata": ""}
{"_id": "0ac8737716d80f38adadc9b984dcd83d", "text": "Return True if arg is valid value for the class . If the string value is wrong for the enumeration the encoding will fail .", "title": "", "metadata": ""}
{"_id": "9262575a9020cfc104f4f88f6ace91aa", "text": "Get string from file .", "title": "", "metadata": ""}
{"_id": "9ee23449b2bee5ed1104854e0303eb9f", "text": "Count the number of non - NA in this array along the given axis or axes", "title": "", "metadata": ""}
{"_id": "2ae0920fe0a775460977cb891172ece8", "text": "Return the largest real value h such that all elements in x are integer multiples of h .", "title": "", "metadata": ""}
{"_id": "123a28008038245f549544792be2eaad", "text": "Returns Gaussian smoothed image .", "title": "", "metadata": ""}
{"_id": "0d70782347c93b2ed02b37e1885d3edf", "text": "If values in a series match a specified value change them to np . nan .", "title": "", "metadata": ""}
{"_id": "92e79b1ceb5b6b95ce04a31bcc89320b", "text": "Covert numpy array to tensorflow tensor", "title": "", "metadata": ""}
{"_id": "94e3f04dcb5a4a4b3696372a321717a1", "text": "FOR USE BY PROCESSES THAT NEVER DIE UNLESS EXTERNAL SHUTDOWN IS REQUESTED", "title": "", "metadata": ""}
{"_id": "248e08c6c1231f5fbce31f4e1966651b", "text": "Bernstein polynomial .", "title": "", "metadata": ""}
{"_id": "4bfabafe1f0efb46ff087c5841543558", "text": "Return a tuple from parsing a b c d - > ( a b c d )", "title": "", "metadata": ""}
{"_id": "ffafb2f664051e9efe25cb7dcb3f0ed1", "text": "calculate time delta from latched time and current time", "title": "", "metadata": ""}
{"_id": "6661a56f25bb27c0ae55dd7694e4ccf6", "text": "Convert file extension to lowercase .", "title": "", "metadata": ""}
{"_id": "012e938c9b0af80570533a68d0e34b8d", "text": "Banana banana", "title": "", "metadata": ""}
{"_id": "f666d5cf2eae908198fcfbc300d239d9", "text": "Serve the datasets in a directory over HTTP .", "title": "", "metadata": ""}
{"_id": "277d54ef10292deb3581775386dcb7fc", "text": "Render an INPUT element of type SUBMIT which will post this form to the server .", "title": "", "metadata": ""}
{"_id": "feb2ba959717bd4bc3cd7ca66bfe3221", "text": ">>> list = [ 0 0 7 ] >>> list_to_str ( list ) 0 0 7", "title": "", "metadata": ""}
{"_id": "c00c41ece53a7adef940952013a0de3f", "text": "Create : class : PNG from raw bytes . : arg bytes b : The raw bytes of the PNG file . : rtype : : class : PNG", "title": "", "metadata": ""}
{"_id": "6a83aa28688f99db5afdc7bf9aa5d505", "text": "Order the words from vocab by distinctiveness score ( Chuang et al . 2012 ) from least to most distinctive . Optionally only return the n least distinctive words .", "title": "", "metadata": ""}
{"_id": "0499ecbb68291d41373e65c5c97a8ab8", "text": "Closest distance between a line segment and a point", "title": "", "metadata": ""}
{"_id": "82e4752e903595a11bb2112ede1ae54a", "text": "Check for semicolons at the end of lines .", "title": "", "metadata": ""}
{"_id": "2d8e643b5d01d92943869bac2a091db0", "text": "Ensure that param_list is a list with the expected length . Raises a helpful ValueError if this is not the case .", "title": "", "metadata": ""}
{"_id": "1a000856cb247274c645ffd705a4ab7d", "text": "Configuration - friendly boolean type converter .", "title": "", "metadata": ""}
{"_id": "364ccb42a1f5c108b2bebad162a46e17", "text": "Set window top - left corner position and size", "title": "", "metadata": ""}
{"_id": "f895aa85f2f13138402b74b856638fdf", "text": "Add a section a subsection and some text to the document .", "title": "", "metadata": ""}
{"_id": "0cc9c8db8f7c5dc14d09881ff16b61b5", "text": ": param filename : The filename of the file to process : returns : The MD5 hash of the file", "title": "", "metadata": ""}
{"_id": "ff7badf96c469eb75097912235c29124", "text": "Get the billing cycle prior to this one . May return None", "title": "", "metadata": ""}
{"_id": "4e735eecac313e152af105be21899fff", "text": ": param unicode fpath : : param unicode encoding : : rtype : dict | list", "title": "", "metadata": ""}
{"_id": "7704fe37a2bfb0420fe2a5a288dcaba5", "text": "For Python3 compatibility of generator .", "title": "", "metadata": ""}
{"_id": "bd955662187755509b92501c32f399bb", "text": "Pad the text .", "title": "", "metadata": ""}
{"_id": "32d8eecd500b1b7f26833e18b2b940d4", "text": "Check for Python 3 nonlocal statement .", "title": "", "metadata": ""}
{"_id": "8666c542b14bdd975ce472e2ab1cee5a", "text": "Get all the database column names for the specified table .", "title": "", "metadata": ""}
{"_id": "17dad4cdb5a3e5415b667ef05b1dcbb2", "text": "Send a complete request to the server .", "title": "", "metadata": ""}
{"_id": "54c1302b5dc4d854057d24f8d1ae6a33", "text": "rotates a 2d array to a multiple of 90 deg . 0 = default 1 = 90 deg . cw 2 = 180 deg . 3 = 90 deg . ccw", "title": "", "metadata": ""}
{"_id": "c38dd094bb7045d76d5787ec7670f8c0", "text": "Convert a object into dictionary with all of its readable attributes .", "title": "", "metadata": ""}
{"_id": "751058500d7319aa8bc4da626dc43200", "text": "Remove the element from a set lists or dict . >>> L = [ Lucy ] ; S = set ( [ Sky ] ) ; D = { Diamonds : True } ; >>> remove_once ( L Lucy ) ; remove_once ( S Sky ) ; remove_once ( D Diamonds ) ; >>> print L S D [] set ( [] ) {}", "title": "", "metadata": ""}
{"_id": "2b76a69ba44fe8cefe3399be7c9ba375", "text": "Given a numpy dtype determines whether it is a string . Returns True if the dtype is string or unicode .", "title": "", "metadata": ""}
{"_id": "8143cd608b584ecb24c019f63103bba7", "text": "Load JSON file", "title": "", "metadata": ""}
{"_id": "4b1ab6b944af939c547d4ae079ecb89c", "text": "Convert a pandas . Series into an xarray . DataArray .", "title": "", "metadata": ""}
{"_id": "a913745b5a2a5db18b5a83625f62392b", "text": "Returns the number of bytes to represent this dtype .", "title": "", "metadata": ""}
{"_id": "55417b06698e1c0d77fb210d8af4d7c3", "text": "Perform actions before parent main window is closed", "title": "", "metadata": ""}
{"_id": "9737d19bcbf0dfeb2d20e526eb00f7f6", "text": "Load an object from a module by name", "title": "", "metadata": ""}
{"_id": "e5965e054da81485b0d662b5338f4c6e", "text": "Transforms an XML string it to python - zimbra dict format", "title": "", "metadata": ""}
{"_id": "8772770547f26581bca460cc09510d82", "text": "Read a public RSA key from a PEM file .", "title": "", "metadata": ""}
{"_id": "2ecf2a0231756d5930b9b6bd4c277675", "text": "Returns a tuple ( hash and commit object )", "title": "", "metadata": ""}
{"_id": "41901d346740b993f4f168348b2bdb11", "text": "Remove commas from a float", "title": "", "metadata": ""}
{"_id": "8e4944b7c1de106a4b456a524dbadf33", "text": "Converts a 1D list to a single long string for file output using the string . join function .", "title": "", "metadata": ""}
{"_id": "7ecebfcc238ea7028544ddf906e5bdbf", "text": "Lookup a transitive parent object that is an instance of a given class .", "title": "", "metadata": ""}
{"_id": "cccef0895df32b5a685274b5f27a4127", "text": "Singleton definition .", "title": "", "metadata": ""}
{"_id": "bbf7bc56fb648c034f6bdb3a305fd6bd", "text": "check whether the item is list ( tuple ) and consist of list ( tuple ) elements", "title": "", "metadata": ""}
{"_id": "37f71e1772a5e67d023fe758b15d0f6b", "text": "Return the dot product of two vectors", "title": "", "metadata": ""}
{"_id": "e51fa7e9a2481b1be563a67214d0a2c1", "text": "Raises a requests . exceptions . HTTPError if the response has a non - 200 status code .", "title": "", "metadata": ""}
{"_id": "70736e8ec3a6b7da3e52dcdc34ca012f", "text": "Run manage . py using this component s specific Django settings", "title": "", "metadata": ""}
{"_id": "0b0119f85ae6d2e5027c76820386ebe3", "text": "Like dict . update but does not overwrite items", "title": "", "metadata": ""}
{"_id": "d3bf0acc0336d1ca1497198c456942be", "text": "Sets the title on the underlying matplotlib AxesSubplot .", "title": "", "metadata": ""}
{"_id": "ffa679cf5b3ad7bc194021bbc993ce64", "text": "Remove all unwanted characters from text .", "title": "", "metadata": ""}
{"_id": "b4cb1b0a521ea6af6b4abcaa4ebcf71e", "text": "Get the last weekday in a given month . e . g :", "title": "", "metadata": ""}
{"_id": "b27075bb3ed3b6513cae12dbaf9e2d41", "text": "Apply the argument parser .", "title": "", "metadata": ""}
{"_id": "081f174e3e40a8ba12e18ba9fcadfdaf", "text": "Run all Tests [ nose ]", "title": "", "metadata": ""}
{"_id": "c56dcd65bd4798e9ee1de15340b74be0", "text": "Helper to get bins for histplot .", "title": "", "metadata": ""}
{"_id": "9405a133c9ea01196601440d63ab3b6c", "text": "( str ) - > int All the digits in a given string are concatenated and converted into a single number .", "title": "", "metadata": ""}
{"_id": "1e2b5a6463f498816a083294ea743d9c", "text": "find the common elements in two lists . used to support auto align might be faster with sets", "title": "", "metadata": ""}
{"_id": "e2e0cb84d7527db80aacdf5b643d3f86", "text": "The function compares strings ignoring case", "title": "", "metadata": ""}
{"_id": "6a09aeba1a8c86d5049a9de805fcf69f", "text": "Wanted functionality from Counters ( new in Python 2 . 7 ) .", "title": "", "metadata": ""}
{"_id": "6449dffe2658f56afac1756c4e6948f3", "text": "Apply Gaussian blur to the given data .", "title": "", "metadata": ""}
{"_id": "219a3bad01f514df033910e6919819ee", "text": "Return a Flask Response object containing a JSON representation of * resource * .", "title": "", "metadata": ""}
{"_id": "6f77c1e385d9cb8362125fff10ce1488", "text": "Check whether a certain column exists", "title": "", "metadata": ""}
{"_id": "3b81779c09110a03cd4b0ad3608dbe6b", "text": "Args : img ( PIL Image ) : Image to be padded .", "title": "", "metadata": ""}
{"_id": "74f9eccc02d02a156595647452c749a1", "text": "Removes trailing zeroes from indexable collection of numbers", "title": "", "metadata": ""}
{"_id": "6e900afc76a81d4b4ba6390dfa338f72", "text": "Convert string from snake case to camel case .", "title": "", "metadata": ""}
{"_id": "c1c2036474b96a9e3961813e683c6c09", "text": "Populate axis limits GUI with current plot values .", "title": "", "metadata": ""}
{"_id": "3139222f14896a0c5d8aecd65f414fe1", "text": "Directly send utf8 bytes to stdout", "title": "", "metadata": ""}
{"_id": "87052b92ef026bf1a718d401f28052a7", "text": "iterator for JSON - per - line in a file pattern", "title": "", "metadata": ""}
{"_id": "22626881e24a9c65011682fe65cbbefc", "text": "Turn an SQLAlchemy model into a dict of field names and values .", "title": "", "metadata": ""}
{"_id": "7135f08fc9a47c000ca2d529583f2aae", "text": "Removes the last line of the document .", "title": "", "metadata": ""}
{"_id": "e099b06084d12b5b3647842f2da2bfdf", "text": "Removes trailing whitespace on each line .", "title": "", "metadata": ""}
{"_id": "39756b612052b4cb449f6051d2525d59", "text": "Strips trailing whitespace from string lowercases it and replaces spaces with underscores", "title": "", "metadata": ""}
{"_id": "d500b76c37f6c2411255244b8a3322ab", "text": "Return a smt bit vector that represents a memory location .", "title": "", "metadata": ""}
{"_id": "19f714bc75a1a960310d272ffa6fec50", "text": "Get a list of the top topn features in this : class : . Feature \\ .", "title": "", "metadata": ""}
{"_id": "185e29ff544b5705e15e00f65175ec99", "text": "Remove a symlink . Used for model shortcut links .", "title": "", "metadata": ""}
{"_id": "b77850ff518aaabdeb50a7dd154c34b2", "text": "Returns True if the file is binary", "title": "", "metadata": ""}
{"_id": "5375a975f7b5002fc9ab048bc77f18ea", "text": "Normalized Gaussian", "title": "", "metadata": ""}
{"_id": "dd1d862b5e2c1ed3212e4d6769051bf4", "text": "Returns names of object columns in the DataFrame .", "title": "", "metadata": ""}
{"_id": "f938537217a50a0cc0a05c3479e2409b", "text": "Convert to byte string .", "title": "", "metadata": ""}
{"_id": "70c31e8105686c8b39bdd2e0666edb07", "text": "Provide a password prompt .", "title": "", "metadata": ""}
{"_id": "5569916e81286c3bfc55a54ebb69a685", "text": "Return view of the recarray with all int32 cast to int64 .", "title": "", "metadata": ""}
{"_id": "efba912e46dfab3372b90af08e7efaa0", "text": "Represent string / bytes s as base64 omitting newlines", "title": "", "metadata": ""}
{"_id": "d9b9077fb4c971c4f0d59e764a5cb7e3", "text": "Helper function to read JSON file as OrderedDict", "title": "", "metadata": ""}
{"_id": "c16965091f3edbf6efc36cf824c43227", "text": "Round a float to a precision", "title": "", "metadata": ""}
{"_id": "3909b183a99cb932cc6bde30f2436936", "text": "Performs the permission check .", "title": "", "metadata": ""}
{"_id": "4685fdc916a117d474e60a7a51865fa3", "text": "Scroll both categories Canvas and scrolling container", "title": "", "metadata": ""}
{"_id": "15dc8f3262c84918a8c783b847ab9d67", "text": "Paginate queryset .", "title": "", "metadata": ""}
{"_id": "85bf40442f0c0779432ba61669414539", "text": "Check if obj is a sequence but not a string or bytes .", "title": "", "metadata": ""}
{"_id": "0454a2358752fbbe7a47918dbb39a7dd", "text": "Convert a ctypes double pointer array to a numpy array .", "title": "", "metadata": ""}
{"_id": "c006bc7ca3963869ee6be28c0647068f", "text": "sets the aspect ratio of the current zoom level of the imshow image", "title": "", "metadata": ""}
{"_id": "d338b496586e606e809dfcc04c7ec553", "text": "Wrapper for inserting int64 features into Example proto .", "title": "", "metadata": ""}
{"_id": "e05e1eee60dc58b9fe65c48498de851d", "text": "Save variable on given path using Pickle Args : variable : what to save path ( str ) : path of the output", "title": "", "metadata": ""}
{"_id": "4d8d1bc4467253de25bf504c360adcd8", "text": "Respond to the client with a 301 message and redirect them with a Location header .", "title": "", "metadata": ""}
{"_id": "fb8f8c34caa8a0e65110e2b58c759228", "text": "r Repeat each item in iterable n times .", "title": "", "metadata": ""}
{"_id": "309db22eafac0189eb1102c711e9fe6d", "text": "Turn bytes into base64", "title": "", "metadata": ""}
{"_id": "f99033523a097be993707f622aabaa2d", "text": "convert notebook to python script", "title": "", "metadata": ""}
{"_id": "3b1c94a05ac491e8c8b57c1cb046554c", "text": "Magnitude of a complex matrix .", "title": "", "metadata": ""}
{"_id": "9824a440b8cd297c0cc779319558f299", "text": "Recursively iterate through values in nested lists .", "title": "", "metadata": ""}
{"_id": "2fa81470bdcaa406ca5623a1c6a0f16e", "text": "Return True if this GO object has a parent GO ID .", "title": "", "metadata": ""}
{"_id": "5a1c49b7e889add0fa4dc101fd609968", "text": "Flush the buffer and finalize the file .", "title": "", "metadata": ""}
{"_id": "917081c5fef007d55e386dc5045d6b20", "text": "Store the given custom value and call the setter function .", "title": "", "metadata": ""}
{"_id": "e9fcd7e549e1f1e9fe9c0a9a05acd0ac", "text": "Release lock on compilation directory .", "title": "", "metadata": ""}
{"_id": "b5b22578f7c1e26fd0ce6fbe853df722", "text": "Compare by iteration", "title": "", "metadata": ""}
{"_id": "4526fbec6bd6c95c6eccee07e96770a7", "text": "Convert version like string to a tuple of integers .", "title": "", "metadata": ""}
{"_id": "3de467ff969d308812a1407dc7487175", "text": "Validates data is a timestamp", "title": "", "metadata": ""}
{"_id": "e58fafbf19c04ac4dd18ba66fcddb03b", "text": "Maxheap version of a heappop .", "title": "", "metadata": ""}
{"_id": "65f0ed9f6cc43ccb58d404b884b86f33", "text": "Loads UTF8 string : param reader : : return :", "title": "", "metadata": ""}
{"_id": "797f9744ea52642f6a9ef3b38cfe2bd9", "text": "Rewind the file to the start of the body ( if seekable ) .", "title": "", "metadata": ""}
{"_id": "32e9669c8c6ac3fe6790e3a58731500b", "text": "Check features data are not empty", "title": "", "metadata": ""}
{"_id": "27be8a2f072c582d6d11af36a5f3c4cf", "text": "Run the event loop .", "title": "", "metadata": ""}
{"_id": "f38a2f0fffbc2ce9d53130009374705c", "text": "print just one that returns what you give it instead of None", "title": "", "metadata": ""}
{"_id": "9ca3776767a78bb83d651ae205e9b728", "text": "print the message to the predefined log file without newline", "title": "", "metadata": ""}
{"_id": "2723f9c08e3ff3bf9e98cd7d9c40cfdf", "text": "Output a networkx graph to a DOT file .", "title": "", "metadata": ""}
{"_id": "0b49e318fed8b4ffa823a90f16d39722", "text": "Multiply each number by a constant such that the sum is 1 . 0 >>> normalize ( [ 1 2 1 ] ) [ 0 . 25 0 . 5 0 . 25 ]", "title": "", "metadata": ""}
{"_id": "9ea8ab1c5967d4d488d27fe9e6a5ab6c", "text": "Convenient shorthand for toarray ( * args ** kwargs ) . view ( np . recarray ) .", "title": "", "metadata": ""}
{"_id": "106917ecb721b79a0e8786a3767ba523", "text": "Gets the http method that will be called from the requests library", "title": "", "metadata": ""}
{"_id": "4bf06ec587421150b2894c4045156305", "text": "Init a noise variable .", "title": "", "metadata": ""}
{"_id": "da01afcd898c2b3d4b03214061d049bd", "text": "A function that works for both Python 2 . x and Python 3 . x . It asks the user for input and returns it as a string .", "title": "", "metadata": ""}
{"_id": "7115b4357bc12b36dc91c90443485c08", "text": "checks to see if list is equal everywhere", "title": "", "metadata": ""}
{"_id": "a70d882c6ce601815c1329e44a708c95", "text": "Returns the variance of values in a series .", "title": "", "metadata": ""}
{"_id": "da81a049cee79e861b2e506e4d570b8e", "text": "underscore to mixed case notation", "title": "", "metadata": ""}
{"_id": "6a0850ac44fb47b50b575a3f447f6b3c", "text": "Sets the title of the console window .", "title": "", "metadata": ""}
{"_id": "0563296518da1863e0903370f5d01a8f", "text": "Loads the images and latent values into Numpy arrays .", "title": "", "metadata": ""}
{"_id": "8c6ef767f34a4073cab813c880503084", "text": "Like isin but checks whether this expression s value ( s ) are not contained in the passed values . See isin docs for full usage .", "title": "", "metadata": ""}
{"_id": "501ad524cf7daac7e9d01491440c2ab8", "text": "Return a region from a numpy array . : param array : : class : numpy . ndarray : param identifier : value representing the region to select in the array : returns : : class : jicimagelib . region . Region", "title": "", "metadata": ""}
{"_id": "2c1477a2a1bc02b7bd250c9a624eda5a", "text": "Serialize representation of the table for local caching .", "title": "", "metadata": ""}
{"_id": "a1b4328c88a249bfd7deaadc45305e1a", "text": "Return the value of a float property .", "title": "", "metadata": ""}
{"_id": "4c7554454143ee51148fcb0994d214bf", "text": "Checks for local config overrides for pylint and add them in the correct pylint options format .", "title": "", "metadata": ""}
{"_id": "6a11e848f7d7a3a78bfd466a1b30557c", "text": "Build descriptor for Enum instance .", "title": "", "metadata": ""}
{"_id": "746c65707d47c0eb535db4132671bc48", "text": "Compute the path distance from given set of points", "title": "", "metadata": ""}
{"_id": "8ec28fd6a301e946bc295294a06531f2", "text": "Test two dictionary is equal on values . ( ignore order )", "title": "", "metadata": ""}
{"_id": "f163260f8687e9b56e0c1a548896dd14", "text": "Finds the index of an item in list which satisfies predicate : param predicateFn : predicate function to run on items of list : param items : list of tuples : return : first index for which predicate function returns True", "title": "", "metadata": ""}
{"_id": "bc1340614322d6375febbd37c4f6cd80", "text": "Convert spherical coordinates to cartesian unit vectors .", "title": "", "metadata": ""}
{"_id": "3acde2b0b4df29aa6b4e3c94017f4588", "text": "Return a : py : class : datetime . datetime instance representing the current time .", "title": "", "metadata": ""}
{"_id": "e586a1e38d66bf1e99837d56be235f85", "text": "Rotate a 3D vector using quaternion algebra .", "title": "", "metadata": ""}
{"_id": "eae9d4b94b2a65494a71ee5778d2a1cd", "text": "Yields file name if matches a regular expression pattern .", "title": "", "metadata": ""}
{"_id": "cb61651e00842e21f6a79989768d5975", "text": "Wrapper for iterating numpy array", "title": "", "metadata": ""}
{"_id": "8c0d2daeeac09863101060ee165a8c79", "text": "Detokenize a string by removing spaces before punctuation .", "title": "", "metadata": ""}
{"_id": "a908446a739a722ef0975d2761ba9ce4", "text": "A helper function that finds the position of the most significant bit in a 1darray of 1s and 0s i . e . the first position where a 1 appears reading left to right .", "title": "", "metadata": ""}
{"_id": "5d436f14760c7e0d5bafb388a7e2209b", "text": "Restores the state of the batched queue for writing .", "title": "", "metadata": ""}
{"_id": "30f8d5606f03aaa68e0b28564c8bf703", "text": "Extract the boundaries from a list of indexes", "title": "", "metadata": ""}
{"_id": "b43a2e09fbc4572187d007cc2685a62a", "text": "Fill NaNs with the previous value the next value or if all are NaN then 1 . 0", "title": "", "metadata": ""}
{"_id": "0b99e1d8249e49cc551c4e20e9607659", "text": "Get the python representation of the obj", "title": "", "metadata": ""}
{"_id": "3298877cf31879f3c3747279750016ec", "text": "Gets the maximum length of each column in the field table", "title": "", "metadata": ""}
{"_id": "be276bbb91a241883f0e6057b8a96ba6", "text": "Convert a Mapper 1 - complex to a networkx graph .", "title": "", "metadata": ""}
{"_id": "1f367b959f2921310ba306b52e1d8aa3", "text": "To know the allocated memory at function termination .", "title": "", "metadata": ""}
{"_id": "9e60e28cd1975fa65971bba463596142", "text": "Removes a : py : class : . Series from the chart .", "title": "", "metadata": ""}
{"_id": "cb790d7ae882d8116af0429842cec975", "text": "Pop the heap value from the heap .", "title": "", "metadata": ""}
{"_id": "a93e8c57308acd1e0c86258764802a21", "text": "WeChat access token", "title": "", "metadata": ""}
{"_id": "51ac2414cc75e3b6af2d30f9bdc0ae18", "text": "Compute the eigvals of mat and then find the center eigval difference .", "title": "", "metadata": ""}
{"_id": "dff8201c107be3993c545315a2b152b6", "text": "Saves a representation of the case in the Graphviz DOT language .", "title": "", "metadata": ""}
{"_id": "5f57a22408a4aa0d3d299501e9c8481c", "text": "Get an item from a dict which contains just one item .", "title": "", "metadata": ""}
{"_id": "ba90325f9d8033511f274ace08e2c922", "text": "Create environ dictionary from current os . environ and variables got from given env_file", "title": "", "metadata": ""}
{"_id": "a12baf756e5e542a2cc37048f68656ed", "text": "This strategy uses an exponential approximation for cut - off frequency calculation found by matching the one - pole Laplace lowpass filter and mirroring the resulting filter to get a highpass .", "title": "", "metadata": ""}
{"_id": "b5cd3ee22e522350411cdc23fddb3fd4", "text": "Returns date range for the previous full month .", "title": "", "metadata": ""}
{"_id": "c102b01a5330b34d93a0e12e5c6ec2cd", "text": "Returns January 1 of the given year .", "title": "", "metadata": ""}
{"_id": "8d200ab86330e819ddfbc50d7c028a88", "text": "An iterable of column names for a particular table or view .", "title": "", "metadata": ""}
{"_id": "73dec93e27525f659cc9316feee843a3", "text": "Modifies column header format to be importable into a database : param column : raw column header : return : cleanedcolumn : reformatted column header", "title": "", "metadata": ""}
{"_id": "a53548bad73a81ba06ff16cd2820051c", "text": "Takes JSON formatted data converting it into native Python objects", "title": "", "metadata": ""}
{"_id": "01763b3dea6a82347db599dd78ddd1fa", "text": "A handy wrapper to get a remote file content", "title": "", "metadata": ""}
{"_id": "7ec2e7beda5b054e40914871c793d96b", "text": "Matrix inversion op .", "title": "", "metadata": ""}
{"_id": "97cbb0bdd86fced2847958e43986f4b0", "text": "Check if a given file is available in the cache or not", "title": "", "metadata": ""}
{"_id": "f6ba4f41c5f01144f539d45eddc74c12", "text": "r Like rotate but modifies l in - place .", "title": "", "metadata": ""}
{"_id": "cb855c7ecd724d070598c4dcc2f6b01b", "text": ": param min_value : minimum value for update ( .. ) : param format : format specifier for the output : param width : width of the progress bar s ( excluding extra text ) : param barchar : character used to print the bar : param output : where to write the output to", "title": "", "metadata": ""}
{"_id": "7ba7b15faddffc4c895de2dc6fcd5e88", "text": "Get letters from string only .", "title": "", "metadata": ""}
{"_id": "5010f6e3e9c6ba16c50497f54c7c8aa5", "text": "Run a Tensorflow model on the Iris dataset .", "title": "", "metadata": ""}
{"_id": "5d365be74551248edc5f15185b95d25f", "text": "Clear the database .", "title": "", "metadata": ""}
{"_id": "74b23f2cccf1bf905e3df1dfda24671c", "text": "renders context aware template", "title": "", "metadata": ""}
{"_id": "ae3930531daa4618c1750c9217d52631", "text": "Convert an ARF timestamp to a datetime . datetime object ( naive local time )", "title": "", "metadata": ""}
{"_id": "9fd7537ce10f75b74c6efb7465a62110", "text": "Intersect dictionaries d1 and d2 by key * and * value .", "title": "", "metadata": ""}
{"_id": "5bbd1e4a2af017684562800bb62629cb", "text": "Calculates the moving average of an array .", "title": "", "metadata": ""}
{"_id": "5c155b4fdb70d01569e34ac09639fe5e", "text": "Get domain part of an url .", "title": "", "metadata": ""}
{"_id": "8fe5f3b304b8ae637d9a2b99151f99a7", "text": "Gets the width of the table that would be printed . : rtype : int", "title": "", "metadata": ""}
{"_id": "1ef11bff4d9f9d60958b7dc5834b89ec", "text": "Return dictionary d s repr but with the items sorted . >>> pretty_dict ( { m : M a : A r : R k : K } ) { a : A k : K m : M r : R } >>> pretty_dict ( { z : C y : B x : A } ) { x : A y : B z : C }", "title": "", "metadata": ""}
{"_id": "832cacc6e45c6ec7452735bf580ac361", "text": "Intended to be used going into post mortem routines . If sys . last_traceback is set we will return that and assume that this is what post - mortem will want . If sys . last_traceback has not been set then perhaps we * about * to raise an error and are fielding an exception . So assume that sys . exc_info () [ 2 ] is where we want to look .", "title": "", "metadata": ""}
{"_id": "59d6c0cc08df09e1f45f10eac112213f", "text": "Take a list of strings and clear whitespace on each one . If a value in the list is not a string pass it through untouched .", "title": "", "metadata": ""}
{"_id": "6c23b901488a48d10645ee9a58912523", "text": "Used with lambda to sort fields", "title": "", "metadata": ""}
{"_id": "8ba387be9ff565016ff437601a268e7d", "text": "Replace boolean variables by the characters F / T", "title": "", "metadata": ""}
{"_id": "aaa6a14dae2cacfc6d230764d340f289", "text": "Print all INDRA Statements collected by the processors .", "title": "", "metadata": ""}
{"_id": "5cc01a2e4010281df38b6d63af23b4c2", "text": "Makes a classname .", "title": "", "metadata": ""}
{"_id": "6d89f545ff59a484bf42a28376d8dd8b", "text": "Draw a horizontal line up to a given length .", "title": "", "metadata": ""}
{"_id": "5c318ff60d7006b75ed0a634211c1fbd", "text": "Strip agents from a string .", "title": "", "metadata": ""}
{"_id": "8b9c81cf473f9420a37139d1347f61b8", "text": "Check configuration file type is JSON Return a boolean indicating wheather the file is JSON format or not", "title": "", "metadata": ""}
{"_id": "9c7ce3681c3369068bdf63752562789c", "text": "Display productpage with normal user and test user buttons", "title": "", "metadata": ""}
{"_id": "be0e71779d8e202892170b9e46f2744e", "text": "return the last stack element and delete it from the list", "title": "", "metadata": ""}
{"_id": "a601634acf8342e69a6e0783f74ef75a", "text": "Connects to the PTY ( pseudo - TTY ) for a given container . Blocks until the user exits the PTY .", "title": "", "metadata": ""}
{"_id": "02c90bc2015061106705014693af1f6b", "text": "The AST comments .", "title": "", "metadata": ""}
{"_id": "f68f62bfaa646f5e786123f5388980d3", "text": "Extract a raw_connection and determine if it should be automatically closed .", "title": "", "metadata": ""}
{"_id": "c1a21b17f37c7f82d136c20612a2e995", "text": "Validates that the object itself is some kinda string", "title": "", "metadata": ""}
{"_id": "ad60b419386cb6ce18ede931beba6a65", "text": "Returns True if test is True for all array elements . Otherwise returns False .", "title": "", "metadata": ""}
{"_id": "615a982e32b3bdef8d43c842846cc998", "text": "Returns the index of the value at the Qth percentile in array a .", "title": "", "metadata": ""}
{"_id": "989f47b2a1eb00f853fdb983deab42fe", "text": "Returns min ( val1 val2 ) returning None only if both values are None", "title": "", "metadata": ""}
{"_id": "7900385ed042046e84708a8498e0b191", "text": "Inputs [ a b c ] returns { a : 0 b : 1 c : 2 } .", "title": "", "metadata": ""}
{"_id": "4e4f342178d7980557d01b80c091a6d5", "text": "Replaces from a string ** input ** all the occurrences of some symbols according to mapping ** repls ** .", "title": "", "metadata": ""}
{"_id": "8ae3af7e7d332d0bcdb0a3258198d57b", "text": "Returns the maximum length between the example inputs and targets .", "title": "", "metadata": ""}
{"_id": "31ff6425e6b1f085b577e7396ab2f4d8", "text": "Report whether another set contains this set .", "title": "", "metadata": ""}
{"_id": "bb1f2a6c330980395204c0a277807ea3", "text": "Parse a bool from a string .", "title": "", "metadata": ""}
{"_id": "0b4da8beee8e8778c13d16f78fab868e", "text": "Return the index of an element in the list .", "title": "", "metadata": ""}
{"_id": "04b84e0deb537a2f44a8c1209fd84afc", "text": "Generate the first value in each row .", "title": "", "metadata": ""}
{"_id": "849ecad10e0dcd1f2dd1b358bf9e2d9e", "text": "Removes dict keys which have have self as value .", "title": "", "metadata": ""}
{"_id": "ff7c08f68564345deee5aefa37fe5f5d", "text": "Runs the function asynchronously taking care of exceptions .", "title": "", "metadata": ""}
{"_id": "958f7495bab97e1c4dc21ed2b71f8ac7", "text": "Register name as a type to validate as an instance of class cls .", "title": "", "metadata": ""}
{"_id": "944f01c26882cc36ffa400ec8b20cb7f", "text": "Turn the ring for a single position . For example [ a b c d ] becomes [ b c d a ] .", "title": "", "metadata": ""}
{"_id": "8704745ca1567d254c8335434b10d958", "text": "Like many_until but must consume at least one of these .", "title": "", "metadata": ""}
{"_id": "5757e1e7c1800c59f0ffe16fcd158449", "text": "http : // www . swharden . com / blog / 2009 - 01 - 21 - signal - filtering - with - python / #comment - 16801", "title": "", "metadata": ""}
{"_id": "062f5000b1287d5330337728caa65d1a", "text": "Get the clipboard s text on OS X .", "title": "", "metadata": ""}
{"_id": "93bec42d28c511f67d08ba9935b58e17", "text": "Returns the leading numeric part of a string .", "title": "", "metadata": ""}
{"_id": "67fc1215dbf918db23c316ac2e8a6ebe", "text": "delete ( filething )", "title": "", "metadata": ""}
{"_id": "7220d32a1fe201e72c2791f11ffce994", "text": "Main funcion when executing this module as script", "title": "", "metadata": ""}
{"_id": "d51eb1fdb97e0911de6249b76dad2fcc", "text": "Creates a copy of model", "title": "", "metadata": ""}
{"_id": "7924a0c6726ea4063916805c295ffcd9", "text": "Check if arg is a valid file that already exists on the file system .", "title": "", "metadata": ""}
{"_id": "427368ca590decb11cc9e6b6a4bef436", "text": "Remove a spent coin based on its index .", "title": "", "metadata": ""}
{"_id": "36b7388097ca0d438bc62193c6a44dcc", "text": "Show the received object as precise as possible .", "title": "", "metadata": ""}
{"_id": "4eee92db53081d5ea844d9a80bb2927c", "text": "Takes a list of ( key value ) pairs and turns it into a dict .", "title": "", "metadata": ""}
{"_id": "b2ddcf3047c032fb20046fcb5a29e618", "text": "Returns is seq is sequence and not string .", "title": "", "metadata": ""}
{"_id": "ef69d92500bc152354085ce9a439508b", "text": "Returns a number of query results . This is faster than . count () on the query", "title": "", "metadata": ""}
{"_id": "ee1e48469d4fdf79d53028b41ff02db3", "text": "Store the user session for a client .", "title": "", "metadata": ""}
{"_id": "a368d6d8d4c8f7035ec1f094153ab4e3", "text": "Coerce value to an JSON - compatible representation .", "title": "", "metadata": ""}
{"_id": "aac1767136809c26fb31fd3e04d0309c", "text": "Pure - Python implementation of itertools . combinations ( l 2 ) .", "title": "", "metadata": ""}
{"_id": "dc07a87981777fc2f393cad1de8aeb91", "text": "Can edit this object", "title": "", "metadata": ""}
{"_id": "1e19862d89852f80bba19898f6b87c72", "text": "Check if given string is a punctuation", "title": "", "metadata": ""}
{"_id": "ae0cc834772bb95d11988b53b854a592", "text": "Clips a prefix from the beginning of a string if it exists .", "title": "", "metadata": ""}
{"_id": "87b58b2f2f84788bc46fadccc9076054", "text": "given a segment ( rectangle ) and an image returns it s corresponding subimage", "title": "", "metadata": ""}
{"_id": "d8ea0488ea3ba5b054879c4bfeb428e6", "text": "Sorts this RDD by the given keyfunc", "title": "", "metadata": ""}
{"_id": "0bda11672e5f51f45982b61379594926", "text": "Forget about the given canvas . Used by the canvas when closed .", "title": "", "metadata": ""}
{"_id": "3e41c9db9c720a43f307b43ede1e41e8", "text": "Returns all the keys in a s3 bucket paginator page .", "title": "", "metadata": ""}
{"_id": "654c6d2c95ddc6f92eca0b92a29c3722", "text": "Get distance matrix given a matrix . Used in testing .", "title": "", "metadata": ""}
{"_id": "b08dd5ddf3a74362b335eacb9d7dbb8a", "text": "Reseed factory . fuzzy s random generator .", "title": "", "metadata": ""}
{"_id": "60692a1ddaa8c7d450c27772c67799ea", "text": "Helper function to post a tweet", "title": "", "metadata": ""}
{"_id": "04a99a727d3a065cf605599982ae3a41", "text": "Connect to a redis instance .", "title": "", "metadata": ""}
{"_id": "92c66d32803aab19b052a9082132b7e5", "text": "arr_out = round_array ( array_in )", "title": "", "metadata": ""}
{"_id": "d9a32771463e8ef1652182d00182bb2f", "text": "Print list of strings to the predefined stdout .", "title": "", "metadata": ""}
{"_id": "7add90adff8b74bbbd868f9361b7c1d4", "text": "Returns a list of synsets of a word after lemmatization .", "title": "", "metadata": ""}
{"_id": "7dcdaa3709a958f4776f672ce2344fe1", "text": "Start the Django dev server .", "title": "", "metadata": ""}
{"_id": "735d9dfb36086ffdcc0b92bbe522b3ad", "text": "Return a shell - escaped version of the string s .", "title": "", "metadata": ""}
{"_id": "e154863924d1b86b17de435fa9f32baa", "text": "Check if cnr or cns files are empty ( only have a header )", "title": "", "metadata": ""}
{"_id": "4f369c7e525c34cdb785011af6350331", "text": "Compute standard deviation with ddof degrees of freedom", "title": "", "metadata": ""}
{"_id": "0aea444bc2abb55892eae8a77fc993d7", "text": "Generate seed for random number generator", "title": "", "metadata": ""}
{"_id": "498fb828d0eaef32d5f8298119726a49", "text": "Sets all defaults for the given dictionary to those contained in a second defaults dictionary . This convenience method calls :", "title": "", "metadata": ""}
{"_id": "115fcab351b0d2e47c389e79eeb67188", "text": "Resize and image to fit the passed in width keeping the aspect ratio the same", "title": "", "metadata": ""}
{"_id": "c95e28f59505adee056931550e47d605", "text": "A basic slug version of a given parameter list .", "title": "", "metadata": ""}
{"_id": "f1d6ab3d64bc7b1565e47278e6f9ebd9", "text": "Prints the top row of a table", "title": "", "metadata": ""}
{"_id": "4c7b8f3a0a269bd8c417e9bb1b744c5f", "text": "Executes a ( shell ) command in the background", "title": "", "metadata": ""}
{"_id": "6777d05f645bfd09165e2e86405c3dd8", "text": "Removes all blank lines in @string", "title": "", "metadata": ""}
{"_id": "2af7f3550036b29dbb3f48884178c067", "text": "Apply 2to3 tool ( Python2 to Python3 conversion tool ) to Python sources .", "title": "", "metadata": ""}
{"_id": "606389e2faa70474f178f8b24da01f03", "text": "Check if something quacks like a list .", "title": "", "metadata": ""}
{"_id": "0bed82a035f26abfa93419860e250f7e", "text": "Utility method to convert list to tsv line with carriage return", "title": "", "metadata": ""}
{"_id": "5621febddaa4d1ce1502559d5e3fb647", "text": "Just sends the request using its send method and returns its response .", "title": "", "metadata": ""}
{"_id": "5f26e3a4bf12331bf97abf8f24e0f8a3", "text": "Print security object information for a pdf document", "title": "", "metadata": ""}
{"_id": "a3f2d9cfbd03f8f22a9090c8e9891e82", "text": "Given a set of kwargs turns them into a string which can then be passed to a command . : param kwargs : kwargs from a function call . : return : outstr : A string which is if no kwargs were given and the kwargs in string format otherwise .", "title": "", "metadata": ""}
{"_id": "28c93476c00b9bbf6488bc1e905c6dfd", "text": "Determine if two objects are equal .", "title": "", "metadata": ""}
{"_id": "254c94874f135fe5477ecdb5c441d381", "text": "generate a CamelCase string from an underscore_string .", "title": "", "metadata": ""}
{"_id": "c80e64b803258f39965440af2e88e206", "text": "Set an object s field to default if it doesn t have a value", "title": "", "metadata": ""}
{"_id": "4edd48cb66f75fd64ab479e34d485ba5", "text": "Is this attribute present?", "title": "", "metadata": ""}
{"_id": "6d335d5b11cda4a68e6c6b6d053f8c1b", "text": "Dump Python object as JSON string .", "title": "", "metadata": ""}
{"_id": "348041394243184d55097f78d86267ab", "text": "Internal function to read an XML file", "title": "", "metadata": ""}
{"_id": "f22cfc715e853df5c6aba0679fa3146d", "text": "Converts a Python 2 function as lambda ( x y ) : x + y In the Python 3 format : lambda x y : x + y", "title": "", "metadata": ""}
{"_id": "920cdd41aeed3a6466bc4a95ddb217ad", "text": "Helper for iterating only nonempty lines without line breaks", "title": "", "metadata": ""}
{"_id": "26a0f8e853a8dbc45ae159e2195e7cbe", "text": "Stop redrawing the canvas at the previously set timed interval .", "title": "", "metadata": ""}
{"_id": "3d9e149bbb788bff1c0dcefc9c880b44", "text": "Returns key for the bottommost rightmost cell with content", "title": "", "metadata": ""}
{"_id": "418c476732eeb10e8a840aad058c9755", "text": "Returns the absolute position of table top", "title": "", "metadata": ""}
{"_id": "291cf94e1168cd3165e9ebfd16d0b414", "text": "Return a serialised version of the model s fields which exist as local database columns ( i . e . excluding m2m and incoming foreign key relations )", "title": "", "metadata": ""}
{"_id": "4697ae8d8d80f5875aa727ab2a5ce918", "text": "Whether this path is a symbolic link .", "title": "", "metadata": ""}
{"_id": "78275050cfd695fad46d161d74a7750b", "text": "Region formed by taking border elements .", "title": "", "metadata": ""}
{"_id": "15863009a0656d9d71cee46608fbdd31", "text": "Calculates the moving average ( rolling mean ) of an array of a certain window size .", "title": "", "metadata": ""}
{"_id": "c90e39c5c4493644767a16cedaa8e4bd", "text": "Pretty print the object s representation .", "title": "", "metadata": ""}
{"_id": "8f455ccf402b25c34df5a4120dff4a7a", "text": "Receive the content of url parse it as JSON and return the object .", "title": "", "metadata": ""}
{"_id": "cffc67bdd959975136a549feef86750d", "text": "Computes the centroid of set of points", "title": "", "metadata": ""}
{"_id": "dcb29a5e6d0b611bd803ee462e160c45", "text": "str to bytes ( py3k )", "title": "", "metadata": ""}
{"_id": "af0b906b9df18dccd7ee12366914fead", "text": "check if we need graphviz for different output format", "title": "", "metadata": ""}
{"_id": "0047b4b5370d3f712a1ad573f2132ff8", "text": "don t want to bother with a dsn? Use this method to make an interface available", "title": "", "metadata": ""}
{"_id": "c3f8a3cf4c9f6b5f583dd0b3278630a5", "text": "The title of this window", "title": "", "metadata": ""}
{"_id": "9370cd2aad3571125d8b5f46023568f8", "text": "Returns a given response header .", "title": "", "metadata": ""}
{"_id": "595db78b6d258da533ef5b424395a1ff", "text": "Sets args and kwargs that are passed when creating a subparsers group in an argparse . ArgumentParser i . e . when calling argparser . ArgumentParser . add_subparsers", "title": "", "metadata": ""}
{"_id": "7e71d79ccbfec89961aa60331894de56", "text": "Write DOT comment .", "title": "", "metadata": ""}
{"_id": "6e460b71faf8cde56c08ff9ecf733c48", "text": "Remove legend for axes or gca .", "title": "", "metadata": ""}
{"_id": "d6753946e508b1446713d5ef60530a9f", "text": "Returns a temporary filename based on filename .", "title": "", "metadata": ""}
{"_id": "d52190d0cbbb6b661ac3f36bc1879b91", "text": "Return true if outfile exists and is no older than base datetime .", "title": "", "metadata": ""}
{"_id": "bbd6101b02184159bd50e8d3bb924124", "text": "Transform triple index into a 1 - D numpy array .", "title": "", "metadata": ""}
{"_id": "dda16d2bf5ef718eee50ceae2b1a5e74", "text": "Takes a string and dictionary . replaces all occurrences of i with j", "title": "", "metadata": ""}
{"_id": "958c2ab6df5982f6f84e06ef6c7ca78d", "text": "Pre - order depth - first", "title": "", "metadata": ""}
{"_id": "11cb0ce5773c82de014cd5324d812c1c", "text": "Yields all permutations with replacement : list ( product ( cat repeat = 2 )) = > [ ( c c ) ( c a ) ( c t ) ( a c ) ( a a ) ( a t ) ( t c ) ( t a ) ( t t ) ]", "title": "", "metadata": ""}
{"_id": "db585443ff76675ae9cc01e4f98bee29", "text": "Get final coefficient map array .", "title": "", "metadata": ""}
{"_id": "ecdb356042b48f11c3172896ec2b1586", "text": "Deeply updates a dictionary . List values are concatenated .", "title": "", "metadata": ""}
{"_id": "214f6166def4bc0637b0305fea295ca7", "text": "Whether any of the strings contains any of the candidates .", "title": "", "metadata": ""}
{"_id": "2fa8146a6d7160885219fa18f19c3cd8", "text": "Add suffix to a full file name", "title": "", "metadata": ""}
{"_id": "9ad694381bc2e0bf3730af3d776d5335", "text": "Closes and waits for subprocess to exit .", "title": "", "metadata": ""}
{"_id": "1bd4e2c68f3c0828fc5a5814c6e3445e", "text": "Return random disposition point .", "title": "", "metadata": ""}
{"_id": "e33c4cfe62748b4c9d2aa76cc0f0532b", "text": "Logs the basic endpoint requested", "title": "", "metadata": ""}
{"_id": "009c735b37c43df295ed64613ab063d4", "text": "Raises django . core . exceptions . ValidationError if any validation error exists", "title": "", "metadata": ""}
{"_id": "78b42d015c23b18a3fcac5a99027673e", "text": "Select item in the list", "title": "", "metadata": ""}
{"_id": "96ef003e82f6e9f1af6a3687ca4d4cbd", "text": "Reads image specified by path into numpy . ndarray", "title": "", "metadata": ""}
{"_id": "444b59f8ff3efd032b8b825c80c09976", "text": "Return a modified list containing only the indices indicated .", "title": "", "metadata": ""}
{"_id": "dfb319d99c80a54ca1f7271f17a265f0", "text": "Defines the time after which Exscript fails if it does not receive a prompt from the remote host .", "title": "", "metadata": ""}
{"_id": "b9cbfe6036b6a8b9c6ede56df524704c", "text": "Order - preserving sorting function .", "title": "", "metadata": ""}
{"_id": "7bb9034062ed702fa529bb449bda4ac7", "text": "Digits needed to comforatbly display values in [ minval maxval ]", "title": "", "metadata": ""}
{"_id": "5186400baaef2cc72ef503b792780e24", "text": "converts a base64 string to a file", "title": "", "metadata": ""}
{"_id": "fc6e62712ccc0b1deb86fd91e09940c9", "text": "Set the exectuable bit on the given filename", "title": "", "metadata": ""}
{"_id": "7ade300f61cd54fb4c1924d3e055934c", "text": "Implements the === operator .", "title": "", "metadata": ""}
{"_id": "f166cee55a03a03c9aaa8ba251cdbdf7", "text": "Returns the arithematic mean of the values in the passed list . Assumes a 1D list but will function on the 1st dim of an array ( ! ) .", "title": "", "metadata": ""}
{"_id": "c5ca85ba52797b245b36f1f6d6892d51", "text": "returns a random element from seq n times . If n is None it continues indefinitly", "title": "", "metadata": ""}
{"_id": "cf8a96a8856c72c3f19a14401dd0dbfb", "text": "Pretty Prints seconds as Hours : Minutes : Seconds . MilliSeconds", "title": "", "metadata": ""}
{"_id": "ae729771dd187041f4a24e0f9884c604", "text": "Split message to list by commas and trim whitespace .", "title": "", "metadata": ""}
{"_id": "f1088f947ed7e2a67bd9a50ccb968f02", "text": "Logs a function s run time", "title": "", "metadata": ""}
{"_id": "b12f688838e2ed06c9e4c466416a9e7a", "text": "Attempts to convert given object to a string object", "title": "", "metadata": ""}
{"_id": "e14db9a5beb230a64257944718b1fff1", "text": "Stops the status update thread .", "title": "", "metadata": ""}
{"_id": "450d5f101a0f57d823f19bcb2d2c7e7d", "text": "Get a ctypes void pointer to the memory mapped region .", "title": "", "metadata": ""}
{"_id": "d2093bc48320f2143a2fb74ad487a9e0", "text": "Delete a file safely . If it s not present no - op .", "title": "", "metadata": ""}
{"_id": "c97a09368e461738e9d4251b7b8a4c12", "text": "Return the duplicates in a list .", "title": "", "metadata": ""}
{"_id": "df8078090c58f1c6231e8b39ab2bcbd2", "text": "Raises the supplied figure number or figure window .", "title": "", "metadata": ""}
{"_id": "1f0f5028eb6c8cb981cc66fc61ffa24a", "text": "Create a new figure manager instance for the given figure .", "title": "", "metadata": ""}
{"_id": "dcbf5b24cc13132faa08c4f3cdc64f07", "text": "Parse string into Identity dictionary .", "title": "", "metadata": ""}
{"_id": "0ffbc68108e62f9581f8fedb2015c120", "text": "Request that the Outstation perform a cold restart . Command syntax is : restart", "title": "", "metadata": ""}
{"_id": "1fe277df97021506ca9034393db2ded5", "text": "Retrieve the previous quarter for dt", "title": "", "metadata": ""}
{"_id": "b20ac1beda408fb1d83ea8236291f631", "text": "Return all ( and only ) the lowercase chars in the given string .", "title": "", "metadata": ""}
{"_id": "4b01aaa93d53cbe4401e9535aa5fecf2", "text": "Clean up any temporary files .", "title": "", "metadata": ""}
{"_id": "f3b723220138a51fde7e0398d9b8fefc", "text": "Remove all properties matching both key and value .", "title": "", "metadata": ""}
{"_id": "2d2437a4c3334fcc8be77f3be3d035c4", "text": "Parses hostname from URL . : param url : URL : return : hostname", "title": "", "metadata": ""}
{"_id": "e82eeff0ecf9804bed679fc2d225fdac", "text": "Adds passed value to node s globals", "title": "", "metadata": ""}
{"_id": "84c169016d3ca29b21806579e82a68e0", "text": "Determine whether stdin has any data to read .", "title": "", "metadata": ""}
{"_id": "e11ecdeb464f40c5fe52486963d59131", "text": "HTTP response for not - authorized access ( status code 403 )", "title": "", "metadata": ""}
{"_id": "013f90a6869849ef7c953c6e81bb27ab", "text": "Run func with argument fobj and measure execution time .", "title": "", "metadata": ""}
{"_id": "2fa412ba63e482c040e35051b1322ec5", "text": "Emit a sine wave at the given frequency .", "title": "", "metadata": ""}
{"_id": "7fffeb8367183bcc17c5251facec81c8", "text": "Returns all rows from a cursor as a dict ( rather than a headerless table )", "title": "", "metadata": ""}
{"_id": "316c8dfe6918776e147b5a6634e2e971", "text": "Segmented min op .", "title": "", "metadata": ""}
{"_id": "8591013815a4c11ba7b5d865d96ee61a", "text": "Yield a series of batches from iterable each size elements long .", "title": "", "metadata": ""}
{"_id": "684eaa416e01cecc49cd9a855f1ac65e", "text": "Given a callable func trap the indicated exceptions for up to retries times invoking cleanup on the exception . On the final attempt allow any exceptions to propagate .", "title": "", "metadata": ""}
{"_id": "d52ac81933408f7ba5c6c55e9b0ecc23", "text": "Return a list of tuples specifying the column name and type", "title": "", "metadata": ""}
{"_id": "ffe09ceb7fa9933e7e631c1f1c7a9428", "text": "Reads a tuple of numbers . e . g . vertices normals or teture coords .", "title": "", "metadata": ""}
{"_id": "3098e2757b791f461989dba30fb5a7a7", "text": "Returns a 3x3 cross - product matrix from a 3 - element vector .", "title": "", "metadata": ""}
{"_id": "97b3b88d9f056dc2ae906cd6524ab95e", "text": "Filters given query with the below regex and returns lists of quoted and unquoted strings", "title": "", "metadata": ""}
{"_id": "6ff56599483d17ba1c0d6f4583117c2f", "text": "Returns whether the given name looks like the name of a builtin CSS function .", "title": "", "metadata": ""}
{"_id": "1661f1078736298009b7c0ba7f123900", "text": "Handle logging .", "title": "", "metadata": ""}
{"_id": "5af7527665e8b59f3dcfb2ba0a1b4efa", "text": "Read a . npy array .", "title": "", "metadata": ""}
{"_id": "41a9a8ba2c8634620c2280392a1d83c1", "text": "Call a function after a delay unless another function is set in the meantime .", "title": "", "metadata": ""}
{"_id": "e6a62021ce6357cfa50e9c0fbaed4d87", "text": "Get the week start date and end date", "title": "", "metadata": ""}
{"_id": "fc242a94928c0d333ecc8a5d298c9c11", "text": "Normalizes list", "title": "", "metadata": ""}
{"_id": "b59c1d762c2aa1800e58c7de995b3cd9", "text": "Return all ( and only ) the chars in the given string .", "title": "", "metadata": ""}
{"_id": "2630e482b2fa02b5dbe0d848d87b4465", "text": "Like argsort but returns an index suitable for sorting the the original array even if that array is multidimensional", "title": "", "metadata": ""}
{"_id": "b9ae56c28c554996712b3d1bd35a5c3f", "text": "Simple method for handling exceptions raised by PyBankID .", "title": "", "metadata": ""}
{"_id": "0dc88e83b4164cc45e70222e2e4b4a43", "text": "Returns the name of the newest file given an iterable of file names .", "title": "", "metadata": ""}
{"_id": "5d681cff15c874ee4fce7e55df452e41", "text": "Provide the root module of a TF - 2 . 0 API for use within TensorBoard .", "title": "", "metadata": ""}
{"_id": "963986c34971237e8ad55d57711efa76", "text": "Clone a bitset", "title": "", "metadata": ""}
{"_id": "b354299bad1b74a47ae457b90fd36d7d", "text": "Unpickle a python object from the given path .", "title": "", "metadata": ""}
{"_id": "1cf01682eb5c0646f3d768293c08c3d7", "text": "Convenience wrapper for database UPDATE .", "title": "", "metadata": ""}
{"_id": "bfcbfeed0b1e2051603301b5e3cddefe", "text": "Return a dict with swapped keys and values", "title": "", "metadata": ""}
{"_id": "c1a9fd3fe463e78a07a71b2a999254e1", "text": "Return the dotproduct of two vectors .", "title": "", "metadata": ""}
{"_id": "4e0ddc3fa1f8e5febb7dd2c487f903e9", "text": "Helper parse action to convert tokens to lower case .", "title": "", "metadata": ""}
{"_id": "e2d536844176b2633ad802478c657c66", "text": "Adds an action to the parser cli .", "title": "", "metadata": ""}
{"_id": "329ecb91d15cee4a3ec4d736fc9657dd", "text": "Adds / overwrites all the keys and values from the dictionary .", "title": "", "metadata": ""}
{"_id": "bc0ec1ec90a3f7ea61bec075a57fe033", "text": "Inserts spaces after each string of new lines in s and before the start of the string .", "title": "", "metadata": ""}
{"_id": "12d773ce4b97b2336a470f65bd2e853f", "text": "set colouring on if STDOUT is a terminal device off otherwise", "title": "", "metadata": ""}
{"_id": "3ff915c40c48016b8c27265949f72814", "text": "Called when asyncio . Protocol loses the network connection .", "title": "", "metadata": ""}
{"_id": "aa85750eb69ecb06d6b36219c6c8fe3a", "text": "Return a list of string which don t match the given regex .", "title": "", "metadata": ""}
{"_id": "31b81141c14442784be26a7781e64858", "text": "Push a new value into heap .", "title": "", "metadata": ""}
{"_id": "54c79e67809b0b7993f914353575d320", "text": "takes flags returns indexes of True values", "title": "", "metadata": ""}
{"_id": "c6256c5f2a1e9e483e4510f44e176e3f", "text": "Split a string with comma or space - separated elements into a list .", "title": "", "metadata": ""}
{"_id": "f8ae90de7824b3c9c466eea4008fa52b", "text": "Returns int () of val if val is not convertable to int use default instead", "title": "", "metadata": ""}
{"_id": "74d3873ec7e3264053e53cef23b7e1aa", "text": "Return the length of s when it is encoded with base64 .", "title": "", "metadata": ""}
{"_id": "4b784f6c7880ddcccd2ffc2865615f21", "text": "Hacky workaround for old installs of the library on systems without python - future that were keeping the 2to3 update from working after auto - update .", "title": "", "metadata": ""}
{"_id": "fcfee4ece9d95c210d1475d52db32b1d", "text": "Clean up processes after SIGTERM or SIGINT is received .", "title": "", "metadata": ""}
{"_id": "2cd4336978b8ee6ae3fab27a081dd79b", "text": "Copy the lib items into our font .", "title": "", "metadata": ""}
{"_id": "199b4e5ae706e9911aca54fd1f781efc", "text": "Makes the list have unique items only and maintains the order", "title": "", "metadata": ""}
{"_id": "4c86e89f038922278c4c41a45cd1fe24", "text": "Convert json string representation into class instance .", "title": "", "metadata": ""}
{"_id": "16f7a71f5a8ddbab81de846602e020c1", "text": "Array of vector lengths", "title": "", "metadata": ""}
{"_id": "e5c4a08fa0008cedf98248d3109f339e", "text": "Check if all values in a sequence are equal .", "title": "", "metadata": ""}
{"_id": "e433ed8ea6668e4d7d1aacfa8c5d79f8", "text": "Same order unique list using only a list compression .", "title": "", "metadata": ""}
{"_id": "9622e9571c048d67f3f5dacff0aec624", "text": "remove arduino / examples / all directory .", "title": "", "metadata": ""}
{"_id": "520bebc089f0a6c3fe44d8efa359a267", "text": "Compute page boundary alignment : param int length : content length : rtype : int : return : aligned byte boundary", "title": "", "metadata": ""}
{"_id": "c4482769de0ae6f8779ad1331bc79d55", "text": "Read text from file automatically detect encoding . chardet required .", "title": "", "metadata": ""}
{"_id": "d01f79c371739ee3c70c3f70166e24a1", "text": "Convert a python_style_variable_name to lowerCamelCase .", "title": "", "metadata": ""}
{"_id": "e554d75d17cd580f745401100d9fd80e", "text": "Generate odd sized truncated Gaussian", "title": "", "metadata": ""}
{"_id": "1053a58427e1e39680c695ed3a40be3a", "text": "Integer dots per inch for the width of this image . Defaults to 72 when not present in the file as is often the case .", "title": "", "metadata": ""}
{"_id": "ca1477d7542ceb8f9543cab240b61fcb", "text": "Escapes a filesystem path for use as a command - line argument", "title": "", "metadata": ""}
{"_id": "8a854047b952ee7d880f2b3da25ba537", "text": "zfill ( x width ) - > string", "title": "", "metadata": ""}
{"_id": "c102c28db953bcce0d322903cb2e87b8", "text": "Merge two dicts and return a new dict . Much like subclassing works .", "title": "", "metadata": ""}
{"_id": "a2027cf009d1b5d12e6682c1e24be382", "text": "Returns a string representation of the traceback .", "title": "", "metadata": ""}
{"_id": "e0b41f92b079c5092a3b1a2f8e3a6c2e", "text": "Compress a file returning the new filename ( . gz )", "title": "", "metadata": ""}
{"_id": "0c25f929bb87b303609b15ee56ebb5f7", "text": "Convert datetime to epoch seconds .", "title": "", "metadata": ""}
{"_id": "bc358d5320717b24d841dc1209255b02", "text": "Handle many to many relationships", "title": "", "metadata": ""}
{"_id": "fb6172d939f08277e6245306ee6a6145", "text": "Return the length of the longest consecutive run of identical values .", "title": "", "metadata": ""}
{"_id": "7b86d10f69c43a86f1101c2ac9525eab", "text": "Cleans up the file entry .", "title": "", "metadata": ""}
{"_id": "bf509110ca183ed4c04426dc07455bb9", "text": "Get the label from the last line read", "title": "", "metadata": ""}
{"_id": "f4b6c554cbf7fe9655d2182f911a52e0", "text": "Confusion matrix plot", "title": "", "metadata": ""}
{"_id": "47463d718a8d5a9bfb34c689a6223887", "text": "Rearrange the heap after the item at position i got updated .", "title": "", "metadata": ""}
{"_id": "8f26eef7fa203bdbe525c3aac03828ed", "text": "Strip out namespace data from an ElementTree .", "title": "", "metadata": ""}
{"_id": "ca068ee970f7a29f9cb2a6ffbae54337", "text": "Get the category of the item .", "title": "", "metadata": ""}
{"_id": "02ad6945d4a2ab3effc8b89975a99426", "text": "Make a list a certain size", "title": "", "metadata": ""}
{"_id": "cbf7a8de3853bc70a83b719a96955460", "text": "If pyyaml > 5 . 1 use full_load to avoid warning", "title": "", "metadata": ""}
{"_id": "d7cda0e4e157623116817028b19210c5", "text": "Generalised logarithm", "title": "", "metadata": ""}
{"_id": "fc37bd15f67bb5f7d6ce6c9af378d6da", "text": ": param fileobj : a file object : return : a hash of the file content", "title": "", "metadata": ""}
{"_id": "766d0fde227e7257a996542a56909ca5", "text": "append item and print it to stdout", "title": "", "metadata": ""}
{"_id": "4fbe29fe4c080fc78323ae737674ae5f", "text": "Wrap vertical table in a function for TabularOutputFormatter .", "title": "", "metadata": ""}
{"_id": "8e7695979663dfbfcb743cab456c2592", "text": "Starts the web server .", "title": "", "metadata": ""}
{"_id": "8ae866d1520129512d14dbcd30f118d1", "text": "Makes a naive datetime . datetime in a given time zone aware .", "title": "", "metadata": ""}
{"_id": "ead6dc9990db14c495cbed6992b374bf", "text": "Get the modified time for a file as a datetime instance", "title": "", "metadata": ""}
{"_id": "355430c42a8c246b872bf853c213b452", "text": "Generate the lines of file in reverse order .", "title": "", "metadata": ""}
{"_id": "c82cf87245d68ca741bdf4a6a23ece7a", "text": "Called when a new DropDownItem gets selected .", "title": "", "metadata": ""}
{"_id": "16a94cef50656998e494740763d4da7a", "text": "Debug log messages if debug = True", "title": "", "metadata": ""}
{"_id": "bda6b2b02491d0a48bdb527606507a37", "text": "Pads the output with an amount of indentation appropriate for the number of open element .", "title": "", "metadata": ""}
{"_id": "e3959fdcb5c0a43b08db0c088fb3b5b3", "text": "Encodes a given string with the proper standard out encoding If sys . stdout . encoding isn t specified it this defaults to @default", "title": "", "metadata": ""}
{"_id": "90fdd32265fcf77f450ec7af3f995c85", "text": "Remove duplicities from deps list of the lists", "title": "", "metadata": ""}
{"_id": "579b56b87804fc4832f93b8db847bf95", "text": "Saves the dictionary in json format : param fname : file to save to", "title": "", "metadata": ""}
{"_id": "6abc30299cab5c2b177b5f90d689cd9e", "text": "Converts any object to JSON - like readable format ready to be printed for debugging purposes : param obj : Any object : return : string", "title": "", "metadata": ""}
{"_id": "0c5a6f5cb1b7188ca8c4adbbfae60693", "text": "Create a conda environment inside the current sandbox for the given list of dependencies and options .", "title": "", "metadata": ""}
{"_id": "1862fa0f9f7659dc731bde3fbfb17648", "text": "List of GPU device names detected by TensorFlow .", "title": "", "metadata": ""}
{"_id": "cba029a377b25ae9932b3ecda1ce951a", "text": "Raises an AssertionError if expected is actual .", "title": "", "metadata": ""}
{"_id": "fbc7e253c56282a87c277368b649fb34", "text": "Wrap a function as an attribute .", "title": "", "metadata": ""}
{"_id": "0fb7133161563fc63856f3ce7fa0902a", "text": "Remove punctuation from string s .", "title": "", "metadata": ""}
{"_id": "54840955c95cb1d1b8909561b53b468f", "text": "Return unique list of iterable items preserving order .", "title": "", "metadata": ""}
{"_id": "83e5da9e0e650a96170e59dfe56fb219", "text": "Instantiate a Pred from its quoted string representation .", "title": "", "metadata": ""}
{"_id": "c486752560a3e65bfb2b38cade00b9a8", "text": "rescales a numpy array so that min is 0 and max is 255", "title": "", "metadata": ""}
{"_id": "e473fe9ad2ac0674c91d611a2e35c3f2", "text": "Remove key from dict and return value .", "title": "", "metadata": ""}
{"_id": "a515c8ee17ffcf36718bd91957f73593", "text": "Find rightmost value less than x .", "title": "", "metadata": ""}
{"_id": "43a04efef0a9c5ffa8d241c7e91a1da1", "text": "Ensures that the argument is a list that either is empty or contains only strings : param arr : list : return :", "title": "", "metadata": ""}
{"_id": "24b12c7f7a5ab0677b2f82705a471500", "text": "Sets the proxy handler given the option passed on the command line . If an empty string is passed it looks at the HTTP_PROXY environment variable .", "title": "", "metadata": ""}
{"_id": "8fcb3ccf098cf15899be066b04f984ce", "text": "A map to look up the index of a edge", "title": "", "metadata": ""}
{"_id": "49cf040f27697bd267a17068b376a9be", "text": "Write the given colored string to standard out .", "title": "", "metadata": ""}
{"_id": "ba4d20e70ebc2036d8fda26dd3eac8b9", "text": "Download file from http url link", "title": "", "metadata": ""}
{"_id": "8d787e3eefa64d9b04fd040decb2eb54", "text": "Convert an OrderedDict containing C values to a 1D array .", "title": "", "metadata": ""}
{"_id": "52effd5c93b605701a11579188a2aabb", "text": "webargs error handler that uses Flask - RESTful s abort function to return a JSON error response to the client .", "title": "", "metadata": ""}
{"_id": "14d8201b7f69fa830334b22d87555a68", "text": "Return a stream handler if it exists .", "title": "", "metadata": ""}
{"_id": "6247e2d68a6d9b304663a758923cf8c0", "text": "Remove all accent from a whole string .", "title": "", "metadata": ""}
{"_id": "cf155298cc69be4d52c46b41b8c29cd6", "text": "Fetch a query argument as a boolean .", "title": "", "metadata": ""}
{"_id": "6980ec0aeb51eca99ad4d3b8802771ff", "text": "Seems to be significantly more expensive on cluster than locally", "title": "", "metadata": ""}
{"_id": "cfc36fb69c1242200d3ee968e40d351c", "text": "Return a JsonResponse . Make sure you have django installed first .", "title": "", "metadata": ""}
{"_id": "623269164564baca270d991615d2dd94", "text": "Make a list unique retaining order of initial appearance .", "title": "", "metadata": ""}
{"_id": "fa7e4cd38f0cb9b8d5a16ea752564df0", "text": "Shortcut fot boolean like fields", "title": "", "metadata": ""}
{"_id": "634218ac216e96c286cbaa34df0bc497", "text": "attempt to draw str on screen and ignore errors if they occur", "title": "", "metadata": ""}
{"_id": "b1bcf793e345d75aec2539465ab8b9a9", "text": "Round to sig figs", "title": "", "metadata": ""}
{"_id": "d79eafa1a52f97690268f2174eab38e7", "text": "Parses an HTTP date into a datetime object .", "title": "", "metadata": ""}
{"_id": "ea8a71e631b3534d911854efb32d3e5b", "text": "Args : points : ( nx4 ) x2 Returns : nx4 boxes ( x1y1x2y2 )", "title": "", "metadata": ""}
{"_id": "d9bbb8b6ff3b555622c7ed0ed56e07e2", "text": "Helper function to unpickle data from picklefile .", "title": "", "metadata": ""}
{"_id": "548730e15b06f832caee5acdb365a6e1", "text": "Get the CL log prior compute function .", "title": "", "metadata": ""}
{"_id": "1a07d3c45cc9651a7e3f750f1ab85a45", "text": "A standard compound hash .", "title": "", "metadata": ""}
{"_id": "89d3e09450434c616cd46ef91f1d8443", "text": "Get version information for components used by Spyder", "title": "", "metadata": ""}
{"_id": "f70e420555303d7cd0119099b7b2b10a", "text": "close socket immediately .", "title": "", "metadata": ""}
{"_id": "373410b775abe439cc18b832452409df", "text": "Makes a HEAD request to find the final destination of a URL after following any redirects", "title": "", "metadata": ""}
{"_id": "cae8acdb12a9b58f64a63f05349bfcb6", "text": "helper function used for joins builds left and right join list for join function", "title": "", "metadata": ""}
{"_id": "c1fa1b7f3bcc596bd44128ceb3e2a481", "text": "Show the x - axis tick labels for a subplot .", "title": "", "metadata": ""}
{"_id": "98174d45fbf960084cb399277ab9e916", "text": "Register the reporter classes with the linter .", "title": "", "metadata": ""}
{"_id": "fd210099602cfc5529204ded1726e77e", "text": "Set the serial port e . g . : / dev / tty . usbserial - A4001ib8", "title": "", "metadata": ""}
{"_id": "19854c61dc44b117b6757bd32a9312dd", "text": "Get the color of a given pixel", "title": "", "metadata": ""}
{"_id": "b8dacb4ec20f0c85175e76a7cf093e85", "text": "Remove resource instance from internal cache", "title": "", "metadata": ""}
{"_id": "2dbcc09527a8543ac6d4a2f0bb23949d", "text": "Utility to generate enum classes used by annotations .", "title": "", "metadata": ""}
{"_id": "eccbb69fa3f52e4a7365b262a420dca4", "text": "Converts text that may be camelcased into an underscored format", "title": "", "metadata": ""}
{"_id": "17f516ad87e2735cba537136632b9d68", "text": "Determine ES type names from request data .", "title": "", "metadata": ""}
{"_id": "9a0415c36bb4c3c5a0d489e160d6c6e4", "text": "Array of bytes", "title": "", "metadata": ""}
{"_id": "19b17d422fb34f0cced4b95255e25089", "text": "Checks if a string is quoted : param arg : the string being checked for quotes : return : True if a string is quoted", "title": "", "metadata": ""}
{"_id": "c6c4b58b2dcfc7012a0272250cf17450", "text": "Try to get a number out of a string and cast it .", "title": "", "metadata": ""}
{"_id": "825da2b5a3b2617c75583a6c9036c480", "text": "Connect to MySQL with retries .", "title": "", "metadata": ""}
{"_id": "5b344f70ab6adfe4d00359d0be70d012", "text": "Very simple grep that returns the first matching line in a file . String matching only does not do REs as currently implemented .", "title": "", "metadata": ""}
{"_id": "368f67fec030fa75786ca6fba6762cdd", "text": "Returns elapsed time at update .", "title": "", "metadata": ""}
{"_id": "c67b109fd751bf7e6bffcb0ecb552979", "text": "Ensure the cursor is within horizontal screen bounds .", "title": "", "metadata": ""}
{"_id": "d27acddd595a7555a12fc97955d36869", "text": "Wait until thread exit", "title": "", "metadata": ""}
{"_id": "9be5eb8c5eb3fe8a33e54269e62378df", "text": "Determines whether the passed value is a string safe for 2 / 3 .", "title": "", "metadata": ""}
{"_id": "257d2cbec171e8f4392232c55ac16d4d", "text": "https : // picamera . readthedocs . io / en / release - 1 . 13 / recipes1 . html#capturing - to - a - pil - image", "title": "", "metadata": ""}
{"_id": "1513aab74775ecbba0eb77b4002cc62f", "text": "Print a formatted indented text .", "title": "", "metadata": ""}
{"_id": "b1af86fe54bc41a4546db63fc4e41430", "text": "Returns the index of a geometry in a list of geometries avoiding expensive equality checks of in operator .", "title": "", "metadata": ""}
{"_id": "16247d7333e17509fc947ad6689494eb", "text": "Returns the index of the earliest occurence of an item from a list in a string", "title": "", "metadata": ""}
{"_id": "8d37320087758628196a7cbdee1e07a5", "text": "Construct the adjacency matrix of the tree : param tree : : return :", "title": "", "metadata": ""}
{"_id": "7bf3bf3b4e877148fdcddc65f00d86f1", "text": "Flatten a nested list by yielding its scalar items .", "title": "", "metadata": ""}
{"_id": "cedcfd87e184fcfe6fd853b0584146a5", "text": "Deprecated see make_2D_samples_gauss", "title": "", "metadata": ""}
{"_id": "f443d460f0054e7a8e946d844367c6cb", "text": "Determine if a year is leap year .", "title": "", "metadata": ""}
{"_id": "0d526ea574eefb11564d36a15b19e442", "text": "Return a list of all keys in the dictionary .", "title": "", "metadata": ""}
{"_id": "002b831385d7ea661d097318801028d7", "text": "Get targets for loadable modules .", "title": "", "metadata": ""}
{"_id": "15300ad84b8837e468411ed7ca7bf3c7", "text": "Removes non - alpha characters and converts spaces to hyphens . Useful for making file names . Source : http : // stackoverflow . com / questions / 5574042 / string - slugification - in - python", "title": "", "metadata": ""}
{"_id": "026bc95f1d6a040149350a4340108e7a", "text": "Raise this exception with the original traceback", "title": "", "metadata": ""}
{"_id": "c599c9adf80a444e7804816912053411", "text": "Print each field and its value .", "title": "", "metadata": ""}
{"_id": "5098a2662ac8e56cc93445234a455bb6", "text": "Utility function to remove duplicates from a list : param seq : The sequence ( list ) to deduplicate : return : A list with original duplicates removed", "title": "", "metadata": ""}
{"_id": "16e55639e8110a2f1d4a9f8370c30069", "text": "Reshape data into ( num_example batch_size )", "title": "", "metadata": ""}
{"_id": "7391865c5e6e060f739f6227e50af1fb", "text": "Parameters ---------- data_path : str", "title": "", "metadata": ""}
{"_id": "456f47ab7c7b38a24e4c6fa8cd232d88", "text": "Convert any array into a 2d numpy array .", "title": "", "metadata": ""}
{"_id": "72b028254fcd92972e5a7efdfecaba66", "text": "Given a list possibly nested to any level return it flattened .", "title": "", "metadata": ""}
{"_id": "c67b71f6e76b9adc2d193f767a436d20", "text": "Return dict mapping item - > indices .", "title": "", "metadata": ""}
{"_id": "e903ea481e7970542d301475fda09aaa", "text": "Load a texture from a file into a PIL image .", "title": "", "metadata": ""}
{"_id": "b76e36418d762c781199f7203cf10e34", "text": "Return peak memory usage in MB", "title": "", "metadata": ""}
{"_id": "000402ae7fcd320e80347a12a37449c4", "text": "Convert snake case to camel case", "title": "", "metadata": ""}
{"_id": "17abadb9b032550a9926c8aa3b8415a7", "text": "HParams for training languagemodel_lm1b32k_packed . 880M Params .", "title": "", "metadata": ""}
{"_id": "7c448ded2a2ec7f0ff09137c465ec3fb", "text": "Check if the string is only composed of hex characters .", "title": "", "metadata": ""}
{"_id": "9daa038792c05ec7dbc4e69fd33ab80a", "text": "Creates a datetime from GnuCash 2 . 6 date string", "title": "", "metadata": ""}
{"_id": "03bafa11ef8af8ccbe2bba487623fbd6", "text": "Original doc : A file to get the name of a file to save . Returns the name of a file or None if user chose to cancel .", "title": "", "metadata": ""}
{"_id": "dd067444d24131ac504e3dae5a6a9e31", "text": "Set a restore point ( copy the object ) then call the method . : return : obj . do_method ( * args )", "title": "", "metadata": ""}
{"_id": "33f9939f32ca55f703ba0e1870782924", "text": "Short Time Fourier Transform for complex data .", "title": "", "metadata": ""}
{"_id": "c9e4598c103e72e26eb4ddf5a5a4ac72", "text": "Adapts a Numpy array into an ARRAY string to put into the database .", "title": "", "metadata": ""}
{"_id": "7e8fc5af4249d227c84121d6fb5f7f9e", "text": "Note that the Executor must be close () d elsewhere or join () will never return .", "title": "", "metadata": ""}
{"_id": "7d4b0e2d4569654366d6d80eb1b3efa0", "text": "Yield directory file names .", "title": "", "metadata": ""}
{"_id": "47ef0d548694cee62cc21cb868306e07", "text": "Is the SQLAlchemy column type an integer type?", "title": "", "metadata": ""}
{"_id": "2f738ef39b3a1496e09f9b2485e4e195", "text": "When the with statement ends .", "title": "", "metadata": ""}
{"_id": "b3bad6ac5ce1cf5f237eea95284d16eb", "text": "Get list of all uppercase non - private globals ( doesn t start with _ ) .", "title": "", "metadata": ""}
{"_id": "b680e8616042f5ddc90245f1040c973c", "text": "Iterate through marshmallow schema fields .", "title": "", "metadata": ""}
{"_id": "76ef78fc6f36462ab4037936e945155e", "text": "Decorator for simple in - place decorator mocking for tests", "title": "", "metadata": ""}
{"_id": "69e1fdac90ac5cdb571a1d2c35e139a8", "text": "Return true if a value is a finite number .", "title": "", "metadata": ""}
{"_id": "bc1814e9833fa673af6c5ee7f673d235", "text": "Converts data back into original format .", "title": "", "metadata": ""}
{"_id": "54558912be3fe3334898a30efb1c254b", "text": "Render empty responses .", "title": "", "metadata": ""}
{"_id": "fcd82417092b064ddd21a5ffe94c6117", "text": "Serialize obj as a JSON formatted stream to fp", "title": "", "metadata": ""}
{"_id": "0991e8ce56c75692a906a0a48e90b603", "text": "Return the absolute path to the directory containing the package data .", "title": "", "metadata": ""}
{"_id": "13bdeacf771e0ba4b965ebcede92cc92", "text": "Splits on multiple given separators .", "title": "", "metadata": ""}
{"_id": "0ac1a8f224344c0b52157aff0e10254d", "text": "Move datetime 1 year in the chosen direction . unit is a no - op to keep the API the same as the day case", "title": "", "metadata": ""}
{"_id": "1f68d6a6a5675c3b4ab8b6a5d89d77f0", "text": "Format numpy array as a string .", "title": "", "metadata": ""}
{"_id": "5f8a170453f1c591adefad5354e28583", "text": "Is the last line of the cell a line with code?", "title": "", "metadata": ""}
{"_id": "0ee7b781d2a1db28b573c473e0e9a760", "text": "Return a cleaned string with token sorted .", "title": "", "metadata": ""}
{"_id": "b38ee17d0f039a2b66fafa1071e9453a", "text": "Checks if the string is a palindrome ( https : // en . wikipedia . org / wiki / Palindrome ) .", "title": "", "metadata": ""}
{"_id": "85e852bb1246a34f5ca365f46b136364", "text": "Project x and y", "title": "", "metadata": ""}
{"_id": "1572ec00ca4b5736b172467cfe2b3701", "text": "Conveinience :", "title": "", "metadata": ""}
{"_id": "2d019394059f913b795fd3671dd838c6", "text": "Joins a voice channel", "title": "", "metadata": ""}
{"_id": "8ab5f5f87a485e28230e5c6c413a65be", "text": "Take a str and transform it into a byte array .", "title": "", "metadata": ""}
{"_id": "bc1e1a7e9f55add2e428a478a0a38d8a", "text": "Transparently unzip the file handle", "title": "", "metadata": ""}
{"_id": "f2c0200efb9af4a06daae58f40a37c3f", "text": ": param sequence : Any sequence whose elements can be evaluated as booleans . : returns : true if all elements of the sequence satisfy True and x .", "title": "", "metadata": ""}
{"_id": "7a687c5df6ac2fd9137191e3ef78f2bd", "text": "Read a dictionary of strings from a file", "title": "", "metadata": ""}
{"_id": "9bf1907437620c133b170b3fce56e77c", "text": "Convert string in boolean", "title": "", "metadata": ""}
{"_id": "9c1415e6972241ca31db5c1d0a7150c4", "text": "Converts the string representation of a json number into its python object equivalent an int long float or whatever type suits .", "title": "", "metadata": ""}
{"_id": "bc004667992a866e6b9238288d657161", "text": "Uses CREATE INDEX CONCURRENTLY to create a duplicate index then tries to swap the new index for the original .", "title": "", "metadata": ""}
{"_id": "d9713c7d75579618656308c700bddfaa", "text": "Simple abstraction on top of the : meth : ~elasticsearch . Elasticsearch . scroll api - a simple iterator that yields all hits as returned by underlining scroll requests . By default scan does not return results in any pre - determined order . To have a standard order in the returned documents ( either by score or explicit sort definition ) when scrolling use preserve_order = True . This may be an expensive operation and will negate the performance benefits of using scan . : arg client : instance of : class : ~elasticsearch . Elasticsearch to use : arg query : body for the : meth : ~elasticsearch . Elasticsearch . search api : arg scroll : Specify how long a consistent view of the index should be maintained for scrolled search : arg raise_on_error : raises an exception ( ScanError ) if an error is encountered ( some shards fail to execute ) . By default we raise . : arg preserve_order : don t set the search_type to scan - this will cause the scroll to paginate with preserving the order . Note that this can be an extremely expensive operation and can easily lead to unpredictable results use with caution . : arg size : size ( per shard ) of the batch send at each iteration . Any additional keyword arguments will be passed to the initial : meth : ~elasticsearch . Elasticsearch . search call :: scan ( es query = { query : { match : { title : python }}} index = orders - * doc_type = books )", "title": "", "metadata": ""}
{"_id": "a91a9e67e0125dfe700fe9dba018bb59", "text": "Return random lognormal variates .", "title": "", "metadata": ""}
{"_id": "faaabe0cd2cc93e9cb43f04114658b89", "text": "Normalize the string according to normalization list", "title": "", "metadata": ""}
{"_id": "fa5e92a568112c9b37c1f494cb3fd93a", "text": "Tests if an object is a collection .", "title": "", "metadata": ""}
{"_id": "b6c819e88a219b0b0e66a934e1a978a2", "text": "Returns a stringified representation of this object .", "title": "", "metadata": ""}
{"_id": "2bbd8f054ef24f8a7e0264a8df1bf052", "text": "Bitwise xor on equal length bytearrays .", "title": "", "metadata": ""}
{"_id": "17de7ace4fb5c06a429433c43897d162", "text": "replace nan in a by val and returns the replaced array and the nan position", "title": "", "metadata": ""}
{"_id": "acf50db325a357bf56efae5b0c59221d", "text": "Match two names .", "title": "", "metadata": ""}
{"_id": "715aaf5e09ecea61efc9aa8208cb5afa", "text": "Random generator ( PyCrypto getrandbits wrapper ) . The result is a non - negative value .", "title": "", "metadata": ""}
{"_id": "220794a65ba588038772e3affcd6630d", "text": "Join list of columns into a string for a SQL query", "title": "", "metadata": ""}
{"_id": "c05424b899e8fac18301d15a8a0bcef0", "text": "Apply transformation and return if an update happened .", "title": "", "metadata": ""}
{"_id": "d344b8f452aced12b0a4f1078cf4b036", "text": "Transpose the columns into rows remove all of the rows that are empty after the first cell then transpose back . The result is that columns that have a header but no data in the body are removed assuming the header is the first row .", "title": "", "metadata": ""}
{"_id": "95f4f9c54195919ce1f534ac9e42203b", "text": "Take a date object and return the first day of the month .", "title": "", "metadata": ""}
{"_id": "dd6c8eee68a6f4a78251a5517fec0ac3", "text": "helper function for quick base conversions from strings to integers", "title": "", "metadata": ""}
{"_id": "cf14f54b3d6f291d6753c7f2d3e50d11", "text": "Start a Pdb instance at the calling frame with stdout routed to sys . __stdout__ .", "title": "", "metadata": ""}
{"_id": "c326aceb0c619acd496c6c87b592aeaf", "text": "position in 3d space", "title": "", "metadata": ""}
{"_id": "771a2491bf4cf0f8e4b235e74eabfb9d", "text": "Return an interable of nodes with no edges pointing at them . This is helpful to find all nodes without dependencies .", "title": "", "metadata": ""}
{"_id": "a6c2e53c75765d33a5cf490e60e3da20", "text": "Entry point for tappy command .", "title": "", "metadata": ""}
{"_id": "8e754a611b1ed31bdc8fdad89d715265", "text": "filter for dict note f should have signature : f :: key - > value - > bool", "title": "", "metadata": ""}
{"_id": "0cd5a02932f0bafb2fc803591aa169ba", "text": "Check if arguments are tuple type .", "title": "", "metadata": ""}
{"_id": "8a8643d2eb9c386175007d8e713f9004", "text": "Returns the size of remote files", "title": "", "metadata": ""}
{"_id": "197886c7eff407ab4a7dd23fe7197187", "text": "Removes all non - printable characters from a text string", "title": "", "metadata": ""}
{"_id": "4e7f9c33e933c88061346d56df8b1c06", "text": "Simplified check to see if the text appears to be a URL .", "title": "", "metadata": ""}
{"_id": "b93a578ba7ef1840d5be53e73ad376f4", "text": "Return index of the nth match found of pattern in strings", "title": "", "metadata": ""}
{"_id": "4b95401aeae1051044d3b0eb2d9a5426", "text": "Iterate through the results but if an exception occurs stop processing the results and instead replace the results with the output from the exception handler .", "title": "", "metadata": ""}
{"_id": "b7802bbf2314cc596860680c3373b4e8", "text": "Release the lock on the file .", "title": "", "metadata": ""}
{"_id": "fcd7264123c827b223abdbfb272dfeaa", "text": "Sets the value in the request cache if the django cached response was a hit .", "title": "", "metadata": ""}
{"_id": "5e9e88d6e2ceec6a45e30a3c2539a7bd", "text": "Split a text into separate words .", "title": "", "metadata": ""}
{"_id": "5023b5d47f71964d9dfa3b32a6780893", "text": "Go to parent directory", "title": "", "metadata": ""}
{"_id": "1eed98ee911a206a53df670999db0652", "text": "Print synchronized .", "title": "", "metadata": ""}
{"_id": "c46340ef68c9e12c12378921df1a756a", "text": "returns a function that extracts the value for a column .", "title": "", "metadata": ""}
{"_id": "a968a26bf4de4e8b17a4e80aaaff96a1", "text": "Calculate table chape considering index levels .", "title": "", "metadata": ""}
{"_id": "6879ed6c680ca2219e36ba880b5bf331", "text": "Test for greater than .", "title": "", "metadata": ""}
{"_id": "b5441017b2f1d96c55be8ce6bc19d104", "text": "Creates a variation from a base value", "title": "", "metadata": ""}
{"_id": "0a2024534cd207672614d222536b682e", "text": "Portable cast function .", "title": "", "metadata": ""}
{"_id": "5c7787f7a3ae592ad9b80c7b78430df2", "text": "Calculates the average value of a list of numbers Returns a float", "title": "", "metadata": ""}
{"_id": "b976d41a00f95cf9236298f753214b39", "text": "Return the number of days since January 1 of the given year .", "title": "", "metadata": ""}
{"_id": "328a2353e8ad0feb5ce30d7dbe274914", "text": "Return a list of dictionaries which are sorted for only unique entries .", "title": "", "metadata": ""}
{"_id": "cbd9eebc480746bd0394b1ceb7d902b8", "text": "This function executes the request with the provided json payload and return the json response", "title": "", "metadata": ""}
{"_id": "55a3700e46e007e2402dd1122289a8ba", "text": "Converts array into chunks with consecutive elements of given step size . http : // stackoverflow . com / questions / 7352684 / how - to - find - the - groups - of - consecutive - elements - from - an - array - in - numpy", "title": "", "metadata": ""}
{"_id": "38ee1496a0414523847b502de6fcfc52", "text": "Set x - axis limits of a subplot .", "title": "", "metadata": ""}
{"_id": "eb4c387a47ed0768c05d2042563787bb", "text": "Find the percentile of a sorted list of values .", "title": "", "metadata": ""}
{"_id": "6842e92054755a18465ca6e456040c94", "text": "Returns system clipboard contents .", "title": "", "metadata": ""}
{"_id": "64e6cd0085416d171f2ba8a944a66258", "text": "Similar to print but prints to stderr .", "title": "", "metadata": ""}
{"_id": "9dde69ff7f8b4b4d67a62dbe7f6d2d60", "text": "Removes object obj from the index .", "title": "", "metadata": ""}
{"_id": "820d5e6ae09ef43f6f26995f97e65712", "text": "Returns a list of keys in the database", "title": "", "metadata": ""}
{"_id": "73962d38eedad6487f7de966a2fa71be", "text": "Builds a resource object property .", "title": "", "metadata": ""}
{"_id": "3c30a5e01e699735ba81abcbfb1de2ec", "text": "Manually specify the x - axis log tick values .", "title": "", "metadata": ""}
{"_id": "d2da20e1c85bad37dbdcf43f54b9f79e", "text": "Calculate the size of x along axis dimensions only .", "title": "", "metadata": ""}
{"_id": "5f3d7c5849d78e3d45b3b04f17a0b3c9", "text": "Return locale from GET lang param or automatically .", "title": "", "metadata": ""}
{"_id": "4e5268653d4bfe7f09b82e391b279203", "text": "Matrix multiplication using binary", "title": "", "metadata": ""}
{"_id": "66be5c21ba1f19a1ec76413c027bf6b0", "text": "Get the current mouse location ( coordinates and screen number ) .", "title": "", "metadata": ""}
{"_id": "d5a0522500472c0717eac32ea7d3bac4", "text": "Connects to publisher", "title": "", "metadata": ""}
{"_id": "aede45f596f7660e79f0ab9d5a67151e", "text": "Concatenate list of columns into a string .", "title": "", "metadata": ""}
{"_id": "77b2587314fa9505f3223cdef6865327", "text": "Return child elements of type tagName if found else []", "title": "", "metadata": ""}
{"_id": "b8e4e4bddf794fa53064a66c62afe626", "text": "printdict", "title": "", "metadata": ""}
{"_id": "50171521e53bd3c7394fef451df7abfe", "text": "Creates a * Polygon * instance out of a list of lists each sublist being populated with pyowm . utils . geo . Point instances : param list_of_lists : list : type : list_of_lists : iterable_of_polygons : returns : a * Polygon * instance", "title": "", "metadata": ""}
{"_id": "f568c62399978aed73aa4115dbfff47c", "text": "Constructs an object holding a datetime / timestamp value .", "title": "", "metadata": ""}
{"_id": "9db2712c48a7836d7966149dcf9b1540", "text": "Return the SHA1 hash of the given a file - like object as file . This will seek the file back to 0 when it s finished .", "title": "", "metadata": ""}
{"_id": "0be9465bacd4da5fd8ee068818f27544", "text": "Ensure file deleted also on * Windows * where read - only files need special treatment .", "title": "", "metadata": ""}
{"_id": "54c978158b62f59b83377356b2e86a07", "text": "Correct text in one language that is incorrectly - typed with a keyboard layout in another language . ( type Thai with English keyboard )", "title": "", "metadata": ""}
{"_id": "3ff1ca146b122ab23368201caeda5861", "text": "Emulate lpop .", "title": "", "metadata": ""}
{"_id": "3756c4d6af28f41f6ab33bcd039eafbe", "text": "convert datetime / str to date : param arg : : return :", "title": "", "metadata": ""}
{"_id": "846aaa69eccd70b7d3f98184e8df6388", "text": "Write a dict to a JSON file .", "title": "", "metadata": ""}
{"_id": "bbda45a390a3bb14b89885dd407740ab", "text": "Check if value is a valid UUID .", "title": "", "metadata": ""}
{"_id": "b5e29c7cba0a56ec25372679a1028a33", "text": "convert an image by applying a contour", "title": "", "metadata": ""}
{"_id": "47724e4f1114c12f7e8eb4f9fc37db28", "text": ": return : int", "title": "", "metadata": ""}
{"_id": "46e884f32b8cd2671134f40f184baaa5", "text": "Get the last object in file .", "title": "", "metadata": ""}
{"_id": "b4b21be5241db8c9ab13c85489d20ac9", "text": "Convert human readable string to datetime . datetime .", "title": "", "metadata": ""}
{"_id": "29794d13d3d46c69d66946286409098d", "text": "Populates an object s attributes using the provided dict", "title": "", "metadata": ""}
{"_id": "7f17907f4f65aaeac0bf4fe359919b20", "text": "Direct access to byte data .", "title": "", "metadata": ""}
{"_id": "8d5c999d74c715a2ff33d5ae4ced17cd", "text": "Resets the combo box to the original selected value from the constructor ( or the first value if no selected value was specified ) .", "title": "", "metadata": ""}
{"_id": "58f49ab9555c0bee2bc0ef22425655b6", "text": "Return the fist ( left - hand ) digits in a string as a single integer ignoring sign ( + / - ) . >>> first_digits ( + 123 . 456 ) 123", "title": "", "metadata": ""}
{"_id": "c016271e6408881a80c97cec3a9a2f1a", "text": "Find the leftmost index of an element in a list using binary search .", "title": "", "metadata": ""}
{"_id": "bedee6b408bfac42d200edc07ac9986d", "text": "Returns the first day of the given month .", "title": "", "metadata": ""}
{"_id": "e3839aa9d155d6d28fa8b3051504dfcb", "text": "Return the number of dimensions of a tensor", "title": "", "metadata": ""}
{"_id": "1335bb4f4a9d53717047084108428b5a", "text": "Returns True if numbers in the list are consecutive", "title": "", "metadata": ""}
{"_id": "ce3b7e17489b4dc3850f9c8d5256154a", "text": "Determine with width in pixels of string .", "title": "", "metadata": ""}
{"_id": "134d7b0878de8d6b5b0fd00c9fc1c227", "text": "Merge all columns and place text string in widened cell .", "title": "", "metadata": ""}
{"_id": "5397b5385c376391e0deff77941db44a", "text": "Convolve 2d gaussian .", "title": "", "metadata": ""}
{"_id": "ab79b4adbeeb9a333d8a5a6eefb4043e", "text": "Resizes an image preserving the aspect ratio .", "title": "", "metadata": ""}
{"_id": "bc4ce058378a150590b45bd879c6ba7f", "text": "Get a list of the data types for each column in * data * .", "title": "", "metadata": ""}
{"_id": "97c6019234c8b356b3beec6c5656c770", "text": "Efficient cartesian product of a list of 1D arrays returning the expanded array views for each dimensions . By default arrays are flattened which may be controlled with the flat flag . The array views can be turned into regular arrays with the copy flag .", "title": "", "metadata": ""}
{"_id": "6e46656e681c2c758b6ff72f43434881", "text": "Set a related object for an instance .", "title": "", "metadata": ""}
{"_id": "ed3463d509c475a82f8f28c0f8503ba9", "text": "Get system root directory ( application installed root directory )", "title": "", "metadata": ""}
{"_id": "15d8f3735135d3db85f78073d9eb6d25", "text": "test if object is a list or tuple", "title": "", "metadata": ""}
{"_id": "15b34494511f1fefe3d453628249f262", "text": "Returns True if contents of the files are the same", "title": "", "metadata": ""}
{"_id": "1924afdc934a75895230364dab646a87", "text": "Normalize the length of a vector to one", "title": "", "metadata": ""}
{"_id": "f6c9d2fac50c5d2803f9a5b62776d411", "text": "Get object if child already been read or get child .", "title": "", "metadata": ""}
{"_id": "be45131e44ee2c94a3461829cd3ae458", "text": "Check if valid input tag or document .", "title": "", "metadata": ""}
{"_id": "07e71c28b806d1c0665bf34578ecc875", "text": "Configure a Domain registry entry .", "title": "", "metadata": ""}
{"_id": "ce321e077f6ca3afe02385e37d26f187", "text": "Get the parent directory of a filename .", "title": "", "metadata": ""}
{"_id": "a1f12af9972f2796c3f2c80b38dd2469", "text": "Dispatch all HTTP methods to the proxy .", "title": "", "metadata": ""}
{"_id": "bf0cf16523860dbdb88fa8813a04a39a", "text": "Asynchronously run the worker does not close connections . Useful when testing .", "title": "", "metadata": ""}
{"_id": "5a14a2a8b176bcdb3faacf42eae2a088", "text": "Return the number of bytes stored in the value of key within hash name", "title": "", "metadata": ""}
{"_id": "b406e901860f9802e5294d723e2a254d", "text": "Get the first sunday of a month .", "title": "", "metadata": ""}
{"_id": "bce364e2c43b882bbedc12d867fb9020", "text": "Return true if a value is an integer number .", "title": "", "metadata": ""}
{"_id": "7338001c877cb4caf93a580911124b4f", "text": "Returns symbol instances corresponding to variables of the current scope .", "title": "", "metadata": ""}
{"_id": "ab7e653af1d2ffae3d4f7f3e2bc5b17b", "text": "merge two dictionaries", "title": "", "metadata": ""}
{"_id": "b38d2d4198d21bacbd2ae1c236f49fa5", "text": "Strip trailing component trailing from content if it exists . Used when generating names from view classes .", "title": "", "metadata": ""}
{"_id": "81279f87de3fdfdb7baa3f36315d815f", "text": "Convert a list of strings to a list of integers .", "title": "", "metadata": ""}
{"_id": "1ba83e780b872b771482110df930b009", "text": "Write the configuration dictionary to an output file .", "title": "", "metadata": ""}
{"_id": "d5b0fb4cd246159eff4a92cf7e85af66", "text": "Shape a list of lists into the appropriate shape and data type", "title": "", "metadata": ""}
{"_id": "d869cafc02585212f5be2813d3fab293", "text": "Calculate how much variance in returns do the values explain", "title": "", "metadata": ""}
{"_id": "56fc497fc9619919e5435febc49007b5", "text": "Replace #hashtag and", "title": "", "metadata": ""}
{"_id": "dca68b52e77e07976df6d6b19c7c1f34", "text": "Return the modulo value .", "title": "", "metadata": ""}
{"_id": "1120847e55ae1a1f2ec7dbc5c611462e", "text": "Return the error rate based on dense predictions and 1 - hot labels .", "title": "", "metadata": ""}
{"_id": "ab63dae63b9e0a115688013c3dda7a2d", "text": "Turn a list into a comma - and / or and - separated string .", "title": "", "metadata": ""}
{"_id": "af9630f3fe57b3c8e19222fb3ca50e69", "text": "Create the empty database ( tables ) .", "title": "", "metadata": ""}
{"_id": "dbc342341ab0284fbe3c45f3dab69998", "text": "Places a legend box outside a matplotlib Axes instance .", "title": "", "metadata": ""}
{"_id": "caffccee6d03858b21734315d939ca68", "text": "Strip accents to prepare for slugification .", "title": "", "metadata": ""}
{"_id": "cdc1c17c5694ff830d10982441abb1cd", "text": "Remove duplicates from a list preserving the order .", "title": "", "metadata": ""}
{"_id": "e30b76e59f75a105f3433071935e25df", "text": "Get input from the user given an input function and an input string", "title": "", "metadata": ""}
{"_id": "71f88731ed1db7459a04824f48a53d3f", "text": "dict . update but which merges child dicts ( dict2 takes precedence where there s conflict ) .", "title": "", "metadata": ""}
{"_id": "20888bd65a93bf85fb2b9e3a588e6753", "text": "variance of the values must have 2 or more entries .", "title": "", "metadata": ""}
{"_id": "7e8d73fc559e15018d8dd1c12814b238", "text": "Convert native python datetime . date object to a format supported by the API", "title": "", "metadata": ""}
{"_id": "be9f0cb4c9fb84b13136094b22846487", "text": "Check if given function has more arguments than given . Call it with context as last argument or without it .", "title": "", "metadata": ""}
{"_id": "9050222841a9262678f10d7f102392b8", "text": "View the quaternion array as an array of floats", "title": "", "metadata": ""}
{"_id": "d7c7e8b62a73ba191a1ee8bb0ae4abe2", "text": "See the descritpion of : func : validate for more details of parameters and return value .", "title": "", "metadata": ""}
{"_id": "bea31043762eeeaf737994140609bdc3", "text": "Return the value of each QuerySet but also add the # property to each return item .", "title": "", "metadata": ""}
{"_id": "ad3274317d56bd8ddc3eaec14acdbdb1", "text": "Returns a bool determining if the process is in a running state or not", "title": "", "metadata": ""}
{"_id": "13129cc8622481b80bb605ad6a45308a", "text": "Retrun True if x is a valid YYYYMMDD date ; otherwise return False .", "title": "", "metadata": ""}
{"_id": "fc693e3dc699c1304568ef9e3e4fddda", "text": "Close our socket .", "title": "", "metadata": ""}
{"_id": "8b76c3b43eb95d923d6a5b4b6967089f", "text": "Convert an unsigned integer to a numpy binary array with the first element the MSB and the last element the LSB .", "title": "", "metadata": ""}
{"_id": "5f26b87f02eb3cf7759b4ace8be26c7e", "text": "calculate the fill similarity over the image", "title": "", "metadata": ""}
{"_id": "965d8206e2757edea7d3b8b9656c3284", "text": "Return the opposite of input condition .", "title": "", "metadata": ""}
{"_id": "58854f798e015e5f968190523a4261ae", "text": "Get a property by name", "title": "", "metadata": ""}
{"_id": "ac781bdfddd6d0dfde951f9e42f972cb", "text": "Random normal variates .", "title": "", "metadata": ""}
{"_id": "133d846156b3994ee5d18f029018852c", "text": "string dict / object / value to JSON", "title": "", "metadata": ""}
{"_id": "500da3e03238d790263c2b42fe3576b7", "text": "Helper method to check if a set of types is the { AnyObject } singleton", "title": "", "metadata": ""}
{"_id": "d01339853d48b88ad256d8413bfa58a5", "text": "Closes the connection", "title": "", "metadata": ""}
{"_id": "74c7369c20c53e8e2452907a973e630d", "text": "Sends a command and an ( optional ) sequence of arguments through to the delegated serial interface . Note that the arguments are passed through as data .", "title": "", "metadata": ""}
{"_id": "bd6cd1b9c885dc2421f0f6f691f0eebe", "text": "Removes stopwords contained in a list of words .", "title": "", "metadata": ""}
{"_id": "45da0891084c5c80cb742b93790b9a11", "text": "Strips a figure into multiple figures with a trace on each of them", "title": "", "metadata": ""}
{"_id": "c60b64e8e1afbf4d3dfe28fc2e8ebff4", "text": "Closes the serial port .", "title": "", "metadata": ""}
{"_id": "9e63efe37b374c3a8e774a0db3a830dc", "text": "This function should be called instead of direct spio . loadmat as it cures the problem of not properly recovering python dictionaries from mat files . It calls the function check keys to cure all entries which are still mat - objects", "title": "", "metadata": ""}
{"_id": "c1171893e58f67dcde51cde377d54803", "text": "Returns the directory path for the given package or module .", "title": "", "metadata": ""}
{"_id": "be7ea31b3226446fd000a4b837232a85", "text": "Update inplace widgets position when doing vertical scroll", "title": "", "metadata": ""}
{"_id": "9d00d0b23bd8e8fc3991fdd0652b96bd", "text": "Python version independent function to obtain the parameters of a typing . Callable object . Returns as tuple : args result . Tested with CPython 2 . 7 3 . 5 3 . 6 and Jython 2 . 7 . 1 .", "title": "", "metadata": ""}
{"_id": "d4648de47b980989bab12e735ec23b59", "text": "Returns the length of the list .", "title": "", "metadata": ""}
{"_id": "59a96d9b439b7c11f0c4741f4587b793", "text": "Login to a docker registry with write permissions", "title": "", "metadata": ""}
{"_id": "619c7f2b3584a81f2bbfaa83c2142afa", "text": "Convert an integer list into a string list .", "title": "", "metadata": ""}
{"_id": "2ae60c21fb4dbf3a4631280aa1bb4747", "text": "Convert column name to index .", "title": "", "metadata": ""}
{"_id": "d3367ad3e76e977aabf72f67735af755", "text": "Print out system information ( version MAC addrs ) .", "title": "", "metadata": ""}
{"_id": "61710457f96ab97d4a8291cb4b3c1b45", "text": "Helper funcation that converts text - based get response to tab separated values for additional manipulation .", "title": "", "metadata": ""}
{"_id": "b329a3c1105c61c50d419e3c60b5dd6f", "text": "Check if the currently running Python version is new enough .", "title": "", "metadata": ""}
{"_id": "f63d2132b472e0b02bfb9e6484716030", "text": "Helper function to add timezone information to datetime so that datetime is comparable to other datetime objects in recent versions that now also have timezone information .", "title": "", "metadata": ""}
{"_id": "2bc7065de2bb37121466103ab1758391", "text": "Return the extension if the filename has it . None if not .", "title": "", "metadata": ""}
{"_id": "3e182adbc441daee09de5195c663a4db", "text": "Adds self as child of parent then adds parent .", "title": "", "metadata": ""}
{"_id": "a12931125914364f17417d5f9e0c810a", "text": "Always line buffer stdout so pipes and redirects are CLI friendly .", "title": "", "metadata": ""}
{"_id": "cb4a23b6b9113be05d551702547a4c74", "text": "Move to the end of the input history i . e . the line currently being entered .", "title": "", "metadata": ""}
{"_id": "cdae68f2dd31aec728de817983928423", "text": "Helper function to read bytes until a certain end byte is hit", "title": "", "metadata": ""}
{"_id": "9d402136a0031796be2e0070d390f9e1", "text": "This is the same functionality as int . from_bytes in python 3", "title": "", "metadata": ""}
{"_id": "d6a0f136733896f9f5a1b814a697a1be", "text": "Return a list of values for the given selection .", "title": "", "metadata": ""}
{"_id": "24520e70d348e42f10423ce017abe3e6", "text": "Does openat read - only then does fdopen to get a file object", "title": "", "metadata": ""}
{"_id": "b35fd16c5ba421b76c4c61bc8e580ab6", "text": "Calculates the request payload size", "title": "", "metadata": ""}
{"_id": "7379a58cc55166cf4626fec140b9438b", "text": "Function that verify if the header parameter is a essential header", "title": "", "metadata": ""}
{"_id": "9b39de5080aa0330b96ab5daafb924e4", "text": "Sort files or folders by modified time", "title": "", "metadata": ""}
{"_id": "8db9d3da5c797c54ff65c312db98a87c", "text": "Convert a ctypes int pointer array to a numpy array .", "title": "", "metadata": ""}
{"_id": "73118067cdecdf2521ea23a732257cc7", "text": "Convert to lowercase and strip spaces", "title": "", "metadata": ""}
{"_id": "c82301e145710eb57d0444ad3599becc", "text": "Fill an array from a list", "title": "", "metadata": ""}
{"_id": "62aa7d74da20ea9cdcb2e19d4a3abbad", "text": "Set access and modification times on a file .", "title": "", "metadata": ""}
{"_id": "1f76cfa13783ba463251a891145b4053", "text": "Strip all the accents from the string", "title": "", "metadata": ""}
{"_id": "1361b90d6a24378481339cae98fbacb4", "text": "Returns the number of rows of the main dataframe", "title": "", "metadata": ""}
{"_id": "ec14289ed9dbecd08b313d8fca206d2e", "text": "r Clean up whitespace in column names . See better version at pugnlp . clean_columns", "title": "", "metadata": ""}
{"_id": "43df9854e6636f72c4f1c78f688c14ee", "text": ">>> _numbers_units ( 45 ) 123456789012345678901234567890123456789012345", "title": "", "metadata": ""}
{"_id": "4a1d2713e2b1e96043637de0912e31e0", "text": "determines whether the card number is valid .", "title": "", "metadata": ""}
{"_id": "eec7f43384f46d2d152bd25e27c8e58c", "text": "Clears the input and output buffers", "title": "", "metadata": ""}
{"_id": "d9cc16175451ded64d82f4262d490c32", "text": "Perform get request handling rate limiting .", "title": "", "metadata": ""}
{"_id": "74164a6f281edd77487304d49208b4c5", "text": "Returns a list copy in which each item occurs only once ( in - order ) .", "title": "", "metadata": ""}
{"_id": "31d9a1b4d16f4756eee563435fc50580", "text": "Return an SMTP servername guess from outgoing email address .", "title": "", "metadata": ""}
{"_id": "f04b23a50dfefac38d7c8ed0fce6e57c", "text": "Compare two strings while protecting against timing attacks", "title": "", "metadata": ""}
{"_id": "b533e0d1d3ea38fafd786a4734543e99", "text": "Similar to : attr : . Guild . me except it may return the : class : . ClientUser in private message contexts .", "title": "", "metadata": ""}
{"_id": "b02555ae57390cd95a8eaeedbbeaac6e", "text": "Remove an object from the bin folder .", "title": "", "metadata": ""}
{"_id": "a226c4658cd3a0297153799018fa5912", "text": "Run a demo doitlive session .", "title": "", "metadata": ""}
{"_id": "1b009ddf3fb73a0be5dab53d649efa9d", "text": "An argparse type representing an email address .", "title": "", "metadata": ""}
{"_id": "dfea6efd16f5291ac900e61b94c15be3", "text": "Move cursor to this line in the current buffer .", "title": "", "metadata": ""}
{"_id": "52bd437352a4bfda54616d29f912184d", "text": "Check the checkbox matching the CSS selector .", "title": "", "metadata": ""}
{"_id": "01928c8189a4485847beb6c5f54599ee", "text": "split string * s * into list of strings no longer than * length *", "title": "", "metadata": ""}
{"_id": "1e674eb78c6acb1228cf000c3d109024", "text": "Converts and image to matrix ( one pixel per line )", "title": "", "metadata": ""}
{"_id": "884563717c479650a2959b348cb86304", "text": "Convert a one element byte string to signed int for python 2 support .", "title": "", "metadata": ""}
{"_id": "3f33360cf9ee0cbdfa91b0ef9f3ff8cd", "text": "Sets the indent for standardized output : param message : ( str ) : return : ( str )", "title": "", "metadata": ""}
{"_id": "bbdd09cdde96d178ad3414ce3fddd76d", "text": "Add an object to Javascript .", "title": "", "metadata": ""}
{"_id": "2453ee645b6bc2c248751f3f131de4c5", "text": "Convert a date into a datetime", "title": "", "metadata": ""}
{"_id": "bad01cbfa582c2f366e5004dbd66d24c", "text": "Compute Pearson correlation coefficient .", "title": "", "metadata": ""}
{"_id": "91125fe3a023d476b52a8aa54bd5900f", "text": "returns json contents as string", "title": "", "metadata": ""}
{"_id": "2104b4c9acad2c225dec2672f24276cf", "text": "Test whether the current python environment is the correct lore env .", "title": "", "metadata": ""}
{"_id": "1efa69c9ba6b5c51cd3f0de2cb137aa5", "text": "Returns index tuple in histogram of bin which contains value", "title": "", "metadata": ""}
{"_id": "ee2dade7559c5c20d913a19016103dc9", "text": "Takes a list of rows and a column name and returns a list containing a single row ( dict from columns to cells ) that has the maximum numerical value in the given column . We return a list instead of a single dict to be consistent with the return type of select and all_rows .", "title": "", "metadata": ""}
{"_id": "1783c72ddc7e2d57fe19e0d84bed8fb5", "text": "Pretty print format some XML so it s readable .", "title": "", "metadata": ""}
{"_id": "4422664fec381ec903e883230b322a68", "text": "Apply the coefficients from a linear fit to an array of x y positions .", "title": "", "metadata": ""}
{"_id": "24cbed5881616adaa41419453da33260", "text": "Function for fast reading from sensor files .", "title": "", "metadata": ""}
{"_id": "18d604e6a6ee469a6aba7bb5dbdf7ba6", "text": "Json - serializable dict representation of PhononDos .", "title": "", "metadata": ""}
{"_id": "bb286963fca40371a59fbc782adfbc80", "text": "Returns unique values in a column", "title": "", "metadata": ""}
{"_id": "4e84b7467e5c1b1f14573a1026133c45", "text": "Guess string encoding .", "title": "", "metadata": ""}
{"_id": "681159330966aad6ffe1dab5a33eeaca", "text": "Implementaton of : func : scipy . linalg . cho_factor using a function supported in cupy .", "title": "", "metadata": ""}
{"_id": "d557558a955172a79cbddf442cae8c3f", "text": "cv2 Image of current window screen", "title": "", "metadata": ""}
{"_id": "69f6e8159af66758011a273664bd0a9d", "text": "Rotates an image by deg degrees", "title": "", "metadata": ""}
{"_id": "77010254763ec4260c52ed8b68c282a0", "text": "Join the given iterable with", "title": "", "metadata": ""}
{"_id": "825a1eb48c0b3088b8603d2a44d1d0bc", "text": "Removes // - comments and single - line C - style / * * / comments .", "title": "", "metadata": ""}
{"_id": "dc4529964ad1a4e6cf81797a1093efad", "text": "Special case of version () when the executable is a JAR file .", "title": "", "metadata": ""}
{"_id": "54252652c2a7b0a874b21061a975e301", "text": "Print out a neat targets dependency tree based on requested targets .", "title": "", "metadata": ""}
{"_id": "f2be669f0276b3058aa4e899e86c5d5d", "text": "Install Postgres on remote", "title": "", "metadata": ""}
{"_id": "5e4ff0386457fe32429b62e05c225757", "text": "Writes a DOT graphviz file of the domain structure and returns the filename", "title": "", "metadata": ""}
{"_id": "f62c0f5a0726a1c6c5466c1fef7787fb", "text": "Begins an indented block . Must be used in a with code block . All calls to the logger inside of the block will be indented .", "title": "", "metadata": ""}
{"_id": "5f6a3becfa3c5db75f97e851e9775ff7", "text": "gets a horiztonal line", "title": "", "metadata": ""}
{"_id": "5222d0a8dd1fbe38eb8bb299c7a1c39b", "text": "Applies the sofplus activation function element - wise to the input .", "title": "", "metadata": ""}
{"_id": "17fe76abce45e53951a3cc99f3f85246", "text": "Matches a paren .", "title": "", "metadata": ""}
{"_id": "1ac13c8d0d6cecf2faced183bde38cda", "text": "Take stderr bytes returned from MicroPython and attempt to create a non - verbose error message .", "title": "", "metadata": ""}
{"_id": "6e56870ef30cd2055dc746702de1a0c4", "text": "searchs a value in a dicionary and returns the key of the first occurrence", "title": "", "metadata": ""}
{"_id": "e5e8ba5a5a273b4803be4da0fceea4d3", "text": "Init a uniform noise variable .", "title": "", "metadata": ""}
{"_id": "03a9b148c3b58227fc25b62bf4df47c8", "text": "Apply a given function to the elements of one or several asynchronous sequences .", "title": "", "metadata": ""}
{"_id": "a7096072095434937473984e741edcd1", "text": "Underline the input", "title": "", "metadata": ""}
{"_id": "c36985f63b4caf41e27161fd4451b324", "text": "Set foreground - and background colors and intensity .", "title": "", "metadata": ""}
{"_id": "c54328d12e15e1d34485456e1f1afb33", "text": "Create a Qt application .", "title": "", "metadata": ""}
{"_id": "8107827c02a29e2203e8215d7e6b1f39", "text": "transform mongoengine . QuerySet to json", "title": "", "metadata": ""}
{"_id": "bdea862d4884f2869e1547a332859552", "text": "Set value in the pandas DataFrame", "title": "", "metadata": ""}
{"_id": "b243a6c66dfb6fcf4853e6ced0aeb27e", "text": "writes a string to file", "title": "", "metadata": ""}
{"_id": "c464d449cb31c8f04897555e08d51cc1", "text": "An auxiliary function to construct a dictionary of Criteria", "title": "", "metadata": ""}
{"_id": "a03f1f9b31cfcf884302194f09648885", "text": "Delayed close - won t close immediately but on the next reactor loop .", "title": "", "metadata": ""}
{"_id": "664f135d2ac1e9f75a3ce3de79ed2a0c", "text": "Write a single property to the file in Java properties format .", "title": "", "metadata": ""}
{"_id": "529ab5625afb648f5a6f14c8fc3b3300", "text": "When converting Spark SQL records to Pandas DataFrame the inferred data type may be wrong . This method gets the corrected data type for Pandas if that type may be inferred uncorrectly .", "title": "", "metadata": ""}
{"_id": "17277f0758573372d489056fd6cd54f4", "text": "remove decoded instruction from instruction cache", "title": "", "metadata": ""}
{"_id": "bb559df18b0f0fff2e084c26e25bbacd", "text": "Determine the largest contig for each strain : param contig_lengths_dict : dictionary of strain name : reverse - sorted list of all contig lengths : return : longest_contig_dict : dictionary of strain name : longest contig", "title": "", "metadata": ""}
{"_id": "1788549e67c9f988ac35d19f7d92c2d6", "text": "Simple merge of samplesets .", "title": "", "metadata": ""}
{"_id": "992169c4609c7dfd5e2f17ec02cb8ed7", "text": "Determine whether or not obj is iterable but not a string ( eg a list set tuple etc ) .", "title": "", "metadata": ""}
{"_id": "79e008ee123f8840b1076aef7597d99e", "text": "The relative path ( from environment root ) to python .", "title": "", "metadata": ""}
{"_id": "e1df22e5c3e9562ecc4d88e69cd331ca", "text": "* Get the root path for this python package - used in unit testing code *", "title": "", "metadata": ""}
{"_id": "ee914237464abb7573082801024f5860", "text": "Determines if value value is empty . Keyword arguments : value str -- the value of the associated field to compare", "title": "", "metadata": ""}
{"_id": "ff6c14da32b3c32d20cf305e2b5e6850", "text": "This function returns a pretty table used to display the port results .", "title": "", "metadata": ""}
{"_id": "5f91999a1c15db50645f23f6e7c7feb6", "text": "Determines if a system process identifer exists in process table .", "title": "", "metadata": ""}
{"_id": "7755154081b0515f5d0628c45a108e20", "text": "Transform an underscore_case string to a mixedCase string", "title": "", "metadata": ""}
{"_id": "28421cd69e12639b6fdc81188a1b51d4", "text": "Return a square grid with values of the distance from the centre of the grid to each gridpoint", "title": "", "metadata": ""}
{"_id": "88503808233fdbb302b2292227015156", "text": "Return an enum from a name Args : enum_name ( str ) : name of the enum Returns : Enum", "title": "", "metadata": ""}
{"_id": "a26541eeeabdde827503b26c6678ae87", "text": "Return True if the queue is full False otherwise ( not reliable! ) .", "title": "", "metadata": ""}
{"_id": "9b440613b93bdd1b8a3cff05dce829e8", "text": "Refresh the screen . You don t need to override this except to update only small portins of the screen .", "title": "", "metadata": ""}
{"_id": "c583b70a4ad3b0fa1818b3389da42551", "text": "Accurate float rounding from http : // stackoverflow . com / a / 15398691 .", "title": "", "metadata": ""}
{"_id": "52bae8557c1ed2a5d198cbdcd1524538", "text": "dialogue box for choosing directory", "title": "", "metadata": ""}
{"_id": "dcae8971c70f7d24b314df11e4510e2b", "text": "Integer to two bytes", "title": "", "metadata": ""}
{"_id": "2160a06cd61846c1cfcad5de73d1d24a", "text": "get rid of parenthesis around timezone : ( GMT ) = > GMT", "title": "", "metadata": ""}
{"_id": "e8db14e3a5a9932bbff38777155f312c", "text": "Get an appropriate null value for this field s type . This is used internally when setting the field to None .", "title": "", "metadata": ""}
{"_id": "6ce8e54bddf1ccd017d2f00bd0ca67b4", "text": "Converts SoftLayer . CLI . formatting . Table instance to a prettytable .", "title": "", "metadata": ""}
{"_id": "714bce8a521fe6523084bb9bc31808c6", "text": "Returns a list of all the image s colors .", "title": "", "metadata": ""}
{"_id": "c1ca20ab735b12ed1fb4888dd3f33417", "text": "Turn dict keys and values into native strings .", "title": "", "metadata": ""}
{"_id": "aec7b2e81f5ec41c6a142eec30bfe353", "text": "Return a random string of ASCII letters and digits .", "title": "", "metadata": ""}
{"_id": "b09d42dcb7fd5d2490c7a5e6299bdafc", "text": "wrapper to search_s", "title": "", "metadata": ""}
{"_id": "4be4822231e63fa1582cfd505870091e", "text": "Convert a one - hot encoded array back to string", "title": "", "metadata": ""}
{"_id": "7c50d5effe59afd7cfb1cc2edefcc209", "text": "Remove and return the item at index .", "title": "", "metadata": ""}
{"_id": "7fdc4472a6e79d6b7abdc8169f75d152", "text": "Call Java Function", "title": "", "metadata": ""}
{"_id": "13c2ded48d4bc2351ab673dd7dcc262b", "text": "Returns the media - type of the file at the given filepath", "title": "", "metadata": ""}
{"_id": "99c784a9b4504bf2d528e3731f437233", "text": "Boolean property if this action has expired", "title": "", "metadata": ""}
{"_id": "331c97196cc18cb87dc85ca41826aa0f", "text": "Sorting logic for Quantity objects .", "title": "", "metadata": ""}
{"_id": "9c96b39756a52af9bf78549facd2b1e1", "text": "Wrapper for inserting float features into Example proto .", "title": "", "metadata": ""}
{"_id": "11801cc959015415a2cd76bf4257b5a4", "text": "Print object information using a namedtuple and a format pattern .", "title": "", "metadata": ""}
{"_id": "b60dce1f4077f126e068f6fc2f52d0cb", "text": "Download the page into a string", "title": "", "metadata": ""}
{"_id": "5fb3eadb978977e4c72a874977cbe050", "text": "Converts binary address to Ipv6 format .", "title": "", "metadata": ""}
{"_id": "345bd1a243cacbe67ecd7c69d2cfa2ed", "text": "Shutdown the service with a reason .", "title": "", "metadata": ""}
{"_id": "249a16ed624b1b20f088b71e3798f44a", "text": "Old style use JSONTemplateResponse instead of this .", "title": "", "metadata": ""}
{"_id": "0486ef7e41c77272aa97c06501a5ec5b", "text": "Output all sections of the page .", "title": "", "metadata": ""}
{"_id": "c43f802faba216c00365f2a39f32e343", "text": "Scale the image in a channel . Also see : meth : zoom_to .", "title": "", "metadata": ""}
{"_id": "f587242b21761d2c84ac931a2a8963a3", "text": "Locate the command s man page .", "title": "", "metadata": ""}
{"_id": "bab6c52bdd9eca10160ca7f1750df483", "text": "Extract a numpy array from a base64 buffer", "title": "", "metadata": ""}
{"_id": "80bd0e4e46aef9e923de0cfaaf35a7f6", "text": "Google AppEngine Helper to convert a data type into a string .", "title": "", "metadata": ""}
{"_id": "a1807fcee4360eee7dfe3a205d2eedaa", "text": "Return true if the object is any kind of function or method .", "title": "", "metadata": ""}
{"_id": "5dd3bdaca83d114b3910da35b16f9b42", "text": "Returns sequence of integer ids given a sequence of string ids .", "title": "", "metadata": ""}
{"_id": "bf182d3fd39f45fca6c74bfdad88af84", "text": "Scroll element into view", "title": "", "metadata": ""}
{"_id": "f4570278dd01ebccb743d08ee6fbeeab", "text": "given an Nxm matrix containing boundary info between simplices compute indidence info matrix not very reusable ; should probably not be in this lib", "title": "", "metadata": ""}
{"_id": "33581bea49b971caa4b914be30d254fb", "text": "Delete a directory if it s present . If it s not present no - op .", "title": "", "metadata": ""}
{"_id": "f1978a104bc153b6eb368aac8f80352d", "text": "Converts a string to a datetime .", "title": "", "metadata": ""}
{"_id": "7c703cd125432b2c7450d1a76dbbbb08", "text": "Invert mapping of dictionary ( i . e . map values to list of keys )", "title": "", "metadata": ""}
{"_id": "8037d820989dde51cf6d1a9c96724ce7", "text": "Search tuple array by index and value : param t : tuple array : param i : index of the value in each tuple : param v : value : return : the first tuple in the array with the specific index / value", "title": "", "metadata": ""}
{"_id": "fd720ceae465f61cee6d304b7f5ab5c1", "text": "Version of load_result for multiple input files that will be loaded concurrently .", "title": "", "metadata": ""}
{"_id": "3bb3d91d3ed5bc6cbd284a07a4a558ab", "text": "Determine whether a system service is available", "title": "", "metadata": ""}
{"_id": "44f21e3a6ca07f173474358a800a6a33", "text": "Returns a string for various input types", "title": "", "metadata": ""}
{"_id": "9a0b515dd2d9ece35c23dffd5b287d12", "text": "Skip the specified number of elements in the list .", "title": "", "metadata": ""}
{"_id": "dc60e6d618a36eaeb1ac0d335da447e2", "text": "Show revision list", "title": "", "metadata": ""}
{"_id": "e40b454d6255fe49871966ea1ddccfd6", "text": "Checks if the king of the other side is attacked . Such a position is not valid and could only be reached by an illegal move .", "title": "", "metadata": ""}
{"_id": "414527a606e787af04cf0e2f95301ef3", "text": "Return sanitized Eidos text field for human readability .", "title": "", "metadata": ""}
{"_id": "116198be7f8aed0efacc7e20577c5e3c", "text": "Delete this message", "title": "", "metadata": ""}
{"_id": "7e91b56f2d6e21e95115cdcc1b7532b8", "text": "Log all data received from RFLink to file .", "title": "", "metadata": ""}
{"_id": "8d80601672c22c0addd39179c95a8acf", "text": "Replace one entire document matching the selector criteria .", "title": "", "metadata": ""}
{"_id": "2d3710568ff86baf7149fbc2488a3a54", "text": "Swap the methods atom to include method with key .", "title": "", "metadata": ""}
{"_id": "bec5b4a485c0d54cd3f2d7ac7ceea5a4", "text": "Returns nr of first entry parseable to float in ll None otherwise", "title": "", "metadata": ""}
{"_id": "a61b9651195183b4e0f168c081290b29", "text": "Helper to run tasks in the event loop", "title": "", "metadata": ""}
{"_id": "e40eeec8a28181c2c25a15ac7f7bd2b1", "text": "Convert list of key value lists to dict", "title": "", "metadata": ""}
{"_id": "e575f7412d1276340ea742c5f4e36016", "text": "Hacked run function which installs the trace .", "title": "", "metadata": ""}
{"_id": "413a7bd3d4d59da89a1e533ae7320258", "text": "Compile the pattern to regex .", "title": "", "metadata": ""}
{"_id": "ea3ee7e12aa47e3358dd3a2fe65b0924", "text": "Remove unwanted list indices . First argument is the list of indices to remove . Other elements are the lists to trim .", "title": "", "metadata": ""}
{"_id": "67993b048bc250e9974fbe042a9e52d7", "text": "Traverse parent refs to top .", "title": "", "metadata": ""}
{"_id": "a839c881400b76c89db2807e9bebc0b5", "text": "decorator to convert a method taking a iterable to a * args one", "title": "", "metadata": ""}
{"_id": "1faca0892b29b1763d178400216e06b7", "text": "Tries to encode images with ffmpeg to check if it works .", "title": "", "metadata": ""}
{"_id": "2630916110b8e69ad544d55f941a0e10", "text": "Change a date string from the format 2018 - 08 - 15T23 : 55 : 17 into a datetime object", "title": "", "metadata": ""}
{"_id": "72047ead5b25316cf2390339c839bf56", "text": "Displayhook function for PIL Images rendered as PNG .", "title": "", "metadata": ""}
{"_id": "496b4b9244c79b1c239d25908227b36f", "text": "Split a sentence into list of words .", "title": "", "metadata": ""}
{"_id": "878b0499a9560d3804a729114f3f39ef", "text": "Returns a list of all predecessors of the given node", "title": "", "metadata": ""}
{"_id": "4a8b460e5e78285383ba8a907fa9d75a", "text": "Converts an ARRAY string stored in the database back into a Numpy array .", "title": "", "metadata": ""}
{"_id": "a45dfca630c896c1d134aa5970188e7b", "text": "Get the id of the last written row in table", "title": "", "metadata": ""}
{"_id": "ed6d2b93c8c2a152ab24495eddc6053d", "text": "Write image data to PNG JPG file", "title": "", "metadata": ""}
{"_id": "ee7a5bc47a7684d9dd0b9246f42eae47", "text": "r This function chooses whether to use ascii characters to represent a symbolic expression in the notebook or to use sympy s pprint .", "title": "", "metadata": ""}
{"_id": "4740b1d8decb0805d70242866cf18b05", "text": ": param dt : pythone datetime . datetime : return : 1999 - 02 - 01 string type", "title": "", "metadata": ""}
{"_id": "be7af047ae3749e5fc08bf908be59044", "text": "Parse the input JSON data string into a python data structure . Args : data : An input data string lexer : An optional ply . lex instance that overrides the default lexer . Returns : A python dict or list representing the input JSON data .", "title": "", "metadata": ""}
{"_id": "52388ae103aaa9350700665474ccc633", "text": "Return a dict from entries in a scala . collection . immutable . Map", "title": "", "metadata": ""}
{"_id": "d6cda59fc75b01eb8038984bff16d4b1", "text": "Calcuate mean datetime from datetime list", "title": "", "metadata": ""}
{"_id": "96b85ca971f6f163a60143c4de233d78", "text": "Find the bounding box around nonzero elements in the given array", "title": "", "metadata": ""}
{"_id": "aa51681283cdee6e17f41220bb97a49a", "text": "Return the singular form of a word the reverse of : func : pluralize .", "title": "", "metadata": ""}
{"_id": "eba96f5c1907a77a80ef4caf0795df7e", "text": "Returns the item that appears most frequently in the given list .", "title": "", "metadata": ""}
{"_id": "967d51bfc406217454ba9895873916bf", "text": "Checks whether the remote file exists .", "title": "", "metadata": ""}
{"_id": "63babe86fe10e18872640b683c6e3cf5", "text": "Assumes myList is sorted . Returns closest value to myNumber . If two numbers are equally close return the smallest number .", "title": "", "metadata": ""}
{"_id": "42a5dce46d305df722497d209cc887b6", "text": "Recieving the JSON file from uulm", "title": "", "metadata": ""}
{"_id": "3c7a9d54495f4779458cf546d7241416", "text": "get the number of quartets as n - choose - k . This is used in equal splits to decide whether a split should be exhaustively sampled or randomly sampled . Edges near tips can be exhaustive while highly nested edges probably have too many quartets", "title": "", "metadata": ""}
{"_id": "79fa35ece78246009ffb20240569ef86", "text": "Creates a yaml file with the given content .", "title": "", "metadata": ""}
{"_id": "86ddccb6dbd24dcfd9b17d53c7f0cabb", "text": "Closes the session to the database .", "title": "", "metadata": ""}
{"_id": "f86f82163b9d0f4e90585710eeaacc32", "text": "non - recursively break spaces and remove newlines in the tag", "title": "", "metadata": ""}
{"_id": "e8a2c6c3d1316780ea79a7e63e3c10a1", "text": "Return a tuple of strings that match the regular expression pattern .", "title": "", "metadata": ""}
{"_id": "ffa2c629ff275296fe68f7556a703819", "text": "StringIO constructor shim for the async wrapper .", "title": "", "metadata": ""}
{"_id": "01c1bf8b90b3fa85b1f0a1866949647b", "text": "add arrow to plot", "title": "", "metadata": ""}
{"_id": "7815eddbfdd9f47aa08554d55c7cb0b0", "text": "Saves the case as an Excel spreadsheet .", "title": "", "metadata": ""}
{"_id": "69fe272c5704dd6e068ae1408797936d", "text": "left button down : report x y coords start zooming mode", "title": "", "metadata": ""}
{"_id": "d648779428304fc879e1ecf125610559", "text": "Register callbacks for button press events and selection changed", "title": "", "metadata": ""}
{"_id": "dcd9fa5d344512d3ca26f60295f5c7c6", "text": "Check for filelikeness of an object .", "title": "", "metadata": ""}
{"_id": "23b02109bc00d01dffc35ab136ea7b5f", "text": "Clean up after connection failure detected .", "title": "", "metadata": ""}
{"_id": "5f3dc51d918bc75c1f75bb0c23efba24", "text": "Checks if the given thing represents a date", "title": "", "metadata": ""}
{"_id": "efd5691f2b5dbc6da5fad4ca8e6d2ccc", "text": "Make a n + 1 dim one - hot array from n dim int - categorical array .", "title": "", "metadata": ""}
{"_id": "cec177e7a145f3c4ca39f40e8f76c1a3", "text": "Get the file size of a given file", "title": "", "metadata": ""}
{"_id": "4c4bc4f07db31b94e4c590b29e2d440d", "text": "Increments the main progress bar by amount .", "title": "", "metadata": ""}
{"_id": "fc0311213bc50b58a93b0bac849dfe1d", "text": "reads an RDF file into a graph", "title": "", "metadata": ""}
{"_id": "0850b3d77df11056d8c779d84b30edd5", "text": "Main window move event", "title": "", "metadata": ""}
{"_id": "5b84b7f1fbb9d554d2abd025e1cfddda", "text": "Return index of sub_string in string .", "title": "", "metadata": ""}
{"_id": "20066ac783a486b35092865339e099af", "text": "Returns the variable set with the given name .", "title": "", "metadata": ""}
{"_id": "a3380735487ec9cb53550f0d261472fc", "text": "Cast integer and strings to timestamps", "title": "", "metadata": ""}
{"_id": "ab8d1c0fecd8089e9dae63a7c82958bf", "text": ">>> _isbool ( True ) True >>> _isbool ( False ) True >>> _isbool ( 1 ) False", "title": "", "metadata": ""}
{"_id": "05455fb729464d62b2d0d941b4fc1c37", "text": "x is a 2D sparse matrix with it s first shape equal to 1 .", "title": "", "metadata": ""}
{"_id": "e3e7e3cffcb1d495f757f0aa173ea66f", "text": "Checks if a given string is an url", "title": "", "metadata": ""}
{"_id": "ac57d01a329d77df1bfe86bae6f659b4", "text": "Get the value of a local variable somewhere in the call stack .", "title": "", "metadata": ""}
{"_id": "6a95abeeefdaa1a63b1614a568128e52", "text": "Draw header with underline", "title": "", "metadata": ""}
{"_id": "fa6b2abe907b344400650571ba38dfff", "text": "Encodes a list of strings to a single string . : type strs : List [ str ] : rtype : str", "title": "", "metadata": ""}
{"_id": "68114fa11dd01eeaa9a432e8e0a0c4d8", "text": "Generate a list of words given text removing punctuation .", "title": "", "metadata": ""}
{"_id": "cef6ffe8fa5b01bb4bb79b2373572332", "text": "Returns file group s create aware * datetime * in UTC format .", "title": "", "metadata": ""}
{"_id": "5d5a54509b1ac2e5cb7acbb02e3ad76b", "text": "If given environment key is defined print it out .", "title": "", "metadata": ""}
{"_id": "0048899ac45cba2f8dc3e5a8b6a2aabe", "text": "Centre and normalize a given array .", "title": "", "metadata": ""}
{"_id": "d07973e9a23d9765f628117edcda6aa9", "text": "Utility function to print sqlite queries before executing .", "title": "", "metadata": ""}
{"_id": "d3ba4f613f4a42108e525aa761c14cad", "text": "Temporarily hide the terminal cursor .", "title": "", "metadata": ""}
{"_id": "cb204eb5a288ed758eb28cce3ea78c83", "text": "Run the unit tests .", "title": "", "metadata": ""}
{"_id": "be691559b2da91e1067a11b2eb8368b0", "text": "Sorts the rows of a matrix by hierarchical clustering .", "title": "", "metadata": ""}
{"_id": "1fecde45bd8f881a89a12cabf515e6ae", "text": "Check whether the provided value is a valid enum constant .", "title": "", "metadata": ""}
{"_id": "3236581c59cd8d5949679d5f6f5795c8", "text": "Writes log out at any arbitray level .", "title": "", "metadata": ""}
{"_id": "6cee68cd4b46fe00a6c1e4ede7ca4e55", "text": "Return True if object is defined", "title": "", "metadata": ""}
{"_id": "91cd64b1d78437107d00a533c2404c2a", "text": "Calculate the MD5 hash for a file .", "title": "", "metadata": ""}
{"_id": "9d9239b0c15222b3934e18db6db7376d", "text": "return the usage string for available options", "title": "", "metadata": ""}
{"_id": "507537bdae8c843a5ee13f3ec2b37818", "text": "Indent a piece of text .", "title": "", "metadata": ""}
{"_id": "feaef72a3f60ece7c073cb20c332244e", "text": "SQLite3 doesn t support direct truncate so we just use delete here", "title": "", "metadata": ""}
{"_id": "5ad2cd03374b568ab840266892ba2dd0", "text": "Try to return a path to static the static files compatible all the way back to Django 1 . 2 . If anyone has a cleaner or better way to do this let me know!", "title": "", "metadata": ""}
{"_id": "dd01128e4f98c6b0977ac537d478c171", "text": "Private method for setting axis limits .", "title": "", "metadata": ""}
{"_id": "bdadb0a947cced36e2a059b4ab96557a", "text": "Check if arguments are complex numbers .", "title": "", "metadata": ""}
{"_id": "f84718e32a81a61a37dcd4bbb803b06b", "text": "prints the top n lines of a file", "title": "", "metadata": ""}
{"_id": "dc9bf240c47b37b4521d466d540e1ec7", "text": "r Given a list of nested lists of arbitrary depth returns a single level or flat list .", "title": "", "metadata": ""}
{"_id": "d2470545fafcaa2f796dc8298b9c5f83", "text": "Delete all the files and subdirectories in a directory .", "title": "", "metadata": ""}
{"_id": "d9164e1c0b87a945e2c5aa9b4ad1662e", "text": "r Checks if l is iterable and contains only integral types", "title": "", "metadata": ""}
{"_id": "a04654034f0046907715f4cd5ee1729e", "text": "Fetch a subset of randomzied GUIDs from the whitelist", "title": "", "metadata": ""}
{"_id": "0b85e83d9a879c6e35de0bf6041f8d57", "text": "Takes in an object and a variable length amount of named attributes and checks to see if the object has each property . If any of the attributes are missing this returns false .", "title": "", "metadata": ""}
{"_id": "01fb0148e407d184b58aad4cfa4f7cb9", "text": "Takes a list of point objects ( which must have x and y fields ) . Returns a list of 3 - tuples : the indices of the points that form a Delaunay triangle .", "title": "", "metadata": ""}
{"_id": "1c27d29828ed410086437a61cd80f951", "text": "Perform log transform log ( x + 1 ) . Parameters ---------- data : array_like", "title": "", "metadata": ""}
{"_id": "e7f523bb7503a86a5ed3f791fbbcaaa2", "text": "Checks if invoking supplied clang - apply - replacements binary works .", "title": "", "metadata": ""}
{"_id": "747e1c1a721f8c9a96e7ce63d21df465", "text": "Pretty print a CSV file .", "title": "", "metadata": ""}
{"_id": "e534a51aa9347d613ad1b9a3ce8c35d9", "text": "Move the cursor to the last item on the page .", "title": "", "metadata": ""}
{"_id": "41c91fcb5e0184a683fe4fcb9921d535", "text": "Close all files but the current one", "title": "", "metadata": ""}
{"_id": "75a590439355d57bca09a254b3b11a23", "text": "Attribute referencing the root node of the tree .", "title": "", "metadata": ""}
{"_id": "00a131ba4a1ff16233d655708eea807a", "text": "A more low - level form of open_websocket_server . You are responsible for closing this websocket .", "title": "", "metadata": ""}
{"_id": "36e1f1c4cb605ab3b89382816bd90802", "text": "Get mnist dataset with features and label as ndarray . Data would be downloaded automatically if it doesn t present at the specific location .", "title": "", "metadata": ""}
{"_id": "3376564ad57936115d7bc227b3d56113", "text": "Returns a boolean indicating if the code is executed inside softimage .", "title": "", "metadata": ""}
{"_id": "2ed383558d6b88dd7d9eb9d1b0c793c6", "text": "Execute the given multiquery .", "title": "", "metadata": ""}
{"_id": "a0104d2dfb5977e492b1a5ea32792d0a", "text": "Add a menu entry .", "title": "", "metadata": ""}
{"_id": "ac8f36a65e893ea3974817779270000e", "text": "Clean a pandas dataframe by : 1 . Filling empty values with Nan 2 . Dropping columns with all empty values", "title": "", "metadata": ""}
{"_id": "6607b2d6852552fd39975f2e56e08e3b", "text": "Read a WAV file and returns the data and sample rate", "title": "", "metadata": ""}
{"_id": "679c5e0eada1f077a9416207dc19aa0c", "text": "Python2 accumulate implementation taken from https : // docs . python . org / 3 / library / itertools . html#itertools . accumulate", "title": "", "metadata": ""}
{"_id": "36bed9e1c74ac8a5dd8c76673630c2de", "text": "Key function used to sort transcripts . Taking the negative of protein sequence length and nucleotide sequence length so that the transcripts with longest sequences come first in the list . This couldn t be accomplished with reverse = True since we re also sorting by transcript name ( which places TP53 - 001 before TP53 - 002 ) .", "title": "", "metadata": ""}
{"_id": "9b4a2ea7ee60aa8e2069f449c41b3347", "text": "A dict of members expressed in literals", "title": "", "metadata": ""}
{"_id": "7028c9237eddefb65b706b56b19a6738", "text": "List all available backends .", "title": "", "metadata": ""}
{"_id": "b881baa159bc586b9e05a6cf0ab315c6", "text": "Calculates perplexity by loss", "title": "", "metadata": ""}
{"_id": "f910cf743dc63cc8b26e14cb0c68a053", "text": ": return Jinja sbatch template for the current tag", "title": "", "metadata": ""}
{"_id": "d262a686f06811e60a95aadafe6b7f1e", "text": "Return only future Day objects .", "title": "", "metadata": ""}
{"_id": "94799d6cffe09ff0e90e2f8d1d89d3ca", "text": "One dimenional log parabola model function", "title": "", "metadata": ""}
{"_id": "04a23bda190719ca2b471f6e06d2744e", "text": "Index of the last occurrence of x in the sequence .", "title": "", "metadata": ""}
{"_id": "3e7af00f220ee08d31108d8c8432270c", "text": "Write the ROI model to a FITS file .", "title": "", "metadata": ""}
{"_id": "05fcc1949295dbc5d83a5a8fb92ba270", "text": "Return the key ( aka database value ) of a human key ( aka Python identifier ) .", "title": "", "metadata": ""}
{"_id": "5a290c1fb5272bd23b5c0538de514ce7", "text": "Convert all keys of the dict d to ( ascii - ) strings .", "title": "", "metadata": ""}
{"_id": "8246b200f7f24b7432c8c23d2f93b4f5", "text": "Set value of the checkbox .", "title": "", "metadata": ""}
{"_id": "2eae02427480e6fa0a3d943f52068690", "text": "Updates background color", "title": "", "metadata": ""}
{"_id": "7400536e10b6dbb86b203138b384b3ce", "text": "Compute the total size of all elements in objects .", "title": "", "metadata": ""}
{"_id": "ed42166ad4ad217c3780c1941c2b13fb", "text": "Converts a list of string ranges to a list of [ low high ] tuples .", "title": "", "metadata": ""}
{"_id": "c055494ab2d7c58c78e6267767a6b712", "text": "Hessian of func wrt two parameters p0 and p1 . ( see _graddoc )", "title": "", "metadata": ""}
{"_id": "426b7dfed2b9f5c5b734720091eb6f63", "text": "Checks if the response has been rate limited by CARTO APIs", "title": "", "metadata": ""}
{"_id": "394b80ce983c44f134eb797c507189b6", "text": "Nested lists to single - level list does not split strings", "title": "", "metadata": ""}
{"_id": "25a242535e511d2aa7694b4f519bc37e", "text": "Modified form of the g format specifier .", "title": "", "metadata": ""}
{"_id": "5636cb3a2fe3f1cb4e7373ffb530c5f0", "text": "Calculate the Hamming distance between two strings . From Wikipedia article : Iterative with two matrix rows .", "title": "", "metadata": ""}
{"_id": "6c434a075832216d199fee94225f98f5", "text": "Pyglet specific mouse motion callback . Forwards and traslates the event to the example", "title": "", "metadata": ""}
{"_id": "d131e895594c8eab723a59603bd18e04", "text": "True if a line consists only of a single punctuation character .", "title": "", "metadata": ""}
{"_id": "6f3bd99eeddda5d02c78d0b03c062693", "text": "Ensures well - formedness of a key .", "title": "", "metadata": ""}
{"_id": "7f492e9f52128c8a473c5582c98f4159", "text": "Grab all escape codes from a string . Returns a list of all escape codes .", "title": "", "metadata": ""}
{"_id": "6737789a25aeff728ccdf356c92c07cd", "text": "date to unix timestamp in milliseconds", "title": "", "metadata": ""}
{"_id": "320985665668cc6253c8deeff2e77b49", "text": "A quick and dirty way to get a unique string", "title": "", "metadata": ""}
{"_id": "6e40f1615ce2d9f80cb55a8442661ca9", "text": "See : func : ~bitstruct . unpack_from () .", "title": "", "metadata": ""}
{"_id": "d29a1e54c44e0e9acb71c0aec3970315", "text": "Computes the log relative frequency for a word form", "title": "", "metadata": ""}
{"_id": "78806c9030d582a708386dd0ae2dee10", "text": "Convert seconds to human - readable time .", "title": "", "metadata": ""}
{"_id": "51c72e14ebb76cf39239d8c23dcbf482", "text": "Abort everything everywhere .", "title": "", "metadata": ""}
{"_id": "c6f3fb4b52a8bd651a5e5913186c87ac", "text": "Clear the displayed image .", "title": "", "metadata": ""}
{"_id": "b2c1ac85a0f92b362a6ebf9ca6fc7ec3", "text": "Short Time Fourier Transform for real data keeping the full FFT block .", "title": "", "metadata": ""}
{"_id": "a3f96d14bce6fd541b9523b5860ab41a", "text": "itertools . starmap for deferred callables using cooperative multitasking", "title": "", "metadata": ""}
{"_id": "0b13994c4a037d8c494b9a5ea5c5af19", "text": "Does this filename match any of the patterns?", "title": "", "metadata": ""}
{"_id": "bca505bd6eab8ac03f18a628bddd10b4", "text": "Sample a colormap from matplotlib", "title": "", "metadata": ""}
{"_id": "86e876e2f69dd3eda63db1de2c3e39ff", "text": "Return a Future whose result will say whether a next item is available .", "title": "", "metadata": ""}
{"_id": "258cec05489e74683e4d4613e37956c0", "text": "Checks whether given class or instance method has been marked with the", "title": "", "metadata": ""}
{"_id": "090f0967ee8fb7b39325f65f008ecc97", "text": "Respond to requests for the server s primary web page .", "title": "", "metadata": ""}
{"_id": "1f926992d0f8f779dfde2d04e8967f2e", "text": "Erases n lines from the screen and moves the cursor up to follow", "title": "", "metadata": ""}
{"_id": "a2feb774157aca64ef319bbb43151584", "text": "Make sure that the file is writeable . Useful if our source is read - only .", "title": "", "metadata": ""}
{"_id": "895a5995d96fe7a2597e219f12594d4f", "text": "Returns a string containing the type and text of the exception .", "title": "", "metadata": ""}
{"_id": "f0fe323a93de25989a7558c87f56e2a2", "text": "Return whether an object is a path .", "title": "", "metadata": ""}
{"_id": "699a7dd4ba12bff7aeca82e85a0e16d0", "text": "__init__ : Performs basic initialisations", "title": "", "metadata": ""}
{"_id": "c29463a5e46216b56b35efee14ecb8c4", "text": "Determine whether : tag : is a valid callable string tag .", "title": "", "metadata": ""}
{"_id": "331b31458926c2b08bb02eb9cb2de832", "text": "Outputs a string to the console ( stdout ) .", "title": "", "metadata": ""}
{"_id": "bd6ecf27d91776a6ec007ec4b6c92b1c", "text": "Sends a wheel event for the provided number of clicks . May be negative to reverse direction .", "title": "", "metadata": ""}
{"_id": "bd391b05c110eca9f23a38fb00ceab33", "text": "Call an external binary and return its stdout .", "title": "", "metadata": ""}
{"_id": "dbc79b6c474e4ede67003e17d7fb9ded", "text": "Purge the named cache of all values . If no cache exists for object_type nothing is done", "title": "", "metadata": ""}
{"_id": "bdf1338bd98c4d5feaa13575f738ed1f", "text": "Updates requests session user - agent with the driver s user agent", "title": "", "metadata": ""}
{"_id": "3132ffd39446e0cc8bbe0088696b6ccc", "text": "A small helper function to convert a string to a numeric value if appropriate", "title": "", "metadata": ""}
{"_id": "60123e216a1fecdcd968b97e55c33111", "text": "Same to log but this one centralizes the message first .", "title": "", "metadata": ""}
{"_id": "f9c97720538ef8123e410edcc632556e", "text": "Redirect standard out to file .", "title": "", "metadata": ""}
{"_id": "50e16d73a745ea7226683dbd33d48506", "text": ": return : New branch / head instance", "title": "", "metadata": ""}
{"_id": "9d017b6d8819b489290a99b6b237c171", "text": "Print a formatted straight line .", "title": "", "metadata": ""}
{"_id": "5a720cab759a3282e5ff24c8e5a6e4cb", "text": "Pop - up menu and wx . EVT_CLOSE closing event", "title": "", "metadata": ""}
{"_id": "e29e38e38d1341fc9faef54f0f13ec8e", "text": "Return list of the key property names for a class", "title": "", "metadata": ""}
{"_id": "3cba4009beb7b8dd13d70d20e6f4dae0", "text": "Return true if the string is a mathematical symbol .", "title": "", "metadata": ""}
{"_id": "088ace1785295e73efeedca4c0e91edd", "text": "Returns True if login_time not set or seconds since login time is greater than 200 mins .", "title": "", "metadata": ""}
{"_id": "fbdb962002d100a6c78e0701692db77b", "text": "Return the Location of the center of this region", "title": "", "metadata": ""}
{"_id": "5ee5a26627e6c0fd5b29c83525ae06ac", "text": "Random uniform variates .", "title": "", "metadata": ""}
{"_id": "26d20cbc92f69ded6af7b983432b02ce", "text": "Helper for raising the correct exception under Python 3 while still being able to raise the same common exception class in Python 2 . 7 .", "title": "", "metadata": ""}
{"_id": "00972e01c9ac2a6fa84c35b8ea6791bb", "text": "Return True if variable is a numpy array", "title": "", "metadata": ""}
{"_id": "a2a2163e1d80d21c810a8f7604c491f7", "text": "Suppress warning about untrusted SSL certificate .", "title": "", "metadata": ""}
{"_id": "2d4cce3439edc3ca664b80458c866374", "text": "Forward mouse cursor position events to the example", "title": "", "metadata": ""}
{"_id": "61b5379d9003747d0ec4b795ed65e329", "text": "disassemble Python byte - code file ( . pyc )", "title": "", "metadata": ""}
{"_id": "8631c506c7e96a99221aa211c41209f7", "text": "Flip an image horizontally or vertically .", "title": "", "metadata": ""}
{"_id": "2e5e42507382feaced45caab954b34bd", "text": "Downsample x by factor using striding .", "title": "", "metadata": ""}
{"_id": "9503511217784a060d61f215746d1a3e", "text": "Is an object iterable like a list ( and not a string ) ?", "title": "", "metadata": ""}
{"_id": "fef15c572ec7c32b2e52612c898ad1c7", "text": "Test if the given value is a scalar .", "title": "", "metadata": ""}
{"_id": "7a124a146e0971377edf8e155ced5890", "text": "Generate a unique ( within the graph ) identifer internal to graph generation .", "title": "", "metadata": ""}
{"_id": "4900bf90fd2d3229a30fa5a2da87dd9c", "text": "Get a member from an object by ( string ) name", "title": "", "metadata": ""}
{"_id": "04ca7494856f206d785d8427e21449cd", "text": "List of sections .", "title": "", "metadata": ""}
{"_id": "0643b0522e5df09906cb2527ea6e9f54", "text": "Update the lastest updated date in the database .", "title": "", "metadata": ""}
{"_id": "19d1edf87034b6aaf3f958469f2abf05", "text": "Returns the value coresponding to the given enum name .", "title": "", "metadata": ""}
{"_id": "a6eb8e10cbbc3000da9b9b8c7f92ff34", "text": "Return list of Logger classes .", "title": "", "metadata": ""}
{"_id": "b08a6ecc03b05a02adce565970ce363e", "text": "read a simple text file from a private location to get username and password", "title": "", "metadata": ""}
{"_id": "d1f371aa4d0edc2de8a3ad2e461ca7c9", "text": "Checks whether the re module can compile the given regular expression .", "title": "", "metadata": ""}
{"_id": "5e97ba5f84f73abb0c1f528360c72220", "text": "Add a spec to a mock . spec can either be an object or a list of strings . Only attributes on the spec can be fetched as attributes from the mock .", "title": "", "metadata": ""}
{"_id": "88e66d542541f67b897cd519992340d3", "text": "Connect and login to an FTP server and return ftplib . FTP object .", "title": "", "metadata": ""}
{"_id": "78aedb50ee9711c2d33f39a6a55b22f1", "text": "This is used to ensure that the return value of arr . tostring () is actually a string . This will prevent lots of if - checks in calling code . As of numpy v1 . 6 . 1 ( in Python 3 . 2 . 3 ) the tostring () function still returns type bytes not str as it advertises .", "title": "", "metadata": ""}
{"_id": "193e0a12fc28d2f5dd77d28a91b4f0bb", "text": "Take a list of filepaths and attach the files to a MIMEMultipart .", "title": "", "metadata": ""}
{"_id": "c4590e177bc4763db649b13d3e961f6e", "text": "Create a vector randomly within the given rectangle .", "title": "", "metadata": ""}
{"_id": "882ebb5351123b7b900faadf39118101", "text": "Check if git command is available .", "title": "", "metadata": ""}
{"_id": "434f0bce8fa775045fba0667758302bb", "text": "Save a matrix ( list of lists ) to a file as a CSV", "title": "", "metadata": ""}
{"_id": "49a06e8ddc9bce26eb8139dc1d8ea652", "text": "Returns :", "title": "", "metadata": ""}
{"_id": "826755df030cb1decb9ccf5639fcd059", "text": "Draws a sample of sums from a list of distributions .", "title": "", "metadata": ""}
{"_id": "bc70e3130f8992d2a690390a5c6d39f2", "text": "Check if this enum has a particular name among its values .", "title": "", "metadata": ""}
{"_id": "dbe5d3bdb909db9c9182b318fac3258c", "text": "If output is string then print the string and also time used", "title": "", "metadata": ""}
{"_id": "b4d24ab82a617461c8310ab08a59d227", "text": "Return the inner product between two tensors", "title": "", "metadata": ""}
{"_id": "8b724421204c5e2cb967049c5def26ac", "text": "Helper function to easily create the proper json formated string from a list of strs : param cmd_list : list of strings : return : str json formatted", "title": "", "metadata": ""}
{"_id": "19a845ab4723fed8ff443ef99478c180", "text": "Compute the log of the magnitude spectrum of frames", "title": "", "metadata": ""}
{"_id": "21051d2c2b1d6f36ac8510291e9e91f5", "text": "Display Bloch sphere and corresponding data sets .", "title": "", "metadata": ""}
{"_id": "f0d258a76818e18a1d33f56943b7b918", "text": "convert column to index . Eg : ConvertInIndex ( AB ) = 28", "title": "", "metadata": ""}
{"_id": "40c463928befbe3349b13f993c0e9087", "text": "Cumulative distribution function .", "title": "", "metadata": ""}
{"_id": "49c3d77166321e550d351f0b7f7cf115", "text": "expects a _n . array returns the global minimum of ( value - array ) ^2", "title": "", "metadata": ""}
{"_id": "19984520dc93178300388a1dca822cee", "text": "use before any custom printing when using the progress iter to ensure your print statement starts on a new line instead of at the end of a progress line", "title": "", "metadata": ""}
{"_id": "d05cd9f352778e8daafc36615866f166", "text": "Build a C ++ binary executable", "title": "", "metadata": ""}
{"_id": "d8727e85912a8a81c9918b640fcf0595", "text": ">>> argmax ( [ 4 2 - 5 ] ) 0 >>> argmax ( [ 4 2 - 5 ] key = abs ) 2 >>> argmax ( [ 4 2 - 5 ] key = abs both = True ) ( 2 5 )", "title": "", "metadata": ""}
{"_id": "3b5273ba849ae22e7d31365e1a004d6d", "text": "For a given value the function finds the nearest value in the array and returns its index .", "title": "", "metadata": ""}
{"_id": "b603fbf252314f7f870bbf9fbc749ee2", "text": "Return a list of all parsed comments in a file . Mostly for testing & interactive use .", "title": "", "metadata": ""}
{"_id": "a16e898f03f44f5d4e54de6e111b98c5", "text": "Return the group associated to the file : param filename : : return : str", "title": "", "metadata": ""}
{"_id": "084416aaf6a6379cc0fa964a6a418443", "text": "Deletes the specified file from the local filesystem .", "title": "", "metadata": ""}
{"_id": "28425261b66be6e8cec04adaa498512d", "text": "Shortcut to create md5 hash : param s : : return :", "title": "", "metadata": ""}
{"_id": "f7fb81feac5559ee546b4aa67de6ae52", "text": "Copy an array to the shared memory .", "title": "", "metadata": ""}
{"_id": "5dcd49e0f4066436c6548199f6105e80", "text": "Adjust image balance and contrast", "title": "", "metadata": ""}
{"_id": "f83b772f44a5942a26ee6b8637ab998c", "text": "Make a sentence from a piece of text .", "title": "", "metadata": ""}
{"_id": "ebefc308ede6e9ffbcb3a1dbbf54d69d", "text": "Retrieve legend title header string from definitions .", "title": "", "metadata": ""}
{"_id": "df03e5cc58b2e9cc2a092b5083a02343", "text": "The number of days in the month of the given date", "title": "", "metadata": ""}
{"_id": "47f74460d8ad6abb2dbdbe8c15419446", "text": "Returns the dot source representing the database in a string .", "title": "", "metadata": ""}
{"_id": "e5a5a0ca1e8b5e9c76a816654d92f536", "text": "Returns true if the virtualenv tool is installed .", "title": "", "metadata": ""}
{"_id": "66e5a011742184842b0f86d6853955a9", "text": "HTTP DELETE operation to API endpoint .", "title": "", "metadata": ""}
{"_id": "3225c409beec5c0c02764e759e85f313", "text": "r Replace all ( frm to ) tuples in args in string s .", "title": "", "metadata": ""}
{"_id": "842c10e4c563797657785a8f535c48fc", "text": "shotcut to pull out useful info for interactive use", "title": "", "metadata": ""}
{"_id": "401c1187fa0ed332562e00463f13c1d5", "text": "An array of all parameters ( including frozen parameters )", "title": "", "metadata": ""}
{"_id": "03910f752541a5427527a1f41b0e5082", "text": "Return file name ( s ) from Tkinter s file open dialog .", "title": "", "metadata": ""}
{"_id": "0b710470005d5c8a925445bc04edc87f", "text": "Helper function returns a truncated repr () of an object .", "title": "", "metadata": ""}
{"_id": "326664c2de8dd35e6dab6d620cf347f3", "text": "Add enough tabs to align in two columns", "title": "", "metadata": ""}
{"_id": "1cdaa69e9dff7660da272430a355a304", "text": "Simple helper hash function", "title": "", "metadata": ""}
{"_id": "f14741eff3c319b9fa0b922fd65d2634", "text": "Returns a file descriptor from stdin or opening a file from a given path .", "title": "", "metadata": ""}
{"_id": "3d9bd3b38f9a9cd3ddbaf7c67baea8f4", "text": "Remove all values that are zero .", "title": "", "metadata": ""}
{"_id": "bd136276b5c8e34e0988b03205a83932", "text": "delete all the eggs in the directory specified", "title": "", "metadata": ""}
{"_id": "5c8d869f19cbf0178f14700fea443f7f", "text": "Returns whether * obj * is iterable lazily such as generators range objects etc .", "title": "", "metadata": ""}
{"_id": "4c26041a5abdc3b0f14ebeac1ff89b67", "text": "Return a context manager that hides the cursor while inside it and makes it visible on leaving .", "title": "", "metadata": ""}
{"_id": "552b7d34c2e07b43898a699f4c8011cb", "text": "Given a name in camelCase return in snake_case", "title": "", "metadata": ""}
{"_id": "cfdf30f4c71836b7eb55a462bb40d539", "text": "Get the date that a file was created .", "title": "", "metadata": ""}
{"_id": "0f0c388b02a3fe26cb97575d57d63a38", "text": "Return current free memory on the machine for windows .", "title": "", "metadata": ""}
{"_id": "339daeff7e91dd72002801291c6c2bf6", "text": "A very thin wrapper around textwrap . fill to consistently wrap documentation text for display in a command line environment . The text is wrapped to 99 characters with an indentation depth of 4 spaces . Each line is wrapped independently in order to preserve manually added line breaks .", "title": "", "metadata": ""}
{"_id": "c3e54805323147edda0a037235a21bd7", "text": "Cleanup the output directory", "title": "", "metadata": ""}
{"_id": "8b5bb177eeb7ddf3e4a59519503a2630", "text": "Compute empirical covariance as baseline estimator .", "title": "", "metadata": ""}
{"_id": "b5a7cef0c21149ef6557cb3e662853f3", "text": "An async result aggregator that combines all the results This gets executed in unsync . loop and unsync . thread", "title": "", "metadata": ""}
{"_id": "4372bf1ec7832957aa7fe09ece7e873a", "text": "Get a slice from a table column holding arrays . ( see : func : table . getcolslice )", "title": "", "metadata": ""}
{"_id": "eec0e2cfea0e033498ae97b699bc5f1e", "text": "Flags that a function is linear wrt all args", "title": "", "metadata": ""}
{"_id": "023284e446a4d8a9f3fe17be3518260c", "text": "Called by remote workers . Useful to populate main module globals () for interactive shells . Retrieves the serialized function .", "title": "", "metadata": ""}
{"_id": "e099ea85fae78075b0f5f332b11f6cbe", "text": "apply a function to all non - dict values in a dictionary", "title": "", "metadata": ""}
{"_id": "aa4020fd97ed6f05be25f478b02484c5", "text": "DOES NOT WORK WELL WITH MOPIDY Hack from https : // www . daniweb . com / software - development / python / code / 260268 / restart - your - python - program to support updating the settings since mopidy is not able to do that yet Restarts the current program Note : this function does not return . Any cleanup action ( like saving data ) must be done before calling this function", "title": "", "metadata": ""}
{"_id": "9ba84551327889cd7542041bdc37077a", "text": "Connects to the voice channel associated with this Player .", "title": "", "metadata": ""}
{"_id": "05df66a8bd364663e59a783c4b5049d9", "text": "Determine whether indicated file appears to be a gzipped FASTQ .", "title": "", "metadata": ""}
{"_id": "32dd687116a9255b0847f46759cc0f06", "text": "Map prediction tensor to labels .", "title": "", "metadata": ""}
{"_id": "b3cab4f65823ae792bbe9db617ee5ce4", "text": "Split data into chunks of num chars each", "title": "", "metadata": ""}
{"_id": "0011fedc70bc68cf09aa0228eb29efbc", "text": "Remove comments and empty lines", "title": "", "metadata": ""}
{"_id": "3005baaadc9ba5306eeaa51a340d245f", "text": "returns a tuple that contains ( screen_width screen_height )", "title": "", "metadata": ""}
{"_id": "2331d0754aa4934db8d8eaf2eb88ac53", "text": "Decide if the Ipython command line is running code .", "title": "", "metadata": ""}
{"_id": "697b9904a74e6f9bb91d1916b7fe53b6", "text": "Exchange a code ( and state token ) for a bearer token", "title": "", "metadata": ""}
{"_id": "7b58629cd92209e33f61200d2f4eb064", "text": "Test out all the layers on local CPU .", "title": "", "metadata": ""}
{"_id": "9d838d2df91f25edc2439875b4dc721d", "text": "Get a random ( i . e . unique ) string identifier", "title": "", "metadata": ""}
{"_id": "a0b86a8ddb74047a7c7b49e72c5fe2c3", "text": "Filter and ensure that the returned value is of type bool .", "title": "", "metadata": ""}
{"_id": "c13022849f9b279600d3cdbf859a56b2", "text": "internal state reset . used e . g . in unittests", "title": "", "metadata": ""}
{"_id": "394011a937a34c07c78e27a3aa77ee6d", "text": "Starts connection to server if not existent .", "title": "", "metadata": ""}
{"_id": "377a9ef364cc215db4453c1c4c060373", "text": "Get from a list with an optional default value .", "title": "", "metadata": ""}
{"_id": "9a6c5da2a547c1f24be51edddf243c7e", "text": "Given a string return true if it matches the supplied list of patterns .", "title": "", "metadata": ""}
{"_id": "d3ea3ad132548bb5c2c36e8e0a46197d", "text": "Get an SArray that contains the last n elements in the SArray .", "title": "", "metadata": ""}
{"_id": "c5c386fda569a4dadac7aa1c4f871e77", "text": "Sends multiple non - blocking requests . Returns a list of responses .", "title": "", "metadata": ""}
{"_id": "b801aa34202008d39fd6de16ab0a6a69", "text": "get the current month s last day : param year : default to current year : param month : default to current month : return : month s last day", "title": "", "metadata": ""}
{"_id": "f1c5d1e3fe8ffbff221e7418784b78eb", "text": "Context manager that suppresses stdout .", "title": "", "metadata": ""}
{"_id": "d32fbffdfb2fdde4073158ad9dce9a99", "text": "remove problem characters from string", "title": "", "metadata": ""}
{"_id": "3e84fc2a3c09e670e7c5fe38bacb94cb", "text": "Joins two dictionaries .", "title": "", "metadata": ""}
{"_id": "bdae6ce649e9689e915e5d4d8f71997a", "text": "Make a C array using the given string .", "title": "", "metadata": ""}
{"_id": "fd4e70c1308482fbe52622531b477689", "text": "Create a new image by copying the image on a * color * background .", "title": "", "metadata": ""}
{"_id": "5cb2dc357003e1b43c9cc9661df85d7c", "text": "Return first row and also iterable with same items as original", "title": "", "metadata": ""}
{"_id": "8e31970b76e3116a9fb997497935b6d5", "text": "Unwrap a Python 2 . 6 SSL socket so we can call shutdown ()", "title": "", "metadata": ""}
{"_id": "d1342638454925e0afc2f694b3273f84", "text": "Fetch all remaining rows .", "title": "", "metadata": ""}
{"_id": "1ad1b5452616fae74a69afca4a767fe3", "text": "Validate if non empty string", "title": "", "metadata": ""}
{"_id": "785ab48e2a3d06b7e1221b07acd549d0", "text": "Determine the number of leaves in a tree", "title": "", "metadata": ""}
{"_id": "72800a9bd28d2d740ececbccde01fa48", "text": "Replaces occurrences of a match string in a given list of strings and returns a list of new strings . The match string can be a regex expression .", "title": "", "metadata": ""}
{"_id": "233b96d33b144405b7a2bcc2c710a51b", "text": "Convert axis coordinate to bin index .", "title": "", "metadata": ""}
{"_id": "3ac7da8a162c29b6a4b16ec3687b3a53", "text": "Whether the item is a placeholder or contains a placeholder .", "title": "", "metadata": ""}
{"_id": "f2fc50b40c12f38ed4659e1ca25c5e7f", "text": "Let the DBMS perform a sum on a queryset", "title": "", "metadata": ""}
{"_id": "deeb93b3e656610f37fd50c86a58a0dc", "text": "Get Querystring information from uri .", "title": "", "metadata": ""}
{"_id": "5d75233dc374ba9b2c484e60bb2ee784", "text": "A generator that combines two iterables .", "title": "", "metadata": ""}
{"_id": "ac1ee1174b9c3063d440c8a3ba730e2a", "text": "Normalize time in arbitrary timezone to UTC naive object .", "title": "", "metadata": ""}
{"_id": "8db756033ace9a12b4370c3ef2a9717d", "text": "Parse an ISO8601 - formatted datetime string and return a datetime . time object .", "title": "", "metadata": ""}
{"_id": "f7c5c65e644e7cab1b363146c6e77b05", "text": "Runs a bash script in the local directory", "title": "", "metadata": ""}
{"_id": "6c7c2bc9b294a30be5686e6e5e7cf9cc", "text": "Is the SQLAlchemy column type a string type?", "title": "", "metadata": ""}
{"_id": "17f32ce8b60f8533f0ef0e672c4a13ae", "text": "Normalizes the given vector . The vector given may have any number of dimensions .", "title": "", "metadata": ""}
{"_id": "2deda33255da22a85dbdf0dd7a53d35a", "text": "rounds float to closest int : rtype : int : param n : float", "title": "", "metadata": ""}
{"_id": "e19d312ac6b67019b9b084b1cca39ce8", "text": "Create an empty array with appropriate shape .", "title": "", "metadata": ""}
{"_id": "86db8f870471dd2b0c21516d2cce738e", "text": "Make the given theme current .", "title": "", "metadata": ""}
{"_id": "2c06be48c05ccd1fad2b36f5cdf33f00", "text": "Return the difference in seconds between now and the given time .", "title": "", "metadata": ""}
{"_id": "e6ecb5687e6df4a97c6678c964dc24ca", "text": "Finds an approximate centroid for a region that is within the region . Parameters ---------- region : np . ndarray ( shape = ( m n ) dtype = bool ) mask of the region .", "title": "", "metadata": ""}
{"_id": "1ec27b67e9a613bc3bbf69c0141d190e", "text": "Resursively create a named directory .", "title": "", "metadata": ""}
{"_id": "44cb46090a551a3a8b4dc1c57f96c416", "text": "Packs a list of triple indexes into a 2D numpy array .", "title": "", "metadata": ""}
{"_id": "a86be84f6ca76b577b6fd757244e2db8", "text": "Returns the name of the object s type . For some recognized singletons the name of the object is returned instead . ( For example for None and Ellipsis ) .", "title": "", "metadata": ""}
{"_id": "2bbe2406420177a3ca988f5503d41096", "text": "Decode string encoded by unicode_string", "title": "", "metadata": ""}
{"_id": "6a148fcd5cc6500a498a1211f09addd5", "text": "Fast median operation for masked array using 50th - percentile", "title": "", "metadata": ""}
{"_id": "2e22de31aa9ab28bf234f268b5570c45", "text": "steps value up / down by a single step . Single step is defined in singleStep () .", "title": "", "metadata": ""}
{"_id": "52765aaae7bfc35f177d643624c49780", "text": "Reads a python file and returns a awslambda . Code object : param python_file : : return :", "title": "", "metadata": ""}
{"_id": "fc9a4b36c54288d8d419deb77634ef0d", "text": "Resets all assigned data for the current message .", "title": "", "metadata": ""}
{"_id": "b8e19c047dd1c7bb330e512ba242074f", "text": "Automatically resizes widget to display at most max_height_items items", "title": "", "metadata": ""}
{"_id": "d089788fc1d49c9ca564e1bad9ba831d", "text": "Commit all records .", "title": "", "metadata": ""}
{"_id": "f23077b00e451ceae931ed48d2aba446", "text": "Return a name which includes the module name and function name .", "title": "", "metadata": ""}
{"_id": "ef485a276101165494d6b4a8d9998d93", "text": "Did the user depress and release the button to signify a click? MouseStateType is the button to query . Values found under StateTypes . py", "title": "", "metadata": ""}
{"_id": "66459c7a16b7be9e3de746897527367e", "text": ": rtype : numpy matrix", "title": "", "metadata": ""}
{"_id": "9522aa7c6bf880812f54e4649fe521ff", "text": "return memory usage of python process in MB", "title": "", "metadata": ""}
{"_id": "09bec512096732801bb9f579951f90a3", "text": "Installs a Blended plugin from GitHub", "title": "", "metadata": ""}
{"_id": "045cd26cd488abd05f1d9c43a132e282", "text": "Center all lines of the text . It is assumed that all lines width is smaller then B { width } because the line width will not be checked . Args : text ( str ) : Text to wrap . width ( int ) : Maximum number of characters per line . Returns : str : Centered text .", "title": "", "metadata": ""}
{"_id": "6b7a7fcc73c4368c70d43b3a23fe547b", "text": "DEBUG FUNC modify argv to look like you ran a command", "title": "", "metadata": ""}
{"_id": "ce658dcb4035c7d0a9915db93b4ca420", "text": "Generate nonce number", "title": "", "metadata": ""}
{"_id": "dd690eac417fe3e04740e828dca40b5b", "text": "bytes to unicode", "title": "", "metadata": ""}
{"_id": "71c4d33ab843d3b6a8b7f27ccc640ebe", "text": "Gets tail", "title": "", "metadata": ""}
{"_id": "2956760bb4275e200d51ee135c947b3a", "text": "Finds parent folder of file", "title": "", "metadata": ""}
{"_id": "27f241852a0be217c9fbe0631c3dac0d", "text": "Count the number of rows in 2D arrays that contain any nan values .", "title": "", "metadata": ""}
{"_id": "22ce1fe1309c58cd8bf30a76c5ddf71e", "text": "Return the average vector of a list of vectors .", "title": "", "metadata": ""}
{"_id": "434af3f805f9999c61dd43bc0c773605", "text": "SwitchToThisWindow from Win32 . handle : int the handle of a native window .", "title": "", "metadata": ""}
{"_id": "a583bf7f45e060168240e1ef963e192d", "text": "Probability density function ( normal distribution )", "title": "", "metadata": ""}
{"_id": "77300e3d7f19be34f6ffb5add793b7cf", "text": "Return a list of dicionaries . See set_order .", "title": "", "metadata": ""}
{"_id": "a2bb2b3b4fd14b67f7d138678cbe20ba", "text": "Check if a password is valid", "title": "", "metadata": ""}
{"_id": "16ca2c6e352cd28dc3941bb720249dac", "text": "Linear model m is [ slope nugget ]", "title": "", "metadata": ""}
{"_id": "6f2648d992500e433ad5f6aab937a043", "text": "Gets next week day", "title": "", "metadata": ""}
{"_id": "e7e7515ed515ae47a25e950ba29e30f3", "text": "Any reduction op .", "title": "", "metadata": ""}
{"_id": "ecb4e85e26955a3f9784424dbb8bd61a", "text": "Helper function to restore index information after collection . Doesn t use self so we can serialize this .", "title": "", "metadata": ""}
{"_id": "7bad0dfa01650e6812bf0475b7ec3c8b", "text": "Convert string to datetime object .", "title": "", "metadata": ""}
{"_id": "ec03a640ddb07889c2ec0cc4b80ccb53", "text": "Return the number of entries in a table by counting them .", "title": "", "metadata": ""}
{"_id": "595b56e5629c39c83a5ba412b7eecdba", "text": "Assert that a value must be a given type .", "title": "", "metadata": ""}
{"_id": "75c24d3c7bfa170c542d23dd0cbebc5b", "text": "Return true if the pathname refers to an existing directory .", "title": "", "metadata": ""}
{"_id": "1e45702d985929acfc8245727c79da4f", "text": "Restores the object from the given JSON .", "title": "", "metadata": ""}
{"_id": "6762b5c62cb7ade8a08e3a9124503e11", "text": "Convert camelcase names to underscore", "title": "", "metadata": ""}
{"_id": "1e4705bbe2e2c60b496a052e570c0a3c", "text": "Provides an iterator over all values in a nested structure .", "title": "", "metadata": ""}
{"_id": "b96741b8bbea9330e83efb0225e1c5da", "text": "Get a random date between two dates", "title": "", "metadata": ""}
{"_id": "cb6dc3298ea15f9d5838e3705b0a4e63", "text": "Adds an unordered list to the readme", "title": "", "metadata": ""}
{"_id": "630f484055dbdef00293bbb1a1d98b3f", "text": "Return a copy of this Text instance with invalid characters removed .", "title": "", "metadata": ""}
{"_id": "15e82c71196d51a6b21ffe1d6c86dd41", "text": "assert that the mock was called at least once", "title": "", "metadata": ""}
{"_id": "b0e2dab1ae687c787beedaea34c42223", "text": "Error handler", "title": "", "metadata": ""}
{"_id": "9102bb7c695e9d82fbdc05cd0cd0c566", "text": "Wrap an AST Call node to lambda expression node . call : ast . Call node", "title": "", "metadata": ""}
{"_id": "10eecc55fe39b94262d51502a70cefe7", "text": "Returns all database table names found in an SQLAlchemy : class : MetaData object .", "title": "", "metadata": ""}
{"_id": "e6877c73cf1fd6984ca3bd04663b7eaf", "text": "Stops iterating before yielding the specified idx .", "title": "", "metadata": ""}
{"_id": "e85186933720c07970e4b51ec1b113f9", "text": "Returns whether the stream object seems to have a working fileno ()", "title": "", "metadata": ""}
{"_id": "6926d0a2a93d7ed7bc68a5337051aa1d", "text": "Shorcut for self . run .", "title": "", "metadata": ""}
{"_id": "0765e935be8f4dcc44d46fbc7c47f0cd", "text": ": return : the string value of the element or element tree", "title": "", "metadata": ""}
{"_id": "29925267c0e47e48f2ac3c0343a50285", "text": "Is the current OS a Windows?", "title": "", "metadata": ""}
{"_id": "c196ea5d14b15dd2f032b65c715f0325", "text": "Returns obj . field data as a dict", "title": "", "metadata": ""}
{"_id": "53ed2b781755f78bd6411dc895274be4", "text": "Return an ISO - 8601 formatted string from the provided datetime object", "title": "", "metadata": ""}
{"_id": "83ceb46b91cf98ad403a04fb0e9ea72b", "text": "Merge all the strings . Put space between them .", "title": "", "metadata": ""}
{"_id": "61338c482638d3928af679239dfd329c", "text": "Construction from a string raise a TypeError if not possible", "title": "", "metadata": ""}
{"_id": "fd052a63b71703cedb41ebaa974bf00b", "text": "Print dicttree in Json - like format . keys are sorted", "title": "", "metadata": ""}
{"_id": "7c3a0c1e59562d706fe2c854b85547fe", "text": "Upload a local file on the remote host .", "title": "", "metadata": ""}
{"_id": "4b901fc61e63eccd8cf346060623cb42", "text": "Convolve an array with a kernel using FFT . Implemntation based on the convolve_fft function from astropy .", "title": "", "metadata": ""}
{"_id": "20ba3eae42e2829d2cbf0ef397d5567d", "text": "Get tuple ( actually a generator ) of indices where the max value of array x occurs . Requires that x have a max () method as x . max () ( in the case of NumPy ) is much faster than max ( x ) . For a simpler faster argmax when there is only a single maximum entry or when knowing only the first index where the maximum occurs call argmax () on a NumPy array .", "title": "", "metadata": ""}
{"_id": "834c2a2e712a3345bf5053fb45607b4e", "text": "Returns a string representing a numpy array of 0 s and 1 s", "title": "", "metadata": ""}
{"_id": "9cbb71152414c2ea114277a8dd324ff4", "text": "Sort data rows and order columns", "title": "", "metadata": ""}
{"_id": "afda0b4ec9e0d7ff1ae6b3aa5e2abac7", "text": "Set the modified time of a file", "title": "", "metadata": ""}
{"_id": "c53ad2de3311db252d1a8fceed100320", "text": "React to a docstring event and append contracts to it .", "title": "", "metadata": ""}
{"_id": "d2823e958285cc44c798d8f08a0f2723", "text": "Prints a human readable version of the filter .", "title": "", "metadata": ""}
{"_id": "ce3c7b8630a04a15d7b5e034134ea526", "text": "Logout from the remote server .", "title": "", "metadata": ""}
{"_id": "c374514b35267926996e9fdbbd45e6b9", "text": "Compare items in 2 arrays . Returns sum ( abs ( a ( i ) - b ( i )))", "title": "", "metadata": ""}
{"_id": "5bec0090b2eca2bb952d4d267ec46d72", "text": "Adds noise to Y", "title": "", "metadata": ""}
{"_id": "3522a191722806a1bd465a0dfcd943be", "text": "returns : a triple of integers from a version tag", "title": "", "metadata": ""}
{"_id": "5da40532a3939a2ced853e5e0af217c0", "text": "Terminate a running script .", "title": "", "metadata": ""}
{"_id": "76bfcb92edca4206df2ae0e51132c3aa", "text": "Returns the last n rows in the table", "title": "", "metadata": ""}
{"_id": "0ec3245b4742fc022f6ecf6b564c8068", "text": "Serializer for consistency", "title": "", "metadata": ""}
{"_id": "845e5587a0350c9d5c7e92d6c4237e1f", "text": "Close session shutdown pool .", "title": "", "metadata": ""}
{"_id": "08a6174fe87014f56cc1d8ec27e8d0be", "text": "Concatenate a sequence of arrays .", "title": "", "metadata": ""}
{"_id": "09e2624e04969febff8f25738ce5dd51", "text": "Sum the total number of cycles over a list of tokens .", "title": "", "metadata": ""}
{"_id": "ad05172bf22f89aada421ead27372349", "text": "Convert JSON string to an ordered defaultdict .", "title": "", "metadata": ""}
{"_id": "d02052ccd17825a6dac1c9b03778329e", "text": "Deserializes a JSONified : obj : numpy . ndarray that was created using numpy s : obj : save function .", "title": "", "metadata": ""}
{"_id": "fea30a46daa21dc546576fbc923bb5d6", "text": "Show the y - axis tick labels for a subplot .", "title": "", "metadata": ""}
{"_id": "20e62a8ad637e8c8be1642413b8637ec", "text": "Return the screen resolution of the primary screen .", "title": "", "metadata": ""}
{"_id": "0f79578f41296fa4a2afa21299b1a065", "text": "Gets last change time for a single file", "title": "", "metadata": ""}
{"_id": "b645b03e0c85e3efd257a7619f1f6f49", "text": "Disable event loop integration with wxPython .", "title": "", "metadata": ""}
{"_id": "09468cd8f8142d30e1dac686a1cb9c63", "text": "Load proxy list from configured proxy source", "title": "", "metadata": ""}
{"_id": "4af63243f9f4c631d7483c536435456d", "text": "Enable or disable automatic rate - limit handling .", "title": "", "metadata": ""}
{"_id": "dd32b9131a2add8fd6c732a366a9dbbf", "text": "Delete log file .", "title": "", "metadata": ""}
{"_id": "f949a86c373cc92a5ad484deffe2d74e", "text": "Counts up sequentially from a number based on the current time", "title": "", "metadata": ""}
{"_id": "eb603f623dddab0eb83fe96478eee004", "text": "Extend the list with another list . Each member of the list must be a string .", "title": "", "metadata": ""}
{"_id": "5ce93fb8348907ec42c5c07240eb1a51", "text": "Returns a dictionary from a URL params", "title": "", "metadata": ""}
{"_id": "1b43da181997fd81381efcb8fd38cb92", "text": "convert a ctypes structure to a dictionary", "title": "", "metadata": ""}
{"_id": "710107f2226301c16266418731d25c27", "text": "Returns a generator that spits an iteratable into n - sized chunks . The last chunk may have less than n elements .", "title": "", "metadata": ""}
{"_id": "2bc5cef454c4ffd1ee3f370517911ada", "text": "Recursively loop through a directory to find all python script files . When one is found it is analyzed for import statements : param path : string : return : generator", "title": "", "metadata": ""}
{"_id": "4e4f89b590c064e022e0a6a2285d69ee", "text": "Return a string with terminal colors .", "title": "", "metadata": ""}
{"_id": "3580894acd55f2194d06c7ee287c3f16", "text": "Double click on a given square in the map", "title": "", "metadata": ""}
{"_id": "afd4b206bccc46ea3f88a32ee579ada5", "text": "Helper function for creating hash functions .", "title": "", "metadata": ""}
{"_id": "47602791d24bb1fb1d867531b5d90bba", "text": "Ensure all logging output has been flushed", "title": "", "metadata": ""}
{"_id": "699441bdebbb8052392619b77b082786", "text": "Not meant to be used directly use : meth : Instaloader . save_session_to_file .", "title": "", "metadata": ""}
{"_id": "8ecaa4e19b4b40225602d2b44a9a4553", "text": "Return a view into the memory", "title": "", "metadata": ""}
{"_id": "88eb1ae63b56aee432537c1e9798de8b", "text": "Execute the SQL command and return the data rows as tuples", "title": "", "metadata": ""}
{"_id": "e074f57b6be8ac8f6facd750a982c6da", "text": "Checks if the item exists .", "title": "", "metadata": ""}
{"_id": "8d53cf9d5cbf23e496b415aef5fc54eb", "text": "Return True if the sentence or fragment begins with one of the parts of speech in the list else False", "title": "", "metadata": ""}
{"_id": "c3191369a509f822fdffe97a0dd32e8c", "text": "Make text tex safe", "title": "", "metadata": ""}
{"_id": "9290c92bbc33accd1f4ad93532df667f", "text": "Generate random id numbers .", "title": "", "metadata": ""}
{"_id": "f019f3057ea67f72a3e58e004eccffa4", "text": "A static value ( does not change at runtime ) which is known at compile time", "title": "", "metadata": ""}
{"_id": "03474cffd246b3029adccb7222668b74", "text": "More important level : default for print and save", "title": "", "metadata": ""}
{"_id": "36412da7d3dbad8d9bf1e55276f103fa", "text": "Left addition .", "title": "", "metadata": ""}
{"_id": "f74601fd7d7cd24f87c43b0b546483df", "text": "Fit a Gaussian to the data", "title": "", "metadata": ""}
{"_id": "e347141f7954786f325c6f0ff6841f21", "text": "Return the longest common substring in a list of strings . Credit : http : // stackoverflow . com / questions / 2892931 / longest - common - substring - from - more - than - two - strings - python", "title": "", "metadata": ""}
{"_id": "85a5520980164a3321e54b34ea2262aa", "text": "Strips and filters empty or commented lines .", "title": "", "metadata": ""}
{"_id": "c6c2c8e6731c94bfa7ab92d23cb37e1f", "text": "Returns True if the root node contains no child elements no text and no attributes other than ** type ** . Returns False if any are present .", "title": "", "metadata": ""}
{"_id": "78b88fb839f797f4752fa573f6af0335", "text": "Diag op .", "title": "", "metadata": ""}
{"_id": "b8350dae519046c004b3fc0029277c4d", "text": "Get the forecasted float from json section .", "title": "", "metadata": ""}
{"_id": "354833a88d802f579de52fc47bb9fa3e", "text": "Toggle linear / log scale for Y - axis .", "title": "", "metadata": ""}
{"_id": "1041b0fc72162a7ec1bfde232eb921bd", "text": "This is a dirty little template function generator that turns single - brace Mustache - style template strings into functions that interpolate dict keys :", "title": "", "metadata": ""}
{"_id": "fc65f851ff7a8f875fef8886cad8c82f", "text": "Terminate all workers and threads .", "title": "", "metadata": ""}
{"_id": "cfc69ceef91d665ac2a07ac9ce3ebb39", "text": "Print a dictionary of attributes in the DOT format", "title": "", "metadata": ""}
{"_id": "29c8be4544f24369de39f5c6035b178d", "text": "Raw print to sys . __stdout__ otherwise identical interface to print () .", "title": "", "metadata": ""}
{"_id": "5a559d03d4f6cdb5ac7696e14f5fa8eb", "text": "generate a method to write the configuration in yaml to the method desired", "title": "", "metadata": ""}
{"_id": "0f2f1c363141c3aa20f7845eb5d5d96a", "text": "Serializes and writes given Python objects to a multi - document YAML file .", "title": "", "metadata": ""}
{"_id": "75d1f09c2756b84fce0a302dd3cb9d09", "text": "Stops the analysis as soon as possible .", "title": "", "metadata": ""}
{"_id": "fdf7f60588c0c16c5c6decac8976ed42", "text": "Returns a random color between min and max .", "title": "", "metadata": ""}
{"_id": "8501d260d75b38a933a4791e718057ec", "text": "Create the chart bounds with min max horizontal and vertical values", "title": "", "metadata": ""}
{"_id": "fc8a5fbb5d50c8f59e316aa585291e72", "text": "Remove the querystring from the end of a URL .", "title": "", "metadata": ""}
{"_id": "7e66507a9ad63c1fc6538fe83e8d4c9b", "text": "Print a documented teleport version of the schema .", "title": "", "metadata": ""}
{"_id": "1deaaba0874e84532b0d83be43f7c65c", "text": "Calculates the distance of a given image to the original image .", "title": "", "metadata": ""}
{"_id": "7041372aaf6091b1a8f819838f715e40", "text": "Delete periodically workers in workers bag .", "title": "", "metadata": ""}
{"_id": "4b9eb3e83f14b59fad676b4b9f2331c2", "text": "Calculate angle between two vectors", "title": "", "metadata": ""}
{"_id": "b04089c83f799fdb7568f9f2fdb8f899", "text": "Invoked when determining whether a specific key is in the dictionary using key in d .", "title": "", "metadata": ""}
{"_id": "82352db58455ebad4ee1ba3ac6b85713", "text": "Iterate through lines of file .", "title": "", "metadata": ""}
{"_id": "2bc92e492faacf5f029e36165000e6cd", "text": "docstring for argparse", "title": "", "metadata": ""}
{"_id": "50d232abc90f1fea2ace2ddce04b9400", "text": "Get adjacency matrix .", "title": "", "metadata": ""}
{"_id": "791fb1f59f6e26834dbc3034430bae24", "text": "Get the date from a value that could be a date object or a string .", "title": "", "metadata": ""}
{"_id": "bba219fe96745a458242cb1078cb3d9e", "text": "This removes newlines and multiple spaces from a string .", "title": "", "metadata": ""}
{"_id": "41bd1e217969645428b8e20c3197b6bf", "text": "Wrapper to the jinja2 render method from a template file", "title": "", "metadata": ""}
{"_id": "198583fa2b13104a4dabc282f28a9678", "text": "Serializes and writes given Python object to the specified YAML file .", "title": "", "metadata": ""}
{"_id": "e28ccba5d322748c3f6c6f3e75598c94", "text": "Set python logging library config .", "title": "", "metadata": ""}
{"_id": "af048ac99168ef8dcbdb5d41bcad250d", "text": "Clears the current image", "title": "", "metadata": ""}
{"_id": "86578e648c21135ca948d3498533a7b1", "text": "Helper for matplotlib imshow", "title": "", "metadata": ""}
{"_id": "c3ddbcf19f656c5b90c595f9c939959b", "text": "Transforms a DataFrame in place . Computes all outputs of the DataFrame .", "title": "", "metadata": ""}
{"_id": "cddb5d1678d9218dabaee5bcbca74396", "text": "Make setuptools . Extension .", "title": "", "metadata": ""}
{"_id": "46e45ad6131866f3c3cc97872aea284e", "text": "* A datetime stamp in MySQL format : YYYY - MM - DDTHH : MM : SS *", "title": "", "metadata": ""}
{"_id": "8465bcea59bed754a30afaca07289b3c", "text": "Return True if Cython or Pyrex can be imported .", "title": "", "metadata": ""}
{"_id": "333458b2775a3146bace38d70d47aff1", "text": "Helper function for conversion of various data types into numeric representation .", "title": "", "metadata": ""}
{"_id": "1c227d4e6464d4e874437afc7a6ce20e", "text": "Re - index every document in a named index .", "title": "", "metadata": ""}
{"_id": "4e0c7cc37cf2f006467b86a1fd42849c", "text": "Return a Vector as the product of the vector and a real number .", "title": "", "metadata": ""}
{"_id": "9f9991fc48818d1db292497c360fba32", "text": "Close log", "title": "", "metadata": ""}
{"_id": "08a56d011246a3aedcbdd30cc0cf1216", "text": "Find the conda executable robustly across conda versions .", "title": "", "metadata": ""}
{"_id": "b4f1b1056e9ebba27b81c63e4cc1f26a", "text": "Get data from json file", "title": "", "metadata": ""}
{"_id": "62cec810d28d6f63d0ae126c84ee50e6", "text": "Return full mask where True marks pixels within the given shape .", "title": "", "metadata": ""}
{"_id": "40b48ca2a0a0ae423cc8b106b8257abf", "text": "Helps us to create a movie .", "title": "", "metadata": ""}
{"_id": "ce7010fca11442692973231d7e7536b4", "text": "List the usb id of all android devices connected to the computer that are detected by adb .", "title": "", "metadata": ""}
{"_id": "883ba09c4a9b846ae2bf87cc412386a8", "text": "Remove multiple elements from a list and return result . This implementation is faster than the alternative below . Also note the creation of a new list to avoid altering the original . We don t have any current use for the original intact list but may in the future ...", "title": "", "metadata": ""}
{"_id": "43468344ae34b716d6bb675847d96fc9", "text": "Read in file contents and set the current string .", "title": "", "metadata": ""}
{"_id": "7db44d76ada58e9f6047e7f3e24ed9cd", "text": "Return a str of decimal with two digits after a decimal mark .", "title": "", "metadata": ""}
{"_id": "1a8a927c7fb1c8362eb8900e87ae1aed", "text": "Make the Python instance take ownership of the GIBaseInfo . i . e . unref if the python instance gets gc ed .", "title": "", "metadata": ""}
{"_id": "dfb11b52cddc4b4337eb7c8ad31c6780", "text": "Adds a positional argument named dest to the parser .", "title": "", "metadata": ""}
{"_id": "57dc4e27e7b7472b210aab1279ca0b41", "text": "Return an inverted dictionary where former values are keys and former keys are values .", "title": "", "metadata": ""}
{"_id": "a3a5a5ec7fbc43bcf4ff9d98c84209a9", "text": "Normalize path slashes .", "title": "", "metadata": ""}
{"_id": "7bde15a78b66613524eb24738a825dae", "text": "MAD -- Median absolute deviation . More robust than standard deviation .", "title": "", "metadata": ""}
{"_id": "e1589a478cbcc1a716749ab2aa40bd31", "text": "Reimplement Qt method", "title": "", "metadata": ""}
{"_id": "a26b56b4b896bae653723464182c8fe6", "text": "Returns a sorted list of all system font names", "title": "", "metadata": ""}
{"_id": "69ed65725c000b4e2d802d31402bc98d", "text": "Log in to the API .", "title": "", "metadata": ""}
{"_id": "4eab0f9a06321e910ddbe4cc5ceae12b", "text": "matching of datetimes in time columns for data filtering", "title": "", "metadata": ""}
{"_id": "f08c48edd369428e1ed7c6986aba98f1", "text": "Writes a dictionary to a yaml file : param dictionary : the dictionary to be written : param path : the absolute path of the target yaml file : param kwargs : optional additional parameters for dumper", "title": "", "metadata": ""}
{"_id": "1a118f2845713e74b4906fd3004ce210", "text": "Merge all the PDF files in pdf_filepaths in a new PDF file out_filepath .", "title": "", "metadata": ""}
{"_id": "0e4b2a508d01840516733a5178ca6fea", "text": "Standard first line in a PDF .", "title": "", "metadata": ""}
{"_id": "fde11534c80e3ee0b02f573620f9db81", "text": "Reads the date from a string in the format YYYY / MM / DD and returns : class : datetime . date", "title": "", "metadata": ""}
{"_id": "243c9ce69362287109226691e18a249d", "text": "Create directories if they do not exist otherwise do nothing .", "title": "", "metadata": ""}
{"_id": "0c151714688595e6ca49ca707ff64caa", "text": "Convert to timestamp .", "title": "", "metadata": ""}
{"_id": "755747077cafdcaaacce59216a50ec40", "text": "Assert an alert is showing with the given text .", "title": "", "metadata": ""}
{"_id": "95197bf7de0674ec7237bdf629de870b", "text": "Initialize Flask application .", "title": "", "metadata": ""}
{"_id": "f9e6fd3b0a7ca174a7a3c169c7cb3da4", "text": "One - hot encode labels from input", "title": "", "metadata": ""}
{"_id": "6dbc43efa03b849a9d35b53db957217e", "text": "Python 3 input () / Python 2 raw_input ()", "title": "", "metadata": ""}
{"_id": "89bb07827385b84caebe8c3682041405", "text": "Return frequencies for DFT", "title": "", "metadata": ""}
{"_id": "9c1f771c13239631bfbe92462ac3b194", "text": "Get the magnitude of a vector .", "title": "", "metadata": ""}
{"_id": "970113a67fcd27f4e20c4d7f2469938c", "text": "Read tag data from file and return as unicode string .", "title": "", "metadata": ""}
{"_id": "e7d03ee06c3bc3e87b42063787350778", "text": "Matrix solve op .", "title": "", "metadata": ""}
{"_id": "d2436cc4f6017b65e08ce30273a821a5", "text": "Check the text .", "title": "", "metadata": ""}
{"_id": "114a74565dae89b03b8dd536494fee16", "text": "Return an appropriate positive infinity for this dtype .", "title": "", "metadata": ""}
{"_id": "4356388c18123b9ea99b384b69be8c45", "text": "Bytes are encoded as a long followed by that many bytes of data .", "title": "", "metadata": ""}
{"_id": "ecfca2599ea4c946460c0c6074231612", "text": "Return a Cache containing the entries of self that are not in other .", "title": "", "metadata": ""}
{"_id": "1565e8b3da33fb1414f9bc9e80c170a7", "text": "Return a hash of a NumPy array .", "title": "", "metadata": ""}
{"_id": "1da0c36b4a47c5a939854b0289ccf58f", "text": "Splits a %s : %d string and returns the string and number .", "title": "", "metadata": ""}
{"_id": "cf0bec3e91aef273f456d22720758ca9", "text": "Reads a csv and returns a List of Dicts with keys given by header row .", "title": "", "metadata": ""}
{"_id": "ca4afa00aaf18f75084a5ee53bf641bf", "text": "Creates a mapping from indices to labels .", "title": "", "metadata": ""}
{"_id": "3cbb75004eb06ccefefe77a17546bb7b", "text": "SNAGGED FROM traceback . py", "title": "", "metadata": ""}
{"_id": "2fc8697e05748ad734779551c597186c", "text": "Return a prettier version of obj", "title": "", "metadata": ""}
{"_id": "92fb218085a3e645219ce1a45c497332", "text": "computes factorial of n", "title": "", "metadata": ""}
{"_id": "ca0ccce8cf7f2a7c43d5609aa2b0848b", "text": "Method to handle what to do when the stop button is pressed", "title": "", "metadata": ""}
{"_id": "624d82c7032fe1ffef866ae665ea04d0", "text": ">>> l = [ 1 1 1 ] >>> obj_in_list_always ( l 1 ) True >>> l . append ( 2 ) >>> obj_in_list_always ( l 1 ) False", "title": "", "metadata": ""}
{"_id": "208b1bcfb168ba7226b4c202496a47ab", "text": "dfdatetime . Filetime : creation time or None if not set .", "title": "", "metadata": ""}
{"_id": "7ff707c0b2837b46bef9a2291b882945", "text": "Enable a default web proxy", "title": "", "metadata": ""}
{"_id": "d9f518dd50be3a44614bf30a7fbcfa61", "text": "Check if filename1 and filename2 point to the same file object . There can be false negatives ie . the result is False but it is the same file anyway . Reason is that network filesystems can create different paths to the same physical file .", "title": "", "metadata": ""}
{"_id": "11c87e99ca09d04de8724dbdd710da53", "text": "Sets value of key key to value in both session and cookies .", "title": "", "metadata": ""}
{"_id": "6ffb52fef362034a09c5d4a04a2ab498", "text": "Computes all the integer factors of the number n", "title": "", "metadata": ""}
{"_id": "c44195c1628db8a30f43534e03b005ee", "text": "Parse a string of the form 305 . 48b into a Python float . The terminal letter if present indicates e . g . billions .", "title": "", "metadata": ""}
{"_id": "908973373981912a9e52c99adc64c347", "text": "Print out memory usage at this point in time", "title": "", "metadata": ""}
{"_id": "7eb1643e3f0b57035db7774b9ed5cd9d", "text": "Transforms the regular socket . socket to an ssl . SSLSocket for secure connections . Any arguments are passed to ssl . wrap_socket : http : // docs . python . org / dev / library / ssl . html#ssl . wrap_socket", "title": "", "metadata": ""}
{"_id": "86a1c757961ed8e9911f41dd243f8ff3", "text": "Decode base64 string to byte array .", "title": "", "metadata": ""}
{"_id": "c9282a460923aab7c62b1c2b049af1fe", "text": "Changes the base color of a widget ( background ) . : param widget : widget to modify : param color : the color to apply", "title": "", "metadata": ""}
{"_id": "f4f1a257a39118fbacc2a6fa6e63b225", "text": "Checks if a string is an integer . If the string value is an integer return True otherwise return False . Args : string : a string to test .", "title": "", "metadata": ""}
{"_id": "f9fba668ee6f6286a7ced368669ac01a", "text": "Return a list of the files with the commas removed .", "title": "", "metadata": ""}
{"_id": "5ae0122631b12c492a3615939723feeb", "text": "Convert to camel case .", "title": "", "metadata": ""}
{"_id": "4d752e41354980229e6ff99eddb0bf9b", "text": ": param string s : under_scored string to be CamelCased : return : CamelCase version of input : rtype : str", "title": "", "metadata": ""}
{"_id": "97eb81f4258196a8213389d9f7266316", "text": "Print a list in tabular format Based on https : // stackoverflow . com / a / 8356620", "title": "", "metadata": ""}
{"_id": "61ee181e1a9f8bacd539879e32227891", "text": "Returns the day name", "title": "", "metadata": ""}
{"_id": "f45afedf30704c50b5bcc9bc78929c0e", "text": "Build the lexer .", "title": "", "metadata": ""}
{"_id": "a82c4123d81b8d8a21490c05691d4cd0", "text": "Strip comments from json string .", "title": "", "metadata": ""}
{"_id": "d3788677ca03ecc74a085e48a7b03539", "text": "Print warning about interrupt and empty the job queue .", "title": "", "metadata": ""}
{"_id": "4673e08bd03e6d4f96065256c7e58251", "text": "Private method that sets the value currently of the property", "title": "", "metadata": ""}
{"_id": "a48bc135239eada19b0815dba505576a", "text": "The l2 norm of an array is is defined as : sqrt ( ||x|| ) where ||x|| is the dot product of the vector .", "title": "", "metadata": ""}
{"_id": "90b6baf8caf4166913dd64215bf5929f", "text": "Format a duration in seconds .", "title": "", "metadata": ""}
{"_id": "bf89217d0955bae9fdb161e9cee59692", "text": "Isolates x from its equivalence class .", "title": "", "metadata": ""}
{"_id": "3374ece7604bdc76ce69f534ecdc1e33", "text": "Indent given text using custom spacing default is set to 4 .", "title": "", "metadata": ""}
{"_id": "d25593a70c506a2a4aa0a7990a0482bb", "text": "Load graph as defined by a DOT file . The file is assumed to be in DOT format . It will be loaded parsed and a Dot class will be returned representing the graph .", "title": "", "metadata": ""}
{"_id": "35a7c52f54815b1efbd8d2f0edbed011", "text": "Get all documents from the given index .", "title": "", "metadata": ""}
{"_id": "ae765dfa146a9d56babccb149e9da6f2", "text": "Deletes key cell", "title": "", "metadata": ""}
{"_id": "3aed4f8c279cae915f5f5c5396915619", "text": "read the lines from a file into a list", "title": "", "metadata": ""}
{"_id": "65e73d3db138e2093b198da918eb8cea", "text": "format mpv s title", "title": "", "metadata": ""}
{"_id": "c44522066c3da43c0c8902a1a65123e9", "text": "Support instance methods", "title": "", "metadata": ""}
{"_id": "5837b88e2ed46f99c08b1ec20e57d979", "text": "Check if two pathes represent the same file .", "title": "", "metadata": ""}
{"_id": "f83d501eba0aa7bfce9612276c081567", "text": "r A function to support exiting from exit hooks .", "title": "", "metadata": ""}
{"_id": "022b029cdf621a2cf63a4a71f34b92a7", "text": "Stops the process status RPC server .", "title": "", "metadata": ""}
{"_id": "85f11a9b08e1b079bbd36389a97a4054", "text": "Return True if the queue is full", "title": "", "metadata": ""}
{"_id": "3c043aa734e098f17fb792884a04ffb5", "text": "Convert string from camel case to snake case .", "title": "", "metadata": ""}
{"_id": "c8c8c3993046ebf75709a72aaa75c33a", "text": "Prompt the user for input and handle any abort exceptions .", "title": "", "metadata": ""}
{"_id": "915d6db86f134e79c95a388f26e4ca1d", "text": "Converts the table to a dict .", "title": "", "metadata": ""}
{"_id": "128234c6633e448a820d0839491ba9e7", "text": "Compute the mean value across a list of dictionaries", "title": "", "metadata": ""}
{"_id": "186f5c82681ad759d7af0921f77f53c9", "text": "DFS detect connected component recursive implementation", "title": "", "metadata": ""}
{"_id": "c50c0b7935e30f4859d357c212e7ef4f", "text": "Return the unique items from iterable * seq * ( in order ) .", "title": "", "metadata": ""}
{"_id": "efa4f6aa439098565d3018ee6c35bffa", "text": "A messy way to import library - specific classes . TODO : I should really make a factory class or something but I m lazy . Plus factories remind me a lot of java ...", "title": "", "metadata": ""}
{"_id": "193cbe6d705a2ee10468612947f1c329", "text": "Close all connections .", "title": "", "metadata": ""}
{"_id": "c105361a2f90413b601297d125cab3b7", "text": "Apply re . sub to bunch of ( pattern repl )", "title": "", "metadata": ""}
{"_id": "f02e42f800626dcf52596d2a571367e3", "text": "Return password from pipe if not on TTY else False .", "title": "", "metadata": ""}
{"_id": "f238973f15f67bf400a695fc95e9f911", "text": "Validates the returned positional object", "title": "", "metadata": ""}
{"_id": "e9858df7debba2a1629441d079d64580", "text": "Make bars in horizontal bar chart thinner", "title": "", "metadata": ""}
{"_id": "9b277c0dc08345279565ad86065b15bc", "text": "Check if enough time has elapsed to perform a check () .", "title": "", "metadata": ""}
{"_id": "af0e8ce2a1b96836d8e814c5303487ea", "text": "Choose k random elements of array .", "title": "", "metadata": ""}
{"_id": "6df2f43dd7a01449cbb3fd5b24fa7431", "text": "Return a JavaRDD of Object by unpickling", "title": "", "metadata": ""}
{"_id": "7d9694b2a42ced8ae49c5b8bb3cd60b4", "text": "Pretty print an object as YAML .", "title": "", "metadata": ""}
{"_id": "5f6b07a433dad1150c9911fa4295f026", "text": "connect to the given server e . g . : \\\\ connect localhost : 4200", "title": "", "metadata": ""}
{"_id": "670820b0b08637fe7046daf145fb605b", "text": "Clear only any cached global data .", "title": "", "metadata": ""}
{"_id": "0c577131b71a4735603282e751c1c054", "text": "Parse an ISO format date ( YYYY - mm - dd ) .", "title": "", "metadata": ""}
{"_id": "a5b55ff79d303be45192465a5f910ac6", "text": "Let user select a directory .", "title": "", "metadata": ""}
{"_id": "bff1d9c63f7c6eb285b938f2126e1d4c", "text": "Returns this programs current memory usage in bytes", "title": "", "metadata": ""}
{"_id": "db5613b398f8791f3d11cb11a8afaaeb", "text": "function : to be called with each stream element as its only argument", "title": "", "metadata": ""}
{"_id": "28bfeeecfa0e80a7e9c435a931cf5786", "text": "Callback for comboboxes : notifies us that a combobox for the given item and column has changed", "title": "", "metadata": ""}
{"_id": "3423ec8f90d72df61e53e03409b272b9", "text": "clear plot", "title": "", "metadata": ""}
{"_id": "6a0915c7e08320ec344174543fae9751", "text": "Return a string of data after gzip decoding", "title": "", "metadata": ""}
{"_id": "9897993a094fcb2eade09165bdc359b5", "text": "Helper that clears the composition .", "title": "", "metadata": ""}
{"_id": "cd5a67072b6add7d89300afecdcf27f3", "text": "Returns all files in a given directory", "title": "", "metadata": ""}
{"_id": "77f2f9341c01eb81e6473763f31340af", "text": "Executes a method until the retry limit is hit or not None is returned .", "title": "", "metadata": ""}
{"_id": "ffa70a08179e63c4fad8024465c6f513", "text": "Unpickling function for auto - generated PVec / PSet field types .", "title": "", "metadata": ""}
{"_id": "24cbc896865864ce2260fa759d1c146d", "text": "call a func with args and kwargs print name of func and how long it took .", "title": "", "metadata": ""}
{"_id": "56dfb68a041cb521253795940b289c31", "text": "Pause the music", "title": "", "metadata": ""}
{"_id": "e8b936877a28b6d926c3a9c4838514e1", "text": "Like a bulk : meth : forceput .", "title": "", "metadata": ""}
{"_id": "e28dd3bcb866184feebc440ee9cdf8d2", "text": "Read and return the data from a corpus json file .", "title": "", "metadata": ""}
{"_id": "5594214d70eae2db25506dd4d9bea833", "text": "Check if a dtype is a subclass of the numpy datetime types", "title": "", "metadata": ""}
{"_id": "91176df19353a44c354b403b724750e0", "text": "Set the _force_vertical flag when rendering axes", "title": "", "metadata": ""}
{"_id": "4d153b354c38d370a351ec12666ad3e2", "text": "Creates converts to a masked array", "title": "", "metadata": ""}
{"_id": "108988bee99dcae5309bc5e1e63dd8a8", "text": "manipulate json data on the fly", "title": "", "metadata": ""}
{"_id": "cf6c216dfc8e22dfc0fe8bb61a2a06a5", "text": "Closest values", "title": "", "metadata": ""}
{"_id": "8cb30e3b232a4258444fd38f25209df8", "text": "Returns a tuple for a kind name and kind display name of an entity . By default uses the app_label and model of the model object s content type as the kind .", "title": "", "metadata": ""}
{"_id": "c7ecd7e8190000b6635a5b2f046ae3ec", "text": "Turns response into a properly formatted json or text object", "title": "", "metadata": ""}
{"_id": "47f1361324be640b25da07744e048584", "text": "Labels plots and saves file", "title": "", "metadata": ""}
{"_id": "a34bdaf2547df7ff96d730c09f168d0e", "text": "Return the fully - qualified name of a function .", "title": "", "metadata": ""}
{"_id": "a24b0d4239910042a86167b0dea0ee81", "text": "Calculates the distance between two points on earth .", "title": "", "metadata": ""}
{"_id": "5c5368d9234bd1a0fe6c4a39d685e5d4", "text": "Sorts a dict by value .", "title": "", "metadata": ""}
{"_id": "7407c3d56688eb65086fab2ee10a056d", "text": "Creates sql datetime2 object from Python datetime object ignoring timezone", "title": "", "metadata": ""}
{"_id": "4460b778d94b166ca23a24dfd2bc883d", "text": "Flatten a 4d - tensor into a 3d - tensor by joining width and height .", "title": "", "metadata": ""}
{"_id": "ce151d6234d3436f59c284243b2fdb05", "text": "Build argument parsers .", "title": "", "metadata": ""}
{"_id": "664fa65bd0935c22f816a434b13a1849", "text": "Populates the ListView with a string list .", "title": "", "metadata": ""}
{"_id": "5ff5f3da1ed1f8ee21859c84c511b682", "text": "Return group content .", "title": "", "metadata": ""}
{"_id": "eeb9b46d3da04127bba9d560285da6fc", "text": "Read and return filename in root dir of project and return string", "title": "", "metadata": ""}
{"_id": "1864abab9d0d78d404f8ebe841027c89", "text": "Test if two objects are equal based on a comparison of the specified attributes attrs .", "title": "", "metadata": ""}
{"_id": "390e745a1a187c219d568ad9323c7eab", "text": "Create or load an object if necessary .", "title": "", "metadata": ""}
{"_id": "d5ae710d34109644b33faa85d3318904", "text": "Return the width of the table including padding and borders .", "title": "", "metadata": ""}
{"_id": "1a14c51d367f43fec74e49065df7993f", "text": "Return the a string with the data type of a value for Graph data", "title": "", "metadata": ""}
{"_id": "1c7ca237e5834cf9a983d29fb5e6176b", "text": "Shape of histogram s data .", "title": "", "metadata": ""}
{"_id": "f6af17113a15f8de57312945096f320b", "text": "Set yaxis limits .", "title": "", "metadata": ""}
{"_id": "44b4d36be9922a0b2c2435cb9970f070", "text": "cgi . FieldStorage from wsgi . input .", "title": "", "metadata": ""}
{"_id": "bd05c3c2408ed01a745534fb2b8ac310", "text": "Integrate a Gaussian profile .", "title": "", "metadata": ""}
{"_id": "b39690b9830d88857adbef5008ff9789", "text": "Converts html content to plain text", "title": "", "metadata": ""}
{"_id": "14d6c5fdbd69c27c4c816b764119567d", "text": "Validates that value is an instance of basestring for Python 2 or str for Python 3 .", "title": "", "metadata": ""}
{"_id": "fa869cb873eb0cd0935ea5d6d0ba831c", "text": "return True if the current distribution is running on debian like OS .", "title": "", "metadata": ""}
{"_id": "f566999062d51bc7ba49df0296d74c05", "text": "Get the current time .", "title": "", "metadata": ""}
{"_id": "a447b64b26e727065f3274cd71bcd923", "text": "Context manager that causes pprint () to print OrderedDict objects as nicely as standard Python dictionary objects .", "title": "", "metadata": ""}
{"_id": "7330dfedeab461ff280c33bd80d76096", "text": "Flatten dict with defined key join symbol .", "title": "", "metadata": ""}
{"_id": "4591d478782dbef35d8284084f5a008b", "text": "Detect the presence of the dot utility to make a png graph .", "title": "", "metadata": ""}
{"_id": "5fac40a60ca6a70cf7168b7a2a347627", "text": ": param source : some iterable source ( list file etc ) : param lineSep : string of separators ( chars ) that must be removed : return : list of non empty lines with removed separators", "title": "", "metadata": ""}
{"_id": "6fbd32018f4f36c5fd17eed71493d423", "text": "Print a numeric value to the display . If value is negative it will be printed with a leading minus sign . Decimal digits is the desired number of digits after the decimal point .", "title": "", "metadata": ""}
{"_id": "dac9314b2d17abfc5eb0c1e5f07701e8", "text": "Returns all column names and their data types as a list .", "title": "", "metadata": ""}
{"_id": "069e4e2a5e7b5aa333b3415bb40953e5", "text": "Convert this confusion matrix into a 2x2 plain list of values .", "title": "", "metadata": ""}
{"_id": "8eeda2b2c6999c2a28df682fa6708ec8", "text": "Returns True if the given object is a Pandas Data Frame .", "title": "", "metadata": ""}
{"_id": "7bc45ce5d490d957135ae40614f0df19", "text": "transpose matrix", "title": "", "metadata": ""}
{"_id": "f6038cd5a4d3b45a4ee308c47cf851b6", "text": "must be an iterable ( list array tuple )", "title": "", "metadata": ""}
{"_id": "47ab71a5e0a596010deb720b646e6b40", "text": "Return a hash of the contents of a dictionary", "title": "", "metadata": ""}
{"_id": "635c717edc52b3b09e3f86441b1cda91", "text": "Calculates the probability matrix of substitutions i - > j over time t given the normalised generator diagonalisation .", "title": "", "metadata": ""}
{"_id": "f23a8f68aea1e202c35baa4fefda7735", "text": "return string as a comment", "title": "", "metadata": ""}
{"_id": "2b94a1fc1030c179e77bb1bd915b784a", "text": "Convert comma - delimited list / string into a list of strings", "title": "", "metadata": ""}
{"_id": "e3461c23736ffadc5b9c587eed232b79", "text": "Compute timestamp from a datetime object that could be timezone aware or unaware .", "title": "", "metadata": ""}
{"_id": "717fa5e797702f6fc3b82cbefc7f4425", "text": "From itertools cookbook . [ a b c ... ] - > ( a b ) ( b c ) ...", "title": "", "metadata": ""}
{"_id": "622e0ad885f57f9ec940dd55335cbec4", "text": "Wraps jsonschema . validate returning the same object passed in .", "title": "", "metadata": ""}
{"_id": "482f162e53ee4fc9a1c37e32507cf600", "text": "Translate an image in fourier - space with plane waves", "title": "", "metadata": ""}
{"_id": "c2ea35afe457be8c91915a87cb8e7605", "text": "Set y - axis limits of a subplot .", "title": "", "metadata": ""}
{"_id": "2cd7d85d4a1554f345572186dd089075", "text": "Linspace op .", "title": "", "metadata": ""}
{"_id": "406e3767925d20c3a4e77b34ebda6d0f", "text": "Check if the input filename with path is a file and is not empty .", "title": "", "metadata": ""}
{"_id": "352d041bfbb9ecb6c9d88e5665b1227c", "text": "Convert a ConfigParser to a dictionary .", "title": "", "metadata": ""}
{"_id": "d3048d74c11e8b38da41da2b7a88fc28", "text": "Remove all HTTP / 1 . 1 Hop - by - Hop headers from a list or : class : Headers object . This operation works in - place .", "title": "", "metadata": ""}
{"_id": "e713ba57e6d29ad30adbf3e771b4fb9a", "text": "Bulk insert or update .", "title": "", "metadata": ""}
{"_id": "340f35457986b727e0dfe75b04d7c2d4", "text": "Return a single boolean for arg1 == arg2 even for numpy arrays using element - wise comparison .", "title": "", "metadata": ""}
{"_id": "5606ca4a912e4dcbaeb13a03ede81879", "text": "Upermutate 1 - D data that is sorted by indices_of_increasing .", "title": "", "metadata": ""}
{"_id": "32af43c971be0301b57e49ddf949b0eb", "text": "If the statement is false raise the given exception .", "title": "", "metadata": ""}
{"_id": "b863491c17bb62000c43dad67328020a", "text": "A fast approximation of sigmoid", "title": "", "metadata": ""}
{"_id": "f959efdfc24c73ff25164cc7988fa134", "text": "Return True if the dataset name is valid .", "title": "", "metadata": ""}
{"_id": "03466c74b687ff4ede03400b4193c84c", "text": "Generate n values between start and end .", "title": "", "metadata": ""}
{"_id": "9323f13e2b4bd5e67fa653737a134233", "text": "Max reduction op .", "title": "", "metadata": ""}
{"_id": "6676471a7e229de5a401a88131fb7c0c", "text": "Scale the input array", "title": "", "metadata": ""}
{"_id": "03da0adb7b54cfacf0cc9943d6c00c45", "text": "Returns True when the graph has the given edge .", "title": "", "metadata": ""}
{"_id": "892d0b3c488602cd84b1567062b6ce9a", "text": "Queries should be a list of GraphQL objects", "title": "", "metadata": ""}
{"_id": "de4cedb79d9c8613a8db01db86339d04", "text": "Moves the text cursor to given line .", "title": "", "metadata": ""}
{"_id": "2025e0d187a4fc987b50dddd25415ca6", "text": "Check if the given cached item is invalid .", "title": "", "metadata": ""}
{"_id": "fe2391ff925c2739e6bbd6e231ead5ff", "text": "Parses a date string formatted like YYYY - MM - DD .", "title": "", "metadata": ""}
{"_id": "79bc9f9bbd92857549aa5d2d33c4c415", "text": "Return the current branch", "title": "", "metadata": ""}
{"_id": "977c4c7069ea4ed262e40570c9be29aa", "text": "Create a Listbox with a vertical scrollbar .", "title": "", "metadata": ""}
{"_id": "0f257dc5670273f493a46f61edadc25a", "text": "Loads and returns foreign library .", "title": "", "metadata": ""}
{"_id": "7b08ad90497a6885f3e3879c6d17e1d3", "text": "Return all filenames under recursively found in a directory", "title": "", "metadata": ""}
{"_id": "e62ee301a76278248a2a6d8d1e4da568", "text": "Turns a Python unicode string list into a Java String array .", "title": "", "metadata": ""}
{"_id": "dfb88ef02268f7e7a67fdbde97cae10f", "text": "Get screen width and height", "title": "", "metadata": ""}
{"_id": "9fa407d43ac9725651dac82a2f03fb9c", "text": "Get width and height of a PDF", "title": "", "metadata": ""}
{"_id": "67c04711299171e97082e6d713414cec", "text": "Convert camelCase ( used in PHP ) to Python - standard snake_case .", "title": "", "metadata": ""}
{"_id": "db3f372ae5a15f0f8d927901c1d66823", "text": "Convert a string of a calculation energy e . g . - 1 . 2345 eV to a float .", "title": "", "metadata": ""}
{"_id": "7e9e8d04d831e89aa0b2ce2b0732ad06", "text": "Dump single enum type . Keyword arguments : top -- top namespace", "title": "", "metadata": ""}
{"_id": "18b374bbd3e3c26f78e234aa2af175e5", "text": "Replace placeholders in text by using the data mapping . Other placeholders that is not represented by data is left untouched .", "title": "", "metadata": ""}
{"_id": "82b4db8a4c39407caf26f8f1e1a13bdd", "text": "Transform relative pathnames into absolute pathnames .", "title": "", "metadata": ""}
{"_id": "e2b9cf4b8a0bc034da6737c7e316183c", "text": "Return a legal python name for the given name for use as a unit key .", "title": "", "metadata": ""}
{"_id": "b0d295ba457db59b4c511334d367e90e", "text": "in comparison to argrelmax () more simple and reliable peak finder", "title": "", "metadata": ""}
{"_id": "783c6ca75836abaa0e5ecd9b125da0c8", "text": "Send a test error to APM Server", "title": "", "metadata": ""}
{"_id": "002c102341ec6555178aa577e9f72861", "text": "r Handles whitespace cleanup .", "title": "", "metadata": ""}
{"_id": "2dff6b40f23af2a5af9077452d067cd4", "text": "Returns are under the ROC curve", "title": "", "metadata": ""}
{"_id": "b855398eb8144e8419d2ccdd6e3d560d", "text": "Generate M random numbers in [ - pi pi ) .", "title": "", "metadata": ""}
{"_id": "88c877cb607c17ffccba363d93fedf30", "text": "Get all the prime factor of given integer", "title": "", "metadata": ""}
{"_id": "19727289b379a018276993c5e1b4639f", "text": "Pads a hex string up to the given bit_size", "title": "", "metadata": ""}
{"_id": "f76a76399f81de0ab4c9fbcf10f462ca", "text": "Return minimal quantum of a number as defined by precision .", "title": "", "metadata": ""}
{"_id": "e32e05599ad5cc798d8b976e791b78dc", "text": "True positive rate tp / ( tp + fn )", "title": "", "metadata": ""}
{"_id": "616ce364809f1d740c8972e1e757de13", "text": "gets a param from kwargs or uses a default_value . if found it s removed from kwargs", "title": "", "metadata": ""}
{"_id": "8944fc0439b9ccdf3ac6cfdeb712b7f0", "text": "Take a stdout and print it s lines to output if lines are present .", "title": "", "metadata": ""}
{"_id": "001375005a83825c49e37f5f46a45078", "text": "Logarithmic loss with non - necessarily - binary labels .", "title": "", "metadata": ""}
{"_id": "6036ea4fcc0259c49d29d170ba2737e5", "text": "Read a given number of 32 - bits unsigned integers from the given file with the given endianness .", "title": "", "metadata": ""}
{"_id": "78aed583fd4898c1c35c04fa54559dd1", "text": "Formats a list of elements using the given line style", "title": "", "metadata": ""}
{"_id": "968fc5ad1cbacb0ad730d044692ddfd5", "text": "Return a naive datetime object for the given timezone . A timezone is any pytz - like or datetime . tzinfo - like timezone object . If no timezone is given then UTC is assumed .", "title": "", "metadata": ""}
{"_id": "d876f768a874beb48f7e2ba6fedcbb57", "text": "Retrieves a list of member - like objects ( members or properties ) that are publically exposed .", "title": "", "metadata": ""}
{"_id": "5a85fdca28a657315a0870beeb131905", "text": "Wrap a string at a line length", "title": "", "metadata": ""}
{"_id": "ac7b6cdcccc667f81fb36bd90a1df43e", "text": "Skip a section", "title": "", "metadata": ""}
{"_id": "6cb450639b342277fb27754c81cd5c92", "text": "Given the python representation of a JSONschema as defined in the swagger spec validate that the schema complies to spec . If target is provided that target will be validated against the provided schema .", "title": "", "metadata": ""}
{"_id": "f29623cb3347753cba1322522edec0b9", "text": "RETURN field SEQUENCE AS STRING", "title": "", "metadata": ""}
{"_id": "2b997e8649846abfe3af1e41e83179ad", "text": "Returns the list of modes .", "title": "", "metadata": ""}
{"_id": "c3946b8dfd9cae2dcf046b11ba77bf68", "text": "Returns the longest string size for a string entry across data .", "title": "", "metadata": ""}
{"_id": "269e04d132abdaf0cb34f24c4081a3b8", "text": "Wait until all task are executed .", "title": "", "metadata": ""}
{"_id": "0feb0d4e66f67d059a16b7399dd871b4", "text": "Enforces a process memory limit .", "title": "", "metadata": ""}
{"_id": "82fc208091eed7853731ac6aff04eb75", "text": "Convert a Stripe API timestamp response ( unix epoch ) to a native datetime .", "title": "", "metadata": ""}
{"_id": "94e925bd4a6ea9016f06efb4ad986b2e", "text": "This method allows printing several images in one shot . This is useful if the client code does not want the printer to make pause during printing", "title": "", "metadata": ""}
{"_id": "5b240429e0a0fe9248d879c5e9bd316a", "text": "Return a percentile range from an array of values .", "title": "", "metadata": ""}
{"_id": "8846f795bbbaf4032b0d1730a8f16cc2", "text": "Convert anything to a bytearray . See - http : // stackoverflow . com / questions / 7585435 / best - way - to - convert - string - to - bytes - in - python - 3 - http : // stackoverflow . com / questions / 10459067 / how - to - convert - my - bytearrayb - x9e - x18k - x9a - to - something - like - this - x9e - x1", "title": "", "metadata": ""}
{"_id": "465278e8a523a1105be5afb0f1bfe7f1", "text": "Call a system command in the background disown it and hide it s output .", "title": "", "metadata": ""}
{"_id": "d5910e38c5ab112ca148a4fe6592992c", "text": "Install venv + deps .", "title": "", "metadata": ""}
{"_id": "6dd75f1eba80c15128800a15da418895", "text": "Normalize data .", "title": "", "metadata": ""}
{"_id": "926a2b210c70d4bd22d076055f4b2f31", "text": "Crunch a 64 - bit int ( 8 bool bytes ) into a bitfield .", "title": "", "metadata": ""}
{"_id": "35c7747fc2d1756b352f58f59dd5a032", "text": "Directly gets a variable from a parent frame - scope .", "title": "", "metadata": ""}
{"_id": "4e7ccfaa84fb9ce0e30895c9cf11787b", "text": "Idempotent and None - safe version of strict_bool .", "title": "", "metadata": ""}
{"_id": "32be5f604bde0e66ec31005dfdcde45e", "text": "Exit without garbage collection this speeds up exit by about 10ms for things like bash completion .", "title": "", "metadata": ""}
{"_id": "e7dd00a104d724e18ffd2b8cd1aef163", "text": "Validates an email address Source : Himanshu Shankar ( https : // github . com / iamhssingh ) Parameters ---------- email : str", "title": "", "metadata": ""}
{"_id": "d1aa94d1a8f0a953f4af727b0b59e9e8", "text": "Create new bucket .", "title": "", "metadata": ""}
{"_id": "c765ffab451b8cf4e350d81f34a0d209", "text": "Update conda packages in a conda env", "title": "", "metadata": ""}
{"_id": "e5a879f3ab89d3cfff12cd4431b4958c", "text": "( Point Point ) - > Point Return the point that lies in between the two input points .", "title": "", "metadata": ""}
{"_id": "3a79cfc7045f3ad8b8f739a97833aad9", "text": "Wait until all the threads are finished .", "title": "", "metadata": ""}
{"_id": "163a0d0e47ea7fade2e1c034cd63aeb4", "text": "load an nparray object from a json filename", "title": "", "metadata": ""}
{"_id": "0b9e03d5acd0a0963031fca5a29f444c", "text": "We have a full length slice .", "title": "", "metadata": ""}
{"_id": "c51d00e8afc8851de8b6d2428364fa5b", "text": "Return a tuple that contains ( width height ) Pass in a url to an image and find out its size without loading the whole file If the image wxh could not be found the tuple will contain None values", "title": "", "metadata": ""}
{"_id": "6f763c5138d6c0c5220ca083d10b2455", "text": "Opens the file and reads the value", "title": "", "metadata": ""}
{"_id": "f4b44f63de19636021733682e574c0c4", "text": "Checks if given value is a list tries to convert if it is not .", "title": "", "metadata": ""}
{"_id": "7fded946334b5a96f760c8654f1ab34a", "text": "renames newick from numbers to sample names", "title": "", "metadata": ""}
{"_id": "b4728aed15806fdff682386762433114", "text": "Using the size of the y axis return a fraction of that size .", "title": "", "metadata": ""}
{"_id": "8ff633c891f002cb1f69b6ffad49b242", "text": "Get a callable that sends the actual API request internally .", "title": "", "metadata": ""}
{"_id": "a13d493e220d787267020065aaea0a58", "text": "Finds the longest path in a dag between two nodes", "title": "", "metadata": ""}
{"_id": "a60c0030bd5e60f5ca43e9afc8dfdc66", "text": "Makes a classname", "title": "", "metadata": ""}
{"_id": "b4c764ea5b3b04471a8ce8713fd8f811", "text": "Delete index entirely ( removes all documents and mapping ) .", "title": "", "metadata": ""}
{"_id": "37ef5bb0a4c7b09c6e7cd3835f103f86", "text": "Render the graph as JavaScript in a Jupyter Notebook .", "title": "", "metadata": ""}
{"_id": "c9e39af3ac534ca2d44f66113a5b100b", "text": "Given a sequence convert it to a comma separated string . If however the argument is a single object return its string representation .", "title": "", "metadata": ""}
{"_id": "bc80e4e9ad47b327d14eb59cfa24abe8", "text": "Find a check box and uncheck it . The check box can be found via name id or label text . ::", "title": "", "metadata": ""}
{"_id": "1555fb16f3f3e193fbdc0bf7e9d51108", "text": "Check if we are in a tty .", "title": "", "metadata": ""}
{"_id": "17f29b30f30ec88cb0ea77de03da4e87", "text": "Remove the prefix from the text if it exists .", "title": "", "metadata": ""}
{"_id": "27a09670c1af38f1b2a66f46e3d2a806", "text": "get a value from a tag ( if it exists )", "title": "", "metadata": ""}
{"_id": "cd8fed3d13f72f2f289024bf998374af", "text": "Converts from hex to hsv", "title": "", "metadata": ""}
{"_id": "a59a6301f91e84776929369f77f8cc22", "text": "Empty a table by deleting all of its rows .", "title": "", "metadata": ""}
{"_id": "18eba0cff652355de1c4fbbf7ac3367f", "text": "Sort the data .", "title": "", "metadata": ""}
{"_id": "33bf65225840b926a77e38557ff44a6b", "text": "r Directly reads text data from url", "title": "", "metadata": ""}
{"_id": "63839f24ee95bd0b63f11bb8990fe419", "text": "Represent data as a masked array .", "title": "", "metadata": ""}
{"_id": "bd212bd9ee434b92b80b19af386af9a8", "text": "Turn a list to list of list", "title": "", "metadata": ""}
{"_id": "284f766166272927ecd11846c88ecef2", "text": "Calculates the mean and the standard deviation of the given samples .", "title": "", "metadata": ""}
{"_id": "1a4597935ca41ed27e6c5d30c3f6b25d", "text": "Reset the instance", "title": "", "metadata": ""}
{"_id": "42fa4d02def455ae20714d62cfe1b0ce", "text": "Updates text font color button", "title": "", "metadata": ""}
{"_id": "05cf05a157f2efa206a3022958a69480", "text": "Returns value of a sine wave at a given frequency and framerate for a given sample i", "title": "", "metadata": ""}
{"_id": "b04ff1872e6cff2d14c1029674a56e67", "text": "return a boolean if we have a nested object e . g . a Series with 1 or more Series elements", "title": "", "metadata": ""}
{"_id": "daf6eb14e625c11fe56f88ef702c4b81", "text": "Return the number of characters in two strings that don t exactly match", "title": "", "metadata": ""}
{"_id": "28c5ebf7ceadb18ed06dd75f1b44d02c", "text": "Return the location of the static data directory .", "title": "", "metadata": ""}
{"_id": "71053509e2e800c00aa0f8010a639485", "text": "Set the memory per process in megabytes", "title": "", "metadata": ""}
{"_id": "7fa4411c9a9774bbaa35fa4c3c439b50", "text": "return grandparent s path string", "title": "", "metadata": ""}
{"_id": "85011c2435ffe7f7f22daf70ab077721", "text": "Return data as a JSON string .", "title": "", "metadata": ""}
{"_id": "b765610ddcafc73c7c0a89a79906e75d", "text": "Return time in milliseconds from start_time", "title": "", "metadata": ""}
{"_id": "784a1fb791d20e27cfa72b16548dbd38", "text": "Validate input data with input schema .", "title": "", "metadata": ""}
{"_id": "e7cc5f1723a88400e94f5f3831eef3fa", "text": "Tokenize an input string into a list of words ( with punctuation removed ) .", "title": "", "metadata": ""}
{"_id": "526804b15c52dba4859581b721088b75", "text": "Scrolls up to element", "title": "", "metadata": ""}
{"_id": "cdb438ac4c9ff82ae452fb6ab8fe8246", "text": "A function to generate the latex representation of sympy expressions .", "title": "", "metadata": ""}
{"_id": "654f60a4b8403cf4eb6521831b3123bb", "text": "Return True if list contains either values of type vtype or None .", "title": "", "metadata": ""}
{"_id": "4fcbe96c2f056f69834f242d3abbd9d2", "text": "Indicate whether the specified image file is valid or not .", "title": "", "metadata": ""}
{"_id": "1d651ad3d0fe8a8ef5909d59964ae52b", "text": "Skip a single frame from the trajectory", "title": "", "metadata": ""}
{"_id": "716eba74803a1854d1f1a196423ffbbd", "text": "Efficient conversion from scipy sparse matrix to cvxopt sparse matrix", "title": "", "metadata": ""}
{"_id": "472b5574f6790aef1b133bf5f0019026", "text": "Remove all items .", "title": "", "metadata": ""}
{"_id": "f87d3601e89da35dc9b4a628b6c3a06c", "text": "Simple directory walker", "title": "", "metadata": ""}
{"_id": "639a5ca360dd5a80f769526ac833ab2d", "text": "Convert val out of numpy time for use in to_dict . Needed because of numpy bug GH#7619", "title": "", "metadata": ""}
{"_id": "d9204072812eb74794e89baa4b454aba", "text": "Returns the column mapped by db_field name", "title": "", "metadata": ""}
{"_id": "8a9d8a07803e8a9db49e08b9d651443c", "text": "Trim left - right given string", "title": "", "metadata": ""}
{"_id": "75c0420253dfedf2a00a6b355e63d6e1", "text": "Returns the progress ratio and percentage .", "title": "", "metadata": ""}
{"_id": "8646477e3643f81ea98d7b04a3c3878b", "text": "Click the element", "title": "", "metadata": ""}
{"_id": "d8ec16f6976a63befb8aaa656118c040", "text": "Get hue value of HSL color .", "title": "", "metadata": ""}
{"_id": "67e018ee2365eb616aff4d8b80a18018", "text": "Perform a chunked PUT request to url with requests . session This is specifically to upload files .", "title": "", "metadata": ""}
{"_id": "95b1ca672b35e2b3a2857342a59ed961", "text": "Close child subprocess", "title": "", "metadata": ""}
{"_id": "a943f14f7b6b76455256954ad4e28e32", "text": "Lasso Regression", "title": "", "metadata": ""}
{"_id": "004c18a9178ad014be30ce330d09fa7f", "text": "Decorator to run a function with timing info .", "title": "", "metadata": ""}
{"_id": "48861522c4b6662e2413f0860c983cba", "text": "Builds instance from dictionary of properties .", "title": "", "metadata": ""}
{"_id": "ee97d080cfb8c7204fa6b171558cada3", "text": "Get milliseconds from a timedelta .", "title": "", "metadata": ""}
{"_id": "071aeb9c4ac385bf9a25a0065c43d45c", "text": "Wrap itertools . groupby to make life easier .", "title": "", "metadata": ""}
{"_id": "f739e9fd8ace2d051a8e963fd4ef1e10", "text": "Parse file specified by constructor .", "title": "", "metadata": ""}
{"_id": "a239f6785112d0854cb8205192fb6b87", "text": "Computes the unnormalized PDF of the normal distribution .", "title": "", "metadata": ""}
{"_id": "a4b871929476aa5e36ddf4a03d06cf9e", "text": "If item is not in lst add item to list at its sorted position", "title": "", "metadata": ""}
{"_id": "1c9c59a42b9d55206298f391aa4afdec", "text": "Return True if val is of integer type .", "title": "", "metadata": ""}
{"_id": "21168853346a0224de3803150f442a52", "text": "Remove null items from a dictionary", "title": "", "metadata": ""}
{"_id": "2279cf8ec24a06e6bf2df816f96484ae", "text": "Convert a list of tuples describing a table into a HTML string", "title": "", "metadata": ""}
{"_id": "9f0538e6e6a3d6f165944e2225648bae", "text": "Returns dictionary with number of connections for each database .", "title": "", "metadata": ""}
{"_id": "7a46626e16644cc6a8d61ef5118d6820", "text": "Compute tokenwise ( elementwise ) accuracy .", "title": "", "metadata": ""}
{"_id": "84789333ae353ce7162d89ddf5ebceae", "text": "Natural log of scipy norm function truncated at zero", "title": "", "metadata": ""}
{"_id": "68dd90436619dd1551de0ae8a683185d", "text": "Check if a given record is indexed .", "title": "", "metadata": ""}
{"_id": "432219c59cb568b86a9d38e807a7771b", "text": "Compute the gradient of the current model using the training set", "title": "", "metadata": ""}
{"_id": "dddd6f77d663ab8f55da3f1dcc2f1400", "text": "Generate new UUID", "title": "", "metadata": ""}
{"_id": "eb3bcdf2cd613f42aa9877134f9743e7", "text": "Return default argument value as given by argparse s add_argument () .", "title": "", "metadata": ""}
{"_id": "dbf6af842c1564d02d670823dc2ba0fc", "text": "Return whether two objects are equal via recursion using : func : numpy . array_equal for comparing numpy arays .", "title": "", "metadata": ""}
{"_id": "84a392cca4a67ed678d3055d4a5a2bfd", "text": "Remove instance from model", "title": "", "metadata": ""}
{"_id": "fa37d84304bc004a916dc9e39755383f", "text": "Add Builders and construction variables for SGI MIPS C ++ to an Environment .", "title": "", "metadata": ""}
{"_id": "6498ef0a4df6108211570bc18fa890b7", "text": "Determine the parenthetical change of level ( num closes - num opens ) .", "title": "", "metadata": ""}
{"_id": "6c443d631ad0416f95a2f9e5b89df660", "text": "Tags the current version .", "title": "", "metadata": ""}
{"_id": "6469cc9b4ab9f5fdf54ace5a38dda96a", "text": "Returns true if running on windows whether in cygwin or not .", "title": "", "metadata": ""}
{"_id": "4fa491ec8099e436a4c935ea96f18ef6", "text": "Align the given integer number to the closest page offset which usually is 4096 bytes .", "title": "", "metadata": ""}
{"_id": "6cdf6ad952d77b72924837d842765bc1", "text": "Parse a JSON file First remove comments and then use the json module package Comments look like : // ... or / * ... * /", "title": "", "metadata": ""}
{"_id": "9715958c15a541accd1cb10bba8e24cb", "text": "Stops playback", "title": "", "metadata": ""}
{"_id": "df859009fceeb810527f3adb1702278c", "text": "Return True if the class is a date type .", "title": "", "metadata": ""}
{"_id": "6fd195cacddc3e66d0606024bc95d598", "text": "Compile and return a Module s code object .", "title": "", "metadata": ""}
{"_id": "55f99be3fdad6c19e43e98b22e926e6e", "text": "This is an asyncio adapted version of pyserial read . It provides a non - blocking read and returns a line of data read .", "title": "", "metadata": ""}
{"_id": "7822edd3898c63285495f19a87418119", "text": "Flush all items from cache .", "title": "", "metadata": ""}
{"_id": "f415d90a3ec442246a293d05f997876f", "text": "Return all ( and only ) the uppercase chars in the given string .", "title": "", "metadata": ""}
{"_id": "7bebc9168c2f6a1a263a79aa2e16b4da", "text": "Get the the number of columns required to display a string", "title": "", "metadata": ""}
{"_id": "b2fcab06fe41875e06e93a5ec9d2869d", "text": "Args : dt : a datetime Returns : tuple of the datetime s year and quarter", "title": "", "metadata": ""}
{"_id": "ad3c7c79152a63bb4ca65152166b6609", "text": "Remove duplicates in a list .", "title": "", "metadata": ""}
{"_id": "750c3efa418d1ba497e6dbc2e7397cea", "text": "Hides the main window of the terminal and sets the visible flag to False .", "title": "", "metadata": ""}
{"_id": "18b1d09acd1d0f26a1211fc4ba554452", "text": "Grab data in TensorProto and convert to numpy array .", "title": "", "metadata": ""}
{"_id": "cf88f968aba38572ec1f169ca29e61d9", "text": "Return only the part of the row which should be printed .", "title": "", "metadata": ""}
{"_id": "3d6f4bd0f8d2b6cb082942304b46fee5", "text": "Filter the dict * d * to remove keys not in * keys * .", "title": "", "metadata": ""}
{"_id": "6ba66841ab9e4b4f91ec1ba0706d4c3c", "text": "Return True if the given object conforms to the Serializable protocol .", "title": "", "metadata": ""}
{"_id": "cae4e19ca2ff54593f67d4c470dca9cc", "text": "Extract table names from an SQL query .", "title": "", "metadata": ""}
{"_id": "8f9d9f40ca62e1352f3080e902e6f7a6", "text": "Return True if dtype is a numeric type .", "title": "", "metadata": ""}
{"_id": "b4bbc791ebde7590b55855d2dbe8ab7f", "text": "Set up neccessary environment variables", "title": "", "metadata": ""}
{"_id": "836b7b7263d7cd41985020783fae2b04", "text": "Get the number of coded value from a key . If several keys of the same name are present the total sum is returned .", "title": "", "metadata": ""}
{"_id": "2b5220ab19727cca7fde875928577e5f", "text": "Create an instance from a dictionary .", "title": "", "metadata": ""}
{"_id": "333ef3bc01eaaf1cf351d0c2a3895bf1", "text": "Check if file is a regular file and is readable .", "title": "", "metadata": ""}
{"_id": "a58a913c9e457010eb77b8c2146f60cc", "text": "Specify that this function returns a typed value .", "title": "", "metadata": ""}
{"_id": "a6c223cc895e0c9d74d2a07566dec635", "text": "Raise ( or re - raises ) an exception .", "title": "", "metadata": ""}
{"_id": "57cccf41a9cd934116c7091599281ecb", "text": "Serialize every item of the list .", "title": "", "metadata": ""}
{"_id": "a82089a84168e48eee608580df468820", "text": "Return the shape of img .", "title": "", "metadata": ""}
{"_id": "2ddb7dd60b9f91c9d366095920061d08", "text": "Create a slug for each Event already in the DB .", "title": "", "metadata": ""}
{"_id": "fed154d237f49cc38b8c2e5d6a47b0c7", "text": "Apply function to nodes", "title": "", "metadata": ""}
{"_id": "7b30510ed0bc5065c5a1ab359806e990", "text": "Convert any timestamp to UTC ( with tzinfo ) .", "title": "", "metadata": ""}
{"_id": "6c7c4ab7fbcbbcba5825a2a261b5c073", "text": "Serialize a date / time value into an ISO8601 text representation adjusted ( if needed ) to UTC timezone .", "title": "", "metadata": ""}
{"_id": "62fcb6ccea0660b059ab59f12ebf8dd5", "text": "Concatenate url and argument dictionary regardless of whether url has existing query parameters .", "title": "", "metadata": ""}
{"_id": "1984d0a31f9403da48ed4de859b4f6a0", "text": "Cleans up the name according to the rules specified in this exact function . Uses self . naughty a list of naughty characters .", "title": "", "metadata": ""}
{"_id": "0de0d48be143630ac21519d7b79c874b", "text": ": raises docker . exceptions . APIError", "title": "", "metadata": ""}
{"_id": "7a4b9e8facb33400577cd8c65a994d9a", "text": "Adds params to url", "title": "", "metadata": ""}
{"_id": "24de13b1aebf347d2a92558ab959aa14", "text": "Convenience function that removes a dicts keys that have falsy values", "title": "", "metadata": ""}
{"_id": "8645f852871969481bbd6cc878b5a7c5", "text": "A magic method to implement shallow copy behavior .", "title": "", "metadata": ""}
{"_id": "fab9672654e3cf763868fcbf0ff96a7b", "text": "Add a prefix to a list of values .", "title": "", "metadata": ""}
{"_id": "50546d9d2d1f7f8213a1334905f4ac70", "text": "Places all the child widgets in the appropriate positions .", "title": "", "metadata": ""}
{"_id": "7cdb37cb78a670b47365e54535809f74", "text": "Return an old style protocol buffer object .", "title": "", "metadata": ""}
{"_id": "3bbe7a8b0f515f4b1f7c560d0ffcf68d", "text": "A tensorflow variable tranfomed to be constrained in a L2 unit ball .", "title": "", "metadata": ""}
{"_id": "5324ebe27835d717abe195d27d0bfac9", "text": "Implementation of map that recurses . This tests the same keys at every level of dict and in lists : param f : 2 - ary function expecting a key and value and returns a modified key : param dct : Dict for deep processing : return : Modified dct with matching props mapped", "title": "", "metadata": ""}
{"_id": "8862c30e463c2282c099dc2f99944acd", "text": "Deserialize the object from a JSON string .", "title": "", "metadata": ""}
{"_id": "b2059c442476bcf34ea76c8a0e29d104", "text": "Split Python source into chunks .", "title": "", "metadata": ""}
{"_id": "890be530384924af9dfa8f1e108f0edc", "text": "Initializes functions that are invoked when the user or OS wants to kill this process . : return :", "title": "", "metadata": ""}
{"_id": "e801fa99c6bf466d3cdc863614302053", "text": "Returns the negated mask . If elements of input mask have 0 and non - zero values then the returned matrix will have all elements 0 ( 1 ) where the original one has non - zero ( 0 ) . : param mask : Input mask : type mask : np . array : return : array of same shape and dtype = int8 as input array : rtype : np . array", "title": "", "metadata": ""}
{"_id": "561f5245adb757ec6aefb93d214c34a1", "text": "Dump bel specification dictionary using YAML", "title": "", "metadata": ""}
{"_id": "7e3c15857eb48fcc9bf1ff56d5ab7782", "text": "Return the approximate size of the queue ( not reliable! ) .", "title": "", "metadata": ""}
{"_id": "bf12992075a0078236f989eeba426a1f", "text": "Retrieves a value by name .", "title": "", "metadata": ""}
{"_id": "f9128e4a088ce60ebc1fb5abc312a9e1", "text": "Parse the code parameter from the a URL", "title": "", "metadata": ""}
{"_id": "6fab63be276db47d3f3fb7dc3892a6c4", "text": "Called when the service is being shut down .", "title": "", "metadata": ""}
{"_id": "380dfdfc262d643cc0ff0377fac6e673", "text": "Compute boxplot for given pandas Series .", "title": "", "metadata": ""}
{"_id": "0969575efd25cacf8ff48469970e344e", "text": "Return a copy of the tuple as a list", "title": "", "metadata": ""}
{"_id": "d3c1a61c0320c9c520ea40f604280c0c", "text": "Return IPython s guess for the default encoding for bytes as text .", "title": "", "metadata": ""}
{"_id": "e7dbd8ba2c98a6e96b76ec2c99eddcf2", "text": "This is largely copied from bokeh . sphinxext . bokeh_plot . run", "title": "", "metadata": ""}
{"_id": "95e2422b70d95b02e5a8d57c090936b2", "text": "Performs a mouse out the element .", "title": "", "metadata": ""}
{"_id": "85d2d16a30e5a89485902d2131dfa653", "text": "Takes a datetime object and returns a string", "title": "", "metadata": ""}
{"_id": "12662bcf89dcde60fa71379b0f2ef10b", "text": "Random gamma variates .", "title": "", "metadata": ""}
{"_id": "c2ae91ed819cf8a8d24776d6939e9d68", "text": "Double integrate .", "title": "", "metadata": ""}
{"_id": "0f1c501505aa9a282ac52932a2af5494", "text": "This is a hack to monkey patch sdproperty to work as expected with instance methods .", "title": "", "metadata": ""}
{"_id": "662baed4ddbc4158738f48bcbf66c93b", "text": "Send data to statsd .", "title": "", "metadata": ""}
{"_id": "17767309759cbed3fa7ee6a0f6b140b8", "text": "Dumps a representation of the Model on standard output .", "title": "", "metadata": ""}
{"_id": "0df4694b2763e665c545b8deb2665fb1", "text": "create a new page in x if key is not a page of x otherwise add value to x [ key ]", "title": "", "metadata": ""}
{"_id": "9cece1e1b475fd248c998ee12e1579fd", "text": "Load a new copy of a document from the database . does not replace the old one", "title": "", "metadata": ""}
{"_id": "f6eedbc220930fc51c25a8f8bad4e012", "text": "Allow \\ n . join ( ... ) statements to work in Py2 and Py3 . : param sep : : param joinable : : return :", "title": "", "metadata": ""}
{"_id": "5b13115a726e1212947b8905bcebda04", "text": "Yield successive chunks from array / list / string . Final chunk may be truncated if array is not evenly divisible by chunk_size .", "title": "", "metadata": ""}
{"_id": "6ee43efa4f3305479ae74053fdb452c2", "text": "Returns the object s parent window . Returns None if no window found .", "title": "", "metadata": ""}
{"_id": "659169c4b369fd6d871be4002c10ec44", "text": "Calculate the SSE to the cluster center", "title": "", "metadata": ""}
{"_id": "95a9815efc5ef19f97f13bffac14d69e", "text": "Test if string matches this argument s format .", "title": "", "metadata": ""}
{"_id": "fc7f7c9e83d64ce5014850d773ff8fe0", "text": "Get all input nodes from a network .", "title": "", "metadata": ""}
{"_id": "e4de401620589f13dc81445faab32e7e", "text": "Set the number of significant figures used to print Pint Pandas and NumPy quantities .", "title": "", "metadata": ""}
{"_id": "8d367f9e36da180e56ce1cca5a8dcfbb", "text": "Show ( print out ) current environment variables .", "title": "", "metadata": ""}
{"_id": "1366da200f189fe1d68e41b5c2e6ace2", "text": "Decorator that injects parsed arguments into a view function or method .", "title": "", "metadata": ""}
{"_id": "b3b72ab2f4f5dd07b9a2163d605dff3b", "text": "Return a random paragraph .", "title": "", "metadata": ""}
{"_id": "423eed222565fa8306649895ad301cd9", "text": "Return True if Glances is running in standalone mode .", "title": "", "metadata": ""}
{"_id": "8b7c50fed2a1e41b9ebc4ea6f7fa412e", "text": "data preparation", "title": "", "metadata": ""}
{"_id": "4d5e22aaebe6780c54fe99b4d0011fd9", "text": "Apply a delaunay 2D filter along the best fitting plane . This extracts the grid s points and perfoms the triangulation on those alone .", "title": "", "metadata": ""}
{"_id": "233b7187ff1ef3a73a4604e85dcb985c", "text": "Determine if given filename is an image .", "title": "", "metadata": ""}
{"_id": "885c8e962b33cbe97ec6ab2b917532f4", "text": "Print list of namedtuples into a table using prtfmt .", "title": "", "metadata": ""}
{"_id": "4f808bb28fd5f6c272d579d27661a1a7", "text": "Context manager to temporarily disable certificate validation in the standard SSL library .", "title": "", "metadata": ""}
{"_id": "edc26b6c0b8881c1d43f35962a043a34", "text": "Any normal python logic which runs a loop . Can take arguments .", "title": "", "metadata": ""}
{"_id": "2f705294dc1490f85f8c7ec2291f9e64", "text": "Pretty - print an error .", "title": "", "metadata": ""}
{"_id": "28e30f730c851d81426185a9fb478118", "text": "Replace {{ variable - name }} with stored value .", "title": "", "metadata": ""}
{"_id": "85b51917c407ba6215dc4b018f427e58", "text": "Print a message indicating failure in red color to STDERR .", "title": "", "metadata": ""}
{"_id": "d830caac52dc54f00f58021be9d316e8", "text": "Calculate the byte wise exclusive of of two : class : bytes objects of the same length .", "title": "", "metadata": ""}
{"_id": "17404c0a9e39abc5570e5adbc9320610", "text": "consider the distance between two mapPoints ignoring all terrain pathing issues", "title": "", "metadata": ""}
{"_id": "6ddbcff220bfdc685e42ab2e82c6cf07", "text": "Render our pages as a jinja template for fancy templating goodness .", "title": "", "metadata": ""}
{"_id": "a9c7d84d324f78dd12f2b4ef563b0ec2", "text": "safe version of pow", "title": "", "metadata": ""}
{"_id": "89a7689ebc1f6530535746f654d68764", "text": "Add a blank row with only an index value to self . df . This is done inplace .", "title": "", "metadata": ""}
{"_id": "f327b1b562afc21e57abfdf8a0790c91", "text": "Enable the editing buttons to add / remove rows / columns and to edit the data .", "title": "", "metadata": ""}
{"_id": "96eb1f6d7cb13baf0648ff952ff9643c", "text": "Adds an accuracy op to the model", "title": "", "metadata": ""}
{"_id": "709e73c008a3c447a3f3ee8010e6b6f4", "text": "Load a geotiff raster keeping ndv values using a masked array", "title": "", "metadata": ""}
{"_id": "a92d6b1983c6353f85e6afdbc2197a98", "text": "Return type may come from any boolop operand .", "title": "", "metadata": ""}
{"_id": "34b1a255d8eca4bb6573c6c35aaeafbe", "text": "abstract method", "title": "", "metadata": ""}
{"_id": "b7fee0ce86a551f8b5a1f2bae0e28b8e", "text": "Takes a multi - dimensional array and returns a 1 dimensional array with the same contents .", "title": "", "metadata": ""}
{"_id": "d07557b2c1e8d3b39c395282ab2da7a3", "text": "Compute the angle between vector x and y", "title": "", "metadata": ""}
{"_id": "aca796bdbe916c2c0c0f6bce78c8ea3e", "text": "Stop the progress bar .", "title": "", "metadata": ""}
{"_id": "c14967f12b4106937d8ebaa2cf8dd9a4", "text": "Load and execute a python file .", "title": "", "metadata": ""}
{"_id": "c5c0708a4a5f8a865c0a95698c551307", "text": "FIXME : How to test this ?", "title": "", "metadata": ""}
{"_id": "7b2478677da95b1277ccb1a8cba5d1f5", "text": "Delete all Labels .", "title": "", "metadata": ""}
{"_id": "cd55ac00ac09931182c6e4c5046c52a5", "text": "zeros out states that should be identical", "title": "", "metadata": ""}
{"_id": "7522ee59227201f8f78a826ca93f1e74", "text": "Create a 20 char passphrase with easily typeable chars .", "title": "", "metadata": ""}
{"_id": "9f45a6353e456b6f6e2f38bf6e7396c2", "text": "Wrapper to make map () behave the same on Py2 and Py3 .", "title": "", "metadata": ""}
{"_id": "5feccc74100c63748f49bf1639747085", "text": "Return the distance between two points coord1 and coord2 . These parameters are assumed to be ( x y ) tuples .", "title": "", "metadata": ""}
{"_id": "d9f223e3fb1f192f855cdca29b56bab6", "text": "Removes occurrence of character ( sep ) from a line of text", "title": "", "metadata": ""}
{"_id": "93135d02b0afe674cac677aeb214e1a7", "text": "Primary entry point to turn kwargs into properties", "title": "", "metadata": ""}
{"_id": "7a4b41bc9f7f10ee15f98aa79ec2f586", "text": "Advance the iterator without returning the old head .", "title": "", "metadata": ""}
{"_id": "86aec567cf0de22157069c0dd9e55032", "text": "Load the state from the given file moving to the file s directory during load ( temporarily moving back after loaded )", "title": "", "metadata": ""}
{"_id": "de55a3e4477b28fc3802ae9290fccb6e", "text": "Set all fields readonly .", "title": "", "metadata": ""}
{"_id": "2b9c08d10cc70cbfb40d544dfe36e175", "text": "Returns the 1 - based index of the last object on this page relative to total objects found ( hits ) .", "title": "", "metadata": ""}
{"_id": "6ed8ef4243692372cc6ee678fa5b3ece", "text": "split string into list of strings by specified number .", "title": "", "metadata": ""}
{"_id": "f6b373951ef991966dcb04505cbe09f0", "text": "Return True if value is an integer .", "title": "", "metadata": ""}
{"_id": "a4e656c408ab1d83bad796168a2d5326", "text": "Captures screen area of this region at least the part that is on the screen", "title": "", "metadata": ""}
{"_id": "16094470f5c5c55be06cfaa2c5229a44", "text": "Add global variables to JavaScript about the location and latest version of transpiled files . Usage :: { % static_urls_js % }", "title": "", "metadata": ""}
{"_id": "9ad1a8f588251854648bc8d24605a428", "text": "r Transform a simple index into a human - readable position in a string .", "title": "", "metadata": ""}
{"_id": "e8b6c5ad1fb4cbca604a0abfb14b9885", "text": "Return a copy of this list with each element copied to new memory", "title": "", "metadata": ""}
{"_id": "e7253244c3250ea7e5a145cb3682b512", "text": "Put curly brackets round an indented text", "title": "", "metadata": ""}
{"_id": "be70e217dbabdb0b978e3dfda2fdd085", "text": "Like pretty but print to stdout .", "title": "", "metadata": ""}
{"_id": "1c5162eab996870276fab5a4e8c5eb88", "text": "Returns the number of processors on this machine .", "title": "", "metadata": ""}
{"_id": "e68fcd2fecfa846cc288a5e83bdf5258", "text": "Return a set of attributes for a multiple items in multiple tables using their primary keys .", "title": "", "metadata": ""}
{"_id": "0db4671ee75cb32e70b2b80e6d23d271", "text": "Beta distirbution probability density function .", "title": "", "metadata": ""}
{"_id": "2479efe6010094665cd193bacf7926be", "text": "Insert many items at once into a temporary table .", "title": "", "metadata": ""}
{"_id": "4ed97efa261b92ba947d9ebca9e8f250", "text": "Set the scroll region on the canvas", "title": "", "metadata": ""}
{"_id": "7e9569ea0c36e519c9d41b1e7cb109bd", "text": "Save a Keras model definition to JSON with given path", "title": "", "metadata": ""}
{"_id": "397f679e59c7189063baf150c1b5db84", "text": "Gets RAM memory usage", "title": "", "metadata": ""}
{"_id": "4cff740b2a469768d6d0be1faea194f9", "text": "Increment some indices in a 1D vector of non - negative integers . Repeated indices are taken into account .", "title": "", "metadata": ""}
{"_id": "93bc546e2d66736df9e8c01e5a709f11", "text": "I check to see if a method on a TestCase has been disabled via nose s convention for disabling a TestCase . This makes it so that users can mix nose s parameterized tests with green as a runner .", "title": "", "metadata": ""}
{"_id": "60291751e0bb78aafe49cfdc1f322d6c", "text": "converts py2 unicode / py3 bytestring into str Args : string ( unicode byte_string ) : string to be converted Returns : ( str )", "title": "", "metadata": ""}
{"_id": "86dcd9119706647612d7d8eec72b1689", "text": "Internal method to directly add a _NamespaceInfo object to this set . No sanity checks are done ( e . g . checking for prefix conflicts ) so be sure to do it yourself before calling this .", "title": "", "metadata": ""}
{"_id": "862f6651c8b595064c2c6488c53651f5", "text": "Return True if the given extension is one of the watched extensions", "title": "", "metadata": ""}
{"_id": "69537cfd9c5740dbe5039b412a4d7037", "text": "Returns type of the data for the given FeatureType .", "title": "", "metadata": ""}
{"_id": "fd4ee9a28ad42f49b66c317a3ad298e9", "text": "adds a line of text to a file", "title": "", "metadata": ""}
{"_id": "eedc7455b49b3971445599be16964d1e", "text": "Return the latitude and longitude corresponding to a screen point : param x : screen x : param y : screen y : return : latitude and longitude at x y", "title": "", "metadata": ""}
{"_id": "1d212b8cbbb7db066f1609a14dd18b1f", "text": "reads the zip file determines compression and unzips recursively until source files are extracted", "title": "", "metadata": ""}
{"_id": "87b95746d000398877a1e261bd9f1017", "text": "quit crash", "title": "", "metadata": ""}
{"_id": "da5631609fa5921ec7211d292048968f", "text": "sample data from given histogram and min max values within range", "title": "", "metadata": ""}
{"_id": "6abfd88ad70c9eb2d5683afd2ce7987d", "text": "Get all attribute members ( attribute property style method ) .", "title": "", "metadata": ""}
{"_id": "8daac2d6807fcd8bbc441549e9f10c83", "text": "Rotate the given point by angle", "title": "", "metadata": ""}
{"_id": "a699db30c340b906435a4f81bbbddb64", "text": "Linear oldstyle interpolation of the transform matrix .", "title": "", "metadata": ""}
{"_id": "96d1433e6c8287c6262c93be7056f3bb", "text": "Same as lazy_binmap except the parameters are flipped for the binary function", "title": "", "metadata": ""}
{"_id": "16dbbe9680ef6f8dc62bab10b5f8d81f", "text": "this day last year", "title": "", "metadata": ""}
{"_id": "0fe14c36635eccd40961bf70c835830e", "text": "Split text into list of sentences .", "title": "", "metadata": ""}
{"_id": "a8a853098dac9c01ee974a3f701b1c57", "text": "Requests - mock requests . post wrapper .", "title": "", "metadata": ""}
{"_id": "efe5d18226fc1a19a0e3e715a14d5fe1", "text": "Set text direction left to right .", "title": "", "metadata": ""}
{"_id": "35ae456ae6b3024a585311aaa78fcf3c", "text": "Draw a graph and save it into a file", "title": "", "metadata": ""}
{"_id": "2725eab3afb79bc8568c9ef6c1e99e3a", "text": "Autoconnect slot activated when tbSourceDir is clicked .", "title": "", "metadata": ""}
{"_id": "1f7070e48be35e11226c17d2d0ee01e1", "text": "Return the products from a query response as a Pandas DataFrame with the values in their appropriate Python types .", "title": "", "metadata": ""}
{"_id": "5c78054ce1c2f05275137651760aa188", "text": "Interpolate the given slice of the larger array .", "title": "", "metadata": ""}
{"_id": "5464077f56289a098b139480cb88e93e", "text": "Flushes the prompt before requesting the input", "title": "", "metadata": ""}
{"_id": "92b7c11ea88004b22f7169b722f3b283", "text": "Return string with compressed whitespace .", "title": "", "metadata": ""}
{"_id": "16fa4c59ce0b54ee91c3510f3a57ed85", "text": "Sum reduction op .", "title": "", "metadata": ""}
{"_id": "5d7be5ee12e9a18041cd6c43752596c4", "text": "world coords to view coords ; v an eu . Vector2 returns ( float float )", "title": "", "metadata": ""}
{"_id": "e6edb973b6d04565cededdacd76e5a8f", "text": "Return a shallow copy .", "title": "", "metadata": ""}
{"_id": "f32059c2b59690aa4e21367652103658", "text": "Get the embeddings for a given JPEG image .", "title": "", "metadata": ""}
{"_id": "9d49316f95cde4f32359ac48f5717ad7", "text": "Flat nested list of lists into a single list .", "title": "", "metadata": ""}
{"_id": "6e1e1c8acf9eda5d3fbc86defc4ebd00", "text": "Returns True if this node has no children or if all of its children are ParseNode instances and are empty .", "title": "", "metadata": ""}
{"_id": "1e375280f3f53b60b0124b9226143e57", "text": "Test if a file is located within the given directory .", "title": "", "metadata": ""}
{"_id": "3135857128137cd73eb7c10932555b9d", "text": "Extracts a function s indentation as a string In contrast to an inspect . indentsize based implementation this function preserves tabs if present .", "title": "", "metadata": ""}
{"_id": "ad294c932917212b3764427a28e77903", "text": "Send a close message to the external process and join it .", "title": "", "metadata": ""}
{"_id": "5423f73d2946535e9448a33f7529ac6e", "text": "a normal old python function to return the Nth fibonacci number .", "title": "", "metadata": ""}
{"_id": "8a4a711ac6d067e14f6474aaa4abb188", "text": "function to get return code of a url", "title": "", "metadata": ""}
{"_id": "a615d83c509cd74634eef8e9285e0384", "text": "Convert an numpy . string_ to str .", "title": "", "metadata": ""}
{"_id": "6e0de8f7ec07ed1712f42e32b903ffd1", "text": "Crops and / or pads an image to a target width and height .", "title": "", "metadata": ""}
{"_id": "a0a30d5ddbe27cd8563eb3ce43f58293", "text": "Cleans up a test logger object by removing all of its handlers .", "title": "", "metadata": ""}
{"_id": "70150d4c2258b6f5a8ac828e054ef2aa", "text": "write a cache object to the fileobj as a lal cache file", "title": "", "metadata": ""}
{"_id": "96f600305cc19c86f3e431839672f1da", "text": "Converts a camelcase string to a list .", "title": "", "metadata": ""}
{"_id": "b799035bcec5cb1614e22f55e9352e60", "text": "Return maximum nesting depth", "title": "", "metadata": ""}
{"_id": "c48b69aa38934fe5909116da7ae38cce", "text": "Additional check for the dimension model to ensure that attributes given as the key and label attribute on the dimension exist .", "title": "", "metadata": ""}
{"_id": "9a215b5afcbbfffa932bea75e323afce", "text": "Delete an image .", "title": "", "metadata": ""}
{"_id": "110a5f872fdeffeb0305175237704b82", "text": "Save pickled model to file .", "title": "", "metadata": ""}
{"_id": "fa8ea1926d9488dd9774804a92b426a8", "text": "Implements the context manager protocol . Specially useful for asserting exceptions", "title": "", "metadata": ""}
{"_id": "9fa0bf6deabde28c879fac69164bbf4c", "text": "return geohash for given point with self . precision : param point : GeoPoint instance : return : string", "title": "", "metadata": ""}
{"_id": "06254f1cfd1d14b83397326848d53e3d", "text": "A basic check of if the program is running in interactive mode", "title": "", "metadata": ""}
{"_id": "bbdf3053528c15fbb22dab62f8bac974", "text": "Generates a count of the number of times each unique item appears in a list", "title": "", "metadata": ""}
{"_id": "6494010ab76873eff84d4a4bbb7dda1d", "text": "Report whether this RangeSet contains another set .", "title": "", "metadata": ""}
{"_id": "b81bb6285b5832471750d83e17ccc557", "text": "Invokes callback for KEY_DOWN event related to the given key . For details see hook .", "title": "", "metadata": ""}
{"_id": "77e1eb1f9c755ff7f0e42290dd5965de", "text": "Natural logarithm", "title": "", "metadata": ""}
{"_id": "cfcdb2ea34b2feb39366fc9889ffc6da", "text": "unload the previously loaded shared library", "title": "", "metadata": ""}
{"_id": "51f023d1b15024e75c1c76faeb44e293", "text": "Convert CamelCase to camel_case", "title": "", "metadata": ""}
{"_id": "239d75a9e3896d07f18dc77b2964cab6", "text": "Remove Elasticsearch index associated to the campaign", "title": "", "metadata": ""}
{"_id": "82a69f2e2e5cd13d91b94d68db2b8880", "text": "Round a datetime object to a multiple of a timedelta dt : datetime . datetime object default now .", "title": "", "metadata": ""}
{"_id": "226eb41a52e8a7de35492bdff5f8f321", "text": "Delete all build components ; the package cache package builds bootstrap builds and distributions .", "title": "", "metadata": ""}
{"_id": "3769cc23150c2992ab8fd891bd525b4e", "text": "This callback is invoked when the user checks the Use Scrollbars box in the preferences pane .", "title": "", "metadata": ""}
{"_id": "6c267221e3a1645ea3b311728a5a7515", "text": "Checks to see if a 2D list is a valid 2D matrix", "title": "", "metadata": ""}
{"_id": "09c1faf2896cce366dac10563c99f5e5", "text": "Extract from the given iterable of lines the list of words .", "title": "", "metadata": ""}
{"_id": "e987922880599259a3ed167deada60b9", "text": "Coerces JSON string to boolean", "title": "", "metadata": ""}
{"_id": "207cbc90791272ccdd8655f09dc53208", "text": "Manually specify the x - axis tick values .", "title": "", "metadata": ""}
{"_id": "79316de683547a29b1167dbc332c5cc8", "text": "Remove ( and un - index ) an object", "title": "", "metadata": ""}
{"_id": "9a631a134802c96476bb9686847bfc47", "text": "Monkey - patch urllib3 with SecureTransport - backed SSL - support .", "title": "", "metadata": ""}
{"_id": "4cdf4a44d1a99805e7a9edebe04c7a79", "text": "read_byte_data ( addr cmd ) - > result", "title": "", "metadata": ""}
{"_id": "9d057ad9e8b24fb1e648d25716ab0691", "text": "Load a model from an installed package .", "title": "", "metadata": ""}
{"_id": "d6def38371ada7de883923978d9581d0", "text": "Same as : meth : random . choice but also supports : class : set type to be passed as sequence .", "title": "", "metadata": ""}
{"_id": "dd577ad1225b72edaff974bf5203c26c", "text": "Scan through string looking for a location where this word produces a match and return a corresponding MatchObject instance . Return None if no position in the string matches the pattern ; note that this is different from finding a zero - length match at some point in the string .", "title": "", "metadata": ""}
{"_id": "ad69a8253f087e949973c7217f01f4eb", "text": "These actions will be done after SIGTERM .", "title": "", "metadata": ""}
{"_id": "282f8eb7e9f36877e82134b590b133c9", "text": "Initial state of the network", "title": "", "metadata": ""}
{"_id": "fafa421fb1afe56c0e03ce97df50d602", "text": "Translate a string with the current locale .", "title": "", "metadata": ""}
{"_id": "9b4c37bdd4961ce5fbc3f3766887a2c5", "text": "Helper for pulling a keyed value off various types of objects", "title": "", "metadata": ""}
{"_id": "3113a500381e86313f0bab79d346f8dd", "text": "Return total data length of the list and its headers .", "title": "", "metadata": ""}
{"_id": "14e4e4f1b9d8fa70d464935d9d559472", "text": "This is a compatibility function that takes a C { float } and converts it to an C { int } if the values are equal .", "title": "", "metadata": ""}
{"_id": "befd9e27f6638a1ad71ee61f31c703db", "text": "Writes text to a file .", "title": "", "metadata": ""}
{"_id": "8ff67181f8912c49ba7d6394adab8c8b", "text": "Runs sphinx - apidoc to auto - generate documentation .", "title": "", "metadata": ""}
{"_id": "9560483e4e201b46836cc12b3d6fa6c7", "text": "Find the percentile of a list of values .", "title": "", "metadata": ""}
{"_id": "80815e8da3fe74e5ce2391aeb99fd52f", "text": "Like dict but does not hold any null values .", "title": "", "metadata": ""}
{"_id": "a193353e650db2d09a2ed3fe35d37fb9", "text": "Checks if the user is rooted .", "title": "", "metadata": ""}
{"_id": "08f049af0ee38009f8aad27b503c56cf", "text": "Populate the ranks key .", "title": "", "metadata": ""}
{"_id": "0d6010864942d489eb1612e54792cfda", "text": "Find the RMS of the audio", "title": "", "metadata": ""}
{"_id": "90c5b41168726b92c9cf5009eb74f695", "text": "Returns path to packaged static files", "title": "", "metadata": ""}
{"_id": "167fa941d28b05d8f06a302cfc24d221", "text": "Given HTML markup return a list of hrefs for each anchor tag .", "title": "", "metadata": ""}
{"_id": "21f5be2d11b6e4a26e6e5bb7e1061684", "text": "Python s input () is blocking which means the event loop we set above can t be running while we re blocking there . This method will let the loop run while we wait for input .", "title": "", "metadata": ""}
{"_id": "908e8557b7b22cba696c1a14400934a3", "text": "Increment a frame of the animation .", "title": "", "metadata": ""}
{"_id": "5d8e63ffbf1975b579875ab841ba26d6", "text": "A sys . stdout that accepts bytes .", "title": "", "metadata": ""}
{"_id": "eb516d77994bed4fd4b973dbbb5af6f8", "text": "Print the header for the CSV table .", "title": "", "metadata": ""}
{"_id": "696d26bfc6ea6453960d3656342b7cac", "text": "Step over the next statement", "title": "", "metadata": ""}
{"_id": "16b2b7f304b059ad95395e13ec1c6933", "text": "Show image ( item is a PIL image )", "title": "", "metadata": ""}
{"_id": "3586e3d5f6f16367d9c553a52c5a17fe", "text": "Retrieve contents of each page of PDF", "title": "", "metadata": ""}
{"_id": "c8883b59f039f1a5e2ce59c1813ac1bf", "text": "Saves an animation", "title": "", "metadata": ""}
{"_id": "fca30a8d3d120a85134e623aed484e0e", "text": "Because standard distinct used on the all fields are very slow and works only with PostgreSQL database this method provides alternative to the standard distinct method . : return : qs with unique objects", "title": "", "metadata": ""}
{"_id": "ba8a058aab234e4ede8044302a14ee13", "text": "Args : xml_str : str DataONE API XML doc .", "title": "", "metadata": ""}
{"_id": "15b237473c2a11550dca523389886e3f", "text": "Simple measure of similarity : Number of letters in common / max length", "title": "", "metadata": ""}
{"_id": "2b596ba6427803b230151b05c47d6133", "text": "Find and kill child processes of a process .", "title": "", "metadata": ""}
{"_id": "7c689a5b8cd003368478b539f8c6c79c", "text": "Return a lowercased string with non alphabetic chars removed .", "title": "", "metadata": ""}
{"_id": "26cc7e9d7b35d2327e28f4f8e8098d0a", "text": "Return the Jaccard similarity coefficient of 2 given sets .", "title": "", "metadata": ""}
{"_id": "da18afb065d499220535f4eb9405c1c1", "text": "Get a property of the device .", "title": "", "metadata": ""}
{"_id": "a07fc0ae7336795eb06a6849e2c8aae8", "text": "Get the name of an object including the module name if available .", "title": "", "metadata": ""}
{"_id": "1a6e87fbbc6a46db5d72cda974d51bc3", "text": "Update the digest of a single file in a memory - efficient manner .", "title": "", "metadata": ""}
{"_id": "0fa1bb3c3d95802468fa0af2372a885e", "text": "Convert Matrix attributes which are array - like or buffer to array .", "title": "", "metadata": ""}
{"_id": "b11df424d1545faf1cfe28e66ce481a7", "text": "Helper parse action to convert tokens to upper case .", "title": "", "metadata": ""}
{"_id": "b94b725209e78836b5242a132e8a88f6", "text": "Translate dicts to scala Maps", "title": "", "metadata": ""}
{"_id": "02caab3b57c2690c001f6ea00a2a65a7", "text": "Get the last n items in readline history .", "title": "", "metadata": ""}
{"_id": "c115a3af0567828447fc5c58c81925be", "text": "Stringifies a Python object into its YAML representation .", "title": "", "metadata": ""}
{"_id": "2a22d8b5f04e0ed77eb9e71e5e143202", "text": "Returns the first value of a series .", "title": "", "metadata": ""}
{"_id": "0cbfd13784f8accbc7233d98a89f662f", "text": "Saves dictionary as CSV file .", "title": "", "metadata": ""}
{"_id": "5d651fe333e9600e51a6df2bd888c62a", "text": "Cached search compile .", "title": "", "metadata": ""}
{"_id": "8ebce776d59a2595fad2515377ecc471", "text": "Split a multiline string into a list excluding blank lines .", "title": "", "metadata": ""}
{"_id": "7780449fe6a54911da8a8fd65b880b10", "text": "Clears globals and reloads modules", "title": "", "metadata": ""}
{"_id": "a5e2056934b931ecafc8a9b5b4167712", "text": "Send files using the config . ini settings .", "title": "", "metadata": ""}
{"_id": "3b830106d96d7a906a38b8d157f0d804", "text": "Conver a path string to a list of path elements .", "title": "", "metadata": ""}
{"_id": "87868758c473930f134ce8d8f8fad831", "text": "Returns a StrictRedis connection instance .", "title": "", "metadata": ""}
{"_id": "949d5a2b5c6c907b2a9f0f693c159e04", "text": "Synthesize white noise", "title": "", "metadata": ""}
{"_id": "7cf21a5978fd1cfe4f6975681d49c541", "text": "it returns a 500 http response", "title": "", "metadata": ""}
{"_id": "eae66d5a0730457b5ab4af414b46400b", "text": "Generate a docstring for the composition of fs .", "title": "", "metadata": ""}
{"_id": "14ed462c6b1e060f0913a7aa9d78c97c", "text": "I strip extra whitespace off multi - line strings if they are ready to be stripped!", "title": "", "metadata": ""}
{"_id": "09746efb5c02e66e9568702ff6ff692f", "text": "Toggle fullscreen from outside the GUI causes the GUI to updated and run all its actions .", "title": "", "metadata": ""}
{"_id": "beda3065c354c744a50aecc76c02d795", "text": "Ability to provide dynamic styling of the cell based on its value . : param cbfct : function ( cell_value ) should return a dict of format commands to apply to that cell : return : self", "title": "", "metadata": ""}
{"_id": "e55c7c01681f78e496644a57ac685fb3", "text": "Paste before cursor .", "title": "", "metadata": ""}
{"_id": "8b88bb42582e005c13f69c51472106a7", "text": "Go to the end of the current line and create a new line", "title": "", "metadata": ""}
{"_id": "77a65dd4d90f9d397f9a6aab0fe5928b", "text": "Return the text for the given root node ( xml . dom . minidom ) .", "title": "", "metadata": ""}
{"_id": "e0a20a599e3bddc5c71b9013609edd6b", "text": "Remove dangerous URL schemes like javascript : and escape afterwards .", "title": "", "metadata": ""}
{"_id": "21d6062e53549f9e39196a130ab5b4e3", "text": "Memory usage of my values", "title": "", "metadata": ""}
{"_id": "23be1ff12c0d054178d812809539e1e9", "text": "Return set of common words between two word sets .", "title": "", "metadata": ""}
{"_id": "5f2b4abce0290370110624c3e2b857d4", "text": "Returns a SndRcv list filtered by a truth function", "title": "", "metadata": ""}
{"_id": "494660b950e21ac9cd2825eb167db9f1", "text": "Prepare the api specification for request and response validation .", "title": "", "metadata": ""}
{"_id": "f3f86ac3cc047fe11ae6c2fc83a65e4d", "text": "The standard deviation of a set of values . Pass in the mean if you already know it .", "title": "", "metadata": ""}
{"_id": "da1cb5fa0362cf457637dc65b282a90f", "text": "Pull comma separated string values out of a text file and converts them to float list", "title": "", "metadata": ""}
{"_id": "26f635685820916621171aa860a391a8", "text": "Delete all whitespace from the end of the line .", "title": "", "metadata": ""}
{"_id": "c0f5bc7e65f53abfde2f9dd15ec4248c", "text": "Remove the least recently used file handle from the cache . The pop method removes an element from the right of the deque . Returns the name of the file that has been removed .", "title": "", "metadata": ""}
{"_id": "914fd967546023f3c0813748d007305d", "text": "Pretty output of nested dictionaries .", "title": "", "metadata": ""}
{"_id": "d03f4440ecb0044cffee11176bd2ccd8", "text": "Ends an indentation block leaving an empty line afterwards", "title": "", "metadata": ""}
{"_id": "380814f5cee43705925fa913fe15c991", "text": "Advances to next line .", "title": "", "metadata": ""}
{"_id": "0bb9b32884cb2e93b34bfbc706809f3c", "text": "Converts string presented in camel case to snake case .", "title": "", "metadata": ""}
{"_id": "54b6160dc2993399e9fe7fee13051a36", "text": "Sets main window icon to given wx . Bitmap", "title": "", "metadata": ""}
{"_id": "de9e65cca402b8623ff0e0e010ab79ef", "text": "Get the host s ip number .", "title": "", "metadata": ""}
{"_id": "a9e999712f5bc8e58b494032aa4c252b", "text": "Return the last item of a sequence .", "title": "", "metadata": ""}
{"_id": "802078f1313d56596fa32f92fe081fa0", "text": "average of the values must have more than 0 entries .", "title": "", "metadata": ""}
{"_id": "bc240ec6c97fb21f7f6487ae1f6901cb", "text": "r Close last created figure alias to plt . close () .", "title": "", "metadata": ""}
{"_id": "64d073bda4370205adfee8f412061c22", "text": "Create a timezone - aware datetime object from a datetime string .", "title": "", "metadata": ""}
{"_id": "ff2cc7a7be38c65e441511c6bb82fc0f", "text": "Clean up name so it works for a Python identifier .", "title": "", "metadata": ""}
{"_id": "7442183e538bb8c13703a0ea34d13d7d", "text": "Returns the latest modification time of all files / subdirectories in a directory", "title": "", "metadata": ""}
{"_id": "c27ad7ac23c6f47a3b037b211a050284", "text": "This function merge another object s values with this instance", "title": "", "metadata": ""}
{"_id": "e66cd135de0ef7c4ca421c2e5d03e330", "text": "Raise the open file handles permitted by the Dusty daemon process and its child processes . The number we choose here needs to be within the OS X default kernel hard limit which is 10240 .", "title": "", "metadata": ""}
{"_id": "b8533d4201777126978f71e3bd9930c8", "text": "Handle conversion of pymongo cursor into a JSON object formatted for UI consumption", "title": "", "metadata": ""}
{"_id": "216ff3f2b5471ea4e6f8f6daf7810be9", "text": "Deletes all files whose filename matches the glob pattern ( via : func : glob . glob ) .", "title": "", "metadata": ""}
{"_id": "8c52666db37dbac3bfde5ede8145137b", "text": "Converts markdown content to text", "title": "", "metadata": ""}
{"_id": "1d71e006604f31c48b5c59de67b746d8", "text": "Run security . py -- demonstrate the SECURITY extension", "title": "", "metadata": ""}
{"_id": "bd6c5cb01df62ea5ecc3604676968f98", "text": "Prepare a context for the serialization .", "title": "", "metadata": ""}
{"_id": "98925bb8f0a4f53a3a416500e4799033", "text": "Return the distance between two points .", "title": "", "metadata": ""}
{"_id": "0c88b7328443b3e9f5df1c9b4e78976c", "text": "Check different items in matrix classes .", "title": "", "metadata": ""}
{"_id": "06da4ff1ead212f0fa4015ae0a151d2b", "text": "Scipy norm function", "title": "", "metadata": ""}
{"_id": "b5916faf0c034d7268e4a47e27947b99", "text": "Returns time in seconds as a string formatted HHHH : MM : SS .", "title": "", "metadata": ""}
{"_id": "ae5ff9c684e00756337300f5ce2bfb6f", "text": "Return the attribute of namespace corresponding to value .", "title": "", "metadata": ""}
{"_id": "6aac8130be5605409ffaad63496a96d5", "text": "Ajout d un message de log de type DEBUG", "title": "", "metadata": ""}
{"_id": "69439a33f846f63803a79908b7b72bb7", "text": "Checks if we already have an opened tab with the same name .", "title": "", "metadata": ""}
{"_id": "3e8fd03f8f8868a1ea89b7a9ee8803de", "text": "A wrapper of os . makedirs () .", "title": "", "metadata": ""}
{"_id": "3982744fd695e9f4361e3680eb12d1c9", "text": "Determine if value is an instance or subclass of the class Type .", "title": "", "metadata": ""}
{"_id": "3c8be800fa1ca0ebad3b0a93ad893469", "text": "returns the name of an EVREvent enum value", "title": "", "metadata": ""}
{"_id": "265b5ae13c5859ae70e4abb7890558d2", "text": "List APIs in account .", "title": "", "metadata": ""}
{"_id": "62e6743f2316f8d3582f34a60aefaa12", "text": "convert ip v4 string to integer .", "title": "", "metadata": ""}
{"_id": "5fa0d197f616750a4db43811f7db3810", "text": "Sets up the python include paths to include src", "title": "", "metadata": ""}
{"_id": "d1385a09507e28d7c61c9ab17d0e2b78", "text": "Move the virtual cursor .", "title": "", "metadata": ""}
{"_id": "de4386e9d7d0022bcf6193245f7ef3e9", "text": "Generate image data using PIL", "title": "", "metadata": ""}
{"_id": "4e6a479dbf93e4d80d53e0465fea1d74", "text": "Remove ticks tick labels and frame from axis", "title": "", "metadata": ""}
{"_id": "e6dd916bc69f583040a8132eb3aacc00", "text": "Constructor .", "title": "", "metadata": ""}
{"_id": "522f8ba1d7b26c417feb379215650abd", "text": "Returns data as : class : numpy . recarray .", "title": "", "metadata": ""}
{"_id": "37a834da756f48b4cf240c723610f71e", "text": "Executes SQL ; returns the first value of the first row or None .", "title": "", "metadata": ""}
{"_id": "6fdd86a2143a866cc07b72b5dd30a0b1", "text": "Compute the confusion matrix .", "title": "", "metadata": ""}
{"_id": "58c86efe117947cdc67626032c3cf527", "text": "Forget all loaded coordinates .", "title": "", "metadata": ""}
{"_id": "b4f94dc561abc4b7b77f3271fedfbccd", "text": "Check if an http server runs on a given port .", "title": "", "metadata": ""}
{"_id": "804ede7102001483de2df9a6d34cc51e", "text": "Retrive first element in List .", "title": "", "metadata": ""}
{"_id": "c099690fa99d1c2c73ae493585937a8b", "text": "Generator for reading from standard input in nonblocking mode .", "title": "", "metadata": ""}
{"_id": "68dbe22b8df1fc5e6b26b52777b5198d", "text": "numeric denotes typed literals with datatypes xsd : integer xsd : decimal xsd : float and xsd : double .", "title": "", "metadata": ""}
{"_id": "d5bf8cbeccf786b088923417b4a5a5c0", "text": "Reads a key from S3", "title": "", "metadata": ""}
{"_id": "985080225cee76e32cc67957530b2b7d", "text": "Ensure a a file exists and if not make the relevant path", "title": "", "metadata": ""}
{"_id": "1d981baabdcfde0501a1e49a6075c150", "text": "True if all the args are functions and / or subroutines", "title": "", "metadata": ""}
{"_id": "305a919a4da33560fe72fdb6547e541c", "text": "1 - farthest apart ( same number of words all diff ) . 0 - same", "title": "", "metadata": ""}
{"_id": "5f367a0dc6a9b52d8e3c268c126bd758", "text": "Updates Camera . aspect to match the viewport s aspect ratio .", "title": "", "metadata": ""}
{"_id": "b829a28c20b240cd3ca27e3281e34d64", "text": "Finds index of nearest value in array . Args : array : numpy array value : Returns : int http : // stackoverflow . com / questions / 2566412 / find - nearest - value - in - numpy - array", "title": "", "metadata": ""}
{"_id": "91fb695e1169a65ebb8e3da62e81bc66", "text": "simple method to determine if a url is relative or absolute", "title": "", "metadata": ""}
{"_id": "7e3bb6bb33f1ce7510adeef82895a071", "text": "Convert numbers to floats whether the decimal point is . or", "title": "", "metadata": ""}
{"_id": "9fcab50fecb524fb1db2c437729b6f93", "text": "Prints DB data representation of the object .", "title": "", "metadata": ""}
{"_id": "830c9359044f4adf76d6fdfbc7365b47", "text": "This method removes columns in data", "title": "", "metadata": ""}
{"_id": "83c26db7c83f52c903da60c766a468b1", "text": "This function is called when a return trap is set here .", "title": "", "metadata": ""}
{"_id": "5b6df5f87a58ee8950ff104fc518027b", "text": "Formats Python code to conform to the PEP 8 style guide .", "title": "", "metadata": ""}
{"_id": "5486f7912f79b51748f9adac3833c25d", "text": "Calculate size of all files in path .", "title": "", "metadata": ""}
{"_id": "b81d18e131ac81d5edce9e2e28d9015a", "text": "Touches the project to trigger refreshing its cauldron . json state .", "title": "", "metadata": ""}
{"_id": "41058c7dcfa4a7334ac928c6ce452a99", "text": "Item assignment sets the return value and removes any side effect", "title": "", "metadata": ""}
{"_id": "f58f090a73927f50a3e2373e9b93428e", "text": "Scale the image so that the smallest axis is of size targ .", "title": "", "metadata": ""}
{"_id": "b6914945908f693b7135e1da8ca19419", "text": "Return the integer index of * series * in this sequence .", "title": "", "metadata": ""}
{"_id": "c072524f8040077e6b47f1d11b9f21bf", "text": "Fetch the value of a binary key .", "title": "", "metadata": ""}
{"_id": "4bcd3ad0ca8994a53a5ef1acad7626ab", "text": "Returns number rounded to digits digits .", "title": "", "metadata": ""}
{"_id": "801625aca8529621bf4aed5a84b3c52b", "text": "Convert a grayscale image to BGR image .", "title": "", "metadata": ""}
{"_id": "6e941dc1402a462422608b241e12401b", "text": "Fill all null values with NaN values in a column . Null values are None or en empty string", "title": "", "metadata": ""}
{"_id": "5b8285c9c8676a00554a39cdd0b141dc", "text": "Create the file with the given content", "title": "", "metadata": ""}
{"_id": "233621ea1d81876f09355a345905cf8b", "text": "Check if there is enough permissions for access", "title": "", "metadata": ""}
{"_id": "fe3bfef92649b10690ac8c58972a5c0a", "text": "Return ignored regions like strings and comments in source", "title": "", "metadata": ""}
{"_id": "a53bc38abd3785283d54cdc23beed344", "text": "Try converting the README to an RST document . Return it as is on failure .", "title": "", "metadata": ""}
{"_id": "bb1f424b2dee650956db82dae5b03c9f", "text": "Index all available documents using streaming_bulk for speed Args :", "title": "", "metadata": ""}
{"_id": "dab1ecc7283b9b300cfe822ec9458f92", "text": "Compute the correlation matrix given the covariance matrix .", "title": "", "metadata": ""}
{"_id": "035a645e13520128257858126d88f774", "text": "Adds execute permission to file . : param filename : : return :", "title": "", "metadata": ""}
{"_id": "c6f191136ec354e2609765d4f52f2765", "text": "Extend the list by appending all the items in the given list .", "title": "", "metadata": ""}
{"_id": "beda2a865f137a25bae2fe8698172a82", "text": "Cast uint32 RGB image to 4 uint8 channels .", "title": "", "metadata": ""}
{"_id": "62971eaa4dc075d7952f697689ec48fc", "text": "Returns a copy of dct without keys keys", "title": "", "metadata": ""}
{"_id": "39f15dcab2b38199545886af074628f2", "text": "A basic document feature extractor that returns a dict of words that the document contains .", "title": "", "metadata": ""}
{"_id": "4ab13f9441e7c922111ef8b35873a43a", "text": "Uses box coordinates to crop an image without resizing it first .", "title": "", "metadata": ""}
{"_id": "5bc2a0f5121bebfb8abe9a4dd142a4f7", "text": "Select a subset of features from the example dict .", "title": "", "metadata": ""}
{"_id": "a58316e16069ad2ee9eb639f5008f5ae", "text": "Checks if a target name matches with an input regular expression .", "title": "", "metadata": ""}
{"_id": "d49733566a5b856f6c4f563d221a7bb8", "text": "Find the index of elem in the reversed iterator .", "title": "", "metadata": ""}
{"_id": "0ee673f7a88f16662841012c07aa9b03", "text": "Return a dictionary of words and word counts in a string .", "title": "", "metadata": ""}
{"_id": "524abdf046dcf804c3af9c6cd665cd46", "text": "Returns a boolean from a string imput of true or false", "title": "", "metadata": ""}
{"_id": "e1e3777490a17abb7179b2b01501e92b", "text": "Load the search_freq from JSON file", "title": "", "metadata": ""}
{"_id": "5b4706422d776a7e20818f4f1e5b115c", "text": "Returns background color rgb tuple of right line", "title": "", "metadata": ""}
{"_id": "5da523cb5b6bcce3a117b97c68f0f24f", "text": "generic plotting method overplotting any existing plot", "title": "", "metadata": ""}
{"_id": "42f79a2f939119ea2a04e9a4274a61c7", "text": "Returns a new random state .", "title": "", "metadata": ""}
{"_id": "bd08eb781c18ffb88633e951c0eb44f0", "text": "If pair is in search_list return the index . Otherwise return - 1", "title": "", "metadata": ""}
{"_id": "b2efb2df2d74cc1f0d74f7848ec69fce", "text": "Slicing op .", "title": "", "metadata": ""}
{"_id": "51e94aec341ee1a3d7c7916192cb2cc8", "text": "Calculates the Jaccard similarity between two sets of nodes . Called by mroc .", "title": "", "metadata": ""}
{"_id": "d6c8408d2b1993e7878398bf65e49ade", "text": "Given a list ( l ) will removing duplicates from the list preserving the original order of the list . Assumes that the list entrie are hashable .", "title": "", "metadata": ""}
{"_id": "192f708843c6f43e1409bcd488f46111", "text": "A background thread to kill the process if it takes too long .", "title": "", "metadata": ""}
{"_id": "fb89aa9aeacb342285e522f6cc3537e2", "text": "Check if a string is a bytes instance", "title": "", "metadata": ""}
{"_id": "2acb61b860fe8eb43b87344b38e69c48", "text": "Normalize s into ASCII and replace non - word characters with delimiter .", "title": "", "metadata": ""}
{"_id": "cbc64ba3081676aac26c70a5f1ce4bf7", "text": "Convert jamo characters in a string into hcj as much as possible .", "title": "", "metadata": ""}
{"_id": "c7f5b003774b87381b08bf4477b3428f", "text": "Return the crossproduct of the two vectors as a Vec2 . Cross product doesn t really make sense in 2D but return the Z component of the 3d result .", "title": "", "metadata": ""}
{"_id": "7356d89b688e63b032c9891076788569", "text": "Return true if a is a subdirectory of b", "title": "", "metadata": ""}
{"_id": "fe7a95d3dbee6d76a1c2a15e99acd0d1", "text": "given a DataFrame where records are stored row - wise rearrange it such that records are stored column - wise .", "title": "", "metadata": ""}
{"_id": "41c7ac1eca45a921916e4bf64f47ec41", "text": "Wrap text to terminal width with default indentation", "title": "", "metadata": ""}
{"_id": "07a1a15f93a3ec3feb90f8a1d9789e53", "text": "Adds points and converts to topojson string .", "title": "", "metadata": ""}
{"_id": "5824510e7c868c0c028db56dc44519a4", "text": "All branches in a list", "title": "", "metadata": ""}
{"_id": "841d1cd3f28c848fc82c4cd65b1b1838", "text": "Just the last entry .", "title": "", "metadata": ""}
{"_id": "e42544616ef99b5f2665f00c23dad564", "text": "press to continue", "title": "", "metadata": ""}
{"_id": "9675c3b96ec2c7e43f6279cb1d8565a4", "text": "Unpickle a pstats . Stats object", "title": "", "metadata": ""}
{"_id": "9054777725da668027c278025473b837", "text": "Transform underscore separated string to pascal case", "title": "", "metadata": ""}
{"_id": "a8c3dc84920249a79a7eea8b9ece3840", "text": "Convert a byte array into an integer array . The number of bytes forming an integer is defined by num", "title": "", "metadata": ""}
{"_id": "4417f03e15d9f5f7fc4ff107c7aa6957", "text": "Returns a gid given a group name .", "title": "", "metadata": ""}
{"_id": "1c5e7a90a1d46aafd264cc50c050224f", "text": "Return opened file with a specific encoding .", "title": "", "metadata": ""}
{"_id": "6831b5a9decf26096a4167068e619df4", "text": "Runs the contents of the given script in hive and returns stdout .", "title": "", "metadata": ""}
{"_id": "d69449537824e5879b7a7b7f8942ab2b", "text": "Copy text to clipboard without prompts", "title": "", "metadata": ""}
{"_id": "284bfe0282b6935fca13ad084ad21e4c", "text": "Extract the CSRF token out of the Set - Cookie header of a response .", "title": "", "metadata": ""}
{"_id": "a875c4175fe524cdda574af13bc696f8", "text": "Return if the token is in the list or not .", "title": "", "metadata": ""}
{"_id": "0983006fa4a5fc1068992d5611946378", "text": "Given a dictionary and a key list remove any data in the dictionary with the given keys .", "title": "", "metadata": ""}
{"_id": "23aff4f971b55f4f9c960de0d033c2d1", "text": "find a path from start to end node on grid using the A * algorithm : param start : start node : param end : end node : param grid : grid that stores all possible steps / tiles as 2D - list : return :", "title": "", "metadata": ""}
{"_id": "1b67246ffb3d36b1bc54d61840f6b730", "text": "Return pinyin of string the string must be unicode", "title": "", "metadata": ""}
{"_id": "c182ea4d111b56d7ae38b7018690fd4a", "text": "Filter a set of entities based on method return . Use keyword arguments . Example : filtmeth ( entities id = 123 ) filtmeth ( entities name = bart )", "title": "", "metadata": ""}
{"_id": "98e2ba68943e21de6cd4f1a9689e0190", "text": "Download a Single File from S3 into a local path", "title": "", "metadata": ""}
{"_id": "2a9b0616acbd74f23ab2ae251ddc8352", "text": "Returns the memory byte size of a Numpy array as an integer .", "title": "", "metadata": ""}
{"_id": "6f547e166722d75de2d355361d1408b7", "text": "Joins the coordinator thread and all worker threads .", "title": "", "metadata": ""}
{"_id": "c2f32b400d49a7ff0f58205673a7662b", "text": "Returns whether a path names an existing executable file .", "title": "", "metadata": ""}
{"_id": "3456376a612b923c461a4abd70d6748d", "text": "Get a list of the public data attributes .", "title": "", "metadata": ""}
{"_id": "a1e1b0931dfb40cb51b1b2ecea93163b", "text": "Args : x : iterable of strings", "title": "", "metadata": ""}
{"_id": "223ba91739aaf109c246f0153d1bc6df", "text": "Converts the input single value into the expected Python data type raising django . core . exceptions . ValidationError if the data can t be converted . Returns the converted value . Subclasses should override this .", "title": "", "metadata": ""}
{"_id": "f37c9303bd7c1a9f5c3402f4e2873b5a", "text": "Returns a pretty - printed string for this object .", "title": "", "metadata": ""}
{"_id": "2ce5b85dd50f3427d969f2cc9f2877ef", "text": "Shot noise corruption to images .", "title": "", "metadata": ""}
{"_id": "cfd63e3a6ed33e6dd25c723182176012", "text": "Convert a string from a form into an Enum value .", "title": "", "metadata": ""}
{"_id": "e86dd73bf120f048d889f22e20ea5735", "text": "Drops the trailing zeros in a float that is printed .", "title": "", "metadata": ""}
{"_id": "577f18fb34b81215664aefdd4584a07b", "text": "Sets multiple headers on the request and returns the request itself .", "title": "", "metadata": ""}
{"_id": "91a7f43fb48d47ca31b1793fe7497f1a", "text": "Render a jinja template", "title": "", "metadata": ""}
{"_id": "679affde9a2e80fd195a92c729a07646", "text": "Yield all non - sytem collections in db .", "title": "", "metadata": ""}
{"_id": "5c2c1ef8b3acd55dd8163bb764a93e45", "text": "Take any values coming in as a datetime and deserialize them", "title": "", "metadata": ""}
{"_id": "3dde9b6ca34b0c595902d038d6e83475", "text": "Push item onto heap maintaining the heap invariant .", "title": "", "metadata": ""}
{"_id": "76cd20b14a546289c0b0951dd4cb653b", "text": "Validates that the val is in the list of values for this Enum .", "title": "", "metadata": ""}
{"_id": "da915f344bb44854c9f4bca7b8c47c0c", "text": "Determine whether or not a given path is a ( sub ) package or not .", "title": "", "metadata": ""}
{"_id": "26ff288df46db6427c9354b451769e7a", "text": "Register all globally visible functions .", "title": "", "metadata": ""}
{"_id": "a8d6ca1fb6992fbd8f8c99da88445018", "text": "Generates an mxn sparse d matrix with round ( a * m * n ) nonzeros .", "title": "", "metadata": ""}
{"_id": "27fc2bd9a490e353768916784894a0d3", "text": "Close connection with the database", "title": "", "metadata": ""}
{"_id": "74dfda72e6d57380916327cf3f1bf680", "text": "Try to infer an object s dtype for use in arithmetic ops", "title": "", "metadata": ""}
{"_id": "157308f0c4a8da607cd0201041536351", "text": "Convert a zeep object to a dictionary .", "title": "", "metadata": ""}
{"_id": "f79e9294efce73701c39bf162634f43a", "text": "Simplest required implementation of collections . Counter . Required as 2 . 6 does not have Counter in collections .", "title": "", "metadata": ""}
{"_id": "95a7a101b80041c6897398f8e88fb888", "text": "Write file with current process ID .", "title": "", "metadata": ""}
{"_id": "93b2e385a420a0e5e312384fb1ffb8b3", "text": "Yaml either have automatically converted it to a datetime object or it is a string that will be validated later .", "title": "", "metadata": ""}
{"_id": "4befdcd6cfafed246d2d96bb4af73ccf", "text": "Fetch the data field if it does not exist .", "title": "", "metadata": ""}
{"_id": "ae55d3b462f4941f643d1447e5879364", "text": "Decorator to wrap an async function in an event loop . Use for main sync interface methods .", "title": "", "metadata": ""}
{"_id": "aaf30d23b219f86b3c920784712bc52e", "text": "Function to calculate the Fourier transform of data . Parameters ---------- data : numpy . ndarray 1D or 2D array containing time series . tbin : float Bin size of time series ( in ms ) . Returns ------- freqs : numpy . ndarray Frequency axis of signal in Fourier space . fft : numpy . ndarray Signal in Fourier space .", "title": "", "metadata": ""}
{"_id": "d56e1530697a607ca4f955cb7611106b", "text": "Instanciate a singleton per scope .", "title": "", "metadata": ""}
{"_id": "a77440859ca575d944853c23fb3c0171", "text": "Expand $vars in a string .", "title": "", "metadata": ""}
{"_id": "4712232181e5e93018d4c2495a952dc9", "text": "Code due to Thomas Heller - published in Python Cookbook ( O Reilley )", "title": "", "metadata": ""}
{"_id": "da07467c4df1ccf67877d2e82ef3032a", "text": "Recursivly delete a directory", "title": "", "metadata": ""}
{"_id": "f882ebfe0ca899819a46058bd792eddd", "text": "Set the pixel at ( x y ) to the integers in sequence color .", "title": "", "metadata": ""}
{"_id": "05f53daf876fefa85fc3959bf31895bb", "text": "Split input / output value into two values .", "title": "", "metadata": ""}
{"_id": "f551a6b5eadc2283d0e0a559acb218f4", "text": "The bounding box ( ymin xmin ymax xmax ) of the minimal rectangular region containing the source segment .", "title": "", "metadata": ""}
{"_id": "c2d1147923ec60f00b01e4b64cfdbd58", "text": ": returns the minimum of the column", "title": "", "metadata": ""}
{"_id": "baec4d0577b8869066640b83dbaab3d7", "text": "setuptools blah : it still can t run a module as a script entry_point", "title": "", "metadata": ""}
{"_id": "b9ec463223321d8823b31af3e6c031e0", "text": "Returns the maximum value of the domain .", "title": "", "metadata": ""}
{"_id": "1c4e8278977b3ecf899c5bacace0b9fb", "text": "Print an error in red text . Parameters error ( HTTPError ) Error object to print .", "title": "", "metadata": ""}
{"_id": "b63e54bba1b562a1acb30dfb387ef2f5", "text": "Parse path string .", "title": "", "metadata": ""}
{"_id": "b3d4ee80c9224b15bebc08299a1270c0", "text": "Call Imagemagick to generate a scheme .", "title": "", "metadata": ""}
{"_id": "838352430d24dc29eea60dc31b9eb875", "text": "Log - normal function from scipy", "title": "", "metadata": ""}
{"_id": "b7eed731f54e43d7f732f37f7e52eeef", "text": "Test program for telnetlib .", "title": "", "metadata": ""}
{"_id": "b8233bab8f19110e7a0bbfa62f893fc4", "text": "Get elements in this document which matches condition .", "title": "", "metadata": ""}
{"_id": "df23580e173ddd878fd5d22b22d21f39", "text": "Returns True when alias already in shell config .", "title": "", "metadata": ""}
{"_id": "31cb29f2cbae66f0ab5921d09fe3e379", "text": "Returns whether the provided name is a valid variable name in Python", "title": "", "metadata": ""}
{"_id": "33ecb6548d1a464bfcd393ffa09dd293", "text": "Iterator that allow for piecemeal processing of a file .", "title": "", "metadata": ""}
{"_id": "69073ec21b3b1c52278e14d61c48658d", "text": "must be a float", "title": "", "metadata": ""}
{"_id": "cea7b32d62472b0a89ecd84bd38c15a9", "text": "Put a PID into a pidfile", "title": "", "metadata": ""}
{"_id": "b0b91cc771f1b01a267e2616ac865f33", "text": "Helper to render a list of dictionaries as an HTML display object .", "title": "", "metadata": ""}
{"_id": "35fbc732a78bd22e80a8f03e6d5c7c1e", "text": "Check if a username / password combination is valid .", "title": "", "metadata": ""}
{"_id": "22a5e0dc1e97732184f2d52a1bf64340", "text": "Get the html for a Bokeh chart", "title": "", "metadata": ""}
{"_id": "abdbed2300fc5021363084bd7658211b", "text": "Returns True if var is a list or a tuple ( but not a string! )", "title": "", "metadata": ""}
{"_id": "9894df19d1546b90f6341767b0b8e181", "text": "Encode one categorical column into labels .", "title": "", "metadata": ""}
{"_id": "d247f217557d5191b89b58e8a507b41b", "text": "Convert a microsecond timestamp to a UTC datetime instance .", "title": "", "metadata": ""}
{"_id": "d6fb25d7e50aea16cccc85df5b6e4757", "text": "will plot a stack of traces one above the other assuming marray . shape = numRows numSamples", "title": "", "metadata": ""}
{"_id": "e031940f0edf918647aad76d8fe10eb7", "text": "A Bark logging handler logging output to a named file . At intervals specified by the when the file will be rotated under control of backupCount .", "title": "", "metadata": ""}
{"_id": "51497ec0c0685d17746826223b7f3d34", "text": "Converts a dict to a querystring suitable to be appended to a URL .", "title": "", "metadata": ""}
{"_id": "fb0eca07bc9e6353112f3889d5f07739", "text": "Return a vector with the elements rounded to the given number of digits .", "title": "", "metadata": ""}
{"_id": "cd20d35cfd7356dcca55ce275b6adab6", "text": "Evaluates the binomial pmf .", "title": "", "metadata": ""}
{"_id": "c1e8e61523e3ac96d35d7cab3108b89f", "text": "r Call f n times with args and kwargs . Useful e . g . for simplistic timing .", "title": "", "metadata": ""}
{"_id": "55d611ee688771474d94a2885ad95044", "text": "Check if the file - like object is readable .", "title": "", "metadata": ""}
{"_id": "ec1c9ab0940446a44b80d777140fd05f", "text": "Join the list of images into the out file", "title": "", "metadata": ""}
{"_id": "3453aa34826216478088d40532a0ccc2", "text": "Continuous constant pulse .", "title": "", "metadata": ""}
{"_id": "e34bac92ef941ff2d588c90af7a5c4ba", "text": "Return the window that owns selection ( an atom ) or X . NONE if there is no owner for the selection . Can raise BadAtom .", "title": "", "metadata": ""}
{"_id": "ee21ba6b2b30660676fce10d99aaae77", "text": "Remove password from printed connection URLs .", "title": "", "metadata": ""}
{"_id": "a9ad21054c8757f1e92ef1fec959f0e2", "text": "Given a list find the last occurance of a sublist within it .", "title": "", "metadata": ""}
{"_id": "ca8929d1ac81e8268594d9b4f24e5767", "text": "Reimplement Qt method to send focus change notification", "title": "", "metadata": ""}
{"_id": "52e5b47857b3600f885ee905ab5f25b7", "text": "Generates a LaTeX table from parameter summaries .", "title": "", "metadata": ""}
{"_id": "0d89e8df25c634e12630a3653ce7cd32", "text": "If the database is empty generate a random vector .", "title": "", "metadata": ""}
{"_id": "3d6fe662dc38dc331bb5d6cb728507c4", "text": "Return file contents as string .", "title": "", "metadata": ""}
{"_id": "588e5a7a78340ba047e5e1aaf6126202", "text": "Convert a path to its canonical case - normalized absolute version .", "title": "", "metadata": ""}
{"_id": "0e420d437c79785fafa01ebb3ea411d3", "text": "Call callable ( * args ** kw ) fixing any type errors that come out .", "title": "", "metadata": ""}
{"_id": "7c6f5c2c505d4cf05360ba1337d13b71", "text": "Wrap text with markdown specific flavour .", "title": "", "metadata": ""}
{"_id": "fc44b0642b3f225a093cf8db82030d55", "text": "Roll a die .", "title": "", "metadata": ""}
{"_id": "44c559ed0891384dbb42ea493de4d792", "text": "Can add this object", "title": "", "metadata": ""}
{"_id": "ff32af116c4c0e9acd1e779d18ae9605", "text": "Insert None as value for missing fields .", "title": "", "metadata": ""}
{"_id": "f983c8a7920643648065bcfa5da90855", "text": "Ajout d un message de log de type INFO", "title": "", "metadata": ""}
{"_id": "7636f54f19f6b5a3e3f0e905ea78647c", "text": "Return indices of inputs to the node with the given index .", "title": "", "metadata": ""}
{"_id": "4983fd3bccf93c8e1ee7997ca8978b1e", "text": "Return a DataFrame with rows where column values match match are removed .", "title": "", "metadata": ""}
{"_id": "df3223c44467c28d92ffc019e5737c63", "text": "Transform list into a maxheap in - place in O ( len ( x )) time .", "title": "", "metadata": ""}
{"_id": "498be81b3da3908ea9163272f487a34b", "text": "Imputes data set containing Nan values", "title": "", "metadata": ""}
{"_id": "ec5b2fda0c342bac226a155ff2bcd8f3", "text": "Return True if the input is a comma separated list of names .", "title": "", "metadata": ""}
{"_id": "321ef8f4ac85b6e38d1c751a7f4728d4", "text": "Removes the extension from a filename", "title": "", "metadata": ""}
{"_id": "291b77471353d2fc120af543e13fc929", "text": "Registers entity to put to datastore .", "title": "", "metadata": ""}
{"_id": "10494148a06d56aadc3da7f9ecadc875", "text": "helper function to make a dict from a coordinate for logging", "title": "", "metadata": ""}
{"_id": "ae12b25d81d17d2e273ba7e6ec50fcce", "text": "Swap i and j rows", "title": "", "metadata": ""}
{"_id": "dbfe4424ccf173316833ee3f4d165a16", "text": "Set __doc__ of * method * to __doc__ of * method * in its parent class .", "title": "", "metadata": ""}
{"_id": "b997525738d60691bc5f963bf6ac777f", "text": "map for a directory", "title": "", "metadata": ""}
{"_id": "a0e01fc05a7792e29f9795dc2d2a9e98", "text": "HTTP PUT operation to API endpoint .", "title": "", "metadata": ""}
{"_id": "d904545561439bac215bbe0189b578cc", "text": "Validates RFC2822 format", "title": "", "metadata": ""}
{"_id": "eae2b5f7a9c970f9fe4cdfc2f36d9515", "text": "u Returns a list of children and available helper methods .", "title": "", "metadata": ""}
{"_id": "ea5d5ecbf654687846a8b3292f8b6fb3", "text": "0 . Empty row returns False .", "title": "", "metadata": ""}
{"_id": "23c7620450b254bbb6046cda4c0100db", "text": "Delete task ( in any state ) permanently .", "title": "", "metadata": ""}
{"_id": "878f3775fcb81aa39546f80f7c08ea5b", "text": "Calcuate median datetime from datetime list", "title": "", "metadata": ""}
{"_id": "6dd65672a0eb031b827f5a10fa6acce9", "text": "Sets the terminal to the passed color . : param color : one of the availabe colors .", "title": "", "metadata": ""}
{"_id": "753a9eb8574d501aaa2bd6855962d2a2", "text": "Create a random API key for a user : param username : : return : Hex encoded SHA512 random string", "title": "", "metadata": ""}
{"_id": "e91e1fa099c792a99900baf313044081", "text": "Stop the instance .", "title": "", "metadata": ""}
{"_id": "301928b4b86bdfa02102027c3e8b4e4b", "text": "convert from arange to linspace", "title": "", "metadata": ""}
{"_id": "97615b48e943bcaf3fa75acc978ec8c1", "text": "Create an argument parser", "title": "", "metadata": ""}
{"_id": "bd8a8b6a2aae0d9f5ffa06842e8b21b5", "text": "move to util_iter", "title": "", "metadata": ""}
{"_id": "4e7402fed802aaa1274d276df551dc92", "text": "Update the column width .", "title": "", "metadata": ""}
{"_id": "b3a82d8f60a29e34fe44353fc259f44a", "text": "Checks if the date is at the end of the month", "title": "", "metadata": ""}
{"_id": "f00304d8224b82c91518738cdf53866e", "text": "Returns a substring delimited by start and end position .", "title": "", "metadata": ""}
{"_id": "a8c795eb74a03646caa8c2c44d4dc4ea", "text": "Whitespace normalization :", "title": "", "metadata": ""}
{"_id": "2fee613712bc14de5fb4e400794f26b4", "text": "Remove empty utterances from a list of utterances Args : utterances : The list of utterance we are processing", "title": "", "metadata": ""}
{"_id": "8b3f824f8227a49a1114667b42db96e8", "text": "Given a confusion matrix returns the accuracy . Accuracy Definition : http : // research . ics . aalto . fi / events / eyechallenge2005 / evaluation . shtml", "title": "", "metadata": ""}
{"_id": "767a551a190bc9545abdccba0db7b6a1", "text": "check if the step table exists", "title": "", "metadata": ""}
{"_id": "13d6a3fece02998d1c9c47846e0fd614", "text": "Returns uptime in seconds or None on Syllable .", "title": "", "metadata": ""}
{"_id": "d1cdc5b2444f4dbd72f25424e7518225", "text": "Get a single document from the collection this class is bound to . Additional arguments are processed according to _prepare_find prior to passing to PyMongo where positional parameters are interpreted as query fragments parametric keyword arguments combined and other keyword arguments passed along with minor transformation . Automatically calls to_mongo with the retrieved data . https : // api . mongodb . com / python / current / api / pymongo / collection . html#pymongo . collection . Collection . find_one", "title": "", "metadata": ""}
{"_id": "4ec96fdc24ec73e7ef45604b08e45a64", "text": "Returns the module name associated with a frame num_frames_back in the call stack . This function adds 1 to account for itself so num_frames_back should be given relative to the caller .", "title": "", "metadata": ""}
{"_id": "ce9a1d2f45a60d901e60ddab07064178", "text": "r Like print but a function . I . e . prints out all arguments as print would do . Specify output stream like this ::", "title": "", "metadata": ""}
{"_id": "ebab72f066a95f96980b09bbdc5f352f", "text": "Add dots .", "title": "", "metadata": ""}
{"_id": "bcac419536e430b823ceb85958ccc665", "text": "Helper for generating tagNameConverter Makes dict that maps from key to value and back", "title": "", "metadata": ""}
{"_id": "63b92adb9358b7b706b897066dea9f02", "text": "Convert string column into datetime column", "title": "", "metadata": ""}
{"_id": "85ff2294c2bdf8901720828ddff06ec7", "text": "Matthews correlation coefficient", "title": "", "metadata": ""}
{"_id": "8ce6b9e9f1b809c440a0e674453dfd8a", "text": "Pull a form value from the request .", "title": "", "metadata": ""}
{"_id": "4c805ae713de3e35c93b63d57bb51857", "text": "Reverse op .", "title": "", "metadata": ""}
{"_id": "5e32e36555bfc93bb65aaeb50e699b20", "text": "Rollback MySQL Transaction to database . MySQLDB : If the database and tables support transactions this rolls back ( cancels ) the current transaction ; otherwise a NotSupportedError is raised .", "title": "", "metadata": ""}
{"_id": "3adbbc044091e38a7cae483c90ffe3ca", "text": "Update the dev_info data from a dictionary .", "title": "", "metadata": ""}
{"_id": "1ffb1dd5a5438906df09fff6aa8119d0", "text": "Output data as a nicely - formatted python data structure", "title": "", "metadata": ""}
{"_id": "57ecfa79a214359c491b6a1cb23efedc", "text": "Rewrite a file adding a line to its beginning .", "title": "", "metadata": ""}
{"_id": "c684c5d99ea722974b635f93dca4acae", "text": "There s probably a way to do this with string functions but I was lazy . Replace all instances of \\ r or \\ n in a string with something else .", "title": "", "metadata": ""}
{"_id": "0ffcaba8fb1723b5a5a8505ec2a9e1f4", "text": "The how well do the features plus a constant base rate sum up to the model output .", "title": "", "metadata": ""}
{"_id": "b3c0fc9c496ef96d8d467c96fa4d954d", "text": "Load a FASTA file and return the sequences as a list of SeqRecords", "title": "", "metadata": ""}
{"_id": "16c8ece6d07f860796bde8df9d9d88f4", "text": "Use top_k to sort a Tensor along the last dimension .", "title": "", "metadata": ""}
{"_id": "b3611a489a27545e9f46c1bdcce5db7d", "text": "For a range indicated from start to end replace with replacement .", "title": "", "metadata": ""}
{"_id": "1046d837c6723db225d2194dd767f4b3", "text": "ANSI Escape sequences http : // ascii - table . com / ansi - escape - sequences . php", "title": "", "metadata": ""}
{"_id": "0583d4bdca75a3c486664180169738ee", "text": "Return all rows from a cursor as a list of : class : OrderedDict objects .", "title": "", "metadata": ""}
{"_id": "49491de202fd85804c2fa39e3e465f06", "text": "Checks if there is an invalid digit in the input number . Args : number : An number in the following form : ( int int int ... . int int int ) ( iterable container ) containing positive integers of the input base input_base ( int ) : The base of the input number . Returns : bool True if all digits valid else False . Examples : >>> check_valid (( 1 9 6 . 5 1 6 ) 12 ) True >>> check_valid (( 8 1 15 9 ) 15 ) False", "title": "", "metadata": ""}
{"_id": "8873a1bc44881d95428271704bc5955a", "text": "equivalent to scipy . preprocessing . normalize on sparse matrices but lets avoid another depedency just for a small utility function", "title": "", "metadata": ""}
{"_id": "23b0ee1376ce9838f4344be9e6329626", "text": "extract features in a sentence", "title": "", "metadata": ""}
{"_id": "49c37e5398ac6c173ac28432ea44e700", "text": "Merge modified objects into parent transaction .", "title": "", "metadata": ""}
{"_id": "9f6f0339493885a0bf278b3db407b631", "text": "Calculate the index rank according to Bertran s notation .", "title": "", "metadata": ""}
{"_id": "e32ea79e42414c0bb316f3ff71dab04e", "text": "Returns true if the guessed mimetyped isnt t in text group .", "title": "", "metadata": ""}
{"_id": "a800092199ea5a1f89694dc017540625", "text": "Apply transforms to the data and predict with the final estimator", "title": "", "metadata": ""}
{"_id": "aecef3bde2c435b62d6013bf97b4159a", "text": "Trim the trailing silence of the pianoroll .", "title": "", "metadata": ""}
{"_id": "5f3873729fecd21d91913acb893c8616", "text": "Re - raises the error that was processed by prepare_for_reraise earlier .", "title": "", "metadata": ""}
{"_id": "5197376d99d0b008bb02f2b8b4843f07", "text": "Checks if USB is on and device is ready by verifying adb devices .", "title": "", "metadata": ""}
{"_id": "1159270bec56d6f94b3dc88eafd281e4", "text": "From a given natural integer returns the prime factors and their multiplicity : param n : Natural integer : return :", "title": "", "metadata": ""}
{"_id": "b511846fb88708c2d448ccbbf77c2d6d", "text": "r Parses a string into a list of pairs .", "title": "", "metadata": ""}
{"_id": "993d6078089d4ade8f373c1e43f6a5b8", "text": "Ideally we shouldn t lose the first second of events", "title": "", "metadata": ""}
{"_id": "e8ede78394cbbb87d1c928aa1d085d03", "text": "Find leftmost item greater than or equal to x .", "title": "", "metadata": ""}
{"_id": "09176a44b6baa157f66fe335393c44ac", "text": "Build the header", "title": "", "metadata": ""}
{"_id": "976fa3c3f83146feb4077843bf210ad9", "text": "save something to a pickle file", "title": "", "metadata": ""}
{"_id": "415fa7954051699938ba77942b0008d5", "text": "Bootstrapped mean with confidence limits", "title": "", "metadata": ""}
{"_id": "fe4b2e71f0a8f787d0551061033cb3e1", "text": "Create directory with template for topic of the current environment", "title": "", "metadata": ""}
{"_id": "c5361d0574827a50baf5c90352832c1a", "text": "Decodes a given base64 string into bytes .", "title": "", "metadata": ""}
{"_id": "8ad1bdb5848ad3d1665e89fdb6d506d1", "text": "Split a comma separated option into a list .", "title": "", "metadata": ""}
{"_id": "922068675729858519f775fe497325d7", "text": "Add a histogram for the data to the axes .", "title": "", "metadata": ""}
{"_id": "fd4849eb1bc21dbaad5d632324c0bbc5", "text": "Prepare test for singleton property .", "title": "", "metadata": ""}
{"_id": "264441b8505d825777bc27cd5628cc56", "text": "Resets the scale on this image . Correctly aligns time scale undoes manual scaling", "title": "", "metadata": ""}
{"_id": "1bc610fec47e680a3e4fb47a2d08953e", "text": "Whether the pattern matches anywhere in the string s .", "title": "", "metadata": ""}
{"_id": "c3ce60d98d0610cc20e55c1609af2cfd", "text": "Attempt to guess the title from the filename", "title": "", "metadata": ""}
{"_id": "1d4baa560d3ab81a9e7a39528eacbf46", "text": "Parse ISO8601 timestamps given by github API .", "title": "", "metadata": ""}
{"_id": "8793edbf9582b1f34f87afe549f0bf07", "text": "Returns the value of the other type instance to use in an operator method namely when the method s instance is on the left side of the expression .", "title": "", "metadata": ""}
{"_id": "040f0e50e941bf21b8bd274f6d98f56c", "text": "HTTP request method of interface implementation .", "title": "", "metadata": ""}
{"_id": "fe74ce83e0ba69c793fe3fea86188553", "text": "Purely a debugging aid : Ascii - art picture of a tree descended from node", "title": "", "metadata": ""}
{"_id": "131f0b75a593fae78d687624f2459ebc", "text": "Replace masked - out elements in an array using an iterative image inpainting algorithm .", "title": "", "metadata": ""}
{"_id": "376be3653adcb0a24b06d8cdf57aa8e0", "text": "Converts a millisecond accuracy timestamp to a datetime", "title": "", "metadata": ""}
{"_id": "0966614d81d53f5502d18bc55672375d", "text": "pops multiple keys off a dict like object", "title": "", "metadata": ""}
{"_id": "9ba58b608283a2ba28c05ee51d3562e6", "text": "convert to datetime to UTC offset .", "title": "", "metadata": ""}
{"_id": "960d162c094e66b795183a1cdfc6a729", "text": "Determines if the specified file / folder exists even if it is on a remote server .", "title": "", "metadata": ""}
{"_id": "e02c8299b31d38a3eabfc13c4aaa8b63", "text": ": return : size of the entire schema in bytes", "title": "", "metadata": ""}
{"_id": "73b02c3c0771136c36103bcb9d70f877", "text": "Combine PDFs and return a byte - string with the result .", "title": "", "metadata": ""}
{"_id": "e8a5d406d10fa0baab1484586cc8a959", "text": "Returns the greatest common divisor for a sequence of numbers . Uses a numerical tolerance so can be used on floats", "title": "", "metadata": ""}
{"_id": "1ef47feb0669db76678269a090c731b8", "text": "Manually shutdown the async API .", "title": "", "metadata": ""}
{"_id": "b17c22170463f6e7485dc06b82195e6f", "text": "history Display a list of commands that have been entered .", "title": "", "metadata": ""}
{"_id": "1210e28370d8aef351b2919d67367d48", "text": "Formats the given time into HH : MM : SS", "title": "", "metadata": ""}
{"_id": "b97e8501d2e47f9f07e0c165b3e3b917", "text": "Localize a datetime object to local time .", "title": "", "metadata": ""}
{"_id": "a01a630816df6cd5e0d3cbd2428b8338", "text": "r Checks if l is a 2D numpy array of bools", "title": "", "metadata": ""}
{"_id": "2b2cafe2ff2c044bfb0fb702be182402", "text": "A datetime - version that takes datetime object list as x_axis", "title": "", "metadata": ""}
{"_id": "3eff5b2fb58d75c17c61996db8faa7b5", "text": "Formats the sum of a and b .", "title": "", "metadata": ""}
{"_id": "c151086529e467da69568f556c10cdce", "text": "Replace month strings occurrences with month number .", "title": "", "metadata": ""}
{"_id": "6841113331e32e0816ae30ccb77bc584", "text": "Get actual tree selection object and all respective models of selected rows", "title": "", "metadata": ""}
{"_id": "50c0206c188fa49742a54c3d7c8b0c27", "text": "Returns the value of a property or the default one", "title": "", "metadata": ""}
{"_id": "2a8d42ef40bdc72b358787cec2e6c748", "text": "Return a function that will call a named method on the target object with optional positional and keyword arguments .", "title": "", "metadata": ""}
{"_id": "1de24df160b0128996e2f68259e6573b", "text": "Start web application", "title": "", "metadata": ""}
{"_id": "0cb97ffa2609ae9569d53e3e96ef4100", "text": "An enum is encoded by a int representing the zero - based position of the symbol in the schema .", "title": "", "metadata": ""}
{"_id": "b794e34e89389ba53d0150b66080af84", "text": "Read a block of data and parse using the given protobuf object .", "title": "", "metadata": ""}
{"_id": "bfc997408857f90a08a23446c5d93477", "text": "Compute summary statistics of a unique ( S_TYPE_UNIQUE ) variable ( a Series ) .", "title": "", "metadata": ""}
{"_id": "f9b921e8aa1a4e4a13b222ce8bc5e3dc", "text": "Install or upgrade setuptools and EasyInstall", "title": "", "metadata": ""}
{"_id": "1248b33d500027b7d98511832a2c9b85", "text": "Test whether a path exists and is readable . Returns None for broken symbolic links or a failing stat () and False if the file exists but does not have read permission . True is returned if the file is readable .", "title": "", "metadata": ""}
{"_id": "ffaa2c8b09152104d0120dec3cead89c", "text": "Call a remote api method but don t raise if an error occurred .", "title": "", "metadata": ""}
{"_id": "3cf06645cd2c2f80cddfad9acbd4456a", "text": "Test if value is an instance of int .", "title": "", "metadata": ""}
{"_id": "0408613ec1694d1244f2a603c4a094a0", "text": "Return a new : class : DataFrame containing rows only in both this frame and another frame .", "title": "", "metadata": ""}
{"_id": "6898745ad496b941f39666f21704b8cd", "text": "If called after an update the sprite can move back", "title": "", "metadata": ""}
{"_id": "4d151525b4f6b1b15f2160b32cb0934b", "text": "Parse datetime .", "title": "", "metadata": ""}
{"_id": "747ab0fc4b31e9c6a364b051e25d7ca3", "text": "Convert a UUID object to a 22 - char BUID string", "title": "", "metadata": ""}
{"_id": "f67dab25a78733126af96eb679f6cb72", "text": "Returns the data where the expression is normalized so that the total count per cell is equal .", "title": "", "metadata": ""}
{"_id": "0d02efb4a55c71ac09c01d0be4283c4f", "text": "Returns True if the given value is a function or method object .", "title": "", "metadata": ""}
{"_id": "73d01b96a5963f34b68a703da6a60ca4", "text": "parse_query_string : very simplistic . won t do the right thing with list values", "title": "", "metadata": ""}
{"_id": "c7b0d777870b94d90303b2611bb8a54b", "text": "imshow without interpolation like as matshow : param args : : param kwargs : : return :", "title": "", "metadata": ""}
{"_id": "75a9989143067bca656803a5c9f929a1", "text": "Format a string for screen printing .", "title": "", "metadata": ""}
{"_id": "6488dfa8586c9890274dfcf83a63c994", "text": "print a binary tree", "title": "", "metadata": ""}
{"_id": "b3284dd388a70379d6e899a68465dac2", "text": "Finds the value in arr that value is closest to", "title": "", "metadata": ""}
{"_id": "23c138cd4d7d5ff6047427c69bcaad91", "text": "Parses a byte array containing a JSON document and returns a Python object . : param data : The byte array containing a JSON document . : param MimeType mimetype : The mimetype chose to parse the data . : return : A Python object .", "title": "", "metadata": ""}
{"_id": "bdfef52003f94f02e07b4ba6331f2cd4", "text": "Renders a template from the given template source string with the given context .", "title": "", "metadata": ""}
{"_id": "647d446ee8c93deb37472db91a1fb0a5", "text": "Disconnect from target .", "title": "", "metadata": ""}
{"_id": "9e43ca1fe261ea2f76b81c5f51e60401", "text": "Return file type icon", "title": "", "metadata": ""}
{"_id": "62c221a7c95c8d6be61972353813802a", "text": "Read currency from windows registry", "title": "", "metadata": ""}
{"_id": "915d410d70f309b81fab762646990d2e", "text": "Fetch an image from url and convert it into a Pillow Image object", "title": "", "metadata": ""}
{"_id": "46d02788de28fc111c873bffd390a8d8", "text": "A non - optimal implementation of a regex filter", "title": "", "metadata": ""}
{"_id": "08a4a32065faf954088cdca69397a257", "text": "Is the user a system administrator", "title": "", "metadata": ""}
{"_id": "ead7972a8c0e1e448eb42d9d148b75ee", "text": "This turns off stdout buffering so that outputs are immediately materialized and log messages show up before the program exits", "title": "", "metadata": ""}
{"_id": "3389c61272dd1e4a9ddb2305f73f78b6", "text": "adds information to the sequence for better debugging currently only an index property on each point in the sequence .", "title": "", "metadata": ""}
{"_id": "282b3e9306d12c3a2058470e8cc50dde", "text": ": API : public", "title": "", "metadata": ""}
{"_id": "42d9c8fb14a22b281edfa8720ae57972", "text": "Emulate what a Python set () does but keeping the element s order .", "title": "", "metadata": ""}
{"_id": "02f2a64e6dc99c57d634cc1da03e2c06", "text": "Check that all arrays have consistent first dimensions .", "title": "", "metadata": ""}
{"_id": "5ed602a97b82afef81572749347fa779", "text": "The current active : class : . Window .", "title": "", "metadata": ""}
{"_id": "54e3504be4c3cf4e3aeed511ac087671", "text": "Returns the first location of the maximum value of x . The position is calculated relatively to the length of x .", "title": "", "metadata": ""}
{"_id": "8821c8faca5522ce8503c763f98a0d66", "text": "Returns the size of a specific dimension .", "title": "", "metadata": ""}
{"_id": "1aeb7d654bdf548a3b247d9298745f2e", "text": "Return extension identifying format of given filename", "title": "", "metadata": ""}
{"_id": "d94a7942ee6d5f019134db6c4b57cfdc", "text": "r Close all opened windows .", "title": "", "metadata": ""}
{"_id": "96c64e347937aabfe650e2761b98c4cb", "text": "Return an JavaRDD of Object by unpickling", "title": "", "metadata": ""}
{"_id": "8cbce75428e2055858d4f11a33145e9f", "text": "Take a dataframe and string - i - fy a column of values . Turn nan / None into and all other values into strings .", "title": "", "metadata": ""}
{"_id": "873f265027b09dc74a2a426c4240d4c6", "text": "Returns the list of all indexes of the given array .", "title": "", "metadata": ""}
{"_id": "48d1e888957dd0839388cee33d38431e", "text": "Gets names of all methods implemented in specified object .", "title": "", "metadata": ""}
{"_id": "d4ff42509114641524c81fe0abd49dd9", "text": "Similar to #itertools . chain . from_iterable () .", "title": "", "metadata": ""}
{"_id": "b3088d323305258a52af62b2eed8e900", "text": "Update the request headers .", "title": "", "metadata": ""}
{"_id": "05fefff0481f34301627dd780fb81d0b", "text": "Sets the width ( in terms of space characters ) for tab characters .", "title": "", "metadata": ""}
{"_id": "f2aaa388728cda2823ddbab02e3e69a9", "text": "Read the sphinx environment . pickle file at path pth .", "title": "", "metadata": ""}
{"_id": "abc4fe32b30f1af633a921caffabec05", "text": "Returns a digraph string fragment based on the passed - in module", "title": "", "metadata": ""}
{"_id": "2066ce40b29ac4be3359d0168ae0909b", "text": "Returns full ISO string for the given date", "title": "", "metadata": ""}
{"_id": "a6b1c3d2f1197e08e1407610fd9d2a8c", "text": "Get object from string reference .", "title": "", "metadata": ""}
{"_id": "955e64755780b995b0fd8fbac6c0f4e7", "text": "Return all child objects in nested lists of strings .", "title": "", "metadata": ""}
{"_id": "51dcaa485197095142eb43670b21cc75", "text": "Like print_exc () but return a string . Backport for Python 2 . 3 .", "title": "", "metadata": ""}
{"_id": "b28745ae0510f031b886d95d92aea205", "text": "Trace every executed line .", "title": "", "metadata": ""}
{"_id": "dba10f9cbef50447106b83c92f229354", "text": "Calculate column - wise Pearson correlations using numpy . ma . corrcoef", "title": "", "metadata": ""}
{"_id": "8fd0abbf8b6bb0be9f746929ed0b5faa", "text": "Wait until the user accepted or rejected the request", "title": "", "metadata": ""}
{"_id": "26b2bbdf881421c629817650e1205a43", "text": "Update the progressbar .", "title": "", "metadata": ""}
{"_id": "fd30f68834f1ef14885c4a524ff53691", "text": "Tuple describing range to read from the ndarray - closed : open", "title": "", "metadata": ""}
{"_id": "2729dc5bf2df338cb0344714fa37281b", "text": "Return matrix as csv data .", "title": "", "metadata": ""}
{"_id": "ed40f105385f9c91c042d230389f3516", "text": "Converts a skew - symmetric cross - product matrix to its corresponding vector . Only works for 3x3 matrices .", "title": "", "metadata": ""}
{"_id": "438e999c4e5786f2fcaec687ad45de43", "text": "Launches the django server at 127 . 0 . 0 . 1 : 8000", "title": "", "metadata": ""}
{"_id": "7c5fd60da50f0205f1966a5da3976bf4", "text": "Wrap standard function to easily pass into map processing .", "title": "", "metadata": ""}
{"_id": "f62ee62cdd7edcf09352d7d22fa6835f", "text": "Compose all given tuples together .", "title": "", "metadata": ""}
{"_id": "370de6ec6d15c2e667f41fce141195d8", "text": "If we re not on the first line ( of a multiline input ) go a line up otherwise go back in history . ( If nothing is selected . )", "title": "", "metadata": ""}
{"_id": "9adcc8190d9e515a9732318fb569af3f", "text": "Converts Timestamp to datetime .", "title": "", "metadata": ""}
{"_id": "92f75ebbdba97f680d84880276022c6e", "text": "Calculates and returns a month number basing on PESEL standard .", "title": "", "metadata": ""}
{"_id": "b9d5ab968982a75b31e8bcf0cea1ede2", "text": "At least one of the items in value should match", "title": "", "metadata": ""}
{"_id": "6f3825300027e55d200abe8407ed460d", "text": "The default urlparse . urljoin behavior look strange Standard urlparse . urljoin ( http : // a . com / foo / bar ) Expect : http : // a . com / foo / bar Actually : http : // a . com / bar This function fix that .", "title": "", "metadata": ""}
{"_id": "fe9b8913195c2712d95e9c0db8972254", "text": "Wraps os . environ to filter out non - encodable values .", "title": "", "metadata": ""}
{"_id": "d95d0413f4eb2a21ad54bd728cfe2b74", "text": ": type s : str : rtype : int", "title": "", "metadata": ""}
{"_id": "71a0796650e028518efac381854c82da", "text": "Shut down a specific process .", "title": "", "metadata": ""}
{"_id": "fed506af9096def4ab919a9cf2fcc92c", "text": "Implementation of circle border with PyCairo .", "title": "", "metadata": ""}
{"_id": "198000b5adce808d22f3fcdc2e66baae", "text": "Wrap text in an ansi escape sequence", "title": "", "metadata": ""}
{"_id": "db1ad629ed8674e2f68aa60d4a956274", "text": "Converts name to lower camel case . Words are identified by capitalization dashes and underscores .", "title": "", "metadata": ""}
{"_id": "bb938925985df295f27640cede26134a", "text": "Wrapper around Django s get_language utility . For Django > = 1 . 8 get_language returns None in case no translation is activate . Here we patch this behavior e . g . for back - end functionality requiring access to translated fields", "title": "", "metadata": ""}
{"_id": "aa2babe1b36e7046d74f92456b26009f", "text": "Run Python test cases against Java runtime classes .", "title": "", "metadata": ""}
{"_id": "837a4aa2201f0312dd2c0143977b5aff", "text": "Strip SGML / XML tags and replace adjacent whitespace by one space .", "title": "", "metadata": ""}
{"_id": "1b54eef9e59068985edc9b79fb22a9e6", "text": "Read a file into a string PRE : fname is a small file ( to avoid hogging memory and its discontents )", "title": "", "metadata": ""}
{"_id": "74a97d85853dc4ee569fe0ea2a2fffe2", "text": "Retrieves and removes the first task from the heap .", "title": "", "metadata": ""}
{"_id": "ee216b090eb0575c68f9e049a8f835ec", "text": "Union any overlapping intervals in the given set .", "title": "", "metadata": ""}
{"_id": "b4749c1356ecc94dd496a1e5f6f9b850", "text": "validate that we can store the multi - index ; reset and return the new object", "title": "", "metadata": ""}
{"_id": "e0623b27353fdb327981897e8250ef45", "text": "Downloads and returns the full text of a particular page in the document .", "title": "", "metadata": ""}
{"_id": "f67003d591c8f6079c8d1d6c947b75d7", "text": "Determines the number of bytes required to store a NumPy array with the specified shape and datatype .", "title": "", "metadata": ""}
{"_id": "73f9b12435463fde128b052297c86158", "text": "Ensure val is Nx ( n_col ) usually Nx3", "title": "", "metadata": ""}
{"_id": "40891ab3010a03aba4610744517ca327", "text": "Computes eigenvalues and eigenvectors of covariance matrix of A . The rows of a correspond to observations the columns to variables .", "title": "", "metadata": ""}
{"_id": "2b50145484af8dfc76503f5b9a67c352", "text": "Returns a copy of the given string ( or list of strings ) in which all occurrences of the given source are replaced by the given dest .", "title": "", "metadata": ""}
{"_id": "2a9ebaa60c199de4aca2f7b81f3bfece", "text": "Fill missing data in a column of df with the median and add a { name } _na column which specifies if the data was missing . Parameters : ----------- df : The data frame that will be changed . col : The column of data to fix by filling in missing data . name : The name of the new filled column in df . na_dict : A dictionary of values to create na s of and the value to insert . If name is not a key of na_dict the median will fill any missing data . Also if name is not a key of na_dict and there is no missing data in col then no { name } _na column is not created . Examples : --------- >>> df = pd . DataFrame ( { col1 : [ 1 np . NaN 3 ] col2 : [ 5 2 2 ] } ) >>> df col1 col2 0 1 5 1 nan 2 2 3 2 >>> fix_missing ( df df [ col1 ] col1 {} ) >>> df col1 col2 col1_na 0 1 5 False 1 2 2 True 2 3 2 False >>> df = pd . DataFrame ( { col1 : [ 1 np . NaN 3 ] col2 : [ 5 2 2 ] } ) >>> df col1 col2 0 1 5 1 nan 2 2 3 2 >>> fix_missing ( df df [ col2 ] col2 {} ) >>> df col1 col2 0 1 5 1 nan 2 2 3 2 >>> df = pd . DataFrame ( { col1 : [ 1 np . NaN 3 ] col2 : [ 5 2 2 ] } ) >>> df col1 col2 0 1 5 1 nan 2 2 3 2 >>> fix_missing ( df df [ col1 ] col1 { col1 : 500 } ) >>> df col1 col2 col1_na 0 1 5 False 1 500 2 True 2 3 2 False", "title": "", "metadata": ""}
{"_id": "b73e0b532e1699fa3bc5939daa4eb4c3", "text": "Evaluate smooth term in Vf .", "title": "", "metadata": ""}
{"_id": "d5d1dbfaf4be489cfb3d00edb6d7f5d4", "text": "Read only access to the read preference of this instance or session .", "title": "", "metadata": ""}
{"_id": "221135d30582689c7efdf56b211bd045", "text": "returns a a random string that represent a binary representation", "title": "", "metadata": ""}
{"_id": "c89ca206e342bd17095bf0700151502c", "text": "Return block of normal random numbers", "title": "", "metadata": ""}
{"_id": "d2eecb7411a3c01aeb74b85d3a191112", "text": "Returns public attributes of the inspected object .", "title": "", "metadata": ""}
{"_id": "791c6305e319c81cbefb1e7111e28d81", "text": "Return median", "title": "", "metadata": ""}
{"_id": "e6d7f217bfd9b56a34412c3b0dafe259", "text": "Fibonacci example function", "title": "", "metadata": ""}
{"_id": "c14607c1b064738ebc0ad88182f000e0", "text": "Determine if URL is safe to redirect to .", "title": "", "metadata": ""}
{"_id": "c90404a536041c6d968521700c212db2", "text": "Close tensorflow session . Exposes for memory management .", "title": "", "metadata": ""}
{"_id": "fcc98973c999bd5311553644d776ff31", "text": "Return start and end date of this month .", "title": "", "metadata": ""}
{"_id": "c692f8a0356f8f0b95ee5c0784c27bdd", "text": "Return first occurrence matching f otherwise None", "title": "", "metadata": ""}
{"_id": "3df252b7f0d8f47cebee6fc70eef9eaf", "text": "Convert a structured NumPy array into a Table .", "title": "", "metadata": ""}
{"_id": "cb9707bc378d39b993f7bae40669a658", "text": "Given an index for the text return the corresponding ( row col ) tuple . ( 0 - based . Returns ( 0 0 ) for index = 0 . )", "title": "", "metadata": ""}
{"_id": "037848358477e113a1d10ae0455b70ca", "text": "Chunk one big list into few small lists .", "title": "", "metadata": ""}
{"_id": "91b9e854fb1f846c3459d768aec3e629", "text": "helpful in situations where browser / app may recognize Unicode encoding in the \\ u0b8e type syntax but not actual unicode glyph / code - point", "title": "", "metadata": ""}
{"_id": "c90657be889aa32ff317da49dc50678f", "text": "Extract tag s attributes into a dict .", "title": "", "metadata": ""}
{"_id": "b49670d01cceb3dec3337aaca41fe655", "text": "Confirms that the uploaded image is of supported format .", "title": "", "metadata": ""}
{"_id": "c2eb7ea4e44f2499a64fb1b0e94f455f", "text": "Performs str . strip () a column of a DataFrame Parameters : df - DataFrame DataFrame to operate on col_list - list of strings names of columns to strip dest - bool default False Whether to apply the result to the DataFrame or return it . True is apply False is return .", "title": "", "metadata": ""}
{"_id": "cb9545722272f2f320f284d314c941bd", "text": "Creates symbolic link for either operating system . http : // stackoverflow . com / questions / 6260149 / os - symlink - support - in - windows", "title": "", "metadata": ""}
{"_id": "d4e810a7502fe86cdc4184353a0828bd", "text": "Return the channels of a colorbar .", "title": "", "metadata": ""}
{"_id": "bbd4ea07376ff3a078eb47f3f4023b56", "text": "Calculate equality between two ( Comparable ) objects .", "title": "", "metadata": ""}
{"_id": "2b22fab403e60c0c04b2664dc85dd1a3", "text": "True if the json_element passed is present for the task specified .", "title": "", "metadata": ""}
{"_id": "3ba50dc696405578085089c6fe69c3f9", "text": "Sorts a list of strings case insensitively as well as numerically .", "title": "", "metadata": ""}
{"_id": "2a56a6644f005d7a59bcc2a186dc7fc8", "text": "Get the absolute uri for a file", "title": "", "metadata": ""}
{"_id": "5a201063ab2912a5f04b734f093e6a7d", "text": "Shuffle lists consistently .", "title": "", "metadata": ""}
{"_id": "72077557d288298c953e4d538f939527", "text": "Forcefully delete objects from memory", "title": "", "metadata": ""}
{"_id": "5cc202244035269352ee3620ca712d93", "text": "Finds the closest object of a given type .", "title": "", "metadata": ""}
{"_id": "107df282f15410d3a8f05a97c1276b68", "text": "Returns indices of the maximum values along an axis", "title": "", "metadata": ""}
{"_id": "58ec2d1d07519ede2a0c3ce740c4f2ea", "text": "Generates a ruler line for separating rows from each other", "title": "", "metadata": ""}
{"_id": "8fba49a283174f859575dbfc73afefe4", "text": "Currently pretends to talk to an instrument and get back the magnitud and phase of the measurement .", "title": "", "metadata": ""}
{"_id": "eeae51b3828135a16179075ffe35bc31", "text": "Outputs json with formatting edits + object handling .", "title": "", "metadata": ""}
{"_id": "ba5d408b442a3bb65a0c739d10a0d9c6", "text": "Utilize wordnet ( installed with nltk ) to get synonyms for words word is the input word returns a list of unique synonyms", "title": "", "metadata": ""}
{"_id": "d72f0a0f4fb07876c195cb998c549611", "text": "Root Mean Square", "title": "", "metadata": ""}
{"_id": "e4e19c302771aa7f3a5a65891cdb590b", "text": "Run the * cmd * and exit with the proper exit code .", "title": "", "metadata": ""}
{"_id": "052f48ac5057b8a84e5f64010b9d9a57", "text": "Loads the flow from a JSON file .", "title": "", "metadata": ""}
{"_id": "db52a2a091f64b34b334f3cdd2c08cee", "text": "Test if an array is a square matrix .", "title": "", "metadata": ""}
{"_id": "d02799d7f8cc9c587495ab0bf4daed78", "text": "Converts array to a json string", "title": "", "metadata": ""}
{"_id": "728e6fb184dde181894739fd13e9166b", "text": "image resize function used by quite a few image problems .", "title": "", "metadata": ""}
{"_id": "5d52e1beb320d807b81003b18974e19a", "text": "Get a value from a dict which contains just one item .", "title": "", "metadata": ""}
{"_id": "75dcc83bfaf122b464f140123c0e5d8a", "text": "Sends control values directly to the engines overriding control loops .", "title": "", "metadata": ""}
{"_id": "ff270004f40b14358cc407d3c4f1a718", "text": "Returns a Seaborn linear regression plot", "title": "", "metadata": ""}
{"_id": "bc63b35f2091927addd37a3b60b6d899", "text": "Creates a help string for names_list grouped by prefix .", "title": "", "metadata": ""}
{"_id": "6564751391d7cea319a6f435ab9ce5a6", "text": "Sends Modify_DNS_Record request", "title": "", "metadata": ""}
{"_id": "b6ef98020577fb4e5f9de19234c1fa63", "text": "Remove a directory and it contents . Ignore any failures .", "title": "", "metadata": ""}
{"_id": "33d4a72545778e98adf2de898edb34a3", "text": "Given a file - like object loads it up into a PIL . Image object and returns it .", "title": "", "metadata": ""}
{"_id": "5d751439960932a3946f53612bed2b12", "text": "return unique rows", "title": "", "metadata": ""}
{"_id": "fd91d06c4171c44b7824af568dacea23", "text": "decode ( bytearray raw = False ) - > value", "title": "", "metadata": ""}
{"_id": "72ba144124730cd8701ed9c0d8a34d48", "text": "Converts datetimeoffset object into Python s datetime . datetime object", "title": "", "metadata": ""}
{"_id": "a505761937969084ddbac4d25b525d6e", "text": "Underlying synchronized wrapper .", "title": "", "metadata": ""}
{"_id": "0546684ecccdecc272851daecb1133de", "text": "Add a matplotlib colormap .", "title": "", "metadata": ""}
{"_id": "382e7464e346244f2182fe1a41bf9a88", "text": "Check if a wav contains data", "title": "", "metadata": ""}
{"_id": "db05f1e52cc6204967cc32a5562d5e40", "text": "Function for running binary search on a sorted list .", "title": "", "metadata": ""}
{"_id": "5e477b05040af7f412b3d83fd48166a3", "text": "Parse an int robustly ignoring commas and other cruft .", "title": "", "metadata": ""}
{"_id": "05e968c3e8e3ff4024e388ce4578d55a", "text": "Returns a DataTable instance built from either the filename or STDIN if filename is None .", "title": "", "metadata": ""}
{"_id": "8c1ecda52b65ec3009cceee7b227dc3d", "text": "Convert a log record into a list of strings", "title": "", "metadata": ""}
{"_id": "182ff0c5c9fd129fbd8977d533e689fe", "text": "Composes the passed filters into an and - joined filter .", "title": "", "metadata": ""}
{"_id": "0ee8427a683cc44d0612c490bd98f137", "text": "Return a tuple of this array s dimensions . This is done by querying the Dim children . Note that once it has been created it is also possible to examine an Array object s . array attribute directly and doing that is much faster .", "title": "", "metadata": ""}
{"_id": "702e7f7c8fd8c78964f1a27e3e63f80e", "text": "Set the size of the label .", "title": "", "metadata": ""}
{"_id": "749e6a77448978b5a6141a500c8b0f15", "text": "The cell lengths .", "title": "", "metadata": ""}
{"_id": "285a89b656e2a09c0670c549cb4a23a4", "text": "Ensures that the external tool is available . Asserts upon failure .", "title": "", "metadata": ""}
{"_id": "5f3230eea104f0b596791426ea60b4ff", "text": "Images must be either 2D or 3D .", "title": "", "metadata": ""}
{"_id": "95ff5078be3067404bba927eef537a37", "text": "Format list .", "title": "", "metadata": ""}
{"_id": "29ebde25dcbc789cb2060a8ff7d22fa4", "text": "Returns the list of field names of the model .", "title": "", "metadata": ""}
{"_id": "0e0339841a8069275145e08f9f17de8e", "text": "Generate an endless sequence of random integers from permutations of the set [ 0 ... N ) .", "title": "", "metadata": ""}
{"_id": "c4587a5b06787c1e92b7dc9da50f1b17", "text": "Returns a list of names of columns that are string type .", "title": "", "metadata": ""}
{"_id": "19c761fe035ee8920c87c6e5d78fb00a", "text": "Join all lines from input string and wrap it at specified width", "title": "", "metadata": ""}
{"_id": "ed5ea056c299a2dde5591727b899ff80", "text": "Called by the instance manager when a component property is modified", "title": "", "metadata": ""}
{"_id": "c13a551274f17abe43e8a86e6da2b6c8", "text": "Helper function to turn a string representation of true into boolean True .", "title": "", "metadata": ""}
{"_id": "66f968181d4e2acdd27fd1f0b27cc539", "text": "Communicate with the child process without closing stdin .", "title": "", "metadata": ""}
{"_id": "d51147b19ceb9413df96a4c90a61c76a", "text": "Returns whether the specified element selector is present on the page .", "title": "", "metadata": ""}
{"_id": "48235dd68f48a22103955dd2cd553529", "text": "Get authentication .", "title": "", "metadata": ""}
{"_id": "9045bb4a4d7634310ae432cfd3d398cc", "text": "This function prints the given String immediately and flushes the output .", "title": "", "metadata": ""}
{"_id": "7775a7ba610d3a83e3c1c6ed6f2d6a3d", "text": "Force commit changes to the file and stdout", "title": "", "metadata": ""}
{"_id": "d49613ba38aa94536fae5fe3f5c9b22d", "text": "Write a lisst of Text instances as JSON corpus on disk . A JSON corpus contains one document per line encoded in JSON .", "title": "", "metadata": ""}
{"_id": "3a4cc4cf428657b370a2fa66225828c9", "text": "Convert a CSV SampleSheet to YAML run_info format .", "title": "", "metadata": ""}
{"_id": "da516fc53678c30b054eab3c9eab19f4", "text": "Plot the elements of the Pauli transfer matrix .", "title": "", "metadata": ""}
{"_id": "65743abcaff9de613a80f5ce37412ecc", "text": "Generator that loops through all absolute paths of the files within folder", "title": "", "metadata": ""}
{"_id": "218c3d9e056f34f0b2f50b67c61ee0c4", "text": ": type root : TreeNode : rtype : int", "title": "", "metadata": ""}
{"_id": "70baf338d27d887e2c6168c3ab7ad8ad", "text": "Convert bytes and non - string into Python 3 str", "title": "", "metadata": ""}
{"_id": "b2b3c62ad5ac5cc35597f945bdead39c", "text": "Yield num_chars - character chunks from string .", "title": "", "metadata": ""}
{"_id": "c8be17acbb2358f0f1343c783dab1718", "text": "Empty the range from start to stop .", "title": "", "metadata": ""}
{"_id": "67055ac0b8062d2d8e4284234da04ae2", "text": "Returns the total timedelta duration in seconds .", "title": "", "metadata": ""}
{"_id": "bdbeee08b67e90580b747bee07eb271b", "text": "Get a property of the experiment by name .", "title": "", "metadata": ""}
{"_id": "e305d91a8a1d2e39916a7c1a3a92bf7c", "text": "Calculcate checksum for a file .", "title": "", "metadata": ""}
{"_id": "162a4de0e9ca32565b0abc8012e8d48c", "text": "Remove element from the RangeSet if it is a member .", "title": "", "metadata": ""}
{"_id": "773a3ef4609a1e1b383226ccc6553221", "text": "r Makes sure that x is type of float", "title": "", "metadata": ""}
{"_id": "4be79500b53a0717e3f99549ee456240", "text": "Calculate combined size of tiles .", "title": "", "metadata": ""}
{"_id": "dc2ff09879ee6c7cf3e57bd65abbfe28", "text": "Show help on all commands .", "title": "", "metadata": ""}
{"_id": "7a1a5f3e79fdc91edf2f5ead9d66abb4", "text": "Read", "title": "", "metadata": ""}
{"_id": "86142600f8b79cd81d39b1e9897b4eab", "text": "Strip all color codes from a string . Returns empty string for falsey inputs .", "title": "", "metadata": ""}
{"_id": "f854de2d364321c1efebc82050f10d59", "text": "Custom type for managing dates in the command - line .", "title": "", "metadata": ""}
{"_id": "ece3acbc02868b96a6473a0a4756e5f8", "text": "Check whether one of the items in the list has multiple lines .", "title": "", "metadata": ""}
{"_id": "a13cc93a8752accfde187a43ee1a3319", "text": "Builds a comment .", "title": "", "metadata": ""}
{"_id": "ac98fbb4607ab15631021acd2d83f4bc", "text": "Fill missing values in pandas objects and numpy arrays .", "title": "", "metadata": ""}
{"_id": "2e68ab92d47742c5ced2cf103bb24887", "text": "Show a basic reference about the GUI Console .", "title": "", "metadata": ""}
{"_id": "c92c4baba6625f5b35c451abdd092daa", "text": "Return unix SECOND timestamp of num mondays ago", "title": "", "metadata": ""}
{"_id": "830893fb65bee2e6c4313ea7f580d593", "text": "Fix common typos in given URL like forgotten colon .", "title": "", "metadata": ""}
{"_id": "b1dfdf1def40a889bdfb0d45cbea5e4f", "text": "Reformat a date string to standard format .", "title": "", "metadata": ""}
{"_id": "f1c31b5f0672fe934d8b748ab10d9075", "text": "Reads a Python object stored in a specified YAML file .", "title": "", "metadata": ""}
{"_id": "38a91f61fd08d5b3d699194c0fe8b2db", "text": "Check if this database is in a transactional context .", "title": "", "metadata": ""}
{"_id": "7bb9ab8a40db34c2b889d5437acc4b40", "text": "Override Qt method", "title": "", "metadata": ""}
{"_id": "c0c23ca8bd06ea5db74a64c15541e973", "text": "Compute entropy on the string", "title": "", "metadata": ""}
{"_id": "a6cdd4b18095b5c66f1887ef1d36f793", "text": "Returns whether a path names an existing directory we can list and read files from .", "title": "", "metadata": ""}
{"_id": "f529f932b09f24480b87b08c3bb28163", "text": "Finds an if expression as a statement", "title": "", "metadata": ""}
{"_id": "ec746781538100c10dbf8dd9e24064dc", "text": "given a bytes object should return a base python data structure that represents the object .", "title": "", "metadata": ""}
{"_id": "95e0fbe7d86d85e765b1d9423ce33bc0", "text": "Mark a given source line as executed count times .", "title": "", "metadata": ""}
{"_id": "d4e8e64f716c26f70b434e8ca2fee282", "text": ": deprecated : use self . statement to execute properly - formatted sql statements", "title": "", "metadata": ""}
{"_id": "c43e67f3d7ccff7132a2d7fcd6a2a8e4", "text": "Combine the outer and inner keys of nested dictionaries into a single ordering .", "title": "", "metadata": ""}
{"_id": "245c8f65306b8cbc245accc1790d53be", "text": "Pretty printing for numpy matrix X", "title": "", "metadata": ""}
{"_id": "fc09c65d85ad07d14216c8a94325aa24", "text": "Returns the scalar product of this vector with the given other vector .", "title": "", "metadata": ""}
{"_id": "147ffe0a03d5bced4927060eb174e390", "text": "Will test whether the ACS service is up and alive .", "title": "", "metadata": ""}
{"_id": "c33c41cf58ed60b3cc91363d25e6833e", "text": ": return : list (( option value ) ... ) pairs of all items in the given section", "title": "", "metadata": ""}
{"_id": "90dc60a1b7a2d3cb014769425acde385", "text": "Creates a Python object from a XML file", "title": "", "metadata": ""}
{"_id": "8a4a3c374aab0aff7cc10de6c50ee4b9", "text": "help to direct to the correct interface interacting with DB by class name only", "title": "", "metadata": ""}
{"_id": "94a2a3749eb693379fa2a02f573c5264", "text": "Load and pre - process the images specified with absolute paths .", "title": "", "metadata": ""}
{"_id": "884e3dc1ce0571facb1c056789d57888", "text": "Returns method or function arguments .", "title": "", "metadata": ""}
{"_id": "5a2c0767748b5cb969233bd72f4e0112", "text": "Returns the estimated standard error of the mean ( sx - bar ) of the values in the passed list . sem = stdev / sqrt ( n )", "title": "", "metadata": ""}
{"_id": "dad3e46e9c760d187eba7da6553c7349", "text": "Calculate the margin in pixels above the plot area setting border_top .", "title": "", "metadata": ""}
{"_id": "11eae32e8f7b9688d8105253a8105d7c", "text": "Saves all relevant data to . h5 file ; so state can be restored .", "title": "", "metadata": ""}
{"_id": "64aaf0396354e4152b1736b8cf92b775", "text": "Sets limits for this config value", "title": "", "metadata": ""}
{"_id": "3855fdd332af67a63b8fe5365a220560", "text": "Returns TRUE if any argument is TRUE", "title": "", "metadata": ""}
{"_id": "8e1828f48029a2e6dcfbdd300bbc350a", "text": "Convert a python string to c array .", "title": "", "metadata": ""}
{"_id": "c39c0158c04c77f4d7deeecb82f31386", "text": "Process command line arguments and walk inputs .", "title": "", "metadata": ""}
{"_id": "dfa950f682810b5976d578c25b252b8e", "text": "Method to validate if the value is valid for exact match type evaluation .", "title": "", "metadata": ""}
{"_id": "7d33c082a127a9fb2ff0c60109da19c0", "text": "Given a list of 2 - tuples ( find repl ) this function performs all replacements on the input and returns the result .", "title": "", "metadata": ""}
{"_id": "dbebfb434b50464a29e3623eb759a1f2", "text": "dictionary of conversion", "title": "", "metadata": ""}
{"_id": "99f70e14b884d3586c919290fa2d79f7", "text": "returns the rows columns of terminal", "title": "", "metadata": ""}
{"_id": "af2573af5bdbe25da704360985f6f12e", "text": "Ask a yes / no question interactively .", "title": "", "metadata": ""}
{"_id": "2318718bb430b715af63324fca2baff9", "text": "Return standard deviation .", "title": "", "metadata": ""}
{"_id": "a53746acddc03de8c51f92815f408560", "text": "Small transformer model with small batch size for fast step times .", "title": "", "metadata": ""}
{"_id": "65cfd0c53e8235497484e70c615b6b10", "text": "Given a field or enum value node get deprecation reason as string .", "title": "", "metadata": ""}
{"_id": "e3d10d1aafa7cbd8089486d65b6e530b", "text": "Does a simple validation of an email by matching it to a regexps", "title": "", "metadata": ""}
{"_id": "d2d34c3d8dd013ae65303dc6fdbee2c4", "text": "r Checks if l is a numpy array of floats ( any dimension", "title": "", "metadata": ""}
{"_id": "0aa065a4d0cff318ed867b8e924f6c51", "text": "Given a task waits for it until it finishes : param task : Task : return :", "title": "", "metadata": ""}
{"_id": "d63b54afd0bd073784de1a04798443f0", "text": "Checks if exception was raised because of too many executed requests . ( This is a temporal solution and will be changed in later package versions . )", "title": "", "metadata": ""}
{"_id": "d5355c317a1230bb535d86cfe1c901e1", "text": "Wait for a proc to shut down then terminate or kill it after timeout .", "title": "", "metadata": ""}
{"_id": "5643945a771f471f60742129092df403", "text": "Perform auth request for token .", "title": "", "metadata": ""}
{"_id": "dd518c3ca5d7d5a7d8751ed157813104", "text": "Write to given samples to a wav file . The samples are expected to be floating point numbers in the range of - 1 . 0 to 1 . 0 .", "title": "", "metadata": ""}
{"_id": "4738091653b7dd2d9a383e8c4199a3b0", "text": "Check if filename has changed since the last check . If this is the first check assume the file is changed .", "title": "", "metadata": ""}
{"_id": "140b5774f80a4188a655f5794227cab1", "text": "Batches a list into a list of lists with sub - lists sized by a specified batch size .", "title": "", "metadata": ""}
{"_id": "05d715a1280aadef938cad86665baf32", "text": "Remove all nodes and edges from the graph .", "title": "", "metadata": ""}
{"_id": "2a6e4c0adadccae5c1f28b85f9564ee8", "text": "Return the smallest index of the row ( s ) with this column equal to value .", "title": "", "metadata": ""}
{"_id": "bf94570f9f93648d8857344739006dbc", "text": "Utility function which converts lists to tuples .", "title": "", "metadata": ""}
{"_id": "93f1052a74f55aea921ec4a48ecdfba1", "text": "Returns files matched by all extensions in the extensions list", "title": "", "metadata": ""}
{"_id": "187663cc66d19359844d90f9dfc1db63", "text": "The Euclidean distance between two vectors .", "title": "", "metadata": ""}
{"_id": "ef2fed64f1fabfbfc14fadcbd70b7af2", "text": "Returns the adjacency matrix of a bipartite graph whose biadjacency matrix is A .", "title": "", "metadata": ""}
{"_id": "d18d2830055c523696de1ef268ef1408", "text": "Retrieves a tuple with the x y coordinates of the upper right point of the ellipse . Requires the radius and the coordinates to be numbers", "title": "", "metadata": ""}
{"_id": "ddc44f20834fdddbee17612b2aaad103", "text": "Checks if key exists in datastore . True if yes False if no .", "title": "", "metadata": ""}
{"_id": "9967a68747b17a6102c196d9bded3ac4", "text": "Convert input 3 - vector in axis - angle representation to unit quaternion", "title": "", "metadata": ""}
{"_id": "4753500466fdfdae6a13ad272ce5819a", "text": "Translates window screen coordinates to client coordinates .", "title": "", "metadata": ""}
{"_id": "97b5000d613f132d5686323d744a4dbb", "text": "Merge this range object with another ( ranges need not overlap or abut ) .", "title": "", "metadata": ""}
{"_id": "145c9b439020592fb547106124428a44", "text": "The distance between two skip - connections .", "title": "", "metadata": ""}
{"_id": "17765441d3b677cb8ed853e54bacf473", "text": "For list values returns the index location of element x . If x does not exist will raise an error .", "title": "", "metadata": ""}
{"_id": "165bca255df7116ca1e3697b2b29c399", "text": "MIME type of the asset .", "title": "", "metadata": ""}
{"_id": "44dce9c99ead1b4947259624b7c69fe1", "text": "Optimized function for calculating the distance between each pair of points in positions1 and positions2 .", "title": "", "metadata": ""}
{"_id": "f842c542aa580a70d0c8fffc290b7073", "text": "Return a list of indexes of substr . If substr not found list is empty .", "title": "", "metadata": ""}
{"_id": "b62aa391be5e3af8ce502ba15c3f2011", "text": "Closes the websocket connection .", "title": "", "metadata": ""}
{"_id": "8e674040f98fab28fc7eb44e6b6f260a", "text": "Remove any duplicate entries .", "title": "", "metadata": ""}
{"_id": "e9fb792766869dd758bc0079bc9aea60", "text": "Serialize a sequence of Python objects into a YAML stream . Produce only basic YAML tags . If stream is None return the produced string instead .", "title": "", "metadata": ""}
{"_id": "e166d88a373a1b69cc582c085360ec9e", "text": "return a normalized version of abmn", "title": "", "metadata": ""}
{"_id": "2e0b07066a0169fc9046fdd4330053f8", "text": "Returns a DataFrame with the required format for a surface ( sine wave ) plot", "title": "", "metadata": ""}
{"_id": "eec35f7c62fefb4463191630e98a5e24", "text": "Description : Returns the first index of the array ( vector ) x containing the value i . Parameters : x : one - dimensional array i : search value", "title": "", "metadata": ""}
{"_id": "e18541cc1fea5e8cefe07245a6815516", "text": "Guess extraction method given file name ( or path ) .", "title": "", "metadata": ""}
{"_id": "a3d5e87b5d406b984e80a056bb9ea83d", "text": "Join helper", "title": "", "metadata": ""}
{"_id": "bef5b075c7760893bf705a45e51386ba", "text": "Remove a node from this network .", "title": "", "metadata": ""}
{"_id": "7a88201935f705d884b47629328bdcca", "text": "Yield code with useless pass lines removed .", "title": "", "metadata": ""}
{"_id": "2141de3601029fcc69b72c9b2c7caed7", "text": "Converts backslashes in path patterns to forward slashes .", "title": "", "metadata": ""}
{"_id": "a41713c54346f5b0e3ee92aad0d2ff63", "text": "Reads and iterates through each image file in the given directory", "title": "", "metadata": ""}
{"_id": "ebadc8a22bc750b397ada5e1faa65dd8", "text": "Stream stdout and stderr from the task container to this process s stdout and stderr respectively .", "title": "", "metadata": ""}
{"_id": "8ab9a7b7e0822cd0c3257160953a2730", "text": "New record with renamed keys including keys only found in key_map .", "title": "", "metadata": ""}
{"_id": "7cbb87daa64ebf8b5895d6582bdc5776", "text": "http : // stackoverflow . com / questions / 5098580 / implementing - argmax - in - python", "title": "", "metadata": ""}
{"_id": "a5840c53b4f57e06a554ba3ad7ef4619", "text": "Returns true if all of the elements in the list are equal .", "title": "", "metadata": ""}
{"_id": "61522a6ab0c3d51ae76ce56239529097", "text": "Return the encoding type .", "title": "", "metadata": ""}
{"_id": "950df5dfb0c073917bc611eb4a782703", "text": "Returns HTML from MediaWiki markup", "title": "", "metadata": ""}
{"_id": "cc7dbbba891b05268e42c6861218ce90", "text": "Directory where to store output", "title": "", "metadata": ""}
{"_id": "d7de310729663c520a8eb33f280a185a", "text": "Enforce HTML escaping . This will probably double escape variables .", "title": "", "metadata": ""}
{"_id": "16aa4fe6a810eb506c6e08224b2bef96", "text": "Find a reasonable editor to use by default for the system that the cmd2 application is running on .", "title": "", "metadata": ""}
{"_id": "9f7c42b0d093c29e1c96930250c8675a", "text": "Try to identify whether this is an ActivityPub request .", "title": "", "metadata": ""}
{"_id": "ee4ee4d0c3bc97307b4ab92e6a5f4912", "text": "Delete an object from the redis table", "title": "", "metadata": ""}
{"_id": "cef58ab67165f0835f6d9147d0816247", "text": "Dump string .", "title": "", "metadata": ""}
{"_id": "c1dd4693ac8645eff0ee41e6d744d554", "text": "Get the attributes of an object using dir .", "title": "", "metadata": ""}
{"_id": "a0380813236fddb80b560d91827cf75c", "text": "Convert None values to 0 so the data works with Matplotlib : param ts : : return : a list with 0s where Nones existed", "title": "", "metadata": ""}
{"_id": "96daf431ae6b6127265ca03f3a1e6346", "text": "Acquire a lock file on linux or osx .", "title": "", "metadata": ""}
{"_id": "f1d8ad8e2870cddb53ff644bd022011f", "text": "Calculate the short - time Fourier transform magnitude .", "title": "", "metadata": ""}
{"_id": "8227cc74e80774c5db0b3580c5033b04", "text": "Parse a line of text into an MLlib LabeledPoint object .", "title": "", "metadata": ""}
{"_id": "907d0a4acbc48328847eeb2c7c2f55c5", "text": "Get device state via HTTP GET .", "title": "", "metadata": ""}
{"_id": "fe03f7d7cc5faff7443ff4fbbbbcbff5", "text": "Create a pie chart that depicts the distribution of the allocated memory for a given snapshot . The chart is saved to filename .", "title": "", "metadata": ""}
{"_id": "ba0db830071cf54b4059ea3bbc85f254", "text": "Make dictionary version of enumerated class .", "title": "", "metadata": ""}
{"_id": "b3611bb5db4fad413da8744428c93578", "text": "Read the configuration file and return a section .", "title": "", "metadata": ""}
{"_id": "48dc2c927531a545c315eb3e5b6301f3", "text": "Load an object from disk at explicit path", "title": "", "metadata": ""}
{"_id": "09963952610b03a51c9ab73b986261fa", "text": "Validate the configuration file .", "title": "", "metadata": ""}
{"_id": "ca8090ba3d65af99a9d923c2eaa2f7f9", "text": "Add params to doc string", "title": "", "metadata": ""}
{"_id": "79b80d3f026a3e4736ded2b8555ba15f", "text": "Return a list of branches in the current repo .", "title": "", "metadata": ""}
{"_id": "8d406d9f2c6d84fe28f96fd19a81c86e", "text": "Iterable - first replacement of Python s built - in map () function .", "title": "", "metadata": ""}
{"_id": "25df5000b04b41a94677a3cd9f949471", "text": "Select rows where the given field evaluates True .", "title": "", "metadata": ""}
{"_id": "b42e9e61c29e8be6466bd9c9c3f68cfd", "text": "Helper to draw lines connecting a set of nodes that are scaled for the Screen .", "title": "", "metadata": ""}
{"_id": "abce98910272e7345a40bfc842b9e4d6", "text": "Removes tags from objects", "title": "", "metadata": ""}
{"_id": "ffc44b0f6adb90e96300f85773d4be1b", "text": "convert numpy s datetime64 to datetime", "title": "", "metadata": ""}
{"_id": "ea0d8f6894eb12f2b7714ea53a068732", "text": "Return a reversed iterable over the items in the dictionary . Items are iterated over in their reverse sort order .", "title": "", "metadata": ""}
{"_id": "7729a69419c393f03a5e3585f58c0f52", "text": "Copy given string into system clipboard .", "title": "", "metadata": ""}
{"_id": "61cd538631315ba01d8108ae2cebd4f9", "text": "Registers default factories for logging standard package .", "title": "", "metadata": ""}
{"_id": "dd5622ab79a31bc37f04cbd609b9ef39", "text": "Convert things on the way from Python to the database .", "title": "", "metadata": ""}
{"_id": "280505d8fecea5143468d09a99a87beb", "text": "Convert the given list of parameters to a JSON object .", "title": "", "metadata": ""}
{"_id": "f91a3c1257aca89a6b4d2a5d9f936889", "text": "checks if you are on a 64 bit platform", "title": "", "metadata": ""}
{"_id": "89e5933aa4e237ff5a33705971d7051d", "text": "Convert from canvas to screen coordinates", "title": "", "metadata": ""}
{"_id": "78690914868028f4a7e80fefdc36ca4f", "text": "If the requirement is frozen to a github url check for new commits .", "title": "", "metadata": ""}
{"_id": "07c9ceeba67c4c835f7900b04a8de49e", "text": "Print the values of all this object s Parameters .", "title": "", "metadata": ""}
{"_id": "1389caefa0a0472a785abdf677099b02", "text": "Accepts a NumberGenerator operand an operator and optional arguments to be provided to the operator when calling it on the operand .", "title": "", "metadata": ""}
{"_id": "3d5f34935e2971d5d23ff9c72561d3e2", "text": "Returns a list produced by applying : func : multiple_replace to every string in stringlist .", "title": "", "metadata": ""}
{"_id": "ec4c3e633f53080136cf2e7562bd51ad", "text": "Create NumPy array from a pointer to some memory .", "title": "", "metadata": ""}
{"_id": "38281ae8acced7206bd4a43579e2fb0a", "text": "Calculate standard deviation weighted by errors", "title": "", "metadata": ""}
{"_id": "eecfa93f05a2dbce060de8735ffd42de", "text": "Returns the sql query", "title": "", "metadata": ""}
{"_id": "2a147e28ddfedd8baf9347861ca9d8f1", "text": "Get terminal width", "title": "", "metadata": ""}
{"_id": "9d982831c7154b82730a03e8150c1bae", "text": "Call it on your own endpoint s to update the back history navigation . If you bypass it the next submit or back will go over it .", "title": "", "metadata": ""}
{"_id": "9f5dbfbf61ad8d84c93c3be4fe6daabc", "text": "Create 2D rotation matrix", "title": "", "metadata": ""}
{"_id": "2887784351edc73bc3ffa6565033736f", "text": "Converts from a Minigo coordinate to a GTP coordinate .", "title": "", "metadata": ""}
{"_id": "5a735c7d1acbfc058feb88c6939e7438", "text": "stupid windows . converts the backslash to forwardslash for consistency", "title": "", "metadata": ""}
{"_id": "2e2307722b3cb849f462ee40f25d9029", "text": "Return a vector orthogonal to the given triangle", "title": "", "metadata": ""}
{"_id": "cd368217f65a42149ac42f1cde1628e1", "text": "Sets a user s password in the keyring storage", "title": "", "metadata": ""}
{"_id": "f23cf2645f0a1aaffa14f81c3f4fc703", "text": "Helper to restore button state .", "title": "", "metadata": ""}
{"_id": "841bd8ffe64a36fb935892bb0bfbe3ac", "text": "Handle an IOError exception .", "title": "", "metadata": ""}
{"_id": "f37158bf04747eed83dd4ef6c6c7f36d", "text": "Squash self . out into string .", "title": "", "metadata": ""}
{"_id": "c7c450e86529cb14888546e2ad48d72c", "text": "Return ( first channel data sample frequency sample width ) from a . wav file .", "title": "", "metadata": ""}
{"_id": "512f474c554067cc28472e7fc00b35c7", "text": "Performs a join using the union join function .", "title": "", "metadata": ""}
{"_id": "9cb15e8058fc640fbfbc974e9c0c05b7", "text": "Changes a column name in a DataFrame Parameters : df - DataFrame DataFrame to operate on col_name - string Name of column to change new_col_name - string New name of column", "title": "", "metadata": ""}
{"_id": "52edf652760a12f35425c98db531dcf5", "text": "Coroutine called by MapAsync . It s wrapping the call of run_in_executor to run the synchronous function as thread", "title": "", "metadata": ""}
{"_id": "7ce6cee7c3a9d146d5e710d98f08908e", "text": "Decorator which adds correct MIME type for python source to the decorated bottle API function .", "title": "", "metadata": ""}
{"_id": "bfb1d4284316d1f8ec32eeb1f862fd34", "text": "Print at most limit elements of list .", "title": "", "metadata": ""}
{"_id": "6ef5ca558a904c6898583a164106666f", "text": "Get the local ip of this device", "title": "", "metadata": ""}
{"_id": "7b352afd78660c2ef507be60d87e5db9", "text": "Remove a file from an AWS S3 bucket .", "title": "", "metadata": ""}
{"_id": "3f6aab736c5767d4acc25ffb0fc8c9a1", "text": "Wrap a function as a method .", "title": "", "metadata": ""}
{"_id": "650d9ad7134198ca0c25993daf413b87", "text": "Returns the offset of the current cursor position in rl_line_buffer", "title": "", "metadata": ""}
{"_id": "8bb47a694a0a5b909b01d56f1deec2a1", "text": "Returns ( width height ) for the given variable", "title": "", "metadata": ""}
{"_id": "582975851fb20ea679cda6712dd67d56", "text": "Return line ending .", "title": "", "metadata": ""}
{"_id": "0144a403cfcb26a858654977b3129315", "text": "htmlify string", "title": "", "metadata": ""}
{"_id": "40aea524cc0d6b3a1aaf629db6752e1f", "text": "Allocate device memory .", "title": "", "metadata": ""}
{"_id": "5dfadaedbd650c1ca0b1055fc77e2f8a", "text": "Upload a directory on the remote host .", "title": "", "metadata": ""}
{"_id": "6b5a0e52793a8894a43285f7feb2915c", "text": "Guess the input type of the parameter based off the default value if unknown use text", "title": "", "metadata": ""}
{"_id": "acc45b6093a8ea8c6c9dab25bd92411f", "text": "Return start and end date of the current week .", "title": "", "metadata": ""}
{"_id": "324cdf057b0f7954d2cbe22fb6559dba", "text": "Calculates shannon entropy in bits .", "title": "", "metadata": ""}
{"_id": "a0e014782061b88670ee64286e8f63b3", "text": "Tiny hparams suitable for CIFAR / etc .", "title": "", "metadata": ""}
{"_id": "256acfdfcd0b8f82eec5b4be9db031c7", "text": "A method used to round a number in the way that UsefulUtils rounds .", "title": "", "metadata": ""}
{"_id": "b7ac637b3176f2d3828403370d30d73a", "text": "Appends the prefix to the topic before sendingf", "title": "", "metadata": ""}
{"_id": "4ee6067e9bc59a8b76173e7ee7f141b7", "text": "Find the device id", "title": "", "metadata": ""}
{"_id": "bb073e361676efc151f3ec897d3d3995", "text": "Pick an unused port . There is a slight chance that this wont work .", "title": "", "metadata": ""}
{"_id": "dcf2c8910652c638a5dba1217563bf5e", "text": "Convert a string from snake case to camel case with the first letter capitalized . For example some_var would become SomeVar .", "title": "", "metadata": ""}
{"_id": "e62aee7e8c438994d57836d4d7edf3e9", "text": "Convert a number of second into a time", "title": "", "metadata": ""}
{"_id": "fa11272fcec77cdbc1eb5fb008509fd1", "text": "Given a list of coords for 3 points Compute the area of this triangle .", "title": "", "metadata": ""}
{"_id": "0e6e085ba63e5c802288bf21f2a022a8", "text": "Se asegura de que un directorio exista .", "title": "", "metadata": ""}
{"_id": "f9b0d5e1f217c55963c5591e525387d0", "text": "Check for app updates and print / log them .", "title": "", "metadata": ""}
{"_id": "02e92b6fb4b6bee489863f540f48a088", "text": "set nan and inf rows from x to zero", "title": "", "metadata": ""}
{"_id": "8c3b14216bf18012e0f237691f8b3bfa", "text": "Get the language parameter from the current request .", "title": "", "metadata": ""}
{"_id": "7d538a55cd8e361a87c88b9701b22a1d", "text": "Generate a single list from an asynchronous sequence .", "title": "", "metadata": ""}
{"_id": "9219fb21404d679773a990014c27f29d", "text": "Return True if variable is a set", "title": "", "metadata": ""}
{"_id": "9baee0cd3146e4d01ead83bc729484b9", "text": "Convert CamelCase to snake_case .", "title": "", "metadata": ""}
{"_id": "7ef1953bf93b89e554be8adfb74e6c48", "text": "Return the list of properties specified for a model in an index .", "title": "", "metadata": ""}
{"_id": "efd82475e29e12dfb2da098ac6418a52", "text": "Get user input from the command line via raw_input / input .", "title": "", "metadata": ""}
{"_id": "5528bb3da5dafe1c173018a1edcc2682", "text": "Unified rounding in all python versions .", "title": "", "metadata": ""}
{"_id": "3ae29df8b435254f7d357af92644894b", "text": "Converts an RGB image to grayscale using matlab s algorithm .", "title": "", "metadata": ""}
{"_id": "ee57450fd249a3020ffdb253b8169c31", "text": "Proximal operator to project onto zero", "title": "", "metadata": ""}
{"_id": "7c82306b047e59a5a5fb6d6556056298", "text": ": param list_of_points : : return : list_of_points with None s removed", "title": "", "metadata": ""}
{"_id": "c9b7020bd11bfb16f214beb20ee3531a", "text": "Checks whether a variable is a numpy float array .", "title": "", "metadata": ""}
{"_id": "1b3abc4b633117c2db63c82576cd56a7", "text": "Get image as a buffer in ( format ) . Format should be jpeg png etc .", "title": "", "metadata": ""}
{"_id": "929362273d8dd0969351b9364ac927f8", "text": "Simple wrapper to kubectl .", "title": "", "metadata": ""}
{"_id": "bb570f8d51c415122e526c8750e8ce33", "text": "Log the exc_info tuple in the server log .", "title": "", "metadata": ""}
{"_id": "27aad60f30b931042fd6fce5bc8c4a70", "text": "merge two Mapping objects keeping the type of the first mapping", "title": "", "metadata": ""}
{"_id": "f1982da52e5ed181a1511523ab66c2ce", "text": "Find a model reference by its table name", "title": "", "metadata": ""}
{"_id": "6f660197b0b588bbdb81494ab162dca5", "text": "Convert audio data into a frequency - amplitude table using fast fourier transformation .", "title": "", "metadata": ""}
{"_id": "58c0db22a4d0090f24a0f025ce996f17", "text": "Return ( first column model index last column model index ) tuple for a configTreeItem", "title": "", "metadata": ""}
{"_id": "2c5f4f23f2507ba9aa92cdddfdb64c16", "text": "manually set the default figure size of plots :: Arguments :: x ( float ) : x - axis size y ( float ) : y - axis size aspect ( float ) : aspect ratio scalar", "title": "", "metadata": ""}
{"_id": "9efc81c3a5efd99973cb198e9511ae03", "text": "Output data in excel - compatible tab - delimited format", "title": "", "metadata": ""}
{"_id": "01774acca121f8af36249194c5462b6a", "text": "Check to see if the specified object is colliding with any of the objects currently in the Collision Manager Returns the first object we are colliding with if there was a collision and None if no collisions was found", "title": "", "metadata": ""}
{"_id": "54f6964f77b7946df515aaccd8945223", "text": "Convenience function to replace all occurrences of a with b under the given field . See also : func : convert .", "title": "", "metadata": ""}
{"_id": "934d3d69da42a029e06056b980275fe6", "text": "Equivalent Noise Bandwidth in bins ( Processing Gain reciprocal ) .", "title": "", "metadata": ""}
{"_id": "6c1690e50688f6dc3ab1862f74ce0e3c", "text": "Executes self . function to convert LazyString instance to a real str .", "title": "", "metadata": ""}
{"_id": "e92a5f1c8a8eed5b95327cd324c93809", "text": "Configure session for particular device", "title": "", "metadata": ""}
{"_id": "a6b28d89faa7d1bb25c84cd87dd70058", "text": "Check if a user exists", "title": "", "metadata": ""}
{"_id": "d47397edc18b18787552f91ddbb4fe37", "text": "Determine whether we re in an interactive shell . Sets interactivity off if appropriate . cf http : // stackoverflow . com / questions / 24861351 / how - to - detect - if - python - script - is - being - run - as - a - background - process", "title": "", "metadata": ""}
{"_id": "6b8e9b220ffb8104496ba7d23e704c5f", "text": "Returns a sha1 of the given string", "title": "", "metadata": ""}
{"_id": "a5a4f5a99bbb4e2b64f6e44573abd745", "text": "Reads complete file contents .", "title": "", "metadata": ""}
{"_id": "9894e6fd8db5669cab81d3209f807464", "text": "Message printer .", "title": "", "metadata": ""}
{"_id": "582eea67b2d01c1786cd9ba2aa844d92", "text": "Run a function in Matlab and return the result .", "title": "", "metadata": ""}
{"_id": "9e8dc2c7d9041fc740d83cc3d35b7529", "text": "Return the dot product of the given vectors .", "title": "", "metadata": ""}
{"_id": "f5eae12e8b591b777ed8e053ffb20959", "text": "get pull request info by number", "title": "", "metadata": ""}
{"_id": "da71a34bb33e3742aacefdd7ebc8ab19", "text": "Deserializes string to date .", "title": "", "metadata": ""}
{"_id": "9551742292e2e11b6a3555b0c99f1e15", "text": "Print a colored string to the target handle .", "title": "", "metadata": ""}
{"_id": "31eba2c64985044f318a12bfb6d314eb", "text": "Send a terminate request and then disconnect from the serial device .", "title": "", "metadata": ""}
{"_id": "c87b582c053368bf1b75b5727a888746", "text": "\\ Asserts that two iterables contain the same values .", "title": "", "metadata": ""}
{"_id": "096b5e38aae4d2268a4261aeba79f03c", "text": "Split the given comma separated value to multiple integer values .", "title": "", "metadata": ""}
{"_id": "63fb9284d23ffe6e6bf9b126915eecc7", "text": "Given a key prefix return whether this prefix is the prefix of an existing key in the trie .", "title": "", "metadata": ""}
{"_id": "88822129ffd0d3659701b26f778b623d", "text": "compose a list of functions", "title": "", "metadata": ""}
{"_id": "f49138f732d274b7a9f77c4a9e387bb5", "text": "Make sympy symbols q0 q1 ... Args : n ( int ) m ( int optional ) : If specified both n and m returns [ qn q ( n + 1 ) ... qm ] Only n is specified returns [ q0 q1 ... qn ] .", "title": "", "metadata": ""}
{"_id": "f88716915c041a983af9917bde1af96b", "text": "check if element is present by css", "title": "", "metadata": ""}
{"_id": "8f4243d46edb3c83d0d9bb5ba02d07d8", "text": "Remove duplicates from a list while keeping order .", "title": "", "metadata": ""}
{"_id": "5eefffe66e536263a394e35f1b191a7d", "text": "see doc in Term class", "title": "", "metadata": ""}
{"_id": "b0717dfc74fff09ac02f0f629747447f", "text": "Decrease zoom factor and redraw TimeLine", "title": "", "metadata": ""}
{"_id": "00db8e3d9debdb651014f710235dcf13", "text": "Converts a native Python dictionary to a raw DynamoDB item .", "title": "", "metadata": ""}
{"_id": "8120fa6aa56d25121b3383fa000205b1", "text": "Check whether this letter contains Jongsung", "title": "", "metadata": ""}
{"_id": "751e76a92a3ab83eb11883d19f635be2", "text": "Like netCDF4 . chartostring but faster and more flexible .", "title": "", "metadata": ""}
{"_id": "d832c15e0bbb4cc1316134a03a44b15c", "text": "Return the default local index file from the download cache", "title": "", "metadata": ""}
{"_id": "13cee163cbf7948c5460452e70baf059", "text": "Given a JSON - encoded message build an object .", "title": "", "metadata": ""}
{"_id": "eef538d7f9d3dc21d9518de05cc525d4", "text": "Read the full contents of the given stream into memory .", "title": "", "metadata": ""}
{"_id": "dde7978befa470060b2f493fde040a11", "text": "Return a copy of seq without duplicates .", "title": "", "metadata": ""}
{"_id": "428778679b5547be159cde04a88fc0d0", "text": "Scattering form - factor amplitude of a sphere normalized to F ( q = 0 ) = V", "title": "", "metadata": ""}
{"_id": "03ebeaa60d0da87b9fce6489bb36e392", "text": "Parameters ---------- sub : str sup : str", "title": "", "metadata": ""}
{"_id": "79a4145baeea3b7fd7557dc0541cbb61", "text": "Remove sequence duplicates ( based on sequence ) from FASTA .", "title": "", "metadata": ""}
{"_id": "1818b671ea7d6feb3f196b4589092d59", "text": "Add a queue log handler to the global logger .", "title": "", "metadata": ""}
{"_id": "1c3d66dc1d857512dafa4aa5e37adcac", "text": "Read a PNG file and decode it into flat row flat pixel format .", "title": "", "metadata": ""}
{"_id": "bb81a6890aeb4b783d29c43d9390ca6b", "text": "Resolve all html entities to their corresponding unicode character", "title": "", "metadata": ""}
{"_id": "2e69ef8fddbd4b8ba31c65258358b47e", "text": "Return a tuple of axis dimensions", "title": "", "metadata": ""}
{"_id": "be0287518d0b560665fa420b473c74b8", "text": "Prompts the user for yes or no .", "title": "", "metadata": ""}
{"_id": "2bf1053363df1c9a8db0c5396e5b1c51", "text": "Removes the venv by name", "title": "", "metadata": ""}
{"_id": "7515390a774acc52165e02ce5b8c5bb3", "text": "Display the first and last n elements of a DataFrame .", "title": "", "metadata": ""}
{"_id": "4fe813e3625147eec1f577ff304d1136", "text": "Ajoute la target au plot", "title": "", "metadata": ""}
{"_id": "8c6f8bca70c5efd58eacb43c8150a2bd", "text": "Pyqt specific key press callback function . Translates and forwards events to : py : func : keyboard_event .", "title": "", "metadata": ""}
{"_id": "13ebc243416adc9d9a3a28a5b9db531e", "text": "Generator that yields lines from standard input .", "title": "", "metadata": ""}
{"_id": "9de1ae0f558b733098c57dda5a8649a0", "text": "Instantiate the object from a protocol buffer .", "title": "", "metadata": ""}
{"_id": "7ddad6ac2a674a86392a0047afe5c10b", "text": "Marker for a token", "title": "", "metadata": ""}
{"_id": "9cf743ed771eeba538e3c04c22b2034f", "text": "Return ( and memoize ) a database session", "title": "", "metadata": ""}
{"_id": "ddde5a504327be78a7748a38a6cd31cc", "text": "Sort the updatable objects according to ascending order", "title": "", "metadata": ""}
{"_id": "6274aec181886dada9f40978f379df3d", "text": "Get the lines for a file from the cache . Update the cache if it doesn t contain an entry for this file already .", "title": "", "metadata": ""}
{"_id": "be4a23374c329e16624b073a86555d3b", "text": "Return an array of K - Means cluster classes for an array of shapely . geometry . Point objects .", "title": "", "metadata": ""}
{"_id": "4298636f4124439c4f53214e73d244ed", "text": "Load a javascript file and minify .", "title": "", "metadata": ""}
{"_id": "a89a2485d4ca8265cbd2133df42917c7", "text": "Remove all elements of another set from this RangeSet .", "title": "", "metadata": ""}
{"_id": "c603fa178fb2ae60d6d57e541ce63e0d", "text": "Check if tag is an element we should break on .", "title": "", "metadata": ""}
{"_id": "a092d5ff8d3edb1fd0ffd4a54971aae3", "text": "Normalize a field to a ( min max ) exposure range default is ( 0 255 ) . ( min max ) exposure values . Invert the image if requested .", "title": "", "metadata": ""}
{"_id": "162ce38e5c10468200327f894b647207", "text": "Get bin edges from a ROOT hist axis .", "title": "", "metadata": ""}
{"_id": "b1f9ed43fdaf86d9a3b55cfa73a444e6", "text": "Display kwargs .", "title": "", "metadata": ""}
{"_id": "2e76bb1d387785d9c13e478be09a46d7", "text": "Initialize the state of the object", "title": "", "metadata": ""}
{"_id": "d00e8ae4d785708f0540e219a358622f", "text": "Recursive topological sort implementation .", "title": "", "metadata": ""}
{"_id": "9916fc9c1911c9a7eb0d8532446db4fc", "text": "int : current max id of objects", "title": "", "metadata": ""}
{"_id": "90c44deda5d6181b9a072ad3f1cc7d1a", "text": "Run unit tests .", "title": "", "metadata": ""}
{"_id": "5c7808afbfef48e7a197a19010734a74", "text": "Configure the logging module .", "title": "", "metadata": ""}
{"_id": "a37668cf23303e7d97c0c620b7873ad6", "text": "Takes a snake_field_name and returns a camelCaseFieldName", "title": "", "metadata": ""}
{"_id": "1f2d307cf1eac63474edadf61003385f", "text": "Sophisticated simulation of multiplication", "title": "", "metadata": ""}
{"_id": "dbf86a11889f962c2d60d1c7ff981d54", "text": "Splits iterator in chunks .", "title": "", "metadata": ""}
{"_id": "282fe2fe68555a75aec11f0d4f1ac110", "text": "Return Gaussian that truncates at the given number of std deviations .", "title": "", "metadata": ""}
{"_id": "4d5963619166441840bbe39f14976f60", "text": "Save / override the latest model after every epoch .", "title": "", "metadata": ""}
{"_id": "77988a37940e1891634ee4f22456d45c", "text": "Strip apostrophe and s from the end of a string .", "title": "", "metadata": ""}
{"_id": "b7c52ef3fef75fe4bb042db439d37399", "text": "Return imaginary part of quaternion .", "title": "", "metadata": ""}
{"_id": "936bd07d74199be728f2bacd8dee66e3", "text": "Write a modbus register .", "title": "", "metadata": ""}
{"_id": "ca7d6f6db500182c99e61761fdb0a7ea", "text": "Returns the TextFSMValue object natching the requested name .", "title": "", "metadata": ""}
{"_id": "6bf299e57766a748c4bcd5a0658bc12c", "text": "An exception is passed in and this function returns the proper string depending on the result so it is readable enough .", "title": "", "metadata": ""}
{"_id": "93f9dd2142573a3a197498fce154f883", "text": "Return widget icon", "title": "", "metadata": ""}
{"_id": "0a1ba870b41c50b23ed0dd59b6798973", "text": "Loads a floating point value from a memory address . If 2nd arg . start with * it is always treated as an indirect value .", "title": "", "metadata": ""}
{"_id": "79076023bc9b5883c3e56c0d984e8796", "text": "The url of this window", "title": "", "metadata": ""}
{"_id": "113e8fc98e8ccd45648d0cb30a961362", "text": "Return the given operation as an asyncio future .", "title": "", "metadata": ""}
{"_id": "b3968bc6d6b77fef94c5336c4f809c35", "text": "sort a list of files by filename only ignoring the directory names", "title": "", "metadata": ""}
{"_id": "f1dfd54b15d6b4b74e947fb9c0367efa", "text": "conv2d returns a 2d convolution layer with full stride .", "title": "", "metadata": ""}
{"_id": "2768f9454a27eb6e62535b2a36524f48", "text": "Return true if the socket managed by this connection is connected", "title": "", "metadata": ""}
{"_id": "67de4bcfbc1cea7f0f6e7d535c743fb1", "text": "Returns the first matching line in a list of lines .", "title": "", "metadata": ""}
{"_id": "e59167ff8fea2467397183d06d0f522b", "text": "Returns the number of bytes that the multipart / form - data encoding of params will be .", "title": "", "metadata": ""}
{"_id": "0919c385f53b1f23d5b681f517c82c24", "text": "Return lines of a file with whitespace removed", "title": "", "metadata": ""}
{"_id": "283696e77ba675a654ead1f593b7a433", "text": "copy the dict filter_keywords", "title": "", "metadata": ""}
{"_id": "6394334de2f19d4b401881076e661964", "text": "Find rightmost value less than or equal to x .", "title": "", "metadata": ""}
{"_id": "fc4fb88a08c4ad9c0022336ecf1a47e3", "text": ": type s str", "title": "", "metadata": ""}
{"_id": "51ae5657713252a95f359bfb476d484d", "text": "Convert from scientific notation using precision", "title": "", "metadata": ""}
{"_id": "3b4a1493fb0083aa4310084e00a5dc61", "text": "Initializes a rotating logger", "title": "", "metadata": ""}
{"_id": "3e46c322945477849d4d874a029f73c3", "text": "Add an additional DATETIME column with standar datetime format .", "title": "", "metadata": ""}
{"_id": "bb572fe363702cfaeee39761fedec226", "text": "Return a list of token strings from the given sentence .", "title": "", "metadata": ""}
{"_id": "4e8f3727c0b11ea3acad723e22ce8582", "text": "Reverse the broadcasting operation .", "title": "", "metadata": ""}
{"_id": "f195f5c6cb07af260f3822023be8a37c", "text": "Format text with color or other effects into ANSI escaped string .", "title": "", "metadata": ""}
{"_id": "2eece612a0dee3a3ce6d78b198684509", "text": "Returns the normalized mean square error of a and b", "title": "", "metadata": ""}
{"_id": "c9dd0ba743e31253f50051bb06190072", "text": "Deletes the line content after the cursor", "title": "", "metadata": ""}
{"_id": "07097db880ac8ab5d69d5700bffdbe41", "text": "Calls the shots based on signals", "title": "", "metadata": ""}
{"_id": "28eaa8fbc7f62196df60fb26d30ac0f7", "text": "Validate a |Subsystem| .", "title": "", "metadata": ""}
{"_id": "7651a9ae30427eb10f0caf47d49f08be", "text": "Chain & sort ranges .", "title": "", "metadata": ""}
{"_id": "1463ab89352907d39e81934efac1ebf8", "text": "Implements string formatting along with color specified in colorama . Fore", "title": "", "metadata": ""}
{"_id": "3c23681b3fe6f45171d16777a75cfe78", "text": "Returns an ExpMatrix containing all pairwise sample correlations .", "title": "", "metadata": ""}
{"_id": "fd222c085a11ac306afa47c2bfab7d32", "text": "Convert an int of form yyyymmdd to a python date object .", "title": "", "metadata": ""}
{"_id": "03769770de50c7706412965101510759", "text": "Like : meth : items but returns an iterator .", "title": "", "metadata": ""}
{"_id": "bd575858b789d0d2df0ac71879114e9b", "text": "Decorator which dynamically binds static methods to the model for later use .", "title": "", "metadata": ""}
{"_id": "653ba7ce77def5293888925eefe087a5", "text": "Replace my : attr : scopes for the duration of the with block .", "title": "", "metadata": ""}
{"_id": "f676c62cd25dfd8f0263a47fed4aab14", "text": "Download file from S3 Bucket", "title": "", "metadata": ""}
{"_id": "5d2a1a948823f541f59e956f98865a62", "text": "Creates a absolute path in the file system .", "title": "", "metadata": ""}
{"_id": "4d34526560e9b6735f9fdfdc021c1323", "text": "Uses OLS to fit the regression .", "title": "", "metadata": ""}
{"_id": "1fcaf0830c7c88b3b03d5a61188a7484", "text": "The letter of the Excel worksheet column in which the data for a series appears .", "title": "", "metadata": ""}
{"_id": "6a3d43e8a51b3fb60fdbc26ac91b83f4", "text": "Use the specified filename for streamed logging .", "title": "", "metadata": ""}
{"_id": "5943a9c7c35fc1ddb056077ea66e9d8c", "text": "Resolve which cross validation strategy is used .", "title": "", "metadata": ""}
{"_id": "899b5e124150681d3f0df2add43422bf", "text": "Check if obj is number .", "title": "", "metadata": ""}
{"_id": "21c5246f33290a5989e7492c06451260", "text": "Pad a matrix with zeros on all sides .", "title": "", "metadata": ""}
{"_id": "48713158dbe654334dbfc822b121a864", "text": "Forcibly terminates all Celery processes .", "title": "", "metadata": ""}
{"_id": "c4df47afc76d820626a9e5f63b167142", "text": "Return True if Glances is running in client mode .", "title": "", "metadata": ""}
{"_id": "dd335ad569b2e8657414cf8f4806685e", "text": "Originally used to calculate color based on module name .", "title": "", "metadata": ""}
{"_id": "50d2e89f7372e93ce179d22020756e15", "text": "Own dumb reimplementation of textwrap . wrap () .", "title": "", "metadata": ""}
{"_id": "f6bad93d411d0fa7d69dd757b436915f", "text": "log stop", "title": "", "metadata": ""}
{"_id": "a298da9de71213e77e2b38be47ac2369", "text": "Add or update styles", "title": "", "metadata": ""}
{"_id": "4e18c416b687fe905469d540dffea07a", "text": "Try to get __name__ first __class__ . __name__ second and finally if we can t get anything acceptable fallback to user a repr () call .", "title": "", "metadata": ""}
{"_id": "420a3d387daff8400d6a21a4c0f9db2f", "text": "Rebuild list_object removing duplicated and keeping order", "title": "", "metadata": ""}
{"_id": "6245dd60d13a52c233613a67cf24f1ad", "text": "Return number of empty lines at the end of the document .", "title": "", "metadata": ""}
{"_id": "b261322be20ba380f668ae0c6ebd0a7f", "text": "Load and parse a feature file .", "title": "", "metadata": ""}
{"_id": "aa4c6804b40cb7ca258cb14a11c22827", "text": "Return whether num is a power of two", "title": "", "metadata": ""}
{"_id": "295f3e1b0ba69c8259162f76fd388d84", "text": "Returns a ketama compatible list of ( position nodename ) tuples .", "title": "", "metadata": ""}
{"_id": "fcd7fa90e23a94efc40c9196f3046fbe", "text": "example matrix for width = 2", "title": "", "metadata": ""}
{"_id": "ad78639f5ceca0b2e24d1554a838987c", "text": "Wrapper on iter method callback gets an iterator result", "title": "", "metadata": ""}
{"_id": "ef07d5fdc1d56e03862a6bbf3865b9c8", "text": "Pads an input string to a given block size . : param s : string : returns : The padded string .", "title": "", "metadata": ""}
{"_id": "176f6cfc4016c38fb7ebf3b2a32da03f", "text": "Parse bytes and return a namedtuple .", "title": "", "metadata": ""}
{"_id": "6440012fe283d9127349e6e7875befc4", "text": "Delete object from parent object .", "title": "", "metadata": ""}
{"_id": "618a6bbb533bd7642f2573c99e726253", "text": "Try to convert variables into datatypes .", "title": "", "metadata": ""}
{"_id": "8c98016030e1cbe60add8c84e003e5b6", "text": "Attempt to setattr but catch AttributeErrors .", "title": "", "metadata": ""}
{"_id": "70ab7d1c9eeec4739004891224abc5ac", "text": "Determine whether two strings are equivalent .", "title": "", "metadata": ""}
{"_id": "09fd68773f8c5bd19d723b6459a98c13", "text": "Runs the unit test framework . Can be overridden to run anything . Returns True on passing and False on failure .", "title": "", "metadata": ""}
{"_id": "c9ee02bfed4d8ad8135861869d147403", "text": "Performs the vector multiplication of the elements of two vectors constructing the 3x3 matrix . : param aa : One vector of size 3 : param bb : Another vector of size 3 : return : A 3x3 matrix M composed of the products of the elements of aa and bb : M_ij = aa_i * bb_j", "title": "", "metadata": ""}
{"_id": "81ae742fc8713b19f3eb37bf483eb328", "text": "Replace any non - word characters with a dash .", "title": "", "metadata": ""}
{"_id": "034b54a5f932f81316eb362ca6c9e88a", "text": "Compute the product set of array_a and array_b and sort it .", "title": "", "metadata": ""}
{"_id": "ef864a1824ac2b592d8a33319e638773", "text": "Create a new response header replacing any previously defined headers with the same name .", "title": "", "metadata": ""}
{"_id": "4abf8c9dd1f7c7ddced07bdf5e1a24c4", "text": "Encode the given tensor to given image shape .", "title": "", "metadata": ""}
{"_id": "cd1d9ff0763e6d772b86cb1b01b36f15", "text": ": return : generator of tuples ( isLastFlag item )", "title": "", "metadata": ""}
{"_id": "b4d3c5650e44ea79a629e2e437b08ca5", "text": "Support change columns .", "title": "", "metadata": ""}
{"_id": "78c9b8384d828bcaaa233700e53d6e5f", "text": "Checks if value can be part of binary / bitwise operations .", "title": "", "metadata": ""}
{"_id": "adc41555faeab1e3a714fd955721cf9f", "text": "Returns a random integer between two values .", "title": "", "metadata": ""}
{"_id": "0a0daa86e2438629a4f62501220bdc40", "text": "Kill the browser .", "title": "", "metadata": ""}
{"_id": "b829ca034135b5fa068a9de279f9299c", "text": "Creates a map of letter use in a word .", "title": "", "metadata": ""}
{"_id": "4143824a13871e91d98040546acaf441", "text": "Return the haversine of an angle", "title": "", "metadata": ""}
{"_id": "157953520abd6b4dd73a7233d4da1a06", "text": "quick and dirty appending of query parameters to a url", "title": "", "metadata": ""}
{"_id": "3b3166f7d440574f8eef65edfd00f2aa", "text": "Return a flatten version of the nested argument", "title": "", "metadata": ""}
{"_id": "02921f222c6ab15cf08b073667b03662", "text": "Left padding with zero bytes to a given block size", "title": "", "metadata": ""}
{"_id": "78925e28b6e4099a986d7f3823c797ce", "text": "Pyqt specific resize callback .", "title": "", "metadata": ""}
{"_id": "ae9f7f2ed4480f370914462b19cd2aa9", "text": "Sends plain text using _send_text () .", "title": "", "metadata": ""}
{"_id": "eb8d383d981f1c5b4961db22a1cd44a4", "text": "Strips comments and filter empty lines .", "title": "", "metadata": ""}
{"_id": "b3f9880f40e23e317247ac4232d606d9", "text": "set the colors for text .", "title": "", "metadata": ""}
{"_id": "8de526e0d312721ca34617c0eeb1eafa", "text": "Return the path to the javascript bundle", "title": "", "metadata": ""}
{"_id": "2e1f455e57f364657a2ffab730c52027", "text": "Compute average gradient norm of an image", "title": "", "metadata": ""}
{"_id": "8aabd1682f602b034afec0627fad88e4", "text": "Return a sort lambda function for the sortedbykey", "title": "", "metadata": ""}
{"_id": "005f03dd3967d1fc2c2f66f307cab5e7", "text": "Open and load JSON from file .", "title": "", "metadata": ""}
{"_id": "84bcb3990916c1528422435f5fe7f0f8", "text": "Remove tags from a file .", "title": "", "metadata": ""}
{"_id": "85d44f1acea2e23385999f1b62ea0587", "text": "Do all elements of x have a type from types?", "title": "", "metadata": ""}
{"_id": "3ab3d0c20236a9cf7acb7a93b3246b65", "text": "Store ipython references in the __builtin__ namespace .", "title": "", "metadata": ""}
{"_id": "dc4e9254d4d7c788074008cc25024b06", "text": "Load from stored files", "title": "", "metadata": ""}
{"_id": "41fda710081320498a8d0c2ad2695d98", "text": "Partition a list into equally sized pieces including last smaller parts http : // stackoverflow . com / questions / 5129102 / python - equivalent - to - clojures - partition - all", "title": "", "metadata": ""}
{"_id": "6ac1b874ef033346f99560ca05376e44", "text": "Create a Primary Key constraint on a specific column when the table is already created .", "title": "", "metadata": ""}
{"_id": "7c9e03cf91fc9a679d5743297a978b44", "text": "Close all open / active plotters", "title": "", "metadata": ""}
{"_id": "d3f6eea4872dbd76ad40a107d2f599e1", "text": "Helper method to generate map from key to entity object for given list of dicts .", "title": "", "metadata": ""}
{"_id": "ad57b8c68bd0dc8801557fd7df8dffd5", "text": "returns a function to convert a string to a datetime . date instance using the formatting string fmt as in time . strftime", "title": "", "metadata": ""}
{"_id": "1666f044d328b1a6b8064ca00a8026cc", "text": "Returns a class based on class name", "title": "", "metadata": ""}
{"_id": "e0547801a957a9cc67ead43d97a555f1", "text": "Use openpyxl to read an Excel file .", "title": "", "metadata": ""}
{"_id": "0d1ff6aea44a83a8d3ceda7ae385eeda", "text": "Align text labels based on the x - and y - axis coordinate values .", "title": "", "metadata": ""}
{"_id": "7270e1163a812b6d547add6b2c877802", "text": "Calculate area of bounding box .", "title": "", "metadata": ""}
{"_id": "e97098130c8f0d1539ad944967a67871", "text": "Print in color .", "title": "", "metadata": ""}
{"_id": "db272e8fa94415e0d37003846635e732", "text": "Check if required dependency is installed", "title": "", "metadata": ""}
{"_id": "1d95d90629a4d3c3a5dbeb20d0c4d327", "text": "Add a link from A and B of given distance and also add the inverse link if the graph is undirected .", "title": "", "metadata": ""}
{"_id": "16b7a753064cc2585a2313072f725c75", "text": "Schedules this publish action as a Celery task .", "title": "", "metadata": ""}
{"_id": "94cdca2901f173b621e8c4ee6e1d943f", "text": "Helper method to determine actual value based on type of feature variable .", "title": "", "metadata": ""}
{"_id": "dcba9719694d61afd0df097abf0b7420", "text": "Check that the page title matches the given one .", "title": "", "metadata": ""}
{"_id": "e1098a176fb99d0c7093a5b98f1410fe", "text": "Creates a percentage string representation from the given number . The number is multiplied by 100 before adding a % character .", "title": "", "metadata": ""}
{"_id": "cf655a7dfb3f053766a7829c8ef6e4b4", "text": "Run lint checks using flake8 .", "title": "", "metadata": ""}
{"_id": "6126f0578776729356b9cb3c6020b529", "text": "Reset to the default text color on console window . Return bool True if succeed otherwise False .", "title": "", "metadata": ""}
{"_id": "b1a10f3824c1bf561e162ae5a8a88d9e", "text": "Converts binary representation label to integer .", "title": "", "metadata": ""}
{"_id": "aa23143bda8b9ccd16ce7d8ecf2fbab2", "text": "Check if we should use Unix style .", "title": "", "metadata": ""}
{"_id": "cf48f9fea9ec2a9a76155d4a107bb8b3", "text": "only resize input image to target size and return scale : param im : BGR image input by opencv : param short : one dimensional size ( the short side ) : param max_size : one dimensional max size ( the long side ) : return : resized image ( NDArray ) and scale ( float )", "title": "", "metadata": ""}
{"_id": "c1e454af070dc0ac9c94e40c40a865e2", "text": "prune all but the first ( = best ) n items", "title": "", "metadata": ""}
{"_id": "2cef50a6f2102b482af6f965fdba52ce", "text": "Stop the simple WSGI server running the appliation .", "title": "", "metadata": ""}
{"_id": "7087b9f2c92fb2c99724a51cc0585be6", "text": "Unpickles the classifier used", "title": "", "metadata": ""}
{"_id": "be629fbe83f62561734d5c99abfaf326", "text": "Return index of last character in string for which func ( char ) evaluates to True .", "title": "", "metadata": ""}
{"_id": "3905cedda1584f580932d1218d3e8e05", "text": "Check if a file exists", "title": "", "metadata": ""}
{"_id": "34fc23f94940a494534d101ce6aac5f2", "text": "Function to split every line in a list and retain spaces for a rejoin : param orig_list : Original list : return : A List with split lines", "title": "", "metadata": ""}
{"_id": "5f28d0a0ae51b6a94fd414e363d330e3", "text": "Return the height of the given line . ( The height that it would take if this line became visible . )", "title": "", "metadata": ""}
{"_id": "897cb6cecb197ded5c77957794683885", "text": "Generate unique document id for ElasticSearch .", "title": "", "metadata": ""}
{"_id": "d0aedada022903d3318fbd9403c3fc4f", "text": "Delete the key and return true if the key was deleted else false", "title": "", "metadata": ""}
{"_id": "d9716f17f6c536f5c96879756b5a6bc0", "text": "Generate random string of given length", "title": "", "metadata": ""}
{"_id": "288005bf27eb314ae5c2b9830c0514d4", "text": "Given a soup pick out a title", "title": "", "metadata": ""}
{"_id": "771885d01bf714caee0667efeee1ab73", "text": "Replace multiple values in a string", "title": "", "metadata": ""}
{"_id": "bc6339321b64e425e0e5d06be0557209", "text": "Custom validation function which inserts a timestamp for when the validation occurred", "title": "", "metadata": ""}
{"_id": "9130519bd22142ec50949c610170a34a", "text": "Return a string that matches a named route", "title": "", "metadata": ""}
{"_id": "6d123fdb6bf1bccc26eac2fb7361a74f", "text": "Get the toplevel widget from a gtk . Builder file .", "title": "", "metadata": ""}
{"_id": "2e516f3ae43d7c76b6ebb70bd77092dc", "text": "Due to the way Angular organizes it model when this Form data is sent using Ajax then for this kind of widget the sent data has to be converted into a format suitable for Django s Form validation .", "title": "", "metadata": ""}
{"_id": "9216cc35faa06bf83713c46d763caefb", "text": "convert string to int or float .", "title": "", "metadata": ""}
{"_id": "3bfe46249ba343fe3463e36650bb409f", "text": "Similar to Python s built - in open () function .", "title": "", "metadata": ""}
{"_id": "bf1b52ee5d80aab98be22b91db7bacbd", "text": "Run application tests", "title": "", "metadata": ""}
{"_id": "c7edc5321b14f359159aea29ef366db6", "text": "Helper function to return a scalar value representing the most likely outcome given a probability distribution", "title": "", "metadata": ""}
{"_id": "d048d2bbcdae2dfd100a0b911eb0de7e", "text": "Returns a string composed of elements in inlist with each element separated by delimiter . Used by function writedelimited . Use \\ t for tab - delimiting .", "title": "", "metadata": ""}
{"_id": "bcbbda7c9afdd475c29713b06d11181e", "text": "Register a modele onto the lemmatizer", "title": "", "metadata": ""}
{"_id": "f26af36f846c28173fdf8ddf65e5c09c", "text": "Return a unique string with length n .", "title": "", "metadata": ""}
{"_id": "86efffd6524d3f388ea793c285546b60", "text": "Converts a comma separated string to a list", "title": "", "metadata": ""}
{"_id": "be10151f7a513e3ca82610dcc0279bd7", "text": "Uses dynamic programming to infer the location of spaces in a string without spaces .", "title": "", "metadata": ""}
{"_id": "831fd89c0c02cdee845ecaf5406bcbb2", "text": "Yield successive n - sized chunks from dictionary .", "title": "", "metadata": ""}
{"_id": "3d6e4ba0cf64056866efaf705cf7a406", "text": "Indicates whether or not the given row contains valid data .", "title": "", "metadata": ""}
{"_id": "144ac2a376ed04bed741944f330e6c25", "text": "Return True if val is either a subclass or instance of class_ .", "title": "", "metadata": ""}
{"_id": "818c5a0f3ce00b7434c9cba00208a286", "text": "Return the number of rows preceding the data table for * series * in the Excel worksheet .", "title": "", "metadata": ""}
{"_id": "50fb58ce286952a3382b45f490a6c074", "text": "Get a Dictionary Cursor for executing queries", "title": "", "metadata": ""}
{"_id": "65a522fb37d4b54650257ecfca06c5a4", "text": "Return the self object attributes not inherited as dict .", "title": "", "metadata": ""}
{"_id": "46de92f004af0dace56169dd3ba27d11", "text": "Given a lambda_name and stage_name return a valid API URL .", "title": "", "metadata": ""}
{"_id": "2d889c50b1d885b4b23bf0588e9df6ad", "text": "Generate all matches found within a string for a regex and yield each match as a string", "title": "", "metadata": ""}
{"_id": "d252f24048c35a2796dbc5667d936093", "text": "Writes a float to the underlying output file as a 4 - byte value .", "title": "", "metadata": ""}
{"_id": "ee0bf3ddaef672e4b1defce986925b9b", "text": "Convert raw input value of the field .", "title": "", "metadata": ""}
{"_id": "0041341223053384f4921d3bd61407f8", "text": "Moves the displayed plot to the previous one", "title": "", "metadata": ""}
{"_id": "706a65b5a9de27fdcfe73d3ca9403fc6", "text": "This follows the validate rules for choices_form_class field used .", "title": "", "metadata": ""}
{"_id": "d54c58dff1109267e12e04a76a11af04", "text": "Check if a port is open : param port : : param host : : return bool :", "title": "", "metadata": ""}
{"_id": "e0ea0e33ad2b9ca7ff789b9124395b4a", "text": "Create a queue based on the provided parallel arguments .", "title": "", "metadata": ""}
{"_id": "9d7bd199e5245ad4c45a2d0d9b48c651", "text": "create a graphviz graph from text", "title": "", "metadata": ""}
{"_id": "ac510d3647a317ec2e0ae57a3655190a", "text": "Scale the image down by one scale step .", "title": "", "metadata": ""}
{"_id": "5e25f4c2fdc751344a8f5059dbd7d350", "text": "Return an image with the binarised version of the data of img .", "title": "", "metadata": ""}
{"_id": "473a2db1274c020505e07504d8e474a9", "text": "Return the given date with nb_months substracted from it .", "title": "", "metadata": ""}
{"_id": "834828b1059d648e3e73dec7d551c2dd", "text": "Draw a set of lines", "title": "", "metadata": ""}
{"_id": "a2662ea8ab230612988befe6e46724df", "text": "Extract the 2D region of an array corresponding to the rectangle encompassing all unmasked values .", "title": "", "metadata": ""}
{"_id": "daa0b94e33e053a3c571a44ce70f93aa", "text": "Reconstruct the image from the tf example .", "title": "", "metadata": ""}
{"_id": "98eb7012fac56b40ab7c3b5fdde6ed72", "text": "Decorator to turn tasklet to run eagerly .", "title": "", "metadata": ""}
{"_id": "fca85280d7c04c2a880a5a9259578c4c", "text": "Checks if value is an integer long integer or float .", "title": "", "metadata": ""}
{"_id": "1e578d05f18dc58eb374f19e50d0197f", "text": "Convert camelcase to lowercase and underscore .", "title": "", "metadata": ""}
{"_id": "d70b00deada2839c2110704e3968786b", "text": "Create an index field from this field", "title": "", "metadata": ""}
{"_id": "7bdcd896ce5e12b74937080305875b17", "text": "returns a dictionary of arg_name : default_values for the input function", "title": "", "metadata": ""}
{"_id": "bc8acffb6ddd1cbeeb587f79d200011e", "text": "Return a 3 - dimensional rotation matrix .", "title": "", "metadata": ""}
{"_id": "bc7a6733e8fb52587b16fe9c64f2e597", "text": "Print Confirmation Message and Get Y / N response from user .", "title": "", "metadata": ""}
{"_id": "9bcdc73825da6fa525898c51dc8f4e98", "text": "Create a deep copy of the node", "title": "", "metadata": ""}
{"_id": "40e02fcd21d4f877f5e9ce08a73e1ba8", "text": "Temporarily replace sys . argv with current arguments", "title": "", "metadata": ""}
{"_id": "dcbb2dcecb1972555d4125ed210ff533", "text": "Convert from whatever is given to a list of scalars for the lookup_field .", "title": "", "metadata": ""}
{"_id": "4de45c17501234aac408e669ece1bdc0", "text": "Delete a file or directory path only if it exists .", "title": "", "metadata": ""}
{"_id": "7b8d3a2bc2e413cb6453820353a4db57", "text": "Makes the given dictionary symmetric . Values are assumed to be unique .", "title": "", "metadata": ""}
{"_id": "8b00dbe5ba0bbce217226eda1a2c9430", "text": "Init connection and consumer with openstack mq .", "title": "", "metadata": ""}
{"_id": "72fdcf1f9b11658b27baebbff5e5737e", "text": "returns a TreeLib tree", "title": "", "metadata": ""}
{"_id": "64c88e6ce614c253225c793484ea92a7", "text": ": param vector_a : A list of numbers . : param vector_b : A list of numbers . : returns : The euclidean distance between the two vectors .", "title": "", "metadata": ""}
{"_id": "ec279bcccfe8c4a2644ee9a86b4b2b70", "text": "utility to set a floating value useful for converting from strings", "title": "", "metadata": ""}
{"_id": "949400119ae1b1e3af5b6e00073885e8", "text": "Print emphasized neutral the given txt message", "title": "", "metadata": ""}
{"_id": "4626f031923d1df2ff5358e58fb0e56a", "text": "Set the strict mode active / disable", "title": "", "metadata": ""}
{"_id": "4cd98e6d8b2e29221db6e2921063265c", "text": "Computes 2D spectrum frequencies .", "title": "", "metadata": ""}
{"_id": "f9f1de8c1a452d06a7bac1edcc47f8db", "text": "autoscan will check all of the serial ports to see if they have a matching VID : PID for a MicroPython board .", "title": "", "metadata": ""}
{"_id": "d6017e45853b53193fc53a63d7f235ec", "text": "Draw a vertical line up to a given length .", "title": "", "metadata": ""}
{"_id": "4739dc311c3ff58f4a002c843f88cbc6", "text": "Stops all containers used by this instance of the backend .", "title": "", "metadata": ""}
{"_id": "fe617a3031b665052937df67cd9c3095", "text": "Serializes the JSON for the Polling Event Model .", "title": "", "metadata": ""}
{"_id": "4c792b8d49facc6f97488d5b5ce46bef", "text": "Function to retreive all keys in a shelve Args : file_name : Shelve storage file name file_location : The location of the file derive from the os module", "title": "", "metadata": ""}
{"_id": "78498ee7ec14c0029a453bdd2799725e", "text": "Flush all unwritten data to disk .", "title": "", "metadata": ""}
{"_id": "dc0ee0a66b25d9606b2f77d010ef7ac0", "text": "Will make any functions return an iterable objects by wrapping its result in a list .", "title": "", "metadata": ""}
{"_id": "dcb984cbb90aabaded682338cb6822a8", "text": "Determines if a matrix is approximately orthogonal .", "title": "", "metadata": ""}
{"_id": "69ffec4f5f145d72a3e595da39cfacb4", "text": "Returns aggregate image load time for all pages .", "title": "", "metadata": ""}
{"_id": "e11b3113237355ddf5e86a9538e216b6", "text": "Logs out the current session by removing it from the cache . This is expected to only occur when a session has", "title": "", "metadata": ""}
{"_id": "ca64a6ce860f6e98f55d0241d8f49011", "text": "Saves the updated model to the current entity db .", "title": "", "metadata": ""}
{"_id": "750ade4cacc712ed2887bf0494d03931", "text": "Create a spectra . Color object in the CMYK color space .", "title": "", "metadata": ""}
{"_id": "2e118431db0b96fc194872aea4168d34", "text": "Uses http : // www . cplusplus . com / reference / string / to_string / for formatting", "title": "", "metadata": ""}
{"_id": "c3283e651d8ffaf31fab9249e405658f", "text": "Return the nth value of array", "title": "", "metadata": ""}
{"_id": "00358150afc8a2b2881e284f3192a9bc", "text": "Returns a list with no repeated elements .", "title": "", "metadata": ""}
{"_id": "6c51b8c349261e50b4f615e469adc38d", "text": "SetCursorPos from Win32 . Set mouse cursor to point x y . x : int . y : int . Return bool True if succeed otherwise False .", "title": "", "metadata": ""}
{"_id": "689911ec3e5336ee064d6a7ce65e4a1b", "text": "RedisCache will set prefix + version as prefix for each key .", "title": "", "metadata": ""}
{"_id": "1a4f97a3f766ae3b8b0ec927f3747cdb", "text": "download the dates file from the internet and parse it as a dates file", "title": "", "metadata": ""}
{"_id": "173fb5c1d86967e663515ebf132f4169", "text": "Transform a range of years ( two ints ) to a DateRange object .", "title": "", "metadata": ""}
{"_id": "221c413fce87b7a0b6251ef5396d571a", "text": "Download the given JSON file and pretty - print before we output it .", "title": "", "metadata": ""}
{"_id": "b0253e4e652eeda6c12072d757ebaabd", "text": "numpy . ndarray dumper .", "title": "", "metadata": ""}
{"_id": "8e738e41b17cc7a62132bc0005b32f50", "text": "Attempt to cast * value * into a bool returning * default * if it fails .", "title": "", "metadata": ""}
{"_id": "7fdd87eb469b186bc2c4d9770bb98af0", "text": "Combine data and a fits header to write a fits file .", "title": "", "metadata": ""}
{"_id": "b26ec956a7d5065b91f28ddc3edc0e80", "text": "Parse identifier such as a|c|le|d|li|re|or|AT4G00480 . 1 and return tuple of prefix string ( separated at | ) and suffix ( AGI identifier )", "title": "", "metadata": ""}
{"_id": "9e63781e5283e985d09da8f04adbc235", "text": "Determines if two rectangles each input as a tuple ( xmin xmax ymin ymax ) intersect .", "title": "", "metadata": ""}
{"_id": "3e2a98a60c93857ea59309eae1e93568", "text": "Concatenates blocks into a block diagonal matrix .", "title": "", "metadata": ""}
{"_id": "b28d88197e48f2913b084c615daf136c", "text": "Remove duplicates from an iterable preserving the order .", "title": "", "metadata": ""}
{"_id": "1e7d8aaed8f9163ea450e99396bb69af", "text": "Return a generator of tuples k c such that k is the name of the python attribute for the column and c is the name of the column in the sql table .", "title": "", "metadata": ""}
{"_id": "2c3032448df2c12d6e50bfea21d56685", "text": "a conversion function for boolean", "title": "", "metadata": ""}
{"_id": "a275b0ce3277632773a91ec6519bd76f", "text": "converts df to dict and adds a datetime field if df is datetime", "title": "", "metadata": ""}
{"_id": "3cec0fad9d8e1ffd54c6e8ae5caa7975", "text": "Asks for a simple string", "title": "", "metadata": ""}
{"_id": "1ab51f624539a3a7e78bf12311d494ef", "text": "Called when PyYaml encounters !include - raw", "title": "", "metadata": ""}
{"_id": "ce316ae40ba35816445185cd28ea5118", "text": "Return the tensor shape of the matrix operator", "title": "", "metadata": ""}
{"_id": "0da94831308e10b931fe060a1d338a64", "text": "Splits a string into parts at multiple characters", "title": "", "metadata": ""}
{"_id": "bd7a92bcb0ecc0acc0a0212857116e28", "text": "Get comments only .", "title": "", "metadata": ""}
{"_id": "4522b05f2ce12271cdbdb500c84a63f4", "text": "r Return the area of a triangle .", "title": "", "metadata": ""}
{"_id": "ee9a3cd13f69aa2a2421876e104997af", "text": "Removes underscores and capitalizes the neighbouring character", "title": "", "metadata": ""}
{"_id": "dbeb47d9991485574e675474034ee145", "text": "Creates or updates a property for the instance for each parameter .", "title": "", "metadata": ""}
{"_id": "4f09c563a791dddf30e5f193d0ac6496", "text": "Returns the cached object list under the appropriate key or None if not set .", "title": "", "metadata": ""}
{"_id": "853f6b1a5815fa56932762d5fda0aea3", "text": "r Gets the string representation of the given type .", "title": "", "metadata": ""}
{"_id": "1c9e64972f74f33185cfd91b687d5727", "text": "Initializes the id of the instance .", "title": "", "metadata": ""}
{"_id": "8f202e67a3533f85ac3c1ad037c7dec1", "text": "Prints given string to stderr .", "title": "", "metadata": ""}
{"_id": "d90c21fbf9fa568a04c8e21736d5988a", "text": "Load : class : mongomock . database . Database from a local file .", "title": "", "metadata": ""}
{"_id": "7e6abf2f373d696856e54448fc19e069", "text": "Write the given extended file descriptor to out .", "title": "", "metadata": ""}
{"_id": "f51cec853f2fdff03635ffb50c8203dd", "text": "Normalize name for the Statsd convention", "title": "", "metadata": ""}
{"_id": "23d7698e348ce860f08d7d5da443818f", "text": "The virtual screen is the bounding box containing all monitors .", "title": "", "metadata": ""}
{"_id": "c2203b3ec5b909ed95705a671dbc1cd6", "text": "returns unique elements from a list preserving the original order", "title": "", "metadata": ""}
{"_id": "16bb7ca565ba1f5b6f06a5578ae0024b", "text": "Converts the specified datetime object into its appropriate protocol value . This is the number of milliseconds from the epoch .", "title": "", "metadata": ""}
{"_id": "af40bedbc5001432863eff21926ba85c", "text": "Check for Python 3 . 5 matrix multiplication .", "title": "", "metadata": ""}
{"_id": "8072523c63a266771d0a24d71c41b63b", "text": "Print results straight to stdout", "title": "", "metadata": ""}
{"_id": "1e9c8a25ffce0b0ff3fac58c5563ee3a", "text": "Emulate lpush .", "title": "", "metadata": ""}
{"_id": "57406297887e5472bc807c16af11ca44", "text": "Make a list of strings to pass to an SQL statement from the dictionary kw with Python types", "title": "", "metadata": ""}
{"_id": "994b47b62b8da8911ab3043c4052c04b", "text": "Reset all parameters to their default values .", "title": "", "metadata": ""}
{"_id": "fe19feab94215d771fd010ea2660f64f", "text": "Returns ( first ) selected item or None", "title": "", "metadata": ""}
{"_id": "2fcd7d215f6ccc3bef3fbfc312d3553d", "text": "Grabs image data and converts it to a numpy array", "title": "", "metadata": ""}
{"_id": "1dde00c9ee03e5f55edddf8c402b6595", "text": "Computes l2 norm of params by flattening them into a vector .", "title": "", "metadata": ""}
{"_id": "736c00ca9d667e93b7862dc3a6f11e43", "text": "Resize all the colummns to its contents .", "title": "", "metadata": ""}
{"_id": "f298f5932c1fde9e9fee5140d07e3c87", "text": "Creates an AWS Chalice project for deployment to AWS Lambda .", "title": "", "metadata": ""}
{"_id": "4533b54b62b7a9d47dd858a2b383a2d1", "text": "See http : // www . peterbe . com / plog / uniqifiers - benchmark Originally f8 written by Dave Kirby", "title": "", "metadata": ""}
{"_id": "29def534682d9a596cf37fca1523f9ec", "text": "Equivalent of the apply () builtin function . It blocks till the result is ready .", "title": "", "metadata": ""}
{"_id": "300d5a5f3f03967fad1b09060855203c", "text": "Print memory .", "title": "", "metadata": ""}
{"_id": "6b4dbeb247a4373aee9b40408a543105", "text": "Check that value is in values", "title": "", "metadata": ""}
{"_id": "6abce3bc2a50fe105cf64588b0ba355a", "text": "Opens file attempts to identify content based off magic number and will return the file extension . If mime is True it will return the mime type instead .", "title": "", "metadata": ""}
{"_id": "f59eb843772d5854f971fd95caf81fbf", "text": "Create a new instance from a file .", "title": "", "metadata": ""}
{"_id": "546fcafa08c1b36267bc2471acf104b2", "text": "Serialize obj as a JSON formatted stream to the given filename ( pretty printing version )", "title": "", "metadata": ""}
{"_id": "28cd097813ebc2f6d4622c588505adcd", "text": "Do j / v replacement", "title": "", "metadata": ""}
{"_id": "3ed93cfda9450ba16e208462eb627aeb", "text": "Copy a file whole from input to output .", "title": "", "metadata": ""}
{"_id": "b1f59d3d84ddaabe5440836ada063911", "text": "Displays a simple message box with text and a single OK button . Returns the text of the button clicked on .", "title": "", "metadata": ""}
{"_id": "1f02a2563a5aa6a179e0cbc943d2c530", "text": "Parses S3 URL .", "title": "", "metadata": ""}
{"_id": "aa04e26a7bc2419be8167d9d67295bfb", "text": "Check the validity of an IPv6 address", "title": "", "metadata": ""}
{"_id": "2b76eea63e65695b181eed917526eabd", "text": "Requests - mock requests . request wrapper .", "title": "", "metadata": ""}
{"_id": "6a194a2d5485e9296ff34f9d3168a40f", "text": "Test if a point is within this polygonal region", "title": "", "metadata": ""}
{"_id": "38f11c8281a170274391e5105a57ecc6", "text": "Create a new : class : ~ulid . ulid . ULID instance from the given : class : ~uuid . UUID value .", "title": "", "metadata": ""}
{"_id": "f5c1b17d8bdd8b22c89adb84a0693370", "text": "Selects n random elements from a list of ( weight item ) tuples . Based on code snippet by Nick Johnson", "title": "", "metadata": ""}
{"_id": "931a0ba6bd0c85dafba49faf39467c88", "text": "Collect digits from a string", "title": "", "metadata": ""}
{"_id": "c31dadcea0e6cd1039a1705c2306f708", "text": "Returns a vector of spherical bessel functions yn : x : The argument . N : values of n will run from 0 to N - 1 .", "title": "", "metadata": ""}
{"_id": "b3d50afb394f967a5183ed334391dce0", "text": "Set the input or output mode for a specified pin . Mode should be either OUTPUT or INPUT .", "title": "", "metadata": ""}
{"_id": "6fed8ba06434b8fb9838137d799f40fd", "text": "A convenience function for plotting a vertical bar plot from a Counter", "title": "", "metadata": ""}
{"_id": "748908e5cd4a518fa7b1a4f0f8f8705c", "text": "Convert cartesian to lon lat .", "title": "", "metadata": ""}
{"_id": "4af33c5d95c6e273b7c5a157037fad8f", "text": "Returns the type of obj as a string . More descriptive and specific than type ( obj ) and safe for any object unlike __class__ .", "title": "", "metadata": ""}
{"_id": "b3001e12c23226a1f1601a70330d5312", "text": "Scale the image to uint8", "title": "", "metadata": ""}
{"_id": "9c645a014320ef07c2f60dc619d933af", "text": "Return a json string representing the python object obj .", "title": "", "metadata": ""}
{"_id": "7b1467982fa2d81623c8c3e9a06e62b4", "text": "Returns a filtered image after applying the Fourier - space filters", "title": "", "metadata": ""}
{"_id": "f1704fedb3402d4071f180c2a3cdd437", "text": "A decorator for providing a unittest with a library and have it called only once .", "title": "", "metadata": ""}
{"_id": "05b420e28871344b72b327a4da6b9963", "text": "Return the element with the specified ID .", "title": "", "metadata": ""}
{"_id": "b00b31c00e31f278661ed206481463d4", "text": "http : // stackoverflow . com / a / 31312102 / 190597 ( SoulNibbler )", "title": "", "metadata": ""}
{"_id": "2e82c09998399b39b0f5df0c85217c60", "text": "Saves a value to session .", "title": "", "metadata": ""}
{"_id": "2e67394cfcb4d08e5ab7a8e07c8c2327", "text": "Returns the indices of the lexicographical sorting order of the supplied arrays .", "title": "", "metadata": ""}
{"_id": "8d6faed5458ef284b5736ff2b4615a44", "text": "This is to support iterators over a file - like object .", "title": "", "metadata": ""}
{"_id": "c076071ebfd2e7f49c8db7ef0407e123", "text": "Return human readable string .", "title": "", "metadata": ""}
{"_id": "236914c6755f2641cab82a296ec2d881", "text": "Filter out any values in target not in image : param image : image containing values to appear in filtered image : param target : the image to filter : rtype : 2d : class : numpy . ndarray containing only value in image and with the same dimensions as target", "title": "", "metadata": ""}
{"_id": "6a54ddf243f11853d73eed1a9167f52f", "text": "Retrieve requested URL", "title": "", "metadata": ""}
{"_id": "26bb722ca66f722a9fbecf2438a363a6", "text": "True if this is a primary key ; False if this is a subkey", "title": "", "metadata": ""}
{"_id": "d7217c683bba8e135c275db456d69d38", "text": "A version of squeeze that works with dynamic axis .", "title": "", "metadata": ""}
{"_id": "583f8a512db24d886f0b5983020ec648", "text": "Kill the process group associated with the given process . ( posix )", "title": "", "metadata": ""}
{"_id": "5d644c68874a04108e53eee552a4eebc", "text": "Return names as a tuple based on given month . If no month given use current one", "title": "", "metadata": ""}
{"_id": "0a6f52912b5c4748b3679629b8498250", "text": "Make an MD5 hash of a file ignoring any differences in line ending characters .", "title": "", "metadata": ""}
{"_id": "cd0640df63c578d0454b7c03ef5a924b", "text": "Return a dictionary of variables specified at CLI : param : args : Command Line Arguments namespace", "title": "", "metadata": ""}
{"_id": "11f5420d4d6a5e1adbc78252157b3b2c", "text": "Flip the writability of a file and return the old mode . Returns None if the file is already writable .", "title": "", "metadata": ""}
{"_id": "a5ad7c51561ddab801fe40cb1e5c08f9", "text": "Add a new url route .", "title": "", "metadata": ""}
{"_id": "dac72ac77fd3b2f04fafe34820a2b009", "text": "Checks whether a variable is a numpy integer array .", "title": "", "metadata": ""}
{"_id": "cb133a78e6f8cb42dade7a5a64ff1d90", "text": "Reads a tif file to a 2D NumPy array", "title": "", "metadata": ""}
{"_id": "eaa649befcdb95285614cb35ad0379ff", "text": "Encode from strings to token ids .", "title": "", "metadata": ""}
{"_id": "5fb63579fc981698f97d55bfecb213ea", "text": "Copy", "title": "", "metadata": ""}
{"_id": "f3822235d5d0289fe6cc9c9b0fffcb26", "text": "Add widget actions to toolbar", "title": "", "metadata": ""}
{"_id": "8fe78e14796c65012c1904ae4b91bef4", "text": "Write a string to a file - like object .", "title": "", "metadata": ""}
{"_id": "a3c40512a41fd27f2826d62f13c69d17", "text": "detect if a model has a given field has", "title": "", "metadata": ""}
{"_id": "d0cc27c17bdc2d9fdfbfb66e57658c0d", "text": "Run the final coverage report . This outputs the coverage report aggregating coverage from the unit test runs ( not system test runs ) and then erases coverage data .", "title": "", "metadata": ""}
{"_id": "93277457ead86167a9d16316dbf2c2e8", "text": "Retrieve a simple OAuth Token for use with the local http client .", "title": "", "metadata": ""}
{"_id": "3a0bb4f0fb4bfb2f48ee95aed96baf40", "text": "Return true iff v is a number .", "title": "", "metadata": ""}
{"_id": "50d891dba41c08a63b51a8a548d581b0", "text": "Returns a zero - based column number of the beginning of this range .", "title": "", "metadata": ""}
{"_id": "6c3af41e9c86ae2f9e84594624b72f59", "text": "property () but encapsulates it in a list if it s a single - element property .", "title": "", "metadata": ""}
{"_id": "6cc5de5847428c44369472096ffdafcd", "text": "Generate a random string from a - zA - Z : param n : length of the string : return : the random string", "title": "", "metadata": ""}
{"_id": "fc88f946a2fb8d581f0af92fbf14f750", "text": "Returns set of the ancestors of a node as DAGNodes .", "title": "", "metadata": ""}
{"_id": "65b0930b707bbe2cbdc75a917ccf18c9", "text": "Constructor for try block structures .", "title": "", "metadata": ""}
{"_id": "af2b4f8648a25ce2c2cf9899b2ebc7fc", "text": "Returns indices to select the kth nearest neighbour", "title": "", "metadata": ""}
{"_id": "98b817bb801cc9ed8c552345af1ae58c", "text": "Return the a new dict with underscores instead of hyphens in keys .", "title": "", "metadata": ""}
{"_id": "89aa56d054b403922633f1a76325e1f2", "text": "Get the path of java executable", "title": "", "metadata": ""}
{"_id": "1f15a7e340b4d23c00da8c45eac72eee", "text": "Warn if nans exist in a numpy array .", "title": "", "metadata": ""}
{"_id": "e6a9c5493dc6a3a461ff003ad5240b09", "text": "Splits a list into chunks", "title": "", "metadata": ""}
{"_id": "c156819db8f714d9e60f0d0d6b7582ce", "text": "Takes a nested list and returns the size of each dimension followed by the element type in the list", "title": "", "metadata": ""}
{"_id": "ab7a4d044d8f383f8a8bdf2c78fcc74c", "text": "exactly like s but doesn t return variable names or file positions ( useful for logging )", "title": "", "metadata": ""}
{"_id": "46752f67938678372ac36010749d67df", "text": "Turn a query into a string for printing . Useful for debugging .", "title": "", "metadata": ""}
{"_id": "0fe32440c51a7b57bdccfa8a985357c4", "text": "Symmetrical logarithmic scale .", "title": "", "metadata": ""}
{"_id": "18f116ac02f85b38d7ee63f4cef5c140", "text": "Invoke pytest replacing argv . Return result code .", "title": "", "metadata": ""}
{"_id": "799c2df36fd43b0c1ad5ce9b78d2ac64", "text": "Remove all images from the file .", "title": "", "metadata": ""}
{"_id": "72bc9cf29ff0b38a2352cb1acc1f612d", "text": "Simple function to divide two numbers", "title": "", "metadata": ""}
{"_id": "88aba56f3bf6a815fe581ffec3b04b48", "text": "To replace a list of items by a single replacement : param subject_list : list : param replacement : string : param string : string : return : string", "title": "", "metadata": ""}
{"_id": "64c098773988da97ce39b16502411678", "text": "Cleans the column names on a DataFrame Parameters : df - DataFrame The DataFrame to clean", "title": "", "metadata": ""}
{"_id": "991d3fa7127f53561c0fbba91b68e366", "text": "Converts python datetime to epoch microseconds .", "title": "", "metadata": ""}
{"_id": "eb0d89feb26c8e58c50e6da9fe422251", "text": "Flush the file and close it .", "title": "", "metadata": ""}
{"_id": "16c422650028a5ecd2089df255b1f0d1", "text": "Returns the default stream encoding if not found .", "title": "", "metadata": ""}
{"_id": "ff77fdcef47c68cc4d34c67163b1d71a", "text": "Used for debugging .", "title": "", "metadata": ""}
{"_id": "aa2882a19c88b9d7a26b4172826fc85a", "text": "Return a set of strings .", "title": "", "metadata": ""}
{"_id": "9aa6978735c2bf336f55aff7d1964163", "text": "Initialize a ResponseException instance .", "title": "", "metadata": ""}
{"_id": "3e8961def1881de9d29adbc400cab490", "text": "Update all visuals in the attached canvas .", "title": "", "metadata": ""}
{"_id": "2530b28db9c6ab46080a30c916009373", "text": "Calculate the average color from the list of colors where each color is a 3 - tuple of ( r g b ) values .", "title": "", "metadata": ""}
{"_id": "ad5f8d8b309178cdfe41a90d7ac421ad", "text": "This will insert the value into the array keeping it sorted and returning the index where it was inserted", "title": "", "metadata": ""}
{"_id": "18eab61c5c90055c368503ff2f597924", "text": "Return the line number parsed from the comment or 0 .", "title": "", "metadata": ""}
{"_id": "d8089a8b4afdb57429b6dc5e9d73d61c", "text": "u Delete the character behind the cursor . A numeric argument means to kill the characters instead of deleting them .", "title": "", "metadata": ""}
{"_id": "01238e90bbec0798bd6f99d4f3f8f026", "text": "Add a page to the page cache .", "title": "", "metadata": ""}
{"_id": "8c6b9d0fc98cdc431c952cf2736f7bd3", "text": "Test for ReverseDNS class", "title": "", "metadata": ""}
{"_id": "6374211c1be2e4c874defb5c8a33e308", "text": "Set dictionary array .", "title": "", "metadata": ""}
{"_id": "4206764ec88ef35969cd302154c01369", "text": "Modifies each item . keys () string based on the func passed in . Often used with inflection s camelize or underscore methods .", "title": "", "metadata": ""}
{"_id": "cb7490221a9c9c536ca54f3d19d1c771", "text": "Returns an updated copy of the dictionary without modifying the original", "title": "", "metadata": ""}
{"_id": "baa15d1fbe69156ba7973f23085bbe86", "text": "Writes a . wav file .", "title": "", "metadata": ""}
{"_id": "a060fc056304077b64ab3310997fbfb0", "text": "Read 4 bytes from bytestream as an unsigned 32 - bit integer .", "title": "", "metadata": ""}
{"_id": "654a3c17e4088bcf332139ab4eceda66", "text": "Cast to float tensor", "title": "", "metadata": ""}
{"_id": "4a7f3f4a610b0741b81e392fe36a27f4", "text": "Update the argparser namespace with any data from configuration file .", "title": "", "metadata": ""}
{"_id": "1bb01b0462a0eee4af6cb6835914d14f", "text": "Test that a and b are close and match in shape .", "title": "", "metadata": ""}
{"_id": "74308815dddf636e3be3d5193045b66c", "text": "Return the features dimension raise if error", "title": "", "metadata": ""}
{"_id": "f3eb936021ca90fe114f8e16b2c1b28a", "text": "Set the upper bound of a constraint .", "title": "", "metadata": ""}
{"_id": "4f7e25b1de58875498e79ea993eb3ccd", "text": "Checks if current project has any noncommited changes .", "title": "", "metadata": ""}
{"_id": "5b43aaafee8c91b1d2d63ae03ec588d3", "text": "Writes the string to stdout", "title": "", "metadata": ""}
{"_id": "047a3793a34beacca297e624984af671", "text": "Returns the thumbnail dimensions depending on the images format .", "title": "", "metadata": ""}
{"_id": "daba15cbb489c5c48f347359acc6d94f", "text": "Test if the given fasta file contains sequences with duplicate sequence names .", "title": "", "metadata": ""}
{"_id": "665fa03cd2ff6d06f36d01ee899eb08e", "text": "Return scaled image size in ( width height ) format . The scaling preserves the aspect ratio . If PIL is not found returns None .", "title": "", "metadata": ""}
{"_id": "0e705f22929470433868985f3c0acda6", "text": "Add subparser", "title": "", "metadata": ""}
{"_id": "b99557b0315d791fda8fa2d6d2d72a5a", "text": "Return a JSSObject for the element with ID id_", "title": "", "metadata": ""}
{"_id": "3a614707a8b708930967fe2e71d53115", "text": "Swap the byte - ordering in a packet with N = 4 bytes per word", "title": "", "metadata": ""}
{"_id": "90b1d4d41ff51245dacf8ef4f9b81399", "text": "Recursively computes true depth of the subtree . Should only be needed for debugging . Unless something is wrong the depth field should reflect the correct depth of the subtree .", "title": "", "metadata": ""}
{"_id": "371f015a6d42daef7fc4ea7e557f0588", "text": "Return True if there s something to read on stdin ( posix version ) .", "title": "", "metadata": ""}
{"_id": "75aaa6147fa7d250be56d13624036e74", "text": "A socket attached to the stdin / stdout of a container . The object returned contains a get_socket () function to get a socket . socket object and close_socket () to close the connection", "title": "", "metadata": ""}
{"_id": "8f54ce7b5db44e505f9980c857074b66", "text": "function to check if input query is not None and set missing arguments to default value", "title": "", "metadata": ""}
{"_id": "f289f6221ba9e2c5f2480a8d9325dd6b", "text": "Closes the root Dataset .", "title": "", "metadata": ""}
{"_id": "602b01aa5a20c06534ee566fcd284aee", "text": "Put the value of a column keyword . ( see : func : table . putcolkeyword )", "title": "", "metadata": ""}
{"_id": "904121153b6627eb471b23c10cb29b9c", "text": "Surveyed length not including excluded shots", "title": "", "metadata": ""}
{"_id": "bd04c14a8eb5df4e0150bca167856fc5", "text": "Save a given signal sig to file fname as a 16 - bit one - channel wave with the given rate sample rate .", "title": "", "metadata": ""}
{"_id": "f4300f30a5c7a7808b511fc472bd42f4", "text": "Converts C char arrays to bytes and C NULL values to None .", "title": "", "metadata": ""}
{"_id": "a035e01f16bdd5baa26d2bcd1cf7a835", "text": "Increment the key by the given amount .", "title": "", "metadata": ""}
{"_id": "35b901a196b2c21230e256cbbf3f4681", "text": "Yield successive n - sized chunks from l .", "title": "", "metadata": ""}
{"_id": "71812fee84a18742ea04957fe024f400", "text": "Perform a simple check if the value is callable .", "title": "", "metadata": ""}
{"_id": "c1bcc83abf64a7d8629c59866398c13d", "text": "If the option did not exist create a default value .", "title": "", "metadata": ""}
{"_id": "088fe5669b5dd4b1c23e20bfe0892668", "text": "Return the cosine and sin for the given angle in degrees with special - case handling of multiples of 90 for perfect right angles", "title": "", "metadata": ""}
{"_id": "2f2a8384ec347ad283559022b8f9e16c", "text": "Escape data for tab - separated value ( TSV ) format .", "title": "", "metadata": ""}
{"_id": "bcd28016022bbe64d9a21e75409d8131", "text": "Return no more than k indices of smallest values .", "title": "", "metadata": ""}
{"_id": "62cf9d5bca7002dab723cb63fe6a8d6f", "text": "Convert documentation to HTML", "title": "", "metadata": ""}
{"_id": "bad1cd6b84acaf3c4d2036d2a19b722c", "text": "Execute all tests ( normal and slow ) with coverage enabled .", "title": "", "metadata": ""}
{"_id": "1d2256528857ff1558e01641ae70f29c", "text": "Randomly select some rows from table .", "title": "", "metadata": ""}
{"_id": "245a46608a9a263baf0048759e278c81", "text": "Add executable permissions to the file", "title": "", "metadata": ""}
{"_id": "cbb50e116733044f12f8ec13e1a26444", "text": "Cast value to bool .", "title": "", "metadata": ""}
{"_id": "b2300ff3e0e6df716fdea9bc1060b04a", "text": "Return the domain : port part of the URL without scheme . Eg : facebook . com 127 . 0 . 0 . 1 : 8080 etc .", "title": "", "metadata": ""}
{"_id": "f42928ad945a171bf9022fdab3de85b9", "text": "Get the length longest line in a paragraph", "title": "", "metadata": ""}
{"_id": "d620cabb66dfaff29dad07e1012f74a4", "text": "Compare differencs from two dicts", "title": "", "metadata": ""}
{"_id": "a66aaecb696410f305dbdbd2378a9dd9", "text": "Takes a timestamp value and rounds it to a second precision .", "title": "", "metadata": ""}
{"_id": "bb3237fbf09cf67a00bb86915684ffd9", "text": "Is this a call with exactly 1 argument where that argument is positional?", "title": "", "metadata": ""}
{"_id": "acdacbd4f7406444d090736a5e193d22", "text": "Perform sed text substitution .", "title": "", "metadata": ""}
{"_id": "b1ba15178b04bbffaef7fff427cbed28", "text": "Generate Android device id", "title": "", "metadata": ""}
{"_id": "9d795450d8cad33d69d02c4143b491d6", "text": "Project points into 3d from 2d points .", "title": "", "metadata": ""}
{"_id": "40e4392b1d63d8cba69ea9fa787c82ce", "text": "r %autoreload = > Reload modules automatically", "title": "", "metadata": ""}
{"_id": "83094bbc97131874aeef93532801c4eb", "text": "Generate a random string from 0 - 9 : param n : length of the string : return : the random string", "title": "", "metadata": ""}
{"_id": "addcc17883b84d3dd0ae9901d74efb0e", "text": "Return attrs with keys in keys list", "title": "", "metadata": ""}
{"_id": "894e033e8e7379733d2df4c676942ea4", "text": "Utility function to create regexp for matching escaped separators in strings .", "title": "", "metadata": ""}
{"_id": "087c4e4c1be3b64fff0be6c8f842063e", "text": "Retrieves all IP addresses associated to a given instance .", "title": "", "metadata": ""}
{"_id": "3d145b0e360564d00284eb697e21a291", "text": "Harmonic mean of an array returns the closest int", "title": "", "metadata": ""}
{"_id": "05fe7a44076d885a5c441b8ccc751eba", "text": "End of the Glances server session .", "title": "", "metadata": ""}
{"_id": "6ad42c04721e1c53fbe8ecdefd0b2698", "text": "Unlinks all of the specified items from the tree .", "title": "", "metadata": ""}
{"_id": "6f51c183279eebec10c4061a62f7085c", "text": "Convert a string to bytes .", "title": "", "metadata": ""}
{"_id": "00764be91a06a01bb802a34e05d7b35f", "text": "Load a python module from its absolute filesystem path", "title": "", "metadata": ""}
{"_id": "f01ba7f72e06ed78fdaba6db6f048ca2", "text": "Wrapper : Creates an array bound", "title": "", "metadata": ""}
{"_id": "965eb00371ae225916b7edc80c9e516a", "text": "is_valid_image_extension .", "title": "", "metadata": ""}
{"_id": "71933fd250fb65eee4677ff4bdd9e651", "text": "Find the signed distance from a mesh to a list of points .", "title": "", "metadata": ""}
{"_id": "f3d074d0b25eac6c559ecd6cb62c1a63", "text": "Get all versions of req from PyPI .", "title": "", "metadata": ""}
{"_id": "b0a0e7c7dd2fbbf41eb5df216cdb5ff4", "text": "Return the top - level element of a document sub - tree containing the YAML serialization of a Python object .", "title": "", "metadata": ""}
{"_id": "f96f4c5812ec4a54bb3e7cb64d0b814c", "text": "Encode a python boolean ( True / False ) .", "title": "", "metadata": ""}
{"_id": "b5f40cce02be05a5ff02b597608b4135", "text": "Computes average length of words", "title": "", "metadata": ""}
{"_id": "25b9cf8ae5404237266ce7d651c5ad0b", "text": "Manufacture decorator that filters return value with given function .", "title": "", "metadata": ""}
{"_id": "0b40c419b9421c497c7bddf96e8fa18e", "text": "Scale a single point", "title": "", "metadata": ""}
{"_id": "16fce01e37a84b09dec4a3f13ff797fb", "text": "Check if a user has a given permission .", "title": "", "metadata": ""}
{"_id": "b22ac9d46a3848ee3e40399c19fb0fe5", "text": "Sets the value of an attribute .", "title": "", "metadata": ""}
{"_id": "482f85ae42f19f0db1697216e2be5ab7", "text": "Pops the top frame off the frame stack .", "title": "", "metadata": ""}
{"_id": "d58c5d9f382f270bef9eda080e335de4", "text": "Like xdo_get_focused_window but return the first ancestor - or - self window * having a property of WM_CLASS . This allows you to get the real or top - level - ish window having focus rather than something you may not expect to be the window having focused .", "title": "", "metadata": ""}
{"_id": "3664590d71f167768572eec8176ceed1", "text": "Get zero - indexed line from an open file - like .", "title": "", "metadata": ""}
{"_id": "fb600f3a554524dc665f65508c371549", "text": "Check if the device is on .", "title": "", "metadata": ""}
{"_id": "7cf8564ca71b68eb443a40d84110da6f", "text": "This will equal 124 for the V1 database .", "title": "", "metadata": ""}
{"_id": "c7b3e4a19d44d7485756d093f36a415f", "text": "Takes a list and returns the median .", "title": "", "metadata": ""}
{"_id": "18f44bd4576c0e01f3da72dac6979651", "text": "Returns a list of string names of all available GPUs", "title": "", "metadata": ""}
{"_id": "eb4406df5b9e3cbe7734035ef7c7e9a4", "text": "Display all available logging information .", "title": "", "metadata": ""}
{"_id": "e1c5ece31435645ad5ad96e2b6b0e4dc", "text": "Reload the cached localzone . You need to call this if the timezone has changed .", "title": "", "metadata": ""}
{"_id": "2235855b55b1c4e5ec06364f103068ef", "text": "Converts protobuf message to a JSON dictionary .", "title": "", "metadata": ""}
{"_id": "0e453632d3173eba8cb899aa787d0440", "text": "Weeks start are fixes at Monday for now .", "title": "", "metadata": ""}
{"_id": "ffd10db0c2bef276e74a52594d1554f7", "text": "Return a datetime object from an isoformat string .", "title": "", "metadata": ""}
{"_id": "a1c5e770a848865f5b1b5cc04b4c47ab", "text": "Retries the passed function 3 times before failing", "title": "", "metadata": ""}
{"_id": "e3af3e1c71b0b176082ef492843897b4", "text": "Update only one property in the dict", "title": "", "metadata": ""}
{"_id": "83e941feb8fa6f519ae297264bf40ef0", "text": "Check if arguments are str type .", "title": "", "metadata": ""}
{"_id": "ddd8d90a6a4ffdff5a1e5d6b2c8ef14a", "text": "r Returns all local minima from an image . Parameters ---------- img : array_like The image . min_distance : integer The minimal distance between the minimas in voxels . If it is less only the lower minima is returned . Returns ------- indices : sequence List of all minima indices . values : sequence List of all minima values .", "title": "", "metadata": ""}
{"_id": "4cda538be981936234ddd8c323e34cae", "text": "Extract the archive .", "title": "", "metadata": ""}
{"_id": "491e01fcb0f1a9b60b4dfbd22d6344d5", "text": "Unlink the file handler association .", "title": "", "metadata": ""}
{"_id": "fc61e11aa3d5d2db444454d8300ad2a1", "text": "Get distance between pairs of lat - lon points", "title": "", "metadata": ""}
{"_id": "4a165a813ae28054811c2357ed14d91f", "text": "Qt slot when the window is closed .", "title": "", "metadata": ""}
{"_id": "718812fdfb64aa89b0246ad83c0a6a48", "text": "Recursively find size of a tree . Slow .", "title": "", "metadata": ""}
{"_id": "0575a09f3a40a1a1233d5bbd4c0137fc", "text": "Overloads iter ( condition ) and also for bit in condition . The values yielded by the iterator are True ( 1 ) False ( 0 ) or None ( # ) .", "title": "", "metadata": ""}
{"_id": "ab9a54317b95a659ce38a98f19f7cebe", "text": "Check to see if we are colliding with the player .", "title": "", "metadata": ""}
{"_id": "9ab84ac480190256dba304e6fc9f50b9", "text": "Declares that the double can only be called with the provided arguments .", "title": "", "metadata": ""}
{"_id": "c349eb7ab1bef66973068f771c8a6091", "text": "Convert the table to a structured NumPy array .", "title": "", "metadata": ""}
{"_id": "db8e7498eb496abfc898d8cfe84f101e", "text": "For every key value pair return the mapping for the equivalent value key pair", "title": "", "metadata": ""}
{"_id": "ff44217c90484cc9cbbeeb078b5cbe43", "text": "Returns A and B in y = Ax^B http : // mathworld . wolfram . com / LeastSquaresFittingPowerLaw . html", "title": "", "metadata": ""}
{"_id": "a10d0f91a00bffa40b28d27c7f0c22fc", "text": "Remove unsafe unicode characters from a piece of text .", "title": "", "metadata": ""}
{"_id": "a02e7197b7711de7497cf149c9838b63", "text": "Test whether text contains string or matches regex .", "title": "", "metadata": ""}
{"_id": "f5b49a96bfc9e8c91e0513169cc39f41", "text": "return the KL projection on the row constrints", "title": "", "metadata": ""}
{"_id": "b0fb0e49ff8a11f2ba26e27274907203", "text": "Return the type for the requested function", "title": "", "metadata": ""}
{"_id": "9c8ba6094eab51992b57b27a2b44f6aa", "text": "Case in - sensitive comparison of two strings . Required arguments : * first - The first string to compare . * second - The second string to compare .", "title": "", "metadata": ""}
{"_id": "6f69eb763520ca0816fc86b442a30756", "text": "Add a read_range primitive", "title": "", "metadata": ""}
{"_id": "18fb1a3cbb04660d586fa01440a48370", "text": "Return the index of the parent for a given index of the child . Unfortunately the name of the method has to be parent even though a more verbose name like parentIndex would avoid confusion about what parent actually is - an index or an item .", "title": "", "metadata": ""}
{"_id": "a513966f063e39e0878db0b7850972b5", "text": "Redirect stdout back to the original stdout .", "title": "", "metadata": ""}
{"_id": "50a8d0d243e673efa1b0d9ca03cc9d47", "text": "Run the given code line by line with printing as list of lines and return variable ans .", "title": "", "metadata": ""}
{"_id": "2674dba95b6ceb4717f374aa686f8b08", "text": "Setup the RAM buffer from the C ++ code .", "title": "", "metadata": ""}
{"_id": "5df708ddb64ffa6922d43fd82adab78e", "text": "convert a timedelta to seconds .", "title": "", "metadata": ""}
{"_id": "d21e62ef117015a23e60bd085f129d88", "text": "Pops a serialized attribute container from the list .", "title": "", "metadata": ""}
{"_id": "f05a660f502aef61decc1daaab6c345d", "text": "Convert a dictionary of arguments including __argv into a list for passing to the function .", "title": "", "metadata": ""}
{"_id": "2b313311fd214a3fc2e5daa85c307f02", "text": "Sets the caption_found and plot_found variables to False .", "title": "", "metadata": ""}
{"_id": "d818dfe13ae54dfbaf9b8c41ed4d0606", "text": "Read a string from a file - like object .", "title": "", "metadata": ""}
{"_id": "abeb414515fed270bde7c1c5b9f8c4ff", "text": "The full remote import path as used in import statements in . go source files .", "title": "", "metadata": ""}
{"_id": "e3cee1427d732c5587e82da1f7bb6887", "text": "Remove key from dict .", "title": "", "metadata": ""}
{"_id": "32852400ee71a668ab2dc890ee13d459", "text": "Sets cursor as beginning of next line .", "title": "", "metadata": ""}
{"_id": "abfd67c12b1b32146c0778a5f5553cbc", "text": "Converts all strings in a column to uppercase .", "title": "", "metadata": ""}
{"_id": "a1461d29c6b9b9f6bb53ffc2a92e7f5d", "text": "Wraps the dispatch method to add session support .", "title": "", "metadata": ""}
{"_id": "b4ab1943fc25b56d3001eecdfafb95c6", "text": "Check if we are on a Lyon machine", "title": "", "metadata": ""}
{"_id": "2ae4ecc164105c923c32fdb9eacad78e", "text": "Compute the i - th unfolding of a tensor .", "title": "", "metadata": ""}
{"_id": "77fe9fed9faee538bc81c3fc4b073139", "text": "updates the query context with this clauses values", "title": "", "metadata": ""}
{"_id": "1e95c58aa9d9dc975429ec6d316ca9c0", "text": "Get the X / Y coordinate limits for the full resulting image", "title": "", "metadata": ""}
{"_id": "a758619b593a1ecdc2709c54a282295f", "text": "Handle the mouse move event for a drag operation .", "title": "", "metadata": ""}
{"_id": "b8b975b88ecb3ca414459fcd7e1d15d3", "text": "Calculates the average price between two asset states .", "title": "", "metadata": ""}
{"_id": "fd920a03e5b5ca73317621d5b64a3382", "text": "Generate an empty texture in OpenGL", "title": "", "metadata": ""}
{"_id": "242a9fabf80974d0f57dd5a49375ad97", "text": "Cast DataArrays to np . float64 if they are of type np . float32 .", "title": "", "metadata": ""}
{"_id": "b9b9b61b9228e2ab2b4db0afb565d582", "text": "Returns current time as ISO8601 formatted string in the Zulu TZ", "title": "", "metadata": ""}
{"_id": "d6b013bc1f2947acf6665770df48aa94", "text": "Drops all of the worker output collections Args : None Returns : Nothing", "title": "", "metadata": ""}
{"_id": "74dfe1d0f42118412a8ed33b43ddae12", "text": "Returns the result of a number raised to a power", "title": "", "metadata": ""}
{"_id": "d973c14a5447b9f8b97770d4e5df0fe3", "text": "Execute init tasks for all components ( virtualenv pip ) .", "title": "", "metadata": ""}
{"_id": "af47c50b83286e929023a15ea6036734", "text": "Reshuffle the indicies of a bipartite matrix A [ ij kl ] - > A [ lj ki ] .", "title": "", "metadata": ""}
{"_id": "6d7c3112d501f9f4c7b37e2b30372e64", "text": "Universal indexing for numpy and pandas objects .", "title": "", "metadata": ""}
{"_id": "97729ef55e2a7dd2940a787436d7d6dd", "text": "Return type depend from both operand of the binary operation .", "title": "", "metadata": ""}
{"_id": "a1899fd9c2da4d599a1ff3972010dee2", "text": "Resets the iterator to the start .", "title": "", "metadata": ""}
{"_id": "2eaadbdbd1b787d516abb5e4ae2c7b76", "text": "Circular standard deviation", "title": "", "metadata": ""}
{"_id": "8fd5c4f450db61cc9ced9823b1a9b00d", "text": "Check element for required attributes . Raise NotValidXmlException on error .", "title": "", "metadata": ""}
{"_id": "932eb59308835851f573bfb253bf8dcd", "text": "Calculate the delay", "title": "", "metadata": ""}
{"_id": "8b1fa491dc8d54ec45b8144d0ee1d9f3", "text": "Takes a decimal price and rounds to a number of decimal places", "title": "", "metadata": ""}
{"_id": "cdb3462a7deb6925a318cb6e486012a3", "text": "Calculate the standard error of a .", "title": "", "metadata": ""}
{"_id": "d1efe2a4134c1b9d8e7b555ca5176e2f", "text": "Official way to get the extension of compiled files ( . pyc or . pyo )", "title": "", "metadata": ""}
{"_id": "f7fb47ca1532381585ae31a0a67b48ec", "text": "Args : args ( list | tuple | None ) : Arguments to represent separator ( str | unicode ) : Separator to use", "title": "", "metadata": ""}
{"_id": "386faa9acbd85b1e81ab6ed35576a158", "text": "Return the hash .", "title": "", "metadata": ""}
{"_id": "5fe68f20c11609f66f04cdab03471381", "text": "Whether this is a function parameter .", "title": "", "metadata": ""}
{"_id": "5f710df9eae77ade2a896f3960eac4d0", "text": "Get attribute from the target object", "title": "", "metadata": ""}
{"_id": "3d3d646eab7324bc6d246986f4d4ae3f", "text": "Test if array is an array of real numbers .", "title": "", "metadata": ""}
{"_id": "d2c2372311fe241eb3f5359f8153d006", "text": "Read a hdf5 file into a dictionary", "title": "", "metadata": ""}
{"_id": "51db41c3cf6f7ae276e30124ad36ea18", "text": "Uses the Unix ps program to see if a process is running .", "title": "", "metadata": ""}
{"_id": "75c4182d6724ceef2f40bb059b6790a1", "text": "Added because the Dropbox OAuth2 flow doesn t work when scope is passed in which is empty .", "title": "", "metadata": ""}
{"_id": "619f1d11d919e352345db18a9fe5b009", "text": "Stops the playing thread and close", "title": "", "metadata": ""}
{"_id": "ed4b17ff2dd40bab0fbfbe2aa50ce826", "text": "This is builtin in python2 but we have to roll our own on py3 .", "title": "", "metadata": ""}
{"_id": "c8287245e60b51d0bb0cb833e98f9c9d", "text": "Parses given YAML file .", "title": "", "metadata": ""}
{"_id": "e64b82619178a05fe8c7e969491c903a", "text": "Wrap an item in optional parentheses only applying them if necessary .", "title": "", "metadata": ""}
{"_id": "6c4f55f81ec51f6908921289f32f473c", "text": "Read the long description .", "title": "", "metadata": ""}
{"_id": "0b257d18e865b63144bb4be9feded0a6", "text": "search graph for cycle using DFS continuing from node path contains the list of visited nodes currently on the stack visited_nodes is the set of already visited nodes : param graph : : param node : : param path : : param visited_nodes : : return :", "title": "", "metadata": ""}
{"_id": "d2fd7fcbfc85632a3c955c99a43281be", "text": "Return the absolute value of a number .", "title": "", "metadata": ""}
{"_id": "99273b7ffb992d9f9be03ee4e7ae2c62", "text": "Check for valid instance name", "title": "", "metadata": ""}
{"_id": "83f7b844508b7a3922d5dceb408c017a", "text": "Initialize from iterable", "title": "", "metadata": ""}
{"_id": "61836980642c2ff8d426e021bf8d778d", "text": "Helper function to remove the links from the input text", "title": "", "metadata": ""}
{"_id": "e2be994a2411a0693cdbcbd97ce88487", "text": "Simultaneously replace multiple strigns in a string", "title": "", "metadata": ""}
{"_id": "92eef57af4b5656625f381e6b40f0cec", "text": "converts Synergy Timestamp for session to UTC zone seconds since epoch", "title": "", "metadata": ""}
{"_id": "52a2bc85bccbe4af322df1957ca45929", "text": "area () - > number", "title": "", "metadata": ""}
{"_id": "7e2d33d912087a4614521f55c481b915", "text": "Construct a single page PDF from the provided page in memory", "title": "", "metadata": ""}
{"_id": "538846cfb2fecab4b94307b3a95c8e53", "text": "Return evidence codes in order shown in code2name .", "title": "", "metadata": ""}
{"_id": "dbd1a4a88cfb9bc399fec29a62192807", "text": "Drops ( deletes ) a column from an existing table .", "title": "", "metadata": ""}
{"_id": "8ca6f3ad9616b967f4c89e3513f62d45", "text": "A Python decorator for printing out the execution time for a function .", "title": "", "metadata": ""}
{"_id": "29adae60c2b42c9bdceb6fa5ada029cd", "text": "Returns True if all sequences in the list have the same length .", "title": "", "metadata": ""}
{"_id": "5e1ab4df9e8ce03b73adc075467ca74f", "text": "Handle interactive exit .", "title": "", "metadata": ""}
{"_id": "08fccea66347ba9a43aa044067fb5850", "text": "Return True if dtype is a real floating point type .", "title": "", "metadata": ""}
{"_id": "5cc5640c12064d474e132613d9bdb8b2", "text": "Set focus to next item in sequence", "title": "", "metadata": ""}
{"_id": "37200735ced7c42377011cc87091634d", "text": "Convert a ctypes float pointer array to a numpy array .", "title": "", "metadata": ""}
{"_id": "f30f7f49c42fa9549e98524c76bced14", "text": "Crazy set of hyperparameters to test memory optimizations .", "title": "", "metadata": ""}
{"_id": "ec68c1fa6dd2594346012cb082dc9cc1", "text": "Select rows where the given field is not a member of the given value .", "title": "", "metadata": ""}
{"_id": "1ef869e304a98d8370ec86434193568f", "text": "Register a callback to be invoked when a new device appears .", "title": "", "metadata": ""}
{"_id": "8ef81df0a238ded927d7d2ba7b627354", "text": "Return a new Image instance with the given size .", "title": "", "metadata": ""}
{"_id": "d3c27ebe599646877afda2dcb453c589", "text": "Create all your database objects ( SQLAlchemy specific ) .", "title": "", "metadata": ""}
{"_id": "bf991f5fb725b0f9c0c624248e376cb0", "text": "Decorator to make sure that user is root .", "title": "", "metadata": ""}
{"_id": "8c46e965fd8ff132f48525ed1e74aec5", "text": "Safely convert a single number to integer .", "title": "", "metadata": ""}
{"_id": "9a11b24d886ece47d966c4f1b6cfc34f", "text": "Return the indices of all the val in m", "title": "", "metadata": ""}
{"_id": "d629e29e345258ff5dce4cb1a5088c42", "text": "Quick way to read a file content .", "title": "", "metadata": ""}
{"_id": "e1ae2dcfe5ab32f690452b9666895fe6", "text": "Insert a new row in the Series .", "title": "", "metadata": ""}
{"_id": "9b2eff8c32bcc9c056f3bd056ac0c87b", "text": "Wrap the text on the given line length .", "title": "", "metadata": ""}
{"_id": "6147a85952fb68d5142eecad1a6ed599", "text": "Attempts to retrieve an item from the queue Q . If Q is empty None is returned . Blocks for timeout seconds in case the queue is empty so don t use this method for speedy retrieval of multiple items ( use get_all_from_queue for that ) .", "title": "", "metadata": ""}
{"_id": "6b24221b2e66fc683bf578275a49005f", "text": "Return the md5 hash of the given file - object", "title": "", "metadata": ""}
{"_id": "a007d00eb9d9ada6446b817622e2e7aa", "text": "Checks for an empty image .", "title": "", "metadata": ""}
{"_id": "7038df566937b4d83bf1754cdc546524", "text": "Return true if given node is inside lambda", "title": "", "metadata": ""}
{"_id": "34b399f14a2fef678ba7e82e81d6d52c", "text": "Return a new Vec2 with x and y from vec and multiplied by amount .", "title": "", "metadata": ""}
{"_id": "719f346e6bada3d4b47eb922badbb16f", "text": "Read the specified pin and return HIGH / true if the pin is pulled high or LOW / false if pulled low .", "title": "", "metadata": ""}
{"_id": "887cef488e055436c41b228b4fab8b0f", "text": "If file is locked then terminate program else lock file .", "title": "", "metadata": ""}
{"_id": "ee27612cddf94a2654e3dfec6a007718", "text": "Returns the non - sequence features from the provided example .", "title": "", "metadata": ""}
{"_id": "451ebc4479380eda3a56f3dba92b5e8d", "text": "Are two SQLAlchemy columns are equal? Checks based on :", "title": "", "metadata": ""}
{"_id": "1680c5d35976c1b937af6fa13282ae25", "text": "Takes an array add indentation to each entry and prints it .", "title": "", "metadata": ""}
{"_id": "db17f38bef34b80e9a51274515da6b7d", "text": "Return physical memory usage ( float ) Requires the cross - platform psutil ( > = v0 . 3 ) library ( https : // github . com / giampaolo / psutil )", "title": "", "metadata": ""}
{"_id": "5f634fb566a5b0270e4c183a6fd9865d", "text": "Gets the process ID that the specified window belongs to", "title": "", "metadata": ""}
{"_id": "5248991628cd43a3fac5f6d5ec9aeec2", "text": "Perform Z - Normalization on each numeric column of the given table .", "title": "", "metadata": ""}
{"_id": "55ed6b597e5c5f43708b88ce185f2f78", "text": "Returns a datetime object of a given timestamp ( in UTC ) .", "title": "", "metadata": ""}
{"_id": "e22bf9748b51e2cc57ab161f71a26f7a", "text": "shows JSON indented representation of d", "title": "", "metadata": ""}
{"_id": "a8c7b690a957a017c4acb663ff5e85e9", "text": "convert naive datetime to timezone - aware datetime", "title": "", "metadata": ""}
{"_id": "3512d23dca43ed834a427c3a757282b9", "text": "Improve deepcopy speed .", "title": "", "metadata": ""}
{"_id": "99ba264e4dc21e02d05934519f3a8cb6", "text": "Add a label to the x - axis .", "title": "", "metadata": ""}
{"_id": "14c235b3c7e59131e183a620d26089c8", "text": "Create a sympy . Symbol with positive and integer assumptions .", "title": "", "metadata": ""}
{"_id": "1781d83c73a47720032325b7098c2604", "text": "Returns an empty QuerySet .", "title": "", "metadata": ""}
{"_id": "f3a17718477e0e166e111d3466c025f8", "text": "Replacer oslo_config . cfg . ConfigParser . parse for in - memory cfg .", "title": "", "metadata": ""}
{"_id": "27c3918ec64bd61eec0ae88af718e72f", "text": "Resizes the given image to fit inside a box of the given size .", "title": "", "metadata": ""}
{"_id": "2c9ddb9e18fc677888f9097afbc202b3", "text": "wraps ( instancemethod ) returns a function not an instancemethod so its repr () is all messed up ; we want the original repr to show up in the logs therefore we do this trick", "title": "", "metadata": ""}
{"_id": "a337cb0b0b44ac0aaf263fc246673370", "text": "Convert a timestamp string into a microseconds value : param timestamp : return time in microseconds", "title": "", "metadata": ""}
{"_id": "349f957c118954fc7b120da7a466e445", "text": "Gets a global variable given its name .", "title": "", "metadata": ""}
{"_id": "b8074bbe1b76ffef6b640bef25433ab1", "text": "Runs the function associated with the given MenuEntry .", "title": "", "metadata": ""}
{"_id": "f0f3adab698d22c3307a77ce7b7bf7e9", "text": "Initializes an stdin input reader .", "title": "", "metadata": ""}
{"_id": "d2f1d0809d10ba75580ef00c59419461", "text": "Sets the cursor to the desired position .", "title": "", "metadata": ""}
{"_id": "cba73154d35dfde86f25cd1f460b433c", "text": "Returns the size of a file - like object .", "title": "", "metadata": ""}
{"_id": "0a3d8d262272a608133e29da20631b9f", "text": "Executes SQL ; returns list of first values of each row .", "title": "", "metadata": ""}
{"_id": "9fdf985b8a5a4710092c67f494c7aae1", "text": "Block until all jobs in the ThreadPool are finished . Beware that this can make the program run into a deadlock if another thread adds new jobs to the pool!", "title": "", "metadata": ""}
{"_id": "6edd63c1788e657ab6b223aab92943c7", "text": "Push thing to the stack writing the thing to memory and adjusting the stack pointer .", "title": "", "metadata": ""}
{"_id": "83d3be2fb20976ab0e59fb0c9a98482d", "text": "Will copy the selected ( upper or lower ) triangle of a square matrix to the opposite side so that the matrix is symmetrical . Alters in place .", "title": "", "metadata": ""}
{"_id": "8738315ce9e9d8a554d21f5c775eb05b", "text": "return the higher parent which is not an AssignName Tuple or List node", "title": "", "metadata": ""}
{"_id": "85160727995f1f1906560711e2f41721", "text": "Iterates through each image in the given directory . ( not recursive ) : param dir_path : Directory path where images files are present : return : Iterator to iterate through image files", "title": "", "metadata": ""}
{"_id": "ae7fc52031b00281ab4df4f80adc1bff", "text": "Check that the image width is superior to width", "title": "", "metadata": ""}
{"_id": "305e474fb34e801d80e8afe600ac9051", "text": "Determine if unicode string only contains ASCII characters .", "title": "", "metadata": ""}
{"_id": "0ea3ff70e9c44ae22efc175b1c6d28a5", "text": "Resets the namespace by removing all names defined by the user", "title": "", "metadata": ""}
{"_id": "ddf22488c6379a9c9186b47973040c37", "text": "Returns a field descriptor by field name .", "title": "", "metadata": ""}
{"_id": "0ae05c947f84384af496c2a2a3288f29", "text": "Saves the Jupyter work_notebook to write_file", "title": "", "metadata": ""}
{"_id": "f03c61392b9868bd9e3af254e86e69c5", "text": "Set the default value for this key . Default only used when no value is provided by the user via arg config or env .", "title": "", "metadata": ""}
{"_id": "45cd2cf4d0ebc443913d6d09608a8a95", "text": "Return return information indicated in docstring .", "title": "", "metadata": ""}
{"_id": "17b7061859f0160b21dba268022fbf35", "text": "Calculates factorial iteratively . If mod is not None then return ( n! % mod ) Time Complexity - O ( n )", "title": "", "metadata": ""}
{"_id": "53e71176402c2af171a133b44fa7911a", "text": "From : http : // stackoverflow . com / questions / 13062300 / convert - a - dict - to - sorted - dict - in - python", "title": "", "metadata": ""}
{"_id": "f10526bf00e4530cd2eef1169e778853", "text": "convert iterable object into numpy array", "title": "", "metadata": ""}
{"_id": "3e70786a6b6d9a350f7bac482c83552a", "text": "Return the * bipartite * ( rectangular ) distance matrix between the observations in the first and the second list .", "title": "", "metadata": ""}
{"_id": "4c1945cb5ad4004613437e607a30934b", "text": "Asserts if a given values implements a valid iterable interface .", "title": "", "metadata": ""}
{"_id": "09e7ee3a318cdf0913c0040914bff098", "text": "Trick sphinx into displaying the desired module in these objects documentation .", "title": "", "metadata": ""}
{"_id": "194ee590d30b1bf65033f2ab47564529", "text": "Returns the last number_of_bytes of filename", "title": "", "metadata": ""}
{"_id": "6db34444585f825f050eb55f80fa1742", "text": "Stop logging to logfile and console .", "title": "", "metadata": ""}
{"_id": "d8b838d283e620bb7b6489b1ba75bc08", "text": "Determine the index of the point just before two lines with common x values .", "title": "", "metadata": ""}
{"_id": "857954a94f93f4e519e7ed9709592e47", "text": "Return the angle between vectors a and b in degrees .", "title": "", "metadata": ""}
{"_id": "03e3080a91b47c5368bec760ca85bcf9", "text": "Send an email to this User .", "title": "", "metadata": ""}
{"_id": "c7dd06f75a1c7f1bc3614443fda562a6", "text": "Match and yield all the tokens of the input string .", "title": "", "metadata": ""}
{"_id": "06c9902dfb8f454f117b3fdc63baeffb", "text": "Ensure the widget is shown . Calling this method will also set the widget visibility to True .", "title": "", "metadata": ""}
{"_id": "a14307a9d9e4ecb4b5afb725bbcc0866", "text": "Get the MIME type from the Content - Type header value or application / octet - stream if not found .", "title": "", "metadata": ""}
{"_id": "807233289bfd499ecb66e7abbf10a17f", "text": "Retrieves a framework or system property . As framework properties don t change while it s running this method don t need to be protected .", "title": "", "metadata": ""}
{"_id": "fb7693f4699f6b2babf5a984881b4592", "text": "Like np . unique ( item_list return_inverse = True )", "title": "", "metadata": ""}
{"_id": "a778561c7e252770cd956bc1e42646d7", "text": "Assigns a parameter value to matching instructions in - place .", "title": "", "metadata": ""}
{"_id": "f59d4b0a60c9ffc31733891533fdadf3", "text": "Select rows of length n .", "title": "", "metadata": ""}
{"_id": "163992273132628746ddc5fe7df34ed8", "text": "Interpolate linearly variable x in rangeX onto rangeY .", "title": "", "metadata": ""}
{"_id": "538218f9b3adb96fe7b910c315d58a51", "text": "Pull the value from the cookiejar .", "title": "", "metadata": ""}
{"_id": "501d64ee975b0383db8b7e0113ab3bd6", "text": "Helps remove extraneous whitespace from the lines of a file", "title": "", "metadata": ""}
{"_id": "6b77e9b80a6cfc09166a289151c349ba", "text": "reference to a parent class which contains this class and defined within a namespace", "title": "", "metadata": ""}
{"_id": "a4df0c0b4d26fa0f426726fc8f1fd1bf", "text": "SPSS . sav files to Pandas DataFrame through Rpy2", "title": "", "metadata": ""}
{"_id": "be3dbde9dbab3bed83e05affb7e1aa96", "text": "Checks if the input data is a Swagger document", "title": "", "metadata": ""}
{"_id": "4cb1f58143d30d0cf7750e04d7beaf28", "text": "implementation of safe dumper using Ordered Dict Yaml Dumper", "title": "", "metadata": ""}
{"_id": "8e942afc86428d90093ee8a9fb61a410", "text": "Stop stream .", "title": "", "metadata": ""}
{"_id": "6ed71ae57c30630ef6f176eb0cb80306", "text": "Click the element matching the CSS selector .", "title": "", "metadata": ""}
{"_id": "67d3f2eb2aba3452fe37b749a672df38", "text": "Constructs wrapper for general index creation and deletion", "title": "", "metadata": ""}
{"_id": "d102ac110cd6155400fc1373d27a67d7", "text": "Use all decompressor possible to make the stream", "title": "", "metadata": ""}
{"_id": "3c6e4bc0c3dfef198d4dbcaa2d351387", "text": "Check to see if the internet is on by pinging a set address . : param address : the IP or address to hit : return : a boolean - true if can be reached false if not .", "title": "", "metadata": ""}
{"_id": "b7a373def6e537028c4c41f97f680322", "text": "Define a new macro", "title": "", "metadata": ""}
{"_id": "1c73de735226a87b0bc285699824191c", "text": "py . test for replace_colon", "title": "", "metadata": ""}
{"_id": "9dcb540f8ecbf531bb3c72384e312148", "text": "Check the syntax of the given URL .", "title": "", "metadata": ""}
{"_id": "dbc175ba48d501665230794e0c534404", "text": "Print training time at end of training", "title": "", "metadata": ""}
{"_id": "0334bb90a101227ef64ad51af34dfc6e", "text": "Set visible property of ticklines and ticklabels of an axis to False", "title": "", "metadata": ""}
{"_id": "6bc0c56019c89ab8acc1be3298c5d2ab", "text": "Return an instance of RedisSet .", "title": "", "metadata": ""}
{"_id": "d6a6a3ab144a93feb111c2e99a5b672c", "text": "Load YAML from file .", "title": "", "metadata": ""}
{"_id": "d3546d042b3fa45b7a539f0f40aad0d1", "text": "Returns an active Redis client generated from the given database URL .", "title": "", "metadata": ""}
{"_id": "7e4bb0681154ec21f9ccd1c6dae50fa5", "text": "Subsystems used outside of any task .", "title": "", "metadata": ""}
{"_id": "00df74be7b8108104e501d072039750b", "text": "Return True if x == y and False otherwise .", "title": "", "metadata": ""}
{"_id": "caa75769ec4250b30c03c6d63c777de6", "text": "Checks if a key is valid and raises a ValueError if its not .", "title": "", "metadata": ""}
{"_id": "dbc3469619b30322fea48467b5320b2f", "text": "Get the file name from an url Parameters ---------- url : str", "title": "", "metadata": ""}
{"_id": "40874ae223ccdb4ab197d421974766e7", "text": "Print fatal errors that occurred during validation runs .", "title": "", "metadata": ""}
{"_id": "9408be4e5d9d409ae5ceb6949312cdcc", "text": "Expand a filesystem path that may or may not contain user / env vars .", "title": "", "metadata": ""}
{"_id": "c88adf256d819889d94eccdf0c230fe5", "text": "decorator to convert a * args method to one taking a iterable", "title": "", "metadata": ""}
{"_id": "0fe27a7282e17c63f7c5fd64a5ab05e0", "text": "Last time step available .", "title": "", "metadata": ""}
{"_id": "cc85a93740868d4370e7a12c82cfa470", "text": "Returns True if ALL of the given argument are AST nodes of the given token ( e . g . BINARY )", "title": "", "metadata": ""}
{"_id": "36836811433eafd0f9f001491970f19f", "text": "Retrieve a User object by ID .", "title": "", "metadata": ""}
{"_id": "33213f2f914517ae8024c88d278a9563", "text": "Get all instances matching a tag .", "title": "", "metadata": ""}
{"_id": "45dd1afe3261395f7ba78855aafb2397", "text": "Establish tunnel connection early because otherwise httplib would improperly set Host : header to proxy s IP : port .", "title": "", "metadata": ""}
{"_id": "6c4ef4ca62bc53d4a46c5b9d730c4246", "text": "Register Flask blueprints .", "title": "", "metadata": ""}
{"_id": "e3a4b19c13e7f9f50b937052438fcde4", "text": "Walk the media / static directories and syncs files to S3", "title": "", "metadata": ""}
{"_id": "ff2d68b68d202ee1903331b2481f610d", "text": "Remove any duplicate item preserving order", "title": "", "metadata": ""}
{"_id": "e4579d25ff9578e7cf3ca2bfe1f59a2b", "text": "Returns a boolean indicating if the attribute name is valid or not", "title": "", "metadata": ""}
{"_id": "26bf7654e94e3b58d169cc34c3318cda", "text": "Internal function to overcome pickling problem in python2 .", "title": "", "metadata": ""}
{"_id": "db183445e6b61a9aeddf725a0e987ccd", "text": "Load logger config from file Keyword arguments : filename -- configuration filename ( Default : logging . ini ) * args -- options passed to fileConfig ** kwargs -- options passed to fileConfigg", "title": "", "metadata": ""}
{"_id": "173243ab9affd2b0843750f16645a9aa", "text": "Calculate a delay to retry using an exponential backoff algorithm .", "title": "", "metadata": ""}
{"_id": "4edc963db05b847fe1295d1a8730c045", "text": "r Return the bounding box incorporating all non - zero values in the image . Parameters ---------- img : array_like An array containing non - zero objects . Returns ------- bbox : a list of slicer objects defining the bounding box", "title": "", "metadata": ""}
{"_id": "ae522f5e072e3c077c8be7d0673b1c60", "text": "Removes an object / rabalist from registery . This is useful if you want to allow the garbage collector to free the memory taken by the objects you ve already loaded . Be careful might cause some discrepenties in your scripts . For objects cascades to free the registeries of related rabalists also", "title": "", "metadata": ""}
{"_id": "fa8c7fd9b1d6d5a9f018c69e409f3870", "text": "Extracts the subject line from an EmailMessage object .", "title": "", "metadata": ""}
{"_id": "acc05713d706962ba16a3c09fc39b2da", "text": "Calculates a Spearman rank - order correlation coefficient . Taken from Heiman s Basic Statistics for the Behav . Sci ( 1st ) p . 192 .", "title": "", "metadata": ""}
{"_id": "c05330ac4750852c6c643acff08b1293", "text": "Verify Django 1 . 11 is present if Python 2 . 7 is active", "title": "", "metadata": ""}
{"_id": "499b122bbda9d1d414984e70f1c682b3", "text": "Determine if two line segments meet .", "title": "", "metadata": ""}
{"_id": "0645e31606c0fe20b8ae5f1815e822d6", "text": "get a collection of records by table name . returns a dict ( the json map ) for python 3 . 4", "title": "", "metadata": ""}
{"_id": "9b72856f3ff44067b4307a1f82708e68", "text": "Transform a ( multidimensional ) variable access to a flattend sympy expression .", "title": "", "metadata": ""}
{"_id": "a06c7acf20f938aec1434c1581e85099", "text": "clear all files that were to be injected", "title": "", "metadata": ""}
{"_id": "72a95b357a60d1a5a2153f7a1e78d8bc", "text": "Returns a list with the order that features requested appear in dataset", "title": "", "metadata": ""}
{"_id": "1c0b9e7841c5741bd2556f5e583e0724", "text": "Run a command and return its stdout / stderr as a string .", "title": "", "metadata": ""}
{"_id": "d9efec48c722c827999a7876bb62e431", "text": "Convert CamelCase to lower_and_underscore .", "title": "", "metadata": ""}
{"_id": "e20ed859a085bbebaf321e789cf72fda", "text": "Alternate name for filter so as to not collide with the built - in python filter operator .", "title": "", "metadata": ""}
{"_id": "368ce128484d6a73b702b8f4222d31ef", "text": "Completer function for Python s readline / libedit implementation .", "title": "", "metadata": ""}
{"_id": "d4b33031ee7fa9e18aa7ecfeb59e1010", "text": "Return a Status instance from its string representation .", "title": "", "metadata": ""}
{"_id": "0344258d29bb6aff369d37031cf86a62", "text": "Returns a symbolic fourier series of order n .", "title": "", "metadata": ""}
{"_id": "bcc941eddc38f53b332c0abe1644080d", "text": "Return a DataFrame with the duplicated values of the column col_name in df .", "title": "", "metadata": ""}
{"_id": "413ae49cfcbde02ee3ebe728dcf9e8aa", "text": "Increment ( or add ) numeric suffix to identifier .", "title": "", "metadata": ""}
{"_id": "80a917376fd636c6da236da195005752", "text": "Write a numpy array to YAML .", "title": "", "metadata": ""}
{"_id": "d1aef387f64c88c791d11dc1ae29df20", "text": "Round x and y down to integers .", "title": "", "metadata": ""}
{"_id": "f3894417b4b9cae1df7696fc8f16dd06", "text": "Simple function to add two numbers", "title": "", "metadata": ""}
{"_id": "2dbaafc678784f201c7c2bc8b82ad0ff", "text": "True if specified value exists in int enum ; otherwise False .", "title": "", "metadata": ""}
{"_id": "8e12b4fad641a216ffd75aa176853243", "text": "Increment a metric by value .", "title": "", "metadata": ""}
{"_id": "a16368c4b0012b0117554953d568ee6b", "text": "Deletes an object ( line triangle image etc ) from the drawing .", "title": "", "metadata": ""}
{"_id": "7cff99d826ef49b723766a26418408ab", "text": "Multiprocess mapping the given function on the given iterable .", "title": "", "metadata": ""}
{"_id": "5e570fb1967909ac4022284ffc1be5db", "text": "Returns a list of PIDs currently running on the system .", "title": "", "metadata": ""}
{"_id": "1042038bc61812839ef8d2bb9a9ced21", "text": "Inserts a horizontal ( commented ) line tot the generated code .", "title": "", "metadata": ""}
{"_id": "3ea3c1343d71532f6eb9feab3688f8ec", "text": "Lists names of all blobs by their prefix .", "title": "", "metadata": ""}
{"_id": "71f60a164b1f50dc563202377908915a", "text": "Strip tweet message .", "title": "", "metadata": ""}
{"_id": "fd154641b3399606572e10dbdbd55b68", "text": "remove the last . in the string it it ends with a . for the url structure must follow the flask routing format it should be / model / method instead of / model / method /", "title": "", "metadata": ""}
{"_id": "a391fefef7c1aff96bcc935a6cbd6a11", "text": "Raise a new exception using the preserved traceback of the last one .", "title": "", "metadata": ""}
{"_id": "63be6a1f446f5f573f7048e02e2da3a5", "text": "Return ctypes . Array an iterable array of int values in argb .", "title": "", "metadata": ""}
{"_id": "777d5bec1a157c680280176fb7c1b25d", "text": "The value of Last - Modified HTTP header or None .", "title": "", "metadata": ""}
{"_id": "a991fc66e94fd079fef304aa00b8b694", "text": "Handle the + operator .", "title": "", "metadata": ""}
{"_id": "db0ec3b3962db9c47bc7d39c0eb4fb6d", "text": "Return all child objects in nested dict .", "title": "", "metadata": ""}
{"_id": "b6a704ca375387abab05d59d23603ef2", "text": "Returns whether this is a ( non - quantized real ) floating point type .", "title": "", "metadata": ""}
{"_id": "fb2bb21759b186096a77430a39737b63", "text": "Download and unzip from url .", "title": "", "metadata": ""}
{"_id": "30400881e8a3d1a008117d58d4280af0", "text": "Not recommended for use on large lists due to time complexity but it works", "title": "", "metadata": ""}
{"_id": "02178fc21a47c43b55fe227d640c8242", "text": "Print message via subprocess . call function .", "title": "", "metadata": ""}
{"_id": "dc6d53c2362cc3b7cff7ace22c92ebf5", "text": "Move the turtle forward .", "title": "", "metadata": ""}
{"_id": "6b450d08e3aa15dc2ea8fae8390e6b3c", "text": "Convert str_value to an int or a float depending on the numeric value represented by str_value .", "title": "", "metadata": ""}
{"_id": "084dbbaee89d663d86cf4bc8fee9ca75", "text": "Flatten all dimensions of a except the last .", "title": "", "metadata": ""}
{"_id": "3da7a4f309851c2bd1d8941ef0d0f32d", "text": "Align the position in the file to the next block of specified size", "title": "", "metadata": ""}
{"_id": "7f2e95e266b6180f55c9afe39e88b4eb", "text": "Send a POST request", "title": "", "metadata": ""}
{"_id": "6c92a94c5e85ce22094c2151c55b3bfb", "text": "Yield successive distinct permutations of the elements in * iterable * .", "title": "", "metadata": ""}
{"_id": "2dff36d8ac04bffcfe4275b0d7d78577", "text": "Return receiver s content type .", "title": "", "metadata": ""}
{"_id": "ba65c03c7e22d8c70649b9e7288194fe", "text": "Gets the user enter max and min values of where the raster points should appear on the y - axis", "title": "", "metadata": ""}
{"_id": "f063226b007fae536aed31a9642cbf60", "text": "Determine if rollover should occur .", "title": "", "metadata": ""}
{"_id": "eef0a333facc1aa84427f006ba9d9ca0", "text": "stack_as_string", "title": "", "metadata": ""}
{"_id": "981bafbbdc50218bb56e3a2a2aadc764", "text": "indents paragraphs of text for rst formatting", "title": "", "metadata": ""}
{"_id": "8033b30ebc1d0c4e4341b49db3efefe3", "text": "Deletes an environment", "title": "", "metadata": ""}
{"_id": "fc700a947067980c15538589c29b6549", "text": "Call this method from a function that defines a literal shader string as the body argument . Dresses up a shader string in three ways : 1 ) Insert #version at the top 2 ) Insert #line number declaration 3 ) un - indents The line number information can help debug glsl compile errors . The version string needs to be the very first characters in the shader which can be distracting requiring backslashes or other tricks . The unindenting allows you to type the shader code at a pleasing indent level in your python method while still creating an unindented GLSL string at the end .", "title": "", "metadata": ""}
{"_id": "0bf57966ead0f444e8f2edae42e2c018", "text": "Returns a dictionary object with keys that are 2tuples represnting a point .", "title": "", "metadata": ""}
{"_id": "b443c4e863b6c513f9061a549e008f3c", "text": "Mark the occurrence of a given number of events .", "title": "", "metadata": ""}
{"_id": "a74dd17b3361f7314afb4c7feed45d9f", "text": "Remove element e from model", "title": "", "metadata": ""}
{"_id": "f7f43c6687d7f8f9d2e4307a46ab96e1", "text": "Parse HTTP status line return status ( int ) and reason .", "title": "", "metadata": ""}
{"_id": "67b074707a20962f890ae5a3679d6383", "text": "Fast %Y - %m - %d parsing .", "title": "", "metadata": ""}
{"_id": "eea88572c5b8bd7eaa07d5926b94659a", "text": "Call win32 API to refresh the whole Window .", "title": "", "metadata": ""}
{"_id": "26ef4c7ad4be57c1900dabef2c0057fb", "text": "Filter out duplicate items from an iterable", "title": "", "metadata": ""}
{"_id": "39135786738ace2f28a34ee575519851", "text": "If block = False ( the default ) die hard and fast if another process has already grabbed the lock for this file .", "title": "", "metadata": ""}
{"_id": "82932371d0573c56e411fcb9459ffad6", "text": "Returns a proper string that should work in both Py3 / Py2", "title": "", "metadata": ""}
{"_id": "b4e2f79c8fc6be0278c0ea4276adbb48", "text": "Return system CPU times as a namedtuple .", "title": "", "metadata": ""}
{"_id": "93e674dbc870fb7b05f734d461a95927", "text": "First order phase correction .", "title": "", "metadata": ""}
{"_id": "c05a50bb9f16c6dfc89773abbd3a77da", "text": "Instantiate the given extension class and register as a public attribute of the given base .", "title": "", "metadata": ""}
{"_id": "0b661c0ba67950959f4a9f6d22ad097e", "text": "Swap the methods atom to remove method with key .", "title": "", "metadata": ""}
{"_id": "05f6effca693e1a1c4f4b3f4d46eeb26", "text": "Convert a model s verbose name to the model class . This allows us to use the models verbose name in steps .", "title": "", "metadata": ""}
{"_id": "1745f3b121f6c2a05045db0929eb6a58", "text": "Gets latest Dusty binary version using the GitHub api", "title": "", "metadata": ""}
{"_id": "3bb0eb4cc03a8aada333d6127610e382", "text": "Return base64 encoded binarystring .", "title": "", "metadata": ""}
{"_id": "f64c9fa5bfb90a7268602db865aebd2c", "text": "converts a csv string into a list", "title": "", "metadata": ""}
{"_id": "494db5dfdc9303d89b98f3df6d694e09", "text": "Convert camel case string to snake case", "title": "", "metadata": ""}
{"_id": "f451004f58214229964a4cb5f7fe2332", "text": "Check whether the package is registered on pypi", "title": "", "metadata": ""}
{"_id": "d8720de8b7902f0d69f5ea10fb9be6d7", "text": "Sanity check for csv parser : param row : param length : return : None", "title": "", "metadata": ""}
{"_id": "23e8decb75aee197aa2cbe02e08ca736", "text": "Get the contents of an object stored in S3 as string .", "title": "", "metadata": ""}
{"_id": "cce9dd6f377404816bdf873466366db4", "text": "Register service into the system . Called by Services .", "title": "", "metadata": ""}
{"_id": "7312a913d7db90d0dd5eb02d2c62082a", "text": "Identify clusters using K - Means algorithm .", "title": "", "metadata": ""}
{"_id": "f7cff6c204d4126cf7422f36d32c6020", "text": "Plots a graph in graphviz dot notation .", "title": "", "metadata": ""}
{"_id": "3a88facc5dcf0a3979012f2be2153674", "text": "Test if the argument is a real number ( float or integer ) .", "title": "", "metadata": ""}
{"_id": "efd8f9b173b8150f19da858eaebf5fe0", "text": "iterate through the noun phrases", "title": "", "metadata": ""}
{"_id": "98df8bcd43fda7b99d8454eddb3e25ce", "text": "Yield compressed chunks from a data array", "title": "", "metadata": ""}
{"_id": "6d956283729a9cd26b1216ef5ad22b55", "text": "Create parametric ellipse from 200 points .", "title": "", "metadata": ""}
{"_id": "4c6f5f73d87183a65e57a466ae54bc87", "text": "tool to ensure input and output data have the same number of samples", "title": "", "metadata": ""}
{"_id": "8806595979cbb985cc156854d90fb98e", "text": "Takes input from user . Works for Python 2 and 3 .", "title": "", "metadata": ""}
{"_id": "7ae342a354cefcfe96d869895b56864d", "text": "Create the toolkit widget for the proxy object .", "title": "", "metadata": ""}
{"_id": "459feec62a4bc8d48c0dd2d8e14e455d", "text": "Return the receiver s contribution to tree diagram .", "title": "", "metadata": ""}
{"_id": "7b9b4db91c4f747be0caf94f420aeb8f", "text": "guess_file_class : determines what file the content is Args : filepath ( str ) : filepath of file to check Returns : string indicating file s class", "title": "", "metadata": ""}
{"_id": "be75a54ebda79b727d07dfcad054a9ea", "text": ": obj : numpy . ndarray : Vector representation for this camera .", "title": "", "metadata": ""}
{"_id": "90902e32bba7f3538f7321904f094cd5", "text": "Determines the height and width of the console window", "title": "", "metadata": ""}
{"_id": "ec90ffda624d0a80459b276cd92e82f4", "text": "Returns a copy of the list without duplicates .", "title": "", "metadata": ""}
{"_id": "2e6f22680ffef25ded696115145d5e4a", "text": "Convert instances of textx types and match rules to python types .", "title": "", "metadata": ""}
{"_id": "c80ae95040f8a4c87bc569901d452bfd", "text": "Set the terminal window size of the child tty .", "title": "", "metadata": ""}
{"_id": "9cd5c6d67648cf058fcdd43613d8a37a", "text": "Returns its parameter as an integer or raises django . forms . ValidationError .", "title": "", "metadata": ""}
{"_id": "47cbc495f3afcbd8a2f68b57f5543bb9", "text": "Draws a representation of a random forest in IPython . Parameters : ----------- t : The tree you wish to draw df : The data used to train the tree . This is used to get the names of the features .", "title": "", "metadata": ""}
{"_id": "ebb061953c0454b2c8ee7b0ac615ebcd", "text": "Optional", "title": "", "metadata": ""}
{"_id": "6a8984442c766bd6304282673053d027", "text": "Run the tests .", "title": "", "metadata": ""}
{"_id": "bc7f02e887ef3dc940c0c4cd8edb89c7", "text": "Return the size in bytes .", "title": "", "metadata": ""}
{"_id": "8982cb4a85a83deb6df5f23ac21c0beb", "text": "Perform singular value decomposition for dimensionality reduction of the input matrix .", "title": "", "metadata": ""}
{"_id": "9fcecd7314e4855f549c851cc4682ec5", "text": "Disconnect ( logout ) service instance", "title": "", "metadata": ""}
{"_id": "6f290d4e4fa976c17e00c1b67b860439", "text": "Calculate the distance between two Vectors", "title": "", "metadata": ""}
{"_id": "ca5189e9c0ada2056ab0fba74947d585", "text": "Wipes compiled and cached python files . To simulate : pynt clean [ dry_run = y ]", "title": "", "metadata": ""}
{"_id": "7198c2a1072cd334a46eaa90864979a9", "text": "Read a list of indexes .", "title": "", "metadata": ""}
{"_id": "fdab16541db8d52a7dd7a20ec11e8101", "text": "Get all groups of a user", "title": "", "metadata": ""}
{"_id": "f9a67b61bd471672b3480e03b5f5a5b2", "text": "Get a similarity matrix of % of shared sequence", "title": "", "metadata": ""}
{"_id": "2a963ca546906e6479dc0ec293dd3426", "text": "Computes SSIM .", "title": "", "metadata": ""}
{"_id": "336c8aad5fd01bbbf4fa5bcfb3b8687e", "text": "The maximum integer value of a value - set . It is only defined when there is exactly one region .", "title": "", "metadata": ""}
{"_id": "18a15a6f78b5e2cead7e685c99c3a5dc", "text": "Return the path from the root to node as a list of node names .", "title": "", "metadata": ""}
{"_id": "8d380c0017f53c15eaa8b9663293e6da", "text": "Bulk load docs", "title": "", "metadata": ""}
{"_id": "742c2a8e023a4446283099b0a5500c46", "text": "Call this to give this Widget the input focus .", "title": "", "metadata": ""}
{"_id": "5ad4d1ce17ef8278e43ddf3a23b7c4cb", "text": "Read and return a view of size bytes from memory starting at start_position .", "title": "", "metadata": ""}
{"_id": "ce95313a738c48391f1adbb5fdc97aa7", "text": "Fill file at", "title": "", "metadata": ""}
{"_id": "4469569f8c50edee1ec052c72e9b7604", "text": "Magic method dispatcher", "title": "", "metadata": ""}
{"_id": "a0b3f39bdd8c2e5e7eb58a2a816c1981", "text": "Test if a value is numeric .", "title": "", "metadata": ""}
{"_id": "c962e2fed1b545dd3e59f864c175c42c", "text": "Initialize .", "title": "", "metadata": ""}
{"_id": "e5e3bb0b4931b93f64e695c20a4890e5", "text": "Check if * path * is a directory", "title": "", "metadata": ""}
{"_id": "bdd6f80dc323f4d6d2e200273f2be002", "text": "Returns number of wraps around given method .", "title": "", "metadata": ""}
{"_id": "e6b435600b4ae9e3c95534b7b0c1b8c0", "text": "Constructs a FastbootCommands instance .", "title": "", "metadata": ""}
{"_id": "5d86d51f0f7d9e51b62a605733b48aac", "text": "Parse a JSON string and build an entity .", "title": "", "metadata": ""}
{"_id": "80d84d6f57ed9ab5a134d9a52298de8f", "text": "Clean the previous generated files .", "title": "", "metadata": ""}
{"_id": "89b4f4653ab1382069538961185b2ac0", "text": "Returns the element with the highest probability .", "title": "", "metadata": ""}
{"_id": "3a30456dd95b6c265e22c4179ee8287d", "text": "Write GML comment .", "title": "", "metadata": ""}
{"_id": "fc15e3da9ec7f481bab9261884164c7e", "text": "Returns whether the given platform is a Unix - like platform with the usual Unix filesystem . When the parameter is omitted it defaults to sys . platform", "title": "", "metadata": ""}
{"_id": "54fa5e8c5053dabd5345e3cdd4b5d738", "text": "Performs drag a element to another elmenet .", "title": "", "metadata": ""}
{"_id": "9e859b2267e5ea5c684e5dfb3d913ddf", "text": "Clears the console .", "title": "", "metadata": ""}
{"_id": "66e77b9a43ee585cf3206021c1926fb5", "text": "returns True if type represents C ++ array type False otherwise", "title": "", "metadata": ""}
{"_id": "1e51fc48d6447c167bc1d9398f05dd1a", "text": "Check that a binary operator is surrounded by exactly one space .", "title": "", "metadata": ""}
{"_id": "b26950f0436e570f6d9233effbed2426", "text": "Return True if the table * name * exists in the database .", "title": "", "metadata": ""}
{"_id": "2880ee81514c7e543bd166861a5e6fdc", "text": "Returns the Cython method header for methods without arguments except self .", "title": "", "metadata": ""}
{"_id": "2a11b3dc2cc0edfbb4d95cc90801646b", "text": "Test if value is an instance of float .", "title": "", "metadata": ""}
{"_id": "34ad0935bd0e09403dcdf7e36e23883a", "text": "Get the list of distinct values with preserving order .", "title": "", "metadata": ""}
{"_id": "4485bbd18664ac7b93af410b5cf5d7cf", "text": "Converts an dict to a Enum .", "title": "", "metadata": ""}
{"_id": "79789da08efc72791f363414f6e89181", "text": "Gather a list of proxies to use .", "title": "", "metadata": ""}
{"_id": "f990a4f37b9a489f549084c0f089bf32", "text": "Imports from javascript source file . globals is your globals ()", "title": "", "metadata": ""}
{"_id": "79fd8b079442952cea423e0b0065994e", "text": "Convert a vtk matrix to a numpy . ndarray", "title": "", "metadata": ""}
{"_id": "88c8479a0669d6b4f5edc45c81b7da1e", "text": "Calls a procedure .", "title": "", "metadata": ""}
{"_id": "55492ca841fba5ce16c69bf3102e442a", "text": "Build query and passes to Elasticsearch then returns the raw format returned .", "title": "", "metadata": ""}
{"_id": "720ac5abe38e125aaf894448db99dc29", "text": "Get the number of factor levels for each categorical column .", "title": "", "metadata": ""}
{"_id": "9df34094f2ca7b811beb4e03bf191919", "text": "Get the numpy dtype for the image", "title": "", "metadata": ""}
{"_id": "43c15ec4b20b124c897a41447b03986e", "text": "Gets path from query string", "title": "", "metadata": ""}
{"_id": "c89d52fc9b3385187ad86011df385277", "text": "Builds sphinx docs from a given directory .", "title": "", "metadata": ""}
{"_id": "6931c95c1b184d9beaa5d794dfc79677", "text": "Given a QuerySet and the name of field containing datetimes return the latest ( most recent ) date .", "title": "", "metadata": ""}
{"_id": "459ad828a9b6f25a4d39e995fae9199a", "text": "Return possible range for min function .", "title": "", "metadata": ""}
{"_id": "29231ebb52382440e7432fda7b04e3ac", "text": "Computes the Poisson PMF .", "title": "", "metadata": ""}
{"_id": "cde4ce895b83ac4ad57aa756806f1a3e", "text": "Intercept standard output in a with - context : return : cStringIO instance", "title": "", "metadata": ""}
{"_id": "62888954b6c9e17701b9c6456856492b", "text": "Convert unix timestamp to human readable date / time string", "title": "", "metadata": ""}
{"_id": "4c36bef83de73fd8bfbf541e59c0d617", "text": "Changes volume", "title": "", "metadata": ""}
{"_id": "901fed071be252c2393a185a5a1a3d2b", "text": "Within the dictionary d find a key that matches ( in case - insensitive fashion ) the key k and return it ( or None if there isn t one ) .", "title": "", "metadata": ""}
{"_id": "bd2f05266990d01493c59200f629d281", "text": "Try to automatically detect an image field", "title": "", "metadata": ""}
{"_id": "d6a7e7a1be177b1ed9be8b41752a954b", "text": "Report effective gevent monkey patching on the logs .", "title": "", "metadata": ""}
{"_id": "d18231d9605af7d1414a441b91e1cd82", "text": "Run the Webserver / SocketIO and app", "title": "", "metadata": ""}
{"_id": "f6aef1d30d7fb987c2e0c4093872b2df", "text": "Internal random datetime generator .", "title": "", "metadata": ""}
{"_id": "1f8747a1f42d85cd98938e890181f44f", "text": "Create an instance using the launcher .", "title": "", "metadata": ""}
{"_id": "b3bebaca9a79dc427cb7cd15780b9dbc", "text": "Serialises a protobuf object as json", "title": "", "metadata": ""}
{"_id": "d78a7620583a9c26c8b30b75d65e9ce2", "text": "Return leading whitespace .", "title": "", "metadata": ""}
{"_id": "c1bf3ec4e98fdca482a01c6c5215c8ce", "text": "Exit the shell session .", "title": "", "metadata": ""}
{"_id": "63cea615045fef39091df5e1e9b0694e", "text": "Horizontally flip the given PIL Image .", "title": "", "metadata": ""}
{"_id": "3350bb89a39edfc4cc002c7656f9e85b", "text": "Provide a command prompt .", "title": "", "metadata": ""}
{"_id": "7a23e3f2f48401d52657fca5c007dec8", "text": "Return a new PSet with elements in iterable added", "title": "", "metadata": ""}
{"_id": "dfadfb6b4d0f8f715a1b057b809cef20", "text": "Query the configured LDAP server .", "title": "", "metadata": ""}
{"_id": "f9598cdca93891ac5f2ee8ed941f826f", "text": "Returns a Boto connection to the provided S3 bucket .", "title": "", "metadata": ""}
{"_id": "db0e269dc2c3c2bf41bc5ef7349eba24", "text": "Iterative mean .", "title": "", "metadata": ""}
{"_id": "4406c9bdfacd37052bb4928aa98f3788", "text": "quit || exit || q Stop and quit the current debugging session", "title": "", "metadata": ""}
{"_id": "2bb2aab60550fee70efa3afd4fb72202", "text": "Get the HEAD commit SHA1 of repository in current dir .", "title": "", "metadata": ""}
{"_id": "cbdac0a1e8955438720f0d1fd02ce1b5", "text": "Log in to instagram with given username and password and internally store session object .", "title": "", "metadata": ""}
{"_id": "e8224eea6896d5c5c016c796fa4936d0", "text": "Compiles the given source from TypeScript to ES5 using TypescriptServices . js", "title": "", "metadata": ""}
{"_id": "a088fd3495ef1c880e8d62a20933f6e5", "text": "Decorator to explicitly mark functions that are exposed in a lib .", "title": "", "metadata": ""}
{"_id": "bf0097386224ac43bb5e10713815631e", "text": "Returns a gzipped version of a previously opened file s buffer .", "title": "", "metadata": ""}
{"_id": "ee2f61d35cae122b7adef905b0cd8d28", "text": "remove duplicates from a sequence preserving order", "title": "", "metadata": ""}
{"_id": "8532fe232f45d84d78c7fb733116db36", "text": "Generate a service class for the service contained in the specified metadata class .", "title": "", "metadata": ""}
{"_id": "2231fe9a9ee8c29f06f55fcb43cd10f2", "text": "Get all unique links in the html of the page source . Page links include those obtained from : a - > href img - > src link - > href and script - > src .", "title": "", "metadata": ""}
{"_id": "9b9b805a1259a1e6d128e83742c0527a", "text": "Save object as json on CNS .", "title": "", "metadata": ""}
{"_id": "f1c0cb2b88a56718e5cf9d8c8f04a2cb", "text": "Snap coordinates on the grid with integer coordinates", "title": "", "metadata": ""}
{"_id": "224f14278bc1be0263721912d42989d3", "text": "Set of hyperparameters .", "title": "", "metadata": ""}
{"_id": "cb2566e4880e9022f7d420d26f5d8adf", "text": "construct the model matrix columns for the term", "title": "", "metadata": ""}
{"_id": "caf717f02b4dae1d0a65b6f7e94920b6", "text": "Call the handlers for the specified record .", "title": "", "metadata": ""}
{"_id": "21a4b91e960d1c554073a134a93af24f", "text": "Handle keyboard interrupt and other errors .", "title": "", "metadata": ""}
{"_id": "1f03d85b13fb6be59be3c5313f5b55e9", "text": "For use with SELECT ( or SELECT - like PRAGMA ) statements .", "title": "", "metadata": ""}
{"_id": "72089e8b93779e75f4f9281ec2368363", "text": "Convert to float if object is a float string .", "title": "", "metadata": ""}
{"_id": "9716cd24152c591e2aa4ea14d1278192", "text": "Return the value for key of membersuite_object_data .", "title": "", "metadata": ""}
{"_id": "ac66428f525163837df955b6fcc9270a", "text": ": param tup : a list of tuples : param di : a dictionary converted from tup : return : dictionary", "title": "", "metadata": ""}
{"_id": "b727b7f1f99bd8a7fc8439a8fa91cd8a", "text": "returns the qth most probable element in the dawg .", "title": "", "metadata": ""}
{"_id": "d0302effa95d1d195a711aae9d18af53", "text": "Given a string ( string ) and a numeric base ( base ) decode the string into an integer .", "title": "", "metadata": ""}
{"_id": "043171d3b78a74e8163a48de180b85d7", "text": "Return relevant twitter timeline", "title": "", "metadata": ""}
{"_id": "5f69ced4ff903cbea29f08c694166afb", "text": "Current thread ident . If current thread is main thread then it returns None .", "title": "", "metadata": ""}
{"_id": "5f946f051782eb038ca32497c2770965", "text": "Deserializes Java objects and primitive data serialized by ObjectOutputStream from a string .", "title": "", "metadata": ""}
{"_id": "705beba98525487654aa4dfdbcab9bec", "text": "A dialog to get a directory name . Returns the name of a directory or None if user chose to cancel . If the default argument specifies a directory name and that directory exists then the dialog box will start with that directory .", "title": "", "metadata": ""}
{"_id": "02366975d932f871f10a0769b9d65e03", "text": "Parse ASDL from the given file and return a Module node describing it .", "title": "", "metadata": ""}
{"_id": "a451419cce2305583bf462fdf9e6e0de", "text": "Reads cplex file and returns glpk problem .", "title": "", "metadata": ""}
{"_id": "d34dd9c0822ade499cb13adadc396d58", "text": "Computes the log of the binomial coefficient .", "title": "", "metadata": ""}
{"_id": "b95c0a99cc91d11dcfc6df102d97ad3c", "text": "start the bot", "title": "", "metadata": ""}
{"_id": "134cbae7580db56d982669c85da22d69", "text": ">>> _infer_interval_breaks ( np . arange ( 5 )) array ( [ - 0 . 5 0 . 5 1 . 5 2 . 5 3 . 5 4 . 5 ] )", "title": "", "metadata": ""}
{"_id": "df62943ce79046933576981caa016aa4", "text": "Exponential function", "title": "", "metadata": ""}
{"_id": "98470adb333aaa3c4fd2814e6dbd52f4", "text": "Convert a table row to a dictionary .", "title": "", "metadata": ""}
{"_id": "4d6ce8c0ae1193232df873082a26339b", "text": "Write text . An additional attribute terminator with a value of None is added to the logging record to indicate that StreamHandler should not add a newline .", "title": "", "metadata": ""}
{"_id": "1eea1850444e8e2d3c330477298ddcf7", "text": "Returns whether this is a ( non - quantized ) integer type .", "title": "", "metadata": ""}
{"_id": "6ed8d5722c90ea1f20477ed6432b1131", "text": "Runs command on the system with given args .", "title": "", "metadata": ""}
{"_id": "5066c39ec11a90d14d9227c9e757a915", "text": "Return a position in a file which is known to be read & handled . It assumes a buffered file and streaming processing .", "title": "", "metadata": ""}
{"_id": "dea22d3815c2fd5cefe0aa7e12ca7617", "text": "The fraction of n - grams matching between two sequences", "title": "", "metadata": ""}
{"_id": "aaebcfbd8981aaa9b7f58f174046233e", "text": "Pads an image to a square then resamples to max_size", "title": "", "metadata": ""}
{"_id": "ef6fe7a85d1fa33b1441df84975aa41f", "text": "Prints the specified message and exits the program with the specified exit status .", "title": "", "metadata": ""}
{"_id": "87d936e84d351c682133f738f01d23c6", "text": "Converts a string to a string that is safe for a filename Args : string ( str ) : A string to make safe for a filename", "title": "", "metadata": ""}
{"_id": "b2d37a0ac50f0e25f1fb00bbf769ebda", "text": "Wraps the given dictionary such that the given fallback function will be called when a nonexistent key is accessed .", "title": "", "metadata": ""}
{"_id": "f35ceee1fd991235f94e0f3055fdd510", "text": "Get width of a string in the current font", "title": "", "metadata": ""}
{"_id": "c00495e158ab56847936f2d334627bc8", "text": "Returns file type for given file field . Args : field ( str ) : File field", "title": "", "metadata": ""}
{"_id": "edbf96a78c9482cb16c66a0d1a16baa8", "text": "Visualize the persistence image", "title": "", "metadata": ""}
{"_id": "d140515f07cef17bb41551ef099def58", "text": "Calculates accuracy", "title": "", "metadata": ""}
{"_id": "a80fd7cdbd8b8741d6307e850d95387c", "text": "New event for light .", "title": "", "metadata": ""}
{"_id": "39efbb709bd14fc88a7586f9259386a1", "text": "Path join helper method Join paths if list passed", "title": "", "metadata": ""}
{"_id": "4c3364b1402a4726eccca73323983a24", "text": "Return a list of the REST API versions supported by the array", "title": "", "metadata": ""}
{"_id": "95682382d1ebcb1dc0d71192926aa603", "text": ": param fields : a list which contains either 0 1 or 2 values : return : a tuple with default values of ;", "title": "", "metadata": ""}
{"_id": "45c4c5ad74ef8aebb367f5dacaf1f290", "text": "Pareses the address string into coordinates to match address_to_coords return object", "title": "", "metadata": ""}
{"_id": "d4999eb7e63a40cc58990f4767914ec3", "text": "Convenience function to print messages on a single line in the terminal", "title": "", "metadata": ""}
{"_id": "19bf0e6c2bdee2aedfb87227fee82f8f", "text": ": param l : List of strings to join : param arg : A pipe - separated list of final_join ( and ) and initial_join ( ) strings . For example : return : A string that grammatically concatenates the items in the list .", "title": "", "metadata": ""}
{"_id": "7c5be251a78c4e4bbe3a4121de4d5009", "text": "Finds common values", "title": "", "metadata": ""}
{"_id": "e58b9566a0ac310e81e05136c96ab8f8", "text": "generator of list folder in the path . folders only", "title": "", "metadata": ""}
{"_id": "5100e0cd45fada066c9e10dd2212f49c", "text": "Decode the contents of a value from a serialized stream .", "title": "", "metadata": ""}
{"_id": "793ec415dda31e977b12321a618aa5d1", "text": "Remove instance from instance list", "title": "", "metadata": ""}
{"_id": "9e24a2554cbdd465f7e1d3f5eb71dc93", "text": "http : // stackoverflow . com / questions / 1230669 / subprocess - deleting - child - processes - in - windows", "title": "", "metadata": ""}
{"_id": "26919f8b288686ae8ab75dbdf02b7510", "text": "Iterate through all elements .", "title": "", "metadata": ""}
{"_id": "94cc751dc2ff3f66951fc6c0fc9b63ed", "text": "Argument class constructor should be used inside a class that inherits the BaseAction class .", "title": "", "metadata": ""}
{"_id": "a5da71a0558a878b4cb19b6f7b0d5027", "text": "Returns a method from a given class or instance . When the method doest not exist it returns None . Also works with properties and cached properties .", "title": "", "metadata": ""}
{"_id": "73169169ce1cc113d79190377e2c8548", "text": "Strips zeros while handling - M and empty strings", "title": "", "metadata": ""}
{"_id": "5697d34757b44e47c8eea7deaa8d23e7", "text": "Set the number of ticks .", "title": "", "metadata": ""}
{"_id": "7227f795f8a9dc328731a229b55d7db2", "text": "Set a float option .", "title": "", "metadata": ""}
{"_id": "ad378f6ad72f23b053989c56a42c4fad", "text": "Redirect the stdout", "title": "", "metadata": ""}
{"_id": "708526c04ceb798ba94a3e1106cd96c1", "text": "Main entry point for assertions ( called by the wrapper ) . expect is a function the wrapper class uses to assert a given match .", "title": "", "metadata": ""}
{"_id": "0e94c1d93cebb06b34550b1cdb192099", "text": "Return n_clusters centroids of points", "title": "", "metadata": ""}
{"_id": "68c1878901f104c265485de12d6dcf08", "text": "Decodes the given JSON as primitives", "title": "", "metadata": ""}
{"_id": "95b3f395e50e90ec84098158b7dca97c", "text": "converts a object to list if object is a list it creates a comma seperated string .", "title": "", "metadata": ""}
{"_id": "4867ecdd8ca09afebc679b9af751ca6f", "text": "Upgrade all packages skip obsoletes if obsoletes = 0 in yum . conf .", "title": "", "metadata": ""}
{"_id": "f2e3e875ed31d727990ebb28cbea6d66", "text": "Converts list of tuples to dictionary with duplicate keys converted to lists .", "title": "", "metadata": ""}
{"_id": "e5a80122028a76b3bf00778c84b379fd", "text": "Reconnect to rabbitmq server", "title": "", "metadata": ""}
{"_id": "00e918818531a5ac6c454dd03027299f", "text": "Delete a mongo document collection using pymongo . Mongo daemon assumed to be running .", "title": "", "metadata": ""}
{"_id": "88a6a8eac5d0e61a0457bea5f7a46618", "text": "Return a string of the form [ basename - TIMESTAMP . ext ] where TIMESTAMP is of the form YYYYMMDD - HHMMSS - MILSEC", "title": "", "metadata": ""}
{"_id": "2f09531cd8fcf43fbbff6eaf3862e1c6", "text": "Serialize the query to a structure using the query DSL .", "title": "", "metadata": ""}
{"_id": "8c145954bb655239fbc2312b7ee16d79", "text": "Apply function to specified field of effect if it is not None otherwise return default .", "title": "", "metadata": ""}
{"_id": "452c66647a48e8f62043ba4390049bfc", "text": "Return a new raw REST interface to stats resources", "title": "", "metadata": ""}
{"_id": "56a6548563c710b7054641e037b74523", "text": "Maps values to bins Args : values ( list or list of lists ) - list of values to map to colors res ( int ) - resolution of the color map ( default : 100 ) Returns : list of numbers representing bins", "title": "", "metadata": ""}
{"_id": "73d7a4a9356e22a01f4d977380c767ed", "text": "Wrapper for session . request Handle connection reset error even from pyopenssl", "title": "", "metadata": ""}
{"_id": "dd5fdf23df88ff7435fe50a31877631b", "text": "Return a Python date that corresponds to the specified string representation .", "title": "", "metadata": ""}
{"_id": "e10c070c6408cc0671232b73cdcd97c3", "text": "For a single index and return the value", "title": "", "metadata": ""}
{"_id": "28402acb780cbb905569ef8ea43a4b7b", "text": "Called when closing this window .", "title": "", "metadata": ""}
{"_id": "0d2e983d8a9fd741661bd7bb29b7bf11", "text": "Initialize an API .", "title": "", "metadata": ""}
{"_id": "06c23b22818903ad7fbb59efc0ccb3ec", "text": "Reverse sorts a #dict by a given key optionally returning it as a #tuple . By default the @dict is sorted by it s value .", "title": "", "metadata": ""}
{"_id": "70a088e1f72101eea0e17009f089f1d0", "text": "Print out a log message only if verbose mode .", "title": "", "metadata": ""}
{"_id": "ca878d793b55c76e7690f3e5a1314f95", "text": "Serializes a K8S resource to YAML - formatted file .", "title": "", "metadata": ""}
{"_id": "a24d8c70cde8b4f6190e730bc26309b3", "text": "write back json response", "title": "", "metadata": ""}
{"_id": "58e30ab94f4af2f3a79afe56295ae2a3", "text": "unicode to bytes", "title": "", "metadata": ""}
{"_id": "05e92760a0a92260808b28e2edc9f01f", "text": "Query device for all attributes that exist regardless of power state .", "title": "", "metadata": ""}
{"_id": "8415a42f8c43211e9ed2c15c676c8028", "text": "Put an object into a ftps URL .", "title": "", "metadata": ""}
{"_id": "37e2119f5ed92a6434444a23659c7381", "text": "Create a folder recursive .", "title": "", "metadata": ""}
{"_id": "d54453a3c4485025eb42f742bb90ab69", "text": "Return boolean sequence or scalar indicating whether each string in the sequence or scalar starts with passed pattern . Equivalent to str . startswith () .", "title": "", "metadata": ""}
{"_id": "ac494407d5c4e99e8ddc02a9b766a783", "text": ": param str s : string with tabs : param str replace : e . g . 4 spaces : rtype : str", "title": "", "metadata": ""}
{"_id": "968e93b1e58a726393c63fbd96d43402", "text": "Returns the number of widgets currently displayed ( takes child splits into account ) .", "title": "", "metadata": ""}
{"_id": "696182c512344adef16f381954e0d100", "text": "Returns True if user answers y", "title": "", "metadata": ""}
{"_id": "1f5802f9882e851ba584f714d1b9bac8", "text": "add the field with endianness to the buffer", "title": "", "metadata": ""}
{"_id": "c930a79fbd35b455c04cb287eb975867", "text": "Return a version of the query string with the _e _k and _s values removed .", "title": "", "metadata": ""}
{"_id": "9f94af175ee5817d6aeade93275dfe45", "text": "Free the underlying C array", "title": "", "metadata": ""}
{"_id": "af938661f5a8d27cb4e62bfa8d14811f", "text": "Initializes a filter object .", "title": "", "metadata": ""}
{"_id": "f9e5360c134ecd8c8a31170b98a26caf", "text": "Display the difference between modules in a file and imported modules .", "title": "", "metadata": ""}
{"_id": "2a7bb742f1e2f9c14c3ffb83eb4a32a4", "text": "Sets a HTTP header for future requests .", "title": "", "metadata": ""}
{"_id": "98bd8a61d306d1da0f970611fc33ec31", "text": "Convert a numpy row - major homogenous transformation matrix to a flat column - major GLfloat transformation .", "title": "", "metadata": ""}
{"_id": "2b32b8ab31aee742668fa5abad53761e", "text": "Ensures : attr : subject contains * other * .", "title": "", "metadata": ""}
{"_id": "120a9a7ed1eb7b17895a4c50b6164dd5", "text": "Call java and return version information .", "title": "", "metadata": ""}
{"_id": "93acad2c51dac9727e53ed2898e79e5b", "text": "Given a value wrap it in a 0 - D numpy . ndarray .", "title": "", "metadata": ""}
{"_id": "6d0d795467db847061b7da054712695f", "text": "wrapper for : py : func : json . load", "title": "", "metadata": ""}
{"_id": "bc7b5bd1fb0b6fa01b8e98c52a594ab2", "text": "Normalize the data to be in the [ 0 1 ] range .", "title": "", "metadata": ""}
{"_id": "76fe8fb5babc022f2c1bfae43510e52d", "text": "Decode a JSON int64 to bson . int64 . Int64 .", "title": "", "metadata": ""}
{"_id": "6d77d4b8032b462fe7c29fc39011f503", "text": "Checks if a suspicious number ( e . g . ligand position ) is in fact a negative number represented as a 32 bit integer and returns the actual number .", "title": "", "metadata": ""}
{"_id": "27018473f43333f802823ed115440c84", "text": "get np array of bin edges", "title": "", "metadata": ""}
{"_id": "31ab49340e893e40abb3464309646fae", "text": "Return the list of all cached global names", "title": "", "metadata": ""}
{"_id": "d9944a7fd806eeb27f06366e89612a9a", "text": "Return True if two numbers are equal up to the specified number of places after the decimal point .", "title": "", "metadata": ""}
{"_id": "23da6e5fae25e8be6bb3abca7c2ff269", "text": "Formats the text input with newlines given the user specified width for each line .", "title": "", "metadata": ""}
{"_id": "f356504f5b2b0c16f009d408181d45ed", "text": "Add the default arguments to the parser .", "title": "", "metadata": ""}
{"_id": "b12eaa147e05c79335f904462e10b5d4", "text": "Sum the widths of the columns that make up the span plus the extra .", "title": "", "metadata": ""}
{"_id": "80d9c05e05c576c2d7e4253795e96994", "text": "ceil a number to within a given rounding accuracy", "title": "", "metadata": ""}
{"_id": "16e17c4e142f4e6c2137bb414d14aa57", "text": "Entry point for the jupytext script", "title": "", "metadata": ""}
{"_id": "3b1baca2017a030b750c06a964426052", "text": ": param session : actually it is a sqlalchemy session : return : version number", "title": "", "metadata": ""}
{"_id": "e02c4bf13871ef253d621bf69c5d031c", "text": "Package up the public attributes as a dict .", "title": "", "metadata": ""}
{"_id": "96a7e46c632c20bf75e4a7c71379ae49", "text": "Increment the date by a certain number and return date object . as the specific string format .", "title": "", "metadata": ""}
{"_id": "3ccabc9430e92debc360ec3ddfaa6577", "text": "Determines if the current process is running in Windows - On - Windows 64 bits .", "title": "", "metadata": ""}
{"_id": "74024e9fd7d5f3cbf7fae1d800e5b624", "text": "Run python eval on the input string .", "title": "", "metadata": ""}
{"_id": "500ab5204daa63d159e5f68cedebaadf", "text": "visit an Ellipsis node by returning a fresh instance of it", "title": "", "metadata": ""}
{"_id": "214433e3214d6d704b3b4438adf50ea0", "text": "Draw a round corner", "title": "", "metadata": ""}
{"_id": "fa236951f8c2e0c0dbec3dcaa77ba8e3", "text": "Converts a list of Token into a list of Token asuming size == 1", "title": "", "metadata": ""}
{"_id": "5081ebdbaba9d135b43029cebdbeb34c", "text": "r Converts a URI parts to corresponding IRI parts in a given charset .", "title": "", "metadata": ""}
{"_id": "de0aee3f7559e67930285b2e44d181e3", "text": "Tokenizes a given text into sentences applying filters and lemmatizing them . Returns a SyntacticUnit list .", "title": "", "metadata": ""}
{"_id": "1f24e73c0441d01e3b2bbc127fba8e22", "text": "ndarray containing tuples of pairwise indices .", "title": "", "metadata": ""}
{"_id": "c6f328228a36c4522275c40ca033b4cf", "text": "Run asyncio ( should be called in a thread ) and close the loop and the zmq context when the thread ends : param loop : : param zmq_context : : return :", "title": "", "metadata": ""}
{"_id": "d8a6d8a3c6be2e836ea20b91e3847956", "text": "Convert the value to its string representation", "title": "", "metadata": ""}
{"_id": "198ae1d7f6323fa85b54c10a889c2dd3", "text": "Set limits for the point meta ( colormap ) .", "title": "", "metadata": ""}
{"_id": "d91dba326ee8fcceffcf9143b5ab1b1c", "text": "Convert exception info into a string suitable for display .", "title": "", "metadata": ""}
{"_id": "91c73a077938c378b0e77371b49cf26c", "text": "JSON serializer for objects not serializable by default json code", "title": "", "metadata": ""}
{"_id": "953431a077677c31b468e24f3ce2563c", "text": "Get the UTC time now but with no timezone information in : class : datetime . datetime format .", "title": "", "metadata": ""}
{"_id": "6d7b49446f1e56e9e8d02eefca015f94", "text": "Information about Cauldron and its Python interpreter .", "title": "", "metadata": ""}
{"_id": "fe9ee403863b59acf809a0304e254fa4", "text": "Retrieve a list of all system services .", "title": "", "metadata": ""}
{"_id": "be428bb83718b7a4a61562b20c2447ff", "text": "Compute the number of edges of the CFG Args : function ( core . declarations . function . Function ) Returns : int", "title": "", "metadata": ""}
{"_id": "8146bbd8561cf1effa98e8f8f48e6160", "text": "Convert seconds to hours mins and seconds .", "title": "", "metadata": ""}
{"_id": "80443f564280196b1085e8f95b204714", "text": "Wraps a function to run in a given directory .", "title": "", "metadata": ""}
{"_id": "48679491b00604c3e69ed750fa5e999e", "text": "Transform a query line into a ( lng lat ) pair of coordinates .", "title": "", "metadata": ""}
{"_id": "fb763b6ef272e78bd398d442018ad827", "text": "Print something on screen when self . verbose == True", "title": "", "metadata": ""}
{"_id": "53e6eeb3e58cff26491b5ce7c265eedc", "text": "treats the 2 sets are sets of taxon IDs on the same ( unstated ) universe of taxon ids . Returns True clades implied by each are compatible and False otherwise", "title": "", "metadata": ""}
{"_id": "b7ada7bd5fa5703e72eee7b23f00f9c0", "text": "Are we being asked to look up a list of things instead of a single thing? We check for the __iter__ attribute so that this can cover types that don t have to be known by this module such as NumPy arrays .", "title": "", "metadata": ""}
{"_id": "1a6402827707d6faa8f9f2ec4a842af9", "text": "Reload the device .", "title": "", "metadata": ""}
{"_id": "7e63c02f6fff2ffb15a549a2c9c26a59", "text": "Updates col_widths in code_array", "title": "", "metadata": ""}
{"_id": "c5dcff648f92f84e40c497308b59ac35", "text": "Base absolute path of container .", "title": "", "metadata": ""}
{"_id": "fb32ddf4d64f08b5c1939fa1e0a55950", "text": "unset _instance for this class and singleton parents .", "title": "", "metadata": ""}
{"_id": "832b52709bcf661386a2971f73ee30c4", "text": "Word - level n - grams that match between two strings", "title": "", "metadata": ""}
{"_id": "0906501f16e35881d1ca576ed0a2c9f4", "text": "Outputs json without whitespace .", "title": "", "metadata": ""}
{"_id": "09f6f7c764e1d4237978380307066a13", "text": "Find the lowest common multiple of 2 numbers", "title": "", "metadata": ""}
{"_id": "9f14d1cf18c4ec7ae2ad45afc0f33c30", "text": "Parse Config File from yaml file .", "title": "", "metadata": ""}
{"_id": "fdfac701f83968d8fe94c8cefc79cb92", "text": "The return type for this method in a JSON - compatible format .", "title": "", "metadata": ""}
{"_id": "195a0b3821ab5543890712570fc2525b", "text": "Convert string or other Python object to boolean .", "title": "", "metadata": ""}
{"_id": "ebb54c229362ea2987ec332ceac19b5c", "text": "Update context menu", "title": "", "metadata": ""}
{"_id": "fcde1d7e1126279ebabba65ce341f2bc", "text": "Set the contents of a file .", "title": "", "metadata": ""}
{"_id": "1bef6b49bfbb36ca4464996ab0e55f88", "text": "Calculate overlap count between the values of two dictionaries", "title": "", "metadata": ""}
{"_id": "862ebbd96007880451f63e343f1a971e", "text": "Create unique labels .", "title": "", "metadata": ""}
{"_id": "8373558c5b01ff856b216afabdb20f79", "text": "Upgrade to a later version", "title": "", "metadata": ""}
{"_id": "e2617e391bf577a506e3fe215c47a7e5", "text": "Find the centroid for a set of vectors", "title": "", "metadata": ""}
{"_id": "9fb1822e5dccd7fe628a349fd2c4a76d", "text": "Make a dict that accumulates the values for each key in an iterator of doubles .", "title": "", "metadata": ""}
{"_id": "2b9ecfcb1f2917cd2acb83097beb4179", "text": "Deletes the database file .", "title": "", "metadata": ""}
{"_id": "aa185e980e3c8fa3456aa448749484e6", "text": "Begin logging of a task", "title": "", "metadata": ""}
{"_id": "41fdb211efab9bfb92dbc20c1bffde39", "text": "Reduced Euclidean distance .", "title": "", "metadata": ""}
{"_id": "1d85bb3df7339b2a3c1e2f6dbece487e", "text": "Returns the appropriate IPython code magic when called with an alias for a language .", "title": "", "metadata": ""}
{"_id": "21507cfd816d4322f954f97a70ef17ed", "text": "A variant of memoized_property that allows for setting of properties ( for tests etc ) .", "title": "", "metadata": ""}
{"_id": "914e44d7d70e9a16abc2d06e7bebc27a", "text": "Daemonize the running process .", "title": "", "metadata": ""}
{"_id": "498a093df2d630af9ae3cd1510852dec", "text": "Add optparse or argparse option depending on CmdHelper initialization .", "title": "", "metadata": ""}
{"_id": "ec0fd675adfa8c88a18d3e37a920e57c", "text": "Fold all values of the matrix into [ 0 1 ] .", "title": "", "metadata": ""}
{"_id": "d1b30dc95cde17d37a83f9e923677236", "text": "Performs a random step without a self - loop .", "title": "", "metadata": ""}
{"_id": "5c1fd762147232578b57a8187a473fa5", "text": "Set the timeout to the websocket .", "title": "", "metadata": ""}
{"_id": "8c352831c307926bd0034bb768807e54", "text": "Returns the molecular weight of the polypeptide sequence .", "title": "", "metadata": ""}
{"_id": "a9eca6fdbf3d6774130f73289675ea5f", "text": "Returns the last week as a period string", "title": "", "metadata": ""}
{"_id": "e9745da5c64d1e81baf92b3dd3e1db75", "text": "Accepts a binary string and returns the detected filetype . Return value is the mimetype if mime = True otherwise a human readable name .", "title": "", "metadata": ""}
{"_id": "8b6d8cab6488d232ca51b91474f92cc2", "text": "Standard euclidean distance .", "title": "", "metadata": ""}
{"_id": "6e7fc20759aa0bf2f961d806f3cd3361", "text": "Convert an image to PNG format with Pillow . : arg file - like fp : The image file . : rtype : bytes", "title": "", "metadata": ""}
{"_id": "dd95b4813e391bc1b4ceef4ef5bea07a", "text": "Return True if the method is a bound method ( attached to an class instance .", "title": "", "metadata": ""}
{"_id": "63378d265a56ae30816ccc81267b9e00", "text": "evaluates expression in current context and returns its value", "title": "", "metadata": ""}
{"_id": "25b5358678c5bcb3f4f91d659f9ae773", "text": "Creates a PDF by embedding the first page from the given image and writes some text to it .", "title": "", "metadata": ""}
{"_id": "d934322e58d6d00d29f5851cc35e3895", "text": "Call an alias given its name and the rest of the line .", "title": "", "metadata": ""}
{"_id": "37ef49d9232fddcec00a45e9e00e86c3", "text": "write the html file contents to disk", "title": "", "metadata": ""}
{"_id": "d9d8e41a425256d39c76d1640596f1f9", "text": "Returns an image tensor .", "title": "", "metadata": ""}
{"_id": "4d6187294515b9219b1a2539da943cfb", "text": "Find the time this file was last modified .", "title": "", "metadata": ""}
{"_id": "d4d7ab6b454404a83cbd6f25305ebc0e", "text": "Partial objects do not serialize correctly in python2 . x -- this fixes the bugs", "title": "", "metadata": ""}
{"_id": "11586058d2fcb71122fe2a641bd5f9ac", "text": "Takes two clicks and returns the slope .", "title": "", "metadata": ""}
{"_id": "4f96854ed427c246f49a197af6c6fbe2", "text": "Function that prune the decision tree .", "title": "", "metadata": ""}
{"_id": "6cd44622c5d783927aef0e5a42dd1f9d", "text": "get the covarince between two points implied by Vario2d", "title": "", "metadata": ""}
{"_id": "12fb67ffe72cf04dcbfd916ee4c4cdfb", "text": "return the number of channels present in samples", "title": "", "metadata": ""}
{"_id": "fb251566fa805427181a7490b5d5f5da", "text": "Returns inverse of transformation .", "title": "", "metadata": ""}
{"_id": "ae83c338ab67d09197217b2dba877281", "text": "determine whether two sequence names from a repeatmasker alignment match .", "title": "", "metadata": ""}
{"_id": "4d6f66f67c238d43847869bef4822f54", "text": "Returns the coverage object of pytest - cov .", "title": "", "metadata": ""}
{"_id": "dd261ca71179cd0bf710fc11b9b0aec2", "text": "r Calculate the voxel coordinates of a straight line between the two given end points", "title": "", "metadata": ""}
{"_id": "e3847b8928c15ed182a50860c9132b64", "text": "Find a single document by id", "title": "", "metadata": ""}
{"_id": "8dec75826af66b2873a73c8663a4b944", "text": "Returns path as an absolute path with ~user and env var expansion applied .", "title": "", "metadata": ""}
{"_id": "b3aa58d5ac98a8575cd67b2802f21fc1", "text": "Returns the contents of the sql file from the given filename .", "title": "", "metadata": ""}
{"_id": "85c1b897acd8b207847ec39ab45fdc6d", "text": "Load the noise texture data into the current texture unit", "title": "", "metadata": ""}
{"_id": "92bcff1a82d97327d385ebcfdb4e7a6c", "text": "Checks object if it s a peewee model and unique .", "title": "", "metadata": ""}
{"_id": "c8850567ce302c701f34770282e9e42e", "text": "Join two state vectors into a larger qubit state", "title": "", "metadata": ""}
{"_id": "eb47a426ead74ca6545dcacb7f975c42", "text": "Returns a bs4 object of the page requested", "title": "", "metadata": ""}
{"_id": "daf83fa0d7aa88446a2477a496d63a49", "text": "Remove . postXXXX postfix from version", "title": "", "metadata": ""}
{"_id": "a4f1fe2c6afb2f105ec05b9029352b0f", "text": "Create an array . Keyword arguments as per : func : zarr . creation . empty .", "title": "", "metadata": ""}
{"_id": "24bddd21f71e781317303e015c6707b0", "text": "Test if DATABASES [ default ] exists", "title": "", "metadata": ""}
{"_id": "efc23acfafce99fdaf7938591bb46fae", "text": "Create object .", "title": "", "metadata": ""}
{"_id": "08e9aa0dc789cd0d5c6a4f56dee8bb8c", "text": "Set GUI on - top flag", "title": "", "metadata": ""}
{"_id": "5a7604ea7424cfc03b75d1ec9bf5abdf", "text": "Returns the data as numpy . array from each partition .", "title": "", "metadata": ""}
{"_id": "bdd1b4ddfd19a639c82659c40c398cc2", "text": "Return True if created today .", "title": "", "metadata": ""}
{"_id": "07e88678db9170e2afc90d5f0fc74be7", "text": "Given k kilobytes report back the correct format as string .", "title": "", "metadata": ""}
