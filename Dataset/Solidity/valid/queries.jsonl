{"_id": "23d6b08c63a7b17ec687bd4c2b7f85f8", "text": "get the production card's ether cost .", "title": "", "metadata": ""}
{"_id": "eca5f9abaca45261c9d973ee6ca644c5", "text": "Will set the Buy Ratio .", "title": "", "metadata": ""}
{"_id": "e8ba1810f5da523e420b1ea3fcc0f1ae", "text": "Throws if called by any account other than the GDPOracle .", "title": "", "metadata": ""}
{"_id": "192d545efcc4103c30bd7c177dd23cd1", "text": "Adds fundraiser .", "title": "", "metadata": ""}
{"_id": "0461213806fba5c7c4cc894b44727bb6", "text": "_setCooldownTime : set new cooldown time .", "title": "", "metadata": ""}
{"_id": "882a0710d42b60e138281f8a0b3c793c", "text": "Forward handelion tokens to purchaset .", "title": "", "metadata": ""}
{"_id": "c1718acffb87b18de3f01021df154318", "text": "save the block number .", "title": "", "metadata": ""}
{"_id": "e4769ef37f0fec4695e8c532428a445b", "text": "Allows the owner to set the List of token holders .", "title": "", "metadata": ""}
{"_id": "be09734bb7b0e956e00c4c9cd29c4589", "text": "data migration .", "title": "", "metadata": ""}
{"_id": "bc3198ef0a07e977df5ccf6112d09aad", "text": "Set the current round index .", "title": "", "metadata": ""}
{"_id": "b44f471bf60b99a363f35790e12ebe26", "text": "Recieve Vote from Who-Token - Contract .", "title": "", "metadata": ""}
{"_id": "98e89876579576a8352e63f25e5bd873", "text": "Apply our fixed presale rate and verify we are not sold out .", "title": "", "metadata": ""}
{"_id": "bf13aedfdd9da0c8fb7ee1f935d26e0b", "text": "Overrides Crowdsale createTokenContract not to create new token .", "title": "", "metadata": ""}
{"_id": "dd1126a6327e9d767ac7fcf6e98fc2db", "text": "10 change of getting all blance of fees .", "title": "", "metadata": ""}
{"_id": "8c24503c53f019b1e66eb05ea30684e7", "text": "Pay with PLAT .", "title": "", "metadata": ""}
{"_id": "a4945720e13d724ed91832ba933cc7f3", "text": "Requires block to be 256 away .", "title": "", "metadata": ""}
{"_id": "25f07cd18a4a68506e543b0f4da35ad6", "text": "The owner can remove the oracle .", "title": "", "metadata": ""}
{"_id": "23b74bb9afe10813c65f24cfcaa87da0", "text": "deploys and initializes new EIP20 , PLCRVoting , and Parameterizer contracts .", "title": "", "metadata": ""}
{"_id": "915634aed99e4395290af1a83bd3e496", "text": "buy tank from auction .", "title": "", "metadata": ""}
{"_id": "f71d17ea7a3ebb7fce5340a37becc152", "text": "Limit token transfer until the TGE is over .", "title": "", "metadata": ""}
{"_id": "160aef981bc9411860bfeb1ce2702d57", "text": "request to know how much dividend you can get .", "title": "", "metadata": ""}
{"_id": "8a7598c925a4de71b3e66e8ffe3e4a4a", "text": "check Ico Stage .", "title": "", "metadata": ""}
{"_id": "3a3882524dd65cdbddc5e1a0771f18e9", "text": "refund all ETH from teller contract .", "title": "", "metadata": ""}
{"_id": "70a881b0e98d553d7de55e9d67fdab08", "text": "Works on users's command .", "title": "", "metadata": ""}
{"_id": "4ca0fc619e1401d875e46d716afe2f96", "text": "Determine if a blob enforces revisions .", "title": "", "metadata": ""}
{"_id": "7a2a51fe6e1fe45adf9cdf4900b8df32", "text": "signals that new upgrade is available , contract must be most recent upgrade and allowed to upgrade .", "title": "", "metadata": ""}
{"_id": "a0227e2d0415d2f25df729a264658cf1", "text": "Add a new contract to the manager .", "title": "", "metadata": ""}
{"_id": "a9986d51ad2d3764c302cb8b3825bded", "text": "Count WARs tracked by this contract .", "title": "", "metadata": ""}
{"_id": "e5f2b5e2df495c8bc35c8653b3a08086", "text": "Allows an account to buy a NFT gan token that is up for offer the token owner must set onlySellTo to the sender .", "title": "", "metadata": ""}
{"_id": "c9e0a5a664a889a77b2d53e1481a4343", "text": "! Throws if called by any account other than the migrationGate .", "title": "", "metadata": ""}
{"_id": "390ed16a663aa60032e188b5a58f1ac6", "text": "This allows the owner to stop a malicious party from spamming the orderbook .", "title": "", "metadata": ""}
{"_id": "22cae4615c95e3c497cac83a749408e6", "text": "Returns the USD value of ether raised at the set USD / ETH rate .", "title": "", "metadata": ""}
{"_id": "39659d9a00a8e39726cd6cadebe9b679", "text": "By security issues token that holds ethers can not be killed .", "title": "", "metadata": ""}
{"_id": "4eccf498a0d56c78f8accc1e99fadbd9", "text": "This functions returns the last time at which rewards were transferred to a particular address .", "title": "", "metadata": ""}
{"_id": "96c2d6aa2d43ab6d0fc955ac05ba213b", "text": "Checks whether the goal has been reached .", "title": "", "metadata": ""}
{"_id": "37b8e30fbf54edc8150818e467b3b0fc", "text": "2 . 5 lottery get random number in 0 , maxNumber ) .", "title": "", "metadata": ""}
{"_id": "ddbda8809cd0fb5164b07bb27fed1541", "text": "allowed total number of tokens .", "title": "", "metadata": ""}
{"_id": "9a876c12f25caf7b8db19a78bbb2e4da", "text": "assign reserve supply to a contract address .", "title": "", "metadata": ""}
{"_id": "385c1dd1a0501ca8d02175a543497603", "text": "Provides balance of the account requested .", "title": "", "metadata": ""}
{"_id": "1b81bd5b38cf6c7cff7b452b87443d25", "text": "return the largest of two 64 bit integers .", "title": "", "metadata": ""}
{"_id": "4c7a4b4ac4a1b75989760b9fc32ca39a", "text": "transferFrom function , revert if the contract is paused .", "title": "", "metadata": ""}
{"_id": "c51fa067f3bfd32d3312bd4c7041712c", "text": "Public Order Placement - cancel order .", "title": "", "metadata": ""}
{"_id": "2597b249d2e7582295205d7bc21a5ec0", "text": "sets the composition price for a token ID .", "title": "", "metadata": ""}
{"_id": "136a8de117eca5fb598ec3d725e9bdc5", "text": "Create sell offer for cat with a certain minimum sale price in wei ( by cat owner only ) .", "title": "", "metadata": ""}
{"_id": "5ee1fd8f21cc666291efeee6d64ac9c8", "text": "internal invest functionality .", "title": "", "metadata": ""}
{"_id": "faf03d0e33827c8ec6f3d86ce6790965", "text": "Destroy tokens from owener account , can be run only by owner .", "title": "", "metadata": ""}
{"_id": "0cad2d353fea2f97aabf3ed911cbda45", "text": "in case the whitelisting admin need to be changed .", "title": "", "metadata": ""}
{"_id": "369e201d31387c465b525fb768012e48", "text": "sels : A bytes4 array containing all of this version's function selectors .", "title": "", "metadata": ""}
{"_id": "adc48b41879fa2a5234dc0c8b40f41ac", "text": "Distribute token by batch .", "title": "", "metadata": ""}
{"_id": "1ef363d3a70c9938f5c5476d2184c547", "text": "Transfer eth or tokens to the escapeHatchDestination .", "title": "", "metadata": ""}
{"_id": "698bc5d66409a7149a5bd8b8e311d5d0", "text": "Internal method called to current vesting period .", "title": "", "metadata": ""}
{"_id": "54a466b28bd50e30b055e5fb33eaac77", "text": "admin can claim unclaimed fund after the claiming phase , if any .", "title": "", "metadata": ""}
{"_id": "ead29ccc237fb124c2b7299631212b06", "text": "Operation modifiers for limiting access to only Banker .", "title": "", "metadata": ""}
{"_id": "7bc0003a7aa857465523877cd5f741b4", "text": "Change allocation of the specified token bankroll by an amount .", "title": "", "metadata": ""}
{"_id": "7692f780c69fdf5ab5f5efaf060ed7cf", "text": "true if the transaction can invest .", "title": "", "metadata": ""}
{"_id": "d78780516a095d73f4fce3ed2fbe0efa", "text": "Function for transfering all tokens from account to specified address .", "title": "", "metadata": ""}
{"_id": "b609013cf90cdab77621960cd1c78e7c", "text": "Deactiate the contract .", "title": "", "metadata": ""}
{"_id": "8964f7c198dd77946887a881964d51d3", "text": "Allows ops to add accounts to the whitelist .", "title": "", "metadata": ""}
{"_id": "1ae0dd11bba50833027966d8ce54ff8b", "text": "Start this October 27 and crowdsale will run for 60 days .", "title": "", "metadata": ""}
{"_id": "966d267f4d5edf82a67e466b9027d067", "text": "transfer Giftid was approved by _from to _to .", "title": "", "metadata": ""}
{"_id": "373a1b5226e134a133fcf06dcc1ae36a", "text": "Allows an owner to revoke a confirmation for a transaction .", "title": "", "metadata": ""}
{"_id": "8bc73606b6d746187634cf436b491004", "text": "Math functions .", "title": "", "metadata": ""}
{"_id": "e848f935a6854fcb6cc34486dd9a766c", "text": "lock address from transfering until . .", "title": "", "metadata": ""}
{"_id": "0bbed3aff8ca6f0ffb136f53e3c7ca9c", "text": "finalize an ICO in dependency on the goal reaching : 1 ) reached goal ( successful ICO ) : - release sold token for the transfers - close the vault - close the ICO successfully 2 ) not reached goal ( not successful ICO ) : - call finalizeNOK ( ) .", "title": "", "metadata": ""}
{"_id": "d71f512e5b47883efbee7f91aaa521e7", "text": "used by burner contract to burn athenes tokens .", "title": "", "metadata": ""}
{"_id": "1448a96d4b188b200eb0e5f5058b64b2", "text": "Function to send ETH from contract address to team ETH address .", "title": "", "metadata": ""}
{"_id": "fd7e1dfece4da8a18a325a57f6b5c659", "text": "Add address to the black list .", "title": "", "metadata": ""}
{"_id": "c4d7af238a17273b9cd228ea4dc77adc", "text": "Withdraw remaining balance to manually return where contracts send has failed .", "title": "", "metadata": ""}
{"_id": "4c3a58696f8dc20d5e963fef7d1eca6a", "text": "Destruction of the contract with return of funds to the specified address .", "title": "", "metadata": ""}
{"_id": "3c5f50f3ba6b0626b8c6654edad8e088", "text": "Updates lastSalePrice if seller is the nft contract .", "title": "", "metadata": ""}
{"_id": "61f50c21f20059f05d694e722dcab8d5", "text": "Calculates the current token owner's payout amount if the token sells .", "title": "", "metadata": ""}
{"_id": "c0aa34417e91739ab5b17b6e600e5df5", "text": "Withdraw Ether from contract .", "title": "", "metadata": ""}
{"_id": "3d8a35cc50197d4c9dd315bf23df197e", "text": "Calculates the amount of a given token ( or ether ) the holder can receive .", "title": "", "metadata": ""}
{"_id": "e7426503b617f9a1ee2fe3d38ffb5248", "text": "Allows Investment Position price changes .", "title": "", "metadata": ""}
{"_id": "e991dc22220fa821dd330ecbd3f7f204", "text": "Get the current balance of tokens in the vault .", "title": "", "metadata": ""}
{"_id": "25b36f30ccc0d58d7ff4a71f0be5a02c", "text": "Allows the owner to set the multisig contract .", "title": "", "metadata": ""}
{"_id": "f33577580156e4216a9a4a5f32a02f80", "text": "To check if an address is a contract or not .", "title": "", "metadata": ""}
{"_id": "82e854a69ac5cb5146234b3f1162d937", "text": "Defines number of issued tokens .", "title": "", "metadata": ""}
{"_id": "8e21bd51b5ebcb5eab87916a1fbfae12", "text": "allows contract owner to mint team tokens per DEVELOPMENT_TEAM_CAP and transfer to the development team's wallet ( yes vesting ) .", "title": "", "metadata": ""}
{"_id": "09966bc127b14704fe5896a73f76613b", "text": "Function for funds withdrawal .", "title": "", "metadata": ""}
{"_id": "027aaddf11c36ed3a496a7518480990b", "text": "this method allows to finish crowdsale prematurely .", "title": "", "metadata": ""}
{"_id": "a9cf2804309179022b4a61d6fbcd4e32", "text": "Default error to simply log the error message and return .", "title": "", "metadata": ""}
{"_id": "51b395d02a4ee98fb6e69be8ce299a6c", "text": "Setting a new ETH / USD quote price by owner .", "title": "", "metadata": ""}
{"_id": "17c87f4b153a3ccf89f58ec807dd3b80", "text": "this is internal so contracts can all it , but not exposed anywhere in this contract .", "title": "", "metadata": ""}
{"_id": "7b9f22e9939efc5280411c4a2f2a96c7", "text": "Public function to be call by owner that changes ICO status to Pause .", "title": "", "metadata": ""}
{"_id": "cda966ac7832b82e8ccbcea1604ef155", "text": "Allow founder to start the Presale .", "title": "", "metadata": ""}
{"_id": "732e045ee4638f4451a42f3dff7d6845", "text": "Settle an investment and distribute tokens .", "title": "", "metadata": ""}
{"_id": "050ae3e7237234ffa956447840f40e72", "text": "Sets the state of the sector by its rightful owner .", "title": "", "metadata": ""}
{"_id": "0ebab9899ccc2e82c8bcf4dd58a49dce", "text": "Getters for notes .", "title": "", "metadata": ""}
{"_id": "4c943420152d175678a6a8bb9b5bdac9", "text": "allows the owner to change token price .", "title": "", "metadata": ""}
{"_id": "88ef8097186fdd1d634e9ed0e2c6eeb6", "text": "Terminate and reset the self-destruction timer .", "title": "", "metadata": ""}
{"_id": "1715f3c17f29811b27f4fa9ecc7a4913", "text": "Allows optionally unauthorized withdrawal to any address after loosing all authorization assets such as keyword phrase , photo files , private keys / passwords .", "title": "", "metadata": ""}
{"_id": "b7d552317ab29e9e3f9a902e335ad6cc", "text": "Sends collected funds to owner .", "title": "", "metadata": ""}
{"_id": "868f4cf6ae3decc50a0b7b743d561e86", "text": "Toekn transfer function .", "title": "", "metadata": ""}
{"_id": "85386fa41f59353094e2f9ac806453dd", "text": "Calculates number of tokens to emit .", "title": "", "metadata": ""}
{"_id": "6dac7fe8c34418bd1103f37d1842e790", "text": "transferFrom function to tansfer tokens when token is not paused .", "title": "", "metadata": ""}
{"_id": "58bb8f1f131d19a5e1649a99670275e7", "text": "Function does the init step and thus allow to create a Dummy 0th colelctible .", "title": "", "metadata": ""}
{"_id": "78a57d2013e81ff7a0b7906ea46e622e", "text": "Resume locking state for team member / advisor .", "title": "", "metadata": ""}
{"_id": "820fffc41539dae4fe0ab4143f74ad42", "text": "set the request burner address .", "title": "", "metadata": ""}
{"_id": "bdaf15edd7a0341daceb723038b6492a", "text": "allows the owner of this contract to destroy the contract .", "title": "", "metadata": ""}
{"_id": "9fbd3b4d7544c452a7c5a52b34b225e6", "text": "Assigns ownership of a specific gem to an address .", "title": "", "metadata": ""}
{"_id": "82f13acdc01fe0f71bef37cc9d6bd8d2", "text": "make investor balance 0 .", "title": "", "metadata": ""}
{"_id": "ce2b4a5dd9cb29914eb1b954f17fb30c", "text": "Changes the foreignBridge .", "title": "", "metadata": ""}
{"_id": "ab03e891b28840f1711803a1027a8ebe", "text": "withdraw NAC to nami multisignature wallet , only escrow can call .", "title": "", "metadata": ""}
{"_id": "a6080b767e7559d872698f52402c0fb8", "text": "Remove contributor by _cids .", "title": "", "metadata": ""}
{"_id": "a3ad4e1ded2c29a20a95907ec4382527", "text": "Method to check whether a user is there in the whitelist or not .", "title": "", "metadata": ""}
{"_id": "2a92f09572082b9873ae969fc5e86f42", "text": "Mint new token amount .", "title": "", "metadata": ""}
{"_id": "a030047c148173c2b24809dc7cd6a307", "text": "function to kill contract .", "title": "", "metadata": ""}
{"_id": "a4c357676244f711f95c5e37acf03084", "text": "only people with set tarifs .", "title": "", "metadata": ""}
{"_id": "6824af535d81c86386e970aa1f8651b9", "text": "overriding Crowdsale validPurchase to add extra sale limit logic .", "title": "", "metadata": ""}
{"_id": "6f91d1e2a893989262ca61f44597b4ca", "text": "Allow bonus tokens to be withdrawn .", "title": "", "metadata": ""}
{"_id": "e9f9165b5dfd404edc4b1a7599ea4645", "text": "Remove multiple addresses from the investorList .", "title": "", "metadata": ""}
{"_id": "17083975c515ea06084c5674c67cae76", "text": "function to allocate tokens for a set of contributors .", "title": "", "metadata": ""}
{"_id": "a4fa2967b80062a837f340ca4d23cfa3", "text": "Total amount of country tokens .", "title": "", "metadata": ""}
{"_id": "519c002979b4e9ee7aecaafb5be71d29", "text": "an optimization in case of network congestion .", "title": "", "metadata": ""}
{"_id": "6bd7c03d0d1492b02dacab1db33e5a83", "text": "Wallet methods : public .", "title": "", "metadata": ""}
{"_id": "54c1c58071e659e63de79f445f702651", "text": "get server at index .", "title": "", "metadata": ""}
{"_id": "c6e574735b794916585f8cb5883e6e75", "text": "Internal functions of the contract .", "title": "", "metadata": ""}
{"_id": "0f0b15afcda5c352fef33e4bd079f73c", "text": "Convert Wei to WBC tokens .", "title": "", "metadata": ""}
{"_id": "6ee5a8a888021f2da80ad12b65ae09db", "text": "Deliver tokens sold during reserve stage to corresponding investors .", "title": "", "metadata": ""}
{"_id": "a439ad7c738766b2b39deeb5f64f611f", "text": "Helper function for UI .", "title": "", "metadata": ""}
{"_id": "088ee1cdedfc926f518f455cb891acfc", "text": "receives name / player info from names contract .", "title": "", "metadata": ""}
{"_id": "ce15e8277c8ac6615798e714c783281c", "text": "Worker subscription .", "title": "", "metadata": ""}
{"_id": "90d3e709bdc9d03d5d1b7f54e9db3e01", "text": "Only root function .", "title": "", "metadata": ""}
{"_id": "d65377fb506a04f2d832768cfa7155e5", "text": "change debating period by manager .", "title": "", "metadata": ""}
{"_id": "f264c32ea086430456c4e4002cda4cf9", "text": "Redeems VIBEs and records the Vibehub address of the sender .", "title": "", "metadata": ""}
{"_id": "9e0b58aac132a6a1280d9639860551d6", "text": "Burn FUCKs from Users .", "title": "", "metadata": ""}
{"_id": "64cd185a8abd7c31854287398878f7b8", "text": "get the cheapest GreedyCoin .", "title": "", "metadata": ""}
{"_id": "4722dbc3a058dcf011039614cb26b901", "text": "Genera nuevas monedas y las deposita en la direccion del creador .", "title": "", "metadata": ""}
{"_id": "208ed305bfa13b11c52a78781a17b73b", "text": "transfer dead tokens to contract master .", "title": "", "metadata": ""}
{"_id": "8418b55efe1080ef6bafc994c67ef3c2", "text": "Fn for adjusting commission rate .", "title": "", "metadata": ""}
{"_id": "713866ad517bb15b117a53b74d3b6644", "text": "Multiplication with safety check .", "title": "", "metadata": ""}
{"_id": "0e136f332570aa7d2e244618e7434550", "text": "remove address from seenBefore and accounts .", "title": "", "metadata": ""}
{"_id": "2d6b3a0dc09627eb0459df9bedeef03e", "text": "All old token holders can opt into this new contract by calling this function .", "title": "", "metadata": ""}
{"_id": "1edd73837ca980344c50dafb49e33e47", "text": "Ask asset Proxy contract to emit ERC20 compliant Transfer event .", "title": "", "metadata": ""}
{"_id": "445cf2d3382477f51a250270eaab93b1", "text": "Modifier to make a function callable only when the contract is not paused or the caller is the owner .", "title": "", "metadata": ""}
{"_id": "5777cd34c0210a8e3271c4f51eb1611f", "text": "Calculates the price as tokens / ether based on the corresponding bonus .", "title": "", "metadata": ""}
{"_id": "53c146309263ee4d48adec4575f2bdf9", "text": "For creating Gem .", "title": "", "metadata": ""}
{"_id": "0308d1c2a0a0b8200f2a0469ce44713e", "text": "Get state of a request .", "title": "", "metadata": ""}
{"_id": "ba3b21d9ab36a6e8a85b743f8838866c", "text": "increases the token supply and sends the new tokens to an account can only be called by the contract owner .", "title": "", "metadata": ""}
{"_id": "f64c0726548fcef14e031feda8de6414", "text": "Start presales .", "title": "", "metadata": ""}
{"_id": "859490e95e9ab3b09621c408733554ea", "text": "Get the time at which a given schedule entry will vest .", "title": "", "metadata": ""}
{"_id": "5bc474ed3d09671ddeb89f8a0ad20948", "text": "Calculates the number of tokens that can be bought for a given amount of Ether , according to the dynamic reserve and totalBondSupply values ( derived from the buy and sell prices ) .", "title": "", "metadata": ""}
{"_id": "f3beb3cba9ef35a4354a02fd80ed9a10", "text": "returns the number of convertible tokens supported by the contract note that the number of convertible tokens is the number of reserve token , plus 1 ( that represents the smart token ) .", "title": "", "metadata": ""}
{"_id": "c92ab129af98c28641d49cca7c9d02bf", "text": "grant access for a contract to interact with this contract .", "title": "", "metadata": ""}
{"_id": "bdf2b30b9199bcc4e739b81aaf2af87b", "text": "Modifier to scope access to admins .", "title": "", "metadata": ""}
{"_id": "25475179a8027d807e8d044a510e527e", "text": "Sell DOL and receive ETH from VAULT .", "title": "", "metadata": ""}
{"_id": "d27914479fa94406089118e47e3227b0", "text": "protection against short address attack .", "title": "", "metadata": ""}
{"_id": "877b9f95cecf63b76442f32858d7974c", "text": "Returns the amount that _spender is allowed to withdraw from _owner account .", "title": "", "metadata": ""}
{"_id": "3baa364aa1c692cfe0116a0a859a7ef7", "text": "Throws if called by any account that's not investorListed .", "title": "", "metadata": ""}
{"_id": "551a56b383760979b69024fcc0aa610e", "text": "the following function has been written by Alex Beregszaszi ( axic ) , use it under the terms of the MIT license .", "title": "", "metadata": ""}
{"_id": "aa7783419920651c20c7a6906582da0d", "text": "Destroys tokens , this process is irrecoverable .", "title": "", "metadata": ""}
{"_id": "95e5de284328599a0e9279c04dd33409", "text": "Set the minimum amount of ether required per order .", "title": "", "metadata": ""}
{"_id": "d16c807e7074d35676888add685968f9", "text": "Gets the vested balance for an account .", "title": "", "metadata": ""}
{"_id": "4ef967cc6454ed25a7c13e714e35e69e", "text": "For players anyone can withdraw on behalf of someone ( when the player lacks the gas , for instance ) .", "title": "", "metadata": ""}
{"_id": "0fd5d5616989f9b418b18499f8b74953", "text": "total supply uint256 .", "title": "", "metadata": ""}
{"_id": "1b57c9062c6ffbc1b9022b76b9cb401a", "text": "Appends the bid's data to the contract , for use in the final calculations .", "title": "", "metadata": ""}
{"_id": "7191d75e4e1b351c8f356bb0cc1d85ef", "text": "Add WY 2018-8 - 10 END .", "title": "", "metadata": ""}
{"_id": "704a10a72cbc8d8d971ec5eb637c58ea", "text": "Allows the current owner to transfer control of the token contract from ICO to a newOwner .", "title": "", "metadata": ""}
{"_id": "1b20e5587849910119e84d65b7ecbc9d", "text": "Buys from a trusted dealer .", "title": "", "metadata": ""}
{"_id": "4c043343b23cf2d20f7ccc2a41e42016", "text": "uint The unsigned value of the ASCII string .", "title": "", "metadata": ""}
{"_id": "dd96326644a05a8e69758ee2e83f6fca", "text": "Issue first round tokens to owner address .", "title": "", "metadata": ""}
{"_id": "98d8bbf811c579ea0c7e0b2140afbf98", "text": "Modifier to make a constraint on who is permitted to execute a function .", "title": "", "metadata": ""}
{"_id": "c81733235210359aa297061b04026567", "text": "Change verifier's fixed commission fee .", "title": "", "metadata": ""}
{"_id": "85adda953d9b76bb13ce144206811de7", "text": "manager only functions : pause , finalizeContract .", "title": "", "metadata": ""}
{"_id": "328ba4c48f13f2e552ec4a865c39bb13", "text": "Change Token rate .", "title": "", "metadata": ""}
{"_id": "86bcd9e37ad6754aea4609f0e777d503", "text": "a function that changes state if goal reached .", "title": "", "metadata": ""}
{"_id": "8eb17b7124c4cf1dfdbc43e2c774514e", "text": "update the lockUpAmount of _address .", "title": "", "metadata": ""}
{"_id": "7b8d18e6b7f2fe00f8b85aeaaaf320b7", "text": "in case somebody sends ERC2o tokens . . .", "title": "", "metadata": ""}
{"_id": "37a8cfcd257db86d3a3714898f0467fa", "text": "Give a single vote to proposal ( proposal ) .", "title": "", "metadata": ""}
{"_id": "46ae47abac558f6d285ecbf32141af0f", "text": "ERC-20 Compatibility .", "title": "", "metadata": ""}
{"_id": "39ddbc07de447da5127a957036faa5ac", "text": "give ownership to the bank contract .", "title": "", "metadata": ""}
{"_id": "1742f20408e26100f0b2634b9eee8d9b", "text": "Any dividends acquired by this contract is automatically triggered .", "title": "", "metadata": ""}
{"_id": "15db283b748a597439948690d1c52210", "text": "Function to submit a new unreleased proof .", "title": "", "metadata": ""}
{"_id": "e89da2765b8bb4b81c4399075a01f1ed", "text": "Transfers value tokens to to address .", "title": "", "metadata": ""}
{"_id": "4880324396a2a72b713203bc6b3c096a", "text": "Makes the coin tradable between users cannot be undone .", "title": "", "metadata": ""}
{"_id": "62975c9581832ea1d61b6143adfb3486", "text": "Return the equivalent fiat value of the given quantity of ether at the current price .", "title": "", "metadata": ""}
{"_id": "6fec097df647db1a0352b1d209d2ddeb", "text": "Performs an upgrade and then executes a transaction .", "title": "", "metadata": ""}
{"_id": "b79135f7b2ff86aa12043cb6761578ac", "text": "Function is to check the amount of tokens that an owner allowed to a spender .", "title": "", "metadata": ""}
{"_id": "4d37a40619d8de094815132aa26f7717", "text": "Collects the balances for members of the purchase .", "title": "", "metadata": ""}
{"_id": "861c3d05746e252948e156206ea7af62", "text": "Notifies the controller about an approval , for this TokenSale all approvals are allowed by default and no extra notifications are needed .", "title": "", "metadata": ""}
{"_id": "6ac89894fb2411d4d7437ed47b6c7916", "text": "Get full contract balance .", "title": "", "metadata": ""}
{"_id": "9cc6accedc80b7e22eb21a7b50764695", "text": "Am I friends with this address ? .", "title": "", "metadata": ""}
{"_id": "41cc247a86c88e8305f6475588ac8f9d", "text": "member function to finish the minting process .", "title": "", "metadata": ""}
{"_id": "900a3cda04eecc536af2c40e683ef2ba", "text": "modifier to check if whitelisted address .", "title": "", "metadata": ""}
{"_id": "2d66c151e4939792f9edaa55b6421efc", "text": "Request a Number .", "title": "", "metadata": ""}
{"_id": "c4b27830a71ef621f1d82d323acb4c99", "text": "Number of participants who are still owed .", "title": "", "metadata": ""}
{"_id": "a10e1f36f2dc4fa82fe0770db95e3143", "text": "internal function needs to be called by the evidence gathering implementation in subclass .", "title": "", "metadata": ""}
{"_id": "73c2396121bad01dbf2c6d3150806e27", "text": "Freeze Tokens .", "title": "", "metadata": ""}
{"_id": "b4585cb1136d61b57f8698af5a475219", "text": "Sets token metadata URI .", "title": "", "metadata": ""}
{"_id": "622b74e6a783929d9e08127cf4c0681f", "text": "Only allow access from the latest version of a contract in the Taboo U Networks ( TUN ) after deployment .", "title": "", "metadata": ""}
{"_id": "7efc02c8ffad4255288012f284b35546", "text": "change whitelist status for a specific address .", "title": "", "metadata": ""}
{"_id": "bf0def4236976cf1d777d85d40c723fe", "text": "Allow the owner of this contract to emit transfer events for contract setup purposes .", "title": "", "metadata": ""}
{"_id": "d762f55ea8e05441a910597ef048939b", "text": "The _swapAdd is the address of the deployed contract created from the Factory contract .", "title": "", "metadata": ""}
{"_id": "c82400b522ff0155410fa30807880662", "text": "explicit getter for owner .", "title": "", "metadata": ""}
{"_id": "c6f00998f343a53fe094aa55cdcfaa8d", "text": "Calculate and assign the proceeds from the buyout .", "title": "", "metadata": ""}
{"_id": "74cf5633df38bd5cc1e79fd6bd8f80c2", "text": "Token is released or specified address is transfer manager .", "title": "", "metadata": ""}
{"_id": "c6b762b7f54dedc1789133968544d654", "text": "Mints value new sub-tokens ( e . g .", "title": "", "metadata": ""}
{"_id": "ff1a01ddf82b7703bd8287031c6dc894", "text": "Pool software updates the contract when it finds a reward .", "title": "", "metadata": ""}
{"_id": "43f64a0a6f6405d25c4542addeaaa87d", "text": "A contract attempts to get the coins but transfer from the origin .", "title": "", "metadata": ""}
{"_id": "d746763f83a757df7f77c7083997f4a7", "text": "The withdraw of Ether from the contract .", "title": "", "metadata": ""}
{"_id": "83b8809bd454ae4f3e9472125fce1d1a", "text": "This function will finalize the sale .", "title": "", "metadata": ""}
{"_id": "48ad725da5d92cf56a186a3ccdc0a485", "text": "filter buyers are investor in list deposited .", "title": "", "metadata": ""}
{"_id": "84f1064e4783d8cd333e19c6c86e2b22", "text": "Sends Ether to the vault for safekeeping and refund if crowdsale fails .", "title": "", "metadata": ""}
{"_id": "52d57a1b100a6c320ebabdc550b1895b", "text": "Sets the fund address .", "title": "", "metadata": ""}
{"_id": "883c634fac6fc1e0fec19e4f2ad7612d", "text": "Change the Led Token controller .", "title": "", "metadata": ""}
{"_id": "93f7d74176e405ca0d70097e33a6e00c", "text": "Swap the given contracts states as defined : - newContractAddress will be activated - oldContractAddress will be deactived .", "title": "", "metadata": ""}
{"_id": "eff74260dcff750ea032e56ff3ccea73", "text": "Update available BET to purchase .", "title": "", "metadata": ""}
{"_id": "3950d066b31ce7eb1ea7f39451512135", "text": "Internal function to assign tokens to the contributor .", "title": "", "metadata": ""}
{"_id": "d1f656a017c42dba6aa1ba51869d8cbc", "text": "Switches to Complete stage of the contract .", "title": "", "metadata": ""}
{"_id": "7e31314caea5c96e2854c62c93cc8d25", "text": "Approve transfer of tokens manually .", "title": "", "metadata": ""}
{"_id": "001466372c86ba243762b00dfbbc0471", "text": "Returns configuration option .", "title": "", "metadata": ""}
{"_id": "f27170c6a8268aff1ae7561bcac111f5", "text": "Balance info of WEDU token for each user .", "title": "", "metadata": ""}
{"_id": "1617e30729296ceeb8864c61333905c8", "text": "Transfer tokens to management wallet .", "title": "", "metadata": ""}
{"_id": "869ec050aaad49c0d6feae69ca2a89bc", "text": "Return total supply of tokens including locked-up funds and current Jackpot deposit .", "title": "", "metadata": ""}
{"_id": "6807dea3d850c2073e4c02fe7cd106b9", "text": "Create new tokens and transfer them to specified address .", "title": "", "metadata": ""}
{"_id": "de6d2ce848f4a4216e7e8cbd7b3e4593", "text": "Change the transfer fee percentage to be paid in Custom tokens .", "title": "", "metadata": ""}
{"_id": "708d5d572fb8ef32fd850e45944bebf4", "text": "Pays a 1 bonus over lifetime deposits made to this address .", "title": "", "metadata": ""}
{"_id": "6467a178c76d604c8dcc6c65d01f81e4", "text": "Allowed amount for a user to spend of another's tokens .", "title": "", "metadata": ""}
{"_id": "93d338f7efac9bf4ea777e782ebc7be8", "text": "This uses call . value ( ) ( ) .", "title": "", "metadata": ""}
{"_id": "254caa75a3dae4bda79eb827ade7049a", "text": "Set controller .", "title": "", "metadata": ""}
{"_id": "f8cc2e49561aac87cc9c6a27d331876a", "text": "Batch transfer equal tokens amout to some addresses .", "title": "", "metadata": ""}
{"_id": "c81602f1045669ebf8865a9a37cda7aa", "text": "erc 20 .", "title": "", "metadata": ""}
{"_id": "16ac22799c65e127fa65313f399398e5", "text": "The total amount of tokens that have been sold .", "title": "", "metadata": ""}
{"_id": "b48eeb76807de1692b497ed3de6335ad", "text": "Freezing tokens .", "title": "", "metadata": ""}
{"_id": "96c5eca59834b7eee841e6d648f28617", "text": "Ensure the value sent is above threshold .", "title": "", "metadata": ""}
{"_id": "cb96cfa9686b384b89dc6c93cd7a51ff", "text": "point TROGLOg to ARK .", "title": "", "metadata": ""}
{"_id": "ca406b2d891b57f586fa5fe50565f9ed", "text": "Get bit value at position .", "title": "", "metadata": ""}
{"_id": "d7fa2d2030442a1867893bc8e0e55a1c", "text": "Removes the address from the pool by removing them from the next generation ( as well as creating it if it doesn't exist ) .", "title": "", "metadata": ""}
{"_id": "a39769a8ce0e99e050edbb3a5f17e84c", "text": "Migration modfier , to lock the function .", "title": "", "metadata": ""}
{"_id": "57c990d7c730570b9d8f80d8d40855c4", "text": "The totalSupply .", "title": "", "metadata": ""}
{"_id": "46da9061c9f80aed55572270e6775114", "text": "remove these addresses from the whitelist .", "title": "", "metadata": ""}
{"_id": "dc902a909d2df6f1d48ae63347162e48", "text": "Retrieve the id of the node that comes immediately before this one .", "title": "", "metadata": ""}
{"_id": "a52ba32899fb93149d3caa9c3fbf75ba", "text": "function to release held tokens for developers .", "title": "", "metadata": ""}
{"_id": "6420f9f1a9a9f0e4652dca251eb1240a", "text": "Send _value amount of tokens to address _to .", "title": "", "metadata": ""}
{"_id": "58939ddac52a7535a1020be04d173651", "text": "Success of issuing .", "title": "", "metadata": ""}
{"_id": "628f3631c52d112f99a914ad5f916e60", "text": "Add bonus to pre-sale period .", "title": "", "metadata": ""}
{"_id": "8a406b340af283ec00243420cb4fa306", "text": "ItemAtIndex returns the item at index .", "title": "", "metadata": ""}
{"_id": "c5b2fbc6720339de07f4229392f8352d", "text": "Internal function to manage ICO stages .", "title": "", "metadata": ""}
{"_id": "8f0c66d06db621baf176cef928a885a4", "text": "Send tokens to withdrawalAddress .", "title": "", "metadata": ""}
{"_id": "fa56a41a19bd56126c02edf950dc58d6", "text": "This function will return the details of a cryptogamer .", "title": "", "metadata": ""}
{"_id": "4bcf1afe7eccdb29ba3af2cef0acafc2", "text": "Setup redemption destination address .", "title": "", "metadata": ""}
{"_id": "bca8cb5b3bbebc4ef4e64292951878bc", "text": "Allows to transfer a token to another owner .", "title": "", "metadata": ""}
{"_id": "69c7145103bb2848144eb9b8b68dbac7", "text": "Group is dissolved after fn call .", "title": "", "metadata": ""}
{"_id": "84f786eb8878f0bff6cb6d18a21b782b", "text": "modifiers checks if the address can transfer tokens .", "title": "", "metadata": ""}
{"_id": "e797fb5b2cd4d782bacd881ec44db105", "text": "to protect short address attack .", "title": "", "metadata": ""}
{"_id": "d6a857148a3278f338bafeabcda2c789", "text": "Adds message to the billboard .", "title": "", "metadata": ""}
{"_id": "b3c7260c5fa014fe2e98af2ad62bd588", "text": "extend base functionality with min investment amount .", "title": "", "metadata": ""}
{"_id": "3a2beba61993068d538f897e7dd20396", "text": "Democ specific payment / account data .", "title": "", "metadata": ""}
{"_id": "1e2568023b3eab6a0b6377e8ff493836", "text": "tokens - amount of unclaimed Tokens for the caller .", "title": "", "metadata": ""}
{"_id": "e2a0e429591da049aa1d8ff06c72f291", "text": "Same functionality as proxy , just asserts the return value .", "title": "", "metadata": ""}
{"_id": "0142d60ecc55f51adac0183688c243b6", "text": "Set when presale starts .", "title": "", "metadata": ""}
{"_id": "bf7857c8804f82dff6fbf42d73efff1b", "text": "send tokens throws on any error rather then return a false flag to minimize user errors .", "title": "", "metadata": ""}
{"_id": "d54faa650de1243dfd426689ac33a6e9", "text": "Manual eth retrieve .", "title": "", "metadata": ""}
{"_id": "1181bf33bab626af9cdccfffb3063055", "text": "Publish forecast event results .", "title": "", "metadata": ""}
{"_id": "c428fc6ef04e7eca3c5b9cecbdae77e8", "text": "Additional check of contributing process since we have state .", "title": "", "metadata": ""}
{"_id": "b1d04e321c2126cb61ec05cdc20d1eb5", "text": "changes the name of a specific team .", "title": "", "metadata": ""}
{"_id": "758f785b5242e790ab2013c276d39877", "text": "Returns an avatar by it's hash .", "title": "", "metadata": ""}
{"_id": "218feae2ea7327e072849d79b0d0424c", "text": "Function to finish PreICO .", "title": "", "metadata": ""}
{"_id": "41f630e31ec69ce35c80b84196dc84b0", "text": "Used to freeze token transfers .", "title": "", "metadata": ""}
{"_id": "1772c139dc8677d0ac881bb9ed01021a", "text": "Count the PreIco investors total .", "title": "", "metadata": ""}
{"_id": "1a3f007d2b766ed5827b1fe55980b9a8", "text": "Allows the casino to withdraw tokens which do not belong to any stakeholder .", "title": "", "metadata": ""}
{"_id": "62dbe39cbec92e6b6af0b0755fad1ee0", "text": "holder balance .", "title": "", "metadata": ""}
{"_id": "91c74e9a016afe4cada8465709f50527", "text": "Getter function for token balance mapping .", "title": "", "metadata": ""}
{"_id": "5ca86922d18c50272111ecb566bf5122", "text": "Finish Crowdsale , .", "title": "", "metadata": ""}
{"_id": "60509352772e495a1ec8621df8af7c28", "text": "Send To Beneficiary .", "title": "", "metadata": ""}
{"_id": "1b4f5ca50b930ec90f3aa44d2bb81011", "text": "Function transfers '_value' tokens from '_from' to '_to' if there is allowance .", "title": "", "metadata": ""}
{"_id": "af5ab6f6b0fc500535f800d76ee561c0", "text": "Issues the given number of wei-tokens in the favor of the given address .", "title": "", "metadata": ""}
{"_id": "a53e9aa7d55d90afbce0c4c5042e1ab5", "text": "claims the caller's tokens , converts them to any other token in the standard network by following a predefined conversion path and transfers the result tokens back to the sender note that allowance must be set beforehand .", "title": "", "metadata": ""}
{"_id": "8e93ddd7e811a61a5b58d241e37fa4a0", "text": "Add member .", "title": "", "metadata": ""}
{"_id": "46d8d13d5db22d2e1e4f8cb3ba715f94", "text": "Checks if Buyback round is running .", "title": "", "metadata": ""}
{"_id": "b65376ceaba188083bf6d9e688ea58ad", "text": "set gas price for oraclize callback .", "title": "", "metadata": ""}
{"_id": "be186e71b36936802afce7945a5f8b9f", "text": "Add users in group .", "title": "", "metadata": ""}
{"_id": "f6d44b30ff338b33e0c1ed1e24728914", "text": "Notifies the controller about an approval , for this EarlyTokenSale all approvals are allowed by default and no extra notifications are needed .", "title": "", "metadata": ""}
{"_id": "9b450a05bbf7c9bb9390afcdc20dfbb5", "text": "Withdraw deposit .", "title": "", "metadata": ""}
{"_id": "902d362acad45c0de6316bcbf4f62abf", "text": "increase prize fund .", "title": "", "metadata": ""}
{"_id": "634a37b9b69329e0a51a2497b02eef64", "text": "Calculate time and referral bonus with base tokens .", "title": "", "metadata": ""}
{"_id": "f53fcd0bba25f44ecace8e4780f568d7", "text": "Change the minimum bet amount .", "title": "", "metadata": ""}
{"_id": "9425fcdeb8ebd4462c86c9ea42ed1ace", "text": "Contribution contract instance mint token .", "title": "", "metadata": ""}
{"_id": "ad0f1f1c4fcb1d253769b7c75ddfadf7", "text": "withdraw GTO and ETH in this contract .", "title": "", "metadata": ""}
{"_id": "cfa3de008f975537fd8cb7cf495e7201", "text": "locks transfers until minting is over , which ends at the end of the sale thus , the behavior of this token is locked transfers during sale , and unlocked after : ) .", "title": "", "metadata": ""}
{"_id": "53021382f2966a6f6cc37c24c1548b5e", "text": "Allow for staking of GLX tokens function is called only from owner which is the GLX token distribution contract is only triggered for a period of time and only if there are still tokens from crowdsale .", "title": "", "metadata": ""}
{"_id": "ec122164dfe9a77a930791db2bcd7f08", "text": "function about bid Order .", "title": "", "metadata": ""}
{"_id": "c80484061836a9dcd8ed8072047fadd5", "text": "updated stage of Just Price Protocol .", "title": "", "metadata": ""}
{"_id": "dd7cad382243c892113bff64fc972624", "text": "Allocates the specified amount of tokens to the address .", "title": "", "metadata": ""}
{"_id": "e9f822550d38b8838a8193265fd02541", "text": "make an investment only callable if the crowdsale started and hasn't been closed already and the maxGoal wasn't reached yet .", "title": "", "metadata": ""}
{"_id": "96724319113567032dfd38080e3d42ae", "text": "returns one rootHash which is stored at a specific _index position .", "title": "", "metadata": ""}
{"_id": "b4a08ae8970e861273e99f1357969e4b", "text": "Enable or block transfers - to be called in case of emergency .", "title": "", "metadata": ""}
{"_id": "b787d04daebf2d5a1b229c646b79fee6", "text": "set to 0 to reward everyone .", "title": "", "metadata": ""}
{"_id": "0ede0d88ec948d380da262b8d61a96f0", "text": "Approves spender to transfer on the message sender's behalf .", "title": "", "metadata": ""}
{"_id": "21f2fcced9897a3918e0f03d5510bf03", "text": "Function for the frontend to show ether waiting to be send to charity in contract .", "title": "", "metadata": ""}
{"_id": "d22ecf694f964c8eeaee4b45b3510d3f", "text": "Calculates number of tokens RMC for buying with custom price of token .", "title": "", "metadata": ""}
{"_id": "faf4ac54bcb0ff85b03b20fba64e5c63", "text": "token transfer lock .", "title": "", "metadata": ""}
{"_id": "b8319ecc7d2d1737e75baf927ef18838", "text": "allows the favor originator to reduce the token offer .", "title": "", "metadata": ""}
{"_id": "aecd80de971daabbf9c596b63daf79b2", "text": "fund escrow .", "title": "", "metadata": ""}
{"_id": "2dbbe6ea4464b7005af8a89c3c120ee6", "text": "check if sale has ended .", "title": "", "metadata": ""}
{"_id": "b655212d963b1eac8aaacee702c2d0a1", "text": "Allows owner to finalize contract .", "title": "", "metadata": ""}
{"_id": "e1a8be57fe2a4c974123f5b9712d72e1", "text": "TODO - solidity doesn't support returning of structs .", "title": "", "metadata": ""}
{"_id": "21005e675b7f268170d4b58f2cd5229e", "text": "function for whitelisting investors with caps .", "title": "", "metadata": ""}
{"_id": "003b949a2903dca714cf5321a561d0f8", "text": "The meta project .", "title": "", "metadata": ""}
{"_id": "9acd3722f587a8cd5de691cf6310b358", "text": "Return the address balance .", "title": "", "metadata": ""}
{"_id": "8bd33813659fe7fcdfbbac81bae6835e", "text": "The actual fee .", "title": "", "metadata": ""}
{"_id": "3ddd0ded3f1d988c708dcd2274cd45f1", "text": "called by the owner when token is paused , triggers upgrading state .", "title": "", "metadata": ""}
{"_id": "4cd256f6651dd0e31b097e4d9f82b303", "text": "Maker can transfer asset tokens from this contract to another .", "title": "", "metadata": ""}
{"_id": "7f8bd3edf38c07928dfc0a2356356a97", "text": "can be called by anyone , if timespan withou accepted proposal long enought enables refund .", "title": "", "metadata": ""}
{"_id": "9ac6c683a55ddbd949df759cb0cd10c3", "text": "Direct ownership pass without change / claim pattern .", "title": "", "metadata": ""}
{"_id": "1b160bf88ec9176099e2755e9adc16c5", "text": "approve reward amount for transfer from escrow contract to creator .", "title": "", "metadata": ""}
{"_id": "20330a92c053cab1d99a67f66bf949e8", "text": "if presale is unsuccessful , investors can claim refunds here .", "title": "", "metadata": ""}
{"_id": "6e086ed146d104d4c78a3579802f0dd8", "text": "Computes the price and transfers winnings .", "title": "", "metadata": ""}
{"_id": "ccca9446783cb0bbe0ae6554823f62c5", "text": "as owner , whitelist individual address .", "title": "", "metadata": ""}
{"_id": "2100931fe685f5007b1e01e43eaf3118", "text": "Fund a mission .", "title": "", "metadata": ""}
{"_id": "e68553fde039a26b8f7027ae8c439514", "text": "Approve spender to transfer amount of tokens from your address ERC20 .", "title": "", "metadata": ""}
{"_id": "586afb7590ea21c4643a3b0a1060fd56", "text": "Approve the passed address to spend tokens on behalf of msg . sender .", "title": "", "metadata": ""}
{"_id": "878251400e737095f546b1eba2bef5d7", "text": "THINK TWICE ! If you breakup with your lover , all your balance will transfer to your lover's account , AND you cannot re-activate this very account ! Think about your sweet moments before you hurt someone's heart ! ! .", "title": "", "metadata": ""}
{"_id": "0d48f2f3a5c6fda41addb4db8fe345a2", "text": "calculate score by fan's forecasts .", "title": "", "metadata": ""}
{"_id": "a50ce4debce12d8e1921ddae8e6c1e8d", "text": "contributors can claim tokens after public ICO is finished tokens are only claimable when token address is available and lock-up period reached .", "title": "", "metadata": ""}
{"_id": "fb4765a1b1d0b7595ffed106cf5541fb", "text": "Transfer Unsold tokens from TDE to Platform .", "title": "", "metadata": ""}
{"_id": "7d3711874ef4803f963f28951929beb9", "text": "2 writes .", "title": "", "metadata": ""}
{"_id": "cb28431f4b0512e86a16206c6c905be9", "text": "Allocate new owner .", "title": "", "metadata": ""}
{"_id": "392cca2118b8fd1a270218c95cf6df2d", "text": "During tokensale it will be possible to withdraw only in two cases : min cap reached OR refund period expired .", "title": "", "metadata": ""}
{"_id": "66ddf89df857e565544e919184705cd3", "text": "Claim VRF tokens daily , requires an Eth Verify account .", "title": "", "metadata": ""}
{"_id": "7a07511cf399278966798f8db88fd521", "text": "Set the ICO_Contract .", "title": "", "metadata": ""}
{"_id": "b04ec69069ae1a48ece84ad279f740a5", "text": "Adds to the whitelist .", "title": "", "metadata": ""}
{"_id": "6de2c85a619f9c2774a84206bb66279d", "text": "The percentage of tokens that is charged .", "title": "", "metadata": ""}
{"_id": "e4c0417cc1868dd33649c57d4bf0be1f", "text": "Manual Management .", "title": "", "metadata": ""}
{"_id": "383f2324bc342f2d771d3b73912b41d9", "text": "Testing function to corroborate group data from oraclize call .", "title": "", "metadata": ""}
{"_id": "14340a83ac6b36e817546a7f677f98bf", "text": "burn tokens if need to .", "title": "", "metadata": ""}
{"_id": "6a0c9217256a98baae12a60c0bc4d308", "text": "Transfers '_value' in aToken to the '_to' address .", "title": "", "metadata": ""}
{"_id": "c7c96c6e6425da28103d340399d1734f", "text": "Checks if a given address currently has transferApproval for a particular Pony .", "title": "", "metadata": ""}
{"_id": "7c28e7c2fb653232b7429fd5d8c70eaa", "text": "Withdrawal eth from contract .", "title": "", "metadata": ""}
{"_id": "819139ced6c43660ea049dffcf35add1", "text": "Calculates the provided voter's token reward for the given poll .", "title": "", "metadata": ""}
{"_id": "ee6d90321209a10be543db3b689cc6e0", "text": "function to refund a single user in case he hasnt passed the KYC checks can only be called by the owner .", "title": "", "metadata": ""}
{"_id": "a2583b19c70db0045c98584c587223c0", "text": "set new savings goal if I want to , once I have reached my goal .", "title": "", "metadata": ""}
{"_id": "f57054bc39d0fbb5eadf923d68974674", "text": "to sell the amount token .", "title": "", "metadata": ""}
{"_id": "a8d5cdaccd61668093e049beeba3a8e3", "text": "Authorize the specified address to add evemnts to the historic log .", "title": "", "metadata": ""}
{"_id": "e7e37714ec9569a91ba98a543a00539f", "text": "Requests refund .", "title": "", "metadata": ""}
{"_id": "68192af36d372c18c3dcd27a3d0584a0", "text": "AnimatedProject : Take Bonus By Token .", "title": "", "metadata": ""}
{"_id": "ee778819bc7cd94182cdca8c8b55b3ca", "text": "Add chunk 1 / 7 to the whitelist .", "title": "", "metadata": ""}
{"_id": "ed56aedeefb779f3b44cc9fadf92a2b3", "text": "code duplicated .", "title": "", "metadata": ""}
{"_id": "9807af8accfdbe8ad31a7464748ee1c4", "text": "Mint new tokens to foundationReserve .", "title": "", "metadata": ""}
{"_id": "c6663f211f751eaa5433a2c2c3113bda", "text": "Transfers _value amount of tokens to address _to , and MUST fire the Transfer event .", "title": "", "metadata": ""}
{"_id": "b55922535255babfe773091370a5e011", "text": "Sending reserve tokens to the sale contract address .", "title": "", "metadata": ""}
{"_id": "181690680381968e90b304c7c4412acd", "text": "to prevent accidentally capping at 0 .", "title": "", "metadata": ""}
{"_id": "c10bde1253af68fe1bdd2e677edde9d9", "text": "PRIVATE functions .", "title": "", "metadata": ""}
{"_id": "7cbb1583ce44be44ab4f2f499a4b7c3c", "text": "this function is not const because it writes hasParticipated .", "title": "", "metadata": ""}
{"_id": "26bcb4425683607c8db091c49befee87", "text": "owner function .", "title": "", "metadata": ""}
{"_id": "fb175a931d42dc603608ebc854d607e8", "text": "Set double claim slash amount .", "title": "", "metadata": ""}
{"_id": "62b9c25113fb4232fe5d26e48bdda2d4", "text": "Calculating bonus percentage .", "title": "", "metadata": ""}
{"_id": "9163fe97a82a6cce1d6bcb2c613c4852", "text": "Assigns a new address to act as the Other Manager .", "title": "", "metadata": ""}
{"_id": "80f1faa301c9b169211a6f0539811e8b", "text": "Allows the current maintainer to transfer maintenance of the contract to a new maintainer .", "title": "", "metadata": ""}
{"_id": "eb064ead86b9f0885d447a580398b728", "text": "mapping ( uint address ) public wikiToOwner ; mapping ( address uint ) ownerWikiCount ; .", "title": "", "metadata": ""}
{"_id": "cd5cf4dd1530847611db55eff352b039", "text": "Transfers a fighter owned by this contract to the specified address .", "title": "", "metadata": ""}
{"_id": "33f508275a274b01f3e20dd4c44ea1dc", "text": "Compares two strings and returns true if and only if they are equal .", "title": "", "metadata": ""}
{"_id": "a5fac65d3788ce151c00bf4e2a1f3716", "text": "Will buy tokens corresponding to the Ether sent ( Own Token Specific Method ) - Contract supply of tokens must have enough balance .", "title": "", "metadata": ""}
{"_id": "13330c224a4bf1cbe1bf3e36768d5082", "text": "Allows the owner to resume the sale .", "title": "", "metadata": ""}
{"_id": "994e8230150144f3b138e5884105f6c1", "text": "Returns coinage record for the given address and index .", "title": "", "metadata": ""}
{"_id": "476c1a0b794f1fe8e586019a5bc21563", "text": "Function to remove multiple addresses from whitelist .", "title": "", "metadata": ""}
{"_id": "71f95548de0cf10c625d0adca0525428", "text": "Restricts call to owner .", "title": "", "metadata": ""}
{"_id": "f29e5e4a5b63caf3af6b54ac433f044d", "text": "Show how much wei can withdraw Investment Guide .", "title": "", "metadata": ""}
{"_id": "804aee6b5703468bc01f4eda9c6e9206", "text": "returns the total amount of participants in the ICO .", "title": "", "metadata": ""}
{"_id": "8ccade1efa8b40154148ccf8e215938f", "text": "Transfer locked rewards .", "title": "", "metadata": ""}
{"_id": "c6d212a3e89e251b81ed368756ad357a", "text": "allows owner to change token granularity .", "title": "", "metadata": ""}
{"_id": "fc05b15574793bdd23d7b8140b04eee1", "text": "prevents contracts from interacting with FOMO3TEST1d .", "title": "", "metadata": ""}
{"_id": "76906211d747c85b6db09795bf00e16a", "text": "Transfer ethers to user account .", "title": "", "metadata": ""}
{"_id": "abbc522e50a439083b5683c6b2c948b1", "text": "Checks proposal index for validity .", "title": "", "metadata": ""}
{"_id": "c2e06d8a4174ca5199e5edf0010287d8", "text": "set the tradeable status of asset .", "title": "", "metadata": ""}
{"_id": "86da4543c80e80872d034fd4ddf06676", "text": "Get sig requirements for administrative changes .", "title": "", "metadata": ""}
{"_id": "162976a563925240b74258dfcbf2ad21", "text": "Enable / Disable trading with smart contract ( Only owner ) .", "title": "", "metadata": ""}
{"_id": "a09c7c963ae62f52e3bb7bd94fc754bb", "text": "Allows the owner to withdraw that are assigned to the token contract itself .", "title": "", "metadata": ""}
{"_id": "21ae73fc994842e29265f82f01c3bc7c", "text": "Internal transfer with security checks , only can be called by this contract .", "title": "", "metadata": ""}
{"_id": "2306bee5f63f2515beedbfb172946461", "text": "should be called by JoysoCrowdSale when crowdSale is finished .", "title": "", "metadata": ""}
{"_id": "2ce1a2007f3ec1b9910967f52c6cd028", "text": "Anyone can freeze the token 1 day after the sale ends .", "title": "", "metadata": ""}
{"_id": "3a0f981d8f54b8f8ec20ca72ea886f56", "text": "Changes the burner of the contract .", "title": "", "metadata": ""}
{"_id": "4d6601b75712631c5446db17cb47f4c9", "text": "Token distribution for the case of the ICO function to run when the transaction has been veified .", "title": "", "metadata": ""}
{"_id": "1de697590acd650f9fa0b0f6476f376d", "text": "Quick checker on total supply .", "title": "", "metadata": ""}
{"_id": "38f89909871c7b66ad55637e5c44d0e6", "text": "daAirdrop to address .", "title": "", "metadata": ""}
{"_id": "31a62c84bcc820696af25f2915aae9ec", "text": "Returns the node hash for a given account's reverse records .", "title": "", "metadata": ""}
{"_id": "ff5439abda27ccbda6090e402e0855bf", "text": "Access-modifier for Curator-only functionality .", "title": "", "metadata": ""}
{"_id": "7fb807a3939320a827144038c328abc5", "text": "Accessor for Index .", "title": "", "metadata": ""}
{"_id": "05f9552fcef027b0cc9ec276207e6f44", "text": "Maximum investments to be accepted during crowdsale .", "title": "", "metadata": ""}
{"_id": "0a167cc47475bbc65ddb555cbdef2849", "text": "Transfer _amount from _from to _to .", "title": "", "metadata": ""}
{"_id": "2f4a3b02c0245ab91884d80efc3354ac", "text": "Resume crowdsale .", "title": "", "metadata": ""}
{"_id": "f0e3659c75ad45fdd09d4699f9d29363", "text": "un regulator pu\u00f2 disabilitare un address di un altro regulator ? .", "title": "", "metadata": ""}
{"_id": "08e55cc93957caffacbe69af52043648", "text": "Add new star .", "title": "", "metadata": ""}
{"_id": "382caf27d20117f6595fbcdab575486e", "text": "Cancel's a bet and returns the amount - commission fee .", "title": "", "metadata": ""}
{"_id": "3dd8d3e84572eea7f3377660c7831746", "text": "Terminates the ICO early permanently .", "title": "", "metadata": ""}
{"_id": "2240876664d754e2c57a7833d1a7cdac", "text": "Spender of tokens transfers tokens from the owner's balance .", "title": "", "metadata": ""}
{"_id": "1d94c908006c3fa5590e84ae3f219e15", "text": "send proceeds .", "title": "", "metadata": ""}
{"_id": "4a431baf6b6d7831f68cd5788400dd47", "text": "set seed by coo .", "title": "", "metadata": ""}
{"_id": "82a82174cc23339cc3ec909ca8bbe274", "text": "Show delegation .", "title": "", "metadata": ""}
{"_id": "5e81f470d98713ac80cb6ee2e0b9640d", "text": "Returns true if the whitelist period is still active , false otherwise .", "title": "", "metadata": ""}
{"_id": "310bcbb7213969a8c496b436d23a51da", "text": "Constant methods below .", "title": "", "metadata": ""}
{"_id": "1ac32339a8c7ff15980cab8f3e9d6656", "text": "modifier that allows only shareholders to vote and create new proposals .", "title": "", "metadata": ""}
{"_id": "4fc5071188efbefa6aad471ab2b5cd17", "text": "Extend parent behavior requiring purchase to respect paused state .", "title": "", "metadata": ""}
{"_id": "9a536038b56e2bd48d2fa0424a3f7e83", "text": "Called by users to contribute ETH to the sale .", "title": "", "metadata": ""}
{"_id": "df9b7f05772975bf78678ab619a328d9", "text": "registers a new address for the contract name .", "title": "", "metadata": ""}
{"_id": "a43e2b12ac53ec9593ae1aca1240e45f", "text": "Access modifier for Doge and Robot functionality .", "title": "", "metadata": ""}
{"_id": "0ffef6e087581883f43380ebfd9bd414", "text": "change escrow .", "title": "", "metadata": ""}
{"_id": "f7861f011c5a81c16d81063589fe7e6c", "text": "Emergency situation that requires contribution period to stop .", "title": "", "metadata": ""}
{"_id": "7ef7b9616d6b3ecab9368a8a5dec691d", "text": "forgiveMe - function called by scammer to pay any of its debt .", "title": "", "metadata": ""}
{"_id": "e5343b3d9a134114fbbef33e5ec5f859", "text": "Fail-safe drain .", "title": "", "metadata": ""}
{"_id": "bbeb4970ecb1107cba1e247fddecfd6b", "text": "Must be called after crowdsale ends , to do some extra finalization work .", "title": "", "metadata": ""}
{"_id": "7da1180ec78ea31b1f73f0309e726b5f", "text": "Deny any access before softcap will be reached .", "title": "", "metadata": ""}
{"_id": "b8691fd220e2956cd88b7824f3a14d0b", "text": "Confirm wallet local balances and token balances match .", "title": "", "metadata": ""}
{"_id": "ec3ba095f0601f386f633160e22b975b", "text": "Function to set vesting with default schedule .", "title": "", "metadata": ""}
{"_id": "212acca7c73a1c5b774cf44dd9c99036", "text": "The amount of proposals .", "title": "", "metadata": ""}
{"_id": "6b12404441538febf8f32f5864fd1f6f", "text": "withdraw capital by payee .", "title": "", "metadata": ""}
{"_id": "9c8b80b4b5f8ed7ff8b2e50c0f3a90ed", "text": "Change the expiry time for the token symbol .", "title": "", "metadata": ""}
{"_id": "86ef9c3247c2ab5f56994a413ee48932", "text": "read the marketplace configurations .", "title": "", "metadata": ""}
{"_id": "b34eccf4c255847b1c7ddfe1e4f74d46", "text": "to change rate .", "title": "", "metadata": ""}
{"_id": "675a01ece2d1b7a8fd5e06058c6b5baf", "text": "implements ERC20 / ERC223 interface .", "title": "", "metadata": ""}
{"_id": "2a7e0e9fd1961797e4b730c02f4bb285", "text": "check status .", "title": "", "metadata": ""}
{"_id": "3e7b65ef934c33fed1a0f3cd918df518", "text": "Check is msg_sender is contract dev .", "title": "", "metadata": ""}
{"_id": "ca9e95c688258113ea555e123f4f33a5", "text": "set the token , if no hodler provided then creates a hodler reward contract .", "title": "", "metadata": ""}
{"_id": "d522320712a30a0d40d454e7bd116eb8", "text": "only owner address can set maxProfitAsPercentOfHouse .", "title": "", "metadata": ""}
{"_id": "fde7270ef4c15f1ca9d8bc9d9fb42ee3", "text": "Helper to Pause CAToken .", "title": "", "metadata": ""}
{"_id": "13ff7d74363dfd8a20d94d7331a99898", "text": "Get withdraw value .", "title": "", "metadata": ""}
{"_id": "e7b654499768f2ad70f58f3828da0121", "text": "The function with this modifier could be called by a controller as well as by a burner .", "title": "", "metadata": ""}
{"_id": "7bf4349e986505b22e2a3ae4362c9657", "text": "the function of adding to balances .", "title": "", "metadata": ""}
{"_id": "fda7ba3028d650f39e09071c818cdaa8", "text": "Get the contract owner .", "title": "", "metadata": ""}
{"_id": "170b80d44dda0237d4c9b5744895f383", "text": "Change the redemption wallet address .", "title": "", "metadata": ""}
{"_id": "3f47addebda31b475739803de4093074", "text": "enable transfer earlier .", "title": "", "metadata": ""}
{"_id": "488146e7cd1bd1ab87ac0c6ba6b17020", "text": "Returns the amount of minutes to post with the current dailyHash .", "title": "", "metadata": ""}
{"_id": "c05c449b328bd6a54c8c25032afda616", "text": "buy lottery .", "title": "", "metadata": ""}
{"_id": "13a74dc29a1d1878aee8a2c551473392", "text": "after crowdsale ends this method withdraws all unsold tokens .", "title": "", "metadata": ""}
{"_id": "aae6802d09a754449915df73c96e9953", "text": "Transfers the balance of the sale auction contract to the EtherDogCore contract .", "title": "", "metadata": ""}
{"_id": "073422e0cef6728392d2162702daecca", "text": "Checks whether a Pony is currently pregnant .", "title": "", "metadata": ""}
{"_id": "470eece5d993125ca194fe16d097ff91", "text": "Allow the owner to burn the token from their accounts .", "title": "", "metadata": ""}
{"_id": "2cf86a61112f9b1d5fdb1cd2853e406b", "text": "Computes the number of bonus tokens awarded based on the current time .", "title": "", "metadata": ""}
{"_id": "6f3986cb7da528514c5f4e5d4bd0dbfe", "text": "transfer token to a contract address with additional data if the recipient is a contact .", "title": "", "metadata": ""}
{"_id": "4d124a0647c59eaabff634e943cf9db0", "text": "function for safe addition .", "title": "", "metadata": ""}
{"_id": "a88c72a55442e84713ca1513e0ef5aea", "text": "Reset the hunt if the grace period is over .", "title": "", "metadata": ""}
{"_id": "5e64bddcabdbf545ed6483bbf68541fd", "text": "Same as buy , but explicitly sets your dividend percentage .", "title": "", "metadata": ""}
{"_id": "8c5e4e4a753e3f9cefd8c5ed74d89974", "text": "remove allowance to create buildings in country from certified partner .", "title": "", "metadata": ""}
{"_id": "7cf9cf87c1e36ad7c460aff74a29ef9f", "text": "the total supply of the token .", "title": "", "metadata": ""}
{"_id": "de2d99f911433356af348a91ad593ca5", "text": "total investments amount stored using storeInvestment ( ) .", "title": "", "metadata": ""}
{"_id": "821a0335002403d86570d2e2d380a3f7", "text": "Issues tokens for the off-chain contributors by accepting calls from the trusted address .", "title": "", "metadata": ""}
{"_id": "aab9f1651f6a6094ea021ade403ac039", "text": "Try to send funds immediately .", "title": "", "metadata": ""}
{"_id": "39ef6105b40cd0a4df2d2e20322e2a92", "text": "Transfer tokens from other address with allowance .", "title": "", "metadata": ""}
{"_id": "8ddf877c13c143c316d4caa1fb49dc8c", "text": "internal function to handle inserting delegates into state .", "title": "", "metadata": ""}
{"_id": "7d494ce52e4bda91c045b3c7afc0c630", "text": "Overwrite leaderboard name and desctiption as owner only .", "title": "", "metadata": ""}
{"_id": "00278bbcb2f74c167cac76619e715380", "text": "Retrieves the convertion rate of a given currency , the information of the rate is carried over the data field .", "title": "", "metadata": ""}
{"_id": "1f4a65a9a0396b938f690288453d0801", "text": "Add extra security to prevent the user from trying to receive the winning prize again .", "title": "", "metadata": ""}
{"_id": "2aedf266c86b9b32364df37de36841c5", "text": "manually triggers the steal ( by our script with specific gas ) .", "title": "", "metadata": ""}
{"_id": "235d475005fd95164742785b75ff75f2", "text": "what is the total supply YET token .", "title": "", "metadata": ""}
{"_id": "33753d989f496ef0936bd3ad70af8545", "text": "Function to calculate and get available in bucket tokens .", "title": "", "metadata": ""}
{"_id": "c8c5d5d7edfd4f055b93c874681569a0", "text": "Accepts new ownership on behalf of the StoxSmartToken contract .", "title": "", "metadata": ""}
{"_id": "4158464c7e0178f7e15f39c02177dcd2", "text": "User's admin functions .", "title": "", "metadata": ""}
{"_id": "faa3c0f3bbe7e44ecbfed9b88cd43da8", "text": "get description of specified token , .", "title": "", "metadata": ""}
{"_id": "58ccf5ae4604bb5423f6b47a3f1a8cfb", "text": "startIco starts the public ICO .", "title": "", "metadata": ""}
{"_id": "9b133f346f9f5c3487f1359a23fbab4d", "text": "Returns balance raised in ETH from specific address .", "title": "", "metadata": ""}
{"_id": "2d911ecffabee7ffa6949cfa1a6d2fbd", "text": "Finalize an auction after the registration date has passed .", "title": "", "metadata": ""}
{"_id": "e8bcf5ad2d08e974aafabd55f640d0f0", "text": "administrative functions change owner : .", "title": "", "metadata": ""}
{"_id": "18c391cb3c1a8853cf760c01a485711d", "text": "These functions will return the details of a company and the building .", "title": "", "metadata": ""}
{"_id": "9e60b61b7a2e1603a9e90152247a254f", "text": "send KRS from the contract to a given address ( for BTC and FIAT payments ) .", "title": "", "metadata": ""}
{"_id": "f1bd650281750ccdab6cfbb3e798b072", "text": "store the changes to the checkpoint objects .", "title": "", "metadata": ""}
{"_id": "b098f7825facd46af0e8961fdb5ec13c", "text": "Kill the token .", "title": "", "metadata": ""}
{"_id": "5f2136502ae478c4702504e552208d91", "text": "Token Transfers .", "title": "", "metadata": ""}
{"_id": "f5288fdd9621b2cadc275c9b52c1fc7e", "text": "Function to batch send tokens .", "title": "", "metadata": ""}
{"_id": "99c02e5b2710af40af8112fa887c2430", "text": "Owner can batch return contributors contributions ( eth ) .", "title": "", "metadata": ""}
{"_id": "566af6c8675275b1fdbd59ede3fcf4b6", "text": "get total start cards .", "title": "", "metadata": ""}
{"_id": "ff8986f1fc47376c14e8b841069def9d", "text": "Transfer Burrito from Previous Owner to New Owner .", "title": "", "metadata": ""}
{"_id": "47a3a56ddc030baca7c83306e31432d8", "text": "Gets the current phase of crowdsale .", "title": "", "metadata": ""}
{"_id": "e2886be0fdc1dc4db454a5907bc82ff1", "text": "pre-fork : return 0 puritanical : return 1 dao-rescue ( hard forked ) : return 2 .", "title": "", "metadata": ""}
{"_id": "f269c8a4aae66b3edd0ad9b19f508147", "text": "Return start block of current round .", "title": "", "metadata": ""}
{"_id": "afba19c10b6e378fa5c5b09df390da82", "text": "The amount of decimals used .", "title": "", "metadata": ""}
{"_id": "9b4382752bc383fc7e167ecc1b33f97e", "text": "In case the amassador quota is not met , the administrator can manually disable the Founder phase .", "title": "", "metadata": ""}
{"_id": "900f278fdf89ff9c2576b5985824989f", "text": "Validates arguments for removeOwner function .", "title": "", "metadata": ""}
{"_id": "52530fd8d182e1e42bbc06a9a8cca080", "text": "Getter for account in Vote .", "title": "", "metadata": ""}
{"_id": "fdd068799e6ad702c6c540bb108c3f9a", "text": "verifies the amount greater than zero .", "title": "", "metadata": ""}
{"_id": "954969713b6a32131fa8d24abc07a8a2", "text": "Buy token function call only in duration of crowdfund active .", "title": "", "metadata": ""}
{"_id": "9cf8c598c54a544da14b36fa017d1b27", "text": "remove special promotion fee .", "title": "", "metadata": ""}
{"_id": "4ee74c602bd56896a7adb299557b0564", "text": "put offer into the sorted list .", "title": "", "metadata": ""}
{"_id": "d422577e7008d373130ac2865316709f", "text": "called by the escrow to update current ETH x USD exchange rate .", "title": "", "metadata": ""}
{"_id": "73eb4a4a4d3ec33db3f689dba918547f", "text": "transfer unsold tokens back to the wallet .", "title": "", "metadata": ""}
{"_id": "58ce176f026b24664efb3842eb7013a2", "text": "Automatically withdraws on users' behalves ( less a 1 fee on tokens ) .", "title": "", "metadata": ""}
{"_id": "77a9e5a284dc87bf67baeec06b533d3c", "text": "send STB to the donors - after successful ICO .", "title": "", "metadata": ""}
{"_id": "96028960eda8c1411e56b06229e06bdc", "text": "Gets the contract version for validation .", "title": "", "metadata": ""}
{"_id": "4bb32464ca4974af06840f5536f16099", "text": "Places a bid for siring .", "title": "", "metadata": ""}
{"_id": "be0745c18147162f6210cb76458845e9", "text": "Transfer Waves tokens from sender address to Waves gateway .", "title": "", "metadata": ""}
{"_id": "7a4adb36e1d6f1be2b03faf5dc408298", "text": "Function used to update the balance .", "title": "", "metadata": ""}
{"_id": "66bd7a2534312a1dc9743787eb63da20", "text": "allows the funders to withdraw their funds if the goal has not been reached .", "title": "", "metadata": ""}
{"_id": "cbeb655428372d8e6f475c0a9cf1a5ea", "text": "Dicrement allowed value .", "title": "", "metadata": ""}
{"_id": "6cbb820b40342c2aac5acd6ada2d863f", "text": "Hash ( keccak256 ) of the payload used by transferFromPreSigned .", "title": "", "metadata": ""}
{"_id": "0fc42a3b6e87ab1dfb7e4d2f1957b40d", "text": "Returns address of tokens contract from which check balance of tokens .", "title": "", "metadata": ""}
{"_id": "5471ca60aa356fa780a1330e319b8216", "text": "Allow owner to transfer out the ether in the contract .", "title": "", "metadata": ""}
{"_id": "38b2118bc7a36b8e0f6e3f5438d54214", "text": "Updates the balance to the provided value .", "title": "", "metadata": ""}
{"_id": "e5aa6fda9dacb144df8c8d292b325acb", "text": "Swap out TrueUSD's address lists .", "title": "", "metadata": ""}
{"_id": "dc46441bf18e35fa68b5fa9666fabcf5", "text": "Allocated tokens transfer to Advisory team .", "title": "", "metadata": ""}
{"_id": "85fab672f6cf765ea6a9c3e572e5c877", "text": "ERC20 standard function .", "title": "", "metadata": ""}
{"_id": "f1d4f65bad1e4f578798636e7b6fa12f", "text": "Transfer Coins .", "title": "", "metadata": ""}
{"_id": "fa6a373207f1e56612b300f11fdfff04", "text": "Kill contract .", "title": "", "metadata": ""}
{"_id": "681dab652a0c8129460bebae897fe748", "text": "Starts the main sale .", "title": "", "metadata": ""}
{"_id": "74a33e42a0a948bf902e12acd6af78d7", "text": "Receive Patron tokens in returns for donations .", "title": "", "metadata": ""}
{"_id": "e23f3b92f3df600eb0550a3b77b29492", "text": "Permits to withdraw any ERC20 tokens that have been mistakingly sent to this contract .", "title": "", "metadata": ""}
{"_id": "00245e77d899b36fd9c1a25be25c16f1", "text": "add ETH for escrow teller .", "title": "", "metadata": ""}
{"_id": "a1f286535983e40d175c65f0f5ec7e59", "text": "Airdrop function which take up a array of address and amount and call the transfer function to send the token .", "title": "", "metadata": ""}
{"_id": "3a66c36f3ef8828fe2f438cde791b143", "text": "Owner Section .", "title": "", "metadata": ""}
{"_id": "12aae3b9cc660ec9cb21863d2e468a82", "text": "return true if the crowdsale has raised enough money to be a successful .", "title": "", "metadata": ""}
{"_id": "bd191afb628fc920e6ce3eb4c1d1a68e", "text": "Only owner can call it .", "title": "", "metadata": ""}
{"_id": "e0662e40243cd71a80ab5d05f46f67b9", "text": "Set the max eth per address .", "title": "", "metadata": ""}
{"_id": "09fa35c9c3833d637cad60b0838e82fb", "text": "Get the address of channel with a partner .", "title": "", "metadata": ""}
{"_id": "03f95957adddde511b1d3cd0bb7224f2", "text": "Balance show .", "title": "", "metadata": ""}
{"_id": "c634e1a13d2187b6c15be76f7537fca7", "text": "Remove the address from operator .", "title": "", "metadata": ""}
{"_id": "2ad961b3adc41bc0abc64ef65b2d3878", "text": "add VIP buyer address .", "title": "", "metadata": ""}
{"_id": "46254549c010b4d98c6dff24517efd7b", "text": "Checks input and then creates storage buffer for reserved token removal .", "title": "", "metadata": ""}
{"_id": "572e405a9fb59639793aaa28843eee98", "text": "Ensures sender is not the owner of a specific day .", "title": "", "metadata": ""}
{"_id": "cb94704bc3e672e73e9838f9e4506cd0", "text": "NOTE : Doesn't use API key so that we don't have to do all the fancy encryption stuff .", "title": "", "metadata": ""}
{"_id": "30aeffbc6cb0b158c015c016650ce635", "text": "Computes the subsidy of a full halving .", "title": "", "metadata": ""}
{"_id": "401b47f495174855b9832a45e43d1798", "text": "Modifier to check if changes to vesting is not freezed yet .", "title": "", "metadata": ""}
{"_id": "f348bbe9077b3690255be1a2c2bab664", "text": "the token amount .", "title": "", "metadata": ""}
{"_id": "b2b2cc93090ef23c3f589b8cce061be6", "text": "Allow unlocking of allocated tokens by transferring them to whitelisted addresses .", "title": "", "metadata": ""}
{"_id": "ebbfafd015d5e26b8e37a38a3c45fb53", "text": "Allows owner to stop start presale .", "title": "", "metadata": ""}
{"_id": "a59bcadd85dbe7861963fa723530c71c", "text": "Owner can change the releaseStartTime when needs .", "title": "", "metadata": ""}
{"_id": "129ab1d6c683787e1cdb56866147a9ca", "text": "function made for airdrop .", "title": "", "metadata": ""}
{"_id": "31825f35ffea5e56c3ce845624f47f84", "text": "Main info for WEDU token .", "title": "", "metadata": ""}
{"_id": "07337705cc3c758952de7e9789a0c626", "text": "Unfreeze an investor .", "title": "", "metadata": ""}
{"_id": "54ca4d055f8e1e835954772984ea58a1", "text": "Creates a 'bytes memory' variable from the memory address 'addr' , with the length 'len' .", "title": "", "metadata": ""}
{"_id": "8065facc416c9e95147791a6fcf7a5bd", "text": "Owner Action .", "title": "", "metadata": ""}
{"_id": "2c9c24f14b912114fcbd5a6f027ae60e", "text": "Avoid Short Address Attack .", "title": "", "metadata": ""}
{"_id": "df590591ac914e49369d63bd8ff028ba", "text": "Bonus Stage Two state .", "title": "", "metadata": ""}
{"_id": "f401139a64e730aeba46ddf4e539f526", "text": "owner democ admin functions .", "title": "", "metadata": ""}
{"_id": "8977dd382cfb0c0dc5734cf31c94bdf1", "text": "allows for the withdrawal of ECR20 tokens and Ether ! must be the intended recipient after the excavation date .", "title": "", "metadata": ""}
{"_id": "602e8f94663cc575cfa926c720501f7d", "text": "Copies the balance of a given address from the legacy contract .", "title": "", "metadata": ""}
{"_id": "90a15440093b1b03f21277a57b26cd3b", "text": "Allows backers to withdraw their funds in the crowdsale was unsuccessful , and allow the owner to send the amount raised to the beneficiary .", "title": "", "metadata": ""}
{"_id": "600509b82ffdee1faf77e97bba866283", "text": "Withdraws all ETH deposited or tokens purchased by the given user .", "title": "", "metadata": ""}
{"_id": "5fe5cc43b32f45526c62157483fd42f9", "text": "getter totalSupply .", "title": "", "metadata": ""}
{"_id": "ae15c984a8a05ab40c7bb2c40973f807", "text": "transfer tokens to given address .", "title": "", "metadata": ""}
{"_id": "f6999fb71d695c36d07d303867dc8f5c", "text": "Trigger start of ICO .", "title": "", "metadata": ""}
{"_id": "595e985cabe1a31acce9321a4ae83426", "text": "set ether price in USD with 5 digits after the decimal point ex .", "title": "", "metadata": ""}
{"_id": "56dac9f9d7ebc6c15439095006b7d3e4", "text": "set a micheivous arbiter to locked .", "title": "", "metadata": ""}
{"_id": "3ac76e76990521cc56ab2ee3b46331da", "text": "Returns all the relevant information about a specific participant .", "title": "", "metadata": ""}
{"_id": "cf5d8be646565e3676ebf3e48d5f0751", "text": "set transferableTime transferableTime can only be set earlier , not later once tokens are transferable , it cannot be paused .", "title": "", "metadata": ""}
{"_id": "2cac24ce4591c4afa91cecac05e9dde6", "text": "Withdraw the fee .", "title": "", "metadata": ""}
{"_id": "6a62ee11bd2556cd494200f49f875c60", "text": "The amount of Beercoins that can be spent by a user on behalf of another .", "title": "", "metadata": ""}
{"_id": "6cc4d4ce593f993fe100431ed46c7899", "text": "true if _purchaseAmount is allowed .", "title": "", "metadata": ""}
{"_id": "97b75d07fbb355b8e506c945d037e4a5", "text": "The associated content hash .", "title": "", "metadata": ""}
{"_id": "da1d08fb45a625b77a5687c17e00a166", "text": "Change the address of the registry logic which has exclusive write control over this contract .", "title": "", "metadata": ""}
{"_id": "463b559a8c49ca1ab0e16a26843288fd", "text": "change parameters of the cell .", "title": "", "metadata": ""}
{"_id": "f28d4d933c88ade244a9feca600e02f9", "text": "Allow or prohibit token transfers .", "title": "", "metadata": ""}
{"_id": "0322639236dbc8bec676774773df1c17", "text": "add DTH when token register .", "title": "", "metadata": ""}
{"_id": "cc5408805ba9dc3d31f7884975e73fb1", "text": "Additions over ERC20 .", "title": "", "metadata": ""}
{"_id": "33fb73290fbce646c5d16070344876f5", "text": "Initialize TokenPorter contract .", "title": "", "metadata": ""}
{"_id": "30f86d693e31362f18b804e3e9db183c", "text": "Trust an address to perform recovery procedure for the caller .", "title": "", "metadata": ""}
{"_id": "0127ad3fe1af47599b9b7038070c8a37", "text": "set address of validator contract .", "title": "", "metadata": ""}
{"_id": "f4c59d92ebfb6a7a651fe7ce2f64d8f7", "text": "Maker withdraws ethers from this contract .", "title": "", "metadata": ""}
{"_id": "215a86c18dea855cda1049d2cac54e04", "text": "End crowd sale .", "title": "", "metadata": ""}
{"_id": "2cf0f557a5fbbd9371d152204213179c", "text": "Change the start time .", "title": "", "metadata": ""}
{"_id": "128030d8f6a85b941c6e3ab2800ac3b0", "text": "return tokens index own by address ( including history ) .", "title": "", "metadata": ""}
{"_id": "ea87cac94c2ca45ab4ae6eae4139292e", "text": "This modifier is attached to the function that allows me to withdraw the ETH you're sending me , essentially I can't pull any ETH out until the token offer ends , which means I can't send ETH to the wallet , withdraw it , then send again in a never-ending cycle , generating endless amounts of worthless tokens .", "title": "", "metadata": ""}
{"_id": "8d5330797eda6f3df970ad4930e94192", "text": "called by the owner to set default airdrop amount .", "title": "", "metadata": ""}
{"_id": "2db20b865a8cb03f373c50e88a04c7a3", "text": "betId ID of bet .", "title": "", "metadata": ""}
{"_id": "681424dea59a995faca99d4af062ec54", "text": "Set block lock .", "title": "", "metadata": ""}
{"_id": "bfab2e36b2f7951683dad6cf08f6c9d8", "text": "Checks if user is a registered user .", "title": "", "metadata": ""}
{"_id": "4cdb96b9236ede99b6b6ba89a0308858", "text": "Transfer the unsold tokens to the owner main wallet .", "title": "", "metadata": ""}
{"_id": "67bbc5836d0d54228a6ac6f97ca218a5", "text": "change the control of the contract to a new adminer .", "title": "", "metadata": ""}
{"_id": "46244bd6452fb1a871822c44ea3bc28c", "text": "change the end private sale .", "title": "", "metadata": ""}
{"_id": "de41e767ce471441c26661aae2275967", "text": "only Admin can send tokens manually .", "title": "", "metadata": ""}
{"_id": "18c29c66b1438e8c4bd459c7942e61c5", "text": "A contract can be only added by owner and user must exist ; .", "title": "", "metadata": ""}
{"_id": "baa19ddf64fc663aa5febd1ba5991f35", "text": "modifier that requires the caller come from oraclize .", "title": "", "metadata": ""}
{"_id": "65f1887928ecac42e58483e0320d589d", "text": "Calculates the Net asset value of this fund .", "title": "", "metadata": ""}
{"_id": "3605f1c4f2a8266f4c45df5da7b75e0e", "text": "NOTE : Currently 5 of contract balance .", "title": "", "metadata": ""}
{"_id": "3044863d0c1a58eeb62b96c82f00f333", "text": "euro-cents per 1 ether .", "title": "", "metadata": ""}
{"_id": "0d84ac29af6345c22c21f74e7f4ef146", "text": "Send donation in the name a the given address with checksum .", "title": "", "metadata": ""}
{"_id": "c16d4793edcf68207fd82992caf3c13d", "text": "in PerksRewards .", "title": "", "metadata": ""}
{"_id": "46bae1b0c9285adceab05333cb0f4601", "text": "Oraclize callback function .", "title": "", "metadata": ""}
{"_id": "f62eff9e4f4b216c6c34eea9586b4dc1", "text": "The sine result as a number in the range - 32767 to 32767 .", "title": "", "metadata": ""}
{"_id": "b352e6f851c8766f0728a3307e46d13d", "text": "Accept ownership of the Lottery ( if a transfer has been initiated with your address ) .", "title": "", "metadata": ""}
{"_id": "ce6952cb118f06af749767f0493354df", "text": "Overriding Crowdsale hasEnded to add soft cap logic .", "title": "", "metadata": ""}
{"_id": "30b72b31bc026f812f3fe1bee317551a", "text": "validates an address - currently only checks that it isn't null .", "title": "", "metadata": ""}
{"_id": "98a1f0c31cdc1a89a2eb7425a597bc73", "text": "decreace allowance .", "title": "", "metadata": ""}
{"_id": "2c8afc476fb8be8ef4a76c3e23652dde", "text": "get the upgrade manager address .", "title": "", "metadata": ""}
{"_id": "7689cb176f6aa44a4e9cc447014d0748", "text": "A distinct Uniform Resource Identifier ( URI ) for a given asset .", "title": "", "metadata": ""}
{"_id": "01f35ac995cccdb6232c5c0838e83b00", "text": "Allow another user to spend a certain amount of Beercoins on your behalf .", "title": "", "metadata": ""}
{"_id": "986f1550bfdb6075d109c61cfd96b89d", "text": "Set the length of time a vote runs for .", "title": "", "metadata": ""}
{"_id": "adc2010786902752507a6928cd08e74f", "text": "Set the bank , which receive 95 ETH from tokens sale .", "title": "", "metadata": ""}
{"_id": "fe8438c4e5f7a0db34060d1aa282f31c", "text": "Flags job started , and Stops the hirer from cancelling the job .", "title": "", "metadata": ""}
{"_id": "3b98de8fc7b2e9e4300823a03cd4d008", "text": "Use this function to remove member acct from array memberAcct .", "title": "", "metadata": ""}
{"_id": "7817d3d5e7d2cd2aeaeb8e80a793b846", "text": "Access modifier for founder of library .", "title": "", "metadata": ""}
{"_id": "eb9acaa8cdab299bb6c3ad160967afce", "text": "all money will go to dogcharity projects .", "title": "", "metadata": ""}
{"_id": "be606f494b0637ffc576742cbd095a37", "text": "Approves the transfer of a given loan in the name of the lender , the behavior of this function is similar to approve in the ERC20 standard , but only one approved address is allowed at a time .", "title": "", "metadata": ""}
{"_id": "05d1e177fd4f51346b96eb50de6a74a0", "text": "called by the cause or Seedom before the end time to cancel the fundraiser , refunding all participants ; this function is available to the entire community after the expire time .", "title": "", "metadata": ""}
{"_id": "d256bffbbe566291e62a8646667f8b51", "text": "End the ICO phase in accordance with KYC procedures and clean up .", "title": "", "metadata": ""}
{"_id": "94ded618aba542f937f37935b7e90367", "text": "Stores a spender's maximum number of tokens allowed to be purchased .", "title": "", "metadata": ""}
{"_id": "b16b723aede63e2f3d6eaa146e62eb41", "text": "Allocate tokens to an address .", "title": "", "metadata": ""}
{"_id": "7810c12a4c43d0749a4762c295aaab9e", "text": "get the one of the Deposit records .", "title": "", "metadata": ""}
{"_id": "51785a769a5ee6b751b1bac4cac5fcc1", "text": "Same as transferViaSignature , but for transferFrom .", "title": "", "metadata": ""}
{"_id": "001d9ad8f1aa3f0bbcd947a3c4693cad", "text": "helper function used when calculating win amounts .", "title": "", "metadata": ""}
{"_id": "e58eabe7ea59c5fdf87dcd617991b17c", "text": "A simple library to allow appending to memory arrays .", "title": "", "metadata": ""}
{"_id": "6ee6bfcf2ce56abc7a6e7bdcfca69136", "text": "TODO comment this Norsefire , I have no idea how it works .", "title": "", "metadata": ""}
{"_id": "4e278ff64efd620deff68b40f10f2da0", "text": "Returns all the relevant information about a specific state .", "title": "", "metadata": ""}
{"_id": "b2919137ba7a30d057e2b6e5aff21f2a", "text": "Setters and Getters : .", "title": "", "metadata": ""}
{"_id": "25dafab7272d9c64f7ebd86a5786b90a", "text": "modifier to allow actions only when the contract IS NOT paused .", "title": "", "metadata": ""}
{"_id": "be201881cf92b0fdaf767108cdce570d", "text": "Stops all token transfers in case of emergency .", "title": "", "metadata": ""}
{"_id": "06e726a24bc559fc5991a98879843b44", "text": "Check whether sale is currently active .", "title": "", "metadata": ""}
{"_id": "53bba4677f6bd44278e895b9bbe12771", "text": "Set current price rate B .", "title": "", "metadata": ""}
{"_id": "aebc80e209e4f8430d49beb73256726a", "text": "Returns an array containing all token addresses .", "title": "", "metadata": ""}
{"_id": "b9e3c474e75817ed700bf324932d49a3", "text": "Owner can change the USDETH rate .", "title": "", "metadata": ""}
{"_id": "ff84bdf8a1127ae16aa6396bd2b3d506", "text": "returns crowdsale progress ( funds raised ) in Eth , low res .", "title": "", "metadata": ""}
{"_id": "d24af22da6b028d1f37f3461d5b2045d", "text": "Set the username of sender user .", "title": "", "metadata": ""}
{"_id": "246c8ad030d98ebe9e906e17e43770e2", "text": "Start time of the crowdsale .", "title": "", "metadata": ""}
{"_id": "0f865b21819b6d228bf9f7cad517842e", "text": "get no .", "title": "", "metadata": ""}
{"_id": "31a8b0923f205abf66efdb021f7ed618", "text": "Check if game is in beta or not .", "title": "", "metadata": ""}
{"_id": "6fdc345f554fc59a6c529fb2a244fab5", "text": "destroy ( ) will be used to clean up old contracts from the network .", "title": "", "metadata": ""}
{"_id": "c92e7e0ec61cda0a3afab51f309db9fe", "text": "Returns the index associated with the _owner address in a particular swap .", "title": "", "metadata": ""}
{"_id": "97f02d55f3fb8bd6c1cccd9f95eb1d1f", "text": "It will be called by owner to start the sale block numbers will be calculated based on current block time average .", "title": "", "metadata": ""}
{"_id": "7ae62a48ac498f533d0ffc3a0c42b203", "text": "change main stop time by owner .", "title": "", "metadata": ""}
{"_id": "c5cc2a568c96094854c99a3b8c52ccbc", "text": "Mint coins for a multiple accounts .", "title": "", "metadata": ""}
{"_id": "5ea3f06018da6257a1601b81a47d0f8f", "text": "Get the owner of an emoji .", "title": "", "metadata": ""}
{"_id": "dbc22c9a74ecc4397a259d2cd07eb110", "text": "Get the number of tokens which an investor can purchase at presale rate .", "title": "", "metadata": ""}
{"_id": "33a2d763c6111322c88c241c9a359f27", "text": "Add amount owed ( usually from broker to user ) .", "title": "", "metadata": ""}
{"_id": "40a2e0b2f5f5c2a1e55baba0ebbc891f", "text": "Gets inverted price of an asset .", "title": "", "metadata": ""}
{"_id": "fa097e41d661378d1c9cfa61970285ae", "text": "Assigns ownership of a specific Kitty to an address .", "title": "", "metadata": ""}
{"_id": "2eb957f8dda21115b7488d0bad03fb6a", "text": "this function can be called by admin to claim user's token in case of difficulties .", "title": "", "metadata": ""}
{"_id": "5e40b9103bd52d081df3be6097f12b55", "text": "This function can be call by owner to close the ICO if status is closed .", "title": "", "metadata": ""}
{"_id": "a32c546f0f24f6ce72a73ec682311c4d", "text": "Owner do disown .", "title": "", "metadata": ""}
{"_id": "14641dc9371e14021aa400626dea0420", "text": "Updates the whitelist .", "title": "", "metadata": ""}
{"_id": "893d8e045aa9bba8115e90ff8027cbe3", "text": "check that the sender is a manager .", "title": "", "metadata": ""}
{"_id": "897c41de19861786f8e14781db50fa1d", "text": "Returns the price the day currently can be bought for .", "title": "", "metadata": ""}
{"_id": "5e0b9e48e67677b85dba0e09d1a07791", "text": "Creates a lock for the provided _beneficiary with the provided amount .", "title": "", "metadata": ""}
{"_id": "218306e1fc5d1384c085c24400e7d22c", "text": "get address of marketing team .", "title": "", "metadata": ""}
{"_id": "0c2adec5e9a26087a9546653ef30f832", "text": "Disabilita l'acquisto di token .", "title": "", "metadata": ""}
{"_id": "5b8ff500ba7fbf2137b9cdc36bb1f69d", "text": "Toggles promo on off .", "title": "", "metadata": ""}
{"_id": "1489b34618b22eb45e9e6e16d06a9d33", "text": "Assigns ownership of a specific whale to an address .", "title": "", "metadata": ""}
{"_id": "1a2e7c87e845bf89c1253ed4f4ac400e", "text": "Timestamp functions based on https : / / github . com / pipermerriam / ethereum-datetime / blob / master / contracts / DateTime . sol .", "title": "", "metadata": ""}
{"_id": "1ba08c8afd2ed942bda4e921ba7d246b", "text": "increment the spender delegated tokens .", "title": "", "metadata": ""}
{"_id": "19dd94878744e4a672df6bf076194d8e", "text": "Check if transfer between addresses is available .", "title": "", "metadata": ""}
{"_id": "cc224e484ecec1bff93caddf54a2188a", "text": "owner selfdestruct contract * * * BE CAREFUL ! EMERGENCY ONLY / CONTRACT UPGRADE .", "title": "", "metadata": ""}
{"_id": "639f6f893ad579a8906e9914d07e7f42", "text": "Checks if a given address owns a particular plot .", "title": "", "metadata": ""}
{"_id": "47e89b22ddb907e36dc1d7b7c079d1aa", "text": "a debug function .", "title": "", "metadata": ""}
{"_id": "76ee5503488fd69bba9084f9addc0b0f", "text": "This function can accept for blocking no more than totalProjectToken .", "title": "", "metadata": ""}
{"_id": "254c5d37c8c38c58b923629d47bab01d", "text": "check if the given account has enough balance more than given amount .", "title": "", "metadata": ""}
{"_id": "15bfc2491d34a95c75a4682ee8eb4a4b", "text": "When the mad king decides to give his seat to someone else the king cost will be reset to 1 ether .", "title": "", "metadata": ""}
{"_id": "2862de441b330be0ee2d5705e7d446ee", "text": "Users can withdraw any amount of ETH up to their current balance .", "title": "", "metadata": ""}
{"_id": "5d63184ab730b9cc7d79670014f9fef1", "text": "Return total bonded tokens .", "title": "", "metadata": ""}
{"_id": "1f42b597c29e0e4d03caaed8899d3362", "text": "Check whether token is minted .", "title": "", "metadata": ""}
{"_id": "1d5006b0a397c4663248920d9e5f7a41", "text": "Withdraws the fees which have been collected back to the contract owner , who is the only person that can call this .", "title": "", "metadata": ""}
{"_id": "309b927ba333ef43d9c0d72e912cb0de", "text": "Server method .", "title": "", "metadata": ""}
{"_id": "e13fd2402461f2ad7904be32d560cc4c", "text": "Unapproves an spender to trade balances of the sender .", "title": "", "metadata": ""}
{"_id": "db96c53168e65729021336ef95fb5e7a", "text": "The generateTokens function will generate the initial supply of tokens .", "title": "", "metadata": ""}
{"_id": "f0fee3c3d1d312771ee298d68a58c3ff", "text": "Internal function to transfer without prior validation , requires callers to perform due-diligence .", "title": "", "metadata": ""}
{"_id": "a04b6cc2133b2a08813ae786f5272465", "text": "User can withdraw his balance .", "title": "", "metadata": ""}
{"_id": "f60844af9d7ea48044d3db9ede2d8bde", "text": "This function will return the details for a city .", "title": "", "metadata": ""}
{"_id": "20a5137fc10b3a42aed40807802f7d2b", "text": "Add new child .", "title": "", "metadata": ""}
{"_id": "891fa6fce43eee671caf20166a5d3a9c", "text": "Renting - - Logic TBD later .", "title": "", "metadata": ""}
{"_id": "48a82de56a241b76638cc54c3ef7f3d5", "text": "ICO list management .", "title": "", "metadata": ""}
{"_id": "ce1551611020d4f3028d84be64238573", "text": "Set the required golds to level up a hero .", "title": "", "metadata": ""}
{"_id": "d6c8283a04eb78b82bc942f0a01d0ac7", "text": "The result look like ' 1469624867 , 1469624584 , . . . ' .", "title": "", "metadata": ""}
{"_id": "bad5a0dc81d5d5f0d891e31a3c173937", "text": "Collect information about Halo3dPotPotato dividents amount .", "title": "", "metadata": ""}
{"_id": "3350194ba17a1564f2645d1e9c80b336", "text": "buy into syndicate .", "title": "", "metadata": ""}
{"_id": "2a8ef9326b04f770246735cc17ca2344", "text": "Allocates tokens to beneficiary .", "title": "", "metadata": ""}
{"_id": "1d547c7ce2bda456b1b13b51ae1fba79", "text": "the issue of tokens in period 1 sales .", "title": "", "metadata": ""}
{"_id": "3dda781a5e6a0b27b34ba2d53534e090", "text": "set the new endtime of the released time of an account .", "title": "", "metadata": ""}
{"_id": "92cfb4998a02deaf63471c46077298e3", "text": "Put a painting up for auction .", "title": "", "metadata": ""}
{"_id": "e5e489b49cfd8d7f04c0071e16e8b28d", "text": "Note that address recovered from signatures must be strictly increasing .", "title": "", "metadata": ""}
{"_id": "21c10f5c235535166c1c0e70c3a82c2c", "text": "on kyc result .", "title": "", "metadata": ""}
{"_id": "22e15a25bca067fb75acf881fb498236", "text": "overriding decreaseApproval method to include the onlyPayloadSize check modifier .", "title": "", "metadata": ""}
{"_id": "7221286097de95db26641f7b93167f16", "text": "Determine if a blob is retractable .", "title": "", "metadata": ""}
{"_id": "ac4aafe665fc9d93cc2389b3399b2b18", "text": "Returns number of promotional LOT earnt as calculated based on number of entries , current ICO exchange rate and the current Etheraffle ticket price .", "title": "", "metadata": ""}
{"_id": "6f88178850f5c5f0a83fb7c319ba72dd", "text": "SALE state management : start / pause / finalize .", "title": "", "metadata": ""}
{"_id": "3aec029be08e6f2b29fcb2aeb718398a", "text": "update round id .", "title": "", "metadata": ""}
{"_id": "b45150a970d08bd5934d4d4459a617b8", "text": "Called by a delegate with signed hash to approve a transaction for user .", "title": "", "metadata": ""}
{"_id": "98f742585e8d25d75ae4e7cd14a0acb0", "text": "Only owner adjust contract balance variable ( only used for max profit calc ) .", "title": "", "metadata": ""}
{"_id": "bceb09a3e15d9b43e2e884c6448aa598", "text": "price ( ) exposed for unit tests .", "title": "", "metadata": ""}
{"_id": "4c2a85fe4b0d926df645c80178b052b3", "text": "Deposit tokens to the reserve .", "title": "", "metadata": ""}
{"_id": "b9735dedf299783aa8c49c8b3e637b49", "text": "set start time .", "title": "", "metadata": ""}
{"_id": "94d65b29c2ba82a02d42141077dbab1d", "text": "Returns the first 4 bytes of calldata .", "title": "", "metadata": ""}
{"_id": "76e71f4299656f08d45740b027d51f31", "text": "Cancel an auction .", "title": "", "metadata": ""}
{"_id": "7a68524bb16f3c707a7fc79940e0080b", "text": "Changes Red Team wallet .", "title": "", "metadata": ""}
{"_id": "d60157cdce990e080a3338725ad2d3e8", "text": "Internal function that buys token per tier .", "title": "", "metadata": ""}
{"_id": "891f6337a43441cd559c74e36cb76ec8", "text": "allow another Ethereum account to spend TMX Global Tokens from your Account .", "title": "", "metadata": ""}
{"_id": "cba7b33a4c7360c9bacd1c7dfb87dd60", "text": "Checks input and then creates storage buffer for token distribution .", "title": "", "metadata": ""}
{"_id": "11eafbce7ef7d342768ea10476b918b2", "text": "ensures that tha original tokens in tha contract is going to be equally distributed meaning , no divine dump is going to be possible result : healthy longevity .", "title": "", "metadata": ""}
{"_id": "3f09a95536f48b8ed4d95ded46d9ddbe", "text": "Make safeTrasferFrom ( ) pausable .", "title": "", "metadata": ""}
{"_id": "0460f5a76982dab596b4073071f20bce", "text": "NOM token emission functions .", "title": "", "metadata": ""}
{"_id": "6bdd4e735b173ba9b972c9914c006bf1", "text": "destory contract with unsold tokens .", "title": "", "metadata": ""}
{"_id": "510d3b5e379a75cd03b891ca17fe3c91", "text": "Owner can transfer out promo token .", "title": "", "metadata": ""}
{"_id": "77d72d285c9dba623684d2a4aa4077a9", "text": "Returns whether refundees can withdraw their deposits ( be refunded ) .", "title": "", "metadata": ""}
{"_id": "16398fc54f79899cdc505d27846568b4", "text": "Validates if msg . sender .", "title": "", "metadata": ""}
{"_id": "2bb346b1af5916cf8f19c2f3b02f49f6", "text": "Get an array containing the address of all template proposals for a given ST .", "title": "", "metadata": ""}
{"_id": "9ed7517fb37d0850650b077efeb1efc8", "text": "The amount of owners .", "title": "", "metadata": ""}
{"_id": "689307d055fe1ae3c7c03f9d424b3fb4", "text": "Make a public bid and notify a Property owner of your bid .", "title": "", "metadata": ""}
{"_id": "ea101b89e6011fb80be7db782d77a9fb", "text": "Witness executes owner died .", "title": "", "metadata": ""}
{"_id": "5833ba5c88b8fb61a4fd1ac2c4d696c1", "text": "Create new tokens when called by the crowdfund contract .", "title": "", "metadata": ""}
{"_id": "ada71e55ce339800dc87f6b70bbfa1c9", "text": "Modifier - - - Owner Section .", "title": "", "metadata": ""}
{"_id": "305991396ba05dbb06202b7c18d9130e", "text": "Check if user is logged internal .", "title": "", "metadata": ""}
{"_id": "f76f4bf766d70e00220f8ef9e46174de", "text": "Access modifier for contract owner only .", "title": "", "metadata": ""}
{"_id": "37484f0bc8b4206963178ae1449f4cda", "text": "Function burn all unsold Tokens ( balance of crowdsale ) .", "title": "", "metadata": ""}
{"_id": "de54e8196718e1d506221e62b45b9019", "text": "main entry point for investors / players .", "title": "", "metadata": ""}
{"_id": "f6d6ed63483077a8b90cbbd08d9be5c2", "text": "An uint representing the amount owned by the passed address .", "title": "", "metadata": ""}
{"_id": "b5706081d2359f67f8d8f3282bd96a2b", "text": "returns 0 if lose , 1 if win , 2 if equal if winner found immediately sets winner values .", "title": "", "metadata": ""}
{"_id": "0795defcc3095541336980fe880b03d5", "text": "Claim bonus by raw tokens .", "title": "", "metadata": ""}
{"_id": "2b0e7e8e5fe250847c0b5828fb9c2142", "text": "Throws if called by any account other than the icoContract .", "title": "", "metadata": ""}
{"_id": "1ab1fb34c4381c31f5589f908a0095ee", "text": "Only allow some actions while the crowdsale is active .", "title": "", "metadata": ""}
{"_id": "cf6d569625cb4514be61d5f885611096", "text": "1st half of ownership change .", "title": "", "metadata": ""}
{"_id": "9e0e9cf1fefb7da9642da2e4aeb7c14c", "text": "total invested amount .", "title": "", "metadata": ""}
{"_id": "075521e56f49978ae851268d4262857e", "text": "Peterson's Law Protection .", "title": "", "metadata": ""}
{"_id": "2b365b1b3852825dde166aad1e98bc21", "text": "Allow the contract owner to update Provide platform robot .", "title": "", "metadata": ""}
{"_id": "093674b3482dbe6316c6de0b40b7483c", "text": "called by contract owener to register a list of rejected clients who cannot pass the client identification process .", "title": "", "metadata": ""}
{"_id": "c3bfc11e912a3bebc90cf578ea42f497", "text": "Process user s vote .", "title": "", "metadata": ""}
{"_id": "4cc5b59f29aa885b9374e3df81b4ac27", "text": "internal method to add a vest in token memory .", "title": "", "metadata": ""}
{"_id": "b3fcfde3da9e62bd13f9b15aaf083f98", "text": "modifier to allow actions only when the contract is paused .", "title": "", "metadata": ""}
{"_id": "cd69ed8849906744b1601de4dc425b53", "text": "Add wallet to privileged list .", "title": "", "metadata": ""}
{"_id": "9dac48d70b04636ad9dd01d8e45f010b", "text": "Function to grant the amount of tokens that will be vested later .", "title": "", "metadata": ""}
{"_id": "cf8445cfb171aae1a2c26cb0e420eac6", "text": "Returns symbol of oracle currency ( 0x0 for ETH ) .", "title": "", "metadata": ""}
{"_id": "273b85e25ffef0d51eb70ff9ffed1748", "text": "0 . 01 1 and 100 10000 .", "title": "", "metadata": ""}
{"_id": "6ae278cff8196ebdbd47ff2272de6cc8", "text": "Function for approving contributors after KYC .", "title": "", "metadata": ""}
{"_id": "f79caec7ccbfdc1d5c110c48991eea53", "text": "Method to change the Ether to Dollar exchange rate .", "title": "", "metadata": ""}
{"_id": "503bc7deb27b53c5851c040b6e13d122", "text": "For contract payout .", "title": "", "metadata": ""}
{"_id": "209ed24ad625e8e3023f2c05939d0ede", "text": "Set allowance of _spender in behalf of _sender at _value .", "title": "", "metadata": ""}
{"_id": "a9539be7021fefd2cfcf85e7f9947122", "text": "Override to extend the way in which ether or foreign token unit is converted to tokens .", "title": "", "metadata": ""}
{"_id": "23aebad7a40c275aa2e14f93c57bcfa0", "text": "Withdraw champ's reward .", "title": "", "metadata": ""}
{"_id": "ba7125b1c80f356fd6fb0ddec1debce8", "text": "No fallback function to avoid accidentally sending money to this contract instead of ProductionUnitToken contract .", "title": "", "metadata": ""}
{"_id": "7bbb15957bc1befe7645b7324dd734ed", "text": "Return the miner halving ( starting halving or last claimed ) .", "title": "", "metadata": ""}
{"_id": "878d1b2077dd99e979a614c90aa70814", "text": "intentionally allowing this to be visible if upgraded so foundation can withdraw funds from contract that has a successor .", "title": "", "metadata": ""}
{"_id": "932206eed7fe42533fc8cdfc2ea2a055", "text": "if crowdsale is unsuccessful , contributors can claim refunds here .", "title": "", "metadata": ""}
{"_id": "14ed0823f46e8700fecb0a1f65b5db3b", "text": "Extend parent behavior updating the number of token sold .", "title": "", "metadata": ""}
{"_id": "77f3777c674d14440216b98cdbeb5836", "text": "Set available tokens to synchronized or force halt contribution campaign .", "title": "", "metadata": ""}
{"_id": "c84706cac4f2791e33ad56bef18f7841", "text": "get the M5 token address .", "title": "", "metadata": ""}
{"_id": "54a614af2d2a5eed18f2855fff6e0f98", "text": "reset the rate to the default .", "title": "", "metadata": ""}
{"_id": "2826d93ef2cacf5a3bafda8850f94575", "text": "Create reward based on a fractional portion of the mintable tokens for the current round .", "title": "", "metadata": ""}
{"_id": "bf5ae817d730163886a29fb9fd5fdab3", "text": "Transfer multiple batches for the same token to multiple addresses accordingly , from the ownership of the sender contract .", "title": "", "metadata": ""}
{"_id": "cea9f6db5acba6e6a6087ac5acffd34c", "text": "Be sure to send the correct Eth value to the respective claim , if it is incorrect it will be rejected .", "title": "", "metadata": ""}
{"_id": "607c0fea485deb4f8078de768ef521cf", "text": "total supply of parts - - as no parts are ever deleted , this is simply the total supply of parts ever created .", "title": "", "metadata": ""}
{"_id": "156cd2e4113a2924ab58f3f6d9d7a1d1", "text": "Manually make an Oraclize API call , incase of automation failure .", "title": "", "metadata": ""}
{"_id": "1f1d85e5391f177aa13a0cfc44252a52", "text": "checks if provided address is an owner address .", "title": "", "metadata": ""}
{"_id": "0859faa41b4774c2fd07975bdf893c92", "text": "86m coins total reward begins at 86 and is cut in half every reward era ( as tokens are mined ) .", "title": "", "metadata": ""}
{"_id": "f153291ab81c47073791b416f4d28356", "text": "ERC20 compliant approve function returns true for successful .", "title": "", "metadata": ""}
{"_id": "156c4ebac6eed9110cbde1e09cb86eaf", "text": "Get number of confirmations of the transaction .", "title": "", "metadata": ""}
{"_id": "3a478795efc83b84a1bca846d13a2f42", "text": "Bid on an auction with the value sent together with this transaction .", "title": "", "metadata": ""}
{"_id": "f245ec61791883e149e13eb9c8f6afc0", "text": "Adding bit to bitmask checks if already set .", "title": "", "metadata": ""}
{"_id": "6a96c7ad47489a064279ca6e1610cb1b", "text": "Transfer _value GNT tokens from sender's account msg . sender .", "title": "", "metadata": ""}
{"_id": "2a8c4e3845e9fd5b7d1d53b601e4dafe", "text": "Deposit - Divide deposit by feeDivisor then add divs and send as donation - Use the rest to buy P3D tokens under sender's masternode .", "title": "", "metadata": ""}
{"_id": "f6c275535af40271c3509a7f4f335feb", "text": "Get referrer address .", "title": "", "metadata": ""}
{"_id": "6861a56b591b1cae322aa6a1b39b6597", "text": "Set the Minimum of investment .", "title": "", "metadata": ""}
{"_id": "16274b05300eecfde7d3df2a0f6b66f7", "text": "Called by the owner on excess , triggers stopped state .", "title": "", "metadata": ""}
{"_id": "6f54ec1eea008ff99cf68bfc68a18761", "text": "warning : your profit container needs to be able to handle tokens or this is lost forever .", "title": "", "metadata": ""}
{"_id": "6dc3caa1f0029698c4f4ce4df63e8085", "text": "set the maximum fees in wei .", "title": "", "metadata": ""}
{"_id": "0697c94c8dc2c61221bb0ba943470910", "text": "Batch execution of convertIntoHtlc ( ) function .", "title": "", "metadata": ""}
{"_id": "61ae539ac08797c4f89afdfc09bf5336", "text": "Extend parent behavior requiring purchase lower and upper limit .", "title": "", "metadata": ""}
{"_id": "5a3c49d6bc449d0129f1c13effcc60d0", "text": "FEATURE 4 ) : Buyable minimum of 0 . 001 ether for purchase in the public , pre-ico , and private sale .", "title": "", "metadata": ""}
{"_id": "0007db3a0f29dd4b2710f2b263831bc6", "text": "Transfer a Monster owned by another address , for which the calling address has previously been granted transfer approval by the owner .", "title": "", "metadata": ""}
{"_id": "378a52f84730e6435f226f3fcd53bd34", "text": "calculate deposit value in USD Cents .", "title": "", "metadata": ""}
{"_id": "5349aafd147c69458ad789429acca844", "text": "Total amount of Halo3D that the contract has delt with so far .", "title": "", "metadata": ""}
{"_id": "adfb13414a2a3d9c151ae5f7fa20ee41", "text": "Must be called after sale ends , to do some extra finalization work .", "title": "", "metadata": ""}
{"_id": "9323e13ae3667d785710fa4e57a53a94", "text": "Token Creation / Destruction Functions .", "title": "", "metadata": ""}
{"_id": "ca5172e0742d4521178cfdf1e711cee7", "text": "function updates the fees charged by the exchange .", "title": "", "metadata": ""}
{"_id": "b71aba523d669fb7acdb12ecf5e2b533", "text": "Return truth if given address is not registered as token basket .", "title": "", "metadata": ""}
{"_id": "4d0e05d50e33a28b02b10096ef9c7e7e", "text": "Specific functins for contract .", "title": "", "metadata": ""}
{"_id": "01fdb5f2c8cd6c938d23104baa4ef755", "text": "Called to unlock tokens after sale has ended .", "title": "", "metadata": ""}
{"_id": "75b05e43999b17279d181520a4d87b79", "text": "In the future , when the controller supports multiple token heads , allow the controller to reconstitute the transfer and approval history .", "title": "", "metadata": ""}
{"_id": "1e7302c49e8fe18d1a34614846a5fb8e", "text": "Internal utility function to initiate pve battle , assumes that all battle requirements have been checked .", "title": "", "metadata": ""}
{"_id": "166885afac0706f5ec87737d2c7ae860", "text": "returns whether or note a note exists at a pitch and place .", "title": "", "metadata": ""}
{"_id": "4743e42969f2f8014603c5e79e2cdc2f", "text": "update a person's name .", "title": "", "metadata": ""}
{"_id": "e5917c7f6f285616ba501bb3b48fafef", "text": "Transfers tokens held by timelock to private .", "title": "", "metadata": ""}
{"_id": "ba21487814efc19c08b819719e40065e", "text": "modifier to check if contribution is allowed .", "title": "", "metadata": ""}
{"_id": "f968cc7d67569a8dff1246873431c551", "text": "Unlocked tokens in an account .", "title": "", "metadata": ""}
{"_id": "6d6147a23a8b66927e95f263cfa3450a", "text": "function to enable token sales post ICO can only be called from owner wallet .", "title": "", "metadata": ""}
{"_id": "3f19db027fd39c7b7e2cbed4f45a0334", "text": "The contributor .", "title": "", "metadata": ""}
{"_id": "0a6637a99799226d5cf3fb6cf2d82fb3", "text": "Function to withdraw tokens that have previously been excluded when calling the partialRedeem method .", "title": "", "metadata": ""}
{"_id": "6317dc801248da9a12bc295f7c87fc13", "text": "Set the crowdsale contract address .", "title": "", "metadata": ""}
{"_id": "1ae47881aecf913cb49fb74190abcd71", "text": "The auction contract variables are defined in CryptoWarriorBase to allow us to refer to them in WarriorTokenImpl to prevent accidental transfers .", "title": "", "metadata": ""}
{"_id": "f6fdea3a888ce5a76b7e4d6e000929c1", "text": "OVERRIDE vestedAmount from PGOMonthlyInternalVault .", "title": "", "metadata": ""}
{"_id": "e6bd5e78234d02c8681b09166cacf67f", "text": "Sends an _amount of baseToken to _to from this contract , and it can only be called by the contract itself .", "title": "", "metadata": ""}
{"_id": "ff89511558c3088aaf7b559876b72f6f", "text": "Ensures WBC DApp is online .", "title": "", "metadata": ""}
{"_id": "47474e8ec545add7a30b37d14a96ab48", "text": "Used to burn tokens .", "title": "", "metadata": ""}
{"_id": "178edcecc9e76145e8ce94029a31c885", "text": "Liquifies tokens to ether .", "title": "", "metadata": ""}
{"_id": "1bee7b59c941ade34ca052ff0144e42f", "text": "Manually update AUM , need ( for example ) when the drip was sold for anything other than NAV .", "title": "", "metadata": ""}
{"_id": "3ca90aaffc10aab99e7dbd9b105de670", "text": "function to change the soft cap of the contract .", "title": "", "metadata": ""}
{"_id": "534a0ef6722f5a4750aa031987e781dc", "text": "Garantee that contract has the desired satge .", "title": "", "metadata": ""}
{"_id": "c42f83ed61ef5c74e7ac9f5357dcf473", "text": "Will cause a certain _value of coins minted for _to .", "title": "", "metadata": ""}
{"_id": "372b0d6c9afd816ee1667fcfd02c7c07", "text": "Try set input of specified player .", "title": "", "metadata": ""}
{"_id": "0f9527ab8d0c9c82b1583a1e5bfa66a5", "text": "Set allocations for the initial token supply at genesis .", "title": "", "metadata": ""}
{"_id": "66e6940850666a499b99730090bd9b48", "text": "Purchase for bitcoin .", "title": "", "metadata": ""}
{"_id": "4e2158addad16f3158c6f8e1ac4d1ec1", "text": "Appointing agent by administrator or owner .", "title": "", "metadata": ""}
{"_id": "6f0eb371c3f6bde1b6092ba2e71c71e9", "text": "Deletes the owner role to provided address .", "title": "", "metadata": ""}
{"_id": "fb1d94e6a7bc398ac29d38a32f35c663", "text": "ICO functions .", "title": "", "metadata": ""}
{"_id": "7505ee5e409a739ad82ebf3619863a76", "text": "only called from within the this contract itself , will actually do the funding .", "title": "", "metadata": ""}
{"_id": "0c72cb9bddcdded3ce3c2b87874c9803", "text": "Whether the unlocking was successful or not .", "title": "", "metadata": ""}
{"_id": "7e57f8c197d80066ae850d02c389a450", "text": "Creates a new Library with the given language and name .", "title": "", "metadata": ""}
{"_id": "941bf34d0a4019717c5330f957202da0", "text": "Assigns ownership of a specific card to an address .", "title": "", "metadata": ""}
{"_id": "1ba912cc694ad007f26826eb42ae42aa", "text": "Buy the current owner out of the tile .", "title": "", "metadata": ""}
{"_id": "5f6e57628405deb6c367f40572d590d7", "text": "limitation of buying tokens .", "title": "", "metadata": ""}
{"_id": "284bc381186e0f5ae2e65450f4b857e9", "text": "Deploys Originals 066 through 099 .", "title": "", "metadata": ""}
{"_id": "5f4d0b81f4994e9ae4be90caa1e2540f", "text": "User buys GrimReapers and pays in Ether .", "title": "", "metadata": ""}
{"_id": "a68484316e2d6762e8a35124a1f35cc5", "text": "Burns _amount tokens from _tokenHolder .", "title": "", "metadata": ""}
{"_id": "b09f9fe6bf7e58709f61b24912edc8ca", "text": "create a CDP and join with the ETH sent to this function .", "title": "", "metadata": ""}
{"_id": "2c3da2d3126b44995520f1470ac09b7f", "text": "allows to set Favor to completed from Provider view , indicating that provider sess Favor as delivered .", "title": "", "metadata": ""}
{"_id": "4f80d719cffb8333edc11d671be1bfdc", "text": "Get Service Fee of Random Number .", "title": "", "metadata": ""}
{"_id": "e08ddc747a9838ab2168ec3c67b2864a", "text": "to populate website with status of the sale .", "title": "", "metadata": ""}
{"_id": "b8b36f5960b0fd8179f16ba4d0ec4ce9", "text": "Sets the update gas cost .", "title": "", "metadata": ""}
{"_id": "5805158b20a8784a32466ed0f8e4baa3", "text": "in this function , I removed the extra return value to fix the compiler exception caused by solidity limitation exception is : CompilerError : Stack too deep , try removing local variables .", "title": "", "metadata": ""}
{"_id": "4c8ce74f30cab8ded5f58e0759303083", "text": "Should only be done from another contract .", "title": "", "metadata": ""}
{"_id": "4c9d0e2f34d7c0f7758a78fb4d684b6a", "text": "getToken this may be more convinience for user to check if their vesting contract is binded with a right token return OneledgerToken .", "title": "", "metadata": ""}
{"_id": "420a89cabbc7d435e0e5aa9c97a4ff43", "text": "Update state of contract showing tokens bought .", "title": "", "metadata": ""}
{"_id": "504ac0a59a8580c28dd653ec493ca795", "text": "we can create promo artworks , up to a limit .", "title": "", "metadata": ""}
{"_id": "3bdb08af37913e45156c6dd05a904ccc", "text": "Owner can remove administrators of tokens .", "title": "", "metadata": ""}
{"_id": "c9a6f35c5e2b4fdfb41176c3a97ca653", "text": "RULE we always lower the price any time there is a new high contribution ! .", "title": "", "metadata": ""}
{"_id": "faa97304bc50b203b6e4d35c6c822664", "text": "return the game details : 0 game id 1 start time 2 end time 3 no of player 4 total bet 5 question + option 1 + option 2 6 jackpot 7 is ended game 8 game bet value .", "title": "", "metadata": ""}
{"_id": "ce7ec04151235280b68994b5900ac79c", "text": "must be called by owners only out of stage .", "title": "", "metadata": ""}
{"_id": "7cf502fb3d62484984c59b6ce8129f69", "text": "allowance implements ERC20 , but is forbidden .", "title": "", "metadata": ""}
{"_id": "888a5906719953f012dd788e488d473f", "text": "making this function publicly accessible because random people accessing it just sends us money .", "title": "", "metadata": ""}
{"_id": "1759b8bdef6d9f49763c8d5731fe798c", "text": "Join price ( gem per skr ) .", "title": "", "metadata": ""}
{"_id": "29e9b25829e369bd4effa10f1ca5d974", "text": "Checks input and then creates storage buffer for sale finalization .", "title": "", "metadata": ""}
{"_id": "51afcaff490552399cd7bc717c237ebe", "text": "Create _mintedAmount tokens and send it to _target .", "title": "", "metadata": ""}
{"_id": "ebb74009a68aafde007c1ff74e6fc238", "text": "withdraw the mating request that was put earlier .", "title": "", "metadata": ""}
{"_id": "d958b13c693c6ce8531dfb2f667b71d1", "text": "arrange unsold coins .", "title": "", "metadata": ""}
{"_id": "f86bdb32de6fc432ebc896669a89595e", "text": "Refund Ether invested in pre-ICO to the sender if pre-ICO failed .", "title": "", "metadata": ""}
{"_id": "b8d27eb230eac30ec75c28ff06c31ced", "text": "True if _addr is a contract .", "title": "", "metadata": ""}
{"_id": "c503d091be129538bb6515a69ad2c0aa", "text": "get token release time of fifth round .", "title": "", "metadata": ""}
{"_id": "f376d9c6d6357e7fd0ca83824c2957be", "text": "Overrides Base Function .", "title": "", "metadata": ""}
{"_id": "ef55f606f4c7e205e285a89d31be094b", "text": "function name : setSendGodz purpose : be the flag update for the compliance account goal : to get the flag on the account .", "title": "", "metadata": ""}
{"_id": "b85c5a3a0fb10d06a5a617bce360b6de", "text": "exhaust after fusion .", "title": "", "metadata": ""}
{"_id": "ff2a6194b869d4f3c09d7268e0743cd8", "text": "Returns part of number by percent .", "title": "", "metadata": ""}
{"_id": "8afe1ed059c7e07328046e7f5258372c", "text": "Withdraw all tokens from the wallet that are not locked or promised .", "title": "", "metadata": ""}
{"_id": "611715a551a9a41aea84c59287d69340", "text": "owner will perform this action to payout the dividend and unfreeze the frozen accounts .", "title": "", "metadata": ""}
{"_id": "9757bc3fddb644fd17f24d9d884e878b", "text": "Computes bonus based on time of contribution relative to the beginning of crowdsale .", "title": "", "metadata": ""}
{"_id": "1bc0e0f77a57236a0da7d589e9057951", "text": "Function to restart minting new tokens .", "title": "", "metadata": ""}
{"_id": "cbc6e083aaee23e7d5c0d66b6f1ab572", "text": "This method can be called if you are the token owner and you want to transfer the token to someone else .", "title": "", "metadata": ""}
{"_id": "8ac1a37a8ff5ad281567a8eac3977846", "text": "This function is automatically called when ICO is finished .", "title": "", "metadata": ""}
{"_id": "bade3b84b7bc4e0bb82a96237a11674e", "text": "Contract execute .", "title": "", "metadata": ""}
{"_id": "e2b3aebce345eada44aeb2faeab6b8fe", "text": "The public function to call when a hero train with a dungeon , it determines whether whether a training is successfully , and the resulting genes .", "title": "", "metadata": ""}
{"_id": "b3ba7f61767c61b7282b091d6e9b6dd9", "text": "Transfert the amont _value from the address calling the function to address _to .", "title": "", "metadata": ""}
{"_id": "7c06ccbb2e29407cd8fcc65276021257", "text": "Get wei or foreign tokens amount .", "title": "", "metadata": ""}
{"_id": "c9721b3d034f27f3922740fbd2877438", "text": "init settings .", "title": "", "metadata": ""}
{"_id": "1afa6e06746700e10925299f10cdc560", "text": "Withdrawing Platform Tokens supply .", "title": "", "metadata": ""}
{"_id": "e03c0a2160dcd0206fd34080fd959931", "text": "Pause a bet .", "title": "", "metadata": ""}
{"_id": "f370d4006262bc84d24883ecaab2cb15", "text": "function name : add purpose : be the funcion for safe sum .", "title": "", "metadata": ""}
{"_id": "8b8b4e889cb08a7658dbfab7a1a23750", "text": "Return if crowdsale ended false if the crowdsale is not started , false if the crowdsale is started and running , true if the crowdsale is completed .", "title": "", "metadata": ""}
{"_id": "63861897b4a1bbd8a09d834e11c15fb8", "text": "smart contracts must implement the fallback function in order to deregister .", "title": "", "metadata": ""}
{"_id": "d7afe861c91d75f807c6538a7df9d5de", "text": "This function returns the amount raised in wei .", "title": "", "metadata": ""}
{"_id": "5a57e134b98491c6be95151b4e6ab658", "text": "creates a new converter with same basic data as the original old converter the newly created converter will have no connectors at this step .", "title": "", "metadata": ""}
{"_id": "42cd065ddfe8919bce0ccd74f28f9963", "text": "Modified allowing execution only if deploy agent call .", "title": "", "metadata": ""}
{"_id": "b5375222ac8dd917f70e17151a13206a", "text": "Gets the index by specifying the swap and owner addresses .", "title": "", "metadata": ""}
{"_id": "04173eb3a624232786df4e0d5ff2cb03", "text": "Returns the number of tokens currently held by _owner .", "title": "", "metadata": ""}
{"_id": "9ab09b6f3a2f4f5172e5a2ed110c5b1e", "text": "the total funds collected in wei ( ETH and none ETH ) .", "title": "", "metadata": ""}
{"_id": "39810db3845cd78c06c902a0b1fc4846", "text": "whitelist an affiliate address .", "title": "", "metadata": ""}
{"_id": "7685b2db65e1babbbde6ef8b05d2bbe3", "text": "transfer used for special contribuitions .", "title": "", "metadata": ""}
{"_id": "9fa625489d080159e8a2d630e70c3fee", "text": "Get totalSupply of token .", "title": "", "metadata": ""}
{"_id": "0c3f397ce2e0a3f61b648d85c05e952d", "text": "allow admin to withraw excess tokens accumulated due to precision .", "title": "", "metadata": ""}
{"_id": "7eedd683ca322c14152a103929af8fe9", "text": "Modifier to check that amount transferred is not 0 .", "title": "", "metadata": ""}
{"_id": "71e49b1abf66790b4e159673eb9c4bdf", "text": "Internal function to modify parameters based on tokens bought .", "title": "", "metadata": ""}
{"_id": "c71b71852f4f96eb52cd119f4957b6a6", "text": "Set day limit .", "title": "", "metadata": ""}
{"_id": "b449b1ee0662c35f6f36c913f40f9dc7", "text": "Function to buy in tokens with Ethereum .", "title": "", "metadata": ""}
{"_id": "3e13f377b8caa979c36778bfe978b450", "text": "the contract owner can set the coin value per 1 ether .", "title": "", "metadata": ""}
{"_id": "fad19a11c62d9f3ce156ed0382b08dc8", "text": "Maker can withdraw any ERC20 asset tokens from this contract .", "title": "", "metadata": ""}
{"_id": "70a747b8835a20e185b83c2992401c7a", "text": "Send tokens to specific user .", "title": "", "metadata": ""}
{"_id": "e90cf59b29d59722119addeace311e39", "text": "openANX to KYC verify the participant's account .", "title": "", "metadata": ""}
{"_id": "a5b2fa1774e7bcd1987c65200e4ac443", "text": "TODO : update tests to expect throw .", "title": "", "metadata": ""}
{"_id": "99b615166915eeb99a897293c6a96afc", "text": "Next price .", "title": "", "metadata": ""}
{"_id": "19a92858fab3a1fb1c712df7ffd3eac1", "text": "Setting the account of the user to send funds to .", "title": "", "metadata": ""}
{"_id": "7c7b8111851ee35d31a3c9672a18c0c1", "text": "List of top winners .", "title": "", "metadata": ""}
{"_id": "fc8b76ce9f8a40a7648bb93b8cbe08e1", "text": "setup the OpenDistribution parameters .", "title": "", "metadata": ""}
{"_id": "6bba5d11575bf565d0cbfa6b186ae506", "text": "Verify the caller of this function is a Lootbox contract or race , or crafting , or upgrade .", "title": "", "metadata": ""}
{"_id": "e6436aa49b3d86ea12604ad83983cb41", "text": "Release ether in escrow to the buyer .", "title": "", "metadata": ""}
{"_id": "fb6582d46b05ba65e71e37c617e4f031", "text": "exposing bets info for DApp .", "title": "", "metadata": ""}
{"_id": "32278f4fed596b24b56a9df2abd0aa7b", "text": "Wrapper to call setColors 4 times in one call .", "title": "", "metadata": ""}
{"_id": "ce1dbdf9c98a58bea605bb4c351f41d0", "text": "Can only be called if the crowdfunder is allowed to mint tokens .", "title": "", "metadata": ""}
{"_id": "0cde6f74a54331bd0c7c1ce899130a0f", "text": "Returns true if the duration of the ICO has passed , false otherwise .", "title": "", "metadata": ""}
{"_id": "e95a786453795d5130f07a1ef16f086a", "text": "returns the Provider of the Escrow contract .", "title": "", "metadata": ""}
{"_id": "daf74dbe77782aeb5697226defe112b6", "text": "main function for receiving the ETH from the investors and transferring tokens after calculating the price .", "title": "", "metadata": ""}
{"_id": "1f44e9501cbecbe18fb071fd2ec4ec3d", "text": "Transfer tokens to another account .", "title": "", "metadata": ""}
{"_id": "c5e562137daa77457231c38194bb547b", "text": "Allows transfers only when contract is not paused .", "title": "", "metadata": ""}
{"_id": "49a9132cb4c2e59bfee1d2c2ff19a278", "text": "Decrease the amount of WEDU token that allowed to the user .", "title": "", "metadata": ""}
{"_id": "f21bd2077e89f2eb0aaeb6edd94e4fee", "text": "Enables or disables the specified address to become a transfer agent .", "title": "", "metadata": ""}
{"_id": "44445071b8d0e7e0ba5606209b664a7e", "text": "purchase multiple pixels at the same time .", "title": "", "metadata": ""}
{"_id": "49c092ec222c8151104db27cf90e8585", "text": "Approve address to spend amount of tokens .", "title": "", "metadata": ""}
{"_id": "498a52e6342e10140f4ac426fcea3d65", "text": "Gets group members .", "title": "", "metadata": ""}
{"_id": "beb984380c1670245bd09181410c34dd", "text": "Burns a specific amount of tokens from an address .", "title": "", "metadata": ""}
{"_id": "8a40f970191d8b76f5fa34a57f0116b4", "text": "Withdraw tokens from your contract balance .", "title": "", "metadata": ""}
{"_id": "409b38fd6e89ccba56b4b0347ff85bdf", "text": "Changes Marketing Strategic wallet .", "title": "", "metadata": ""}
{"_id": "c4eba8a99d0b5cc15962a6e8095b157a", "text": "the tokens at the airdropAddress will be airdroped before 2018 . 12 . 31 .", "title": "", "metadata": ""}
{"_id": "d55b1a1ec64fa9195246cf273bf64172", "text": "Allows the owner to claim all unclaimed investor tokens .", "title": "", "metadata": ""}
{"_id": "6c1ecd91bc4d133b29901ff3b15589ea", "text": "Resigns a player from a specific board , can get called by either player on the board .", "title": "", "metadata": ""}
{"_id": "45942702d490cf10a8c8310e7cdf8ab7", "text": "Reject all ERC223 compatible tokens .", "title": "", "metadata": ""}
{"_id": "e3234a57220917df77c008cf793e1e42", "text": "Standard ERC20 transferFrom function .", "title": "", "metadata": ""}
{"_id": "64bfa22b54225115f5acb6044fac04b1", "text": "true if crowdsale participants can buy at the moment checks whether the cap has not been reached , the purchaser has been authorized , and their contribution is within the min / max thresholds .", "title": "", "metadata": ""}
{"_id": "8d7058efb6fdd00c3d93210c788d0f2a", "text": "Set the XWIN Token contract address as a one-time operation .", "title": "", "metadata": ""}
{"_id": "62e4fe8cb4a10d3a3a17ca81bdf35b84", "text": "caculate amount of token in crowdsale stage .", "title": "", "metadata": ""}
{"_id": "1c3d91ae61079697a4fc4e0134d765a3", "text": "Calculates amount of bonus tokens .", "title": "", "metadata": ""}
{"_id": "ca9fe9ee8c0ae1faafde819d0026dc98", "text": "puts a cat up for a specific address to adopt .", "title": "", "metadata": ""}
{"_id": "a54f75041b98a5a3d932240b4b5d934e", "text": "Allow owner to change the multisig wallet .", "title": "", "metadata": ""}
{"_id": "d48e0642a6d78fd8ea34381ddcb75245", "text": "Get the portion of bet amount that is to be accumulated in the jackpot .", "title": "", "metadata": ""}
{"_id": "b48870e1a685578e231ed2132603bdd0", "text": "Transfer tokens .", "title": "", "metadata": ""}
{"_id": "f694eaff2ac97759fb213eb7d637856f", "text": "Allows participants to claim all their tokens .", "title": "", "metadata": ""}
{"_id": "3f4be9e8934e99d5fe0fbe3447df2342", "text": "Push adds element as last item in array and returns the index it was inserted at .", "title": "", "metadata": ""}
{"_id": "b9818c4b7030b09eebf715e56ebf2aeb", "text": "Creates new champ .", "title": "", "metadata": ""}
{"_id": "f9791cc3f7e395e1b3328acf23de99b6", "text": "standard function transferFrom similar to ERC20 transferFrom with no _data added due to backwards compatibility reasons .", "title": "", "metadata": ""}
{"_id": "2f5a5076255df3898f2fd562dc44fdb6", "text": "Return the array of burn delegates .", "title": "", "metadata": ""}
{"_id": "92ef7ea267a95de70f321dcc893d33ec", "text": "Unmarks a token as an ERC777 token .", "title": "", "metadata": ""}
{"_id": "09ff7c06d9690bb144047166ffb84418", "text": "data : The data stored at the location after hashing .", "title": "", "metadata": ""}
{"_id": "0120cd1faee762e2fca12cfbaee38a58", "text": "set address of a sale that will be next one after the current sale is finished .", "title": "", "metadata": ""}
{"_id": "2056ec2a8e7a2c943c965df44436a594", "text": "These are called by public facing functions after sanity checks .", "title": "", "metadata": ""}
{"_id": "283bef5c536c7c6ea5cc3f4dec667a33", "text": "Set price increase of token per transaction .", "title": "", "metadata": ""}
{"_id": "418a73482f9125d3038172ff193b50d5", "text": "release tokens from sold statistist , used if the account was not verified with KYC .", "title": "", "metadata": ""}
{"_id": "246afddcf8096fd00add9a3a3d5733ba", "text": "Construction , creating a list of tranches .", "title": "", "metadata": ""}
{"_id": "614bd9d100cb2af0732cf380b7e4e160", "text": "used by owner of contract to halt crowdsale and no longer except ether .", "title": "", "metadata": ""}
{"_id": "26aa170771af3c3f8d4d2bf802c6f813", "text": "from ERC20 standard .", "title": "", "metadata": ""}
{"_id": "554b45eb0ca07090d8706357b7d9e3f5", "text": "get total number of transactions .", "title": "", "metadata": ""}
{"_id": "3bbee3d5fe7d9a2e94c679b9c604628b", "text": "Get the account balance of an account with address _owner .", "title": "", "metadata": ""}
{"_id": "4be03422843347e2229c3fb7104d979b", "text": "transferAndNotify based on an instruction signed offline .", "title": "", "metadata": ""}
{"_id": "6563bc30e31cbe0296bbe15d66c53398", "text": "removes an entry from the linked list .", "title": "", "metadata": ""}
{"_id": "6cee43594dacaa4020e9b33dfcea3fbb", "text": "Set new auction price limit .", "title": "", "metadata": ""}
{"_id": "b5d886ae628e8160a80ea6c91aa0f39f", "text": "If worst bid is not set or price lower than worst bid price , this order is the new worst bid .", "title": "", "metadata": ""}
{"_id": "764a8b8800994489d080dc02a29a0c6b", "text": "Interal function to generate valid picks .", "title": "", "metadata": ""}
{"_id": "7379c1d477854c6312d7c0a3fcbd9e85", "text": "only the contract can operate this internal funktion .", "title": "", "metadata": ""}
{"_id": "e3cb7f839aa239c608f5dcb1eb07fc8b", "text": "returns the status of the requested job .", "title": "", "metadata": ""}
{"_id": "9e4ec5aa6121630054acc48916613d33", "text": "Practical informations .", "title": "", "metadata": ""}
{"_id": "4fde88475e4f65250a4650a947da9611", "text": "Sets the token price .", "title": "", "metadata": ""}
{"_id": "583539fd96622706d577f652079da7cc", "text": "Allows the owner to transfers vested tokens to beneficiary .", "title": "", "metadata": ""}
{"_id": "950fb00309cd36f15a23f681d7d939bd", "text": "Internal Functionality .", "title": "", "metadata": ""}
{"_id": "c4e7ab3d9b2fa31013d9f81989aff375", "text": "Retrieve the left child id of the node .", "title": "", "metadata": ""}
{"_id": "60a4d2c09d67e7d15f174067c1b9f3d8", "text": "For creating Country .", "title": "", "metadata": ""}
{"_id": "b4645f7abf6d566819e716438208f992", "text": "show how much profit has been made ( houseEdge ) .", "title": "", "metadata": ""}
{"_id": "245c21c5d2e1004170cfda7319178713", "text": "Returns number of the current milestone .", "title": "", "metadata": ""}
{"_id": "1a90fa0e90d232566939378f08d45ea3", "text": "Sets the stake start time .", "title": "", "metadata": ""}
{"_id": "3824810e7a41a0991ccac6aed9103e99", "text": "Set new wallet address .", "title": "", "metadata": ""}
{"_id": "e6df089daff74b6d2fa7c007aba95fc1", "text": "Internal function to manage ICO status , as described in the withepaper .", "title": "", "metadata": ""}
{"_id": "25158d2148858f0b91e01736ea9abbb9", "text": "Actually signed hash of the payment promise , considering Ethereum Signed Message prefix .", "title": "", "metadata": ""}
{"_id": "b73d4e55269ab0e220eba08576969d7b", "text": "This method will generally be called by the ATT token contract to acquire ATTs .", "title": "", "metadata": ""}
{"_id": "ece21af52b4925fbdddc7c0346279dab", "text": "Divides the dividend by divisor , returns the truncated quotient .", "title": "", "metadata": ""}
{"_id": "209d7b48a3e36c9964eafeb70251bcf7", "text": "Purchase a city .", "title": "", "metadata": ""}
{"_id": "8171e25b2d46763286d9bece8853effe", "text": "Call AddHOLDer function every time a token is sold , _alreadyInList avoids duplicates .", "title": "", "metadata": ""}
{"_id": "34811c1f4d3ce6e593ed6e5071d85883", "text": "Unfreeze account ( address ) .", "title": "", "metadata": ""}
{"_id": "5cad1e9fedd48fa2b6794b484c781004", "text": "Function for calculating and updating state during user money investment - first of all we update current user state using updateProfit function - after that we handle situation of investment that makes currentRoundCollected more than current round limit .", "title": "", "metadata": ""}
{"_id": "09a3f597d19885127fe45ff74e1dd46d", "text": "Removes a stakeholder from the list .", "title": "", "metadata": ""}
{"_id": "d96d5346dca90760c03f29f54e4dc33f", "text": "Closes a vault access , deposit is sent back to freelance wallet .", "title": "", "metadata": ""}
{"_id": "6d83320fbd757a5df27561a2ea9eed26", "text": "Escrows the NFT , assigning ownership to this contract .", "title": "", "metadata": ""}
{"_id": "7b03eae6bce61dbcfcbfe7bd642426b5", "text": "For a give date how many 24 hour blocks have ellapsed since token sale start .", "title": "", "metadata": ""}
{"_id": "edc768582ed774ab6bf00dfaed43b1f6", "text": "Send _value tokens to _to from your account .", "title": "", "metadata": ""}
{"_id": "2f5de4a98a379d17cbcd207cd82da965", "text": "Buys the tokens given the price of the tier one and the wei paid .", "title": "", "metadata": ""}
{"_id": "02ec4a517010a089ace156b824786970", "text": "get total weighted contribution .", "title": "", "metadata": ""}
{"_id": "2c1cd3c1632ba3ec4f098821a5b6f22b", "text": "The contract can have 0 or more admins some functions are accessible on the admin level rather than the owner level the owner is always an admin .", "title": "", "metadata": ""}
{"_id": "6ebef0000d519e7564931b222357e865", "text": "Calculate the maximum initial buyout price for a plot .", "title": "", "metadata": ""}
{"_id": "aeb0bda21feee495cda1df767d06fdda", "text": "Get main data of deal .", "title": "", "metadata": ""}
{"_id": "d2e8277db1617590fe4062a8cfda501c", "text": "The owner can transfer ownership .", "title": "", "metadata": ""}
{"_id": "894e95aabe8623888ce2184473be8388", "text": "update item by customer .", "title": "", "metadata": ""}
{"_id": "f6ceb9a2720c6ac3588c577e84d5f9fd", "text": "ORI : token are not mintable , transfer to wallet instead .", "title": "", "metadata": ""}
{"_id": "da5bab6804612b5911a3e32946188591", "text": "drop token .", "title": "", "metadata": ""}
{"_id": "1afca72a061fcda5437e13a8d28895d1", "text": "adds a set of addresses to the whitelist .", "title": "", "metadata": ""}
{"_id": "efbe1fb4bdc75726516cd82c013390fe", "text": "Revokes a presale allocation from the contributor with address _contributor .", "title": "", "metadata": ""}
{"_id": "2fa80983bd5a9aec7b347bd2f1810bf1", "text": "Returns the registration time of the given record .", "title": "", "metadata": ""}
{"_id": "d02c1f1bce8cfaac5337a3fc9b9869ac", "text": "set the price of asset .", "title": "", "metadata": ""}
{"_id": "2f099473e8fcbf0732048057786c79c7", "text": "Updates node charging rate .", "title": "", "metadata": ""}
{"_id": "dc97959a15006afda72403536dc032b9", "text": "remove account from allowed accounts .", "title": "", "metadata": ""}
{"_id": "be2744d07ba6efaf621906ab18d9f7ac", "text": "Limit token transfer if _sender is frozen .", "title": "", "metadata": ""}
{"_id": "4a0d5754d429c29896c3dfe1cbf1c127", "text": "Function can't contain Ether value .", "title": "", "metadata": ""}
{"_id": "fd1b04256809e1a2fdc7c685335e2825", "text": "tokenAddresses Underlying token addresses .", "title": "", "metadata": ""}
{"_id": "3845bcb39593b8adba19db98608925a1", "text": "Oyster Protocol Function .", "title": "", "metadata": ""}
{"_id": "9c43a817204b854cd8845e69ca64a4d2", "text": "If from is superinvestor in transforFrom , the function can t be used because of limit in Approve .", "title": "", "metadata": ""}
{"_id": "7094a7b37604863add67aa38fce677f2", "text": "Moves value between pledges .", "title": "", "metadata": ""}
{"_id": "c627d17ebce7abaf85ec411eaf17021c", "text": "Gets the Nickname for an Account Address .", "title": "", "metadata": ""}
{"_id": "96f37733c1052e5f8ca96d09b1c0015e", "text": "Check the balance of a Beercoin user .", "title": "", "metadata": ""}
{"_id": "24c9473512524b1612f5b668708df094", "text": "Send coins throws on any error rather then return a false flag to minimize user errors .", "title": "", "metadata": ""}
{"_id": "f9c7d1afb047447b6604c3b53e2c8ec5", "text": "locks a percentage of tokens for a specified time period and then grants ownership to the specified owner .", "title": "", "metadata": ""}
{"_id": "f5e04727da09824bdd6cf9a3c8a822b2", "text": "Return the admin status for another address .", "title": "", "metadata": ""}
{"_id": "38a262611490b8e874a3e3a60263cdc0", "text": "This function will be used to add a new hero by the contract creator .", "title": "", "metadata": ""}
{"_id": "b0a6aee5439c0758c6ee1f88d7be6f18", "text": "add new hodl safe ( ERC20 token ) .", "title": "", "metadata": ""}
{"_id": "708cd1d20b25467645d36e1c195f5dd3", "text": "function accept tokens from users as a payment for servises and burn their .", "title": "", "metadata": ""}
{"_id": "295aee57dd09fad9481795bc19147574", "text": "buy a ticket and send a hidden integer that will take part in determining the final winner .", "title": "", "metadata": ""}
{"_id": "1bacf99b5f0e392d7e226b489ca698c1", "text": "The amount of bronze caps scanned so far .", "title": "", "metadata": ""}
{"_id": "38fa2481b8229e34b8a01af692ac8e62", "text": "Token sale state machine management .", "title": "", "metadata": ""}
{"_id": "baf9f88f377a5e31701d159a6c8a2cbe", "text": "The balance of owner at the current block .", "title": "", "metadata": ""}
{"_id": "8ba2c6a32b3a7ecca81c705275068c9f", "text": "Finished the current bet of a player , if they have one .", "title": "", "metadata": ""}
{"_id": "1d70dfbc12a34d2b525d7c4995146d28", "text": "minimum amount of funding to consider the sale as successful ( in wei ) .", "title": "", "metadata": ""}
{"_id": "a4c1418c6d68796841d9de1ee821508c", "text": "Function to check the amount of tokens that an owner allowed jto a spender .", "title": "", "metadata": ""}
{"_id": "fa7eb76fb4950fd2b0a2deeb6f2b0553", "text": "Transfer locked tokens to Lunyr's multisig wallet .", "title": "", "metadata": ""}
{"_id": "ab825c6223213781255b96125bd22421", "text": "Withdraw traded tokens 10K at a time .", "title": "", "metadata": ""}
{"_id": "09f723746ec6726eb2ad337bc3e4f6b3", "text": "Checks if a given address is the current owner of a particular LinglongCat .", "title": "", "metadata": ""}
{"_id": "690753afa79ed146ace126f020d25b91", "text": "Old owner requests transfer ownership to the new owner .", "title": "", "metadata": ""}
{"_id": "22e8fbabdf3c451b2dc4a31150b93462", "text": "Checks if a delegate is active .", "title": "", "metadata": ""}
{"_id": "d826b833d4352ad187ea6516f1bc019b", "text": "To start PREICO .", "title": "", "metadata": ""}
{"_id": "0695996fccef93483d231b88db2db6a2", "text": "Checks if a given address is the current owner of a particular EtherDog .", "title": "", "metadata": ""}
{"_id": "e10f9a6130d62d0ebdba9b8b90e90e65", "text": "function for setting an ad active or inactive .", "title": "", "metadata": ""}
{"_id": "d2b2b73aa77dd3e42d3bb97d09b3882c", "text": "Owner can remove the ability to mint new coins .", "title": "", "metadata": ""}
{"_id": "a375fd07c485baa28476630a61c3a814", "text": "Returns current price for 1 token .", "title": "", "metadata": ""}
{"_id": "d45e4429de6d95298eae94317e712e0d", "text": "Auxiliary Function of Contract Query .", "title": "", "metadata": ""}
{"_id": "b6db0b7abaaff395cfd6d4ba956771c2", "text": "Copy of BurnableToken burn .", "title": "", "metadata": ""}
{"_id": "2121fe6f572b4df0e5c5dbd92a51e5f0", "text": "Airdrop function which take up a array of address , token amount and eth amount and call the transfer function to send the token plus send eth to the address is balance is 0 .", "title": "", "metadata": ""}
{"_id": "9d40f9b8f1162cb74cb709e577618708", "text": "Get the number of managers .", "title": "", "metadata": ""}
{"_id": "c00ba90e1dada587d1694575ea8a0979", "text": "Add a wallet ignoring the Exchange pause .", "title": "", "metadata": ""}
{"_id": "f0de0358c700c93729a016636a1c58c4", "text": "Sets min contribution .", "title": "", "metadata": ""}
{"_id": "dc5a4cd6bf1546bc43bfdc57189cbc3e", "text": "Initializes Starbase crowdsale .", "title": "", "metadata": ""}
{"_id": "ab3bd67e082c342451d2167f85b2077f", "text": "check if the caller is the owner of the contract .", "title": "", "metadata": ""}
{"_id": "769223d5efd46b184bbaeb924ed5725f", "text": "Increment mileage points .", "title": "", "metadata": ""}
{"_id": "8b6fd71a08113fc9656651a865b8f5e0", "text": "Set account that can mint new tokens .", "title": "", "metadata": ""}
{"_id": "988b8d159c955adaaefa6871f1243930", "text": "Sets an allowance from a specific account to a specific account .", "title": "", "metadata": ""}
{"_id": "7ca988a178bcc29f5f3444638fb85a4e", "text": "Increases the number of tokens a spender is allowed to spend for msg . sender .", "title": "", "metadata": ""}
{"_id": "73374a5cc48a25c862e31a52dd4f3aec", "text": "function to Prevent Allow target from sending receiving tokens .", "title": "", "metadata": ""}
{"_id": "91f4471ce5134a078f6259700b245dc5", "text": "Admin modifier .", "title": "", "metadata": ""}
{"_id": "256bff000832440e793c301676f717fb", "text": "Used to ensure only the owner can do some things .", "title": "", "metadata": ""}
{"_id": "6e92f4628c48cf5096224a4116cb751d", "text": "transfer Token with timelocks .", "title": "", "metadata": ""}
{"_id": "a0dcce2c9e784308656af51b53ade5b6", "text": "Assigns ownership of a specific anime card to an address .", "title": "", "metadata": ""}
{"_id": "5a81649fb943747adc58bc250bf27ad1", "text": "Set the tokenTransfer flag .", "title": "", "metadata": ""}
{"_id": "617a1dfe091b590898b55e90a3e997a5", "text": "called by external contract ( ImmlaToken ) for checking rights for transfers , depends on who owner of this address .", "title": "", "metadata": ""}
{"_id": "1da2a5f4febc6848b1315ecd9dde9504", "text": "Deliver tokens to purchasers according to their purchase amount in CNY .", "title": "", "metadata": ""}
{"_id": "bb33fadde22dae5665a0ab1da503b3b3", "text": "encoded transfer .", "title": "", "metadata": ""}
{"_id": "7ab6f27699f3f80a3dcd5c5685da0815", "text": "If no new buys occur ( dividendsScore 0 ) and the richest and latest players don't withdraw their dividends after 3 jackpots , the game can be stuck forever .", "title": "", "metadata": ""}
{"_id": "6174203298f29c652eb51d97d24dd476", "text": "Owner : Withdraw Ether .", "title": "", "metadata": ""}
{"_id": "bc271b44dae344af3c694085164c355e", "text": "is_leap_year sets year to 12AM on new years day of the current year and sets the mining rewards .", "title": "", "metadata": ""}
{"_id": "4f305007426230e4e6e034066a1b117d", "text": "an allowance should be available .", "title": "", "metadata": ""}
{"_id": "ba2c2cb3523487cecae5914725921aec", "text": "Returns the balance of an account with address _owner .", "title": "", "metadata": ""}
{"_id": "1942632c42a155496bc91699eb3333a6", "text": "Returns how many ALS are given in exchange for 1 ETH .", "title": "", "metadata": ""}
{"_id": "404640a23ca8d6500bcda2b1137d8de3", "text": "Adds an address and associated percentage for transfer .", "title": "", "metadata": ""}
{"_id": "1a28d05056243cd993cf6ba289cf50ed", "text": "Order Buy tokens - it's order search sell order from user _from and if all ok , send token and money .", "title": "", "metadata": ""}
{"_id": "895cc258006e326f3422baa49381466f", "text": "functions for restricted token management .", "title": "", "metadata": ""}
{"_id": "67b23941d8e1e35585995c27fb3a1421", "text": "Granting / minting of marketing coins by owner .", "title": "", "metadata": ""}
{"_id": "b731c57dd19802fa01132760e86c2af8", "text": "BTC Owner closes Swap .", "title": "", "metadata": ""}
{"_id": "6bc8bb92aca6b76e2dd1a53b23825a9a", "text": "Approve an address to have admin power to use transferFrom .", "title": "", "metadata": ""}
{"_id": "0c96a35dbc9fa1ac931351cacb9a4875", "text": "Moves funds in sale contract to ACFWallet .", "title": "", "metadata": ""}
{"_id": "55de81d455fa50630f37d115cc6be85e", "text": "number of seconds left until protocol terminates .", "title": "", "metadata": ""}
{"_id": "3dd46ed40ffb01e75ffe46d79455ee2c", "text": "Sub function asserts that b is less than or equal to a .", "title": "", "metadata": ""}
{"_id": "44ccd6b0f46e440f291204dcfb5ac6cf", "text": "Access modifier .", "title": "", "metadata": ""}
{"_id": "920e0cc2c48d58c33636a4ec29687dd8", "text": "Before transfers are enabled for everyone , only this contract is allowed to distribute DNT .", "title": "", "metadata": ""}
{"_id": "8c37b9455ff94abd9f89060eb2222acb", "text": "Fill hash data many times .", "title": "", "metadata": ""}
{"_id": "eba85c547d7d1c17e758d1e015ee6330", "text": "Investors : see how many BOV you are currently entitled to ( before the end of the crowdsale and distribution of tokens ) .", "title": "", "metadata": ""}
{"_id": "2de288e3741d3ba38b1d62200ba0111d", "text": "buy issuer tokens .", "title": "", "metadata": ""}
{"_id": "06a92d50cb5c11951b6b7612b4bc87a6", "text": "The sender casts a vote against confiscation of the target account's nomin balance .", "title": "", "metadata": ""}
{"_id": "ac7a84163ff58c19d0df1e5be2224012", "text": "Function to test whether target address is a contract .", "title": "", "metadata": ""}
{"_id": "11b4f90d7fb4f5a15a634b0623df025d", "text": "Phase 1 functions buyin function .", "title": "", "metadata": ""}
{"_id": "f0be7088b8527bc91e4b833bb0cb3889", "text": "Check if _name is a reasonable choice of name .", "title": "", "metadata": ""}
{"_id": "4cfab6e2c2d56e805bf915df159b672d", "text": "Internal Price Calculation - turn packed price into a friendlier unpacked price .", "title": "", "metadata": ""}
{"_id": "c1d0e3093e417cd5e9b91f0a083cc6f6", "text": "function to transfer token manually .", "title": "", "metadata": ""}
{"_id": "acaf9566646e9f6a65185a95723da889", "text": "creates presale token .", "title": "", "metadata": ""}
{"_id": "09229e2d7b872e2536d691fffe02fb2a", "text": "Removes presale account addresses from privatesalewhitelist .", "title": "", "metadata": ""}
{"_id": "93a26735400674f8ad28d6e453192413", "text": "Only shareholders can execute a function with this modifier .", "title": "", "metadata": ""}
{"_id": "5a9e0c7dd44b04ccfb5e727627053f7c", "text": "Returns an array of oracle addresses , an array with the length of each oracle name , and a concatenated string of oracle names .", "title": "", "metadata": ""}
{"_id": "edd9974df3744345ea902ee98e1cd089", "text": "Gets document updatedVersionId with ID 0 - no update for document .", "title": "", "metadata": ""}
{"_id": "eae617d48ccc98910f8d73d827d7146e", "text": "Required for ERC-721 compliance .", "title": "", "metadata": ""}
{"_id": "ecb94cd09dd437cc20cc96a1dced2ab8", "text": "Getters to allow the same blacklist to be used also by other contracts ( including upgraded Full ) .", "title": "", "metadata": ""}
{"_id": "1d6045817a1665ab0f875fb4e4c38bc3", "text": "batch airdrop functions .", "title": "", "metadata": ""}
{"_id": "02b9fe2903e5f82247b88ae3f1650bdc", "text": "Throws if called when ICO is active .", "title": "", "metadata": ""}
{"_id": "571b84a9c6eef026b9f79fbcbac16e70", "text": "Checks if the Token Sale has ended .", "title": "", "metadata": ""}
{"_id": "8b5ed718e68051ba9e2cc24efb17f4ff", "text": "Send weis to the wallet .", "title": "", "metadata": ""}
{"_id": "76d7dcb08dcb9f2a81f1b3d2e2ea5591", "text": "permission related .", "title": "", "metadata": ""}
{"_id": "20bc82d945d02a419e9976bb268779bf", "text": "set buy functionality enabled / disabled .", "title": "", "metadata": ""}
{"_id": "2ba9741134ea6a675e0a9b8bf4044400", "text": "Set available tokens to synchronized values or force to stop contribution campaign .", "title": "", "metadata": ""}
{"_id": "e031d489f01ffae0bdad465b50e0a395", "text": "Admin can move end time .", "title": "", "metadata": ""}
{"_id": "ff8c79b3dcb5e08032115ec77dea3394", "text": "Transfer amount of metadollars from own wallet to someone else .", "title": "", "metadata": ""}
{"_id": "e1b11516ced36a759c7022285e40b454", "text": "Unlock locked tokens .", "title": "", "metadata": ""}
{"_id": "ed90a8c66e0a647240cb3fa1a922889d", "text": "early_whitelist to buy token with quota .", "title": "", "metadata": ""}
{"_id": "bf10d612149626cb60d864f33f2328af", "text": "decode token oreder data , internal .", "title": "", "metadata": ""}
{"_id": "4f67d68a6eee9710d9a6c59a5eda474e", "text": "IMPLEMENTS : Bankrollable . getCollateral ( ) .", "title": "", "metadata": ""}
{"_id": "0d6bbc7f68bf1408947a3cf1c296aec8", "text": "Remove tokens from circulation to control token prcie .", "title": "", "metadata": ""}
{"_id": "1d81dca15139dd3037349c7a82ebc604", "text": "Get Time Left .", "title": "", "metadata": ""}
{"_id": "907eb0a88f220035635408b470305905", "text": "Update compliance proof hash for the issuance .", "title": "", "metadata": ""}
{"_id": "44b8802a172fa7e69b2ac5f9d2cf5b8c", "text": "Cancels the input order .", "title": "", "metadata": ""}
{"_id": "aa15fe98485d245649f4404a45f00647", "text": "function to stop the ICO .", "title": "", "metadata": ""}
{"_id": "59f639a63c65269f9682f5c4a2ff51ea", "text": "Destroy tokens from other account , can be run only by owner .", "title": "", "metadata": ""}
{"_id": "64fee176a8d329c31657a15310da3754", "text": "AP Ok - Calculate the APY / ETH at this point in time .", "title": "", "metadata": ""}
{"_id": "8d0655b881e67a9c4fc2d66c56198ed8", "text": "Access modifier for contract owner only functionality .", "title": "", "metadata": ""}
{"_id": "01e57bd9d00921fbd6d5178a12c6bfb2", "text": "Called by owner role to pause the contract .", "title": "", "metadata": ""}
{"_id": "e75525eea6bf7589c390de57031e2de4", "text": "This function is disabled .", "title": "", "metadata": ""}
{"_id": "f8d51363b5c3d9a4037105cc9a2ed700", "text": "symbol function returns the symbol ticker of the token .", "title": "", "metadata": ""}
{"_id": "a80a8e6d7546315461f664a7688c5a4c", "text": "Get user allowance .", "title": "", "metadata": ""}
{"_id": "89ccae8b753dc745e3012ae0044db857", "text": "Start of the crowd sale can be set only once .", "title": "", "metadata": ""}
{"_id": "9312e40f3575d0d2db518e7e8b6be47e", "text": "Returns an array containing all the ids in the set .", "title": "", "metadata": ""}
{"_id": "35674732278f5f341f2be768c1daaa77", "text": "transfer eUSD token for a specified address .", "title": "", "metadata": ""}
{"_id": "e748a99cfe2115cf7b38f775a5e1d8ba", "text": "Get all approved proposals .", "title": "", "metadata": ""}
{"_id": "ad203021952e479532c72318bd0df499", "text": "member function to unlock token for trading .", "title": "", "metadata": ""}
{"_id": "5f142b90df5b7197029816f0f2263c08", "text": "start auction .", "title": "", "metadata": ""}
{"_id": "2087d14f578077fa22802a2153d39257", "text": "Set the bonus percent for each purchase .", "title": "", "metadata": ""}
{"_id": "224ff200dfb62e9b64608707960bf398", "text": "Get a license's productId .", "title": "", "metadata": ""}
{"_id": "1cd73ac787e0a687dd7682db0b134abe", "text": "Returns asset total supply .", "title": "", "metadata": ""}
{"_id": "f81d8c975c933e5db27e0f90fff4a262", "text": "set start and end block for funding .", "title": "", "metadata": ""}
{"_id": "54c1fb849f8fb862932ab05b9800a457", "text": "Gets pointsGiven and pointsToAttackPower .", "title": "", "metadata": ""}
{"_id": "852071d629760eef872785266be3a57a", "text": "TransferFrom function allows users to spend ETH on another's behalf , given that the _owner has allowed them to .", "title": "", "metadata": ""}
{"_id": "a05ab5046d5121bea3c9dabb387a4965", "text": "for all discount logic .", "title": "", "metadata": ""}
{"_id": "9a1211a6f6f8582a854c9810de45887c", "text": "ERC20 backwards compatible allowance .", "title": "", "metadata": ""}
{"_id": "1fc90357274f68ff6d089389acae4045", "text": "funcion interna para intercambiar el due\u00f1o del Loan .", "title": "", "metadata": ""}
{"_id": "9111f9c64327e5d32ecc74ef2f45b02f", "text": "Allows to feed a horsey to increase its feedingCounter value .", "title": "", "metadata": ""}
{"_id": "a4b6631986299fff966495fc4478adc5", "text": "Internal function to create , accept , add additionals and pay a request as Payer .", "title": "", "metadata": ""}
{"_id": "0bc69baa0f3fa2c19ccd4a4eb93db209", "text": "Update the betting underlying betting rules in the contract ( fees etc . ) .", "title": "", "metadata": ""}
{"_id": "1305d4754b6f52dc04e98f2e983caa4c", "text": "Set new MinCap .", "title": "", "metadata": ""}
{"_id": "711e99afe88508cae8d8797bcb149051", "text": "checks if a wallet is a burn wallet .", "title": "", "metadata": ""}
{"_id": "1fd58a1e75fec3ec1747fb341a0bd85c", "text": "approveData is an addition to ERC20 token methods .", "title": "", "metadata": ""}
{"_id": "6c1449eb635f98de83a83f99534f0014", "text": "Protect user from ETC / ETH trapped .", "title": "", "metadata": ""}
{"_id": "c4d22e9614d16ddd942842abba54ac16", "text": "Restrict to the master only .", "title": "", "metadata": ""}
{"_id": "e434675d2df9b85e139e046f311f09e1", "text": "Get the amount of shares that a shareholder owns in percentage relative to the total number of shares .", "title": "", "metadata": ""}
{"_id": "c8ae27b4175024b88751bbd14848c2c8", "text": "Set number of active transcoders .", "title": "", "metadata": ""}
{"_id": "beb5ab275040a8d87d047c0aef6dcb37", "text": "Whether the proxy is executed .", "title": "", "metadata": ""}
{"_id": "ce01a4250cefd9f65150d078db560156", "text": "Pay for order .", "title": "", "metadata": ""}
{"_id": "86ec60d515d79a07b8d5e34e7949135e", "text": "Tests for uppercase characters in a given string .", "title": "", "metadata": ""}
{"_id": "30ce8b96a8536f2ba5cfdb820d803dbe", "text": "called by the owner to set dropable .", "title": "", "metadata": ""}
{"_id": "497d63d3b1e37145c214b9ba58a06f20", "text": "mint self supply .", "title": "", "metadata": ""}
{"_id": "95fbdcf7aa30fcfc4d234dec4b703cf1", "text": "onlyRecipientOrLeadLink Marks a milestone as DONE and ready for review .", "title": "", "metadata": ""}
{"_id": "fa2dfd14df80e14128f7c565dafb2b70", "text": "obtain , for a given rootHash , the proposed ( not definitively voted yet ) _ipfsAddress .", "title": "", "metadata": ""}
{"_id": "d5c6198b36f8bb0770a2db1cb101d8db", "text": "Returns whether the MVM end-of - life has been reached .", "title": "", "metadata": ""}
{"_id": "05a727ac03732bad8e8d3d5b398898f4", "text": "buy tokens - helper function .", "title": "", "metadata": ""}
{"_id": "2c8ba9669b525830afb7c87d79c2e908", "text": "To set a new minter address .", "title": "", "metadata": ""}
{"_id": "fc37857b9df91a30a7254c567ca6a44b", "text": "IERC20Token implementation .", "title": "", "metadata": ""}
{"_id": "ee240cfdc3b7a9bde877cc94299bb6c4", "text": "Returns when will the token become operational again and why it was frozen .", "title": "", "metadata": ""}
{"_id": "e266edc6c968d97d8135db8249e96642", "text": "Get the token id of the player's th token .", "title": "", "metadata": ""}
{"_id": "8f7aea7e60b26afe4e69067b526a6b94", "text": "getOrderCount allows parties to query how many orders are on the book .", "title": "", "metadata": ""}
{"_id": "26afc97e65be85521542e112206b740a", "text": "panicButton and refundUser are here incase of an emergency , or launch of a new contract .", "title": "", "metadata": ""}
{"_id": "d8da346ac9401a753f14162315ffd0da", "text": "modifier to allow token purchase only when purchase is unlocked and rate 0 .", "title": "", "metadata": ""}
{"_id": "184e1f7432c7d5eca6cb056c064c0407", "text": "Decrease the amount of eUSD tokens that an owner allowed to a spender .", "title": "", "metadata": ""}
{"_id": "1b84c6b45222557cebb27c648855725f", "text": "Check target address is service .", "title": "", "metadata": ""}
{"_id": "48e9bb4927fd675ccd4165d6dbd9edc1", "text": "Public Order View - enumerate all recent orders + all open orders for one client .", "title": "", "metadata": ""}
{"_id": "6607afed47a8b2b571b07e2368bf1be2", "text": "NOTE : _weiExpected protects against a value decrease between send time and process time .", "title": "", "metadata": ""}
{"_id": "fc3a12ade3b80f22e301b23685efca95", "text": "Run this before crowdsale begins , so crowdsale contract could transfer tokens .", "title": "", "metadata": ""}
{"_id": "fcfb13945e982a36dd9b1acc7980c354", "text": "basically private ( only called if last transaction was 4 weeks ago ) .", "title": "", "metadata": ""}
{"_id": "9c50541d65d3b6994af6523713c1f5ab", "text": "A uint256 specifying the amount of tokens still available for the spender .", "title": "", "metadata": ""}
{"_id": "aaea1b54fdd7b596ecf3bc14afa94d8b", "text": "lock or unlock for one address to transfer tokens .", "title": "", "metadata": ""}
{"_id": "e2a496fd0ce2fef8801f9cb922d46810", "text": "Allow the tokensale owner to specify that refunds are allowed regardless of soft cap goal .", "title": "", "metadata": ""}
{"_id": "77f67cc852b51a36a65254def65514bb", "text": "Buy P3D tokens .", "title": "", "metadata": ""}
{"_id": "b6010580b64d0dd09ab3f1e09a82987e", "text": "Allow withdrawal of funds and if funds left in contract are less than withdrawal requested and greater or to account balance , contract balance will be cleared .", "title": "", "metadata": ""}
{"_id": "476de933c8abd77c9a601c8fc61e513e", "text": "Verify that the borrowed tokens are returned to the bank plus a fee by the end of transaction execution .", "title": "", "metadata": ""}
{"_id": "26ef6fa464ede0d6f3014d8a951c8179", "text": "Allows to receive coins from Contract Share approved by contract .", "title": "", "metadata": ""}
{"_id": "9cd52349ab9d9c1bfbc6c3a67aea094a", "text": "Function allows the owner to activate the main sale .", "title": "", "metadata": ""}
{"_id": "6e5ff527bc6a3e031911d8fe93fa33cc", "text": "Buy item from the market .", "title": "", "metadata": ""}
{"_id": "4f031d16e29adb24e5b58a7ca95c60fd", "text": "Appends a byte to the end of the buffer .", "title": "", "metadata": ""}
{"_id": "fef19671100625fdc28830090faebba7", "text": "low level function to buy tokens .", "title": "", "metadata": ""}
{"_id": "b360677c09fb8947cc7ecb1c590139a4", "text": "Create an iterator .", "title": "", "metadata": ""}
{"_id": "019f62c74d0184eff6dad1ea06cac22d", "text": "Destroy tokens from other ccount .", "title": "", "metadata": ""}
{"_id": "d73d764fb8774e1d60bc71a8122d4a18", "text": "Get player data by leaderboard hash and player id / index .", "title": "", "metadata": ""}
{"_id": "74adbfcd885b9fa3676243ac22e6a54c", "text": "Withdraw all ether in this contract back to the wallet .", "title": "", "metadata": ""}
{"_id": "bd113dc070ad305bedced1b3875e6c3b", "text": "function which is called when transaction target is an address .", "title": "", "metadata": ""}
{"_id": "01b0944c3dc57621e133f9361f83e24e", "text": "Allows people to withdraw funds that failed to send during the abandonment of the ICO for any reason .", "title": "", "metadata": ""}
{"_id": "1bf824b72077edc595736a0dc59f27e3", "text": "custom timelocked transfer method .", "title": "", "metadata": ""}
{"_id": "1912210292293afe6ce2073b361c313e", "text": "Creates amount tokens and send them to recipient address .", "title": "", "metadata": ""}
{"_id": "c094211c8d10ab0a6a2af58657942db6", "text": "Approve that others can transfer _value tokens for the msg . sender .", "title": "", "metadata": ""}
{"_id": "0233172d40589c3f0e65b03727de00e7", "text": "function grantBackerToken - Transfer backer tokens .", "title": "", "metadata": ""}
{"_id": "fcdc9f45262bd0ec464b0d9954162345", "text": "should be 175 , 000 to save eth .", "title": "", "metadata": ""}
{"_id": "5c050b3bbf2ebacbe5116e989e9009b9", "text": "Check if ICO is ended .", "title": "", "metadata": ""}
{"_id": "12a10ac028972ce819d4452388d21745", "text": "A function to burn unsold DGZ tokens .", "title": "", "metadata": ""}
{"_id": "7ed13f095b1dae0ab4c2d36ff6cfadc7", "text": "Returns TUTs rate per 1 ETH depending on current time .", "title": "", "metadata": ""}
{"_id": "c43178ea0e704d6b9fbf356d74dd8d32", "text": "Include new contributor .", "title": "", "metadata": ""}
{"_id": "34006b88b42cd5ad8b07a93994056dd5", "text": "Exchange function .", "title": "", "metadata": ""}
{"_id": "980d1dcccca3337a490c37738b302465", "text": "for production card .", "title": "", "metadata": ""}
{"_id": "a79bcb54d76694e71b8135104af4d6a3", "text": "Add a list of participants to a capped participation tier .", "title": "", "metadata": ""}
{"_id": "12c05f1fe03852acb43e4adfc6b4063e", "text": "Transfer tokens from this contract to an account .", "title": "", "metadata": ""}
{"_id": "a6f3986b15d1a9f8d4b9b5804feb5fcf", "text": "Get operating status of contract .", "title": "", "metadata": ""}
{"_id": "afca1dd099e78c6f7878f3538828bb75", "text": "deletes all stages .", "title": "", "metadata": ""}
{"_id": "e4b5ed8122887f66caef57479c46f632", "text": "Finish crowdsale TLP1 . 2 .", "title": "", "metadata": ""}
{"_id": "8c461d1a0a687f18f6e104e91b2ec09f", "text": "x + y .", "title": "", "metadata": ""}
{"_id": "bc93ea51768edb66d329b063b43ba4ff", "text": "Convert Ponzi token to wei .", "title": "", "metadata": ""}
{"_id": "f1429a614018b63f5b5c4de2b359f8ff", "text": "Returns the address currently assigned ownership of a given Warrior .", "title": "", "metadata": ""}
{"_id": "e3964da034ff71a7e76f9cae66735081", "text": "non underflowing subtraction .", "title": "", "metadata": ""}
{"_id": "f7f50838791815fe0a5dde8c28100284", "text": "Get the initial supply of CTN coins .", "title": "", "metadata": ""}
{"_id": "04873b084d2bad6179eb5bce5360807d", "text": "as long as supply 10 * * 26 and timestamp is after 6 / 20 / 18 12 : 01 am MST , transfer will call halfPercent ( ) and burn ( ) to burn 0 . 5 .", "title": "", "metadata": ""}
{"_id": "e3415f74c8b5cf05d1f1b766ff649283", "text": "Return tokenid array .", "title": "", "metadata": ""}
{"_id": "2ffa7e2f4b33b93a7f35ff0e813b3bde", "text": "to stop transfer .", "title": "", "metadata": ""}
{"_id": "5f3ccea98d70cd695032d61b3d01b55a", "text": "get the total number of user subscriptions .", "title": "", "metadata": ""}
{"_id": "d4c2b9f5bf6ee03749cd60144f261c4e", "text": "Function to stop / continue purchase new tokens .", "title": "", "metadata": ""}
{"_id": "84fbf2d1772b480a584dba12d9f9710d", "text": "Modifier that checks that the contract has finished successfully .", "title": "", "metadata": ""}
{"_id": "9b6b30aabf09469453e048b0a39bb546", "text": "PlayerId may only be set if operatorId is set too .", "title": "", "metadata": ""}
{"_id": "1c5599b75d82f3a902a0d29794bfa658", "text": "eth rate is very volatile .", "title": "", "metadata": ""}
{"_id": "d26c31022df6b0b90ced325ed9a24f27", "text": "The modifier resetPaidOut updates the currenct epoch , and enables the smart contract to track when a token holder has already received their fair share of profits or not and sets the balance for the epoch using current balance .", "title": "", "metadata": ""}
{"_id": "69c4cb21d715a44af91175d1df7b386b", "text": "Function for setting presale buy limits for list of accounts .", "title": "", "metadata": ""}
{"_id": "5d0653b144712aab26844179c1986091", "text": "Owner disabled .", "title": "", "metadata": ""}
{"_id": "da99a699e05aeabb48960faa631ac75d", "text": "finishPVEBatch same as finishPVE but for multiple warrior ids .", "title": "", "metadata": ""}
{"_id": "76e46d03b005f05ae0646344bb759a6f", "text": "Sets a certain account on frozen / unfrozen .", "title": "", "metadata": ""}
{"_id": "022c43eacc410b870010aca83e781905", "text": "need to play around with this to figure out some of the specifics .", "title": "", "metadata": ""}
{"_id": "b0374d00beb0d66ed8b809d9aa09c2fc", "text": "Checks that a given EtherDog is able to breed .", "title": "", "metadata": ""}
{"_id": "a9876e5f78b11df6fc08e0c1bd50e107", "text": "This callable function returns the total pool cap , current balance and remaining balance to be filled .", "title": "", "metadata": ""}
{"_id": "c47ded89a4326960cbee061ffffaee14", "text": "Set's the rate of tokens per ether for each tier .", "title": "", "metadata": ""}
{"_id": "fa22bcd8bc9da970d52135ef799a4240", "text": "freeze ? Prevent Allow target from sending tokens .", "title": "", "metadata": ""}
{"_id": "e508268868d8306f052e0831746f3e3b", "text": "x - y .", "title": "", "metadata": ""}
{"_id": "d8aeb0637ac0a390b461a20bfd36023e", "text": "Get the game info .", "title": "", "metadata": ""}
{"_id": "53114fd2f8df6beaafcbd4b783325fbb", "text": "Return whether a transcoder was active during a round .", "title": "", "metadata": ""}
{"_id": "4e88501f432b6c10318ee235c35d8b0d", "text": "Require that burning is turned off .", "title": "", "metadata": ""}
{"_id": "a3b40141145c7d7a64c7a3b0121ed04e", "text": "changes OVIS partner sale reserved tokens .", "title": "", "metadata": ""}
{"_id": "db610d1aa3f77c3ad963b8fa15f1a5c5", "text": "check if an account has this role / / reverts .", "title": "", "metadata": ""}
{"_id": "e1c5a4d25f6b8fadfde688078de03acb", "text": "Public Functions : .", "title": "", "metadata": ""}
{"_id": "6e5199c90954796a4b8690899c1183da", "text": "create a CDP from the given amount of Dai in the sender's balance - needs Dai transfer approval .", "title": "", "metadata": ""}
{"_id": "f0bfe9197da722dc4c94faf0b799547e", "text": "require at least one of the two conditions to be true .", "title": "", "metadata": ""}
{"_id": "f3eb7e108f3e3870b70c9911345bfb8b", "text": "Check if sender is Verifier .", "title": "", "metadata": ""}
{"_id": "b07d32f9eeb747499ebf2265b310041a", "text": "Internal function to clear current approval of a given unicorn ID .", "title": "", "metadata": ""}
{"_id": "621c42b7257dc37e43fe59a7e9034e29", "text": "drain all eth for owner in an emergency situation .", "title": "", "metadata": ""}
{"_id": "b124415f6fd3324a4f5b357a2498b4bd", "text": "Get the current tranche or bail out if there is no tranche defined for the current timestamp .", "title": "", "metadata": ""}
{"_id": "591bad934dc714e08443bf5d3cf84f98", "text": "This is here for Registrar ABI support .", "title": "", "metadata": ""}
{"_id": "2e3a763fd4307a2474183d20924fa11f", "text": "Function to mint eUSD tokens .", "title": "", "metadata": ""}
{"_id": "9f9f8b2a0efc2ead393a54c219d85f38", "text": "Allows safe changing of manager address .", "title": "", "metadata": ""}
{"_id": "bb8a83809290ae354b82441d0905b4e5", "text": "Interface functions to allow specifying ICAP addresses as strings .", "title": "", "metadata": ""}
{"_id": "65a384d04244f8c039de618992cf691e", "text": "process and forward investment .", "title": "", "metadata": ""}
{"_id": "2b518c176bd346f09458af23422db5bd", "text": "Purchase city from previous owner .", "title": "", "metadata": ""}
{"_id": "4d27eb5b9470961f65d3470a7102b4bd", "text": "Reject all ERC23 compatible tokens param _from address that is transferring the tokens param _value amount of specified token param _data bytes data passed from the caller .", "title": "", "metadata": ""}
{"_id": "e9012171bc3777b37f3ebaa127ecee07", "text": "Check if Thing is present in the registry by it's ID constant_function .", "title": "", "metadata": ""}
{"_id": "d01255e434c6b9cc73010add50877712", "text": "Mints new tokens when they are mined .", "title": "", "metadata": ""}
{"_id": "908ce3bd296b1b5712fcacf1b3a67b03", "text": "Function to access name of token . sha .", "title": "", "metadata": ""}
{"_id": "58686caa4724b98c77cfff7191f37d0f", "text": "For winner ( or creator if no bids ) to retrieve badge .", "title": "", "metadata": ""}
{"_id": "8a3e6089fb2f373ce54254194f70532a", "text": "Buy ICO tokens .", "title": "", "metadata": ""}
{"_id": "b7dce184bd7014d68d95c837191da271", "text": "contribution handler .", "title": "", "metadata": ""}
{"_id": "def3474f7d8c7bd28dc14579423a00f9", "text": "removes tokens and returns them to the main pool this is called if .", "title": "", "metadata": ""}
{"_id": "77358384aa72a21deb87fe3d643143a5", "text": "Returns all the relevant information about a specific person .", "title": "", "metadata": ""}
{"_id": "6c5e388bf99c3e6672206dee653b4090", "text": "modifier to check if token is collectable .", "title": "", "metadata": ""}
{"_id": "93f89d210a6bc26aae47468c33c43e3e", "text": "changes the token to any other token in the bancor network by following a predefined change path note that when changing from an ERC20 token ( as opposed to a smart token ) , allowance must be set beforehand .", "title": "", "metadata": ""}
{"_id": "952582dd2f31fe5084bf6b124f6fc702", "text": "Preliminary game result before real transaction is mined .", "title": "", "metadata": ""}
{"_id": "0f4aaeb62e8d2ec78098c4776ae8c4e8", "text": "Return current affiliate level .", "title": "", "metadata": ""}
{"_id": "290adb14becf3a957b25eb598ecb4945", "text": "Remove the node for the given unique identifier from the index .", "title": "", "metadata": ""}
{"_id": "62f4edffe2ad875b7437e3e69bc63eb6", "text": "Function for other contracts to call to get balances of individual accounts .", "title": "", "metadata": ""}
{"_id": "552d88d88b2528c5dbe14013b8a2fd74", "text": "withdrawFromRemainingTokens allows the owner of the contract to withdraw remaining unsold tokens for acquisitions .", "title": "", "metadata": ""}
{"_id": "d517ab3213cfa89a5e9aa721eed04346", "text": "Finalizes the crowdsale and sends funds .", "title": "", "metadata": ""}
{"_id": "c950adac771436060082d1528b0e463a", "text": "Re enables the ERC20 interface .", "title": "", "metadata": ""}
{"_id": "36d5e59ea2dad360b2ae0e1c1e80e46f", "text": "payForOrder is used by order wallet / client to pay for the order .", "title": "", "metadata": ""}
{"_id": "632fc0dfcf4ead06634e839f2aedd840", "text": "return the next better offer in the sorted list the better offer is in the lower priced one if its an ask , and next higher priced one if its a bid offer .", "title": "", "metadata": ""}
{"_id": "f251ef85cc8cf40bae71346cb791eca2", "text": "set vesting token address .", "title": "", "metadata": ""}
{"_id": "05a435cfa828aa3b63e1602ab5b7092c", "text": "Gets document with ID .", "title": "", "metadata": ""}
{"_id": "989a92614f9b81c899ef0b9ea29df988", "text": "Withdraw amount from redenom_dao_fund to given address .", "title": "", "metadata": ""}
{"_id": "80d9afff98c25586d3f49d38a35a3b07", "text": "allow owner to remove trade token .", "title": "", "metadata": ""}
{"_id": "0a446cf8bca71c054865a93396ae1620", "text": "Fetched Allowance for owner .", "title": "", "metadata": ""}
{"_id": "3043ce8fab50f392c50974fe40b717e5", "text": "Creates a new promo Car with the given name , with given _price and assignes it to an address .", "title": "", "metadata": ""}
{"_id": "a98520b85b0fc20f1137b2341f7d9524", "text": "We have this in case we have to change the initial sale contract .", "title": "", "metadata": ""}
{"_id": "003b0e32dac421c10305c74383c1e211", "text": "Used to launch the contract , and enabled token minting .", "title": "", "metadata": ""}
{"_id": "233fbb5f6d8d6dd364c9312850825872", "text": "allows owner to register token purchases done via fiat-eth ( or equivalent currency ) .", "title": "", "metadata": ""}
{"_id": "497031dfc05d6bcdd1c6c9d953a9d5eb", "text": "buy gen0 chibis .", "title": "", "metadata": ""}
{"_id": "454dd28e2a5360c1235000822b1e9a98", "text": "Transfers knight ownership to a new address .", "title": "", "metadata": ""}
{"_id": "99e5421d1a22a8f6df01c943f0d9c84a", "text": "Offer bonus to raw tokens holder .", "title": "", "metadata": ""}
{"_id": "e2cb5bb68ed1075b4cba5c20a655ad6b", "text": "Sets initial balances allocation .", "title": "", "metadata": ""}
{"_id": "6f21af1b83f4c13375fcad2cacd48f08", "text": "STEP 2 : store balance .", "title": "", "metadata": ""}
{"_id": "f762885f31a38d2006fefb120ac40e12", "text": "upgrade an old converter to the latest version will throw if ownership wasn't transferred to the upgrader before calling this function .", "title": "", "metadata": ""}
{"_id": "eb000dd81c000ed4a21a3071f49d685b", "text": "withdraw ERC20 token from contract .", "title": "", "metadata": ""}
{"_id": "4b70dc42919eb0def27174801d9fa36c", "text": "Returns natural logarithm value of given x .", "title": "", "metadata": ""}
{"_id": "b6e4b1a6706737070466877852d3c2b2", "text": "Makes crowdsale failed / ok , for emergency reasons .", "title": "", "metadata": ""}
{"_id": "d5f0497b06883798ac8f25391882d487", "text": "stage related functions .", "title": "", "metadata": ""}
{"_id": "966107e3c5c514df292e563e73cdfb04", "text": "Function which calculates the hash of the given block .", "title": "", "metadata": ""}
{"_id": "1df957b6ccf7e16d4a9da3db46f6bdc5", "text": "lock - store a proof-set .", "title": "", "metadata": ""}
{"_id": "6c3591deb4566f0169a0135e8226b514", "text": "Allows the current owner to set the new total supply , to be used iff not all tokens sold during crowdsale .", "title": "", "metadata": ""}
{"_id": "60d87ccbb4fa54d7d09765ff1344acb9", "text": "Used for testing .", "title": "", "metadata": ""}
{"_id": "a169345d4446224e46cd7bdff9431ec9", "text": "it's for maintenance purposes allowing initiator to check if all the prizes have been withdrawned .", "title": "", "metadata": ""}
{"_id": "9f79697bebcdeb2f52517601680cb98d", "text": "interface : PlayerBookReceiverInterface .", "title": "", "metadata": ""}
{"_id": "69154e22c7ca6f2f717a472270aa6646", "text": "Returns the last node in the list ( node with the smallest key ) .", "title": "", "metadata": ""}
{"_id": "1384a7bfbcdbc4ab5128e0eab1878d59", "text": "Unlock tokens locked under time lock with given ID and transfer them to corresponding beneficiary .", "title": "", "metadata": ""}
{"_id": "594d9493c7f38c9b095439fdd29afd1b", "text": "Terminate token grant transferring all vested tokens to the _recipient and returning all non-vested tokens to the Colony MultiSig .", "title": "", "metadata": ""}
{"_id": "f71ccc2a10997a07247485f98470f843", "text": "Tap poll .", "title": "", "metadata": ""}
{"_id": "ebf286ee809ac61705d173b7d80c4807", "text": "Increments lastTokenId .", "title": "", "metadata": ""}
{"_id": "240678666e62aaf75d702307b6c7ceaa", "text": "set the oldest artwork when steal .", "title": "", "metadata": ""}
{"_id": "90354d151f33f630c3acdc7c39526576", "text": "Checks if a given address owns a particular deed .", "title": "", "metadata": ""}
{"_id": "6f0c9590b600ca3a830f44f0e8cf9cbb", "text": "The Card's perk text is displayed prominently on its profile and will likely be used for promotional reasons .", "title": "", "metadata": ""}
{"_id": "ad7a5d9f082a6b8f5bf8cf5e74ba8abd", "text": "To be called by dealers .", "title": "", "metadata": ""}
{"_id": "77bd36e8631e9506992a02796f7fbd4c", "text": "10 - 110 price 20 - 105 price 40 - 100 price 20 - 95 price 10 - 90 price .", "title": "", "metadata": ""}
{"_id": "aa930ee11f606ae7762d2e849a9165a3", "text": "set description for specified token , .", "title": "", "metadata": ""}
{"_id": "5b684b5be696c8b6a9ed8c585f8f386b", "text": "Returns the document id of the x-th document written by the passed user .", "title": "", "metadata": ""}
{"_id": "35e0cb6aa7f43605346c5b0330a2b653", "text": "Brand public brands ; .", "title": "", "metadata": ""}
{"_id": "13e948ed9e72a378d0810ba30d782e8f", "text": "Count NFTs tracked by this contract .", "title": "", "metadata": ""}
{"_id": "c2f3fba858cb5995155a6614b67b42aa", "text": "Returns the result of a specific game .", "title": "", "metadata": ""}
{"_id": "48b51bb1b98e4d4fa51ed3217df5dbd6", "text": "split funds from Item sales between contract owner and artist .", "title": "", "metadata": ""}
{"_id": "10f125dc383e5ab120fab6694da7558e", "text": "check is TLP2 is active and minting Not finished .", "title": "", "metadata": ""}
{"_id": "83593873cbbecc76a5c8ad4de3555051", "text": "Public Function ( anyone can call ) .", "title": "", "metadata": ""}
{"_id": "20cbc3fb0bbb59a141b0c07f1aa7b62e", "text": "Edits a connection to another entity .", "title": "", "metadata": ""}
{"_id": "e81f040e0129abaa511f0341f6ef2c60", "text": "public ( read only ) : next interest payout rate in percent unnecessary - just for enduser lookylooky .", "title": "", "metadata": ""}
{"_id": "ba686584853fcf2e43cd30c1d1f1aad5", "text": "write log about 8 fighters .", "title": "", "metadata": ""}
{"_id": "7a6966ee3aad06120202373268e5a529", "text": "Resume all trading .", "title": "", "metadata": ""}
{"_id": "ba90c6b5018657694e8a252b6ca4f5af", "text": "Set the contract that may call the release function .", "title": "", "metadata": ""}
{"_id": "ffcd47cb3ebb9e191da81f4c241e9f15", "text": "Allows the owner to end the sale .", "title": "", "metadata": ""}
{"_id": "d969f6f3d86665053c99ed7508dfe8a5", "text": "Set the cooldownEndTime for the given Puppy , based on its current cooldownIndex .", "title": "", "metadata": ""}
{"_id": "a416527a153f31c03b8d8d2092522317", "text": "Semi uinversal call function for unforseen future Ethart network contract types and use cases .", "title": "", "metadata": ""}
{"_id": "8cd389093b5f65d3a7a0c12259793f3e", "text": "only issuer if the time expires ; the issuer can reclaim funds and destroy the contract .", "title": "", "metadata": ""}
{"_id": "8cb003e7ed20459c99aa3760ec904d22", "text": "Strap a horn to a horse ! .", "title": "", "metadata": ""}
{"_id": "a7cba69d44ad47d8256411bc220bfe5e", "text": "Del address from limitedWallets .", "title": "", "metadata": ""}
{"_id": "90dcafe1da377f3862e6923acfb1d828", "text": "find the id of the next higher offer after offers id .", "title": "", "metadata": ""}
{"_id": "a0efce60169e4e65a1166874e0465474", "text": "mitigates the ERC20 short address attack .", "title": "", "metadata": ""}
{"_id": "6768d3e2f9a1117d5d18e31486a2446a", "text": "Resume the presale ( enables contributions and token claiming ) .", "title": "", "metadata": ""}
{"_id": "3123deb83192e7a23a32f3dc4730a47e", "text": "In emergency situation , admin can use emergencyTransfer ( ) for protecting user's token .", "title": "", "metadata": ""}
{"_id": "daddfc4e5920820866a171e2b7a1f99c", "text": "return true if crowdsale event has ended .", "title": "", "metadata": ""}
{"_id": "a7a54934294f1cd85d1d14fadfbc006c", "text": "called by the owner to set new pause flags pausedPublic can't be false while pausedOwnerAdmin is true .", "title": "", "metadata": ""}
{"_id": "05a0b70c6006a3fe7fa82763cc868e50", "text": "transfer token for a specified address before swap .", "title": "", "metadata": ""}
{"_id": "fc5e10b3342773c7cda55168e713a9c9", "text": "Set finder fee .", "title": "", "metadata": ""}
{"_id": "ff6510df812a4d4c4a44bda69a6f610e", "text": "Function for stakeholders ( debtor or creditor ) .", "title": "", "metadata": ""}
{"_id": "1e1e8ca39c2f689e9ef7ce982429cc13", "text": "called by the owner to allow everyone .", "title": "", "metadata": ""}
{"_id": "86c9da97df85aa81e62fb43ee3dc57d2", "text": "calculates points for correct predictions of group winners .", "title": "", "metadata": ""}
{"_id": "e592e25909066f9491e834d92a96fd45", "text": "Allow owner to transfer out the token in the contract .", "title": "", "metadata": ""}
{"_id": "583f9c2fc97110a7220cea63dd88ff84", "text": "Send the token released to the balance address .", "title": "", "metadata": ""}
{"_id": "5875f1ed645353cd69428a5d235e9608", "text": "Only permits calls by the reverse registrar .", "title": "", "metadata": ""}
{"_id": "c16c0bb3de78127590808368d58b30ba", "text": "Set ICO price including ICO standard price , ICO 1st round price , ICO 2nd round price .", "title": "", "metadata": ""}
{"_id": "3db891ac0d8ccf6f232193d0d3a69a1a", "text": "transfer tokens from one address to another .", "title": "", "metadata": ""}
{"_id": "4d30d1fd3cf75c39b09001d85511b852", "text": "End current voting with 3 scenarios - toAllow , toCancel or toRefund .", "title": "", "metadata": ""}
{"_id": "68fe8f43533b3e60a4de40ab69b56f51", "text": "Muda o dono do contrato .", "title": "", "metadata": ""}
{"_id": "ac73cc94e705ade6783ba918712ce932", "text": "Removes from capital , sends it to Bankrollable target .", "title": "", "metadata": ""}
{"_id": "e49f4e11c4e02e7aa1dfc8ca2ae14d5e", "text": "Making contract burnable .", "title": "", "metadata": ""}
{"_id": "587d7779e568b439722b752719540bbf", "text": "Calculates the hash for the provided payment information .", "title": "", "metadata": ""}
{"_id": "33b2c1444d9890507c2ca6fba3306ef4", "text": "Call to multiple contracts using two arrays which includes the contract address and the amount .", "title": "", "metadata": ""}
{"_id": "9166af50dcf48c89c701e8f0f6550fa1", "text": "Unhalt halted contract .", "title": "", "metadata": ""}
{"_id": "76d91f5e929c127bd2f1daf480f70013", "text": "If self starts with needle , needle is removed from the beginning of self .", "title": "", "metadata": ""}
{"_id": "4ccda9611d612095490f4af428e5c652", "text": "Token Purchase .", "title": "", "metadata": ""}
{"_id": "191b254c2b7da278f49fb2ab903a9141", "text": "Allows verified creation of multisignature wallet .", "title": "", "metadata": ""}
{"_id": "c17c0e1960c5555fa3fcfe24c002a566", "text": "If investor is from in transforFrom , values will be limited by timelock .", "title": "", "metadata": ""}
{"_id": "11fd9b9b2d95ac307a49ad01ac0a2bc6", "text": "Simpler call signature that defaults to the account allowance .", "title": "", "metadata": ""}
{"_id": "b7488d5b6aa9c5cde8cb9c57f7d6776b", "text": "Terminates the minting period permenantly .", "title": "", "metadata": ""}
{"_id": "e83c2e7c69eb786905ae6eac88c063ce", "text": "Get bid info .", "title": "", "metadata": ""}
{"_id": "89d55a1148957b2aa0748b0b892b32eb", "text": "Transfers based on an offline signed transfer instruction .", "title": "", "metadata": ""}
{"_id": "b96991502c73a7ddca1578a7d6e0ac8e", "text": "it will white list one member .", "title": "", "metadata": ""}
{"_id": "1978214ebbba3a39f2483ce20eda890e", "text": "low-level minting function not accessible externally .", "title": "", "metadata": ""}
{"_id": "4ad9c6480a2bb6f2ca5e49232d33f789", "text": "Checks to see if two cuties can breed together ( checks both ownership and breeding approvals , but does not check if both cuties are ready for breeding ) .", "title": "", "metadata": ""}
{"_id": "da12a28fdab4951bba30a485ac4f3a99", "text": "we can create promo Ponies , up to a limit .", "title": "", "metadata": ""}
{"_id": "fcfd92d6ed327287336a9e488ca91a94", "text": "Allow another contract to spend some shares in your behalf ( shareholder calls this ) .", "title": "", "metadata": ""}
{"_id": "709972996f95eb17d74e530a86677d52", "text": "Owner can salvage ERC20 tokens that may have been sent to the account .", "title": "", "metadata": ""}
{"_id": "609b0b9ef5d6e3798fb9974506a4270d", "text": "Updates the ticket price .", "title": "", "metadata": ""}
{"_id": "493b023410c609ec10602e8f5368b17d", "text": "set name for specified token , .", "title": "", "metadata": ""}
{"_id": "4c90ac0133fd3a531944dd937686cbb9", "text": "The winner is responsible for withdrawing the funds after the button expires .", "title": "", "metadata": ""}
{"_id": "e2a4ad69e71468a655d721bc615f22ad", "text": "Optional settings to extend the duration .", "title": "", "metadata": ""}
{"_id": "05dd33162041c8c447586b11a9152ee7", "text": "Count the number of active or pending buildings .", "title": "", "metadata": ""}
{"_id": "abf56e2059db19648bc4c63853ce563e", "text": "Blocks if reentry mutex or panicked is true .", "title": "", "metadata": ""}
{"_id": "c2734f952da660034c34846ea7630cba", "text": "This method can optional be called by the owner to adjust the conversionRate , startDate and endDate before contribution phase starts .", "title": "", "metadata": ""}
{"_id": "8751c01ecbca9d9aeef0244fb9e7b50b", "text": "Set change the presale period if necessary .", "title": "", "metadata": ""}
{"_id": "8964b41ec41d93b8b0243ae69347ed08", "text": "Santa is coming ! Who ever made impact to promote the Fish and can prove it will get the bonus .", "title": "", "metadata": ""}
{"_id": "c89edd289ee2b4202e158b2ae412bc77", "text": "Retrieve count battles won .", "title": "", "metadata": ""}
{"_id": "6f37a780e5d4de10bcb3407ec97ebe70", "text": "Whitelist a token so it can be distributed .", "title": "", "metadata": ""}
{"_id": "ee23c6263bde08492fa374eb34fe3b35", "text": "return the players who won the game .", "title": "", "metadata": ""}
{"_id": "cd463270c6daf5eb2cd74fc91b0fa43c", "text": "Square root .", "title": "", "metadata": ""}
{"_id": "246cb6726f8e97aa5b0c45e7de2981f2", "text": "Transferred approved amount from other's account .", "title": "", "metadata": ""}
{"_id": "4bc84e91ffaf455b9a2ee5cb7a0bc1e6", "text": "Refund transaction - return the bet amount of a roll that was not processed in a due timeframe .", "title": "", "metadata": ""}
{"_id": "269a98e99c530cdf638c9b5472e57456", "text": "Allows the owner to remove an existing minter .", "title": "", "metadata": ""}
{"_id": "30aafdd5c292add2cb57b8d841fd5ce1", "text": "allows the manager to update the quick buy path .", "title": "", "metadata": ""}
{"_id": "1955e1b6cf6c308a590aa52cb01a0816", "text": "Override to enforce modifier that ensures that ICO is closed before the following function is invoked .", "title": "", "metadata": ""}
{"_id": "04cb116a0d22789459d4c9b8dd2e39bf", "text": "fast-forward the timelocks for all accounts .", "title": "", "metadata": ""}
{"_id": "042e66cdf31244ccbe095df89729061f", "text": "Withdraw the current voiting amount .", "title": "", "metadata": ""}
{"_id": "68c5a094022492eceb1c4ca48c140b81", "text": "Function that allows a delegate contract to create a new channel between _sender_address and _receiver_address and transfers the token deposit to this contract .", "title": "", "metadata": ""}
{"_id": "f2e8cf5b5056dd0e01baa5f6d7abea77", "text": "modifier that revert ( ) s if trading has not started yet .", "title": "", "metadata": ""}
{"_id": "abd7306bd66b12008abc11dcad6ba20e", "text": "public ( read only ) : calc the active sale stage as a function of already selled amount .", "title": "", "metadata": ""}
{"_id": "4d071d057f9674ccb3f79fc200491c8b", "text": "Pausable functionality adapted from OpenZeppelin / dev Modifier to allow actions only when the contract IS NOT paused .", "title": "", "metadata": ""}
{"_id": "61194102454a92f17427d266a7a60998", "text": "Disown a blob .", "title": "", "metadata": ""}
{"_id": "a954aca214a5ec8b2b40d60bd7f53f01", "text": "Process ether contribution before KYC .", "title": "", "metadata": ""}
{"_id": "a8ded330260de4ce75e82b507e817500", "text": "Transfers tokens held by timelock to owner .", "title": "", "metadata": ""}
{"_id": "9386e06705d829548214957599e6a2b6", "text": "Write player metadata for migration as contract owner only .", "title": "", "metadata": ""}
{"_id": "e756145b1b16c0fffa4623f5465dcd89", "text": "get namelist length for exporting mapping .", "title": "", "metadata": ""}
{"_id": "91b9b22b9be34d2a8a0312ad4315d862", "text": "Verifies the reward percentage is valid .", "title": "", "metadata": ""}
{"_id": "23da4f3631a8206b5d39d7f0834ba623", "text": "Check if refunds are possible .", "title": "", "metadata": ""}
{"_id": "dfa6fad39c8e18ab44d0489138d890f2", "text": "calculates how many keys would exist with given an amount of eth .", "title": "", "metadata": ""}
{"_id": "f330ceb644b2575f29543c1a239b5bc1", "text": "The Dev ( Owner ) will call this method to extract the tokens .", "title": "", "metadata": ""}
{"_id": "fae8240108b440e4153deb57a735f8a8", "text": "true if the transaction can buy tokens in presale .", "title": "", "metadata": ""}
{"_id": "c5ce5ed40e2bd00871f633d03d95c5e8", "text": "Distribute 10M tokens proportionally amongst all investors .", "title": "", "metadata": ""}
{"_id": "007fe0b826a21b9a8e7540e257786f7d", "text": "This method is used to withdraw value from the system .", "title": "", "metadata": ""}
{"_id": "a44b165365f12f142d82aaf05e1f0e7e", "text": "modifier that fails if state doesn't match .", "title": "", "metadata": ""}
{"_id": "5a046429bcd69b59bbf21bc9d2a6dbaf", "text": "Returns the snatch window of the given token .", "title": "", "metadata": ""}
{"_id": "13053d72ecb732b0db37cbaa11d6fb31", "text": "storeBlockHeader ( header ) pareses a length 80 bytes and stores the resulting .", "title": "", "metadata": ""}
{"_id": "5718e53452628d4a2d08956e5e13b6c7", "text": "sets softcap .", "title": "", "metadata": ""}
{"_id": "5f7b4af583d8d7dc5b0d982cf302b9b3", "text": "Revokes an existing certificate - can be called by certificate authority that issued the certificate .", "title": "", "metadata": ""}
{"_id": "2f18e11db3e08f634b86fa1c2e688120", "text": "Change the date and time : the beginning of the round , the end of the bonus , the end of the round .", "title": "", "metadata": ""}
{"_id": "f2ef329ca4db908fa5265e30143b6c64", "text": "Function to change sale block intervals .", "title": "", "metadata": ""}
{"_id": "dd26ed3018bc64bd3bc7386de9645ac8", "text": "tokens of an address .", "title": "", "metadata": ""}
{"_id": "7b18c814e7b32b2bdd02449728b47641", "text": "implementation for standard 223 reciver .", "title": "", "metadata": ""}
{"_id": "b225c670dc3b7449a2800867340a5f3e", "text": "Reveal a sealed purchase order and commit to a purchase .", "title": "", "metadata": ""}
{"_id": "6b0507a3fbfa4b7ead2f9ee145ddf05d", "text": "Get number of wallet owners .", "title": "", "metadata": ""}
{"_id": "d1b6f1c632dc29677ed5207432c5a990", "text": "Function for a member to withdraw Ether from the contract proportional to the amount of shares they have .", "title": "", "metadata": ""}
{"_id": "de08c514942a30b2ebdd7bf07840f763", "text": "Overrides StandardToken . sol .", "title": "", "metadata": ""}
{"_id": "285fef56202d73453bd24c2cd740e512", "text": "Buys tokens in the crowdsale .", "title": "", "metadata": ""}
{"_id": "664e6c968ed59f5aa05d7e7bd89f4f96", "text": "removes validated contract .", "title": "", "metadata": ""}
{"_id": "9f0ddac22a4f1c90497788f37acb3f74", "text": "Check contribution cap for only tier 1 and 2 .", "title": "", "metadata": ""}
{"_id": "91772cddb1953c7a2cd2dbe8798037df", "text": "Returns the number of times the given player has clicked EtherButton during the given round .", "title": "", "metadata": ""}
{"_id": "1176578c2fba3198f2c7acee6b78cf71", "text": "Request that the ( old ) drp smart-contract transfers _value worth of ( old ) drp to the drps token converter to be converted .", "title": "", "metadata": ""}
{"_id": "8b9ceea8b5589a99efd169a030bdef03", "text": "Intended when other currencies are received and owner has to carry out exchange for those payments aligned to Wei .", "title": "", "metadata": ""}
{"_id": "9cbeb0b71c9d51e9f4c5b3e46c5936d2", "text": "Disable the minting of new tokens .", "title": "", "metadata": ""}
{"_id": "16aa76f097f1c5b0fe60c63c08177e51", "text": "Returns a list of all Kitty IDs assigned to an address .", "title": "", "metadata": ""}
{"_id": "3773ef8b32734ed77b64093945f44a45", "text": "FEATURE 5 ) : Convertible implements .", "title": "", "metadata": ""}
{"_id": "8bda175fa0445119aaaa4d1b62e42572", "text": "dev Returns the sum of a and b .", "title": "", "metadata": ""}
{"_id": "2ef6e48bd3397591b498fe45d5d3929b", "text": "Function for withdrawal all tokens from Vault account to address .", "title": "", "metadata": ""}
{"_id": "679d10fb9ca42ef57a91bc85edad1d7d", "text": "Remove buyer fromt whitelist .", "title": "", "metadata": ""}
{"_id": "6889b5b27cf6d0d6eebe878e9ccef982", "text": "Add a registrant , only registrar allowed public_function .", "title": "", "metadata": ""}
{"_id": "99f77b93b1abb07a946501b8d244b743", "text": "Whether investor has invested enough or not .", "title": "", "metadata": ""}
{"_id": "62c2723db9983f7497c4f9634657b9f0", "text": "Run air drop , only from whitelisted adresses ( can run multiple pending transactions at a time ) the granularity is 50 adresses at a time for the same amount , saving a good amount of gaz .", "title": "", "metadata": ""}
{"_id": "728ad6f6e90e9a624f6b8a8fc2aaa189", "text": "External purchase ( managers only ) .", "title": "", "metadata": ""}
{"_id": "d1bc0641d888b2b55ebb493560733e7f", "text": "after a day , admin finalizes the transfer of a child contract by providing the index of the request ( visible in the TransferChildOperationEvent accompanying the original request ) .", "title": "", "metadata": ""}
{"_id": "8e1a5fcaeb106e4281486a2a24c54be7", "text": "set new start date for crowdsale .", "title": "", "metadata": ""}
{"_id": "8727eadf99983f3d6b2c624830c090be", "text": "finish round .", "title": "", "metadata": ""}
{"_id": "2e9509ed3ce80b9f41cbe4db3f21e3ce", "text": "Fetches early purchases data .", "title": "", "metadata": ""}
{"_id": "e371d40395485114f907ca5d507d2b7d", "text": "Returns the latest version of an application .", "title": "", "metadata": ""}
{"_id": "8e4d782b519aecebb8b0dd69c364d73b", "text": "Resume the presale if necessary .", "title": "", "metadata": ""}
{"_id": "860f747485591cbf831dfd4ac6bf7010", "text": "This method can be used by the controller to extract other tokens accidentally sent to this contract .", "title": "", "metadata": ""}
{"_id": "51eb862777ffff699a674db7089e76a8", "text": "Test functions .", "title": "", "metadata": ""}
{"_id": "f4f3813058c6a8bba1698be725e43246", "text": "Freeze or Unfreeze an address .", "title": "", "metadata": ""}
{"_id": "9e93807b2116ad6ad4fd1e69b531a938", "text": "retrieve number of all ACE Equity Tokens in existence .", "title": "", "metadata": ""}
{"_id": "1b6d98ecad8b9e49bdf74eeb83b4ccea", "text": "Init balances from old CNC chain .", "title": "", "metadata": ""}
{"_id": "37a0db74acdfbd4f39407e0dab5d8b30", "text": "External views .", "title": "", "metadata": ""}
{"_id": "b1ca34a0bba96a45b4fa5eeaa87163db", "text": "function to be used for presale purchase .", "title": "", "metadata": ""}
{"_id": "8fd78d73b2ddb57df517cbc5c7167ae7", "text": "return jackpot to contract creator if no purchases or claims in 30 days .", "title": "", "metadata": ""}
{"_id": "254aa04c3d0c8e36023f1a9c366aebd1", "text": "returns unclaimed tokens to the airdropper after the airdrop expires .", "title": "", "metadata": ""}
{"_id": "b5b627a89222be0241f3a5c6d5717fdc", "text": "Claim tokens for life reserve wallet .", "title": "", "metadata": ""}
{"_id": "f13af692eebde2f91db335827e91978b", "text": "to check the dealer is solvent or not .", "title": "", "metadata": ""}
{"_id": "9b62185cc7e77e291fde8ca205d77569", "text": "Set the beneficiary account .", "title": "", "metadata": ""}
{"_id": "2c387c2ab3bf24c7644face94fd60c0d", "text": "The below two functions will pull all info of a kitten .", "title": "", "metadata": ""}
{"_id": "723eef491dc70446cad4c1c0edb6e9a9", "text": "Creates ODEM token contract .", "title": "", "metadata": ""}
{"_id": "cd973a7590a8e0e3c710be73db8cb6f5", "text": "Perform the bid win logic ( in this case : transfer the deed ) .", "title": "", "metadata": ""}
{"_id": "2cafef831998293492a30704c78e3391", "text": "convert minium UC amount to purchase - minimum Token amount to purchase .", "title": "", "metadata": ""}
{"_id": "61689fa61c0433c87323bcb3fa139217", "text": "disable token tranferability .", "title": "", "metadata": ""}
{"_id": "361b63f9ab7874e28195516b3fd36439", "text": "Returns all the relevant information about a specific poo .", "title": "", "metadata": ""}
{"_id": "0f4e0f086bbb25b426048f1dda50318b", "text": "function to start updating current rates can be called only when 'updateFlag' is false .", "title": "", "metadata": ""}
{"_id": "6c50e416d34fa030ff323a2af4d652f7", "text": "Determine the current sale round .", "title": "", "metadata": ""}
{"_id": "b1f922df9edf99d95b42516759972364", "text": "Allow the owner to withdraw tokens from the contract without taking tokens from deposits .", "title": "", "metadata": ""}
{"_id": "82cea62957c8ae5a236c862c938889d8", "text": "Change the minimum and maximum amounts that TrueUSD users can burn to newMin and newMax .", "title": "", "metadata": ""}
{"_id": "39faa92f940971e5a3fda4abd89dfa94", "text": "notice check if the msgSender is owner .", "title": "", "metadata": ""}
{"_id": "aea63df17b77c0b694300f2f09d4313c", "text": "Executes ( or times out ) a request if it is not already cancelled or executed .", "title": "", "metadata": ""}
{"_id": "c1e5e44e2cf18546cda504bc793db564", "text": "Returns a list of all Artwork IDs assigned to an address .", "title": "", "metadata": ""}
{"_id": "46a38e644e312205892193e6b31f1b8b", "text": "start the trading countdown .", "title": "", "metadata": ""}
{"_id": "fa9d0d9e4e49b254e1d440b6b8f46b1e", "text": "Check pools end .", "title": "", "metadata": ""}
{"_id": "7964f82e837baceeacc4794cdfba5387", "text": "Returns list of tokens .", "title": "", "metadata": ""}
{"_id": "6e34002463d5a61101ce32d5a3cbc093", "text": "Put a Pony up for auction to be sire .", "title": "", "metadata": ""}
{"_id": "40ac24a03d9a0fd4e5c507bb026528b9", "text": "called by the ceo to unpause , returns to normal state .", "title": "", "metadata": ""}
{"_id": "c934417ab9090a4998ee007efd1271e1", "text": "Set the current sell price in wei for one metadollar .", "title": "", "metadata": ""}
{"_id": "9daf9b3c258fd0dd2f1890020eda520f", "text": "Returns code audit level , 0 if not present .", "title": "", "metadata": ""}
{"_id": "4d82df087bf8c63fe8c91bb6dd57916d", "text": "Set up founder address token balance .", "title": "", "metadata": ""}
{"_id": "811314ace69fca2dfe5ae39b1798187e", "text": "ERC 20 token functions .", "title": "", "metadata": ""}
{"_id": "3f2a99da13caed352078179baf969607", "text": "Dev : As ESG is aiming to be a regulated betting operator .", "title": "", "metadata": ""}
{"_id": "1cb9c3c8a28a16c8ff3919717ff96893", "text": "Allows the owner to change the spender .", "title": "", "metadata": ""}
{"_id": "8f076ddc26f8dad39dbc704539245da3", "text": "method for buying an ad on the market .", "title": "", "metadata": ""}
{"_id": "dfeac21c73b26856e54d3f56324b54f9", "text": "Can be called by anyone at anytime , .", "title": "", "metadata": ""}
{"_id": "603787841a9da4f98ed73207d2386d35", "text": "For holders to destroy tokens in return for ether during a redeeming round .", "title": "", "metadata": ""}
{"_id": "fc349f8b66d8666992cab1231e99fd22", "text": "overriding CappedCrowdsale validPurchase to add an individual cap .", "title": "", "metadata": ""}
{"_id": "80cbfa1fc9cb5e15c75a18b2b185079d", "text": "Sets CAT to Ether rate .", "title": "", "metadata": ""}
{"_id": "d8b4558017c559f4ad5b025f59225da2", "text": "Function to find the winners .", "title": "", "metadata": ""}
{"_id": "5f184494c6b829f130de171d51778665", "text": "Make mint ( ) pausable .", "title": "", "metadata": ""}
{"_id": "9e73da395ce06d16de2f3dd5bb408465", "text": "Mints tokens corresponding to the transaction value for a whitelisted user during the presale .", "title": "", "metadata": ""}
{"_id": "823d795ca02146b21eb091b7f5f16248", "text": "calculate the square of Coefficient of Variation ( CV ) https : / / en . wikipedia . org / wiki / Coefficient_of_variation .", "title": "", "metadata": ""}
{"_id": "e70ee06b64e3cc9bfbb962af48e583b2", "text": "Grant acess to mint heroes .", "title": "", "metadata": ""}
{"_id": "dc527686173d4c5932ef70eba503dbef", "text": "Original ERC20 approve with additional security mesure .", "title": "", "metadata": ""}
{"_id": "de23f7a9e3cd98297deb681432d54d16", "text": "Source : https : / / github . com / gnosis / MultiSigWallet / blob / master / contracts / MultiSigWallet . sol .", "title": "", "metadata": ""}
{"_id": "5495958eb3a403a7ec763ad5f86fb9dc", "text": "Actually allocate .", "title": "", "metadata": ""}
{"_id": "b2f8c40a2652f1af057a9a9ba081aac7", "text": "Ensures certain calls can only be made when minting is finished .", "title": "", "metadata": ""}
{"_id": "3e1a03da193e2aa898b8e1bff8caf288", "text": "TODO : Create 7 createProductionUnit functions in main launch contract .", "title": "", "metadata": ""}
{"_id": "5e2c141b5364d225d1e9382f83283968", "text": "We use pure bbecause it promises that the value for the function depends ONLY on the function arguments .", "title": "", "metadata": ""}
{"_id": "af11d7e8c70ab0a2c8da910e2956b52d", "text": "Gets the list of tokens owned by a given address .", "title": "", "metadata": ""}
{"_id": "da631cd2f5377ff7c1d2cfd9d2565cf3", "text": "Attach the token contract , can only be done once .", "title": "", "metadata": ""}
{"_id": "0fc239db3b3649a4166f93ef044b99c8", "text": "bool Return true if token offering has ended .", "title": "", "metadata": ""}
{"_id": "ab9335f487b91c13642abcb25c8bf02c", "text": "State updates .", "title": "", "metadata": ""}
{"_id": "e3eb4693252ec90ee04159acbeb772b2", "text": "Returns true if the application / listingHash has an unresolved challenge .", "title": "", "metadata": ""}
{"_id": "eed2d2018b4b7b88d31c029aac675eba", "text": "Finalize the contract so it will be forever impossible to change the approved contracts list .", "title": "", "metadata": ""}
{"_id": "36bc4547f6211c1020e482459b7a252e", "text": "admin setters global .", "title": "", "metadata": ""}
{"_id": "9a6f49df9ce52ba825b30f1708535f04", "text": "Allows owner to kill the contract .", "title": "", "metadata": ""}
{"_id": "9e0ceecdde9bf8ab8b11b21e7d4a93a9", "text": "Buys the tokens for the specified tier and for the next one .", "title": "", "metadata": ""}
{"_id": "794c491a831a3d69e7ab92d9bfcabe9f", "text": "Sets new stage .", "title": "", "metadata": ""}
{"_id": "44d5db472cac6d811ffe8cc4f4e2691c", "text": "once we have tokens we can enable the withdrawal setting this _useAsDefault to true will set this incoming address to the defaultToken .", "title": "", "metadata": ""}
{"_id": "f4c82fbfedbc96f13b7e999d061b4409", "text": "doMakerPayment ( ) is an internal function that sends the ether that this contract receives to the vault and creates tokens in the address of the _owner who the fee contribution was sent by .", "title": "", "metadata": ""}
{"_id": "62de81d78efdf74025dbe860c6c2a437", "text": "Called by the deploy agent on emergency , triggers stopped state .", "title": "", "metadata": ""}
{"_id": "24b7296fa2e7415e82c2e40f121bc289", "text": "Is ico .", "title": "", "metadata": ""}
{"_id": "41406bfb23e1195e98fa3373bff692f0", "text": "Puts item on champ .", "title": "", "metadata": ""}
{"_id": "cb86c4633c1de7ce4c41a7cca9bf5f58", "text": "Makes sure that player profit can't exceed a maximum amount , that the bet size is valid , and the playerNumber is in range .", "title": "", "metadata": ""}
{"_id": "d4cd8620d4cd4ce27cf2c76b1e902128", "text": "Retrieve the index id for the node .", "title": "", "metadata": ""}
{"_id": "37ebf78621eb65db0d3febfd3f9509b0", "text": "Sets formula .", "title": "", "metadata": ""}
{"_id": "1aa3f86d2849011869db5190f00270b3", "text": "Ensures a matchId points to a legitimate match .", "title": "", "metadata": ""}
{"_id": "65d918dbdb5994a21d843ad47a481c50", "text": "given an array of ids , returns whether or not this composition is valid and unique does not assume the layers array is flattened .", "title": "", "metadata": ""}
{"_id": "a95af153a9ca9a84662e1fdcff57e3fa", "text": "Token Deployment .", "title": "", "metadata": ""}
{"_id": "5ec31ec16daca4a24007eca628fdc72f", "text": "Token distribution for presale purchasers .", "title": "", "metadata": ""}
{"_id": "5d997361245c7ae4bd5d99e61cdd1cf1", "text": "Destroy the tokens , .", "title": "", "metadata": ""}
{"_id": "ae76bc26c3c5c65d8ee59a92285a6b17", "text": "Update transcoder's fee pool .", "title": "", "metadata": ""}
{"_id": "07b2466b7387ecdd7e790504faf406f9", "text": "Allows an owner to submit and confirm a withdraw transaction .", "title": "", "metadata": ""}
{"_id": "a70ec119b6bb52d746aa662d0f5cc640", "text": "I can only use this once I have reached my goal .", "title": "", "metadata": ""}
{"_id": "a0bece55ffedef0c57f08926a1db1f98", "text": "Transfers a Kitty to another address .", "title": "", "metadata": ""}
{"_id": "60dfad9d4c8e9daf98adbd333f112203", "text": "Overrides CappedCrowdsale validPurchase to check if not paused .", "title": "", "metadata": ""}
{"_id": "58e30fa38f3c008ce93a24aad9b0b309", "text": "The value of the message must be sufficiently large to not be considered dust .", "title": "", "metadata": ""}
{"_id": "e1c3fd66ec834f776b68c3507df36513", "text": "This function is needed to handled unlikely case when person who owns preDGZ tokens makes a mistake and send them to smartcontract without setting the allowance in advance .", "title": "", "metadata": ""}
{"_id": "5596196c39152be1822f2e3c3d76264f", "text": "Returnes holders balance .", "title": "", "metadata": ""}
{"_id": "6831a882152a8c0b688fd014c79a5137", "text": "set the step of the campaign .", "title": "", "metadata": ""}
{"_id": "09d07ec2ec87326c5c4de4765b5b3eed", "text": "Create a rent auction .", "title": "", "metadata": ""}
{"_id": "76b1585b990c6c2af530a6080093fb27", "text": "Sets a new claimer during updates .", "title": "", "metadata": ""}
{"_id": "8651e0cf919f2f273075e5fa4f367016", "text": "Hash ( keccak256 ) of the payload used by transferPreSigned .", "title": "", "metadata": ""}
{"_id": "23da7bbbb2e6a91d8e413204519d1734", "text": "Called by hirer or contractor to raise a dispute during started , completed or canellation request statuses .", "title": "", "metadata": ""}
{"_id": "03b409c4226f1678246b0b11b785f894", "text": "move excess tokens , eg to hodler / sale contract .", "title": "", "metadata": ""}
{"_id": "f72b5641e2fdb0c4c24813c9729502ae", "text": "Overrides VestedToken grantVestedTokens ( ) .", "title": "", "metadata": ""}
{"_id": "92af0233184c2c7e3429a4390e0e734c", "text": "Divident distributions .", "title": "", "metadata": ""}
{"_id": "8182500794c225a9c9731646b2da761a", "text": "Rebuild invest data back to the crowdsale .", "title": "", "metadata": ""}
{"_id": "08448935a52c26fee2e40f8c63b80978", "text": "claim a admin role from an address .", "title": "", "metadata": ""}
{"_id": "a08a9ec839dc2ff78e1680a41dc96813", "text": "Checks if the funding cap or TOKEN_HARDCAP has been reached .", "title": "", "metadata": ""}
{"_id": "76b29de6711ed95e11efb7054d5418be", "text": "Retrieve the token balance of any single address .", "title": "", "metadata": ""}
{"_id": "36f0196139ee5f56e34dc351c4473b08", "text": "Register contribution with given id .", "title": "", "metadata": ""}
{"_id": "fc468f8c6459ab62ab0e9cf06167c43d", "text": "Requests updating rate from oraclize .", "title": "", "metadata": ""}
{"_id": "a8d5e8f3fe0df468a8ec5bc68a017b18", "text": "Only works after lock expired .", "title": "", "metadata": ""}
{"_id": "bde198da0de1282f75a68925855985d9", "text": "Used to burn tokens and decrease total supply .", "title": "", "metadata": ""}
{"_id": "8e41abd05fcaa72ead382475c6717802", "text": "Requires the game to be currently active .", "title": "", "metadata": ""}
{"_id": "43bb8cd411b3b1b3d742814e3dd1edf8", "text": "restricts access to approved users .", "title": "", "metadata": ""}
{"_id": "365dfeee6fa90e92d536706abab1a3bc", "text": "modifier to allow actions only when the _targetAddress is a contract .", "title": "", "metadata": ""}
{"_id": "6ec41c5958d6c889b94c48390d576dd2", "text": "function to withdraw LongTermFoundationBudget funds to the owner wallet can only be called from owner wallet .", "title": "", "metadata": ""}
{"_id": "de0ecee940b1d93a892dd836a37899f7", "text": "Decoding helper functions from Seriality .", "title": "", "metadata": ""}
{"_id": "6fa3f5f92e3ca8e9050278f01dd10d58", "text": "Emits Error if called not by asset proxy .", "title": "", "metadata": ""}
{"_id": "02285551cf0f8f9e3bfc45ce144b98fc", "text": "onlyRecipientOrLeadLink Sends the milestone payment as specified in payData ; the recipient can only call this after the reviewTime has elapsed .", "title": "", "metadata": ""}
{"_id": "97730a84e04db56d4e029ca2f3c8abf3", "text": "Set the target crowdsale where we will move presale funds when the crowdsale opens .", "title": "", "metadata": ""}
{"_id": "f80de73061c8ea25cccc75992a732ecc", "text": "Make sure this board is in waiting for result status .", "title": "", "metadata": ""}
{"_id": "a96376e17ebb371a9478662014024aea", "text": "Returns total votes given to the project .", "title": "", "metadata": ""}
{"_id": "5c3643f42b33296b4bea604ffaf3b2cd", "text": "seal ( ) ends the Campaign by making it impossible to create more tokens .", "title": "", "metadata": ""}
{"_id": "be4064f3e4bd8a4efc356cb7c68a7074", "text": "Send coins from owner to other address .", "title": "", "metadata": ""}
{"_id": "233e5c7e219ae53cab42d68184fd5f5b", "text": "Failed ICO - time is over .", "title": "", "metadata": ""}
{"_id": "a63c7eff705b163f7cf91e5b5df6ceb8", "text": "Returns the total number of tokens , across all approvals .", "title": "", "metadata": ""}
{"_id": "fa93ffad5ad341f5b103b862533e37fb", "text": "Checks if account is blacklisted .", "title": "", "metadata": ""}
{"_id": "9efce5c1546de9d241f7546bef58e989", "text": "Gets AACount's balance .", "title": "", "metadata": ""}
{"_id": "e9a13db8d7484c0cbedc3b2976e9a8a8", "text": "Function which adds an institution .", "title": "", "metadata": ""}
{"_id": "66883b52971ca6c7c13cc599c5aea6ff", "text": "Calculates the board's score , using area scoring .", "title": "", "metadata": ""}
{"_id": "beabb489e36800b564c151db3138c384", "text": "Functions for ERC721 Below : .", "title": "", "metadata": ""}
{"_id": "4ba069d52ccbaeb192be36b089df5abf", "text": "This method returns non zero result when sender is approved by argument address and target address have non zero self balance .", "title": "", "metadata": ""}
{"_id": "53f99723b56eb53a1be30b80a7020db8", "text": "pause the sale .", "title": "", "metadata": ""}
{"_id": "47597a9d2f0c66c489cd2b0ce394278d", "text": "In the first week of the ICO , there will be a bonus , say 20 , then the second week 10 , of tokens .", "title": "", "metadata": ""}
{"_id": "0cfbf62a0d756b1fb6aa85055d0d2a30", "text": "only gen 0 .", "title": "", "metadata": ""}
{"_id": "a38b2b04478c159b991ba02b8f605b29", "text": "Note that a BOP cannot go from Committed back to Open , but it can go from Expended back to Committed ( this would retain the committed recipient ) .", "title": "", "metadata": ""}
{"_id": "280018b4769799b962fae45a8c8a252e", "text": "function to get current Latium balance ( with decimals ) of this contract .", "title": "", "metadata": ""}
{"_id": "f6ea3df339c203e3805160fee5022630", "text": "Calculate player profit if player has won .", "title": "", "metadata": ""}
{"_id": "04a2f73b95ab94ae8f32ea69584a17d7", "text": "true if grantAdvisorToken function has ended .", "title": "", "metadata": ""}
{"_id": "6c20a00f8e8cd5787a13c373faa736e5", "text": "Just in case , owner wants to transfer Tokens from contract to owner address .", "title": "", "metadata": ""}
{"_id": "41235a4d8ad9b575b2d093c29ef9a184", "text": "Total number of tokens currently in the vault .", "title": "", "metadata": ""}
{"_id": "9a38bb0f56cbfcfd170a8113ed01c523", "text": "converts a specific amount of _fromToken to _toToken .", "title": "", "metadata": ""}
{"_id": "f3a2c08b39c43554b22e449469f72081", "text": "Returns all the relevant information about a specific dank .", "title": "", "metadata": ""}
{"_id": "ea2f78e1b9c9cf617e7906b7365b921f", "text": "check address .", "title": "", "metadata": ""}
{"_id": "3c75b8e0a56d95a9569016b0ea92883a", "text": "Manager adds user to whitelist by executing function addAddressInWhitelist .", "title": "", "metadata": ""}
{"_id": "eada29736f022893d76c0026ee87338a", "text": "Only allow a method to be executed if '_who' is not the admin .", "title": "", "metadata": ""}
{"_id": "514e0baa95ee66c5c902154208102eb2", "text": "Get the tokenAddress token balance of someone .", "title": "", "metadata": ""}
{"_id": "698b75dae9a7fe219ce2a89bae6d4c52", "text": "Withdraws deposited tokens on behalf of users .", "title": "", "metadata": ""}
{"_id": "b543ab0a5629fcd9209c62c0668ca18a", "text": "Confirm that the orders do match and are valid .", "title": "", "metadata": ""}
{"_id": "fb2c6fb64dc946bd387d8cff440fbffe", "text": "Change delegatecall upgradable contract address .", "title": "", "metadata": ""}
{"_id": "6c127ea489303e279c58571aba80093b", "text": "Allows contract addresses to be changed in the event of future contract upgrades .", "title": "", "metadata": ""}
{"_id": "1d1417e84dfc8e0f65a7f7d4205cd1cd", "text": "reward rate for purchase .", "title": "", "metadata": ""}
{"_id": "d9728b1e69916b20be5c89717bc339c9", "text": "returns the expected return for changing a specific amount of _fromToken to _toToken .", "title": "", "metadata": ""}
{"_id": "a0bdff39aa9e9de21e44af5f938239af", "text": "Allow pre-approved user to take ownership of a meme .", "title": "", "metadata": ""}
{"_id": "aca6bbe3395c463d8cdfa1440742bad4", "text": "Adds two numbers , throws on overflow .", "title": "", "metadata": ""}
{"_id": "9a6b159fa0628d8c3296cfdf37ef51fa", "text": "Removes authority to execute several functions from subOwner .", "title": "", "metadata": ""}
{"_id": "97e8dc8c4740cb27151a581134b58d0e", "text": "transfer _value coin from msg . sender .", "title": "", "metadata": ""}
{"_id": "bf9e9563e4227d743d92937c8b3d385d", "text": "This owner allocate token for candy airdrop .", "title": "", "metadata": ""}
{"_id": "84ccbee0cc0963929a149621649c92ce", "text": "Allowance to mint .", "title": "", "metadata": ""}
{"_id": "69ca214086f248d97e78568989320a88", "text": "function created to emit the ETH transfer event from the child contract only .", "title": "", "metadata": ""}
{"_id": "2a2a5baa277fef383b47c45b741e35c6", "text": "Redeem a UTXO , crediting a proportional amount of tokens ( if valid ) to the sending address .", "title": "", "metadata": ""}
{"_id": "b6d8a368c82db5c3aa9857b420e11bd6", "text": "Returns sum if no overflow occurred .", "title": "", "metadata": ""}
{"_id": "dc69bea95ac0deaec5a3ca3db1016a41", "text": "update PreITO start time .", "title": "", "metadata": ""}
{"_id": "aa24b612d70a456035722a020b94946b", "text": "Create new repo in registry with _name and first repo version .", "title": "", "metadata": ""}
{"_id": "1a802ae815ad67ad1312fa01dfe9d8fc", "text": "Transfer withdraw ownership to another account .", "title": "", "metadata": ""}
{"_id": "75ae97793b7932f67ad43d72e3067c4c", "text": "These are functions solely created to appease the frontend .", "title": "", "metadata": ""}
{"_id": "a731d88c243c923d679fbcd4470b5f69", "text": "disables the entire change functionality this is a safety mechanism in case of a emergency can only be called by the manager .", "title": "", "metadata": ""}
{"_id": "0d32efb3608c35786aa776f8e85bcd45", "text": "get basic information of this bet .", "title": "", "metadata": ""}
{"_id": "45d5ac7f65e2ebfb3453b887f5ad0c05", "text": "returns THIS contract instance's version .", "title": "", "metadata": ""}
{"_id": "4a6a28687b8007cc21daaad3c47550b4", "text": "Assigns ownership of a specific Region to an address .", "title": "", "metadata": ""}
{"_id": "3025e1768d034a7320b23914d27b73df", "text": "default deposit function used by Users .", "title": "", "metadata": ""}
{"_id": "8da64dd9f15b9d645fc6312da3a02e78", "text": "Only hammer can call it .", "title": "", "metadata": ""}
{"_id": "b7f4f66876dd777668b3968ca72bbda0", "text": "Use and override this function with caution .", "title": "", "metadata": ""}
{"_id": "f23f97aafefdf920cfef8aad15d0f0d0", "text": "Execute a token flush from one of the forwarder addresses .", "title": "", "metadata": ""}
{"_id": "5810fbd874213a236099f2cb075d0dc8", "text": "Freeze _frozenAmount of tokens held by _target with PeriodicReleaseLock .", "title": "", "metadata": ""}
{"_id": "bf6087561384b20a734bebd9974a15c8", "text": "Owner can change price of his days .", "title": "", "metadata": ""}
{"_id": "c867be4206c256ca61d85e05826fbf6d", "text": "Return all estate data .", "title": "", "metadata": ""}
{"_id": "a0ef60912ff3bfc8f49708e7f2ddb8f8", "text": "Change a providers fee .", "title": "", "metadata": ""}
{"_id": "31874d6150b9bdc8a4af666974237acb", "text": "During presale it is possible to withdraw at any time .", "title": "", "metadata": ""}
{"_id": "9ffdec32cf9f89dcdbd1b9c87f435777", "text": "True if there is a record that belongs to _member .", "title": "", "metadata": ""}
{"_id": "32be1a5f728415d7db240a988cc40d47", "text": "Returns price of _tokens _orderPrice is price per 1e18 tokens .", "title": "", "metadata": ""}
{"_id": "0b7b3fd1e6749180e20a321947291f57", "text": "Constructor - sets values for token name and token supply , as well as the factory_contract , the swap .", "title": "", "metadata": ""}
{"_id": "c5c602728e415ef82b9f2977f3906715", "text": "NOTE : _getPartSkillColor is called up to 128 * 4 * 3 times .", "title": "", "metadata": ""}
{"_id": "6cf42db4967e4a1dcfbc9ea2fce2f9be", "text": "gets _sender and _value as input and sells tokens with bonus throws if not enough tokens after calculation .", "title": "", "metadata": ""}
{"_id": "0c51ac8eaa6c61be0164a3806da49b90", "text": "Only make certain changes before the sale starts .", "title": "", "metadata": ""}
{"_id": "26c0a956349983109d43675bae7f017b", "text": "function to get a list of all users that are unapproved can only be called by owner this function would work in write mode .", "title": "", "metadata": ""}
{"_id": "386846ba89ddcb5d47626fa8cc69e1e2", "text": "getter of a request .", "title": "", "metadata": ""}
{"_id": "790d1dd7dea0b7a400406c5bcee184d8", "text": "Issues the rewards for founders and early contributors .", "title": "", "metadata": ""}
{"_id": "9c1eb8f852d65a528a4f7142c79c1dc0", "text": "Set state of contract working .", "title": "", "metadata": ""}
{"_id": "5368593490de88b92435485752760d63", "text": "send funding to safe wallet if minimum is reached .", "title": "", "metadata": ""}
{"_id": "360fdd8701aeebf13914817d5b367f45", "text": "Safe Math .", "title": "", "metadata": ""}
{"_id": "80ab3183c38e3886009472e74dd8f825", "text": "initiated function .", "title": "", "metadata": ""}
{"_id": "b697ef72c598daa29fdb70d61e6d18a8", "text": "Gets the current allowance that has been approved for the specified spender of the owner address .", "title": "", "metadata": ""}
{"_id": "c453fc170925b13febbbe19a5c231041", "text": "Get the total supply .", "title": "", "metadata": ""}
{"_id": "63c9b95602cdcaa0b322bae551f7ef71", "text": "new stuff .", "title": "", "metadata": ""}
{"_id": "da9ab2143435e643847a3dc559595338", "text": "Owner can allow a crowdsale contract to mint new tokens .", "title": "", "metadata": ""}
{"_id": "31dd697c49336388f3c51065de8b20f7", "text": "transfer the ownership to new address , called only by owner .", "title": "", "metadata": ""}
{"_id": "e08f2d134ca105f866d9eb86016381d3", "text": "Unlocked locked rewards by merchant .", "title": "", "metadata": ""}
{"_id": "28b109aee5b7ecec910d38d08266cb8b", "text": "returns the prices of an interval .", "title": "", "metadata": ""}
{"_id": "875db470c16ef40eb5d339d2011ba736", "text": "Frozen account .", "title": "", "metadata": ""}
{"_id": "baf2620c444db7b3f4ffd906b565f319", "text": "erc20 : public ( command ) : token transfer by owner to someone attn : total _value + transactionFee ! ! ! - account-balance _value + transactionFee .", "title": "", "metadata": ""}
{"_id": "3aae503a238ef7f76d54e78d4395dd1c", "text": "Function to access option option pool total of tokens .", "title": "", "metadata": ""}
{"_id": "ed262ec95646c3d35f2bea09f1cafe26", "text": "Voting preparation started and in progress .", "title": "", "metadata": ""}
{"_id": "caabeea98ec83e3c16fad21604b7d626", "text": "mint spint .", "title": "", "metadata": ""}
{"_id": "7649459646361ba653fafec7da309a54", "text": "Low-level change of allowance and getters .", "title": "", "metadata": ""}
{"_id": "ae79b4dc5f249b15049a35d7ae0e253b", "text": "Batch exection of reclaimExpiredSwaps ( ) function .", "title": "", "metadata": ""}
{"_id": "c210ab428d349e4bc303cf00d7f48a34", "text": "Checks if a given address currently has transferApproval for a particular Property .", "title": "", "metadata": ""}
{"_id": "a56a6971f86831e9f83338388bc64766", "text": "set reflect switch .", "title": "", "metadata": ""}
{"_id": "072eec22d5617b8ba9bfba114f496db4", "text": "function that call after crowdsale is ended conditions : ico ended and goal isn't reached .", "title": "", "metadata": ""}
{"_id": "ab601670a4ef8ac17652057a9cb73f1c", "text": "allows to transfer token to another address .", "title": "", "metadata": ""}
{"_id": "d2bef85dadeb3f60bf378488e9d74a30", "text": "Allows an Option's Seller to withdraw their funds after the Option's Maturation .", "title": "", "metadata": ""}
{"_id": "2883b01dfbda9d9b26fa2e182afa70f0", "text": "check target Address contribution .", "title": "", "metadata": ""}
{"_id": "61736a4e08c12eb31641a2e2f847a166", "text": "Returns currentStage .", "title": "", "metadata": ""}
{"_id": "e4a0d5d8cc5ea12a89a7a1a6d173a318", "text": "Allow access only when is unlocked .", "title": "", "metadata": ""}
{"_id": "f172f3ff031c05e0dc16a26313ad32ad", "text": "Returns the memory address of the first byte of the first occurrence of needle in self , or the first byte after self if not found .", "title": "", "metadata": ""}
{"_id": "165b92947283e79ff4a04f2c6bfe83c5", "text": "Appeal ruling .", "title": "", "metadata": ""}
{"_id": "0cfc99426a5246369136e55aa324811c", "text": "Function is called when the buy function is invoked only after the pre sale duration and returns the current discount in percentage .", "title": "", "metadata": ""}
{"_id": "7fc4503e0d8d2c48a8fbad484bef55ae", "text": "Unpauses the token allocation process .", "title": "", "metadata": ""}
{"_id": "93fa323e1cb0ad1be5d56919d3f847fc", "text": "Testing function to corroborate round of sixteen data from oraclize call .", "title": "", "metadata": ""}
{"_id": "734a6df1e284c86e8f855cf758848e03", "text": "Only allow if the crowdsale has been finalized , it is 2 weeks after it closed , contributor have not already claimed bonus tokens and if purchases have been made at all .", "title": "", "metadata": ""}
{"_id": "aa18e2dffd2ccbaf2649b97d55066d32", "text": "getRegisteredAmount for whilelist investors .", "title": "", "metadata": ""}
{"_id": "0faab1d23c80efd21bad4aac623c58e9", "text": "finishes a game that is in progress .", "title": "", "metadata": ""}
{"_id": "16713dc26ee17d25f8e0df761faa8b6e", "text": "forgiveMeOnBehalfOf - somebody else can pay a scammer address debt ( same as above ) .", "title": "", "metadata": ""}
{"_id": "9ff8592633ea5f6c6817ff13d70d8967", "text": "Update pending manager address .", "title": "", "metadata": ""}
{"_id": "f3fec20958aef58c76b6123e2f6fad1b", "text": "Add struct accountsInfo .", "title": "", "metadata": ""}
{"_id": "d63197dab104ce7694bb83b6ac4bbe2a", "text": "buy Silver with ether .", "title": "", "metadata": ""}
{"_id": "e24ea55529072f9a22275ede841d2e69", "text": "of cent in USD or satoshi in BTC ) .", "title": "", "metadata": ""}
{"_id": "31f37c5b374f29b71eac5de8d299cc5a", "text": "Assigns ownership of a specific element to an address .", "title": "", "metadata": ""}
{"_id": "789cea0b173e131d0cda6f6ec60fed75", "text": "When MIN_CAP is not reach the smart contract will be credited to make refund possible by backers 1 ) backer call the partialRefund function of the Crowdsale contract with the partial amount of ETH to be refunded ( value will be renseigned in WEI ) 2 ) backer call the withdrawPayments function of the Crowdsale contract to get a refund in ETH .", "title": "", "metadata": ""}
{"_id": "5e6bdacb76879b4d53ec64c4a3e07135", "text": "Checks if a given address currently has transferApproval for a particular CSCPreSaleItem .", "title": "", "metadata": ""}
{"_id": "3b1dc8075c55455d13f2ed49c62f4401", "text": "Finalize the in progress sale .", "title": "", "metadata": ""}
{"_id": "b50a1325a3e37c4a2b6519331cd2e083", "text": "calculates the bid after the current bid so nifty hackers can skip the queue this is not in our frontend and no one knows if it actually works .", "title": "", "metadata": ""}
{"_id": "c61406154a18edf2ca6840183d2e09c5", "text": "Returns the number of Cuties owned by a specific address .", "title": "", "metadata": ""}
{"_id": "0e4ad748bf30aef8c4faf4e2cb186d69", "text": "Update partner 1 will , only partner 1 can update .", "title": "", "metadata": ""}
{"_id": "e0769279bdc0b069d18d9ab60d3cd926", "text": "Check earnings for a specific address .", "title": "", "metadata": ""}
{"_id": "364757c3f4102784a5ee7d4eab01d46d", "text": "Sets if the trading is live .", "title": "", "metadata": ""}
{"_id": "ac2a2028f7c8b54263d51b954caccadc", "text": "After sealing , no more whitelisting is possible .", "title": "", "metadata": ""}
{"_id": "777ef93b8ad44dc0ed672cb81cf7c13b", "text": "This is necessary for the blacklisted user to pull his ether from the contract upon being refunded .", "title": "", "metadata": ""}
{"_id": "5507eadf113abbb2012e3b7a79fb0a12", "text": "Generate the the unsigned message ( in bytes32 ) that each owner's wallet would have signed for the given destination and amount .", "title": "", "metadata": ""}
{"_id": "94b890f15c25727cbdf2a8ffdbf162b8", "text": "Only owner function to remove Exchange Accounts .", "title": "", "metadata": ""}
{"_id": "e6eb7be9467f618347a9d2f8569a9a8d", "text": "buy allows a party to fill an order .", "title": "", "metadata": ""}
{"_id": "f043da3e3868421385bbd76b021831bc", "text": "invest box controller .", "title": "", "metadata": ""}
{"_id": "a3be4c2b57bafa3d014639b412523e6e", "text": "request to receive bounty tokens .", "title": "", "metadata": ""}
{"_id": "f1d6c7ef0a926f4b27760a3c82e74901", "text": "Creates token contract for ICO .", "title": "", "metadata": ""}
{"_id": "44f6be0dbd6191f7a8748564d35922ce", "text": "Returns the bytes representation of a provided Ethereum address .", "title": "", "metadata": ""}
{"_id": "1dc182b34975b426198a68716d9ef087", "text": "Calls zethrBuyIn okn the selected tokenBankroll .", "title": "", "metadata": ""}
{"_id": "0da98361afd654ff3ba993bbe0d8809f", "text": "Set / remove token event listener .", "title": "", "metadata": ""}
{"_id": "ca3b19acea3b565660637e48ee7047be", "text": "Returns all the relevant information about a specific richtoken .", "title": "", "metadata": ""}
{"_id": "fb6ccabb8ac7097d980ab6b6dc4ca73e", "text": "empty marking modifier signaling to user of the marked function , that it can cause an reentrant call .", "title": "", "metadata": ""}
{"_id": "74a2f9013ef08893eb4a764deac160c2", "text": "function to check if address is a contract .", "title": "", "metadata": ""}
{"_id": "bd269372da56eb36f6240e47914d2283", "text": "vote for an proposal .", "title": "", "metadata": ""}
{"_id": "8118b8ac28a9834822a77203f7690e06", "text": "Allows the current owner to transfer control of the contract to a _new .", "title": "", "metadata": ""}
{"_id": "83e2a4370a555958d29d8d6ca49fd75a", "text": "Start a set of auctions and bid on one of them .", "title": "", "metadata": ""}
{"_id": "50ca535d850655d5a00b02dc6fdc7a4f", "text": "ensure that the result of multiplying x and y is accurate .", "title": "", "metadata": ""}
{"_id": "ef7afeb5d6de33b57c9cdcdb12810ce1", "text": "The result of an order , update the balance of this wallet .", "title": "", "metadata": ""}
{"_id": "832cfed687250f71270b4c02bbe6ee04", "text": "Does what it says on the tin .", "title": "", "metadata": ""}
{"_id": "b8cfca8f63cda8f559842059a4dce81e", "text": "part type , subtype , have one internal function which lets us implement the divergent interfaces .", "title": "", "metadata": ""}
{"_id": "64f8c8ed8ea37a202b57d18a1a55e469", "text": "Query whether an address has been authorized to move any assets on behalf of someone else .", "title": "", "metadata": ""}
{"_id": "81ad26c5940ad23a90d268792ae9bf4a", "text": "Price should be entered in multiple of 10000's .", "title": "", "metadata": ""}
{"_id": "5f010f1cea40a59908d26a80441880e9", "text": "User sells floaks and gets Ether .", "title": "", "metadata": ""}
{"_id": "59eb13799c7a43c7ac59daf19e93e37a", "text": "emergency if the contarct get ERC20 tokens .", "title": "", "metadata": ""}
{"_id": "26441da87bcf52cc379a87f7c3b054b2", "text": "Send the value ( ethers ) that the contract holds to the owner address .", "title": "", "metadata": ""}
{"_id": "87fbf7ff689606901ab0cc00b6f60deb", "text": "Transfer amount of tokens from sender account to recipient .", "title": "", "metadata": ""}
{"_id": "e00a53345b17cd30192500d5029dd436", "text": "allows for minting from owner account .", "title": "", "metadata": ""}
{"_id": "c4f16babc88847575f8907c6948ccba6", "text": "Allows Token owners to Redeem Tokens to this Contract for its value promised .", "title": "", "metadata": ""}
{"_id": "e2c30169d03848bfd4bb614e82d36f02", "text": "Change url of DSP .", "title": "", "metadata": ""}
{"_id": "52e20e3c0fd286d1be57fc5f2e78fd54", "text": "Returns the storage location of the tier's whitelist status .", "title": "", "metadata": ""}
{"_id": "dfa467e1aa73a140047db3ef9ac2f22d", "text": "checkbeton number ( input ) bet type : number input : chosen number .", "title": "", "metadata": ""}
{"_id": "a031187222a9f68dee0a95d20e8ff151", "text": "Sets the maximum number of user stakes to update at once .", "title": "", "metadata": ""}
{"_id": "f9d5cb66a458f243467fd06dcb8d2b00", "text": "Start a new payout cycle .", "title": "", "metadata": ""}
{"_id": "808245f5a30d9bc2c232380b81e83f63", "text": "Returns whether fundraiser address has rights .", "title": "", "metadata": ""}
{"_id": "075dc21e1e27ea1f9d5f4d8fcb212d9b", "text": "This return total supply token .", "title": "", "metadata": ""}
{"_id": "71aef86dd5dc34351b9596bc76c48c2e", "text": "true if pre sale event has ended .", "title": "", "metadata": ""}
{"_id": "96208bbfdae98b8358b58253fd679674", "text": "offchain whitelist check .", "title": "", "metadata": ""}
{"_id": "8c4f96161292842656218b73a05e105d", "text": "Double Payout program .", "title": "", "metadata": ""}
{"_id": "0817435873d2a615ffd77ab8a5b664b2", "text": "It is possible to hand over centerBanker s authority .", "title": "", "metadata": ""}
{"_id": "4fb094eabad6bc4dbe0f16827cb241c7", "text": "Returns a boolean for whether the given address is in the current generation .", "title": "", "metadata": ""}
{"_id": "aff2976ad537e056e0bde3c371b13169", "text": "Throws unless the array of addresses is a ordered set .", "title": "", "metadata": ""}
{"_id": "7b2a502c221031ddaf57328c235423a1", "text": "Ensure there is a sale in progress .", "title": "", "metadata": ""}
{"_id": "6e9ff2464e0d369bea5804324600260b", "text": "n - number player bet nBit - betIndex .", "title": "", "metadata": ""}
{"_id": "becc8f52d2a76915bbac4825cac02516", "text": "Storing predictive event participation information .", "title": "", "metadata": ""}
{"_id": "0d2ed41900d8129eff4f73766486722a", "text": "that function could be called only ONCE ! ! ! After that nothing could be reverted ! ! ! .", "title": "", "metadata": ""}
{"_id": "ed78ee63dfec086c4799198cc2956598", "text": "spend Ace Tokens from another Ethereum account that approves you as spender .", "title": "", "metadata": ""}
{"_id": "9113d486c45a2cc26b4890630dad2dd5", "text": "can be used prior to the donation as a constant function but it is mainly used in the noname function .", "title": "", "metadata": ""}
{"_id": "075d41a6e8224b60547e8afd574ab758", "text": "Get an investor .", "title": "", "metadata": ""}
{"_id": "04f0813eb0075b278776070bf7a0c034", "text": "function to approve a pending costume can be called from anyone in the member addresses list .", "title": "", "metadata": ""}
{"_id": "19879ce135cd5e69c4ea24d8f43c0442", "text": "Play in lottery with random numbers .", "title": "", "metadata": ""}
{"_id": "e47110a9bca38ee666d105711ae6e578", "text": "Stores the plot information and data for a newly purchased plot .", "title": "", "metadata": ""}
{"_id": "53f159d151c11970c36d2e46342df086", "text": "Get info about specific account .", "title": "", "metadata": ""}
{"_id": "7311476ce32117e21756892004a29450", "text": "The same as etherValue ( ) , but without the stale price check .", "title": "", "metadata": ""}
{"_id": "cfc19f1143a2bf1f5c46df6200c85e44", "text": "Internal function to remove a buy order .", "title": "", "metadata": ""}
{"_id": "8aff333b5831df2e9bc1c54cb2dca990", "text": "Get dividends for this contract .", "title": "", "metadata": ""}
{"_id": "f766ebbb3a0c30da47d9d1809e5e30a5", "text": "Constrctor function .", "title": "", "metadata": ""}
{"_id": "01a3be4f5195902ae531183c408db113", "text": "Blacklist ERC20 or ERC223 tokens .", "title": "", "metadata": ""}
{"_id": "493526a0e3cdad6b0c2e42c20c3eb803", "text": "Allows anyone to execute a confirmed transaction or ether withdraws until daily limit is reached .", "title": "", "metadata": ""}
{"_id": "47dc01d3fd6f56944932e70a3429b3ea", "text": "Pause the smart contract .", "title": "", "metadata": ""}
{"_id": "e7ded50d376ea1f25db07de70efa6132", "text": "Set Minimum Price .", "title": "", "metadata": ""}
{"_id": "a57af65b668c3aa33444a8262da099da", "text": "redirectToPurchase Redirect to adequate purchase function within the smart contract .", "title": "", "metadata": ""}
{"_id": "d2911655467976e7329241af59ae53c7", "text": "Underlying transfer function ; it is called by public functions later .", "title": "", "metadata": ""}
{"_id": "b650943ee1c08b49f5887077968ba15b", "text": "mints the boosters can only be called by owner .", "title": "", "metadata": ""}
{"_id": "63631088376a9e6001b018192197ce1c", "text": "This is to catch deployment / configuration errors .", "title": "", "metadata": ""}
{"_id": "f280bbb5e44fdbc702e559a69a14c797", "text": "transfers the full funds to the contract owner contractOwner deployer of the contract .", "title": "", "metadata": ""}
{"_id": "86e1c68d6b6a1f0ab78b562fc91a3605", "text": "Set the arbitrator to a new address .", "title": "", "metadata": ""}
{"_id": "07a9df1f1353f3ad5fe5938b52068961", "text": "Put a property up for auction .", "title": "", "metadata": ""}
{"_id": "9d729f07eae01d4df00a2b516fc1f707", "text": "Reverts if called not doing the refund period .", "title": "", "metadata": ""}
{"_id": "4cb34333d09413de0fb79e69e488d348", "text": "Check if the channel is not present .", "title": "", "metadata": ""}
{"_id": "af9b74518ee6c3678b167fbd2d23d7e2", "text": "Allow contracts to have ownership without taking full custody of the token ( Until voting is fully implemented ) .", "title": "", "metadata": ""}
{"_id": "73ef43bf4c9203de90602a046a47d226", "text": "esta funcion es llamada por cliente para saber cuantos Tokens le quedan disponibles .", "title": "", "metadata": ""}
{"_id": "d145482a8c1f084e552117ae007b45bf", "text": "Called by the server to reject game session created by player with address _playerAddress .", "title": "", "metadata": ""}
{"_id": "1830f04032cf303ee11a57f3a9a9f583", "text": "This function returns the signature of configure function .", "title": "", "metadata": ""}
{"_id": "87c2a7b057caf8f2d1b855069fe8d111", "text": "Overrides migration source .", "title": "", "metadata": ""}
{"_id": "d072f3dbb81c5eb0f57a735dce9d6913", "text": "Approve the passed address to spend the specified amount of tokens on behalf of msg . sender .", "title": "", "metadata": ""}
{"_id": "9af7218dbddbf8fa15dc7f3f317efa15", "text": "Function to set transfer lock .", "title": "", "metadata": ""}
{"_id": "b6b5d2dff5a1d0026f1928cf719dccdc", "text": "Release vested tokens to beneficiary .", "title": "", "metadata": ""}
{"_id": "61d19898daa5c80465ac6570a5478bb6", "text": "Modifier to only allow emptying the remaining value of the contract to owners .", "title": "", "metadata": ""}
{"_id": "9062ea6361e3aa30ddbaa01966c8780a", "text": "limit order price ( all prices are multiplied by PRICE_FACTOR ) .", "title": "", "metadata": ""}
{"_id": "c4a3d163bba28c6fd71d4bbd33d557a1", "text": "Return the funds to a specified investor .", "title": "", "metadata": ""}
{"_id": "3797c951b731e8ffaff6a97068d7fc26", "text": "Utility internal function used to safely transfer value1 tokens from - to1 , and value2 tokens from - to2 , minimizing gas usage ( calling internalTransfer twice is more expensive ) .", "title": "", "metadata": ""}
{"_id": "39c8e8cc73ca2f963e694c443925fa05", "text": "This method serves as a way for anyone to spread some love to all tokenholders without buying tokens .", "title": "", "metadata": ""}
{"_id": "b5da96872acc6020455da47b9cfbfd40", "text": "Facilitates a trade from one user to another .", "title": "", "metadata": ""}
{"_id": "ab646e7b3f14238593a71fe571fe73d0", "text": "Tells the address of the owner .", "title": "", "metadata": ""}
{"_id": "dac573c566b1c1e5bb167a56ed9329eb", "text": "Add a new owner .", "title": "", "metadata": ""}
{"_id": "53b26719a310f1a142673d27d2ac57bc", "text": "Finalize sale .", "title": "", "metadata": ""}
{"_id": "ab5de39ad6388421acc602742b872b73", "text": "Notes : - this is limited to a payload length of 253 bytes - the payload should be ASCII as many clients will want to display this to the user .", "title": "", "metadata": ""}
{"_id": "83e871090ef329bbcc6ab25cff383a83", "text": "number of votes for the given new K1 address .", "title": "", "metadata": ""}
{"_id": "9a58e890fb5b193dc47e4d17193bda60", "text": "investors can claim tokens by calling the function .", "title": "", "metadata": ""}
{"_id": "29f525178d4f1c31f847e39a3d059186", "text": "Returns length of address list .", "title": "", "metadata": ""}
{"_id": "dbfb7b0b9ebb4ea7e737e246aaca7eaf", "text": "function calculate dividends and store result in mapping divmap .", "title": "", "metadata": ""}
{"_id": "5f0f59539eb227b1ca410e5ec48bf779", "text": "functiion to force finalize the ICO by the owner no checks called here .", "title": "", "metadata": ""}
{"_id": "ad78a9908a57dacd99a4c7be5538132f", "text": "if crowdsale is successful , owner can withdraw ether here .", "title": "", "metadata": ""}
{"_id": "b5eeb16caea036515e099d12bf075159", "text": "To Distribute AirDrops of Remaining Token To Bounty ( Press Release Post , Article submission , Blog submission , Social Sharing Etc ) .", "title": "", "metadata": ""}
{"_id": "72fbaf3596e35d274a5df5c0fc06bb11", "text": "Checks whether the crowdsale has ended .", "title": "", "metadata": ""}
{"_id": "9783d43cc8d364624c6dd2af1682d21e", "text": "Throws if called by any other account other than owner .", "title": "", "metadata": ""}
{"_id": "13a79080168120656ee2914ecc0a51f5", "text": "Check if asset has any attribute passed by parameter .", "title": "", "metadata": ""}
{"_id": "867c9c567af576cbb5c644cd10ff76b1", "text": "Call this function to attack another fish .", "title": "", "metadata": ""}
{"_id": "cdb67937a9e3a64803436afbf428128a", "text": "Clear pools done array ( called once a week by our console , or can be called by anybody ) .", "title": "", "metadata": ""}
{"_id": "fb7cc0731cb3f53fcc9bbb8ab15cb2ea", "text": "Genera newAmount nuovi Coin da inviare a target che deve essere un Notaio .", "title": "", "metadata": ""}
{"_id": "e4e65009ad588bd08c12e9c2c04e936e", "text": "Flag an user as unknown / disapproved .", "title": "", "metadata": ""}
{"_id": "5eafc66d6a89bd9c69c51e904c3ea993", "text": "spend available and purchase up more if not enough .", "title": "", "metadata": ""}
{"_id": "1f15b469e5ac88f1116a593fe671cdf0", "text": "Copy 'len' bytes from memory address 'src' , to address 'dest' .", "title": "", "metadata": ""}
{"_id": "cfa88a31258f1e49c4da25449df16add", "text": "Public Functionality .", "title": "", "metadata": ""}
{"_id": "950ec3cca49afaf6f10aa8fc40f84b02", "text": "ICO / Pot share functions .", "title": "", "metadata": ""}
{"_id": "5bc4d62143869aa4772ce4d369f1cf36", "text": "Unapprove a contract address for minting tokens and transferring tokens .", "title": "", "metadata": ""}
{"_id": "c1c2cec7c2b844a90c579f94500789c5", "text": "get claim of token byself .", "title": "", "metadata": ""}
{"_id": "9e22b8254901133c6a50655fd836760d", "text": "Close the crowdsale , should be called after the refund period .", "title": "", "metadata": ""}
{"_id": "d6d490cb37f4ba4755f596db361e921f", "text": "Sets new fee coefficient for user .", "title": "", "metadata": ""}
{"_id": "5f459f2986a970b88d36f24d9428053d", "text": "A set of functions to get required variables .", "title": "", "metadata": ""}
{"_id": "40e68fd59ab8a6d940404e3a823e4e73", "text": "Moves ICO ending date by one month .", "title": "", "metadata": ""}
{"_id": "0e06b56d00a4b803701daf7323ec1ba8", "text": "Add or remove game contract , which can accept ProofofHumanity tokens .", "title": "", "metadata": ""}
{"_id": "1097c5835e997637196ce0f8eb1d70da", "text": "Allow the owner to change the start / end time for a period .", "title": "", "metadata": ""}
{"_id": "d1ecfc10d1fecd0b58ab68844b695065", "text": "Allows the current pending owner to claim the ownership of the contract .", "title": "", "metadata": ""}
{"_id": "185ff8786fdd51cae03009d21a648915", "text": "current difficulty of the game .", "title": "", "metadata": ""}
{"_id": "c3133b760df9358308127c1c3c23cfc5", "text": "Calculate the unlockable balance .", "title": "", "metadata": ""}
{"_id": "06de6f369079da18b0d9f0836a163d1d", "text": "Issue new tokens to the address _to in the amount _amount .", "title": "", "metadata": ""}
{"_id": "837e50e681f76b195e5d219052597141", "text": "Get current sell price without ether .", "title": "", "metadata": ""}
{"_id": "5b40b125442e78bfdded54d1cc17019b", "text": "Mints a token to an address with a tokenURI and tokenHash .", "title": "", "metadata": ""}
{"_id": "aead9bbd53c4db3d22e11ef74cf0c1a3", "text": "The cosigner must call this method to accept the conditions of a loan , this method pays the cosigner his fee .", "title": "", "metadata": ""}
{"_id": "e2a144ea4e0caac8db9dfc1682a87fdc", "text": "This function is copy-paste of the generateTokens of the original MiniMi contract except it uses mayGenerate modifier ( original uses onlyController ) .", "title": "", "metadata": ""}
{"_id": "d610bfeca413baf8ab4749f4f328f972", "text": "This function was added in order to give the ability to manually set ownership history since this had to be redeployed .", "title": "", "metadata": ""}
{"_id": "a91d4e4cb8c34ee7a74912fbe5c98ac6", "text": "issue new coins .", "title": "", "metadata": ""}
{"_id": "e36137f775d14f0fb9c3a329605a2ba1", "text": "Send amount amount of tokens to address _to .", "title": "", "metadata": ""}
{"_id": "22f59ddb809b59bad74c913055fba382", "text": "allows to participants reward their tokens from the specified round .", "title": "", "metadata": ""}
{"_id": "46bf3634c8e8037676547608516aff22", "text": "Checks whether total funding goal was reached .", "title": "", "metadata": ""}
{"_id": "b6b6128dd1373f83aed208024b65d40e", "text": "Standard kill ( ) function to recover funds .", "title": "", "metadata": ""}
{"_id": "642676862c69d8de13f107c1c61b6407", "text": "Allows the owner to withdraw all fund from contract to owner's specific adress .", "title": "", "metadata": ""}
{"_id": "333bf46bac025cff56e6fce8a0669f30", "text": "One thing I ask from the LORD , this only do I seek : that I may dwell in the house of the LORD all the days of my life , to gaze on the beauty of the LORD and to seek him in his temple .", "title": "", "metadata": ""}
{"_id": "00342b5ed5a59f90e7379af79e9db670", "text": "Finalize the Zilla Crowdsale , unsold tokens are moved to the vault account .", "title": "", "metadata": ""}
{"_id": "051263827ed2820300424d757b347504", "text": "This method can be used by admin to extract Eth accidentally sent to this smart contract .", "title": "", "metadata": ""}
{"_id": "ba49a8218a8201ae8d14836354fb06ee", "text": "For creating emojis .", "title": "", "metadata": ""}
{"_id": "cde2ee87e66de4fc80fe76b3015b4710", "text": "Transfers to _withdrawToAddress all tokens controlled by contract _tokenContract .", "title": "", "metadata": ""}
{"_id": "166610f575e3e5576b23aadd8ed11a08", "text": "Sets the pixel .", "title": "", "metadata": ""}
{"_id": "c0f7330874a6757b4528348b16dcd1ea", "text": "Challenge a registration request .", "title": "", "metadata": ""}
{"_id": "e700eb15f121c9b0380454f8b1853088", "text": "Allow a user to claim an item using their redeem code .", "title": "", "metadata": ""}
{"_id": "5660fc32c7f389e7cbc9591223c9ab3f", "text": "compression key 0-14 - timestamp 15-29 - caller pusher tracker 30-44 - global pusher tracker 45-46 - percent 47 - greedy .", "title": "", "metadata": ""}
{"_id": "0a5b60fe33652eba2ca7b6614ae5a445", "text": "Allow contributors to call the refund function to get their contributions returned to their whitelisted address .", "title": "", "metadata": ""}
{"_id": "f320d24041b538dc0365c7ed7eae9ebf", "text": "modifying the fees .", "title": "", "metadata": ""}
{"_id": "2ada61c6c35a718c8788ff42103e2e9c", "text": "Be careful to use delegateTransfer .", "title": "", "metadata": ""}
{"_id": "b2fc09ef0294f10206280115e4ba033a", "text": "public function user submit bet only if game is active bet is valid can query oraclize and set user vars .", "title": "", "metadata": ""}
{"_id": "0bac036e95ec988b3d877a775dd68cbc", "text": "user-related method for withdrawal dividends .", "title": "", "metadata": ""}
{"_id": "16984162f0363e44a93912c139de42a3", "text": "Revoke signature through a delegate .", "title": "", "metadata": ""}
{"_id": "4b027e36c43c6433e0346dbbbf524885", "text": "Allow the owner to reveal the secret key after ballot conclusion .", "title": "", "metadata": ""}
{"_id": "67047527ff02d24cf23f2a3d50e76afc", "text": "Request that the ( old ) drp smart-contract transfers _value worth of ( old ) drp to the drpu token converter to be converted .", "title": "", "metadata": ""}
{"_id": "75f639ab05f827b241f2942a00ef89e6", "text": "send eth into contract in exchange for Wolk tokens , at an exchange rate based on the Bancor Protocol derivation and increase totalSupply accordingly .", "title": "", "metadata": ""}
{"_id": "cbd1577eef46ecd36c61422b73f1dccd", "text": "Get balance of tokens holder .", "title": "", "metadata": ""}
{"_id": "ff05d6093405b532aa929e790e2d8a4e", "text": "Transfers a Pixel to another address .", "title": "", "metadata": ""}
{"_id": "4fdae41ed4de4eaa422daaf488f3b074", "text": "Update IOU price .", "title": "", "metadata": ""}
{"_id": "28ba80d2d968744c9733fafc9bd8bb3b", "text": "returns the number of convertible tokens supported by the contract note that the number of convertible tokens is the number of reserve token , plus 1 ( that represents the standard token ) .", "title": "", "metadata": ""}
{"_id": "2069cbbc7c1250060b3c76db9ed08e08", "text": "This is merely a shortcut for sha3 ( owner , indexName ) .", "title": "", "metadata": ""}
{"_id": "efa8709082d287d451708bea104640a9", "text": "Return list of transactions after filters are applied .", "title": "", "metadata": ""}
{"_id": "a723ce4d6b0a0de13bbcbc6020171f74", "text": "Sets the current round's default values .", "title": "", "metadata": ""}
{"_id": "411eb0aff01f54342211cc870fd6e951", "text": "create a new rabbit , according to the cooldown .", "title": "", "metadata": ""}
{"_id": "809348bce85e746d7a4e345bb4c5694f", "text": "checks to see if there is at least _value left from the daily limit today .", "title": "", "metadata": ""}
{"_id": "b90d29e0f91c4bab17b7bb0b1675e966", "text": "Doesn't change state .", "title": "", "metadata": ""}
{"_id": "de53d20338a355b5c7c273be2ba73ec5", "text": "allows execution only when transfers aren't disabled .", "title": "", "metadata": ""}
{"_id": "015601bc0dd051bd81d473ef6294fd02", "text": "Return claim info .", "title": "", "metadata": ""}
{"_id": "a0f674a34640181484a7d955ac9d687c", "text": "TO CALL THIS FUNCTION EASILY , SEND A 0 ETHER TRANSACTION TO THIS CONTRACT WITH EXTRA DATA : 0x7a09588b .", "title": "", "metadata": ""}
{"_id": "7a5454f0fc19bfc4f6775a0686d9d8f1", "text": "Add address to Jackpot Participants List .", "title": "", "metadata": ""}
{"_id": "7d2032f1e8913f461c1fe2170f6858ab", "text": "For querying balance of a particular account .", "title": "", "metadata": ""}
{"_id": "403787c5327ae87f98f1ba1f9a408125", "text": "freeze the tokens in the deposit address .", "title": "", "metadata": ""}
{"_id": "d7a63ded2d5f8f989f5a2161004aeaa8", "text": "Add fabric .", "title": "", "metadata": ""}
{"_id": "93c6c3cff41ab993c785c87cbc7c9b61", "text": "Token distribution to Ecosystem .", "title": "", "metadata": ""}
{"_id": "2b63b52b8f56d800a9df710ba402e3bc", "text": "to get the volumne bonus percentage based on the ether amount contributed .", "title": "", "metadata": ""}
{"_id": "0168426aea31f4ee4ed0f7f6cdedae42", "text": "Requires value to be divisible by creationUnit .", "title": "", "metadata": ""}
{"_id": "0f61ecf294daf61a10c68bcb296c31ea", "text": "Returns if an address has been approved as a spender .", "title": "", "metadata": ""}
{"_id": "ab028c4dc02a132f700ce9bbd71de024", "text": "Transfer tokens to a receipient .", "title": "", "metadata": ""}
{"_id": "13563a0f4f626b3c6cee0f091e89de7a", "text": "Allows the admin to finalize the crowdsale , distribute reserved tokens , and unlock the token for transfer .", "title": "", "metadata": ""}
{"_id": "849eb6c5f9283e75f12d1f6ccd4a033b", "text": "change transfer status for ERC20 token .", "title": "", "metadata": ""}
{"_id": "27f4fa3681e0c41aea292a0a04ae947f", "text": "Adds to or creates a series of positions .", "title": "", "metadata": ""}
{"_id": "6e5cf595a9fc9a452e5be64a39b0e16d", "text": "Allows a registered address to request an address change .", "title": "", "metadata": ""}
{"_id": "0d0cc7f581d0ba9ee095bfc850f9e315", "text": "allowed for a bounty manager account only .", "title": "", "metadata": ""}
{"_id": "7d7aff656d7268511f99b6273f64e92f", "text": "Initializes original supply from old token total supply .", "title": "", "metadata": ""}
{"_id": "8ce7b589fbc1ad7f3184717ec47a94ad", "text": "Update dividends rights fix .", "title": "", "metadata": ""}
{"_id": "5d5b0657fa324e0ed09122ec4402ddac", "text": "TODO : compare gas cost estimations between this and https : / / github . com / ConsenSys / Tokens / blob / master / contracts / eip20 / EIP20 . sol L39-L45 .", "title": "", "metadata": ""}
{"_id": "64c311d0b6046d3a0b3819afd29ce6c7", "text": "Creates new Emeralds .", "title": "", "metadata": ""}
{"_id": "ca9abaa0c2c0e6e962e06dcf44e4f1ef", "text": "Notify owners about their virtual balances .", "title": "", "metadata": ""}
{"_id": "386934a1ac7d9f37589883a4806ed384", "text": "Withdraw all ERC20 compatible tokens .", "title": "", "metadata": ""}
{"_id": "ffe0f96884d32194ccb423e618e455af", "text": "admin function .", "title": "", "metadata": ""}
{"_id": "6917b844e7d5da43e22589d0292d6176", "text": "Destroy contract and send ethers to owner .", "title": "", "metadata": ""}
{"_id": "670d5615cb753d7581ccdbd79bb37899", "text": "Proposes to transfer control of the contract to a newFoundationCandidate .", "title": "", "metadata": ""}
{"_id": "e9b8166f4772b89d0eabf12c80a26fbc", "text": "enable token tranferability .", "title": "", "metadata": ""}
{"_id": "90afdba7dbd10f0ec7383108239f6221", "text": "Remove all Ether from the contract , which is the owner's cuts as well as any Ether sent directly to the contract address .", "title": "", "metadata": ""}
{"_id": "679cd699a6d2ea5a7f6dedba9c9483e4", "text": "STEP 4 : If STEP 3 is a-ok , execute the draw , request a random number from our RNG provider .", "title": "", "metadata": ""}
{"_id": "ba3480035841f3b8ffec035c61258561", "text": "fix for short address attack .", "title": "", "metadata": ""}
{"_id": "72bbf57319bc6c22d3add859bc73f100", "text": "Prepopulates the specified wallet .", "title": "", "metadata": ""}
{"_id": "920b1ccc64b7768066222e107f06956f", "text": "An internal method that helps in generation of new NFT Collectibles .", "title": "", "metadata": ""}
{"_id": "fb242001346f767808affc478aa4ef53", "text": "close sale and allocate bounty and team tokens .", "title": "", "metadata": ""}
{"_id": "cc6b540d6cb77d9a9699af51c5e56de4", "text": "Sets manager .", "title": "", "metadata": ""}
{"_id": "7279580d6ccff6e247f317d11e82f9d4", "text": "Issues tokens deduction .", "title": "", "metadata": ""}
{"_id": "8ce72ea28cf3f4bad5a2f0694685ed1f", "text": "Enable Transfers ( Only Owner ) .", "title": "", "metadata": ""}
{"_id": "2655dc3d67fca9e9b95109831414dd20", "text": "change Starttime .", "title": "", "metadata": ""}
{"_id": "f4e0099014000c7b8b021e70554f3e95", "text": "only for demonstrate Test Version .", "title": "", "metadata": ""}
{"_id": "78d9d2e9f3e2ecc22650ee869b2a7884", "text": "Gets the balance of the specified address at the first block minor or equal the specified block .", "title": "", "metadata": ""}
{"_id": "30236bbf3b2f9c7f714961972e2df732", "text": "Look up token quantity and whether token exists .", "title": "", "metadata": ""}
{"_id": "b714d1d4ba32abdea8de377bfb6139a5", "text": "Assigns ownership of a specific ship to an address .", "title": "", "metadata": ""}
{"_id": "3cd93a81a5df9b6b9bfc4151c3773601", "text": "Internal function to remove a token from the users barn array .", "title": "", "metadata": ""}
{"_id": "f6bce995dce80b86e1117f2b812ce9c9", "text": "For transfer tokens .", "title": "", "metadata": ""}
{"_id": "78e55ee5ff26a57fa8dcd6a74e08e783", "text": "remove apps .", "title": "", "metadata": ""}
{"_id": "c66d7f3ffb777d72cf439ac9d2fe1f45", "text": "Validate a provided previously approved / signed order , hash , and signature .", "title": "", "metadata": ""}
{"_id": "2f8db58a0075abfe0319abba5ddb8619", "text": "Computes loan interest .", "title": "", "metadata": ""}
{"_id": "241f622e25eb7e4ec564f2e9182b7b6e", "text": "Withdraw ethers to fund address .", "title": "", "metadata": ""}
{"_id": "2ca6f166284819d7870ad5f6b83b3584", "text": "true if sale has ended , false otherwise .", "title": "", "metadata": ""}
{"_id": "7a3e887c6f7ea9503ba49cbc5f4200bb", "text": "Function to cancel a request .", "title": "", "metadata": ""}
{"_id": "b9e620ac1a80a52a7dff06328a519885", "text": "Make an investment .", "title": "", "metadata": ""}
{"_id": "219e961f4fc09f735b0b097d5ad70c97", "text": "Increase the total amount of WEDU token .", "title": "", "metadata": ""}
{"_id": "ed4e53555565d6d45fe507b536ad5420", "text": "Gets initialHand , and stores . draws .", "title": "", "metadata": ""}
{"_id": "712ee267db90ed72cabc8e0052b2c312", "text": "Transform ico balance to standard balance .", "title": "", "metadata": ""}
{"_id": "ac2315209ca3d3b8bc832c92dcff5f0e", "text": "Send tokens to the specified address .", "title": "", "metadata": ""}
{"_id": "ca38084f6602211e90dcf9b4834495e6", "text": "Transfer ether from smartcontract to owner .", "title": "", "metadata": ""}
{"_id": "f169360f9a7f469857e39c853b762509", "text": "Call from Crowdsale : .", "title": "", "metadata": ""}
{"_id": "1368e1784d172b988021f9b7068e2f03", "text": "getValueAt retrieves value at a given snapshot id .", "title": "", "metadata": ""}
{"_id": "6883c31886b10aa178fe51c63786459a", "text": "Add HQX payed by another crypto ( BTC , LTC ) .", "title": "", "metadata": ""}
{"_id": "13408a9a91084d9c06d16d654a96c5fa", "text": "Disable receive another tokens .", "title": "", "metadata": ""}
{"_id": "b52f5c9c08443b5ed92c3cb3e2d6cd4d", "text": "Total amount of fees at a specific _blockNumber .", "title": "", "metadata": ""}
{"_id": "bb9d390c8651a6d6635a56974a722241", "text": "Allows a TGE contributor to claim their contributed eth in case the .", "title": "", "metadata": ""}
{"_id": "3f5782fbb56113a7ac68e53a2a1b5b4b", "text": "Token balance for player .", "title": "", "metadata": ""}
{"_id": "b7bbbc3ee73e2c249fe59fd7d5c749c9", "text": "transfer gift for new owner _to .", "title": "", "metadata": ""}
{"_id": "e72211ec8448106a993abee6ff769cb3", "text": "only IRNAdmins or Owner can call , otherwise throw .", "title": "", "metadata": ""}
{"_id": "cd980e69a660153f2c73fade0d45470c", "text": "Get all registered tokens .", "title": "", "metadata": ""}
{"_id": "931b6da4f89ff9d7e31ad197dbe9f712", "text": "( active , transferOwnerTo , data , owner ) - a tuple containing the active flag , transfer status , data field and owner of an entity .", "title": "", "metadata": ""}
{"_id": "a899092c317932b4e0078e82146fa5d8", "text": "Retrieve abandoned tokens .", "title": "", "metadata": ""}
{"_id": "7f1e34adf1915f34b89877ffafb483bd", "text": "Transfers the current balance to the recepient and terminates the contract .", "title": "", "metadata": ""}
{"_id": "7bdec2018b84277247929b5412321041", "text": "Transfer the unsold tokens to the MIND Foundation multisign wallet .", "title": "", "metadata": ""}
{"_id": "4ddb218c917e15f28bec0de72bade4ef", "text": "These two function can be called by only whitelist suppliers .", "title": "", "metadata": ""}
{"_id": "b95280f6269065a8aab849f7fff6a48e", "text": "We also want to be able to access any tokens that are sent to the contract .", "title": "", "metadata": ""}
{"_id": "cdd464677a6e1b32cafaf63c8cdcf300", "text": "Allows a user to like another users block .", "title": "", "metadata": ""}
{"_id": "eb4a0e2c0efa99990dbe76a60482a516", "text": "Transfer tokens in batches ( of adresses ) .", "title": "", "metadata": ""}
{"_id": "4f1637b15c81a3c4d86e1250829f3fd4", "text": "Constructor function .", "title": "", "metadata": ""}
{"_id": "a6ddbbb5b2ee6fd39fbd9838110c9936", "text": "_productExists checks to see if a product exists .", "title": "", "metadata": ""}
{"_id": "c52a307bf3ce3adb8c5994ea7edb9168", "text": "overrides Crowdsale validPurchase to add whitelist logic .", "title": "", "metadata": ""}
{"_id": "f58fa2e4d70bb2b87d8f124912ffffb3", "text": "byList functions .", "title": "", "metadata": ""}
{"_id": "163adfaae901c752c5cd8bc455aa4e04", "text": "To get the total supply of CTN coins .", "title": "", "metadata": ""}
{"_id": "8deefd96095692895b8b5dfae263c4fa", "text": "Allows ( re - ) setting lastTokenId .", "title": "", "metadata": ""}
{"_id": "2cc4c3784789ec3ce864099ba2eb45c9", "text": "Throws if called by any account other than the caller .", "title": "", "metadata": ""}
{"_id": "434848625ecf8f79f68d2b6b0163f888", "text": "Sets the general manager for the main organization .", "title": "", "metadata": ""}
{"_id": "5b68694e9d0d730530dc728991a07690", "text": "Notifies the controller about an approval , for this SWTConverter all approvals are allowed by default and no extra notifications are needed .", "title": "", "metadata": ""}
{"_id": "71aabd2dd6b5d9e5d2a469042240ad8b", "text": "Toggle boolean flag to allow or prevent access .", "title": "", "metadata": ""}
{"_id": "e24f639cb63896603b094b3c965a3bd3", "text": "Return the buy and sell price of 1 individual token .", "title": "", "metadata": ""}
{"_id": "94115a72a9617aacc22ca5e91bde07f1", "text": "Lock the WEDU token in users .", "title": "", "metadata": ""}
{"_id": "a5df07964338e56c41f91b7789658fac", "text": "verifies that an amount is greater or equal to zero .", "title": "", "metadata": ""}
{"_id": "29410c5172edb80de4448203e9c4b989", "text": "Irrevocably puts contract into safe mode .", "title": "", "metadata": ""}
{"_id": "788da9e9762a158a2f7820f065124abe", "text": "Public Funds Manipulation - withdraw base tokens ( as a transfer ) .", "title": "", "metadata": ""}
{"_id": "ed238681a7a0c9b308df5b4f0aee5c80", "text": "To call to start the DevvotePrefund .", "title": "", "metadata": ""}
{"_id": "842e62960319f0e0a2e53cf2300575f2", "text": "Stake on a specific country .", "title": "", "metadata": ""}
{"_id": "5acd68da473c20973348ee11fdb1e741", "text": "returns a boolean indicating if the sale is canceled .", "title": "", "metadata": ""}
{"_id": "d5db6be72e72a136e3d350ee8b9c923a", "text": "Check if currently active period is a given time period .", "title": "", "metadata": ""}
{"_id": "ef79c4c8c59280e824128cafc8c1e956", "text": "Keccak256 order hash , part two .", "title": "", "metadata": ""}
{"_id": "89d9b45b895502f16751a7bcdbe56822", "text": "Transaction functions .", "title": "", "metadata": ""}
{"_id": "aec36886052fca849bb00ffee6cb26e0", "text": "check if deck and casino seed are correct .", "title": "", "metadata": ""}
{"_id": "cc1a2649571dca6357b8685628a80b8c", "text": "return array of address of all teller .", "title": "", "metadata": ""}
{"_id": "70d943a21fdc20176790cc2de45ec934", "text": "Because too many unlocking steps * accounts , it will burn lots of GAS ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! .", "title": "", "metadata": ""}
{"_id": "4768c7a3ff6d2dbbcb097ac75602063f", "text": "Returns all the relevant information about a specific scene .", "title": "", "metadata": ""}
{"_id": "821737e365c83aa4ce7907a40c96fb0c", "text": "Value of 0 not whitelisted .", "title": "", "metadata": ""}
{"_id": "f43370daf0476dd3a86cd7e17b33915d", "text": "A safe way to handle exponentiation .", "title": "", "metadata": ""}
{"_id": "928ded43d332a3208b48cc942598e276", "text": "Combine the optionalProxy and onlyOwner_Proxy modifiers .", "title": "", "metadata": ""}
{"_id": "d6cc5c159995ba8546d70d846fd5eb44", "text": "Withdraw function ( for miscellaneous tokens ) .", "title": "", "metadata": ""}
{"_id": "3d0611061fee964646d1b23f9d9c121c", "text": "These are auction prices for initial tulip sales .", "title": "", "metadata": ""}
{"_id": "9d7bda7fdb753e649f3e11ad5eae2059", "text": "Whether message sender is oracle or not .", "title": "", "metadata": ""}
{"_id": "2f12ac74cfa23a6181496d24a4c95edb", "text": "NOTES related functions payable functions .", "title": "", "metadata": ""}
{"_id": "1e737ac4be77bac5e6b63aee6692b669", "text": "Updates the Holiday Mappings in case of updates / changes at OwnTheDay . io .", "title": "", "metadata": ""}
{"_id": "c95aaf76740d14754f12e478f3eccbf4", "text": "ERC20 Token Functions .", "title": "", "metadata": ""}
{"_id": "166d9ae89792808711479e9d93aed920", "text": "Admin Methods .", "title": "", "metadata": ""}
{"_id": "1e38ec6c602064e7ed31382767b357f0", "text": "an integer for getting the total discounts .", "title": "", "metadata": ""}
{"_id": "ba7765f3ae1f6da6a75908e4322642e9", "text": "Must be used to verify that a juror has been draw at least _draws . length .", "title": "", "metadata": ""}
{"_id": "3d1ea6f18b37135e77a7a925cb6e8b33", "text": "A reference to the sale's token contract .", "title": "", "metadata": ""}
{"_id": "76418f36be9254a03808f7042340b156", "text": "checks if end date of crowdsale is passed .", "title": "", "metadata": ""}
{"_id": "e059ffed877883d06c1c2d163f92b66f", "text": "players , use this to push your player profile to all registered games .", "title": "", "metadata": ""}
{"_id": "5b7033e853af81b6c1574b635a5edd4c", "text": "The current price or 0 if we are outside milestone period .", "title": "", "metadata": ""}
{"_id": "c7c55dd32adce98226f098f0ce978dde", "text": "Indicated if an address has already claimed the winnings / refunds .", "title": "", "metadata": ""}
{"_id": "3d498b1288ff5dfdee3f2c2c1c308346", "text": "True iff the current block timestamp is later than the time the price was last updated , plus the stale period .", "title": "", "metadata": ""}
{"_id": "37154c7296c6c782354a0f9b2dcb0164", "text": "transfer token to a specified address with additional data if the recipient is a contract .", "title": "", "metadata": ""}
{"_id": "7d4c729339d6d48188a577d7e8259c00", "text": "Ethereum Token .", "title": "", "metadata": ""}
{"_id": "40f89430c2b9137e6df117916b008d60", "text": "Returns the current price of a sale .", "title": "", "metadata": ""}
{"_id": "b5f9841661c5a79831d5f6aa531fedbe", "text": "Approve _value tokens for _spender .", "title": "", "metadata": ""}
{"_id": "b4c85cd2ab64ed49d0db30f29ac7122e", "text": "Update the ETH price for the token sale .", "title": "", "metadata": ""}
{"_id": "0ee65dad71b13409d78931a9633605fd", "text": "get all ico status , funding and usage info .", "title": "", "metadata": ""}
{"_id": "267ffe696c127f252ba1b49535d4ef46", "text": "For trsnsfering tokens to others using this SC to enure they pay .", "title": "", "metadata": ""}
{"_id": "20d6b7d2a4017a82cf5b6a6f9290c24d", "text": "Claimer Logic Implementation .", "title": "", "metadata": ""}
{"_id": "a2a572a014dbb48722466c58c85a8088", "text": "Twitter Bounty Drop batch by single amount .", "title": "", "metadata": ""}
{"_id": "4f379ef1b23a7ef298b2e45b3740924b", "text": "claims tokens held by time lock .", "title": "", "metadata": ""}
{"_id": "0055a1f6d5f5dd56cc77efc48fa0f119", "text": "set the fee .", "title": "", "metadata": ""}
{"_id": "2ade3011a97c6974d9068c0853a1b808", "text": "topUpBalance - This is only used to increase this . balance .", "title": "", "metadata": ""}
{"_id": "e9398a6a64b5cf27e7da32ca5fbfeabf", "text": "Overrides parent to increase the number of tokensSold .", "title": "", "metadata": ""}
{"_id": "fafd58539571ab1b760384c53b611ada", "text": "Get the creation timestamp for the specified whitelisted wallet .", "title": "", "metadata": ""}
{"_id": "4bbf693ed8ae3c47d35ae162f466dc24", "text": "Enable refunds of crowdsale .", "title": "", "metadata": ""}
{"_id": "2515bdda1c26571bbd0a628cd5b87cd6", "text": "Owner can allow or disallow refunds even if soft cap is reached .", "title": "", "metadata": ""}
{"_id": "6a1888c420841c85bbf959b7d6ed31a7", "text": "Returns the color of a given pixel .", "title": "", "metadata": ""}
{"_id": "5e0e129210dede2f7e383a03c13ec02b", "text": "Change coef .", "title": "", "metadata": ""}
{"_id": "f1c92fb796e9b2f60e4c5ed369880208", "text": "Transfer champ .", "title": "", "metadata": ""}
{"_id": "6bf31a912f94eaf2b455bad66ff3488b", "text": "Developer change amount price to add tower .", "title": "", "metadata": ""}
{"_id": "0cadf303b370f922c01f4948e19e84e6", "text": "No zero address transaction .", "title": "", "metadata": ""}
{"_id": "d6b5fe24d56e142160f29d6ab0e81821", "text": "With each call to purchaseTrophy , fees will build up in this contract's balance .", "title": "", "metadata": ""}
{"_id": "eedced29a0f70d6fc0497d586e063578", "text": "Check if sender is RoundsManager .", "title": "", "metadata": ""}
{"_id": "a0951f61c33c85471d31d88ee1c03734", "text": "pass the admin rights to another address .", "title": "", "metadata": ""}
{"_id": "5bcb97a1b6b893f8bdc88fdf9e697286", "text": "Checks if a contract is authorized to call this contract .", "title": "", "metadata": ""}
{"_id": "481bac094148eef4395503edf471fa28", "text": "Changes signer address .", "title": "", "metadata": ""}
{"_id": "1772850eaf6ecb0e1967009eb562de60", "text": "Modifier to make a function callable only when a sale is finished .", "title": "", "metadata": ""}
{"_id": "f4d68e9769e735b530887119a25b5136", "text": "Perform a buyback , ie .", "title": "", "metadata": ""}
{"_id": "8c42b78c63715f9ff11c0d1faaa4073a", "text": "True if this resolver has a record of the provided type on the provided node .", "title": "", "metadata": ""}
{"_id": "e098bd4ceea46d4b1a6ad02db3fc95e1", "text": "Finish Pre-Sale and mint tokens for AppicsFund , EcosystemFund , SteemitFund , .", "title": "", "metadata": ""}
{"_id": "be3ff1db0468631be61d36039269f9ef", "text": "creates a string made from an integer between two strings .", "title": "", "metadata": ""}
{"_id": "b44982379132e039dba34de10bce53d3", "text": "Cancel the escrow as a seller .", "title": "", "metadata": ""}
{"_id": "119f1d1dbbbbd478ab1aaf3a3676c9c3", "text": "set exchange rate for ETH / USD .", "title": "", "metadata": ""}
{"_id": "982c397484648521064ac603788cb458", "text": "Get Businesses per type .", "title": "", "metadata": ""}
{"_id": "e767d8edc2808b06f64245fbf3b4ed73", "text": "Sets the data source contract address .", "title": "", "metadata": ""}
{"_id": "c7b227ebcc817cdd17445e2f06320609", "text": "true if token swap event has ended .", "title": "", "metadata": ""}
{"_id": "2847bf17115830ff8045f4a5f8046b75", "text": "Finalize the fundraiser if endDate has passed or if hardCap is reached .", "title": "", "metadata": ""}
{"_id": "407094e7778bb3fd014d09dcda7ab9ea", "text": "Change ownershipment and move all tokens from old owner to new owner .", "title": "", "metadata": ""}
{"_id": "c8870362f95145bc1da6495d6812380b", "text": "Any account except the DAO itself can execute a function with this modifier .", "title": "", "metadata": ""}
{"_id": "12fba401dc49faf5ffc35c7310793593", "text": "This function handles withdrawals of Ether from the contract .", "title": "", "metadata": ""}
{"_id": "aa1d061e52d195cbf53c4a15a36b45ad", "text": "called by the owner to mint tokens for bounty .", "title": "", "metadata": ""}
{"_id": "fd6c620c4f644cd176b8868340047903", "text": "Execute airdrop for a bunch of addresses .", "title": "", "metadata": ""}
{"_id": "df5fe97ec5646cbb4e123f763229d3a1", "text": "checks if a user address has enough token balance to be eligible to create a contract .", "title": "", "metadata": ""}
{"_id": "c0d9c3fcac6e6439ad05dd58711ea30f", "text": "Modify an item that is in the market .", "title": "", "metadata": ""}
{"_id": "a6d92de86cd145f47b844b5d099655b2", "text": "_amount should be greator than 0 .", "title": "", "metadata": ""}
{"_id": "accaa1c6e5bca9c7d77e8021e5d18f06", "text": "Burn tokens who paid in other cryptocurrencies .", "title": "", "metadata": ""}
{"_id": "f7ed8516bca5c450afd2954556dcc7e1", "text": "Get the addresses of all channel managers for all registered tokens .", "title": "", "metadata": ""}
{"_id": "bd2fbd2febdde3709c578a4691146b5c", "text": "Allows to check if an eth_address can claim a horsey from this contract should we also check if already claimed here ? .", "title": "", "metadata": ""}
{"_id": "811d84bf2aa709a47cddaab14fd7e29b", "text": "every block has its own image id assigned .", "title": "", "metadata": ""}
{"_id": "6d22d6da3505a9ab446e28083702f5c0", "text": "send ether from the completed crowdsale to the owners wallet address .", "title": "", "metadata": ""}
{"_id": "76295be11045009144db559848c1dfe9", "text": "oraclize setPrice .", "title": "", "metadata": ""}
{"_id": "4248095c505867f2e57b9cd97020b51b", "text": "only called by referee , does not delete the participant from the list , but keeps him from winning ( because of inappropiate content ) , only in contract if a referee exists .", "title": "", "metadata": ""}
{"_id": "27ca350e2335e6e46788c6bbd98abce9", "text": "Refund a submission by a specific tokenId .", "title": "", "metadata": ""}
{"_id": "d6ca8854d86b2e4713b804a699b5f6e4", "text": "Transfer some funds to the target purchase address .", "title": "", "metadata": ""}
{"_id": "9267c470de56c4a7af409bbd9ddeaa10", "text": "public functions .", "title": "", "metadata": ""}
{"_id": "9373198d121fdb07583b229ba6d0f1ff", "text": "Put a monster up for auction .", "title": "", "metadata": ""}
{"_id": "1ab347e669a0a1bc182287d156307d3d", "text": "Owner can permanently disabled the contract .", "title": "", "metadata": ""}
{"_id": "3caba54346c819ef5006f652c37d0851", "text": "Withdraws a quantity of havvens back to the havven contract .", "title": "", "metadata": ""}
{"_id": "5d79b053a11081b7f1f416b5e656a743", "text": "Withdraw ether during pre-sale and sale .", "title": "", "metadata": ""}
{"_id": "393b4ec041feb7b339eebd312d1c9d81", "text": "Set the current commission rate .", "title": "", "metadata": ""}
{"_id": "9589d318071c92e931369b63029c30ee", "text": "Request withdrawal of funds from the vault .", "title": "", "metadata": ""}
{"_id": "04fc09a04d664ea0104c13e10822aa0c", "text": "add an address to the whitelist .", "title": "", "metadata": ""}
{"_id": "a0fa0d0694a35bd91e69bbfb26cc9693", "text": "Fonction appel\u00e9s par le propri\u00e9taire du contrat pour passer \u00e0 l'\u00e9tape suivante du processus de vente .", "title": "", "metadata": ""}
{"_id": "d4cbdf997f8ad95d8323ce395a936991", "text": "Works on owner's command .", "title": "", "metadata": ""}
{"_id": "f53474cae5572a2fe261e407f006b661", "text": "Getter for lastSessionVote in Dispute .", "title": "", "metadata": ""}
{"_id": "0096c6895af445551cdde6ed31c84482", "text": "Assigns a new address to act as the CMO .", "title": "", "metadata": ""}
{"_id": "1e2e0af81699d7aabb4f71d663530429", "text": "Updates the token address of the payment type .", "title": "", "metadata": ""}
{"_id": "2f1d1dbb08e1f9a1822713c7f14754ff", "text": "Initiates the next cycle .", "title": "", "metadata": ""}
{"_id": "cebabb98f38d079d152988e8bf2fd413", "text": "Gets membership type .", "title": "", "metadata": ""}
{"_id": "7a40a8b0cc8574d59062a3a372147de1", "text": "Manually withdraw tokens to private investors .", "title": "", "metadata": ""}
{"_id": "9d85e6cb5d470a350badf833dd801834", "text": "Allow founder to change the ether rate .", "title": "", "metadata": ""}
{"_id": "72d83397dfd630e023cd8a95fe8bc396", "text": "Set crowdsale address which can distribute tokens even when onlyWhenTransferAllowed is false .", "title": "", "metadata": ""}
{"_id": "a987df53f06a755bdd85f8e5924fe156", "text": "Functions with this modifier check on sale status .", "title": "", "metadata": ""}
{"_id": "38c990b2ebf39a99cfe31dc78da673f2", "text": "modifier to scope access to admins / / reverts if called not by admin .", "title": "", "metadata": ""}
{"_id": "7b60096ff761cecc28d63c65e7cef398", "text": "When transfer tokens decrease dividendPayments for sender and increase for receiver .", "title": "", "metadata": ""}
{"_id": "92b7bbd2323f0711491c0c27f8d91331", "text": "from _from will be sended _value tokens to _to .", "title": "", "metadata": ""}
{"_id": "ce97ce454229334af2d458799ecaac83", "text": "5 ( 25 million tokens ) will remain in the SUPERIUM Foundation and will be used to further development over next four years .", "title": "", "metadata": ""}
{"_id": "868321897cfc16e69e57a9eed0556469", "text": "prevent manual minting tokens when ICO is active ; .", "title": "", "metadata": ""}
{"_id": "43e56d0f7812eabf9d1ff0892568895c", "text": "Checks if CoFounders are performing the action .", "title": "", "metadata": ""}
{"_id": "bc31b6711c68b201248a721fd4bb9cc0", "text": "Crowdsale overrides .", "title": "", "metadata": ""}
{"_id": "2a973cc1c02dd9ac9e1b9c2388533859", "text": "Returns array of canvas's ids .", "title": "", "metadata": ""}
{"_id": "06041395c4345dc018cee4c56aefab9d", "text": "prevents contracts from interacting .", "title": "", "metadata": ""}
{"_id": "cbb702814e687b35fd8bea578eab3952", "text": "Assigns ownership of a specific Pow to an address .", "title": "", "metadata": ""}
{"_id": "e267bd619dc96617737e5ce26d0157cf", "text": "Length of company allocations .", "title": "", "metadata": ""}
{"_id": "6bd3ccccc8cbe5010222a2899f79d862", "text": "Update coupleImage hash , either partner can update .", "title": "", "metadata": ""}
{"_id": "dd91a589382add10b6fef97b670688fa", "text": "Setup sale contract .", "title": "", "metadata": ""}
{"_id": "84b782d146f11465affbb53db04575d4", "text": "Transfers tokens to specified address .", "title": "", "metadata": ""}
{"_id": "56220c2e163bbac44a09851f49179921", "text": "ERC20 Standard method to tranfer tokens .", "title": "", "metadata": ""}
{"_id": "80b65fe7a2b44423a845503af607e0c8", "text": "User-callable signaling function .", "title": "", "metadata": ""}
{"_id": "2879c27275baf11f44b9301bc03a93f6", "text": "Throws if called by not an ALT0 holder or second time call for same ALT0 holder .", "title": "", "metadata": ""}
{"_id": "978b9615bc88992120aa5e01879789ca", "text": "when the contract needs to upgrade to version 2 .", "title": "", "metadata": ""}
{"_id": "254e873108a453e34df83707849f0fc9", "text": "transfer a cat directly without payment .", "title": "", "metadata": ""}
{"_id": "3e6149cab39e510b98105c4f454a2e5c", "text": "Redeem Reward tokens from one rewards array to balances array .", "title": "", "metadata": ""}
{"_id": "48be30bf8115e94ae25a3cf4180080e0", "text": "Set address of ICO smart-contract which controls token initial token distribution .", "title": "", "metadata": ""}
{"_id": "f441fa6742ebc63a2e156df13aeb6677", "text": "Gets the lock at a given index for a given address .", "title": "", "metadata": ""}
{"_id": "c39ff634f7f4a04cc615f6da56798512", "text": "Constructor that gives msg . sender .", "title": "", "metadata": ""}
{"_id": "0d289c2a6438ef51a7e81f78c1edf054", "text": "An account can unlock their 2y locked tokens 2y after token launch date .", "title": "", "metadata": ""}
{"_id": "16bc5ebe7493d88bf7e61ee366fe7399", "text": "true if rewardsFunds function has ended .", "title": "", "metadata": ""}
{"_id": "a5732fea728d3ba5baa68f2f5660381e", "text": "Check if the RLP item is null .", "title": "", "metadata": ""}
{"_id": "40f4425f13babad008fe4c7810cf64f3", "text": "Call this function after finalizing .", "title": "", "metadata": ""}
{"_id": "051003d7d578173c7c6fda36abd147ad", "text": "Mints tokens being sold during the reservation phase , as part of the implementation of the releaseTokensTo function from the KYCBase contract .", "title": "", "metadata": ""}
{"_id": "f6bc92d5ec729bac7f9d629e25f61dc7", "text": "total The total supply of tokens .", "title": "", "metadata": ""}
{"_id": "2e8d27f6d35051239ab6d60111b2b13a", "text": "Owner related .", "title": "", "metadata": ""}
{"_id": "03c47ceebeb7f4d73094c46ce6f7617e", "text": "to check the reverse , that no game is in progress .", "title": "", "metadata": ""}
{"_id": "2808f4d149094661d84a2b9e0d6c4b2d", "text": "uint8 public defenceElementBySubtypeIndex 1 , 2 , 4 , 3 , 4 , 1 , 3 , 3 , 2 , 1 , 4 ; uint8 public meleeElementBySubtypeIndex 3 , 1 , 3 , 2 , 3 , 4 , 2 , 2 , 1 , 1 , 1 , 1 , 4 , 4 ; uint8 public bodyElementBySubtypeIndex 2 , 1 , 2 , 3 , 4 , 3 , 1 , 1 , 4 , 2 , 3 , 4 , 1 , 0 , 1 ; / / no more lambos : ' ( uint8 public turretElementBySubtypeIndex 4 , 3 , 2 , 1 , 2 , 1 , 1 , 3 , 4 , 3 , 4 ; .", "title": "", "metadata": ""}
{"_id": "a7ea939029915cf343ab2dfd2ee669dc", "text": "total purchased tokens value .", "title": "", "metadata": ""}
{"_id": "ab246cb5c304bfb7e1fbcb17abe9eca5", "text": "Public function to check if the crowdsale has started or not .", "title": "", "metadata": ""}
{"_id": "c7c66c93c8a82a9ed4f4c8e92359092c", "text": "settlement of investment made via investment id .", "title": "", "metadata": ""}
{"_id": "ab9474d64d396ac9ff3456a3b0902b96", "text": "Gets the historic Eth Euro rate .", "title": "", "metadata": ""}
{"_id": "7b2ba0a579d4c36cabc59b4cc91e9de2", "text": "Allows the owner to set the crowdsale and token addresses .", "title": "", "metadata": ""}
{"_id": "cccca1001542e2997274a1c7a1629ded", "text": "Adds a address to our list of allowedContracts .", "title": "", "metadata": ""}
{"_id": "ce50a0811620accd89e7c7f6eb78a19d", "text": "Computes the amount of QSP that should be issued for the given transaction .", "title": "", "metadata": ""}
{"_id": "3aa43cae99b882a179c2433e9b35c433", "text": "Put a Zodiac up for auction to be sire .", "title": "", "metadata": ""}
{"_id": "325b93d6a0703e403feada6737aa004c", "text": "Determines whether a value is greater than another .", "title": "", "metadata": ""}
{"_id": "68e9723c41aba132a47f226569c09d8f", "text": "Buy from auction .", "title": "", "metadata": ""}
{"_id": "615e1cd59245a9fdcae3507e044bcd40", "text": "add genesis cats in groups of 16 .", "title": "", "metadata": ""}
{"_id": "6dc97d6f293ee22e308ec23976888f91", "text": "Transfer to the specified address if anyone can provide the correct preimage .", "title": "", "metadata": ""}
{"_id": "8e66bf355869bc9db3814c2b36b85efa", "text": "available balance of sender account ( self balance ) .", "title": "", "metadata": ""}
{"_id": "d326a0719d2338f59e56e285dc5aeeb3", "text": "Pauses the token allocation process .", "title": "", "metadata": ""}
{"_id": "e02cef049a4c647a5d186e31c75c53c8", "text": "Allows the owner to set the periods of ICO in days ( ! ) .", "title": "", "metadata": ""}
{"_id": "8673ea3d19b0e3205c5c0c3010cf176a", "text": "Partner Authorization .", "title": "", "metadata": ""}
{"_id": "5b899f87fa5320da12d5c62c6d4715ab", "text": "Guess that address book already had changing address .", "title": "", "metadata": ""}
{"_id": "e55b80b3b3b8abc4ec3e239c741ae04a", "text": "Modifier to ensure generateTokens ( ) is only ran once by the constructor .", "title": "", "metadata": ""}
{"_id": "d4d30c85270681833fdcf66bdb302dcf", "text": "function to change rate .", "title": "", "metadata": ""}
{"_id": "248bc6a24f55f347e176df3137924954", "text": "Delete phase by its index .", "title": "", "metadata": ""}
{"_id": "e7353a34b7db87e8d7da1c752dc6abcb", "text": "Mints OWL .", "title": "", "metadata": ""}
{"_id": "3be1746d0ec768c3385b5ca3667ec932", "text": "Add record .", "title": "", "metadata": ""}
{"_id": "3a87dfb4bbfc98ebfcf9056480b2ba20", "text": "can only be called by owner .", "title": "", "metadata": ""}
{"_id": "73bf8c52af6b8d94426c50c8f7e2b401", "text": "Give the current rate ( in Wei ) that buys exactly one token .", "title": "", "metadata": ""}
{"_id": "6e31e66be0b9dda24e781ed253537e79", "text": "log2 for a number that it in 1 , 2 ) .", "title": "", "metadata": ""}
{"_id": "6c9519389df7130c999ff626b8628325", "text": "allow everyone to start transferring tokens freely at the same moment .", "title": "", "metadata": ""}
{"_id": "6bc1bea01ace399065f49f0b2f1c14a0", "text": "generate url by tokenId baseUrl must end with 00000000 .", "title": "", "metadata": ""}
{"_id": "95dd6e162b0d67ef16ca7655463d4c1e", "text": "Issue new tokens to contract .", "title": "", "metadata": ""}
{"_id": "fae47e0a916df1333405e71b3856f600", "text": "Get the _token balance for account _tokenOwner .", "title": "", "metadata": ""}
{"_id": "f9d3915bbd8836ece47e3bbee44abed7", "text": "Breed a Dog you own ( as matron ) with a sire that you own , or for which you have previously been given Siring approval .", "title": "", "metadata": ""}
{"_id": "0a7b20408dab1bd621bd54ad563f82d9", "text": "Check if the sender is the contract owner .", "title": "", "metadata": ""}
{"_id": "06f9a2d9321bdd3039fefe36bf06ec2f", "text": "Monday , 5 March 2018 , 00 : 00 : 00 GMT - Sunday , 25 March 2018 , 23 : 59 : 59 GMT .", "title": "", "metadata": ""}
{"_id": "ef27ea5392b8af62b123b3619ee04102", "text": "modifier to scope access of backend keys stored on investor's portal / / reverts if called not by backend .", "title": "", "metadata": ""}
{"_id": "4fd76553211c62ac3d2aeb5968daed5a", "text": "Returns the links of a node as and array .", "title": "", "metadata": ""}
{"_id": "e1c874000cee03641c9ea9d4036bc677", "text": "Throws if called by any account other than the signer .", "title": "", "metadata": ""}
{"_id": "bc5f8b6a1e624036a62178b7a311d773", "text": "Sell Or Transfer the token .", "title": "", "metadata": ""}
{"_id": "2ea957a8a8ee425dfd4590fb04af7289", "text": "Check if player hash won or lost .", "title": "", "metadata": ""}
{"_id": "49b35047bfa725e9093c84592a934291", "text": "May fail due to gas exceptions .", "title": "", "metadata": ""}
{"_id": "13aab1746b6ee0cc0d377338ab1c8568", "text": "Automatocally forwards ether from smart contract to owner address .", "title": "", "metadata": ""}
{"_id": "2044a02479b64de9196daceb8d7951f2", "text": "Transfer Spork tokens from one account to another .", "title": "", "metadata": ""}
{"_id": "4fe000b055f99bce63c4b298f1f259bc", "text": "byte array .", "title": "", "metadata": ""}
{"_id": "c21e288b7a70c76aba3f853dfdf9f290", "text": "lock funds , called from AugmintToken's transferAndNotify .", "title": "", "metadata": ""}
{"_id": "b8f723896b6f258c9346050150c46540", "text": "cleans up a player abandoned game , but only if it's greater than 24 hours old .", "title": "", "metadata": ""}
{"_id": "6143a755155b34a0b50086095ff4856a", "text": "Allocate Tokens .", "title": "", "metadata": ""}
{"_id": "ff0aca860cbdaa4ea8db9dc85819d43f", "text": "Adjust phase base on time .", "title": "", "metadata": ""}
{"_id": "29acf8797f2b1cbf0fca3384c202c3a1", "text": "Get the index of the current tranche or bail out if we are not in the tranche periods .", "title": "", "metadata": ""}
{"_id": "9d38250f7d6b338a640b7bf2ff0097a9", "text": "Call hashOrder - Solidity ABI encoding limitation workaround , hopefully temporary .", "title": "", "metadata": ""}
{"_id": "b4ee9c3bf3ad099b4374edcc1e64c88e", "text": "Play wrapper : .", "title": "", "metadata": ""}
{"_id": "c298e5af1550e54c0988e502e0f84251", "text": "used by ROLE_NEUMARK_ISSUER to transer newly issued neumarks typically to the investor and platform operator .", "title": "", "metadata": ""}
{"_id": "7dfc28b45d0a96ade69c61ca25124c93", "text": "Sets approved amount of tokens for spender .", "title": "", "metadata": ""}
{"_id": "60be614603ae891c69d363088dcc73a9", "text": "NOTE : caller responsible to check ethstats . net .", "title": "", "metadata": ""}
{"_id": "6d696da95a853689255657e93594054a", "text": "Storage location for token totalSupply .", "title": "", "metadata": ""}
{"_id": "a05eb12039efc279b99a52da28483018", "text": "help fix airdrop when holder 100 but need to calculate outer .", "title": "", "metadata": ""}
{"_id": "e94ae40ab448b50edd47b848b6241873", "text": "Set address of next upgrade master and enable upgrade process .", "title": "", "metadata": ""}
{"_id": "45497ed90fb751e7e342eedd1e23777b", "text": "token auto purchase function .", "title": "", "metadata": ""}
{"_id": "ccad03520b8b50fa028aad5d82dcf239", "text": "First checks the GT owner , then fires the event and then changes the owner to null so GT can't be used again .", "title": "", "metadata": ""}
{"_id": "87f1efda23d3ee8d42f717c682a6138c", "text": "input range : numerator : 1 , uint256_max PRECISION denominator : 1 , uint256_max PRECISION output range : 0 , 0x9b43d4f8d6 .", "title": "", "metadata": ""}
{"_id": "44e246f3c60e56304de023f541600333", "text": "returns the total amount of LNC in circulation get displayed on the website whilst the crowd funding .", "title": "", "metadata": ""}
{"_id": "84e7fc599cf76dd705220c736b4ed9e4", "text": "Time check modifier .", "title": "", "metadata": ""}
{"_id": "c4bd72dca83c03119e6974390bbeab0a", "text": "withdraws the reward to the last executor .", "title": "", "metadata": ""}
{"_id": "3a643d1281f02ec4e1e7a7befc71d6ee", "text": "Returns a slice containing the entire string .", "title": "", "metadata": ""}
{"_id": "5cf53038c1991ee589ad00515db14ebf", "text": "Generate a car ID from the given serial number ( 0 - 255 ) .", "title": "", "metadata": ""}
{"_id": "a9aaa56237f8ef917b1272117a800c8d", "text": "the creator can cancel a sale .", "title": "", "metadata": ""}
{"_id": "d3fd36d96602cbe66e387cd8d806f244", "text": "solium-disable function-order .", "title": "", "metadata": ""}
{"_id": "21a70218703e2ab443ba87a2bedfb63d", "text": "returns how much is currently held in escrow .", "title": "", "metadata": ""}
{"_id": "a55abffecc2520471a9bc290352f246a", "text": "Extend parent behavior requiring purchase to respect the funding cap .", "title": "", "metadata": ""}
{"_id": "6a45b90951a2c7de994fd1fb7b6dd9b4", "text": "The owner can use this function to create new cryptoGamers .", "title": "", "metadata": ""}
{"_id": "1b7d8ad938772bbc1aa88b436770efce", "text": "Returns allowance for the given owner and spender .", "title": "", "metadata": ""}
{"_id": "b8ecf15da116c2aa4aac3f698baf2f20", "text": "returns 0 . 01 value in United States Dollar .", "title": "", "metadata": ""}
{"_id": "07c9ef937c2510dead346998a9bd9299", "text": "Appends a byte array to the end of the buffer .", "title": "", "metadata": ""}
{"_id": "65b774a80efecc99eb0d409a8b126423", "text": "Recover tokens sent in error .", "title": "", "metadata": ""}
{"_id": "a1fc150dc959129767819ec66d5374e1", "text": "Whether the bonus distribution was successful or not .", "title": "", "metadata": ""}
{"_id": "44ece9d8665e3272dab1270bdea3b830", "text": "external agent for candy policies .", "title": "", "metadata": ""}
{"_id": "948b43b2253312e3b405a35c2d660385", "text": "Player Name .", "title": "", "metadata": ""}
{"_id": "a7ee4e9c5efead374ddfca3da00ab6ea", "text": "Get corrected total BP of the address .", "title": "", "metadata": ""}
{"_id": "cb190f2583d5f97b187408edaeda6746", "text": "Assigns initial days to owners during minting period .", "title": "", "metadata": ""}
{"_id": "6678974bdb4962d4f083e9df09d7e686", "text": "Token purchasing has 2 stages : - First stage holds 31 days .", "title": "", "metadata": ""}
{"_id": "454c7f47ba12d4e6a18ba4ac0f2f7662", "text": "Given an amount in TTC , this method returns the equivalent amount in mini-TTC .", "title": "", "metadata": ""}
{"_id": "51c6245c3d39b6c9736a6bb8d621057e", "text": "withdraw , send ether to target .", "title": "", "metadata": ""}
{"_id": "47056c33fd8ad25e09eaf8da6a08e7ff", "text": "Check if the specified purchase is valid .", "title": "", "metadata": ""}
{"_id": "879da6c6f3c7cac8470fe96d649f2c99", "text": "Create an illiquidBalance which cannot be traded until end of lockout period .", "title": "", "metadata": ""}
{"_id": "6e1b063078c7c74055c0ab13c30c7536", "text": "Function for getting the wei amount for given block .", "title": "", "metadata": ""}
{"_id": "4be7d647c25ec0f0aaa5b1094aafaaef", "text": "Failsafe drain - owner can withdraw all the ether from the contract .", "title": "", "metadata": ""}
{"_id": "bfef3481d10e70daff04688a06732a9f", "text": "Returns the amount of tokens approved by the owner that can be transferred by spender .", "title": "", "metadata": ""}
{"_id": "099d0b613d842e5827a446daade50f53", "text": "Allows owner to modify an existing token's icon URL .", "title": "", "metadata": ""}
{"_id": "713b90a9c481851a68848d7831f35e07", "text": "Get info about specified player .", "title": "", "metadata": ""}
{"_id": "ee6969643404a77fbdfca17eda66c81a", "text": "Function to allow a contract to freeze addresses .", "title": "", "metadata": ""}
{"_id": "a9c8ecd3070ea4dbe76f53c19058d3a4", "text": "Function to check which interfaces are suported by this contract .", "title": "", "metadata": ""}
