{"_id": "2af9a2cbb683eddb5292e5ef6ecdb836", "text": "initiates a dividend of necessary , sends .", "title": "", "metadata": ""}
{"_id": "4d366939261ba241dd2f285397de6a98", "text": "Number of deployed tokens .", "title": "", "metadata": ""}
{"_id": "ea42b91db32a1c5244dcc99c9901abd6", "text": "Add the link between the referrer and who they referred .", "title": "", "metadata": ""}
{"_id": "4fc783a19fb1018cf95ba86b258a3c39", "text": "change whether transfers are enabled .", "title": "", "metadata": ""}
{"_id": "282fe2c89029dc54f738d07a73de0448", "text": "Allows the sender to buy tokens .", "title": "", "metadata": ""}
{"_id": "4f431258686e42407c81ec2e86353d0b", "text": "Get Resource Address .", "title": "", "metadata": ""}
{"_id": "35a8297476a7a87057a2f0e571881995", "text": "failsafe : if the above assumption is incorrect , HF tine won't have balance in DarkDAO anyway , and Classic has a sliver of time before DarkDAO split happens .", "title": "", "metadata": ""}
{"_id": "e43a34195f7ceeeb5d007cee2f77f040", "text": "Restrict to the state of not enough Ether being gathered after the time is up .", "title": "", "metadata": ""}
{"_id": "621a264276968ccb7bdafbe0d85ce951", "text": "start normal operation of the token .", "title": "", "metadata": ""}
{"_id": "309bc22846a76cd458a29efd1df521f5", "text": "returns max allowed tournament contenders , public because of internal use .", "title": "", "metadata": ""}
{"_id": "9bc1e2584b063a0b283eb220dfc46def", "text": "Liquifies tokens to counter .", "title": "", "metadata": ""}
{"_id": "58412eac102d51b57bfa4fe5b2b94b19", "text": "Allow the owner to set waitTime .", "title": "", "metadata": ""}
{"_id": "22eaea47578252d512897a8eddea4fd2", "text": "Owner can change the message span step , in seconds .", "title": "", "metadata": ""}
{"_id": "5845c905e980489356ae7637d8c0d629", "text": "Get Reward function based on the payout style .", "title": "", "metadata": ""}
{"_id": "db72c82b3610d62bca479e6e8d4e6f90", "text": "return the lowest of two values .", "title": "", "metadata": ""}
{"_id": "d663c781491df1980ccb1c8af95033a3", "text": "Set dividend payout of phoenix .", "title": "", "metadata": ""}
{"_id": "174d0c8e857f1a35dc0cc980f069edfd", "text": "Modifier to make a function callable only when the upgrade is enabled .", "title": "", "metadata": ""}
{"_id": "c1b1fd21557039f3fee325415bc003fb", "text": "Additions for Bankroll .", "title": "", "metadata": ""}
{"_id": "b55f5d5d2e6711eeaedfa43bbf92a846", "text": "scan for a game 10 minutes old if found abort the game , causing funds to be returned .", "title": "", "metadata": ""}
{"_id": "07f7062a212e3b0944697ef3dc676631", "text": "Manual sending tokens for the investors in addtional currencies ; .", "title": "", "metadata": ""}
{"_id": "f26084819bce0c1b37ef620bb56e47bd", "text": "Adds new address equivalent to holder .", "title": "", "metadata": ""}
{"_id": "88dd8c40297f22977466a9bf25f6a3e1", "text": "returns wei charged by next single oraclize query , assumes a constant prooftype , if not constant , amend as param .", "title": "", "metadata": ""}
{"_id": "89ccf60f6b2620aea2cfe6c34c17f3aa", "text": "Create passage or number of beats .", "title": "", "metadata": ""}
{"_id": "84578d2cef86e08b0c23e1fbf0e0ed32", "text": "override hasEnded to add minimal value logic .", "title": "", "metadata": ""}
{"_id": "a813eff4180f6eba7ffff4567750b69c", "text": "Calculates the Eth value ( in wei ) corresponding to the number of tokens passed ( in unsigned integer form decimals included ) , using the ratio specified .", "title": "", "metadata": ""}
{"_id": "b2851fb3ed55a4c4314f36a679783af8", "text": "2 128 * ( x / 2 128 ) 10 .", "title": "", "metadata": ""}
{"_id": "baa48c311db0dbfe37bb3ad90bbd6cbf", "text": "Get purchased token of specified address .", "title": "", "metadata": ""}
{"_id": "ed03abf08dcfc5d8b50991c7ebac039a", "text": "This function changes every level cap at once .", "title": "", "metadata": ""}
{"_id": "62e24c0458e78fd6ccae0e62a9988bb9", "text": "Update available IOU to purchase .", "title": "", "metadata": ""}
{"_id": "44a2a9d505bffe2368adcf2b0125026c", "text": "Add buyers to the reinforced whitelist .", "title": "", "metadata": ""}
{"_id": "559514503d10ec77f381cc243e150753", "text": "This internal function is executed when the milestone is paid out .", "title": "", "metadata": ""}
{"_id": "76efcd97d58ccbcee97adf8090011d4f", "text": "Remove a quantity of tokens .", "title": "", "metadata": ""}
{"_id": "af2bd4b72bb6ffeb791f1db58b14b88a", "text": "Checks whether max ether cap is reached for presale .", "title": "", "metadata": ""}
{"_id": "62a4ce8dc8b70686aae8e34e437eb143", "text": "called after Presale ends .", "title": "", "metadata": ""}
{"_id": "805074d337cf2c04b4824ffc351ae7b7", "text": "Admins getters .", "title": "", "metadata": ""}
{"_id": "f40c590ad2f21a8535f17209bb53828e", "text": "Push contributor data to the contract before the crowdsale so that they are eligible for priorit pass .", "title": "", "metadata": ""}
{"_id": "804d584aa07f5e15efbb55949194d838", "text": "END of Game rules .", "title": "", "metadata": ""}
{"_id": "2c8e55adfd9d730200a116c824d5643a", "text": "Update a single toekn payout for transfers .", "title": "", "metadata": ""}
{"_id": "01f3d253b243f10008398cdf9b38185c", "text": "Only a shareholder who has * not * delegated his vote can execute a function with this modifier .", "title": "", "metadata": ""}
{"_id": "a7035f924f9e966b3f1d2afa8e0d181c", "text": "Introspection interface as per ERC-165 ( https : / / github . com / ethereum / EIPs / issues / 165 ) .", "title": "", "metadata": ""}
{"_id": "f8293e70676650344f46f48ea364567c", "text": "Finalizes an Auction , transfering token to the highest bidder .", "title": "", "metadata": ""}
{"_id": "d064d57777acb44f7b958ca0a6f08a2b", "text": "vote5 and vote1 are available for future use .", "title": "", "metadata": ""}
{"_id": "ac288d199ea4d8f104212a0021495f68", "text": "Function to check a users balance of SOLID and deposit as credit .", "title": "", "metadata": ""}
{"_id": "3084846867c5b4c2d15668e0878a1f84", "text": "Function which calculates the revenue for block .", "title": "", "metadata": ""}
{"_id": "886424fbf08b2b1c9f9c740e6ac6cde4", "text": "This function puts the initial gas limit .", "title": "", "metadata": ""}
{"_id": "a21d2b6e76d877e71a27c5a85ea7e54b", "text": "bind a contract as its owner .", "title": "", "metadata": ""}
{"_id": "df146dcefeacc3f1275b52346ace4517", "text": "Sell P3D tokens and send balance to owner .", "title": "", "metadata": ""}
{"_id": "96235abbb435dca671cf109af3d2370a", "text": "This method will generally be called by the MSP token contract to acquire MSPs .", "title": "", "metadata": ""}
{"_id": "9d6c3e15508e687bcdf2f6931bd7d984", "text": "executes a powerdown request .", "title": "", "metadata": ""}
{"_id": "45476ef7a2209874abb1e712a0831093", "text": "true if sale is over .", "title": "", "metadata": ""}
{"_id": "ea3a0a80ab2a4ac9aecbfd64ab33fe29", "text": "Update the given account's previous period fee entitlement value .", "title": "", "metadata": ""}
{"_id": "95d490b092547daebb893625eb7e8e16", "text": "Gets the complete list of token ids which belongs to an address .", "title": "", "metadata": ""}
{"_id": "3024d4e8621951e8cfad98742879ee6f", "text": "Get token estimate based on current rate .", "title": "", "metadata": ""}
{"_id": "0df69d485b5a65a8771ca6446c4f0559", "text": "Grants approval to another user to sire with one of your zodiacs .", "title": "", "metadata": ""}
{"_id": "668d77ff26148083effccdb32477e77e", "text": "functions overrides in order to maintain the token locked during the ICO .", "title": "", "metadata": ""}
{"_id": "ee20ec87177835a0e8f4b25f81c8a7eb", "text": "Public , external API exposed to all users interested in taking part in the crowdfunding .", "title": "", "metadata": ""}
{"_id": "f8f76cf4a1e3547c4c01c1209ad39557", "text": "shows how many times runSweepStake function needs to be run .", "title": "", "metadata": ""}
{"_id": "ead5a308168db2e07c3e3edbbdbcdec5", "text": "Private mutable functions .", "title": "", "metadata": ""}
{"_id": "e0a8f93aca084a8556279c379f0339ad", "text": "sells the token by withdrawing from one of its connector tokens .", "title": "", "metadata": ""}
{"_id": "40b428cc21dd7558b085cb580e31c247", "text": "Used to log royalties .", "title": "", "metadata": ""}
{"_id": "7d0e10bd914d4fbd62c650bea8ef80d8", "text": "Unlock a locked transfer .", "title": "", "metadata": ""}
{"_id": "bd59da3571e60dc369af8ee4c4559c9e", "text": "Multiplies two numbers , throws on overflow .", "title": "", "metadata": ""}
{"_id": "f5e1ed24a7f16ce9fc638d505e4902a1", "text": "Hash a hash with x19Ethereum Signed Message : n32 .", "title": "", "metadata": ""}
{"_id": "6bf852c9e165c264c72d8a609cd465cd", "text": "Get approved address for given token .", "title": "", "metadata": ""}
{"_id": "3223d98c0706f2b2c284b7bffe95f07c", "text": "Transfer all unsold token to the contract owner .", "title": "", "metadata": ""}
{"_id": "f40c6ec1d86231c65f3d83a48f6a29e2", "text": "Deliver tokens .", "title": "", "metadata": ""}
{"_id": "78d7412f11c149fbd6931b735ac83845", "text": "mineCrystals consists of two basic operations that burn pickaxes and mint crystals .", "title": "", "metadata": ""}
{"_id": "13db9ae61b792903e7ffd2e225ca984d", "text": "Method to burn all remanining tokens left with the sales contract after the sale has ended .", "title": "", "metadata": ""}
{"_id": "577e4f42fb9400983087cb766698e1a9", "text": "Links a little and a big sister together , can only be invoked by owner .", "title": "", "metadata": ""}
{"_id": "843a2816c8aadad9f4de842c5b051ae6", "text": "Returns the number of active loans in total , active loans are the loans with lent status .", "title": "", "metadata": ""}
{"_id": "0ff791460afd8b1bde8abc9e49927929", "text": "transfer token for a specified address method overridden to support freezing accounts .", "title": "", "metadata": ""}
{"_id": "09680dae1c7c540265d96fd001a5db03", "text": "get the withdraw wallet addresses list binding to the deposit contract address .", "title": "", "metadata": ""}
{"_id": "5a85a38ee92b05af62f4fb16fa537ae5", "text": "Disable minting upon finalization .", "title": "", "metadata": ""}
{"_id": "23ef126fe9bc2c57962a130d0282e369", "text": "Dividend Declaration Section .", "title": "", "metadata": ""}
{"_id": "04ec3605b5f5993e28d7aad4295c5e68", "text": "Gets voting winner .", "title": "", "metadata": ""}
{"_id": "443293fd08d7ce719a2fa6cbf75efdf2", "text": "ETH balance of contract .", "title": "", "metadata": ""}
{"_id": "34bdeaeda01489a01ce182651542d750", "text": "Get DNAR to Gold ( in gram ) exchange rate .", "title": "", "metadata": ""}
{"_id": "00aa6a7a23d587e33c0b010cf59ce145", "text": "Increase token sold amount .", "title": "", "metadata": ""}
{"_id": "415833c08caa92ea7484638d0bec88ed", "text": "Buy tokens from contract by sending Ether .", "title": "", "metadata": ""}
{"_id": "6207d08db73f85521b73bbe066563e21", "text": "Priveleged functions .", "title": "", "metadata": ""}
{"_id": "6cc911a33857609306401385224ef46a", "text": "Get the number of bonus tiers .", "title": "", "metadata": ""}
{"_id": "afa70b62c3a9e869b1dca80e8789f85f", "text": "Returns the API URL for a given token Id .", "title": "", "metadata": ""}
{"_id": "b059dfb9762713ad59ce0a7c4ab30b1e", "text": "Add a new oraclize funding order .", "title": "", "metadata": ""}
{"_id": "6738de5615acac36d4ce0df9fc3e35ad", "text": "release time of locked .", "title": "", "metadata": ""}
{"_id": "13b0d882434cd233a2bd694b47af579e", "text": "Calculate the token amount and add bonus if needed .", "title": "", "metadata": ""}
{"_id": "dbe04ccb53565f0ff67db413f15ad439", "text": "modify ExtraBonus .", "title": "", "metadata": ""}
{"_id": "3c5c23e321299e579b8a72145d2e5a3f", "text": "this function can be used when you want to send same number of tokens to all the recipients .", "title": "", "metadata": ""}
{"_id": "b7e66372a9c757847efbeec833f8af0d", "text": "Cancel an existing vote by the sender on a motion to confiscate the target balance .", "title": "", "metadata": ""}
{"_id": "194207c4aabd19e9e6160f1a0fed1a15", "text": "Getters to allow the same whitelist to be used also by other contracts ( including upgraded Controllers ) .", "title": "", "metadata": ""}
{"_id": "3a56fd26236d2080fe216c87c4542a71", "text": "Changes : - Added token cap logic based on token supply .", "title": "", "metadata": ""}
{"_id": "a6b1c718e493f6e51c73dd6cbf4c8bb4", "text": "transfer contract token balance to owner .", "title": "", "metadata": ""}
{"_id": "c991da01a1dcc0a9c042a65b9a1ccf6f", "text": "Process the token claim .", "title": "", "metadata": ""}
{"_id": "30a7922508e3ae8bbff8e79ff55f1a1e", "text": "Claim tokens that have been sent to contract mistakenly .", "title": "", "metadata": ""}
{"_id": "76829a14b632cead4bdf84a305a65213", "text": "Creates a new channel between a sender and a receiver , only callable by the Token contract .", "title": "", "metadata": ""}
{"_id": "adb7307e7a2781dd09ed9b1cef5fad2f", "text": "Investors can claim refunds here if crowdsale is unsuccessful ( softcap not reached or as specified by owner ) .", "title": "", "metadata": ""}
{"_id": "63427326a3a988969c7721523138324d", "text": "Returns the total number of Cuties in existence .", "title": "", "metadata": ""}
{"_id": "c61f419c50ad439078b575a43cfaa7d0", "text": "Get the order's balance of tokens for account customer .", "title": "", "metadata": ""}
{"_id": "533ba9a4622afa10fc8101ef7fdc6406", "text": "Token can be transferred immediately after crowdsale .", "title": "", "metadata": ""}
{"_id": "c44049adf2b916e4c14b3a84159272ac", "text": "Save a new anchor for a given Merkle tree root hash .", "title": "", "metadata": ""}
{"_id": "9995cf4063707de58891f49b3b83ba3d", "text": "Function to extend period of presale .", "title": "", "metadata": ""}
{"_id": "9032aa552d49d990fbb824a2fc43e09f", "text": "Function to issue tokens to an address .", "title": "", "metadata": ""}
{"_id": "827e4a081d2544aa79afdd14ece41d72", "text": "Remove address from qualified partners list .", "title": "", "metadata": ""}
{"_id": "6af57d52cddbdcc87055c7e12892ce38", "text": "Allows merchant to withdraw funds to beneficiary address .", "title": "", "metadata": ""}
{"_id": "53b7fee1ef7444c437a2d5f0260cbfd5", "text": "Burn Jack from Users .", "title": "", "metadata": ""}
{"_id": "a163d095dc4732cd248fbe8c59b9e635", "text": "Time and volume based bonus calculations .", "title": "", "metadata": ""}
{"_id": "d36c88ad60104c2de2450bd3f99a0bdd", "text": "setMonethaGateway allows owner to change address of MonethaGateway .", "title": "", "metadata": ""}
{"_id": "e62e988eb5699a720ebb06218c4612da", "text": "Change how much it costs to submit a meme .", "title": "", "metadata": ""}
{"_id": "52aabe1e23be1e85df7f276cfa4c84a0", "text": "Pre-ico state .", "title": "", "metadata": ""}
{"_id": "888e4b129f774011316389c05ded5a46", "text": "batchUnlockVestedTokens vested tokens and transfer them to the grantees .", "title": "", "metadata": ""}
{"_id": "b43ecfb3ae9b2234d746029d71443b07", "text": "Manage ethereum balance .", "title": "", "metadata": ""}
{"_id": "c1a6ec1c9f377c3784d876c96d2a994b", "text": "Get current tier id .", "title": "", "metadata": ""}
{"_id": "5d4d61b6a84d20cd55d1cde24d9f57ce", "text": "Call calculateMatchPrice - Solidity ABI encoding limitation workaround , hopefully temporary .", "title": "", "metadata": ""}
{"_id": "6753d3e16ffdbdd048c4e55ffce37273", "text": "A boolean that indicates if the operation was successful .", "title": "", "metadata": ""}
{"_id": "7dab0045754bfa620cf4c1138dfd5e54", "text": "multiplication result .", "title": "", "metadata": ""}
{"_id": "a8ae5fdc4d68f9f96e07277ed30bb615", "text": "Burns a specific amount of tokens of another account that msg . sender .", "title": "", "metadata": ""}
{"_id": "7ea8ce4e7717bb420d703a4c7956eafd", "text": "Issue unsold token to target address .", "title": "", "metadata": ""}
{"_id": "fa3aa306bb80b8a5e2687bf9d17e66a6", "text": "anyone who finds a block on ethereum would also get a reward in .", "title": "", "metadata": ""}
{"_id": "2dc1c06740f85277163bdc98c096b6d8", "text": "Clean up function to get the contract selfdestructed - OPTIONAL .", "title": "", "metadata": ""}
{"_id": "82ff22e10404e2c4c34d1d63139ea14e", "text": "Who'd have thought we'd need this thing floating around ? .", "title": "", "metadata": ""}
{"_id": "6dd96e7f4385596349583f25042cd258", "text": "Owner can withdraw their accumulated payouts .", "title": "", "metadata": ""}
{"_id": "0d3820e66f305a6e84b6773cb613ac35", "text": "Dividend Holders Only .", "title": "", "metadata": ""}
{"_id": "e5facca08991c52845cfde7578569d99", "text": "Start the offering by sending all the tokens to STO contract .", "title": "", "metadata": ""}
{"_id": "3e8622712e7f4a5759eb8d1776e2c2c3", "text": "Allows the current freezer to transfer control of the contract to a newFreezer .", "title": "", "metadata": ""}
{"_id": "7e693d077395fb86d298f34ba0ec526d", "text": "Set the messiCommunity .", "title": "", "metadata": ""}
{"_id": "77aab48746fc02813a57df4ad674266f", "text": "Helpers for \u00d0Apps .", "title": "", "metadata": ""}
{"_id": "498fa6a1b53f3e39d17132c9e09f8e00", "text": "Allows the current owner to grant control of the contract to another account .", "title": "", "metadata": ""}
{"_id": "fb30f174f714c1b738839b1c64765e83", "text": "An internal method that creates a new Pony and stores it .", "title": "", "metadata": ""}
{"_id": "c6227f3e1053a150c508f5ede5833b2f", "text": "Buy the token from the owner .", "title": "", "metadata": ""}
{"_id": "667e852a1facfb83e535de10bbf467b7", "text": "Right token address .", "title": "", "metadata": ""}
{"_id": "b7f2367b574b9fafdd7711e41e7a24ce", "text": "Kill method .", "title": "", "metadata": ""}
{"_id": "9ca84b04bf6ad802965e2e1b3f615f04", "text": "2y locked total supply .", "title": "", "metadata": ""}
{"_id": "cedf3cc82223fc51994d6909974d024d", "text": "ERC20 transfer .", "title": "", "metadata": ""}
{"_id": "3f797a1443441d88d471cad991a65f10", "text": "Function to send _value tokens to user ( _to ) from sale contract / owner .", "title": "", "metadata": ""}
{"_id": "4bd6d1e667e4741a37b4722749ff0e80", "text": "commit funds for a given window .", "title": "", "metadata": ""}
{"_id": "fa3c9e7a0aba828ceb7e54da683b8274", "text": "only moderators .", "title": "", "metadata": ""}
{"_id": "5abb812d4a18a85781dbeb0a13217177", "text": "Set the for sale flag and a price for a section to a specific address .", "title": "", "metadata": ""}
{"_id": "49b5cb0914a42a2b8ac9fff1f230f269", "text": "Set Methods .", "title": "", "metadata": ""}
{"_id": "2007f4716f05945399e62fd287d2d5ab", "text": "adapted from https : / / medium . com / promentol / lottery-smart - contract-can - we-generate - random-numbers - in-solidity - 4f586a152b27 .", "title": "", "metadata": ""}
{"_id": "f50dae59f656b6043892fad287f9f1dc", "text": "claimToken ( ) for multiple addresses .", "title": "", "metadata": ""}
{"_id": "b2394693bba6082768e1b478d8b049e6", "text": "Set new price .", "title": "", "metadata": ""}
{"_id": "78633bb29eb81e4d6927c3bca26432a7", "text": "Owner can unfreeze the token balance for chosen token holder .", "title": "", "metadata": ""}
{"_id": "4f620aec2f48137808cf7d10b0ac0e37", "text": "Burns a specific amount of tokens , could be called only once .", "title": "", "metadata": ""}
{"_id": "b6e540f1db80af9e118d3495c7c0bd9d", "text": "Ended ( as required by Eidoo's ICOEngineInterface ) .", "title": "", "metadata": ""}
{"_id": "d8720c035e609a402126aca80385a587", "text": "Recover the address from a revocation signature .", "title": "", "metadata": ""}
{"_id": "329bb329dbaa0ede56bae7516a956c3e", "text": "Approve other address to spend tokens on your account .", "title": "", "metadata": ""}
{"_id": "b63b81d7c90794a280fc5024546c78f9", "text": "Transfer unsold tokens after ico deadline .", "title": "", "metadata": ""}
{"_id": "360789bd0d5f673514271d6208ad3303", "text": "In case an owner account gets compromised , it should be possible to move control over to another account .", "title": "", "metadata": ""}
{"_id": "7aa7b96a04c327b912afbdd6359fd97f", "text": "Transfer token .", "title": "", "metadata": ""}
{"_id": "e60eb0c740edd91913e56acae0be1a8a", "text": "owner can call this freeze function to freeze some accounts from doing certain functions .", "title": "", "metadata": ""}
{"_id": "5d65256d1d498ca043e99575be0c6c37", "text": "Throws if player does not own the hero , or the hero is still in cooldown period , and no pending power update .", "title": "", "metadata": ""}
{"_id": "87bc226ee9d07b1f2605f8da44425a68", "text": "this is register a new address .", "title": "", "metadata": ""}
{"_id": "83edaef7ae61d6ae33f0dc30e9265462", "text": "remove addresses from the blacklist .", "title": "", "metadata": ""}
{"_id": "0e4f89cf7e1c18a4ef9c346fe60259a7", "text": "Add or remove game contract , which can accept LYNIA tokens .", "title": "", "metadata": ""}
{"_id": "a73fc3b8e654e40a013b2408ac1a42ca", "text": "transferFrom _value coin from _from to _to address 1 .", "title": "", "metadata": ""}
{"_id": "0cd46e41c4906312a8d7d4373de87317", "text": "validates maximum conversion fee .", "title": "", "metadata": ""}
{"_id": "4e82e8f0e4c9b580fc9f0e0f45744e80", "text": "Allows the notary to confirm the minting of tokens .", "title": "", "metadata": ""}
{"_id": "4a2dfd9ef840f48d0f13731ae057b798", "text": "Returns the address currently assigned ownership of a given element .", "title": "", "metadata": ""}
{"_id": "3d3659f805df80c4fe4cca7dcc728246", "text": "need to be called before the ICO to set ether price give to 8 decimal places .", "title": "", "metadata": ""}
{"_id": "f4f0b0fc884df8204f2df40bc693f114", "text": "Allowed to only contract onwer .", "title": "", "metadata": ""}
{"_id": "1fa3b4371d4b119cbdb1ecd50cb61ee5", "text": "Cancel the sale of an unindexed piece owned by the registrar .", "title": "", "metadata": ""}
{"_id": "c2ae4137387991539aafc356bf3c5271", "text": "Open Zeppelin asyncSend function for pull payments .", "title": "", "metadata": ""}
{"_id": "b43a3c899e3961911d2a2567d30f4aa0", "text": "Calculate the current price of an order ( convenience function ) .", "title": "", "metadata": ""}
{"_id": "818d19de4255f95fea34b0ebb4bd071e", "text": "Sets up contract execution when initializing an instance of the application .", "title": "", "metadata": ""}
{"_id": "a22171c210fe31577d98203d95fdb9b3", "text": "ERC20 compliant transfer function .", "title": "", "metadata": ""}
{"_id": "0cab12d62df85a5771b5bc74a4540e01", "text": "Get the current amount of customers .", "title": "", "metadata": ""}
{"_id": "adb44b7dc5b13070d8c26f972bb874ea", "text": "Nonce is the same thing as a 'check number' .", "title": "", "metadata": ""}
{"_id": "5b094fdaf3b07c026267cf09d6c08af0", "text": "This function will return all of the details of the Video Games .", "title": "", "metadata": ""}
{"_id": "c3ff55b19d4cd1ae41df61a6c49588c1", "text": "Internal function to handle tabulating the winners , including edge cases around duplicate winners .", "title": "", "metadata": ""}
{"_id": "ab242692196e823a8fd7be55bcaf0829", "text": "Freeze all EDU token transfers during sale period .", "title": "", "metadata": ""}
{"_id": "f1a5dcabb077feca994a761d2825b8f1", "text": "To ensure scarcity , we are unable to change the max numbers of zo assets every day .", "title": "", "metadata": ""}
{"_id": "1ca7f458acb0a38076a1c0627ef1378d", "text": "Get settings .", "title": "", "metadata": ""}
{"_id": "b4ad84aff54327cc8337f71892ca751f", "text": "charge demurring fee for previuos period fee is not applied to owners .", "title": "", "metadata": ""}
{"_id": "a09e75d43f65083a2544cbad5b289f87", "text": "Use to provide / change the permission to the delegate corresponds to the module contract .", "title": "", "metadata": ""}
{"_id": "d9dc405c65bc05f27443e7d40cd7c330", "text": "Burn token of an specified address .", "title": "", "metadata": ""}
{"_id": "fb3a80db8bf50b8a2374ae870a35fbe9", "text": "DApp interface exposing pool details for DApp .", "title": "", "metadata": ""}
{"_id": "eca5223127c5c5fa5d4fbfc814e8b61e", "text": "I may increase the cash proof amount lateron , so make sure you check the global variable minimum_cash_proof_amount but don't worry , if you dont send enough , it just rolls back the transaction via a throw .", "title": "", "metadata": ""}
{"_id": "01d7f029eeb5c481f2394f82de3906cc", "text": "Lock the specified number of tokens until the specified unix time .", "title": "", "metadata": ""}
{"_id": "ab8eeb0f84c55e6da565ef41731cf1fa", "text": "confirms payments via a batch method .", "title": "", "metadata": ""}
{"_id": "719f7b7dde450c29ea12c7b742691b00", "text": "Only allow execution of a contract function if the work order is started .", "title": "", "metadata": ""}
{"_id": "1052c27bde22907cca808ab5126ef747", "text": "Allows ( re - ) setting the uniqueness index .", "title": "", "metadata": ""}
{"_id": "99e665986348f8efc5dc2dfa798a7f9d", "text": "adds an address to the list of players before calling you need to check if the address is already in the game .", "title": "", "metadata": ""}
{"_id": "f5110c6c1b6328bf7b876a6b8df4fbc4", "text": "Stop the release of tokens .", "title": "", "metadata": ""}
{"_id": "d9ce824c23c791e19573ec649214ad4c", "text": "Allows owner to transfer unsold tokens to his / her address .", "title": "", "metadata": ""}
{"_id": "b276284084d7a8b14c06d7389952e5d2", "text": "You're welcome ? ! .", "title": "", "metadata": ""}
{"_id": "6979f2df43ed207387a4cc35f29ccc83", "text": "Checks if a given address is the current owner of a particular Animecard .", "title": "", "metadata": ""}
{"_id": "b0449944bb9ce6729dea3bc0d743b794", "text": "calculate the winnings owed for a user's bet on a particular square .", "title": "", "metadata": ""}
{"_id": "39057bd26370210f300ebfc38f758de5", "text": "Current Vesting stage for Musk team .", "title": "", "metadata": ""}
{"_id": "e5a6f5c425114e940ac6bab3f880a7ab", "text": "changes the owner of the contract .", "title": "", "metadata": ""}
{"_id": "80068c9d4c820de0b9d7ba6b48fc8892", "text": "Withdrawal happens here from Etherprises LLC to the GM .", "title": "", "metadata": ""}
{"_id": "e70c58334275e4318ffb4c7a34f8c781", "text": "View the total balance of the token contract .", "title": "", "metadata": ""}
{"_id": "ab4c58ea180dd6f7f675c5779deb5866", "text": "Returns all the relevant information about a specific Zodiac .", "title": "", "metadata": ""}
{"_id": "82d201d357817d116ad363d56c8c0bab", "text": "Allows the owner to collect the balance of this contract , including any owed dividends .", "title": "", "metadata": ""}
{"_id": "cba80d01bf3cb7ecf41fb5ace84c505b", "text": "Allocate reserved tokens based on the running time and state of the contract .", "title": "", "metadata": ""}
{"_id": "97f591d643143dad0e8e1df34dd49270", "text": "internal function , called in constructor .", "title": "", "metadata": ""}
{"_id": "4725ffe90cb44f0ac6507383a66b3fca", "text": "Detach Asset From System .", "title": "", "metadata": ""}
{"_id": "c841f4a4850900b7d20bd1511344e5b2", "text": "Attach the auth ( ) modifier to functions to protect them .", "title": "", "metadata": ""}
{"_id": "be1d9eb87471d3858f1612a4121a0eab", "text": "Internal check to see if a given sire and matron are a valid mating pair .", "title": "", "metadata": ""}
{"_id": "44786745b9d0882f611f1297f9c5ab79", "text": "Set address of migration target contract .", "title": "", "metadata": ""}
{"_id": "b78d324bc3aaa0f9e0da4ef3f326b320", "text": "a sellers allowed limits in holding ico tokens is checked .", "title": "", "metadata": ""}
{"_id": "a5b621788aad58337bb1ce79488e616d", "text": "Transfer limited by the tradingOpen modifier ( time is 14 July 2018 or later ) .", "title": "", "metadata": ""}
{"_id": "d738cbf2f74ce303c4934daf8c68ea1c", "text": "Destroy a token .", "title": "", "metadata": ""}
{"_id": "a161d5b9ed07a3803d82f671f06dad16", "text": "Manually set a contribution , used by owners to increase owners amounts .", "title": "", "metadata": ""}
{"_id": "07123bfc3a8447525d84e70b07f05485", "text": "Oraclize query callback to determine the winner of the match .", "title": "", "metadata": ""}
{"_id": "f32748b7321d6751d0a894f911f1640a", "text": "matches as many orders as possible from the passed orders .", "title": "", "metadata": ""}
{"_id": "7d8dfc36fb7210d84d99d9ed3d9cbcbf", "text": "Function that implements SafeMath for exponent operations .", "title": "", "metadata": ""}
{"_id": "c6ad3837774fc3b9e18ff6ae167953d4", "text": "adjust token holder balance at checkpoint after a token transfer .", "title": "", "metadata": ""}
{"_id": "fd68f260645242cdbd75e8282a8304b7", "text": "send profit to investor when stack depth happened .", "title": "", "metadata": ""}
{"_id": "faee1aaeefb6dcbb46b1a31ef0ad17c2", "text": "returns the difference of _x minus _y , asserts if the subtraction results in a negative number .", "title": "", "metadata": ""}
{"_id": "3e3b21f7f56c789347577be01b6222d9", "text": "Formula for the dynamic price change algorithm .", "title": "", "metadata": ""}
{"_id": "2b6db4192f58ee9bee9a27fceb472a77", "text": "Level up the hero with _tokenId .", "title": "", "metadata": ""}
{"_id": "c38d8325c8d7a21bae93724604fef0a2", "text": "computes the number of tokens that should be issued for a given contribution .", "title": "", "metadata": ""}
{"_id": "ab20384e3ecd11d6f16eed8616c904ed", "text": "Withdraw any accidently sent to the contract ERC20 tokens .", "title": "", "metadata": ""}
{"_id": "d2aee0be09c56078a9f97f4baec132e9", "text": "buys a specific ad .", "title": "", "metadata": ""}
{"_id": "9c928cefd05c71800bfb1932617c70b3", "text": "ERC20 token transferFrom function with additional safety .", "title": "", "metadata": ""}
{"_id": "184ca8a738fb354052522309bd88b429", "text": "Get the total rooms for a room type .", "title": "", "metadata": ""}
{"_id": "c540806e39845b465f6aba58f2209727", "text": "Overridden method to check that the minimum was reached ( no refund is possible after that , so transfer of tokens shouldn't be a problem ) .", "title": "", "metadata": ""}
{"_id": "7f9ac5acbc4373eb21f6a57d82b55d76", "text": "Owner sets new address of SunContractToken .", "title": "", "metadata": ""}
{"_id": "735ce9f46e789d5fb9e92072daeb22ef", "text": "Sets the new dividend percentage for buyouts .", "title": "", "metadata": ""}
{"_id": "5db08c369c0455e91a9ba86cf2949844", "text": "Calculate trade to sell eggs .", "title": "", "metadata": ""}
{"_id": "27e4bb28df40ba3a58a2fae56f5df4c4", "text": "Withdraw accumulated fees , without disturbing the core reserve .", "title": "", "metadata": ""}
{"_id": "6980ca523710634504287c1d89c3ae7d", "text": "Returns remaining amount of tokens allowed at the moment .", "title": "", "metadata": ""}
{"_id": "854819095a677eae10d4beb517255cc6", "text": "PUBLIC interface .", "title": "", "metadata": ""}
{"_id": "738282a87d804f0e02b97fe9915fcdee", "text": "A constant getter that returns the total number of pledges .", "title": "", "metadata": ""}
{"_id": "1897489a3c1688216b64da4bba5f0cdc", "text": "Sets current KYC provider of the token .", "title": "", "metadata": ""}
{"_id": "b1d8b02257ed499d1ba50b10918e671d", "text": "transfer ownership of a specific Gift to an address .", "title": "", "metadata": ""}
{"_id": "d9c154649b9be9948fd527c8c465e0dd", "text": "individualClaim ( ) can be called by any auction participant once the FairAuction is finalized , to claim the tokens they are owed from the auction .", "title": "", "metadata": ""}
{"_id": "442a59c79c8993bd3f269d94deee8125", "text": "Transfer function .", "title": "", "metadata": ""}
{"_id": "a7624debb3d840f54539586473495d67", "text": "Adds all unpaid commission to the owner's pending withdrawals .", "title": "", "metadata": ""}
{"_id": "f141a581f20214d3c9507547e154dfa8", "text": "True if ended .", "title": "", "metadata": ""}
{"_id": "9313e94202765e3e54fe91c236989e56", "text": "unpause the contract .", "title": "", "metadata": ""}
{"_id": "77f8aee2c4a3f7d8a0ab1f9ebb448211", "text": "withdraw funds .", "title": "", "metadata": ""}
{"_id": "b13774ec3b4696c7023c671023b6560b", "text": "Adds a new allocation for the contributor with address _contributor .", "title": "", "metadata": ""}
{"_id": "fd6c44a5d474346cde4f361e4022a401", "text": "restore redeemed back to user , only founder can do , if user made an error .", "title": "", "metadata": ""}
{"_id": "26fa47f0c9d876504eced44b8034c9e6", "text": "Get the total amount of ERC20 tokens we are sending .", "title": "", "metadata": ""}
{"_id": "da4cf5ff19e37a5c02049e5a6b2aa1cd", "text": "Get unsold tokens .", "title": "", "metadata": ""}
{"_id": "5e688b669431e8bea9ae1605845ccadb", "text": "buy ticket with specified round and passing string data .", "title": "", "metadata": ""}
{"_id": "36b7f0a278ea55a7d537bc9af53b9dfb", "text": "return reward of content delivarable .", "title": "", "metadata": ""}
{"_id": "142d813926c2591f821ada84025982fc", "text": "The total amount of bonus credit the address has ( minus non-bonus credit ) .", "title": "", "metadata": ""}
{"_id": "eaf61ad4354f75dbc1bc5d919ac6b229", "text": "Distribute tokens to grants .", "title": "", "metadata": ""}
{"_id": "637e0a312146167a1dbf9ab349ed439b", "text": "Buy sale tokens .", "title": "", "metadata": ""}
{"_id": "228841072861b4571593257de5fd1c3f", "text": "Register a certificate administrator .", "title": "", "metadata": ""}
{"_id": "e26b0d67df4fcd888e3a6208eba6a47a", "text": "This method is only used if we miss the 256th block containing the result hash , lottery ( ) should be used instead this method as this is duplicated from lottery ( ) .", "title": "", "metadata": ""}
{"_id": "fc92fcc41698642b842a5a73e196831f", "text": "Starts the minting process .", "title": "", "metadata": ""}
{"_id": "a52646b12381f88793296aa6122c0ec2", "text": "Emits ERC20 Transfer event on this contract .", "title": "", "metadata": ""}
{"_id": "f30ac64ea7373b4994f9a10161526b57", "text": "Transfers a Zodiac to another address .", "title": "", "metadata": ""}
{"_id": "97b476febbdd72c5500a6a8393807dd5", "text": "Creates more tokens .", "title": "", "metadata": ""}
{"_id": "eed3d14b859d0b635e8e26957fc32b4b", "text": "Do finalization .", "title": "", "metadata": ""}
{"_id": "1cacc059da759dd8996fdc7138c4f837", "text": "Updates the minimum payment required for calling createUnit ( ) .", "title": "", "metadata": ""}
{"_id": "e2ff126603961fad9a2437c133fe7dd0", "text": "Token related methods .", "title": "", "metadata": ""}
{"_id": "bc5b8ad4bff290d0fe27352f22c88bac", "text": "Function to send some amount of ethereum out of the contract to an address .", "title": "", "metadata": ""}
{"_id": "5c5fec0ad50cf7de861f5a52e4a02c3a", "text": "Allow the owner to deposit and withdraw ether ( this contract needs to pay oraclize fees ) .", "title": "", "metadata": ""}
{"_id": "0265e7688bfadc690c1e75e65997ae28", "text": "Issue new tokens according to the STAR token inflation limits .", "title": "", "metadata": ""}
{"_id": "e06b0dbc3f3e333ad86cf66b4e32f8d8", "text": "BEWARE , this does not use a safe transfer mechanism ! .", "title": "", "metadata": ""}
{"_id": "1831ace4d9c94da5c708a41351c87d4e", "text": "return Invalid Keys .", "title": "", "metadata": ""}
{"_id": "67e1bbfa5b92707de00a5675d37339ff", "text": "Function to access symbol of token .", "title": "", "metadata": ""}
{"_id": "f60374f944165a6ae18c9992879e2083", "text": "total amount of token .", "title": "", "metadata": ""}
{"_id": "3ce956c62e891135b034c25ebd0f3473", "text": "Send tokens to bountyOwner depending on crowdsale results .", "title": "", "metadata": ""}
{"_id": "2feae7f27eebaae9c0b66f9b2143ab60", "text": "Withdraw all the eth on the contract .", "title": "", "metadata": ""}
{"_id": "e8ef847f577e2bcb08003e8b16471402", "text": "Manually back RedPillToken owner address .", "title": "", "metadata": ""}
{"_id": "39c73ff6cda3941fa3cfae4e3563aee2", "text": "Modifier to make a function callable only when the target is not frozen .", "title": "", "metadata": ""}
{"_id": "accc82e90164320a7cb4dbca7ee63c45", "text": "wait 100 block after final contract state before allowing contract destruction .", "title": "", "metadata": ""}
{"_id": "d4ac483e423b422802c19b0b37326fc6", "text": "Supply tokens to ICO contract .", "title": "", "metadata": ""}
{"_id": "5300833dabfe5c3ec24b35a1223949f2", "text": "only owner can destroy the token .", "title": "", "metadata": ""}
{"_id": "40be17ed77fa2f95ad17a5f5ecf12b7b", "text": "ERC677 token fallback .", "title": "", "metadata": ""}
{"_id": "862094c316a7fd189a5b84f6fbd89d2a", "text": "RigWars game handler functions .", "title": "", "metadata": ""}
{"_id": "70dc119c6ec15f9210c22cf00f3a9ff6", "text": "address not zero .", "title": "", "metadata": ""}
{"_id": "4f1e8ad5eb1ec154366c20420634f41e", "text": "Amend and option in an existing Ballot .", "title": "", "metadata": ""}
{"_id": "1c00610fe898014425c7b2efc5170dd9", "text": "Constructor of the contract .", "title": "", "metadata": ""}
{"_id": "dc0c3109a14a4b0af829f74c2e7c1cd2", "text": "Function that allows the current owner to withdraw any amount of ETH from the contract .", "title": "", "metadata": ""}
{"_id": "c53d123b1e29dfdd7fd8c98753a0b60d", "text": "Reject pause status change proposal .", "title": "", "metadata": ""}
{"_id": "ed219c1be733202ad5d8cf508aafee9a", "text": "Get My Revenue .", "title": "", "metadata": ""}
{"_id": "8ef4859c8d2fe71b35bb4c6cbc0036ad", "text": "Block node .", "title": "", "metadata": ""}
{"_id": "dd66e69380f5433789500ed0c1a6c337", "text": "Safe function for depositing funds .", "title": "", "metadata": ""}
{"_id": "851f891444efb157d7ca78da4a0798ce", "text": "The initial distributor is responsible for allocating the supply into the various pools described in the whitepaper .", "title": "", "metadata": ""}
{"_id": "c918a1f078fd401862b980cac455c3e0", "text": "Changes threshold for major transaction day spend per token .", "title": "", "metadata": ""}
{"_id": "1bec69106eaa31838702b1e2353fc69c", "text": "Called when both hirer and contractor have agreed on cancellation conditions , and amount each will receive can be called by hirer or contractor once amount has been signed by both parties .", "title": "", "metadata": ""}
{"_id": "909d71ed4b882bc998cf725e25ab6ac1", "text": "uint64 functions .", "title": "", "metadata": ""}
{"_id": "0c34660de7373204d8ec36e52c7d0367", "text": "Decrease allowance of _spender in behalf of _from at _value .", "title": "", "metadata": ""}
{"_id": "00292109dcc6233be0191673bccbed63", "text": "transfer gift to a new owner .", "title": "", "metadata": ""}
{"_id": "3195fe63b2e9ae1e9e00b0c791108648", "text": "update release amount for single day according to dividend rule in https : / / coinhot . com .", "title": "", "metadata": ""}
{"_id": "88c833300472aec28aaac1f4148f35e3", "text": "Decode an RLPItem into a byte .", "title": "", "metadata": ""}
{"_id": "24a03500a52656cc1645250ecbae3366", "text": "Returns token's name .", "title": "", "metadata": ""}
{"_id": "1b0ba18b6c9363c34734ff402b3554e0", "text": "Creates a new gen0 monster with the given genes and creates an auction for it .", "title": "", "metadata": ""}
{"_id": "3ddcf1173f3ae16ef0e2a1510fb30e7c", "text": "return in interface string encoded to bytes ( max len 5 bytes ) .", "title": "", "metadata": ""}
{"_id": "ade1c013e73263408ee060e8de88cbde", "text": "Calls the contract's finalization function .", "title": "", "metadata": ""}
{"_id": "30659c21c510404d673bb20efa58c76c", "text": "exposing the total reward amount for DApp .", "title": "", "metadata": ""}
{"_id": "cbe8d4cf63f68b934b75c4239f98fca2", "text": "This function is used to unlock a user's already locked tokens only admin can invoke this function .", "title": "", "metadata": ""}
{"_id": "dae4bdf03e45d2fd0d30bb1672e0dc69", "text": "some fomo3d function that deposits to Forwarder .", "title": "", "metadata": ""}
{"_id": "5ba2b2b42d355561a6c5620790b23c04", "text": "Approval Allowance .", "title": "", "metadata": ""}
{"_id": "99b98d4b1cbb29bb1a084743d765bc51", "text": "Get the numbers of beneficiaries in the vesting contract .", "title": "", "metadata": ""}
{"_id": "beb0b7d69ebfc64f914695f5449d1a55", "text": "Override doTransfer function .", "title": "", "metadata": ""}
{"_id": "a33d6d8206922ab9d970c5aed370371d", "text": "Call guardedArrayReplace - library function exposed for testing .", "title": "", "metadata": ""}
{"_id": "383c6b169457c34dca9bef38e9663d55", "text": "Withdraw allowed only on success .", "title": "", "metadata": ""}
{"_id": "e1e6dfbece083362ab812632be38b526", "text": "Post initialization state , mainly used to guarantee that periods and t0special have been set properly before starting the withdrawal process .", "title": "", "metadata": ""}
{"_id": "16285a9577b995fe5df9b2f0bd4ce7d9", "text": "This function is called by the passMessage method from theCyber contract .", "title": "", "metadata": ""}
{"_id": "8af4c2f4beeb27dadacc8a6609eb7dd5", "text": "This function is called when crowdsale is successfully finalized .", "title": "", "metadata": ""}
{"_id": "b24514f2f65c0d88bd28f591d098d768", "text": "Checks whether it can transfer or otherwise throws .", "title": "", "metadata": ""}
{"_id": "8b49fe23d00f47d3d576f5136b585779", "text": "Send _value amount of tokens from address _from to address _to .", "title": "", "metadata": ""}
{"_id": "448f158d7fb50852effdf78f64558768", "text": "Only allow the owner to set the state .", "title": "", "metadata": ""}
{"_id": "0aec9f04ee7db081b0ac0eba1837a326", "text": "approve spender when not paused .", "title": "", "metadata": ""}
{"_id": "9849fccd2cd0d4e1edc575d905145f50", "text": "this function different conversion rate while in presale .", "title": "", "metadata": ""}
{"_id": "9d5da731e7071e5e9aa35050180cccb4", "text": "Adds single address to whitelist .", "title": "", "metadata": ""}
{"_id": "4928b5619cf3d56c4e4a85270e12d8d4", "text": "Empty the jackpot participants list .", "title": "", "metadata": ""}
{"_id": "1f4ddeb73f766d0e0f873429ab560329", "text": "The fusion chamber combines both dnas and adds a generation .", "title": "", "metadata": ""}
{"_id": "c5e24ba29fee9cbb85d298a52cf25775", "text": "Transfer tradeables to user account .", "title": "", "metadata": ""}
{"_id": "74b0fe53372aab6be2ea3f4336ea5fb8", "text": "Get last 10 transactions for the day , fixed at 10 until fork .", "title": "", "metadata": ""}
{"_id": "fed9fb552311d2cd2894b967fd80b7e9", "text": "Checks how many deposits have been made .", "title": "", "metadata": ""}
{"_id": "b7f2e26794caccd2b4586c602cb6f625", "text": "called by the owner to activate emergency protected mode , triggers stopped state , to use in case of last resort , and stop even last case operations ( in case of a security compromise ) .", "title": "", "metadata": ""}
{"_id": "fcf9d2ac45200f843ff037ab662096ad", "text": "play game with setting , and a bool if you also want to create offer on the side .", "title": "", "metadata": ""}
{"_id": "0a635dcc4cb7e7fcfc44774e9a72c888", "text": "Get the timestamp of the current block .", "title": "", "metadata": ""}
{"_id": "b6910704273b8bc3c28300b4f169e048", "text": "Allows the owner to remove addresse that can bypass the transfer lock .", "title": "", "metadata": ""}
{"_id": "4ed0dc07d84945bd091c0ae1597679b2", "text": "address of Notary Platform token .", "title": "", "metadata": ""}
{"_id": "d93cbc4aac79651bfd73d16ddbf239f7", "text": "Add address to limitedWallets .", "title": "", "metadata": ""}
{"_id": "d01b1e0d1abef750daf574396dfd88c6", "text": "Do inner check .", "title": "", "metadata": ""}
{"_id": "99fff6046dce4ea2b4298f718fa0b20c", "text": "Function that allows the current owner to transfer ownership .", "title": "", "metadata": ""}
{"_id": "bd828f145b4d6b116240b1f0b270c1ed", "text": "asset total supply .", "title": "", "metadata": ""}
{"_id": "a315b655cfa278d48e0d0be68c560404", "text": "Stops the redeeming phase of the contract .", "title": "", "metadata": ""}
{"_id": "e78593a27b27e4d4fd51afac10658e05", "text": "Approves a _spender an _amount of tokens to use .", "title": "", "metadata": ""}
{"_id": "fa17164d622bd120dcb2d66156500385", "text": "Approves another address a certain amount of RED .", "title": "", "metadata": ""}
{"_id": "ce94153062b6d80e9ffff6705a7269ff", "text": "Process crowdsale contribution .", "title": "", "metadata": ""}
{"_id": "9ea478731fb191d0be48a10d2d6f7cfe", "text": "lock token of founder for periodically release _address : founder address ; _value : totoal locked token ; _round : rounds founder could withdraw ; _period : interval time between two rounds .", "title": "", "metadata": ""}
{"_id": "e9b53b698560a3ba648d1f4e562d1155", "text": "Change global operator - initially set to 0 .", "title": "", "metadata": ""}
{"_id": "39cd6f2a7f22ba978bfab09aeb27f4ee", "text": "Test - Token transfer - - Try 1 token first .", "title": "", "metadata": ""}
{"_id": "2dd9cdbbee0a45d4f499b246e8550652", "text": "Updates the minimum payment required for calling startPVP ( ) .", "title": "", "metadata": ""}
{"_id": "5ceb141afe7bf507676315a75cf69242", "text": "Allows founder to shut down the contract .", "title": "", "metadata": ""}
{"_id": "f04c1e167569dbd879c34a56c1c20ff3", "text": "Adds an approval for the specified account to spend money of the message sender up to the defined limit .", "title": "", "metadata": ""}
{"_id": "5aa97cd3457fe3ec9fefd2cb8d1b2255", "text": "Members judge steak pics , providing justification if necessary .", "title": "", "metadata": ""}
{"_id": "c9cc98b1084c3e6a32e26efeb3ced025", "text": "_safeTransfer is used internally when transfer funds safely .", "title": "", "metadata": ""}
{"_id": "0075d513cd054e3bc21f946002f6c6cb", "text": "Set time until Chibi is considered adult .", "title": "", "metadata": ""}
{"_id": "6d27065855c2fab08b73e879deedf1b0", "text": "deleteUserClaimInBulk deletes user account in bulk .", "title": "", "metadata": ""}
{"_id": "78c660738f9859e1707f2e8ba3c9c314", "text": "Unlocking the locked amount of tokens .", "title": "", "metadata": ""}
{"_id": "a7caf0a5b52d1b05f72ce473d50cea5f", "text": "releases vested tokens for the caller's own address .", "title": "", "metadata": ""}
{"_id": "83087ac6f57ba74509753da802a3f109", "text": "The function BTZ223 uses to update user info in this contract .", "title": "", "metadata": ""}
{"_id": "1d6c0347ff196b5427df3ded9389c95b", "text": "Ascend the list ( smaller keys to larger keys ) to find a valid insert position .", "title": "", "metadata": ""}
{"_id": "5d001a96edb2d5fb359db79e70b76ab5", "text": "Set the current game settings .", "title": "", "metadata": ""}
{"_id": "e3063a85a85d5fe7279ae5e182d41187", "text": "The total number of reward pool tokens that remains .", "title": "", "metadata": ""}
{"_id": "0993c3f8a2e2a8e650046d3cfaccb4da", "text": "Updates the maxContribution propety with the new _newMaxContribution value .", "title": "", "metadata": ""}
{"_id": "d140af593d0cbe795ff6484859354100", "text": "validate that the given gas price is equal to the current network gas price .", "title": "", "metadata": ""}
{"_id": "7cc373f2963490e3a91b759849af2adf", "text": "public ( read only ) : unixtime to next interest payout .", "title": "", "metadata": ""}
{"_id": "4102b9767fbe097a41b87ef2798fd254", "text": "external user can release the tokens on their own when the time comes .", "title": "", "metadata": ""}
{"_id": "8bd7e96677febffe39f93cc22826c041", "text": "buy tokens with update rate state by owner .", "title": "", "metadata": ""}
{"_id": "9b37c4bdce0cbb4c39de5f953a0368e5", "text": "Checks if a given address currently has transferApproval for a particular Player .", "title": "", "metadata": ""}
{"_id": "a788c62470f25cbbaf3d4484e08176d4", "text": "Can be called by the user only .", "title": "", "metadata": ""}
{"_id": "58daf7379114dd74b8e414ad69de6131", "text": "Generates team tokens after ICO finished .", "title": "", "metadata": ""}
{"_id": "4c9461481e01f0fcdbcb66ff28984922", "text": "Mint tokens to users .", "title": "", "metadata": ""}
{"_id": "dd4323b9bfca50fd0405fea1c79d323b", "text": "n : max number of tokens to be issued price : in szabo , e . g .", "title": "", "metadata": ""}
{"_id": "57e10ffd23ced3db20a8c61d865ea323", "text": "Modifier to make a function callable only when the address is not frozen .", "title": "", "metadata": ""}
{"_id": "4e4beb363b690d46f68211b28f5c7b64", "text": "Abstract record of a purchase to Tokens .", "title": "", "metadata": ""}
{"_id": "50d98b23f8f691f299092ae37af1ebff", "text": "set the wallet address in case of emergency .", "title": "", "metadata": ""}
{"_id": "7b62374145f4cb68cafeb4611adebe8d", "text": "Execute a request after the time for challenging it has passed .", "title": "", "metadata": ""}
{"_id": "f6b22b089c7a29ab9c33b6f401f08ad9", "text": "Reserved tokens for given amount of ether , returns reserved amount .", "title": "", "metadata": ""}
{"_id": "2b2a9521458cb1fb6d08e2163d35c3c6", "text": "getDeposit function .", "title": "", "metadata": ""}
{"_id": "7cd9c19c3c36016e2929f6fbca6fefee", "text": "Issue tokens to specified wallet .", "title": "", "metadata": ""}
{"_id": "34afd59e6d346cccd3dee0d3e61f1a4b", "text": "function to create Deed of Sale .", "title": "", "metadata": ""}
{"_id": "4e0f582f47acdf71a7a2cc491903417f", "text": "Return the list of default operators .", "title": "", "metadata": ""}
{"_id": "0a5696c0b41dfaaa07dd889c1c2e7424", "text": "Add or remove game contract , which can accept Halo3D tokens .", "title": "", "metadata": ""}
{"_id": "ea2e8f5124cab9384ad87821154f0e27", "text": "Define how many wonderful Lemon Tokens contributors will receive for participating the selfdrop .", "title": "", "metadata": ""}
{"_id": "0abaca7351c902576fcb1fdbde679a86", "text": "If manual flush attempt , the user has a chance to flush their own poo .", "title": "", "metadata": ""}
{"_id": "2099ef16e98c7d68bd47ad080e300f3a", "text": "reject transfer / transferFrom request .", "title": "", "metadata": ""}
{"_id": "0842a410d3fabe510b3d4c21d71ccedc", "text": "modifier which gives possibility to call payFiat function .", "title": "", "metadata": ""}
{"_id": "a530fe7c76ac95b9b5a1a5dda772edc8", "text": "Get the available amount left to fill for an order .", "title": "", "metadata": ""}
{"_id": "db02931176da68ade1ad228bed2f0712", "text": "Prevents a contract from calling itself , directly or indirectly .", "title": "", "metadata": ""}
{"_id": "372ccaf6c4152828263e12ade315ffbc", "text": "Tells whether the msg . sender .", "title": "", "metadata": ""}
{"_id": "3c7aec76d243d1318ebe0d2c646f1bad", "text": "Overrides parent behavior by transferring tokens from wallet .", "title": "", "metadata": ""}
{"_id": "3d38d19e9acefae4a5aae8106a53c2e9", "text": "price in ICO : first week : 1 ETH 2400 NAC second week : 1 ETH 23000 NAC 3rd week : 1 ETH 2200 NAC 4th week : 1 ETH 2100 NAC 5th week : 1 ETH 2000 NAC 6th week : 1 ETH 1900 NAC 7th week : 1 ETH 1800 NAC 8th week : 1 ETH 1700 nac time : 1517443200 : Thursday , February 1 , 2018 12 : 00 : 00 AM 1518048000 : Thursday , February 8 , 2018 12 : 00 : 00 AM 1518652800 : Thursday , February 15 , 2018 12 : 00 : 00 AM 1519257600 : Thursday , February 22 , 2018 12 : 00 : 00 AM 1519862400 : Thursday , March 1 , 2018 12 : 00 : 00 AM 1520467200 : Thursday , March 8 , 2018 12 : 00 : 00 AM 1521072000 : Thursday , March 15 , 2018 12 : 00 : 00 AM 1521676800 : Thursday , March 22 , 2018 12 : 00 : 00 AM 1522281600 : Thursday , March 29 , 2018 12 : 00 : 00 AM .", "title": "", "metadata": ""}
{"_id": "8fa54b0795cc216e141e1299d1a2d8f1", "text": "server integration methods .", "title": "", "metadata": ""}
{"_id": "9f8338bf2bd2b395efb9cf88316278ee", "text": "Called by the owner to unpause , returns to normal state .", "title": "", "metadata": ""}
{"_id": "07f0abed2d8340b659165b1a2a2661eb", "text": "Get the remaining allowance for a spender on a given address .", "title": "", "metadata": ""}
{"_id": "b02e5f662cfe632cd977c39059b9e4a8", "text": "Set the number of tokens which an investor can purchase at presale rate .", "title": "", "metadata": ""}
{"_id": "088a1bf6fff85e5af935bc8dbb4720a0", "text": "administrators can : - change the name of the contract - change the name of the token - set new administrator - change the PoS difficulty ( How many tokens it costs to hold a referral , in case it gets crazy high later ) they CANNOT : - take funds - disable withdrawals - kill the contract - change the price of tokens .", "title": "", "metadata": ""}
{"_id": "75ceb2c0a21ac7507f3a365778cc3e3c", "text": "Pause Ico .", "title": "", "metadata": ""}
{"_id": "bffb355bf6bbe5f2648ad92c1fe8df24", "text": "obtain , for a given rootHash , the definitive immutable stored _ipfsAddress .", "title": "", "metadata": ""}
{"_id": "f87f55452beba5687ab987e3e4d262ea", "text": "Token Creator - This function is called by the factory contract and creates new tokens for the user .", "title": "", "metadata": ""}
{"_id": "66db6e395adcc930f00c839903dd6da9", "text": "withdraw ETH for teller escrow .", "title": "", "metadata": ""}
{"_id": "b148565742cc3e65f4b08052b339074a", "text": "Sets the message sender as the winner if they have completed the hunt .", "title": "", "metadata": ""}
{"_id": "1c3cafa056169cbddeaabfb03d2bdf4d", "text": "Revoke KYC verification from the person .", "title": "", "metadata": ""}
{"_id": "caff08ac460f54b9a13f427a445a0840", "text": "User Management API .", "title": "", "metadata": ""}
{"_id": "0abc6169e0c92b4da060323a20b34de1", "text": "Returns the number of Properties owned by a specific address .", "title": "", "metadata": ""}
{"_id": "b67ce804f9a1656f3a57f59d5ef836cb", "text": "Put a warrior up for auction .", "title": "", "metadata": ""}
{"_id": "c07681b00d5357b545cbc6210155fa00", "text": "Assigns ownership of a specific meme to an address .", "title": "", "metadata": ""}
{"_id": "1ffb8dedf87e486ab0abd4d1a6dcbea5", "text": "returns 20 lock products starting from some offset lock products are encoded as perTermInterest , durationInSecs , minimumLockAmount , maxLockAmount , isActive .", "title": "", "metadata": ""}
{"_id": "eeb426cb26153766507268dcbcf6ea37", "text": "Return time when next game will start .", "title": "", "metadata": ""}
{"_id": "634d38d5fab01dedb3313c3632808d47", "text": "You might wanna check if the cap has been reached before doing anything .", "title": "", "metadata": ""}
{"_id": "ed64bc00cc56110038480b3a18b6aa04", "text": "Buy a estate directly from the contract for the calculated price which ensures that the owner gets a profit .", "title": "", "metadata": ""}
{"_id": "87f5875ebdda8515512213a9e1cfdd14", "text": "function for Daonomic UI .", "title": "", "metadata": ""}
{"_id": "5c66004e2733b3c7f5c618649b3039e3", "text": "Disables further use of privileged functions : setSale , thaw .", "title": "", "metadata": ""}
{"_id": "23739071ab2c23043d0ad2e2c3109395", "text": "Adjust the difficulty .", "title": "", "metadata": ""}
{"_id": "506899ca356588ca0046612821b2f8c0", "text": "Throws if called by any account other than the pauseMaster .", "title": "", "metadata": ""}
{"_id": "9b8925f6799a7cbd8e05216dd4eef852", "text": "buy an area of pixels , left to right , top to bottom .", "title": "", "metadata": ""}
{"_id": "e4a05ff5bf0122a00da6f68736cab52c", "text": "Allows future extensibility ( New card mutations + Workshop updates ) .", "title": "", "metadata": ""}
{"_id": "39550d6ed5e01c5a14eda7b7ae0b41b5", "text": "transfer to owner any tokens sent here by mistake .", "title": "", "metadata": ""}
{"_id": "cfbff07201cf32fdd51cce6021da0fd3", "text": "Approve a given address to take ownership of a deed .", "title": "", "metadata": ""}
{"_id": "19e40ee0b4f05f50077229d91ceccad0", "text": "return an array of address of all zone present on a zone zone is a mapping COUNTRY POSTALCODE .", "title": "", "metadata": ""}
{"_id": "e1e943e5a325ed72739606a07f075587", "text": "restrict usage to only the owner .", "title": "", "metadata": ""}
{"_id": "467e2f33f6c031bebb254108fbedeb18", "text": "function for deposit ether to token address as / for dividends .", "title": "", "metadata": ""}
{"_id": "40703a2089409be3778824e82f20c610", "text": "bonus based on the current time .", "title": "", "metadata": ""}
{"_id": "15a7df8b644b5836ddbba6215ec1bda0", "text": "Returns the current Lif per Eth rate during the TGE .", "title": "", "metadata": ""}
{"_id": "2863a57b770642ebcf8920a70c0a9e3e", "text": "Check SaleActive .", "title": "", "metadata": ""}
{"_id": "c69bce11842a009761ad7e0c66a64859", "text": "ensures that the contract is only open to the public when the founders are ready for it to be .", "title": "", "metadata": ""}
{"_id": "17d1f109c14b1ed850dc6c0eb4242891", "text": "Pay 0 . 00025 eth to map your address to a guess .", "title": "", "metadata": ""}
{"_id": "d0c5f9feca5d84543d01326dcd867867", "text": "Main token puchase function .", "title": "", "metadata": ""}
{"_id": "2d808a8c9161a759ecfb52c21b41dda7", "text": "Allows to destroy the contract and return the tokens to the owner .", "title": "", "metadata": ""}
{"_id": "27b301e3de25756d445073c321ba2d49", "text": "Implementation of the standard transfer method that takes into account the finalize flag .", "title": "", "metadata": ""}
{"_id": "c53011e4f6c319d0d1ad2cb3d8dc851f", "text": "Increases circulatingSupply_ by specified amount .", "title": "", "metadata": ""}
{"_id": "0a112903742c27e3c548fb59b7a14e1f", "text": "Internal transfer , can be called by this contract only .", "title": "", "metadata": ""}
{"_id": "56d66717e8903a03e1bd1001ef992963", "text": "Reject all ERC23 compatible tokens param from_ address The address that is transferring the tokens param value_ uint256 the amount of the specified token param data_ Bytes The data passed from the caller .", "title": "", "metadata": ""}
{"_id": "218880b71a5e44e6f2cbd93f418f137d", "text": "Modifier to make a function callable only during the sale .", "title": "", "metadata": ""}
{"_id": "d8f1a19dc44105917ff64fe756f3b442", "text": "function preSaleTokens - Calculate Tokens in PreSale .", "title": "", "metadata": ""}
{"_id": "1cca53156a0070a0f2ef3085c5342b8a", "text": "pre-ICO bonus .", "title": "", "metadata": ""}
{"_id": "8fc5bb97cfd7822fa81516788c6dff20", "text": "Burn away the specified amount of SkinCoin tokens .", "title": "", "metadata": ""}
{"_id": "62f08a2850dbce279aa03622e4193ca0", "text": "Throws if called by any account other than the foundation board .", "title": "", "metadata": ""}
{"_id": "d9f895c557a947a958f1b013aeeea290", "text": "sets the global reputation reward share allotted to the authors and manufacturers .", "title": "", "metadata": ""}
{"_id": "22c9e515413619efd2169a90a6383258", "text": "Seller can refund the buyer at any time .", "title": "", "metadata": ""}
{"_id": "a88ef9bcc7521bb33bef6000661b0e05", "text": "Bonus Stage One state .", "title": "", "metadata": ""}
{"_id": "8621b1c55e867e94cf55d12faa9e2f7d", "text": "Only allow the peer purchasing services to execute a contract function .", "title": "", "metadata": ""}
{"_id": "9bb029ed4878be2176056cc2710a4e47", "text": "Allows only contract owner or Multisig to proceed .", "title": "", "metadata": ""}
{"_id": "c3d3f2030f773c40a1dfa243f17baef0", "text": "payout function to dev .", "title": "", "metadata": ""}
{"_id": "3877285b1793734e8112d8d297721e5a", "text": "Transfer issued tokens to the investor .", "title": "", "metadata": ""}
{"_id": "d4ced2d9c0245abb4d5db4fef0b75087", "text": "modifier to allow actions only when the refund IS NOT paused .", "title": "", "metadata": ""}
{"_id": "e1c164143ab1e0e411e7f275d05b3339", "text": "create exchange .", "title": "", "metadata": ""}
{"_id": "9b2f04749e4967ed9385737b42117d30", "text": "Accumulate the purchased tokens to the total raised .", "title": "", "metadata": ""}
{"_id": "c53234edd940b2e55f644faf09287891", "text": "Main contract function .", "title": "", "metadata": ""}
{"_id": "0aba504c34622b5f04c225df330a88b1", "text": "This is a simple getter function that will be used to return the address that the WHG will return the funds to .", "title": "", "metadata": ""}
{"_id": "d4960049f1759a41736dcf05972e102c", "text": "Block / Unlock address handling tokens .", "title": "", "metadata": ""}
{"_id": "ee754354de60488af4c9426eb478683a", "text": "Setting the reservingPercentage value , allowed only for owner .", "title": "", "metadata": ""}
{"_id": "cbc78ae0807738b8ebaf9f6df75a3e24", "text": "override purchase validation to add extra value logic .", "title": "", "metadata": ""}
{"_id": "8ca3351bc9347af0baa32f3e1d5b2d6b", "text": "modify Base exchange rate .", "title": "", "metadata": ""}
{"_id": "7bde2485ff15c2b880c77a53aa4d148b", "text": "Used to reference a loan that is not yet created , and by that does not have an index .", "title": "", "metadata": ""}
{"_id": "8af6d5e5352069d4e3509baccead34fb", "text": "Add token exchange bonus rate .", "title": "", "metadata": ""}
{"_id": "c430b94140715e5b613473b4f1de02a7", "text": "Calls winningProposal ( ) function to get the index of the winner contained in the proposals array and then returns the name of the winner .", "title": "", "metadata": ""}
{"_id": "53bc91e579093123f078c422b43e15d8", "text": "Creates a new promotional Masterpiece with the given name , artist , starting price , and owner .", "title": "", "metadata": ""}
{"_id": "c9584fb5df72b629f7702f1ed83dbc14", "text": "Function pay wrapper auto share balance .", "title": "", "metadata": ""}
{"_id": "98018f07a3d872e1132000b038cac021", "text": "Allows the current owner to transfer the signer of the contract to a newSigner .", "title": "", "metadata": ""}
{"_id": "9b866618a5146385096dc786adac4f93", "text": "Contatenates two strings .", "title": "", "metadata": ""}
{"_id": "1538dbf8e13d655f437f7bc29e206219", "text": "Check if the pre ICO goal was reached .", "title": "", "metadata": ""}
{"_id": "08c06af35afa049851d48eb7f91335a1", "text": "eGoldchain - Modified the correct technical term mint to a well know term mine for marketing purposes .", "title": "", "metadata": ""}
{"_id": "097c11054d8f183aabbe2d578bbc83b8", "text": "For checking approval of transfer for address _to .", "title": "", "metadata": ""}
{"_id": "fd251bda5f9a0e387aad8f4b9ca1bf57", "text": "These helper functions are exposed for changing the website dynamically .", "title": "", "metadata": ""}
{"_id": "a898ec571ee519f32686390dfea4f3cb", "text": "Set the address of the token contract .", "title": "", "metadata": ""}
{"_id": "744c9ded26c02b8842f7257f3c6805fa", "text": "Get functing info of user / address .", "title": "", "metadata": ""}
{"_id": "8a327934d423b70c201d2bc8db9feeb6", "text": "Fund contract .", "title": "", "metadata": ""}
{"_id": "8108710b238af839d6437651b9c33f7f", "text": "Get elo rating of a player .", "title": "", "metadata": ""}
{"_id": "f0bfc03383138938083bb9c720f1ba29", "text": "data is an array of uints .", "title": "", "metadata": ""}
{"_id": "a76986848bab4364865998b6249bbb68", "text": "Initialize all delete methods .", "title": "", "metadata": ""}
{"_id": "71a560c22f92d62db8cb5b1e6f414705", "text": "Calculates amount of weis needed to buy more than one token .", "title": "", "metadata": ""}
{"_id": "e6b7fa741adee5aacd9d81ab353f887a", "text": "Issue loan if LTD stays within range allowed by LTD params .", "title": "", "metadata": ""}
{"_id": "5dbfd8335ad22dc10cac5c9647ac6154", "text": "Register ZTKCheck to the chain .", "title": "", "metadata": ""}
{"_id": "2f8ad521fde8347a490af142274b295c", "text": "To set the address of the crowdsale in order to distribute the tokens .", "title": "", "metadata": ""}
{"_id": "5fc27a9c1bc28c44f3522cff6d3967f3", "text": "First , we check to see if the tokens are ZTH tokens .", "title": "", "metadata": ""}
{"_id": "a4f93f284f79bab7a56fd8ebed69efc7", "text": "release storaged data , to save gas fee .", "title": "", "metadata": ""}
{"_id": "9fe1eab76587151e8cf3923695210e99", "text": "Reverses a previous inject command .", "title": "", "metadata": ""}
{"_id": "74c9c2411830bc9c74bd36d1f31c39c5", "text": "allow refund when ICO failed .", "title": "", "metadata": ""}
{"_id": "52631b41d8b3f4759510aead77bba4ea", "text": "Transfer the balance from owner 39 ; s account to another account .", "title": "", "metadata": ""}
{"_id": "3aa5980315a1daaeab42bba31c4a7894", "text": "Can disable / enable contract .", "title": "", "metadata": ""}
{"_id": "094c2f5d5e65dcf225799e9f5a612808", "text": "Transfers ETH according to the data held within the specified payment id ( internal function ) .", "title": "", "metadata": ""}
{"_id": "f840211c920d43905987ca3040fa3a42", "text": "getNumFulfillments ( ) returns the number of fulfillments for a given milestone .", "title": "", "metadata": ""}
{"_id": "5ab9d0db395d7b049a190b30f5cc0df2", "text": "Manual sending tokens .", "title": "", "metadata": ""}
{"_id": "e2762848a812cacee474ae7af56fcaec", "text": "Allows a user to get her current discount / rebate .", "title": "", "metadata": ""}
{"_id": "2b24010186f3a19ddd695a289e9800d9", "text": "That function handles cancel state .", "title": "", "metadata": ""}
{"_id": "f527df6e5be90e3ebcdd5beab05da159", "text": "Borrow from the bank on behalf of an arbitrage contract and execute the arbitrage contract's callback function .", "title": "", "metadata": ""}
{"_id": "bcaec549065101f7a3d229d1ee388362", "text": "Allow a user to contribute to the crowdsale .", "title": "", "metadata": ""}
{"_id": "40d68ce5b0635f2a29eee68703bc50d7", "text": "Extract a bytes32 subarray from an arbitrary length bytes array .", "title": "", "metadata": ""}
{"_id": "53a81d0bb864e12e700cbbb3d9664aaf", "text": "Requires the token sale to have closed .", "title": "", "metadata": ""}
{"_id": "59357c6455d3c27707034d1e9fb11630", "text": "Owner can allow transfers for a particular address .", "title": "", "metadata": ""}
{"_id": "33059498385a4201fd88631c734c6436", "text": "Asserts crowdsale goal is reached .", "title": "", "metadata": ""}
{"_id": "2b78413663df51251ec4a2f8e6149e07", "text": "After calling the deploy function the proxy's rules become immutable .", "title": "", "metadata": ""}
{"_id": "fb60ec34a835a156a549551f8af16f7e", "text": "removeFrozenTokenConfigurations function allows the owner of the smart contract to remove all frostbites , frozenbalances and defrosting rates of an array of recipient addresses 50 .", "title": "", "metadata": ""}
{"_id": "edba2f26b7e6468b312674ddc5c2c860", "text": "Function to update the recipent address .", "title": "", "metadata": ""}
{"_id": "32481fd4018bdc5d1b236ec20bb3b6db", "text": "Checks whether the Goal is Reached .", "title": "", "metadata": ""}
{"_id": "21fc939570c1557ab754ff6836d1b0f6", "text": "Burn MITs from Users .", "title": "", "metadata": ""}
{"_id": "ed68ff01ed4027e964f7268f5dde8b85", "text": "Mint a specific amount of tokens , paying the service fee .", "title": "", "metadata": ""}
{"_id": "e5da434afac4f9a6fefa0ec4a76ffabe", "text": "Transfers tokens from a specified wallet address .", "title": "", "metadata": ""}
{"_id": "6870e5736f8783699b313a97937f9f1b", "text": "helps to recover stucked tokens .", "title": "", "metadata": ""}
{"_id": "2bb49e5ff49a96c28882b3cdd8870bfd", "text": "this function cancels a favor request on behalf of the requester only possible as long as no provider accepted the contract or 12 hours after the deadline if the provider did not indicate completion or disputed .", "title": "", "metadata": ""}
{"_id": "d3818fb7023f30788a7c4f3d3316dd98", "text": "count tokens i could buy now .", "title": "", "metadata": ""}
{"_id": "3ef8136f0fc41cfff8d7684c767e7066", "text": "Set KYC status as failed .", "title": "", "metadata": ""}
{"_id": "58f640bb4ac516bea064f925c5690c67", "text": "Return price of LibreOracle request .", "title": "", "metadata": ""}
{"_id": "07977cd7b1fc4c12804b2a3ab895ac24", "text": "Changes the current whitelister .", "title": "", "metadata": ""}
{"_id": "f7cb196ba5d79f405746fb20a26e584f", "text": "empty the crowdsale contract and forward balance to beneficiary .", "title": "", "metadata": ""}
{"_id": "d147295572a9470125baef10e1167c41", "text": "Returns the amount of kitty actions available .", "title": "", "metadata": ""}
{"_id": "aece4106737df4d356834d15458217f5", "text": "Allows the curator to hand over curation responsibilities to someone else .", "title": "", "metadata": ""}
{"_id": "23d53eb576a56df019fdac04b7046b06", "text": "Transfers balance from _from to _to if _to has sufficient balance .", "title": "", "metadata": ""}
{"_id": "7e0f0205d61f6f22d4a4c9102ffc703d", "text": "Function to lock token transfers .", "title": "", "metadata": ""}
{"_id": "d3208e2c419a94705ea1271b5a4b08ec", "text": "Undermine support for a component .", "title": "", "metadata": ""}
{"_id": "cab8383def72f13c91ef4a6a956278a3", "text": "Assigns ownership of a specific Avatar to an address .", "title": "", "metadata": ""}
{"_id": "5f33db27c624afacf12f22050e94b51b", "text": "Update the minimum required owner for transaction validation .", "title": "", "metadata": ""}
{"_id": "0ce770ef57b0a00d6f6cd89ee12811cc", "text": "withdraws tokens held by the token and sends them to an account can only be called by the owner .", "title": "", "metadata": ""}
{"_id": "44d632e9144e4578ca859248e4a38237", "text": "before send NAC to subround controller need active subround .", "title": "", "metadata": ""}
{"_id": "e74fed678bf3b05b6e204c8660704479", "text": "Implementation for transferring BOP to provided address .", "title": "", "metadata": ""}
{"_id": "644c2f91abad6b62aa9db23ece9c602a", "text": "Equipment destruction .", "title": "", "metadata": ""}
{"_id": "f9dc7f6629bb71e92ad8fc586ed3d764", "text": "This function will return only the winner's hero id .", "title": "", "metadata": ""}
{"_id": "e523db4a422d4f5f90409a142b9047ff", "text": "function to change the owner share on mating transactions can only be called from owner wallet .", "title": "", "metadata": ""}
{"_id": "24cdf9edc0a250518473416f77338aad", "text": "finishPVE can be called after battle time is over , if checks are passed then battle result is computed , and new warrior is awarded to owner of specified _warriord ID .", "title": "", "metadata": ""}
{"_id": "f144c423aa69d14db1e96b331896d167", "text": "drain all eth and tokens to owner in an emergency situation .", "title": "", "metadata": ""}
{"_id": "4ca6378c86b35cc172cec2c217a6e3a6", "text": "creates a unique key from all variables .", "title": "", "metadata": ""}
{"_id": "eaa31faf75ba957cf1046649de15a55d", "text": "Function used by currency contracts to accept a request in the Core .", "title": "", "metadata": ""}
{"_id": "1d1f39badda1eb29a977eb145ce679d8", "text": "Distribute sale eth input .", "title": "", "metadata": ""}
{"_id": "d7e539eb0b689efb445cfed105c9cb44", "text": "Burn the tokens .", "title": "", "metadata": ""}
{"_id": "e5b000d3f0964625795890a7e4b13c50", "text": "guard interval finished ? .", "title": "", "metadata": ""}
{"_id": "a13626d2e91d97cbb9ceeb7420efc3d8", "text": "Only owner or coOwner .", "title": "", "metadata": ""}
{"_id": "61e2088cb3fa220e05ad7c9143801e12", "text": "Finish sale after sale period ended .", "title": "", "metadata": ""}
{"_id": "b4a9adf7bb06bfcc8010a0250c74dbfa", "text": "move Eth to team eth time-locked contract .", "title": "", "metadata": ""}
{"_id": "41b56098813200ab2ceb96867ba1c8ab", "text": "Allow crowdsale owner to change hard cap in pre funding stage .", "title": "", "metadata": ""}
{"_id": "59a1ff0bb789e953eabd412763845695", "text": "called by the cause to reveal their message after the end time but before the end ( ) function .", "title": "", "metadata": ""}
{"_id": "a79760acdfdc20f85dc8fd446238d2d6", "text": "Allow users to buy tokens for _buyExchangeRate eth and sell tokens for _sellExchangeRate eth .", "title": "", "metadata": ""}
{"_id": "bcbdc32bd038d24d7d3d04aae9d081ba", "text": "end payout related functions start ERC20 overrides same as ERC20 transfer other than settling unclaimed payouts .", "title": "", "metadata": ""}
{"_id": "1d7fdc6258894133e1b9cea3b0a7d7dd", "text": "returns crowdsale max funding in Eth , low res .", "title": "", "metadata": ""}
{"_id": "e4b849fca8f27ef9812a92de2439ead3", "text": "Implements ERC20 balanceOf ( ) .", "title": "", "metadata": ""}
{"_id": "85f7a8661c886a3b99744ec47b2b7eef", "text": "Update a single country payout for transfers .", "title": "", "metadata": ""}
{"_id": "da5aac75889babc0d927bc08d3e5e409", "text": "Bonus calculations .", "title": "", "metadata": ""}
{"_id": "8b6c67c2ed63825a991c33bee60eba5d", "text": "Stores the number of addresses for which tokens are reserved .", "title": "", "metadata": ""}
{"_id": "9daa1a5492bf3fc7776cd42cc8d24ab4", "text": "Returns token balance of user .", "title": "", "metadata": ""}
{"_id": "770f0d3d78b51fd7c2d139b12a66e0f3", "text": "Burn the investor tokens , if provided by the ICO scenario .", "title": "", "metadata": ""}
{"_id": "d52ea6ea59d473955638e4b3830a68ea", "text": "Returns number of allowed tokens for given address .", "title": "", "metadata": ""}
{"_id": "8d9c0a8bd6bef5689cf2ebb88ac66230", "text": "Distribute tokens from owner address to another .", "title": "", "metadata": ""}
{"_id": "63a13b18272272a7d3ad168a66e81317", "text": "Disable transfering tokens more than allowed amount from certain account .", "title": "", "metadata": ""}
{"_id": "e6af598fe7806926f43ddadf1a37e6fa", "text": "Check is user registered .", "title": "", "metadata": ""}
{"_id": "35e1d50fb8b1c675e157d9f258ddecb9", "text": "Creates a Delegate Admin with the msg . sender .", "title": "", "metadata": ""}
{"_id": "ee24e88a4a3b8788b4f03d3b4433b886", "text": "Buy a team directly from the contract for the calculated price which ensures that the owner gets a profit .", "title": "", "metadata": ""}
{"_id": "ec6ecbd1b4d32c9d76c038137bc9a346", "text": "init logo , call it as soon as possible call it after setting platform in the token .", "title": "", "metadata": ""}
{"_id": "c1e344a7322d8dd004a2f74c7f050796", "text": "Function returns bool re whether or not address in question has claimed promo LOT for the week in question .", "title": "", "metadata": ""}
{"_id": "5e11fea1a7cde15e27b498185dead837", "text": "Utility function , which acts the same as approve ( . . . ) .", "title": "", "metadata": ""}
{"_id": "cac669c0ea600a7ccc925817b8440c77", "text": "This sets member's liability status , either to limited liability , or unlimited liability .", "title": "", "metadata": ""}
{"_id": "b2138601a2555edd4bd70aaeef9f3e96", "text": "validates a token address - verifies that the address belongs to one of the convertible tokens .", "title": "", "metadata": ""}
{"_id": "9abf7d5884933bbcbc2d44c8a85d795a", "text": "returns CHUNK_SIZE locks starting from some offset lock products are encoded as lockId , owner , amountLocked , interestEarned , lockedUntil , perTermInterest , durationInSecs , isActive .", "title": "", "metadata": ""}
{"_id": "15ce1585ceb785518f3ca4f72c59ca83", "text": "for special event .", "title": "", "metadata": ""}
{"_id": "698d02d9c4231d057eef51fb2797d6fa", "text": "Allows a user to start an application .", "title": "", "metadata": ""}
{"_id": "32c15a54daeca05967a8bd26b6617282", "text": "Set Telegram .", "title": "", "metadata": ""}
{"_id": "33878cbc45699f53e755aadec2ebf375", "text": "Add multiple addresses to white list to allow purchase for more than 10 ETH .", "title": "", "metadata": ""}
{"_id": "de261042e9ae881621b1efa65ef5e8fb", "text": "Locked tokens cannot be withdrawn using the withdrawTokens function .", "title": "", "metadata": ""}
{"_id": "9f30ae6f46e0ccb746782af223973302", "text": "Deploy Genaro Network contract .", "title": "", "metadata": ""}
{"_id": "41e2fb7e0217d52fb2ec14a55e79a94c", "text": "override StandardToken transferFrom ensures that minting has finished or the message sender is the token owner .", "title": "", "metadata": ""}
{"_id": "e684daefaf78deb19a4cd216eb27332b", "text": "change API wallet address - for security reasons .", "title": "", "metadata": ""}
{"_id": "7f77f8ce83fa8e33c7aeb5a7bfe17825", "text": "Only who is allowed to whitelist the participant ETH addresses ( specified during the contract deployment ) .", "title": "", "metadata": ""}
{"_id": "48f0cce21f1c0256767d2602adc80622", "text": "Function transferToken works to transfer tokens to the specified address on the call of owner within the crowdsale timestamp .", "title": "", "metadata": ""}
{"_id": "7253356d56c0ad858d3ff9ac3ee6d9b7", "text": "external functions proving .", "title": "", "metadata": ""}
{"_id": "c148c1c1366a362f78c2dc3690edd74d", "text": "is Contract .", "title": "", "metadata": ""}
{"_id": "d7d6415594c301e75ec1b723617106a1", "text": "Get address of a payee .", "title": "", "metadata": ""}
{"_id": "31e276451c5cccffd896fa248ec4a2c7", "text": "ERC20 support .", "title": "", "metadata": ""}
{"_id": "651d22e29c5fb31c04dad97c1848b4e5", "text": "Set the new timelock for refund reuqests .", "title": "", "metadata": ""}
{"_id": "2bbfb3ac2bb16d85fd7b9c6463d6a328", "text": "This function will not throw in case the interval update is exceeded , in this way the latest update made to the ETH / USD rate is kept .", "title": "", "metadata": ""}
{"_id": "0f53104cde85223120e6d44118ccc8df", "text": "Convert string to bytes32 .", "title": "", "metadata": ""}
{"_id": "8b68aa09375b80cc980ceb231302afd8", "text": "Look up for the minter role on providen address .", "title": "", "metadata": ""}
{"_id": "e1d2e62bf322c9093fc132aae02aef8f", "text": "UI helper fx - Returns scripts from offset as scriptId ( index in scriptAddresses ) , address as uint , state , signCount .", "title": "", "metadata": ""}
{"_id": "bd36b9e43c95810577e5b8c0f1eb90e2", "text": "approve send token .", "title": "", "metadata": ""}
{"_id": "fa950c4e318ece3a8bc3834e4a2f3c17", "text": "allow only new calls to go in .", "title": "", "metadata": ""}
{"_id": "71dacad7b334eadbbcae9e3d079102a6", "text": "first function sets up a new campaign .", "title": "", "metadata": ""}
{"_id": "88d58fc190fadae7904405b8bdd217ca", "text": "true if the presale has raised enough money to be a successful .", "title": "", "metadata": ""}
{"_id": "cd668ef55e62943fc1da7915a902fb7b", "text": "Function to check the current Tokens Sold in the ICO .", "title": "", "metadata": ""}
{"_id": "85198fe0d5eab8b33733025c03128d94", "text": "convinient function for read token's owner .", "title": "", "metadata": ""}
{"_id": "47ee8e85955e08efd50b03297d3c8a17", "text": "lps per ref .", "title": "", "metadata": ""}
{"_id": "0bf8dedb3b9b8a7304d9215bb872a7a5", "text": "Allow user to sell maximum possible amount of tokens , depend on ether amount on contract .", "title": "", "metadata": ""}
{"_id": "e50f2ee6b4209b5cec751b3c8ab77d5a", "text": "Extend Crowdsale .", "title": "", "metadata": ""}
{"_id": "3331e4e292b20c69db33dd08af01b200", "text": "Purchasing tokens is only allowed for Presale and ICO contract states .", "title": "", "metadata": ""}
{"_id": "04e27936950b2791f27b3cdb7dee7a40", "text": "Server can withdraw tokens to user .", "title": "", "metadata": ""}
{"_id": "3d62fb3eea014742b19f2eb54414b75f", "text": "update owner .", "title": "", "metadata": ""}
{"_id": "e9bb6ae31d5c64b3c9187bf447c3355d", "text": "Revoke permission to mint tokens from a mint delegate .", "title": "", "metadata": ""}
{"_id": "719a8ee66efb24a13d33f5e001e2df31", "text": "Allows the owner to specify the conversion rate for ETH - tokens .", "title": "", "metadata": ""}
{"_id": "90d8719afab9d6375d221908da25540a", "text": "get lockPosition info .", "title": "", "metadata": ""}
{"_id": "06d7bcdc02bf7b1136b58ee2f8f7098e", "text": "Calculate the halving hash rate of a miner .", "title": "", "metadata": ""}
{"_id": "1936f6c72cd3a5cf9cceaf96ffd6b541", "text": "Adds authority to execute several functions to subOwner .", "title": "", "metadata": ""}
{"_id": "7dc31b1d9ae003fb98a80606107fab3b", "text": "Returns token's decimals .", "title": "", "metadata": ""}
{"_id": "a5a91d41a65f22cca5014ad32bd06b99", "text": "Either buyer or seller can raise escalation with escrow agent .", "title": "", "metadata": ""}
{"_id": "327a2e9ec2519766da472a3e06416627", "text": "Register pending contribution .", "title": "", "metadata": ""}
{"_id": "8aaa664f7dcb6209fa407b4857ab5a13", "text": "Set current ethPreAmount price in wei for one token .", "title": "", "metadata": ""}
{"_id": "e8682b3f3152adaf342033f7aa02804e", "text": "ERC20 backwards compatible approve .", "title": "", "metadata": ""}
{"_id": "26c60c759ac5d8388c212e43669c3193", "text": "Set previous dungeon .", "title": "", "metadata": ""}
{"_id": "6f9c93e135c7945b8242228f7dd841e5", "text": "input a mixture of a token and ether , recieve the output token .", "title": "", "metadata": ""}
{"_id": "23df9ae9e10b2b3bf6d77238c9258d96", "text": "Returns 1 . 00 .", "title": "", "metadata": ""}
{"_id": "b0859ee93a12e129f036037ab09b8055", "text": "Change the the ending time in order to be able to finalize the crowdsale if needed .", "title": "", "metadata": ""}
{"_id": "89d27349f93399d7bc52dba4831326f7", "text": "calc the balance that the user shuold hold .", "title": "", "metadata": ""}
{"_id": "746a68187158ca828dfe10fb5e746174", "text": "Set the new min purchase value .", "title": "", "metadata": ""}
{"_id": "a6703b670c65a68c4a611b5bb9540383", "text": "Getter for voteCount in VoteCounter .", "title": "", "metadata": ""}
{"_id": "70a31dc95e76ccb8538d673604d13486", "text": "returns the number of tokens that are not promised or locked .", "title": "", "metadata": ""}
{"_id": "7cb2ed5907e17650d6f36ce32cf1350c", "text": "constructor function for cloned factory .", "title": "", "metadata": ""}
{"_id": "cf6054d689f4cf712d9fc360609c5f58", "text": "Resumes the presale .", "title": "", "metadata": ""}
{"_id": "912b895ba0283b1a304c6bcd120a5b38", "text": "Finalize a succcesful crowdfunding .", "title": "", "metadata": ""}
{"_id": "af1481a41c660e91449cd003bfad871b", "text": "Is the _spender allowed to spend on the behalf of the _owner ? .", "title": "", "metadata": ""}
{"_id": "9198fed354c27794e4e03611e3442366", "text": "Allows enabling of blocking of transfer for all users .", "title": "", "metadata": ""}
{"_id": "1597143c9b3d7ca546013e77372a0243", "text": "grant developer tokens , equal to a percentage of purchased tokens .", "title": "", "metadata": ""}
{"_id": "a449d78e6a3e8708f165f01f6665d53c", "text": "Signals that there will be no more public sales .", "title": "", "metadata": ""}
{"_id": "0dee2f071edbc0c63c7849f3ba34aae5", "text": "refundPayment used in case order cannot be processed .", "title": "", "metadata": ""}
{"_id": "c5f6887091705aa3863bbd382da6b8b2", "text": "Mint new coins by sending ether .", "title": "", "metadata": ""}
{"_id": "c1c1c9701a075cd423cf154171fc037f", "text": "Get the total volume to be sold in the current tranche or bail out if we are not in the tranche periods .", "title": "", "metadata": ""}
{"_id": "7f3e39bb6dabc22017eebb21bcd8c8a1", "text": "checks if a token is an existing token by checking if it has non-zero layers .", "title": "", "metadata": ""}
{"_id": "924170480a9005bf38857c9ec3b8086a", "text": "calculates total amount of points for a token .", "title": "", "metadata": ""}
{"_id": "eade156772354edd800fb293081cade3", "text": "Returns the amount of tokens one has allowed another to spend on his or her behalf .", "title": "", "metadata": ""}
{"_id": "1eb43ad682dce6b6d32175814fb110bc", "text": "A uint representing the total amount of grants .", "title": "", "metadata": ""}
{"_id": "f69e39977ef794a3f13a36dfef7c2021", "text": "Pay back the ether contributed to the DAO .", "title": "", "metadata": ""}
{"_id": "2d428a3eb1cbfb58a19fec48ca02ed43", "text": "function to invest in the crowdsale only callable if the crowdsale started and hasn't been closed already and the maxGoal wasn't reached yet .", "title": "", "metadata": ""}
{"_id": "538a0ba092d6b5afc5c6d848a1286881", "text": "change creator address .", "title": "", "metadata": ""}
{"_id": "24b3f2db91f6a3df67138395581b6767", "text": "Calculates and transfers the rewards to the player .", "title": "", "metadata": ""}
{"_id": "1eccc56083564b1c0ddd35af23093f6b", "text": "ERC20 allow _spender to withdraw , multiple times , up to the _value amount .", "title": "", "metadata": ""}
{"_id": "d4599c2d93ef4637b84b0d1f3ff0f6ea", "text": "Make sure max tokens is not exceeded with added contribution .", "title": "", "metadata": ""}
{"_id": "313b9379b6e231a63651d8463bda5c9b", "text": "changes the ethereum wallet for a manufacturer used in reputation rewards .", "title": "", "metadata": ""}
{"_id": "a43a2d0812da97ef0cdbb58fa25e7912", "text": "Register _observer as an observer .", "title": "", "metadata": ""}
{"_id": "284775a3b4fcb259910ca066f71d8f95", "text": "address of NTRY tokens owner .", "title": "", "metadata": ""}
{"_id": "a22c889a267065eb1b17c839666027ce", "text": "Process UFT contribution .", "title": "", "metadata": ""}
{"_id": "3113717e2e382c1ae5b29b646b405165", "text": "This callable function returns the balance , contribution cap , and remaining available balance of any contributor .", "title": "", "metadata": ""}
{"_id": "f755a04b72a749d26f4511925f78d929", "text": "stop the crowd sale .", "title": "", "metadata": ""}
{"_id": "4b62523d11e0fb79fba398b724d570b5", "text": "stop transfers .", "title": "", "metadata": ""}
{"_id": "f4f2a9654fa7cbf025e6caa4a7a26b67", "text": "Raffle for rare items .", "title": "", "metadata": ""}
{"_id": "df5f48f58b190bc3d423b475f115bb37", "text": "Assigns ownership of a specific city to an address .", "title": "", "metadata": ""}
{"_id": "0fddeb5d3e195045a03fa375d45976b0", "text": "Get current relative day of week ( 0-6 ) .", "title": "", "metadata": ""}
{"_id": "2a25f919a3ef4029c435558f4cc25bb6", "text": "Transfer the value of an escrow , minus the fees , minus the gas costs incurred by relay .", "title": "", "metadata": ""}
{"_id": "a2857b81d928164dfaa19df586d20fa7", "text": "Offer canvas for sale for a minimal price .", "title": "", "metadata": ""}
{"_id": "e40fbf4feeabd1eb711320ac903a04b6", "text": "Method called by participants to unlock and transfer their funds .", "title": "", "metadata": ""}
{"_id": "cd57f858e083e8436bd592fad8f1af4c", "text": "CEO might extend the confirm time limit when Etherum Network is blocked .", "title": "", "metadata": ""}
{"_id": "e10cd769e25b6f735709e25a294dc2b3", "text": "Process a TRVL tokens payment with a combination of regular and rewards tokens .", "title": "", "metadata": ""}
{"_id": "37db32b4604932a948cc1a1daff5bb7e", "text": "Returns all the relevant information about a specific div card .", "title": "", "metadata": ""}
{"_id": "2395543424e3e1b42d89a496de10ea00", "text": "The external function to set dungeon status by its ID , refer to DungeonStructs for more information about dungeon status .", "title": "", "metadata": ""}
{"_id": "f27965b97c03b47cb0013787f04905da", "text": "init parter .", "title": "", "metadata": ""}
{"_id": "4b045b33abe4770b1b9c6331364caf37", "text": "Removes a user / contracts from our list of account readers but keeps them in the history audit .", "title": "", "metadata": ""}
{"_id": "ef785949de2ec4f9e692d84ee69f0444", "text": "Function approves _addr to spend _value tokens of msg . sender .", "title": "", "metadata": ""}
{"_id": "9174fb62ff5fa5da66d1ad6398df4fb3", "text": "Record a new address .", "title": "", "metadata": ""}
{"_id": "e7cfa3c7bf139e73f6035fa93bc8742f", "text": "runs during precrowdsale .", "title": "", "metadata": ""}
{"_id": "7060ad880c9949e37a100951a726ccae", "text": "Runtime getters : .", "title": "", "metadata": ""}
{"_id": "fcbd08d9dd3c91ec3d8264280d38d714", "text": "Given a group , investor and amount of wei , pay all the eligible invitors .", "title": "", "metadata": ""}
{"_id": "79da42c7721b5907f1b886b5ba7f8cd2", "text": "Sets approval spender to transfer ownership of token .", "title": "", "metadata": ""}
{"_id": "575855db59c4be236e9d02c2eeefb3c8", "text": "Buy the spot at _x , _y if it is available and gain points for every connected spot of your color sharing lines with this spot .", "title": "", "metadata": ""}
{"_id": "1d0cb0f30cafc75cced5e8336a54636c", "text": "Allow reset the threshold .", "title": "", "metadata": ""}
{"_id": "791c4febb1a9158872c85582cddd8d40", "text": "Update node status if children sum amount is enough .", "title": "", "metadata": ""}
{"_id": "bc1d3ac07f913286ac464b421d75433c", "text": "This function will be used to update the details of DBZ hero details by the contract creator .", "title": "", "metadata": ""}
{"_id": "bc187ca04e30a4f4dfe6b5e83e89a20b", "text": "Return the less of settings . maxBet .", "title": "", "metadata": ""}
{"_id": "c979aff8ca5304bbe0403085899ca180", "text": "safely subtract .", "title": "", "metadata": ""}
{"_id": "db25ca286dfa7cd377951e1481ea2b61", "text": "Allows the current owner to add / remove another admins status .", "title": "", "metadata": ""}
{"_id": "d78dff2b01e9fdba6fa1b303bee1911f", "text": "This function will return only Tournament of Power total prize .", "title": "", "metadata": ""}
{"_id": "4b8e4caf4c280da95540a88b3b1d6051", "text": "Withdraw traded tokens 100K at a time .", "title": "", "metadata": ""}
{"_id": "a4b959fe591cc390ecddbdc77f0ea292", "text": "change tokens .", "title": "", "metadata": ""}
{"_id": "73f4802a0895682155cc02981a641879", "text": "end token conversion functions pause override .", "title": "", "metadata": ""}
{"_id": "9fb070343a16384a59058d744f3abc79", "text": "withdraw funds and tokens .", "title": "", "metadata": ""}
{"_id": "b4220e87f75085ae25d99a0c236dc99d", "text": "Updates an application to the latest version .", "title": "", "metadata": ""}
{"_id": "539b78735f3e1f348a1a6b9142999616", "text": "Founder can withdraw the remaining tokens of airdrop contract .", "title": "", "metadata": ""}
{"_id": "46887fb32e725d0175827c3c5c9463d7", "text": "Transfer entire balance to any account ( by owner and admin only ) .", "title": "", "metadata": ""}
{"_id": "3a458b32a128922d1e98d6588727e467", "text": "Called by anyone if the sale was successful and the project delivered .", "title": "", "metadata": ""}
{"_id": "568214db5135f66397817978254d9b14", "text": "Expose Settings .", "title": "", "metadata": ""}
{"_id": "f69a0f02d26886e1961a66a8b799f106", "text": "calculate the total number of passed interest cycles and coin value .", "title": "", "metadata": ""}
{"_id": "22c3b10e09cccfd105e570fe234c16d8", "text": "modifier to scope access to reviewer / / reverts .", "title": "", "metadata": ""}
{"_id": "1929edfbd1d541d693b264a57f3ee0ea", "text": "Add more money to the contract .", "title": "", "metadata": ""}
{"_id": "b3bece176890fdc6e3a956d21c29d1e0", "text": "manually update the tokens sold count to reserve tokens or update stats if other way bought .", "title": "", "metadata": ""}
{"_id": "9b09d66748001c0b600c027e7d797197", "text": "returns subscription deposit to customer .", "title": "", "metadata": ""}
{"_id": "6537088d1b00b8fee9dbd241b4bf9f33", "text": "Returns 0 if operation overflows .", "title": "", "metadata": ""}
{"_id": "096599fa79ce9b0a97b3733372e30fe6", "text": "Allows the Hydro API to sign up official applications .", "title": "", "metadata": ""}
{"_id": "37001d9be1357388b3882e6dca187a73", "text": "sell tokens back to sender using owners ether .", "title": "", "metadata": ""}
{"_id": "4e5a132f2414c00eba24390bcb7dfe53", "text": "Wheter the token is locked .", "title": "", "metadata": ""}
{"_id": "37180bf801dadc8bcbce77585c8d5fba", "text": "Adjust the weiPerAtom .", "title": "", "metadata": ""}
{"_id": "06c69654497a6fdc12c786808e55b1ad", "text": "End the token offering .", "title": "", "metadata": ""}
{"_id": "e680c59d3f91c086fd15ace0cf6638a7", "text": "Enables sale .", "title": "", "metadata": ""}
{"_id": "d851690344ed0c6dab360d71466d9836", "text": "Execute automatically transitions between different Stages based on time only .", "title": "", "metadata": ""}
{"_id": "f450c3b7f8ffe0a68a50111d2abc2a49", "text": "Set the parent collectible of a collectible .", "title": "", "metadata": ""}
{"_id": "6c368008e724bd446d81c4a51a0b3b3b", "text": "Here goes ICrowdsaleProcessor methods implementation .", "title": "", "metadata": ""}
{"_id": "dab7c0c84b5a8fa193eaa92565840b1d", "text": "private functions .", "title": "", "metadata": ""}
{"_id": "7d3fc030a5771453615138e4d4ae0373", "text": "Release the contents of a submitted proof .", "title": "", "metadata": ""}
{"_id": "2f0c568d97461c381381f24a00364669", "text": "Get the price of an emoji .", "title": "", "metadata": ""}
{"_id": "8dbe06f4648472b02eed3068f06792e7", "text": "transfer to account ( _to ) any value ( _value ) .", "title": "", "metadata": ""}
{"_id": "b066ebaf504c4b57facca985b7e71cc9", "text": "Contract owner or Multisig can refund contract with ETH in case of failed Crowdsale .", "title": "", "metadata": ""}
{"_id": "726bd93c88f3721f8dd0d4ca43a00c6d", "text": "checks if a claim is valid , by checking the signature .", "title": "", "metadata": ""}
{"_id": "e519b02a032e499b6e155cc2c3c8b196", "text": "Cancel new owner request , can be call only by owner which created this add owner request .", "title": "", "metadata": ""}
{"_id": "c5b2c3075a89c8e9d12c4a339eb5d198", "text": "Allows only the admins and / or whitelisted applications to perform bulk transfer operation .", "title": "", "metadata": ""}
{"_id": "11a2c2603d6f21154afef52df6c64032", "text": "End time of the crowdsale .", "title": "", "metadata": ""}
{"_id": "2805567fba800634978e77f4541c1052", "text": "Overrides parent method taking into account variable rate ( as a percentage ) .", "title": "", "metadata": ""}
{"_id": "35a4e9c21e16ac75cb89f332bc950b64", "text": "Changes auction totalAmount and start price factor before auction is started .", "title": "", "metadata": ""}
{"_id": "b8f1793606476c9f462e3c8a4a9dc662", "text": "Call to vote on a pending proposal .", "title": "", "metadata": ""}
{"_id": "08c8d41c7ca31a874dc795490a33047f", "text": "modifier to check if the presale is not finalized .", "title": "", "metadata": ""}
{"_id": "bace3a1f0f5e1cdfc41751bc4872f72a", "text": "Update the amount of tokens raised emit cap overflow events .", "title": "", "metadata": ""}
{"_id": "cc706bc201097516aebf8d5e5d6917cd", "text": "block account .", "title": "", "metadata": ""}
{"_id": "620ce31a0d37e46eca9c2953eeb93d71", "text": "Owner can sell army .", "title": "", "metadata": ""}
{"_id": "34bafe1ad569fc5ddabee4c3179a76ac", "text": "set cap time so contract cap can be adjusted as bonus vary .", "title": "", "metadata": ""}
{"_id": "924479474c0d6bb66ec169bf07a10a39", "text": "creates a number of instances of ChildDeposit contracts .", "title": "", "metadata": ""}
{"_id": "c9bcc5236a01d90c15c38fb344c11054", "text": "The function mintMiniICOTokens is only usable by the chosen wallet contract to mint a number of tokens proportional to the amount of ether sent to the wallet contract .", "title": "", "metadata": ""}
{"_id": "a94afe7b2886e5766ac120dbc3fd0826", "text": "Return LivepeerToken interface .", "title": "", "metadata": ""}
{"_id": "23aa55e5773897ae1af44c5ce39c6140", "text": "Helper functions ( internal functions ) .", "title": "", "metadata": ""}
{"_id": "e1502c41ed6c3daa968c9b115cfcacef", "text": "Make a deposit of tokens on the contract .", "title": "", "metadata": ""}
{"_id": "8d9253aff67f13244e8f3e98c396b877", "text": "Allow another contract to spend some tokens on your behalf .", "title": "", "metadata": ""}
{"_id": "b2d47a2258aa0e1be3cf02bfe7005782", "text": "Returns current price of an FT ( ERC-20 ) on auction .", "title": "", "metadata": ""}
{"_id": "91cff435962f32400e46731f820425f4", "text": "Hash ( keccak256 ) of the payload used by decreaseApprovalPreSigned .", "title": "", "metadata": ""}
{"_id": "94987df0f65348579ddd1768ea002479", "text": "Information functions .", "title": "", "metadata": ""}
{"_id": "6971195afe241060a46a0ccce530aadf", "text": "adjust round length ( round admin ) .", "title": "", "metadata": ""}
{"_id": "208dbc0cb7b55ca987db0c1d80c017db", "text": "burn the unsold tokens .", "title": "", "metadata": ""}
{"_id": "c7d9431debfcc562e246b65b0ee48e7a", "text": "Sets the minimum balance needed for token distribution .", "title": "", "metadata": ""}
{"_id": "edeccf2027271c792e8df357271061ec", "text": "Get handle for a given tokenId .", "title": "", "metadata": ""}
{"_id": "c2075c31a037699345ead20bb30ebbd5", "text": "Crowdfunding running checks .", "title": "", "metadata": ""}
{"_id": "a96e94ffac0187b2b15ee5e8e21c2bfd", "text": "withdraw accumulated balance , called by payee in case crowdsale has failed .", "title": "", "metadata": ""}
{"_id": "1449ba1e72859f261dc70884a0b303e7", "text": "The owner must specify which ICO contract is allowed call for refunds .", "title": "", "metadata": ""}
{"_id": "c77ef78006d9d5a7760c3fbbe6a71970", "text": "Change address set of the smart contract .", "title": "", "metadata": ""}
{"_id": "39f0ff39bdd8007a49756933b37056db", "text": "minimum limit of purchase .", "title": "", "metadata": ""}
{"_id": "1c5c8cff1a92c81058ae0e24a60cdde3", "text": "Transfers the balance of the sale auction contract to the FighterCore contract .", "title": "", "metadata": ""}
{"_id": "e327b8195bf5a10eef81e168a9ad572a", "text": "Deploy ESCB Network contract .", "title": "", "metadata": ""}
{"_id": "405b21faab927d511a345cf74b7067dd", "text": "define game rules .", "title": "", "metadata": ""}
{"_id": "fd9cab4f030d5d6d632c92cedf8c7d6d", "text": "amount of wei to pay for tokens - calculation based on rate modifier percentage .", "title": "", "metadata": ""}
{"_id": "1d3e1d07450f8af7f12713f07aac55c3", "text": "Set the address of the minter .", "title": "", "metadata": ""}
{"_id": "8782836f812242ce71128d6e1288ecd7", "text": "get order list count .", "title": "", "metadata": ""}
{"_id": "f01b27d726d7a38d2059ecae9c00e1e6", "text": "This sounds like a draconian function , but it actually just ensures that the contract has enough to pay out a jackpot at the rate you've selected ( i . e .", "title": "", "metadata": ""}
{"_id": "98f58f7d52c113303f793affce176589", "text": "Allows the current distributor to transfer control of the contract to a newDistributor .", "title": "", "metadata": ""}
{"_id": "cd7dc116aacae64fad91944dcb23ed1a", "text": "move data of player .", "title": "", "metadata": ""}
{"_id": "897cce99717a04cb37dbcc050390b2ac", "text": "Withdraw to Resque Account in case of loosing Owner account access .", "title": "", "metadata": ""}
{"_id": "5e0d46bd98176369dd2b918d25fbf2a1", "text": "Withdraw tokens to receiver address if withdraw params are correct .", "title": "", "metadata": ""}
{"_id": "88c9835f6e8bb4ddfb90db058ed118ef", "text": "Restrict methods in such way , that they can be invoked only by monethaAddress account .", "title": "", "metadata": ""}
{"_id": "b67986e0327b7aa7bd7ab688cf56a90b", "text": "What's my balance ? .", "title": "", "metadata": ""}
{"_id": "0eb7b255403d8d41f79b05b553548110", "text": "For ERC-721 compliance .", "title": "", "metadata": ""}
{"_id": "e4733bf6ccdcf738c29a2cc9b2b4c04e", "text": "one card's production .", "title": "", "metadata": ""}
{"_id": "db071ab9846f4fe9aa27db8a1ca2e462", "text": "Print number of block till next expected dividend payment .", "title": "", "metadata": ""}
{"_id": "c3a76bdf6b6387faf77e1abc56575924", "text": "Unlock tokens .", "title": "", "metadata": ""}
{"_id": "9106cf08e96d713b28d76119c7238372", "text": "true if the crowdsale has raised enough money to be a succes .", "title": "", "metadata": ""}
{"_id": "a421c99212f1d510f485fad183e0f171", "text": "Any applicable bonus to _value .", "title": "", "metadata": ""}
{"_id": "31e719749bcbbb96c151aae77ace83c5", "text": "Sets allow transactions to allow .", "title": "", "metadata": ""}
{"_id": "54d7d0c32f4d508df85593c285f5f74f", "text": "to restart the sale after emergency stop .", "title": "", "metadata": ""}
{"_id": "3a8c1821a105732e9a5a1f7493c4aa5e", "text": "Global backend data .", "title": "", "metadata": ""}
{"_id": "410334f179eb071d3517bf9420bf81ca", "text": "people can access contract and choose buyToken function to get token .", "title": "", "metadata": ""}
{"_id": "cabc0caa1713ab88928875e87ab87539", "text": "Set the rate , i . e .", "title": "", "metadata": ""}
{"_id": "da72bf4ebdde33f3a72a7bef5f646d5b", "text": "called by the owner to release purchase of ipc token .", "title": "", "metadata": ""}
{"_id": "c37b15cbfe151637839960536927701e", "text": "isWhitelistManager modifier .", "title": "", "metadata": ""}
{"_id": "b337b7416d275b3473c87f547c4d3254", "text": "Allows the owner to send the funds to the vault .", "title": "", "metadata": ""}
{"_id": "80707820617edc43777982c79f19ee7d", "text": "Accept transferOwnership .", "title": "", "metadata": ""}
{"_id": "381c7e063df54e8a3421af007fad052f", "text": "Gets the update time for a board .", "title": "", "metadata": ""}
{"_id": "e1fcef53eb5bfabf1ecd472695ecc059", "text": "Mint new token , not sell new token .", "title": "", "metadata": ""}
{"_id": "9a5ac39e571fc81109160f54f5388007", "text": "checks to see if a sender owns a _tokenId .", "title": "", "metadata": ""}
{"_id": "404c305deab9efa98caba57a29d3c465", "text": "The function currentSwapRate ( ) returns the current exchange rate between vSlice tokens and Ether during the token swap period .", "title": "", "metadata": ""}
{"_id": "e54ceba6ab4683f36917d1812786ce72", "text": "Withdraw all owner .", "title": "", "metadata": ""}
{"_id": "00b9650dc8a5cbb917a529637ac26f3a", "text": "Allow developer to unlock allocated tokens by transferring them to developer's address on vesting schedule of vested 100 on 1 year ) .", "title": "", "metadata": ""}
{"_id": "2af495b27b58d6419c6c4d6f5eb8af31", "text": "Spec : Allow spender to withdraw from your account , multiple times , up to the value amount .", "title": "", "metadata": ""}
{"_id": "243e4a01c27633090730dcb1f9f15054", "text": "withdraw tokens , send tokens to target withdraw wallet .", "title": "", "metadata": ""}
{"_id": "efbf61f149833501adf8aa3440ada168", "text": "number of symbols .", "title": "", "metadata": ""}
{"_id": "a30319b0c567afd276108a41c7c347ef", "text": "Modifier to make a function callable only when the contract is auctionPaused .", "title": "", "metadata": ""}
{"_id": "46bdfe2949a28aa8bffd6ae0b96a42db", "text": "KYC validation function .", "title": "", "metadata": ""}
{"_id": "3da222645d51fc890eff7cd0937da2b1", "text": "function to get this round information can only be called from owner wallet .", "title": "", "metadata": ""}
{"_id": "6cb8d12ada560a61bee9b74f8faf15ca", "text": "Aprove the passed address to spend the specified amount of tokens on behalf of msg . sender .", "title": "", "metadata": ""}
{"_id": "ae4c3c47b31b6e168070b014163a8792", "text": "Withdraw for bounty and advisory pools .", "title": "", "metadata": ""}
{"_id": "a171c6e0c2ae9e2454e8009e9e3b46a7", "text": "overriding Crowdsale buyTokens .", "title": "", "metadata": ""}
{"_id": "fe419e11660cdd4005dd847379a26b9b", "text": "Sell an indexed piece owned by the registrar .", "title": "", "metadata": ""}
{"_id": "da82029b9f43da71fefea15dfce49718", "text": "Additional finalization logic .", "title": "", "metadata": ""}
{"_id": "aaeb53d656c89a1795f55e7425850788", "text": "Get the nonce .", "title": "", "metadata": ""}
{"_id": "a8816f021bcc2f3268c91891f3c71652", "text": "Throw if sender is not beneficiary .", "title": "", "metadata": ""}
{"_id": "9785b24c075195ef207155e93b27f0f2", "text": "Grant another address the right to transfer a specific EtherDog via transferFrom ( ) .", "title": "", "metadata": ""}
{"_id": "8b7e44ed25acb1fcd81ae43e1a1df46e", "text": "Release ether from escrow .", "title": "", "metadata": ""}
{"_id": "0055dbeaf70db198e58ed6a21bb9e245", "text": "notate contribution data , and trigger early success if need be .", "title": "", "metadata": ""}
{"_id": "30f976fd9d36c02d87dcd63a78647581", "text": "Allows owner to pause the crowdsale .", "title": "", "metadata": ""}
{"_id": "851f07a1b8ce498ddf0edaaab6565f7e", "text": "Raffle v2 .", "title": "", "metadata": ""}
{"_id": "49e14f414e73c8781bbc60285a708eee", "text": "function to transfer tokens inter-user .", "title": "", "metadata": ""}
{"_id": "e6c42ef590c068f9ae40825678a9a01b", "text": "Functions Internal .", "title": "", "metadata": ""}
{"_id": "54c8dc8ae6e65897096d46ba1f2ad412", "text": "find out bonus for specific timestamp .", "title": "", "metadata": ""}
{"_id": "d606c5d588f22187a2a6f96725fdcca5", "text": "No more god like .", "title": "", "metadata": ""}
{"_id": "6e5a5a868eb020d0f8352650439d8f18", "text": "allows execution by the BNCNetwork contract only .", "title": "", "metadata": ""}
{"_id": "b2d985bfdb8ae457d411a066b44dd621", "text": "Reveal the owner's random number and choose a winner using all three random numbers .", "title": "", "metadata": ""}
{"_id": "6fdde4f331231c8c61a10b2d5ca1ff13", "text": "Permanently destroy tokens .", "title": "", "metadata": ""}
{"_id": "f6735e0124acae9448ea78012ffa3ab8", "text": "Allowed HIC addresses to methods : set , remove , is .", "title": "", "metadata": ""}
{"_id": "8121950a4ea4b623809dd079d59ef603", "text": "get both exchange and wallet balances for multiple tokens .", "title": "", "metadata": ""}
{"_id": "ddfe088c9693857ff984153025c3a229", "text": "Set / Modify MEA Game Attributes .", "title": "", "metadata": ""}
{"_id": "3c4e09c27ea89d62f3ad65b5eef819b7", "text": "Returns all the relevant information about a specific pow .", "title": "", "metadata": ""}
{"_id": "4aa82da024b7da238192fcefa591e681", "text": "Transfers a element to another address .", "title": "", "metadata": ""}
{"_id": "efb50842f5ed1b6f7a24dbafbb2aa3cc", "text": "Owner can salvage tokens that were accidentally sent to the smart contract address .", "title": "", "metadata": ""}
{"_id": "8cd28a34dc0c7b13c040b86bf475ab08", "text": "View current token balance of the contract .", "title": "", "metadata": ""}
{"_id": "f4db332639bea1a44faf744fedeaba05", "text": "Subtracts two numbers and checks for underflow before returning .", "title": "", "metadata": ""}
{"_id": "b8fa43ffc0cf998fdaf6444b22dac0e9", "text": "Allows the admin to set a bonus amount to apply for a specific stage .", "title": "", "metadata": ""}
{"_id": "6699a87353e3c6fcff3094e61c03989d", "text": "Checks if the token owned by the provided address are locked .", "title": "", "metadata": ""}
{"_id": "fcd0115283d6ea4ea3b804725ae14b8e", "text": "kills the contract sending everything to _to .", "title": "", "metadata": ""}
{"_id": "3f4779bb5a6000d701a02f7b3f4ae27c", "text": "Returns count of token holders .", "title": "", "metadata": ""}
{"_id": "71661720b13aa8f359e0bc9ec78f5056", "text": "Returns total amount of raised funds by Early Purchasers .", "title": "", "metadata": ""}
{"_id": "e9921409701f5cd5649788c71313e8f3", "text": "Add total individual wei amount .", "title": "", "metadata": ""}
{"_id": "6a8ca95dcaf182cd864a6cf3e36a9f1f", "text": "Internal function to calculate the number of extra blocks needed to flush , depending on the stash to flush ( the greater the load , more difficult it will be ) .", "title": "", "metadata": ""}
{"_id": "d15c989bc74072d98c50e1a43c084c62", "text": "Complete the sale .", "title": "", "metadata": ""}
{"_id": "e8df2865418f81cdedcaf7e6ca8d95e7", "text": "Spender of coins transfers coins from the owner's balance .", "title": "", "metadata": ""}
{"_id": "425c69131e503a94da2af5b46e6b4a9a", "text": "The last mint that will ever happen .", "title": "", "metadata": ""}
{"_id": "d0c47b57299d32e398c020a4d278d635", "text": "Check whether crowdsale has finished .", "title": "", "metadata": ""}
{"_id": "53a3b562efabc696b138d81f6efdff28", "text": "Spaceship Product functions .", "title": "", "metadata": ""}
{"_id": "99285b5b7f5a8aef4863bee4e456b2d5", "text": "Calculate the price two orders would match at , if in fact they would match ( otherwise fail ) .", "title": "", "metadata": ""}
{"_id": "0135a11cb5841042898076fabb3bf985", "text": "Allows third party to transfer tokens from one address to another .", "title": "", "metadata": ""}
{"_id": "4877cbfcd5f8c403faf7a967ff824234", "text": "Allows the owner make a reward .", "title": "", "metadata": ""}
{"_id": "99b022cc8760824bc1a5111261468003", "text": "Inserts to keep array sorted ( assumes input array is sorted ) .", "title": "", "metadata": ""}
{"_id": "c15f1f304cd4127b17e3b5abb858fa47", "text": "Checks if ICO is active .", "title": "", "metadata": ""}
{"_id": "f8435e906f90981bb98e0778c6cc4d41", "text": "objectProposal - object previously submitted proposal , the objection right is obtained by purchasing prefered tokens on time of the hackathon .", "title": "", "metadata": ""}
{"_id": "af5d43ff17bdc70c836186f2f4bed569", "text": "Function which will return the count of target blocks .", "title": "", "metadata": ""}
{"_id": "4d0c329d1968f2b1e03a60b5c7d8c85d", "text": "setup the map of bonus-rates ( as a percentage ) and total hardCap for each SaleState tier to be called by the constructor .", "title": "", "metadata": ""}
{"_id": "3a28f9e2e3075c350715a94bcc7ea2ce", "text": "Accepts new ownership on behalf of the Colu Local Network contract .", "title": "", "metadata": ""}
{"_id": "90f6ee0279e2ae7eee63538a12a5141c", "text": "vip rank of the owner of given address .", "title": "", "metadata": ""}
{"_id": "76165e2f1fb3537cffd0a13163b1fe58", "text": "Will return all bought tokens to the contract .", "title": "", "metadata": ""}
{"_id": "a362a72e41b5c6e9b7c45071e863950c", "text": "Is this the original owner of the token - at exchange level .", "title": "", "metadata": ""}
{"_id": "a8d613d8b3d6e16b1135ed4e1bb1e682", "text": "Return truth if there are tokens which can be purchased .", "title": "", "metadata": ""}
{"_id": "abc0e269dd787289fd2a025cf0719889", "text": "Standard transferFrom but incorporating frozen tokens logic .", "title": "", "metadata": ""}
{"_id": "3207b3311d258ad56c18b0f5a70ad5e4", "text": "Assigns a new address to act as the Editor .", "title": "", "metadata": ""}
{"_id": "22a6a968e79657a4662bf6b030933b1d", "text": "Transfers token to the specified address .", "title": "", "metadata": ""}
{"_id": "2b3e0e4ce9a7df1ffc44a8997f5de0ed", "text": "used by a new manager to accept a management transfer .", "title": "", "metadata": ""}
{"_id": "5a8d7b23a4ce2d7466c176d404251f44", "text": "require given state of sale .", "title": "", "metadata": ""}
{"_id": "64a86808e6d6feacda0be75d5b8cb1f5", "text": "An internal function to update mappings when an order is removed from the book .", "title": "", "metadata": ""}
{"_id": "1da983c7fb1a4e99871e41bbd8518cc6", "text": "refunding an investor .", "title": "", "metadata": ""}
{"_id": "8ee6575aab42f7d797513bddc36bb4cb", "text": "returns the length of the quick buy path array .", "title": "", "metadata": ""}
{"_id": "e1018718e8e0e36fedae7093ea267829", "text": "set the minimum bet .", "title": "", "metadata": ""}
{"_id": "19e964c897341da4c3321f5c6dcc9e82", "text": "Batch Transfer Function .", "title": "", "metadata": ""}
{"_id": "95445df295262a2e10bc454a23bcd652", "text": "non-core functionality .", "title": "", "metadata": ""}
{"_id": "e7ce8172d2ddef2a2f9b259330fe13fa", "text": "Return the information about the next auction .", "title": "", "metadata": ""}
{"_id": "af1e1f029a813e2d215bd2d52e053e62", "text": "Checks if the order given offchain coincides with the order of the actual previously calculated points in the smart contract .", "title": "", "metadata": ""}
{"_id": "34aa09380759e77059329ffdf7cf9023", "text": "get minimal amount to be sent .", "title": "", "metadata": ""}
{"_id": "8b11292475922cfb1f221d406e540631", "text": "Given a token Id , returns a byte array that is supposed to be converted into string .", "title": "", "metadata": ""}
{"_id": "ae4d53446c79c83eefa185e5cbde3233", "text": "_owner The address that's balance is being requested .", "title": "", "metadata": ""}
{"_id": "4a444d771891114ce7ccb97866bc6f1d", "text": "after latch all investor , unpause here .", "title": "", "metadata": ""}
{"_id": "358e31ddd912ccc4345902d7c0d56e28", "text": "removes a token and / or account from the blacklist to allow them to submit a token again .", "title": "", "metadata": ""}
{"_id": "85f420a666992b1eb7ee5fa6760fa4a4", "text": "Funding functions .", "title": "", "metadata": ""}
{"_id": "a7c6180a95edcafa2284d3dcf124b8f7", "text": "Reclaim all the expired , non-empty swaps into a multisig .", "title": "", "metadata": ""}
{"_id": "9fb7df821a9f19931ea92b4c18260cc8", "text": "Modifier to make a function callable only when the contract is not locked or the caller is whitelisted .", "title": "", "metadata": ""}
{"_id": "98660e86580b4bedad0ac9a6880e18c7", "text": "Returns outcome count .", "title": "", "metadata": ""}
{"_id": "a7b563f767306848764a76e458d99206", "text": "Registering proposal in replacement for provided votes .", "title": "", "metadata": ""}
{"_id": "b75e2a4454ee7f6c9c4d88894ecb700b", "text": "Changes canvas . bookFor .", "title": "", "metadata": ""}
{"_id": "f79c52855a9f0eba3ce6aff7e1ed361e", "text": "Previous element of list .", "title": "", "metadata": ""}
{"_id": "449c1502575b8bdaec2eadc11d26aa3b", "text": "Buy tokens , subject to the descriptive constraints specified by modifiers .", "title": "", "metadata": ""}
{"_id": "23980ef0b1ddb38cbd270c66121b5cdd", "text": "Get play record's datetime .", "title": "", "metadata": ""}
{"_id": "172915aa3a8e0c27f33fcda042662e40", "text": "ERC-721 Token Ownership .", "title": "", "metadata": ""}
{"_id": "35393785785f073cf1fabdec898c9219", "text": "check if deliverable fulfilled completely .", "title": "", "metadata": ""}
{"_id": "32b837b20440227a552576f7d964d7cd", "text": "event pushifo ( uint8 , uint8 , uint8 , uint8 , uint8 ) ; resets game .", "title": "", "metadata": ""}
{"_id": "626be4ce2facf5633816138344133eb8", "text": "Shop return Shop value .", "title": "", "metadata": ""}
{"_id": "60385f0b2b36ab036e3a96076a721a31", "text": "update token units a buyer gets per wei .", "title": "", "metadata": ""}
{"_id": "917af0a75168f36a0b2f38d99f031bdb", "text": "returns the connector settings .", "title": "", "metadata": ""}
{"_id": "d64a5981589a836c83b59dda463b7dd4", "text": "Converts _tileId to ( x , y ) .", "title": "", "metadata": ""}
{"_id": "45748fe6b453cfd9ec6b9a580e1c9828", "text": "Link an address to this contract .", "title": "", "metadata": ""}
{"_id": "f19a352939166f080b0b9bacd22db273", "text": "Set contract frozen status .", "title": "", "metadata": ""}
{"_id": "608606bf8b25b2a067af69c73ec0cdce", "text": "Validate min and max amounts and other purchase conditions .", "title": "", "metadata": ""}
{"_id": "58f716d9a63288689daf4492598f0dd6", "text": "registering investor account .", "title": "", "metadata": ""}
{"_id": "4cfedd15ac4adab4a095ade33ce2528a", "text": "Allows to enable or dissable token transfers .", "title": "", "metadata": ""}
{"_id": "664713aff9aea473f84e606d57ce1cef", "text": "Obtain the quantity which the next schedule entry will vest for a given user .", "title": "", "metadata": ""}
{"_id": "f7090ec4cadc0f9f5101e2dfa583be36", "text": "Add or remove call permissions for an address .", "title": "", "metadata": ""}
{"_id": "14abd7e07341ad6abc5f26a0da3c193a", "text": "Overrides the Crowdsale . createTokenContract .", "title": "", "metadata": ""}
{"_id": "87bc6407b69b9ddf7521747757d72330", "text": "generate new warrior identity .", "title": "", "metadata": ""}
{"_id": "5fdfe2def34c575d9de9cdc9d4f3f602", "text": "Low level function .", "title": "", "metadata": ""}
{"_id": "3d6478e006285245228b5078aaa8a3a9", "text": "Allows owner to move CHI ( e . g .", "title": "", "metadata": ""}
{"_id": "ed88b45bd146f2972b114b599a16704a", "text": "set allowance for someone to spend tokens from your address .", "title": "", "metadata": ""}
{"_id": "0d790ef6e4756283ebe9d0046d1aa86f", "text": "Allows admin or ops to create new allocations for a specific account .", "title": "", "metadata": ""}
{"_id": "bd326d69850bec0095406a8c9e3272eb", "text": "Transfer a deed to another address .", "title": "", "metadata": ""}
{"_id": "a3b66330ac8aa7a56ed8110ab24da07f", "text": "Send any remaining balance to the foundation wallet .", "title": "", "metadata": ""}
{"_id": "9f0ab1d50e46eb7a16e2a2c5afe2bd02", "text": "Gets current grant balance for caller .", "title": "", "metadata": ""}
{"_id": "b3471aba770734458c9022d5149b68de", "text": "Check transaction coming from the contract or not .", "title": "", "metadata": ""}
{"_id": "5f120d2a032d168a28481f47371fb6fe", "text": "unlock token .", "title": "", "metadata": ""}
{"_id": "ea8e6b30cb8c1135b6d799e3cddabc10", "text": "give bounty and all left tokens to owner .", "title": "", "metadata": ""}
{"_id": "19edaff54cae11f7a2c2cad129879d54", "text": "constant function returns the current DANS price .", "title": "", "metadata": ""}
{"_id": "9c646c0c6b484365fe1748e0d939aea2", "text": "Taks fuer Abrechnung . .", "title": "", "metadata": ""}
{"_id": "9b5f12667523d9381ec71d3bcf93fd57", "text": "Allows anyone to transfer the TEST tokens once trading has started .", "title": "", "metadata": ""}
{"_id": "39e522fbb0db629d7c7a94adc34989ed", "text": "the not frozen modifier guards functions modifying the supply of the token from being called after the token supply has been frozen .", "title": "", "metadata": ""}
{"_id": "59d8aee6ce31fd7a3a43aa8a4e906a49", "text": "Payout ETH to whale .", "title": "", "metadata": ""}
{"_id": "4b0e6bf98f1097be320ed4207e0445fa", "text": "Mints the below-mentioned amount of tokens allocated to the Vibeo team .", "title": "", "metadata": ""}
{"_id": "89e32b37499d7f21fcae9a646834dcfa", "text": "If a little more than a year has elapsed ( Round2 start date + 400 days ) , a smart contract will allow you to send all the money to the Beneficiary , if any money is present .", "title": "", "metadata": ""}
{"_id": "a44d7f35b49d2417e169c7d42412f256", "text": "uuid functions add a new code + weight .", "title": "", "metadata": ""}
{"_id": "5a3d8e189cec96ca8854678caa78cd7b", "text": "Block number in which the contract was initialized .", "title": "", "metadata": ""}
{"_id": "9b48cbfed166af3f50bc892357a883ca", "text": "get previous delegation , create new delegation via function and then commit to globalDlgts .", "title": "", "metadata": ""}
{"_id": "eddd02d7d5c81459f19f135723d22c39", "text": "State transitions callbacks .", "title": "", "metadata": ""}
{"_id": "69497e1d26978415f70de3076e0283da", "text": "This is function , is needed to change version smart-contract .", "title": "", "metadata": ""}
{"_id": "d8728c7b2a546726964be7c3a2140d78", "text": "Check end of one pool .", "title": "", "metadata": ""}
{"_id": "667b660f157848fda7473eee74615805", "text": "Buy MCT Token .", "title": "", "metadata": ""}
{"_id": "b7521d4736336984fd4763b6162b354f", "text": "Breed a Pony you own ( as matron ) with a sire that you own , or for which you have previously been given Siring approval .", "title": "", "metadata": ""}
{"_id": "6a3d688460b9dc8b68d2d56d40e24b40", "text": "Get the class's rank .", "title": "", "metadata": ""}
{"_id": "70cda93db85941dfab6cf26daf3634f0", "text": "Get reserved tokens for specific group .", "title": "", "metadata": ""}
{"_id": "13312d3cf55eddf5eb990a8a0e44a1f4", "text": "Compute '_k * ( 1 + 1 / _q ) _n' , with precision '_p' .", "title": "", "metadata": ""}
{"_id": "c1b121fc764af9cdf6f6492ae7b65655", "text": "Set the new service account .", "title": "", "metadata": ""}
{"_id": "86fedfc1a6b83b92efc08000925c95c8", "text": "Creates Team Sale Auction .", "title": "", "metadata": ""}
{"_id": "ad830c46cb71ec04aa669a07f20135aa", "text": "set official contract front-end website .", "title": "", "metadata": ""}
{"_id": "d1bda6d7d636cda2edf661fa4bb4530f", "text": "name of the token .", "title": "", "metadata": ""}
{"_id": "1621dea3fadde028b163fec48daca731", "text": "Deploy a work order contract .", "title": "", "metadata": ""}
{"_id": "8284bd629dba4484af6d970ee74752f9", "text": "Allow new provider applications .", "title": "", "metadata": ""}
{"_id": "f2aa85add981da82b4f25a5e57e94b5c", "text": "returns 0 . 01 value in British Pound .", "title": "", "metadata": ""}
{"_id": "e6399ed505299bd08ebc0560ded47a56", "text": "_safeCall is used internally when call a contract safely .", "title": "", "metadata": ""}
{"_id": "d1213c238239e3e2aab23d47d1343ca2", "text": "Hopefully this doesn't get used , but it allows for gotchi rescue if someone sends their gotchi ( or a cat ) to the contract by mistake .", "title": "", "metadata": ""}
{"_id": "2c81a557675456d41479195a05571826", "text": "allocates UIP tokens to pre-sell address .", "title": "", "metadata": ""}
{"_id": "7665be129e5e81599ba2cb56d5efb958", "text": "Note : can only be set once .", "title": "", "metadata": ""}
{"_id": "5eedd3dab75773105c76bd4e81b3f5d0", "text": "Migrates the domain to a new registrar .", "title": "", "metadata": ""}
{"_id": "a0a1abca5eaa5b0c1e3073c3529031e2", "text": "Get random number .", "title": "", "metadata": ""}
{"_id": "ccc1de4adf8f614d3e9d0783434bd21e", "text": "Transfer function when _to represents a regular address .", "title": "", "metadata": ""}
{"_id": "918fc3d27f75dcad9968528c8e07426d", "text": "The amount in RICH .", "title": "", "metadata": ""}
{"_id": "2808b5fdb20eb4ea795a9ee7566976c8", "text": "returns tournament entrance fee - 3 threshold .", "title": "", "metadata": ""}
{"_id": "b6ba491068b1b6f08c5729b3ddecdd0c", "text": "Returns the token grant count .", "title": "", "metadata": ""}
{"_id": "89c67d57176fba506cb0599c9636f73d", "text": "Internal function to accept , add additionals and pay a request as Payer .", "title": "", "metadata": ""}
{"_id": "6ed52a0c6d7707e0cf89cf019672b74c", "text": "Gets the total amount of tokens stored by the contract .", "title": "", "metadata": ""}
{"_id": "12ea2d4724347c89875e28687717a023", "text": "See World . createKingdom ( . . ) .", "title": "", "metadata": ""}
{"_id": "97ad1f753f57c5600f76c507fbc2f590", "text": "Public function that allows the owner to whitelist multiple entries .", "title": "", "metadata": ""}
{"_id": "afc3bb6e35ec7e756e91987ab74228ab", "text": "This is payable , the user will send the payment here .", "title": "", "metadata": ""}
{"_id": "a793da360a52f72157c63484cafbe179", "text": "Batch lock or lock 0 to release all .", "title": "", "metadata": ""}
{"_id": "0d8b2a4cb6f07dc35c9fa9980564c1c8", "text": "Get total supply of issued coins .", "title": "", "metadata": ""}
{"_id": "a8ac2e9f7b74afd6871b71804bf5917c", "text": "Remove a version .", "title": "", "metadata": ""}
{"_id": "469813176f40e9eaa1c544f91652fb8a", "text": "Internal transfer , can only be called by this contract .", "title": "", "metadata": ""}
{"_id": "6885c4bfdbd5221957fcd2af3086f60c", "text": "returns the current stage of sale .", "title": "", "metadata": ""}
{"_id": "541979c4b058098343ef1441fa3aef48", "text": "owner remove free eth .", "title": "", "metadata": ""}
{"_id": "0b1a72c6e0dd439a9aef85016ce6b42a", "text": "TODO : Write unit tests to verify .", "title": "", "metadata": ""}
{"_id": "937a62f5d65e3213796aae99c6f803c2", "text": "Extracting the wrongly sent token back into the contract set to 0 if want to get ether .", "title": "", "metadata": ""}
{"_id": "3799b09331c2095fc121ac2037bc41a1", "text": "quantities Number of token base units required per creation unit .", "title": "", "metadata": ""}
{"_id": "4201290bd238a41f59cc9bdc017dbf36", "text": "Returns the amount in SPX leconte given ETH wei .", "title": "", "metadata": ""}
{"_id": "e3f7cfd9cecd0e23f24659442f37575c", "text": "Reset team states and recalculate the price .", "title": "", "metadata": ""}
{"_id": "f744af083692be22f99187a1574f8d19", "text": "Get the address of the RareCoin contract .", "title": "", "metadata": ""}
{"_id": "4b7c098002c1d1030ee9da9175194a9b", "text": "reaction to random number oraclize callback - getRandom ( number of participants ) .", "title": "", "metadata": ""}
{"_id": "126f819b39355285a2cb77501543f79d", "text": "function to create held tokens for developer .", "title": "", "metadata": ""}
{"_id": "267d8619df4b39d44ada5045017146d7", "text": "this is just to inform the investor that the owner redeemed some of their IOU tokens .", "title": "", "metadata": ""}
{"_id": "22c068465feded04965334b0aa7af186", "text": "Global Getters .", "title": "", "metadata": ""}
{"_id": "5d5acc35e66563a1435c2cbc1580c334", "text": "The user / developper needs to add the tokenID , in the end of URL , to use the URI and get all details .", "title": "", "metadata": ""}
{"_id": "acebd6ece8bc2fa1bb743078d890ecf2", "text": "Function for user to bet on team idx , where 0 Eagles and 1 Patriots .", "title": "", "metadata": ""}
{"_id": "7ef8c8e1bb02a748bc235fd70f400fe4", "text": "Get the customer's Tx of payment for MCW amount .", "title": "", "metadata": ""}
{"_id": "6d76a8fd4a292e5946f73f5bfe4e0d3b", "text": "Fills a sell order in EtherDelta .", "title": "", "metadata": ""}
{"_id": "5fefd0f62731373be13ae459253542e4", "text": "The auction contract variables are defined in PonyBase to allow us to refer to them in PonyOwnership to prevent accidental transfers .", "title": "", "metadata": ""}
{"_id": "388f0d5bd22f0db6643464dcea2e3b0e", "text": "Add new endorsement to an actor .", "title": "", "metadata": ""}
{"_id": "97a379a608c9da7955dc3752d677e181", "text": "Set addresses in whitelist .", "title": "", "metadata": ""}
{"_id": "9e213b825896867e176f8288c9fb25b1", "text": "redeems ( removes ) tokens for an address and moves to to a burn wallet .", "title": "", "metadata": ""}
{"_id": "2cd7b78422488abb1b9abfa90e03a0f4", "text": "Calcels item's sale .", "title": "", "metadata": ""}
{"_id": "d3e248b40f751badd8e8c1e4dffda3b0", "text": "determins whether or not the caller is in a game .", "title": "", "metadata": ""}
{"_id": "570fd1b36cfeb88e6cd285e3483ba261", "text": "fix issue with _departureYMD .", "title": "", "metadata": ""}
{"_id": "9456e37ae40435e4b514a3c6c186ba9f", "text": "Increases the amount of tokens that an owner allowed to a spender .", "title": "", "metadata": ""}
{"_id": "0ff292be4fad13ed55b4754fb2de19e2", "text": "Update the address of the config contract .", "title": "", "metadata": ""}
{"_id": "825d5b4ec174efbacdfeee92d9bf884a", "text": "allow owner to add address to whitelist .", "title": "", "metadata": ""}
{"_id": "b14f5d2292960b2abbda35b339ce11a1", "text": "Set hard cap ( protection from strong volatility ) .", "title": "", "metadata": ""}
{"_id": "1412548982d6569a79b858bb008167b6", "text": "iterate over all account holders and balance transfer proportional bte balance should be 0 aftwards in a perfect world .", "title": "", "metadata": ""}
{"_id": "5edff32ae03a0bd09f2ddc1bfec36ded", "text": "Mints new Basket tokens .", "title": "", "metadata": ""}
{"_id": "5acbff313e2eb15de8c34068eaabdcb6", "text": "Withdraw tokens from the fee pool into a given account .", "title": "", "metadata": ""}
{"_id": "d4162d9b8e138da32a911172edfcb737", "text": "Allows anyone to sign up as an unofficial application .", "title": "", "metadata": ""}
{"_id": "498ca0b374ee7e0bee8cfe0bb90f25c6", "text": "Function of changing emission status .", "title": "", "metadata": ""}
{"_id": "9d02fa2869ff287775eb85e172e3a530", "text": "Allow owner to transfer his zone .", "title": "", "metadata": ""}
{"_id": "ce3591637dfd16c4050c01c5fe74aa4b", "text": "marketing contract address change .", "title": "", "metadata": ""}
{"_id": "215eaa1c58b64fc1c71c345da7d254b8", "text": "the way in which ether is converted to tokens .", "title": "", "metadata": ""}
{"_id": "ef7e25e7188a344dd338245f4e15a865", "text": "get amount of ether to buy NAC for investor .", "title": "", "metadata": ""}
{"_id": "321a05a46a80dae09995f2ae2f9e4761", "text": "Run this before crowdsale begins , so private sale wallet could transfer tokens .", "title": "", "metadata": ""}
{"_id": "6f2adf18923111d155811c3af4ee8fed", "text": "Used to mint tokens , only usable by the contract owner .", "title": "", "metadata": ""}
{"_id": "5f65c3c4a24bf7c1e59f23c3d8f5ea49", "text": "Set targetBondingRate .", "title": "", "metadata": ""}
{"_id": "a52a92115fef25902c2c1d9ca9e00d65", "text": "calculate current price of auction .", "title": "", "metadata": ""}
{"_id": "8f0dd867624e092533ad464b07f11905", "text": "selfdestruct crowdsale contract only after crowdsale has ended .", "title": "", "metadata": ""}
{"_id": "946e91c47a9ae89b9462cc85c238a819", "text": "check that player has to spin the wheel .", "title": "", "metadata": ""}
{"_id": "a67aeb5eb1cccf30019ea305af26c0db", "text": "Get transfered token of specified address .", "title": "", "metadata": ""}
{"_id": "a2a52fb285d4ae47b432aa8cbae8d19e", "text": "Gets a list of groups where passed user is a member .", "title": "", "metadata": ""}
{"_id": "0aa8f77551a65fb37f2c1d61a6c4bae8", "text": "function to transfer an animal to another user direct token cannot be passed as we have disabled the transfer feature all animal transfers should occur through this function .", "title": "", "metadata": ""}
{"_id": "f4c19b18f48d847a6e9f709bbdee9bd0", "text": "Create new coin .", "title": "", "metadata": ""}
{"_id": "0ea8a315d1e5daf11c3db0cb440bedc5", "text": "Get the second player's current points .", "title": "", "metadata": ""}
{"_id": "9414c4ed380f8deb3bdd6ccda3af4f43", "text": "Gets Total number of transactions ever created .", "title": "", "metadata": ""}
{"_id": "3359a9eda3c9109d4d95fe4044315ba2", "text": "Creates a new channel between msg . sender .", "title": "", "metadata": ""}
{"_id": "2d7bfd1fd2e67fdf7f68a3b90595ffe9", "text": "Check that the generation period is not started .", "title": "", "metadata": ""}
{"_id": "eacbd12505b69015b527dea7c2b078a4", "text": "function to return the information of a single user .", "title": "", "metadata": ""}
{"_id": "d81f3b843a24b47826bcd68a1fdf2bf5", "text": "Freeze account - Prevent Allow target from sending receiving tokens .", "title": "", "metadata": ""}
{"_id": "9eec0edd38b6e7eec2273d50b4933868", "text": "Public function for playing lottery .", "title": "", "metadata": ""}
{"_id": "d7d95184e5e9ef203f2f37d06ce1d5e4", "text": "Allows to change the primary account for the contract .", "title": "", "metadata": ""}
{"_id": "a14530448bd082865fcff46bff70b855", "text": "If necessary , resets the day's usage .", "title": "", "metadata": ""}
{"_id": "1d1bb5fcbc6cac51065e433dc13f416d", "text": "Allows the current owner to transfer control of the contract to a newMaster .", "title": "", "metadata": ""}
{"_id": "fcfe136a4f71227217cf45788936799e", "text": "Gatekeeper function to check if the amount of Ether being sent isn't either too small or too large .", "title": "", "metadata": ""}
{"_id": "9ac64bf4c28687f7d3d27050a6c6fea5", "text": "Removes discount for concrete buyer .", "title": "", "metadata": ""}
{"_id": "ea8b9c449f9dd8fa9ab8aec1e8230933", "text": "Get the current allowanceCollection that the approver has allowed 'spender' to spend on their behalf .", "title": "", "metadata": ""}
{"_id": "cbae249656f4899b2d99b7c3048a8fa7", "text": "IDs empty groups on the board .", "title": "", "metadata": ""}
{"_id": "640e34c849dcb00b6732cf576e633978", "text": "allows the owner to update the quick converter contract address .", "title": "", "metadata": ""}
{"_id": "bce41e7356772d7fc558cec93b21546e", "text": "override transfer methods to throw on blocked accounts .", "title": "", "metadata": ""}
{"_id": "e6ad639a0712a8f7f7a40f8bece993b1", "text": "kill contract , but before transfer all tokens and ether to owner .", "title": "", "metadata": ""}
{"_id": "5bd679f88d7f9cc28e171f0c033b77e2", "text": "Transfer a Pony owned by another address , for which the calling address has previously been granted transfer approval by the owner .", "title": "", "metadata": ""}
{"_id": "6233bd56ce686c02776b4dbac6e1849c", "text": "Whitelist array of addresses .", "title": "", "metadata": ""}
{"_id": "03edb1ff3b3c2b2cd023423b7f88e9e2", "text": "Reject access .", "title": "", "metadata": ""}
{"_id": "19ff8f76922f9a2e2b48bc976080631a", "text": "Function is called by contributor to refund .", "title": "", "metadata": ""}
{"_id": "032fc970ac141be3fad90a6b03840e4c", "text": "transferFrom is not allowed .", "title": "", "metadata": ""}
{"_id": "4cc20a7766d825b1a37d83fb3a869969", "text": "Creates an RLPItem from an array of RLP encoded bytes .", "title": "", "metadata": ""}
{"_id": "adc6834cc910e7b7787949c02c0bf102", "text": "Allows transfer token ownership back to distribution contract .", "title": "", "metadata": ""}
{"_id": "71f025c6ffd3e923b5c786ebd1bf2a84", "text": "Current Vesting stage for ShareX team .", "title": "", "metadata": ""}
{"_id": "76f850ef5275337226db41b6e6786d07", "text": "setKeyValue Assign ( key , value ) pair to a token .", "title": "", "metadata": ""}
{"_id": "ca3ff2b2baa74b0044e02fb53e7a748d", "text": "Refleja la cantidad total de monedas generada por el contrato .", "title": "", "metadata": ""}
{"_id": "02f82b631bf9a0318359e8ae117c332e", "text": "setMinMax function to set the minimum or maximum investment amount .", "title": "", "metadata": ""}
{"_id": "7212e89eb5c37b04e8c47ca30b429bd9", "text": "Add external ERC20 tokens balances .", "title": "", "metadata": ""}
{"_id": "ec55aa49426dc35e57a333b3ec610d4b", "text": "Owner should call this on twice a month .", "title": "", "metadata": ""}
{"_id": "41654ad3d52f0118f905f6c71d079de1", "text": "this can make OVER 9 , 000 OLD FUCKS ( just pass in 129 ) .", "title": "", "metadata": ""}
{"_id": "8552d96386467dba681c2116cf0d3920", "text": "AnimatedProject : Getting Token From Owner by ETH .", "title": "", "metadata": ""}
{"_id": "c6afaef1160110f405e742f4325fc6b6", "text": "During public sale it is possinble to withdraw at any time .", "title": "", "metadata": ""}
{"_id": "1f2312267a0caaa121dc01407bea4636", "text": "Multiplies two unsigned integers , throws on overflow .", "title": "", "metadata": ""}
{"_id": "fa60a88670abafcf63ccf12204294c2c", "text": "Walks through the list of TokenLots for the given address , attempting to find amount tokens that can be transferred .", "title": "", "metadata": ""}
{"_id": "dbe0181e132e7f25562edda0d6ca7e54", "text": "This creates a Pledge with an initial amount of 0 if one is not created already ; otherwise it finds the pledge with the specified attributes ; all pledges technically exist , if the pledge hasn't been created in this system yet it simply isn't in the hash array hPledge2idx yet .", "title": "", "metadata": ""}
{"_id": "b7c8e0dfe8a5ada260b9100c94e4871d", "text": "DEV - use this to remove admins .", "title": "", "metadata": ""}
{"_id": "2417e2e604f255401ff580fca2473093", "text": "Used to send rewards ) .", "title": "", "metadata": ""}
{"_id": "af687efcb889db0d638f4db31f34ed2a", "text": "kill contract , but before transfer all TPT , NDC tokens and ether to owner .", "title": "", "metadata": ""}
{"_id": "94f4f1217abbb3e714cf79a0a93d6b14", "text": "Add to token balance on address .", "title": "", "metadata": ""}
{"_id": "4e5fcd2ad5754a97703bd36fc23d1067", "text": "given a user , returns an account level 0 regular user ( pays take fee and make fee ) 1 market maker silver ( pays take fee , no make fee , gets rebate ) 2 market maker gold ( pays take fee , no make fee , gets entire counterparty's take fee as rebate ) .", "title": "", "metadata": ""}
{"_id": "9a71d49d5412427a3dcc384ab590fb38", "text": "pure , accepts randomness , nonce target and returns boolian whether work is good .", "title": "", "metadata": ""}
{"_id": "58095706bc6baef41b5d8fc55999dd0d", "text": "84 m coins total reward begins at 50 and is cut in half every reward era ( as tokens are mined ) .", "title": "", "metadata": ""}
{"_id": "1e36a1d7c2bdefa205006de109382235", "text": "Returns the total number of Artworks currently in existence .", "title": "", "metadata": ""}
{"_id": "3eeecc39acd00138d560a1c325242e02", "text": "Checks voting contract address for validity .", "title": "", "metadata": ""}
{"_id": "3e22381520b185b0bf63d9c5d29b4d42", "text": "Update tokensSoldCount .", "title": "", "metadata": ""}
{"_id": "c87572528a0df2d72a4df067a8dca6ed", "text": "used by subscription module to burn token while creating a new deposit .", "title": "", "metadata": ""}
{"_id": "82f981abdc30cdc0cca0dbfd22f3823e", "text": "buy TPT with ether .", "title": "", "metadata": ""}
{"_id": "e65220167ac9829ea67e4a449c25d8e6", "text": "Return the buy price of 1 individual token .", "title": "", "metadata": ""}
{"_id": "dba06b65147357113bdb19589033dd39", "text": "Set cooldown of phoenix .", "title": "", "metadata": ""}
{"_id": "b872d6983d6a6f16d0d30f9c9b477567", "text": "Get bonus percentage and threshold of a given bonus tier .", "title": "", "metadata": ""}
{"_id": "59a05ad3c8f933a4db2c70b49d130f91", "text": "Returns the number locks of the provided _beneficiary .", "title": "", "metadata": ""}
{"_id": "4cbf7d47138a642d175785855f393b34", "text": "Functions with this modifier can only be executed by the moderator .", "title": "", "metadata": ""}
{"_id": "cfa6ad56d9812b4caecae3942f0aaf4e", "text": "Make sender's illiquid balance liquid when called after lockout period .", "title": "", "metadata": ""}
{"_id": "4f194896212e98a52698bea338a7c7ac", "text": "Burn Functions .", "title": "", "metadata": ""}
{"_id": "4bac8f550a005b2dbfe9ccb650a3fa01", "text": "Set the default fee .", "title": "", "metadata": ""}
{"_id": "f3bd50310dca93e6d09593193110a313", "text": "Releases angel supply .", "title": "", "metadata": ""}
{"_id": "ba97008c14897def33acecfaf2632226", "text": "migrate token for investor .", "title": "", "metadata": ""}
{"_id": "8ac606c45883de327a60b82604659464", "text": "number of tokens and duration in blocks .", "title": "", "metadata": ""}
{"_id": "c9075a758ca2f7abf9251bd5d2a82ab9", "text": "get investment by two key ( address and charger ) .", "title": "", "metadata": ""}
{"_id": "d03379d13beeacbd563528406aab9e6a", "text": "restrict msg . sender .", "title": "", "metadata": ""}
{"_id": "aed8208f6b4b11ca61ca1a664ebabdfc", "text": "Get the Volume-based bonus rate .", "title": "", "metadata": ""}
{"_id": "b08865b3751cf63a8f4659e9558d0d00", "text": "Funtion to let admins claim users tokens on behalf of them at the end of ico process .", "title": "", "metadata": ""}
{"_id": "d09770c09e163a48dd3cace6de5d2bd3", "text": "Revoke acess to deploy heroes .", "title": "", "metadata": ""}
{"_id": "6d1c85e79d3bbf5db1f635cf5657728b", "text": "Method called to cancel this project .", "title": "", "metadata": ""}
{"_id": "4e516f2602bf892cf96f290a4c6dd8f6", "text": "get current token price .", "title": "", "metadata": ""}
{"_id": "e445cd27089cd294eaf856ed26948d1d", "text": "remove an exchanger role from an address .", "title": "", "metadata": ""}
{"_id": "3f475c3c0e9ba91038021304fa308263", "text": "Returns the total amount of Ether the active player will receive .", "title": "", "metadata": ""}
{"_id": "22057b58be108a831f17a5af3da65d58", "text": "The owner of a kitty may train or retrain ( reset everything ) a kitty here .", "title": "", "metadata": ""}
{"_id": "fc273b7cb15b518b5f6a7c965c89ab95", "text": "Safety to withdraw all tokens , ONLY if all buyers have already withdrawn their purchases .", "title": "", "metadata": ""}
{"_id": "7fa361b0af244e0a8de985a8345e891d", "text": "Pay winner , update contract balance to calculate new max bet , and send reward .", "title": "", "metadata": ""}
{"_id": "54f4d80222634ef4d711fdcc2f412c80", "text": "Returns whether the sale is during its restricted period , where only white-listed participants are allowed to participate .", "title": "", "metadata": ""}
{"_id": "f02c5b95fd3747b3fb9686adb4cb8e25", "text": "Returns the number of NFTs owned by _owner .", "title": "", "metadata": ""}
{"_id": "1e9e2d67b5480cd73f4d3e802fb373b0", "text": "Calculates amount of ETH needed to buy DOL .", "title": "", "metadata": ""}
{"_id": "43362c2eb6fc86c70d8fb70e975d7821", "text": "withdraws an amount from the user balance if 7 minutes passed since the request .", "title": "", "metadata": ""}
{"_id": "9647ad143e9024e5c6f16efff506e0f2", "text": "address NewsContractEntity .", "title": "", "metadata": ""}
{"_id": "63ceade0e5004b6920c81adb098b774e", "text": "Remove the address from whitelist .", "title": "", "metadata": ""}
{"_id": "a64ae4583950d7f873994333a8a24e27", "text": "Get the number of tokens that would be given if the sender were to spend _value now .", "title": "", "metadata": ""}
{"_id": "9605edcc06805d68979a0925484811be", "text": "Modifier to make a function callable only when the token holder is frozen .", "title": "", "metadata": ""}
{"_id": "13f5216b6a9b39a82bc76be0de54de01", "text": "If , for any reason , betting needs to be paused ( very unlikely ) , this will freeze all bets .", "title": "", "metadata": ""}
{"_id": "a0e5d42ca0947fe7a53b19fe01e974d1", "text": "We run this function once to create all the teams and set the initial price .", "title": "", "metadata": ""}
{"_id": "118e4e1dcef6a552ee2ff833ee48da31", "text": "Removes the given value from the set .", "title": "", "metadata": ""}
{"_id": "58a15255638752d34dced2312c03120a", "text": "Send all token ballance to owner .", "title": "", "metadata": ""}
{"_id": "76a8a594edd73993debd64fe3ff7e77a", "text": "whitelist investors to allow the direct investment of this crowdsale .", "title": "", "metadata": ""}
{"_id": "a46da7d86963eac75129864a18cfe40b", "text": "_nextPrice The next price .", "title": "", "metadata": ""}
{"_id": "27f77822bf9e0465191b28340b452972", "text": "Refunds investor .", "title": "", "metadata": ""}
{"_id": "16a45c0477b6d346fe103a4fb9791520", "text": "Modifier to make a function only callable by the CEO .", "title": "", "metadata": ""}
{"_id": "8f93509459148b18e62b1a5378776192", "text": "Users can claim their contribution if min cap is not raised .", "title": "", "metadata": ""}
{"_id": "df585e97dd8d353f4eda36d9a31dd7bf", "text": "required should there be an issue with available ether .", "title": "", "metadata": ""}
{"_id": "6f3641c8d8ec22a34b9a97f55f6fe00c", "text": "Contract managment functions .", "title": "", "metadata": ""}
{"_id": "8c30395cda76ec201349bd6d86fea2d1", "text": "AP Ok - Calculate APY / ETH at any point in time .", "title": "", "metadata": ""}
{"_id": "7069e4a3a1aed3857d2bc9e3895775a3", "text": "issue token take from user to ethFundDeposit .", "title": "", "metadata": ""}
{"_id": "951ef5af06ffec5595ccc34aa5043e9f", "text": "This is an especial owner-only function to make massive tokens minting .", "title": "", "metadata": ""}
{"_id": "a4c4ee7c97915b4c2125b7d18937fa2b", "text": "Execute the proposal .", "title": "", "metadata": ""}
{"_id": "7939852c6587bac95a346fdbdb3873cb", "text": "Returns all the relevant information about a specific monster .", "title": "", "metadata": ""}
{"_id": "0cd879755c59586e4b090568dc5b3f2e", "text": "Allows execution by the controllers only .", "title": "", "metadata": ""}
{"_id": "3e2f6e9492cca22095c248926875496d", "text": "Owner can update token information here .", "title": "", "metadata": ""}
{"_id": "59f7d5b6ef6b3634fbd8384c53d6ceef", "text": "can never adjust tradable cards each season gets a 'balancing beta' totally immutable : season , rarity .", "title": "", "metadata": ""}
{"_id": "be1094c9792e0694daddff1ffac18717", "text": "Access modifier for Admin-only .", "title": "", "metadata": ""}
{"_id": "d1565707256c8917c0f5f7a567f8d58b", "text": "To approve another user to use your tokens .", "title": "", "metadata": ""}
{"_id": "b9ad235c436ce103894b662e062b01d7", "text": "the frequency of the shark attacks depends on the number of animals in the game .", "title": "", "metadata": ""}
{"_id": "e25ba0ddcb5e4210b8984a136f0374ea", "text": "Property owners can change their hoverText for when a user mouses over their Properties .", "title": "", "metadata": ""}
{"_id": "3f177c0464f8d6637a440d4ae98fb1af", "text": "InterfaceId_ERC998 bytes4 ( keccak256 ( 'tokenOwnerOf ( uint256 ) ' ) ) bytes4 ( keccak256 ( 'ownerOfChild ( address , uint256 ) ' ) ) bytes4 ( keccak256 ( 'onERC721Received ( address , address , uint256 , bytes ) ' ) ) bytes4 ( keccak256 ( 'onERC998RemovedChild ( address , address , uint256 , bytes ) ' ) ) bytes4 ( keccak256 ( 'transferChild ( address , address , uint256 ) ' ) ) bytes4 ( keccak256 ( 'safeTransferChild ( address , address , uint256 ) ' ) ) bytes4 ( keccak256 ( 'safeTransferChild ( address , address , uint256 , bytes ) ' ) ) bytes4 ( keccak256 ( 'getChild ( address , address , uint256 , uint256 ) ' ) ) ; .", "title": "", "metadata": ""}
{"_id": "b6132c127212e120e9120c7d016fe614", "text": "Mint Tokens .", "title": "", "metadata": ""}
{"_id": "1fd16a69a5e7ed74aba71aab6d7de54d", "text": "create new proposal .", "title": "", "metadata": ""}
{"_id": "d27626769937a631deab09f48804c46e", "text": "show values locked in an account's timelocks .", "title": "", "metadata": ""}
{"_id": "29f5c6807b72019a8c48984dc37346e3", "text": "Type of the Module factory .", "title": "", "metadata": ""}
{"_id": "05acc3ee54924c01319a71dd1944cca7", "text": "Append token recipe source alternative .", "title": "", "metadata": ""}
{"_id": "da2b42f55f370196ce69c13db9d5a818", "text": "Modifier that will execute internal code block only if the sender is the parent address .", "title": "", "metadata": ""}
{"_id": "004da608cd1603cd5fe67dbe24b0fc00", "text": "in case refunds are needed , money can be returned to the contract .", "title": "", "metadata": ""}
{"_id": "25a52c5ba22c3eccf4a8cff1b99ffc6a", "text": "How much are KIMS really going for now a days ? .", "title": "", "metadata": ""}
{"_id": "fe8dc6aa7882ee34ae4290c3d98923aa", "text": "Permission related .", "title": "", "metadata": ""}
{"_id": "9ae90bc6da17c4ef9786ad9108bf5466", "text": "Change the name and symbol assigned to this contract .", "title": "", "metadata": ""}
{"_id": "c064d33101ec6920cd827a04e9720588", "text": "Maker can withdraw asset tokens from this contract , with the following parameter : tokens is the number of asset tokens to be withdrawn .", "title": "", "metadata": ""}
{"_id": "100a35c2059d13d007723aa5fd011799", "text": "Anyone could burn tokens by sending it to buyBack address and calling this function .", "title": "", "metadata": ""}
{"_id": "b977d128607bbf02ca0ef49674b749e1", "text": "ETH / USD rate is receivd and converted to wei , this functions is used also to automatically update the stage status .", "title": "", "metadata": ""}
{"_id": "31f1c77ea8d17dfbdb9953cebf5c987a", "text": "The getter for proposedOwner contract variable .", "title": "", "metadata": ""}
{"_id": "a6c9f005346af794a1b95807a0ab14c1", "text": "Retrieve information about registered DSP .", "title": "", "metadata": ""}
{"_id": "5686d23255d02813b90a0b88d648d928", "text": "The converse of the above , resuming betting if a freeze had been put in place .", "title": "", "metadata": ""}
{"_id": "976e2e2f24013112615b5ec37d8b81b4", "text": "Set Admin address .", "title": "", "metadata": ""}
{"_id": "c2d8002c94640736c488f7cc39b1dff8", "text": "NOTE : be careful about array size and block gas limit .", "title": "", "metadata": ""}
{"_id": "b74eb8726a30bb029c66d231fecd5b2d", "text": "Insert in leaderboard LinkedList .", "title": "", "metadata": ""}
{"_id": "0431292a5fb1b1f877efd8c594f69c28", "text": "Returns the game a player completed at the given index .", "title": "", "metadata": ""}
{"_id": "5782ac7baf29ff0186671900cb0939a0", "text": "oraclize is called recursively here - once a callback fetches the newest ETH price , the next callback is scheduled for the next hour again .", "title": "", "metadata": ""}
{"_id": "c16c2604c13b6b0333b4c860aec15455", "text": "Modifier to make a function callable only when the contract is locked .", "title": "", "metadata": ""}
{"_id": "0fc4366aea32245d857047034b9b1425", "text": "Checks if Crowdfund Contract is performing the action .", "title": "", "metadata": ""}
{"_id": "f4aacf88387f9eef1b7b7d1e72d75bc0", "text": "get _user transferable token amount .", "title": "", "metadata": ""}
{"_id": "f590cee74cfd53c52e68758a50e754fb", "text": "'Returns the fee for a transfer from from to to on an amount amount .", "title": "", "metadata": ""}
{"_id": "f471b7c137a79ac76b2c21d5c72da0da", "text": "Indicates that burning is enabled .", "title": "", "metadata": ""}
{"_id": "ac48174a181fc82669233b7e936cbd07", "text": "Whether the proxy is in the deploying stage .", "title": "", "metadata": ""}
{"_id": "a007c583d20b143b80b6f1aeb88e54bf", "text": "Buy the token .", "title": "", "metadata": ""}
{"_id": "3b7251d88d14364001ab4ee8366a7ce8", "text": "Withdraw Ether from this contract to Multi sigin wallet .", "title": "", "metadata": ""}
{"_id": "d06187a08bfd4a305580cb5501da48f6", "text": "Informational constant functions .", "title": "", "metadata": ""}
{"_id": "6badeccd3564dfe1b44cc43fadd196f2", "text": "Execute an order that was submitted by the external order book server .", "title": "", "metadata": ""}
{"_id": "9fbde9fee0c3f5f2766e517b2106bded", "text": "Function to unlock tokens for some period of time .", "title": "", "metadata": ""}
{"_id": "9a58c56c71b2987371806b57e4c306ce", "text": "selfdestruct for cleanup .", "title": "", "metadata": ""}
{"_id": "116c450cdede1c8ba8d91269a15b2336", "text": "Checks to see if a specific deposit has been skipped .", "title": "", "metadata": ""}
{"_id": "fd1749a1c0e39fcf05cf80ef0940fd6b", "text": "Get contract work state .", "title": "", "metadata": ""}
{"_id": "c6333efddb204de749a0fcc16bc57f3e", "text": "Burns a specific amount of tokens from yourself ( The Owner ) .", "title": "", "metadata": ""}
{"_id": "8f6b455f8baff12ee8c0af10af50bb27", "text": "When the king decides to collect his fees .", "title": "", "metadata": ""}
{"_id": "a17efab9e415a9b19dcf83870cc8943b", "text": "set new base Price for create token .", "title": "", "metadata": ""}
{"_id": "a15956106f72300b147ca008bc186003", "text": "Show if crowdsale has ended or no .", "title": "", "metadata": ""}
{"_id": "9bed739855098d6170e3ca50c8124fae", "text": "GET functions .", "title": "", "metadata": ""}
{"_id": "607267080589557062c2a118687429ae", "text": "enlist - enlisting one decentralized startup team to the hack event virtual exchange , making the .", "title": "", "metadata": ""}
{"_id": "055421cb6a7751832e72db21555c77b9", "text": "Standard ERC20 transfer function .", "title": "", "metadata": ""}
{"_id": "552c2e472dbc6c10023b45e3abe9fca1", "text": "Prestart , state is after lock , before start .", "title": "", "metadata": ""}
{"_id": "6f721c7e7b01209755a7db32e26854bf", "text": "To set the wallet address by the owner only .", "title": "", "metadata": ""}
{"_id": "dc73241f5ca6736db5eaa83f51425838", "text": "Checks if Today is a holiday at OwnTheDay . io .", "title": "", "metadata": ""}
{"_id": "1e0f4d7eae2588735a73ca4367735469", "text": "Finish token minting .", "title": "", "metadata": ""}
{"_id": "48b45cfcf8c1125d5a0dc4f522e3340b", "text": "modifier to ensure it is before the deadline of last sale period .", "title": "", "metadata": ""}
{"_id": "284bca70d13427c8f6ff014c3ddffd29", "text": "Disable minting .", "title": "", "metadata": ""}
{"_id": "46b80faa9a00faf01aeeda0bfa8e55b7", "text": "update the price based on the remaining count of resources .", "title": "", "metadata": ""}
{"_id": "ce858018e2ef51d1b12a4f34ade3aa71", "text": "The blacklistEscapeTokens ( ) marks a token in a whitelist to be escaped .", "title": "", "metadata": ""}
{"_id": "e21be2c678a92f08e17d5d4053202e7e", "text": "Solds tokens for user by ETH .", "title": "", "metadata": ""}
{"_id": "adae82f4a767ea44a7e627178611cf4c", "text": "access our log list of token contracts .", "title": "", "metadata": ""}
{"_id": "2bb7e22a64e69d5da02bf6d05f59c429", "text": "Internal : Remove a fullfilled request .", "title": "", "metadata": ""}
{"_id": "6276a62b127c57f2074c9b6267f7eff3", "text": "workaround for struct https : / / github . com / ethereum / remix-ide / issues / 920 issuecomment-348069589 .", "title": "", "metadata": ""}
{"_id": "946fb19b8e61cf2488225db262ce16ad", "text": "Activates Emergency Stop for Token .", "title": "", "metadata": ""}
{"_id": "fd6f990be3fa1803db169c0543a98d67", "text": "Iterate through tranches .", "title": "", "metadata": ""}
{"_id": "27015e1aa3746ca0a35b92967b95facd", "text": "This is an extension to the buyToken function in FlexibleTokenSale which also takes care of checking contributors against the whitelist .", "title": "", "metadata": ""}
{"_id": "d350974d735d8710bc7c8a63eb00a229", "text": "allocate tokens to dev / team / advisors .", "title": "", "metadata": ""}
{"_id": "702999260dfb3dbae45226c5a5344bdb", "text": "Below two functions have to be split into two parts , otherwise there are call-stack too deep errors .", "title": "", "metadata": ""}
{"_id": "cb6a6690051e830ef3fca01882a2ed15", "text": "Sets address of seller robot .", "title": "", "metadata": ""}
{"_id": "ee8a7fd71d91d4fb98381691c1a0bcf3", "text": "Get available amount of tokens in the specified pool .", "title": "", "metadata": ""}
{"_id": "3f7b6b4d0d488921430b7e95429f4818", "text": "Send _value tokens to _to from _from if _from has approved the process .", "title": "", "metadata": ""}
{"_id": "febb078a4d563c522cbf99978c48a35e", "text": "Change an existing disbursement .", "title": "", "metadata": ""}
{"_id": "8b8dacc429538bfd96c8298e9c898815", "text": "Cancel remove owner request , can be call only by owner which created this remove owner request .", "title": "", "metadata": ""}
{"_id": "bff1f232342bd98fdbc84e5b930a8a5e", "text": "wei for token according to course .", "title": "", "metadata": ""}
{"_id": "5dc08ad55500cf0be18069b6a3be7b90", "text": "Gets amount of locked deposits for user .", "title": "", "metadata": ""}
{"_id": "55a41f8fd6f187b87d2bc68f28fcfb90", "text": "called when the voting period ends with a minority .", "title": "", "metadata": ""}
{"_id": "78f84aab5f16dba9dcd4a125a08a6a4d", "text": "Burn tokens when user stops rent .", "title": "", "metadata": ""}
{"_id": "fab02c94fbd329ac30527dadb54ebe96", "text": "Sets the Nickname for an Account Address .", "title": "", "metadata": ""}
{"_id": "84e91e9d303e306e5a5752e2f660a6b2", "text": "Emergency methods ( only builder owner or enabled addresses ) .", "title": "", "metadata": ""}
{"_id": "28b2758f2de18e4547bdf35eadfe3870", "text": "new functions .", "title": "", "metadata": ""}
{"_id": "597d205853cf31695a95a9b858d7ffce", "text": "send tokens .", "title": "", "metadata": ""}
{"_id": "16cc7a15402056e638fc2d39c1474ced", "text": "Propose an action .", "title": "", "metadata": ""}
{"_id": "48419a3e93f7eb251b89fe5d79108ba7", "text": "Purchase function allows incoming payments when not paused - requires payment code .", "title": "", "metadata": ""}
{"_id": "3214be041ac4f0ea133179aacd1069d5", "text": "set the dapp owner .", "title": "", "metadata": ""}
{"_id": "6d0c0abeadf11e0b42d99dbb8071484e", "text": "This function returns the current exchange rate during the sale .", "title": "", "metadata": ""}
{"_id": "9f953d6a23b7448df5adde3c09e8b368", "text": "pack NFT data into specified array .", "title": "", "metadata": ""}
{"_id": "704b944e73d6edb0fefd22fdee90fdfd", "text": "internal function to remove approval on a pixel .", "title": "", "metadata": ""}
{"_id": "58b1a56e15e29fe5c5394359fe815a9a", "text": "gate way .", "title": "", "metadata": ""}
{"_id": "e1f3c4d626eed353fcd742a4c5fe55d8", "text": "get token release time of second round .", "title": "", "metadata": ""}
{"_id": "565a2782bf65d0fc29e0c14f9c0b7d9a", "text": "Allows anyone to steal a host's committed ETH if their secret random number isn't random or isn't secret .", "title": "", "metadata": ""}
{"_id": "cf86a21779c9a88849dceb7f2a93801b", "text": "Function to freeze address .", "title": "", "metadata": ""}
{"_id": "19554db12d42be14b46197be2b48878a", "text": "Sets token value in Wei .", "title": "", "metadata": ""}
{"_id": "9119b5fce2a67102fdadd21944e5359c", "text": "Internal method for claiming tokens for specific address .", "title": "", "metadata": ""}
{"_id": "279d3abe7640393c5bb61dd738da52eb", "text": "calculate value of MTC that can be redeemed from the ETH .", "title": "", "metadata": ""}
{"_id": "24469ddcf29f857b8147148967163d2e", "text": "success bool .", "title": "", "metadata": ""}
{"_id": "99d0f35b661e483c9edda898ef92304b", "text": "Internal Order Placement - process a created and sanity checked order .", "title": "", "metadata": ""}
{"_id": "52b2784732f7980ae5d2b49e8e4834dd", "text": "Administrative function to change the Zethr bankroll contract , should the need arise .", "title": "", "metadata": ""}
{"_id": "2d13444a7bf7a7bce05b24320e507e20", "text": "Self-register multiple new DINs .", "title": "", "metadata": ""}
{"_id": "32b250ca6753b6dc4eea51facae0e6f1", "text": "Get Auction Info .", "title": "", "metadata": ""}
{"_id": "a7a1e2dbdafd78ec43a1cb119265eb7e", "text": "Burns a specific amount of tokens of a token holder .", "title": "", "metadata": ""}
{"_id": "53f27e8678d3fe01ae37f067a6ef1d9c", "text": "Reclaim all ( Except ART ) ERC20Basic compatible tokens .", "title": "", "metadata": ""}
{"_id": "4fa25cc9337dd156b91a13917220cb5e", "text": "Modifier , which only allows function execution if paused longer than timeSpan .", "title": "", "metadata": ""}
{"_id": "92c5f9b93d2b23d9ef86df2978d110fd", "text": "Checks input and then creates storage buffer for transfer agent updating .", "title": "", "metadata": ""}
{"_id": "0635e4c9a6381a7a29f0d3305df253de", "text": "A getter to find how many old parent pledges a specific Pledge had using a self-referential loop .", "title": "", "metadata": ""}
{"_id": "7d2b730a95574aefa77d8d88e5f660f7", "text": "shows unlocked balance .", "title": "", "metadata": ""}
{"_id": "6130001a04112d85f8bfda4c2ad7380f", "text": "Add data for any user by administrator .", "title": "", "metadata": ""}
{"_id": "fc5324edb900edeffa7e9249910b9dc4", "text": "change token's name and symbol .", "title": "", "metadata": ""}
{"_id": "def6acef34a79775d28dc429a867ffd2", "text": "Change lootboxFee .", "title": "", "metadata": ""}
{"_id": "d709b5346119d747d055886222b9ca2b", "text": "Set the aelfMultisig .", "title": "", "metadata": ""}
{"_id": "2649ecd75a097c356e0ceced07f88be9", "text": "Returns tokens amount cap for current stage .", "title": "", "metadata": ""}
{"_id": "0525e102d6f3957da8427d7dfacd1abf", "text": "Assigns ownership of a specific Athlete to an address .", "title": "", "metadata": ""}
{"_id": "33053ad724820c55f2b302fdbd4dfc9b", "text": "Sells the amount of FXX to refill the senders ETH balance for another transaction .", "title": "", "metadata": ""}
{"_id": "0d37824224610abf355e7e5ec7abe1a4", "text": "Transfer tokens from one address to another , for ERC20 .", "title": "", "metadata": ""}
{"_id": "47b1ec02fcdf2a7a3736217270fafa5c", "text": "computes incentive cut for specified loot , .", "title": "", "metadata": ""}
{"_id": "aae4763d15f60ab8969409964c6ab649", "text": "Add a verified address to the Security Token whitelist .", "title": "", "metadata": ""}
{"_id": "cbd95b3953779d6d2dc84b497afca97a", "text": "Get maximum possible wei investment while Iconiq sale .", "title": "", "metadata": ""}
{"_id": "29e198a924296787941d57e8decfb4e6", "text": "Register multiple new DINs and set the resolver .", "title": "", "metadata": ""}
{"_id": "b777b49d7ad3046a6c6ec98ccb165d8e", "text": "Get the missing funds needed to end the auction , calculated at the current RDN price in WEI .", "title": "", "metadata": ""}
{"_id": "4473b90ac06d66b7efd5daaaa94e17ad", "text": "Check that the generation period is started .", "title": "", "metadata": ""}
{"_id": "21a2bbd13cf3a5dafb8be03f313964c4", "text": "Assigns a new address to the Curator role .", "title": "", "metadata": ""}
{"_id": "f676b029657f46d4dc1578e30857e2ca", "text": "NB : we use this to manually process tokens sent in from contracts not able to interact direct with MNY .", "title": "", "metadata": ""}
{"_id": "56933e6c04c055248dcb8af83c95a198", "text": "Invio dei token con delega .", "title": "", "metadata": ""}
{"_id": "804f020c1f082639f0402f90dbfa7cb1", "text": "Returns total amount of rewards that has been already paid ( added to pending withdrawals ) by a given address .", "title": "", "metadata": ""}
{"_id": "202e11e76f5073a12c798afd08a79eff", "text": "Checks whether the sender is eligible for claiming a payout .", "title": "", "metadata": ""}
{"_id": "192e3ec8c14e9bd402ec9742cadd703e", "text": "Set inflationChange .", "title": "", "metadata": ""}
{"_id": "a405bc2ddee1c638e0fe1703eae7736b", "text": "Only allowed by executive officer .", "title": "", "metadata": ""}
{"_id": "f39df26bd7e68d441de77f0672562d1d", "text": "Access-modifier for CEO-only functionality .", "title": "", "metadata": ""}
{"_id": "1f9b05820b554c8c788ce58a6337f12d", "text": "Allows the admin to determine what is the current stage for the sale .", "title": "", "metadata": ""}
{"_id": "62dcc873776a57c3fbae7093680ffc23", "text": "13 set prices for sellPrice or buyPrice .", "title": "", "metadata": ""}
{"_id": "e343cca110e0f00f40209c9d3ddad3ea", "text": "to be called by owner at end of preICO and ICO .", "title": "", "metadata": ""}
{"_id": "561d176bc49173f02c5745ad3a833feb", "text": "Check individual account balance and return balance associated with that address .", "title": "", "metadata": ""}
{"_id": "0b2dc81f31e6c832d2367b3297cf5bdb", "text": "Allocates tokens to games .", "title": "", "metadata": ""}
{"_id": "6efd765d322f2c999d44136c29a8f653", "text": "Withdraws ether for winner .", "title": "", "metadata": ""}
{"_id": "03d39cf78ba8bd4f106211408d6ec4bc", "text": "Unlock vested tokens and transfer them to the grantee ( helper function ) .", "title": "", "metadata": ""}
{"_id": "4c59e8c641ae7907a632e632fe5c851b", "text": "withdraw the gas payback to the owner .", "title": "", "metadata": ""}
{"_id": "7285b4d6d8416527558c59aec588e0bb", "text": "Release tokens after the ICO .", "title": "", "metadata": ""}
{"_id": "d32989487db0a42e65cac195c27985f4", "text": "Withdraws ether and tokens to _escrow if SoftCap is reached .", "title": "", "metadata": ""}
{"_id": "bab75b2dcc29a85bbb01961339e8d216", "text": "Failsafe drain .", "title": "", "metadata": ""}
{"_id": "1860612fa639777953782591140f3c26", "text": "Check the birther balance of a certain address .", "title": "", "metadata": ""}
{"_id": "386e31046792e776831de7727fc06235", "text": "normal send cln to the market maker contract , sender must approve ( ) before calling method .", "title": "", "metadata": ""}
{"_id": "cfe5edb340b01b5243d3b3d8116d20dc", "text": "Change the Proof Token controller .", "title": "", "metadata": ""}
{"_id": "3a1daf64266da10ba92bfbd4cceba957", "text": "returns the name EMJ .", "title": "", "metadata": ""}
{"_id": "1de04d3a9c4c04251b300bedeaeef2e3", "text": "Get contributor addresses to manage refunds or token claims .", "title": "", "metadata": ""}
{"_id": "1377153c25fd8cd73ebaca6c11f8fb4c", "text": "Allows approved contracts to issue Patron tokens .", "title": "", "metadata": ""}
{"_id": "2a54da773eb7c894a71577febe583677", "text": "Transfers the ownership of an WAR from one address to another address .", "title": "", "metadata": ""}
{"_id": "1d1ea101b23deda01bac9533c7d19d6e", "text": "Get reference of winningTrader before clearing .", "title": "", "metadata": ""}
{"_id": "ee1e42c79d2089ed7ebd02678527a414", "text": "Throws if token is under maintenance .", "title": "", "metadata": ""}
{"_id": "a3bab6968fb81bf4a8226807018a0cad", "text": "modifier to determine if the crowdsale has been initialized .", "title": "", "metadata": ""}
{"_id": "28d715d8b32bdd2d8cff202c71ee6cff", "text": "Current status of the contract .", "title": "", "metadata": ""}
{"_id": "5da4f1f92e2ca44a065b46fdff0ed738", "text": "true if tokensale event has ended .", "title": "", "metadata": ""}
{"_id": "b675c1d8a0c98a7d6e799d1f2dbd4703", "text": "Issue : Change to internal pure .", "title": "", "metadata": ""}
{"_id": "3c04fcc49307e4c73b0a889ce594622d", "text": "Allow the closing to happen only once .", "title": "", "metadata": ""}
{"_id": "59bada6624d43ff0c97fdbade91e9357", "text": "called by contract owner for migration of contributors from old contract to new contract .", "title": "", "metadata": ""}
{"_id": "6e59c9bd197d06eda4617f348f00527d", "text": "Called once by crowdsale finalize ( ) if the sale was a success .", "title": "", "metadata": ""}
{"_id": "08e93d688b606c763990d01dc1a1b050", "text": "Makes the token unusable .", "title": "", "metadata": ""}
{"_id": "81b613d3e87568bc394c2c34d67c1a8f", "text": "The auction contract variables are defined in ArtworkBase to allow us to refer to _createArtworkthem in ArtworkOwnership to prevent accidental transfers .", "title": "", "metadata": ""}
{"_id": "b8ef6371a56b3dc577074164338d5813", "text": "function for tracking ethereum purchases .", "title": "", "metadata": ""}
{"_id": "d8e564987449be6e02da749f0c59fe6f", "text": "Sets new minimum buy value for a transaction .", "title": "", "metadata": ""}
{"_id": "415aec3141e30cc445dfca2e5570b10c", "text": "Checks if a given address currently has transferApproval for a particular Monster .", "title": "", "metadata": ""}
{"_id": "20510f39fbbca9f0a1a0aaf07f94f8cd", "text": "onlyOwner modifier extracted from OZs' Ownable contract .", "title": "", "metadata": ""}
{"_id": "a1d60ddb2436e725bb27427e40e14782", "text": "Check is the address is in Staff list .", "title": "", "metadata": ""}
{"_id": "4faad88d2980950d29f629b488001145", "text": "Access control modifier that allows only whitelisted address to call the method .", "title": "", "metadata": ""}
{"_id": "17c14d087fc0b7cd76625e10ecda0a42", "text": "utility function to allow the owner to handle private and bitcoin buyers .", "title": "", "metadata": ""}
{"_id": "30b313a0ed5aa111bb323f33ef43aae0", "text": "Cost modifier , revert if price is not met .", "title": "", "metadata": ""}
{"_id": "d9f2b45e10e6e3ae9f8484a8c00f7228", "text": "Main Setters .", "title": "", "metadata": ""}
{"_id": "c1151d5fe0022081a0fad9845fe254e1", "text": "Upgrades the contract to a different target that has a changed logic .", "title": "", "metadata": ""}
{"_id": "542e5399696d438600a5915b5b7399aa", "text": "Function to send the calculated tokens amount to the investor .", "title": "", "metadata": ""}
{"_id": "7b44181438049393d293804efd6b3ac2", "text": "Return whether a segment was verified for a claim .", "title": "", "metadata": ""}
{"_id": "eebd059633630a945720de53976cfbf1", "text": "If the contract owner is compromised or has failed to update the reference to the Trade contract after an Etheremon upgrade , you can use this function to withdraw any deposited mons by providing the address of the official Etheremon Trade contract .", "title": "", "metadata": ""}
{"_id": "600378857aae326f5e18d7b361f35f2f", "text": "Activate token .", "title": "", "metadata": ""}
{"_id": "e975082d0568aee2d8b72562b7db7de2", "text": "Process a payment that prioritizes the use of reward tokens .", "title": "", "metadata": ""}
{"_id": "6a9d58cba26d85df081a4dc6c9f22281", "text": "ensures only owner can call functions .", "title": "", "metadata": ""}
{"_id": "ffe41592ecdd94d4e456dd782a6919f3", "text": "Throws if called by the owner before ICO is completed .", "title": "", "metadata": ""}
{"_id": "81555113410554b4f5c34a4f86c19b68", "text": "Returns alloed status .", "title": "", "metadata": ""}
{"_id": "8727234f60a2378bb1deb7f52d6e2782", "text": "Activate token sale function .", "title": "", "metadata": ""}
{"_id": "316d1a520432e4690f401a898ff4701d", "text": "Allows safe change current owner to a newOwner .", "title": "", "metadata": ""}
{"_id": "37a147fa7431a7455007b6c2d9330884", "text": "Checks if given address is an administrator .", "title": "", "metadata": ""}
{"_id": "5a1feb0b63253d433ad08876310fb21a", "text": "Commits one token for every token generated to the pool ( batched ) .", "title": "", "metadata": ""}
{"_id": "e42fdbee059ffe64b05dd38fa0dd4516", "text": "Release tokens to multiple addresses .", "title": "", "metadata": ""}
{"_id": "02d558cad635e508d7ea5af250f186c4", "text": "the HRWToken send to the contract and exchange by SellPrice and / / / send ether back .", "title": "", "metadata": ""}
{"_id": "8b3696934649ec506eed3bc8c44c82b2", "text": "The following functions cannot be executed when the contract is paused , given that they call functions from PausableToken .", "title": "", "metadata": ""}
{"_id": "d12031d9656d10200829f74461bbd088", "text": "return colour .", "title": "", "metadata": ""}
{"_id": "5b22b84daafd87e9a6f9917679376dcf", "text": "Dev revenue withdrawal function .", "title": "", "metadata": ""}
{"_id": "1cceee78c0cc2baca651c17e1e843b5e", "text": "Overrides the method from the default Fundraiser contract to additionally check if the hardCap is reached .", "title": "", "metadata": ""}
{"_id": "b1540d237422406a6ae7eb7cc0146edc", "text": "Fly Ass MODIFIERS only playas wit tokens .", "title": "", "metadata": ""}
{"_id": "35353f289177f347550e4d799219ca28", "text": "transfers an alien deposit back to the sender .", "title": "", "metadata": ""}
{"_id": "c84ba2cf42486de85145aab58e306a21", "text": "Generate tokens to specific address , necessary to accept other cryptos .", "title": "", "metadata": ""}
{"_id": "61370be7d64529d5afd1f03abbad37ef", "text": "get total gold cards .", "title": "", "metadata": ""}
{"_id": "70f796fe992738fb722ced70185fa826", "text": "Helpers calculation of min value .", "title": "", "metadata": ""}
{"_id": "237b8e4dfdc87051139a89f9622961b6", "text": "This method will can be called by the owner before the contribution period end or by anybody after the endBlock .", "title": "", "metadata": ""}
{"_id": "881d53a8a5d21c9d83c8184cf860d3d3", "text": "200m coins total reward begins at 500 and is cut in half every reward era ( as tokens are mined ) .", "title": "", "metadata": ""}
{"_id": "5f38d9f11a51a3dc492dcf8c53b7d867", "text": "Internal function for paying dividends .", "title": "", "metadata": ""}
{"_id": "047ae6299d1895f0a2fabb785717dfc1", "text": "Allow _target make token tranfers .", "title": "", "metadata": ""}
{"_id": "b55a909ee334438f7a8b430f45853618", "text": "Adjust game parameters .", "title": "", "metadata": ""}
{"_id": "f975e96b6df67f0139417681964fdbd8", "text": "Return the happiness of the citizens of a city .", "title": "", "metadata": ""}
{"_id": "f18b26be5bfcb5f231409cee288d56bb", "text": "increase token balance of some address .", "title": "", "metadata": ""}
{"_id": "aaf6598b44020483a7c23560bf0b1cfd", "text": "Remove authorities of the address used in Exchange .", "title": "", "metadata": ""}
{"_id": "cd2c27d79a6de8fe2678bfa52b518c00", "text": "Allows the owner to change the price for tokens .", "title": "", "metadata": ""}
{"_id": "e6d5cd606f736fdd10a4c4413f0c59fa", "text": "Splits a unique key for a stock and returns the market and symbol .", "title": "", "metadata": ""}
{"_id": "cfb0db24e3716de8aede9420b9f85749", "text": "get jishis' locked amount of token .", "title": "", "metadata": ""}
{"_id": "35b7f06a32358b6f9bfd44c1f8048c39", "text": "set airDrop flag .", "title": "", "metadata": ""}
{"_id": "71628126485d2c03baf188d397eb0e62", "text": "In the case that there is any ETH left unclaimed after the two month refund window , .", "title": "", "metadata": ""}
{"_id": "2c0c97d60bb9a8c9ad412b3492b7a8b3", "text": "Owner only setters .", "title": "", "metadata": ""}
{"_id": "bcc8263d0534d65438b259a269651ae8", "text": "Accept ethers to buy tokens during the token sale .", "title": "", "metadata": ""}
{"_id": "eef19ea16fbc1e03b558ade51451cbd6", "text": "get the first phase total supply .", "title": "", "metadata": ""}
{"_id": "af6be21ebf5d91e78fd83ae873e258d5", "text": "Transfer the balance from owner's account to another account , with KYC verification check for the crowdsale participant's first transfer .", "title": "", "metadata": ""}
{"_id": "2f0ef008efb1c79ad122324262377895", "text": "Burns a specific amount of tokens for specific address .", "title": "", "metadata": ""}
{"_id": "00bb3b7b864fde314dbe43d6fa6b56ca", "text": "crowdsale participation .", "title": "", "metadata": ""}
{"_id": "1648084048b90ad9ed6924c46e5d2435", "text": "Trigger immediate payout as creator ( costs small amount of additional gas ) .", "title": "", "metadata": ""}
{"_id": "43c699cd76bfc5f132225d9814626976", "text": "Extend parent behavior requiring to be within contributing period .", "title": "", "metadata": ""}
{"_id": "c7beb6d41e154245d68deed36ecffc06", "text": "Function to start minting new tokens .", "title": "", "metadata": ""}
{"_id": "5c50802b4dabe90b5c1b7c7a91c9cde6", "text": "Allows owner to withdraw ERC20 tokens from the contract .", "title": "", "metadata": ""}
{"_id": "bf8ab361c945a4e49df01fbec1a96cf8", "text": "modifier to scope access to manager / / reverts .", "title": "", "metadata": ""}
{"_id": "51a9631c502377d04a15c89010c9d4b3", "text": "sets max number of tokens to ever mint .", "title": "", "metadata": ""}
{"_id": "79aea28edd0ce94087f8c38d8fc4b973", "text": "freeze an account .", "title": "", "metadata": ""}
{"_id": "ce65b8d00f872f075a58cde1fcd2fe72", "text": "Allows the owner to sell tokens with other forms of payment including fiat and all other cryptos .", "title": "", "metadata": ""}
{"_id": "e5572200ba010f3827603ae0cf3d2204", "text": "normal cards .", "title": "", "metadata": ""}
{"_id": "faaf99b6fc250b56d559719fdfd2c0cf", "text": "Gets the token symbol .", "title": "", "metadata": ""}
{"_id": "a52603d24348c017eab4a876800fd980", "text": "Process the contribution .", "title": "", "metadata": ""}
{"_id": "4dc4c4e99b135d6d12bdb6d19b60eaee", "text": "Burn specified number of PLTN tokens .", "title": "", "metadata": ""}
{"_id": "cc0131e0e05c511680ee821f9ace9e97", "text": "Transfer a Puppy owned by another address , for which the calling address has previously been granted transfer approval by the owner .", "title": "", "metadata": ""}
{"_id": "cea041812a32d86b362c352a73460e62", "text": "Change current price of Paycarnita .", "title": "", "metadata": ""}
{"_id": "9dec06229f6d84a255248f30951c670b", "text": "Set contribution flag status .", "title": "", "metadata": ""}
{"_id": "2347895066c800e3e990a6788bec6465", "text": "2 . 5 lottery whether user can lottery for free .", "title": "", "metadata": ""}
{"_id": "505e460100670b092fdca0f3f3f01032", "text": "Transfer tokens from the vested address .", "title": "", "metadata": ""}
{"_id": "fd5028204fd9b8add97eb293b783ab8b", "text": "Substracts the take fee from EtherDelta .", "title": "", "metadata": ""}
{"_id": "cf938fa018baae4c5fb16c778783dd1c", "text": "in case of a failed / aborted ICO every investor can get back their money .", "title": "", "metadata": ""}
{"_id": "8f90b828cc38559bec422bc9c62f8b5a", "text": "Buy keys .", "title": "", "metadata": ""}
{"_id": "03c5767fce8aedc455098438c4c886fa", "text": "Internal , updates the balance of Ether available in order to cover potential sales .", "title": "", "metadata": ""}
{"_id": "36cef92288be439286c7d810bb0ffd11", "text": "Sets rate if it was not set earlier .", "title": "", "metadata": ""}
{"_id": "813b6a9f9eced5b077b5451c7219ceb6", "text": "Modifier to make a function callable only if the reservation was paid .", "title": "", "metadata": ""}
{"_id": "becc3914142015ded40b95d9ebbad3cf", "text": "Modifier to prevent execution if ico has ended or is holded .", "title": "", "metadata": ""}
{"_id": "d2c541391edba8ea5736394e5c2498f5", "text": "Do the airDrop to msg . sender .", "title": "", "metadata": ""}
{"_id": "d6f44b250debc6d6e402bd77a07c0ede", "text": "since v0 . 4 . 12 .", "title": "", "metadata": ""}
{"_id": "516a9ff42ee9bbfdb48ed90b261ffe61", "text": "Finalizes the token sale event , by stopping token minting .", "title": "", "metadata": ""}
{"_id": "0be94aaa7bc0bafba340d107db81f1d7", "text": "Removes return agent from list .", "title": "", "metadata": ""}
{"_id": "b4d6ce52957a2472ff3514b78c1f6945", "text": "check wether the address is a casino owner .", "title": "", "metadata": ""}
{"_id": "3de69fc4d2c746c478d0a55c3549cc49", "text": "Returns a single payout when calculated using the splits method .", "title": "", "metadata": ""}
{"_id": "577306bc70f07ad26350b47e51c648eb", "text": "freeze / unfreeze account can only be called by the contract owner .", "title": "", "metadata": ""}
{"_id": "c72a8e69afe791723d2182f2d6562a96", "text": "Take some ( or all ) of the ether ( minus fees ) in the buyOrderBalances hash in exchange for totalTokens tokens .", "title": "", "metadata": ""}
{"_id": "22aa2444816c016bd46a6c22750e314a", "text": "Owner can return specified amount from tokenOwner .", "title": "", "metadata": ""}
{"_id": "a6e35f106c6a663fbd2ba45590df2626", "text": "On chain verification of an ECDSA ethereum signature .", "title": "", "metadata": ""}
{"_id": "a7f418d6bc8b9fb9dd378a52f9177f88", "text": "Takes item off champ .", "title": "", "metadata": ""}
{"_id": "a1067e9642cee1c0d1cdce7cf3e7d126", "text": "Unpause the token contract .", "title": "", "metadata": ""}
{"_id": "4ba043ec71aab34f9925e64024f4ce83", "text": "wrap up crowdsale after end block .", "title": "", "metadata": ""}
{"_id": "4fb7558397b1fe112c37782acbf4c7d8", "text": "This function 'unwraps' an _amount of Ether in the sender's balance by transferring .", "title": "", "metadata": ""}
{"_id": "b5c8dccbaf67fb0dd6847659c8d14704", "text": "Withdraw funds to a backup account .", "title": "", "metadata": ""}
{"_id": "dc6559ca99907633a13eb5d324a26615", "text": "the balance the particular account .", "title": "", "metadata": ""}
{"_id": "8817001dbf1300c4fd5c2d3078fda6c8", "text": "Sets gas price .", "title": "", "metadata": ""}
{"_id": "2835c4dc332bd50739785b9cb33a004a", "text": "Add 100 bonus .", "title": "", "metadata": ""}
{"_id": "c148301aaff6e92edfd2103d50f2014a", "text": "Approve user's KYC .", "title": "", "metadata": ""}
{"_id": "a963d58a7a322213b03a60810032e9ce", "text": "Returns the number of Centurions owned by a specific address .", "title": "", "metadata": ""}
{"_id": "2bdc8071de72550052e2b90788ae6f1b", "text": "funktion contains approve with the addition to follow the contract / / / about the allowance .", "title": "", "metadata": ""}
{"_id": "e1288f717dd12fe14def4df624ea08c6", "text": "Assign proceeds to an address .", "title": "", "metadata": ""}
{"_id": "ba6edfb528d297803ed9dfd3ff9a14f4", "text": "totalTokens Total tokens held by this token holder .", "title": "", "metadata": ""}
{"_id": "96b5da3bec87ea38874b3689ad48cacd", "text": "Register your seller address for a small fee to prevent flooding and and recurring address recreation .", "title": "", "metadata": ""}
{"_id": "6029d15de9a946b400ce8eb932b75cb5", "text": "admin initiates a request to transfer _child to _newOwner .", "title": "", "metadata": ""}
{"_id": "a4873b64d8df86c4829534dfab97ef5b", "text": "Create new deposit account .", "title": "", "metadata": ""}
{"_id": "b5d4fe092fd095169f64801bb1296869", "text": "Special only admin function for batch tokens assignments .", "title": "", "metadata": ""}
{"_id": "26065ddf3529c101460fec2c87d70975", "text": "Adds a new stock to the game .", "title": "", "metadata": ""}
{"_id": "35ce8292b0b374c07e4fb2e3b30f6eab", "text": "manually transfer tokens .", "title": "", "metadata": ""}
{"_id": "bbcb335c28b6ba191f4f4cdfd5d0241c", "text": "Here is the example of modifier this function code replace _ ; statement of modifier .", "title": "", "metadata": ""}
{"_id": "fa7a45d4ffc6efaa283aa2520fc2ca04", "text": "Mint tokens for a particular participant .", "title": "", "metadata": ""}
{"_id": "eaaddf202c887b8eab95bfcf2e19d1b3", "text": "Withdraw All or part of contract balance to Contract Owner address .", "title": "", "metadata": ""}
{"_id": "4be14c86e874b2f917c91861704f17ac", "text": "Trigger new versions of Melon .", "title": "", "metadata": ""}
{"_id": "7a004c2d4ba6cb2867e9c4f402a3a564", "text": "Set skin contract address .", "title": "", "metadata": ""}
{"_id": "aeebca6727af3387d654c58275834984", "text": "transfer Ownership to other address .", "title": "", "metadata": ""}
{"_id": "5e51c53c628fa9683f52e17125b13d03", "text": "This function is used to change the phone number in the service .", "title": "", "metadata": ""}
{"_id": "07a78393554a6a66acddc2e1d9b317ff", "text": "Token is in lock up period .", "title": "", "metadata": ""}
{"_id": "2fd41cd113fa43e6f996d3a678375d3d", "text": "Sets new state .", "title": "", "metadata": ""}
{"_id": "a6ef9e36649744f50c9b13367e49560a", "text": "Add to 2y locked balances and totalSupply .", "title": "", "metadata": ""}
{"_id": "92ec08834ef6b38d3641c4feeef3c6fb", "text": "Check if dad has authorized breeding with the mom .", "title": "", "metadata": ""}
{"_id": "e4c77feefb30eb13141bded0f078caca", "text": "update token units a vip buyer gets per wei .", "title": "", "metadata": ""}
{"_id": "a14db9321e508a0402827b825818e272", "text": "Load funds to the crowdsale for all investor .", "title": "", "metadata": ""}
{"_id": "35b3d3a7da9d19b62791091eb2a6d08c", "text": "this modifier is used for functions that can only be accessed by the contract creator .", "title": "", "metadata": ""}
{"_id": "7fc7a4ad066d2e2513485c0d871795f9", "text": "withdraw from account , with 10 ether interest ( after term deposit end ) .", "title": "", "metadata": ""}
{"_id": "eb5662e55b2b13ce3394aaa8a2c7e34f", "text": "Perform an ERC20 token transfer .", "title": "", "metadata": ""}
{"_id": "4557dad819893dd351e99d7b32b0da25", "text": "Whitelisted users can contribute during the starting period of the crowdsale .", "title": "", "metadata": ""}
{"_id": "fc3770457ec97f5253d0144e9bb0b08c", "text": "unbans a user that was banned with the above function .", "title": "", "metadata": ""}
{"_id": "bacb3ad2bbc0aa44acd1aca57e7b1be3", "text": "Setup stakeholders .", "title": "", "metadata": ""}
{"_id": "416753ff33b52402a98c50dbe81c5b15", "text": "Check whether the pre-ICO is active at the moment .", "title": "", "metadata": ""}
{"_id": "f20627f4935f29df91f29ffa96f35f03", "text": "Get number of element in Array a_document ( does not used GAS ) .", "title": "", "metadata": ""}
{"_id": "58596a0de863be498e85284d71710472", "text": "Change the rating delay .", "title": "", "metadata": ""}
{"_id": "d8cb0c9159133e7747c647f2551a4e5a", "text": "For creating Place .", "title": "", "metadata": ""}
{"_id": "b0882869c851be3edb81ab14035118c8", "text": "Withdraws all ETH / SNT owned by the user in the ratio currently owned by the contract .", "title": "", "metadata": ""}
{"_id": "95d1fb7685a4846c69508fbe26f017fa", "text": "Ending the game : 1 ) we calculate the winner address 2 ) We update earnings array 3 ) We reset variables .", "title": "", "metadata": ""}
{"_id": "893fb7078aa0fe4e8bad168da2526683", "text": "Change issuer address .", "title": "", "metadata": ""}
{"_id": "7dfeacc2f27546d488c56a63c847b4ba", "text": "Sets the player override identifier .", "title": "", "metadata": ""}
{"_id": "ad071efb46a096522dbe59a2b14fb1ed", "text": "Init function for ATxAsset .", "title": "", "metadata": ""}
{"_id": "f8e03097089ce28933b76afb22c8cc22", "text": "If withdrawals are unlocked ( final stakes of the cycle 0 and totalStakes 0 ) , this function withdraws tokens from the sender s balance to the specified address .", "title": "", "metadata": ""}
{"_id": "574fcac4be72dd098011233a2601d61a", "text": "Get allowed amount for an account .", "title": "", "metadata": ""}
{"_id": "3b3539e901245d6ce6139c54cc87a482", "text": "Funtion : Transfer owner's authority .", "title": "", "metadata": ""}
{"_id": "a2c5974af452be2a6cd46db73a219ecb", "text": "sub the segmentation .", "title": "", "metadata": ""}
{"_id": "388d386c10c86aee1602a94e3cdcefdd", "text": "The logic of finalization .", "title": "", "metadata": ""}
{"_id": "1643257b988268a59da7b3300fceef80", "text": "Collect information about doge farm dividends amount .", "title": "", "metadata": ""}
{"_id": "78902ae124cccf1cd822643065ffb1e4", "text": "returns either the salePrice , or if reserve does not suffice for active supply , returns maxFloor .", "title": "", "metadata": ""}
{"_id": "d122f4debe72dd53b1b1e751a7c74794", "text": "Burn some tokens .", "title": "", "metadata": ""}
{"_id": "c6e17bfe7987268afe4db1c6cc4a33a0", "text": "Add a function returning a boolean as a start condition for a state .", "title": "", "metadata": ""}
{"_id": "14704c0f4f788d504bfedf3a57ed1273", "text": "Internal function to transfer tokens .", "title": "", "metadata": ""}
{"_id": "ff19c9e696e39f6983de897a8e92664f", "text": "get investors deposited .", "title": "", "metadata": ""}
{"_id": "1f7410975d2e8837199657a50e0a8d93", "text": "Purchase a system-Property in pure ETH .", "title": "", "metadata": ""}
{"_id": "7c5c8c99a0913dd1b579bbf331e5d2c8", "text": "Not interesting , safe math functions .", "title": "", "metadata": ""}
{"_id": "7bc16a59848d84b63e69af73c4d1f1b2", "text": "Addresses can set their name when composing jingles .", "title": "", "metadata": ""}
{"_id": "31c8b0e670d9a2540b90a9d05064f97a", "text": "value uint256 Value to add to the checkpoints ledger .", "title": "", "metadata": ""}
{"_id": "43b3bb155e56ec81b4fa71bcab3b8a01", "text": "Allows the owner to disable the trading .", "title": "", "metadata": ""}
{"_id": "0f537efd61b037698dfb618353f322d5", "text": "sets avatar if no avatar was previously set .", "title": "", "metadata": ""}
{"_id": "19ad767e10ce36fe8d3b89df054acc48", "text": "This method will generally be called by the SNT token contract to acquire SNTs .", "title": "", "metadata": ""}
{"_id": "b09b31a5bf30a3bfbc13bc0d4b3b727e", "text": "the _value will be substructed from user balance and added to the stake .", "title": "", "metadata": ""}
{"_id": "c34ce524264fce9909dfcb287cc3040e", "text": "function to check the amount of tokens than an owner allowed to a spender .", "title": "", "metadata": ""}
{"_id": "525810c6a9d7bc14d320189d7f50e1a2", "text": "Locks must be purchased in 20x20 pixel blocks .", "title": "", "metadata": ""}
{"_id": "c965658f67e4af680fe441125096022f", "text": "owner rights availability .", "title": "", "metadata": ""}
{"_id": "66ab2f472be846800da866c0cf5cfa0f", "text": "Retrieve contributions by a single contributor .", "title": "", "metadata": ""}
{"_id": "678aed3b82b2a8af0a47c5908e7266df", "text": "Lock transfer during Sale .", "title": "", "metadata": ""}
{"_id": "ba830fd1ba8dc763d7d021b30319b414", "text": "Get the Keccak-256 hash of order with specified parameters .", "title": "", "metadata": ""}
{"_id": "5fcb06dce2d9019c223650c035b44365", "text": "Burn away the specified amount of VenusCoin tokens .", "title": "", "metadata": ""}
{"_id": "9a57d503a8fb6e3cae4493534619855e", "text": "Reverse a fiat purchase made by calling purchaseWithFiat ( ) .", "title": "", "metadata": ""}
{"_id": "d892884bbf8889689a9847c4be45b548", "text": "Reveal multiple curves at once .", "title": "", "metadata": ""}
{"_id": "2f981d5ab3ad8b20aadfaca19116a7a4", "text": "The first four parameters relate to Token orders , the last eight relate to DEX orders .", "title": "", "metadata": ""}
{"_id": "40a4ab712d5920ff76ae3edda5f35f74", "text": "after a day , admin finalizes mint request by providing the index of the request ( visible in the MintOperationEvent accompanying the original request ) .", "title": "", "metadata": ""}
{"_id": "ee0cd05a208741b1c9528e76d2e59337", "text": "send ETH from the contract to a given address .", "title": "", "metadata": ""}
{"_id": "41658dc7ad3880b0f038e0b0a3b942ef", "text": "set dispute of contract address .", "title": "", "metadata": ""}
{"_id": "e63c1938173199ba0cbd653c8a1ab59b", "text": "Sends available amount to stored beneficiary .", "title": "", "metadata": ""}
{"_id": "b83d1840d39e592c47e67e9304f091f8", "text": "Call execution API .", "title": "", "metadata": ""}
{"_id": "203f6e1d7a79b72ea675b3ad5625bf82", "text": "Set the minimum amount to be of transfered in this contract to start distribution .", "title": "", "metadata": ""}
{"_id": "e5be66d4fda662c42f48f89678d1f60f", "text": "Sets the TTL for the specified node .", "title": "", "metadata": ""}
{"_id": "b0948b93925a6c485f3f1d5f27aabca5", "text": "The number of orders .", "title": "", "metadata": ""}
{"_id": "eefaaa8bb1c42466404d596a626bae07", "text": "transfer action between users .", "title": "", "metadata": ""}
{"_id": "7c78d62e564150bb0942da94d4aa6138", "text": "withdraw M5 reward , only appied to mining when GDP is negative .", "title": "", "metadata": ""}
{"_id": "cc842d149e500c024db5d4b64e03cadc", "text": "Stake ( ) function being called with 0xde20bc92 and ETH : : recommended gas limit 35 . 000 .", "title": "", "metadata": ""}
{"_id": "fbd624b770c521f73a6ae8a328d179eb", "text": "get factory address for given country .", "title": "", "metadata": ""}
{"_id": "534f82fb1548e6fc3def1fb56e7a13e5", "text": "Decrement _acct balance by _val .", "title": "", "metadata": ""}
{"_id": "4998276f8d50e2cd9e1314f66d057cea", "text": "Throws if called by any account other than the owner or manager .", "title": "", "metadata": ""}
{"_id": "f2860934b97170bb1a71ef3c10092756", "text": "Withdraw contract balance to _addr .", "title": "", "metadata": ""}
{"_id": "b904349744086d9664f8f27f942e9aab", "text": "Internal function which is responsible for sending tokens .", "title": "", "metadata": ""}
{"_id": "81f50f601df0b21945c36ab7a9b347fa", "text": "calculate the amount of tokens an address can use .", "title": "", "metadata": ""}
{"_id": "3d6ec0a3bba25dd4d17f9249f24bf0a7", "text": "Create the random number query to Oraclize .", "title": "", "metadata": ""}
{"_id": "cfc775d21c37a5fc3f943c4065cdfc0e", "text": "Check if there is an ongoing proposal .", "title": "", "metadata": ""}
{"_id": "b6b7de9fc01d7ee80a7d33859e44a883", "text": "Calculates and returns proof-of - stake reward for provided time .", "title": "", "metadata": ""}
{"_id": "6829c79a2a6b60189eb2399f52d74753", "text": "can be called by anybody .", "title": "", "metadata": ""}
{"_id": "0abfe0c1f27e09cee7e322ccb7dff8a9", "text": "Powers the first number to the second , throws on overflow .", "title": "", "metadata": ""}
{"_id": "cb310ce2a80c90140f4b175d1f844023", "text": "Cancel an existing order .", "title": "", "metadata": ""}
{"_id": "60edcb69bcc8d305b1bc31306d810a92", "text": "To make token transfers to a user or a contract with additional data .", "title": "", "metadata": ""}
{"_id": "81b21c01f41310b5a4248c1aa8f233af", "text": "Update whitelisted address amount allowed to raise during the presale .", "title": "", "metadata": ""}
{"_id": "acb31de64b167c04cd1cee342b7f6abd", "text": "Transfers a Lambo to another address .", "title": "", "metadata": ""}
{"_id": "c81a98a244d1c4ec977fecc13773c574", "text": "refund to owner .", "title": "", "metadata": ""}
{"_id": "811b61bd5793e92c68175f76c6231043", "text": "Owner can update which Doublr the POOHMOWHALE pays to .", "title": "", "metadata": ""}
{"_id": "314f08e87caeb6a732bfe33821dbddfd", "text": "Equipment creation .", "title": "", "metadata": ""}
{"_id": "27cb3b23af2ffd484b4d88f61916dc9c", "text": "Check how many tokens are remaining for distribution .", "title": "", "metadata": ""}
{"_id": "27cdd90717ec19f53e1aefec45dd350b", "text": "This function returns the maximum businesses a city can build ( according to its population ) .", "title": "", "metadata": ""}
{"_id": "6b9661fa7c00d6df83c69dde1d704945", "text": "Impl ISmartToken .", "title": "", "metadata": ""}
{"_id": "9b2df320f07141326e798bef4f714c2c", "text": "return current GTO address .", "title": "", "metadata": ""}
{"_id": "e12d820aea2a7f0cb09dcd8531a262b6", "text": "Returns address of oracle currency ( 0x0 for ETH ) .", "title": "", "metadata": ""}
{"_id": "db382c11e4656ddf9d0180c091420d55", "text": "Withdraw any ERC20 token ( just in case ) .", "title": "", "metadata": ""}
{"_id": "1675d81fd6d84b91ce8b0339ada2c120", "text": "Transfer ownership of token to a new address need for the next sale .", "title": "", "metadata": ""}
{"_id": "ac1eaee13c43429eebdff2a0d47e9a42", "text": "Contract may be destroyed only when there are no ongoing bets , either settled or refunded .", "title": "", "metadata": ""}
{"_id": "876ec01dc4f44aebb2ae285f8ccf66c0", "text": "Withdraw Ether owed to the sender .", "title": "", "metadata": ""}
{"_id": "c423f70abe4895d04af8b868718fb103", "text": "Use this to create more than 1 token at a time .", "title": "", "metadata": ""}
{"_id": "f556fe9a5d681c3fcebe176511fa162f", "text": "finalizes crowdsale .", "title": "", "metadata": ""}
{"_id": "d088cbde315a8a34b2c36617d111dbf3", "text": "Updates the adminAddress propety with the new _adminAddress value .", "title": "", "metadata": ""}
{"_id": "1ee5ef2e226c64afcccfeda487be7f0e", "text": "Temporary freeze account , make transfers from this account unavailable for a time .", "title": "", "metadata": ""}
{"_id": "4342f695df1e25aed342934fcd0a3865", "text": "Returnes number of holders in array .", "title": "", "metadata": ""}
{"_id": "bfb7810ab368d6c2ca2a426e98b32f34", "text": "Is caller ( sender ) service account .", "title": "", "metadata": ""}
{"_id": "75ba73ba0cf40bf94bb274ba5f169391", "text": "Crowdfunding success checks .", "title": "", "metadata": ""}
{"_id": "790928863dfbe81a1e28191ecf4bc9d9", "text": "Function to claim ROK tokens .", "title": "", "metadata": ""}
{"_id": "4715a4b064030f176279fb196a89b960", "text": "Maintenance function , if accountsList grows too long back end can safely clean unused accounts and push the renewed list into the contract .", "title": "", "metadata": ""}
{"_id": "965f92c93d7c4f01ab97b1fe1926ee05", "text": "Throws if called by any account other than the controller .", "title": "", "metadata": ""}
{"_id": "2298f5270735306327ae9590b7c4a9a6", "text": "freeze the account's balance .", "title": "", "metadata": ""}
{"_id": "fe9753fde1287b274f42e26e0e870c4d", "text": "calculate bettor's reward .", "title": "", "metadata": ""}
{"_id": "187bccfc4bc1640b0affc0e477bfcf89", "text": "special function to delay the token sale if necessary .", "title": "", "metadata": ""}
{"_id": "768b0e114f1b1248ebcffa56f58e7592", "text": "Will show to the user that is asking the change he has to receive .", "title": "", "metadata": ""}
{"_id": "a62b8c10ae6e4069acb6f55aaba5728c", "text": "Access modifier for manager-only functionality .", "title": "", "metadata": ""}
{"_id": "bbda40faafde605b2275ed07bc66f57e", "text": "Returns how much a user has bet on the match .", "title": "", "metadata": ""}
{"_id": "748638bced7c595401fc4275db8a653c", "text": "Check whether given address is a smart contract .", "title": "", "metadata": ""}
{"_id": "f540197d3cc17c25fccd11d95da88fd0", "text": "first call Token ( address ) . approve ( mny .", "title": "", "metadata": ""}
{"_id": "3dde8c8363f14f1a934d99f74451feb7", "text": "Burns OWL .", "title": "", "metadata": ""}
{"_id": "1c9975486c0acd6228a9cd1af6f2aab2", "text": "The address of the deposit address .", "title": "", "metadata": ""}
{"_id": "3d7910f4fc81338f3d9107f0ae53ec40", "text": "Returns true if the ICO is a success .", "title": "", "metadata": ""}
{"_id": "c4e375ad61a9a0a506af5535a71c58d9", "text": "Cancel a Template proposal if the bid hasn't been accepted .", "title": "", "metadata": ""}
{"_id": "e84413da62af2c28bee6ec5ab533feb3", "text": "Function to dismiss the upgrade capability .", "title": "", "metadata": ""}
{"_id": "58270fbeefe5ca79f9f1e668d9e0c8ab", "text": "Sets asset spending allowance for a specified spender .", "title": "", "metadata": ""}
{"_id": "b7f87791c44213c27b7041d4c07a3b8e", "text": "Get amount of tokens .", "title": "", "metadata": ""}
{"_id": "7523c67c04cc77fedc7f70aceaefb446", "text": "used to launch the Module with the help of factory .", "title": "", "metadata": ""}
{"_id": "eda9f5136512fbcd4e49fcb211c4e7bc", "text": "companies integration .", "title": "", "metadata": ""}
{"_id": "7670e87758f2a0a0c930055bb20d26f6", "text": "Cancel the game .", "title": "", "metadata": ""}
{"_id": "8715bd684f83550b0d9de81806d9d932", "text": "Returns the timestamps for when active personal stakes for an address will unlock .", "title": "", "metadata": ""}
{"_id": "cdc04bff35e08022d8163afda4768390", "text": "Internal function to deploy and register a oracle .", "title": "", "metadata": ""}
{"_id": "2f56df18fd5c0445662f4d04db96770c", "text": "This check is an helper function for \u00d0App to check the effect of the NEXT transacion , NOT simply the current state of the contract .", "title": "", "metadata": ""}
{"_id": "eeb9e2b56dc5950a68ba584f8bb290ad", "text": "Replaces item at index with last item in array and resizes array accordingly .", "title": "", "metadata": ""}
{"_id": "f5b097a78afdde4bdac3abc8f3139c2c", "text": "Return true if address already voted .", "title": "", "metadata": ""}
{"_id": "1bd7f08c2a8f2b12ccb125a27ab70992", "text": "Throws if mill rate for ETH wei is not sane .", "title": "", "metadata": ""}
{"_id": "6071a0d29cca89bb96bfdd490450b12b", "text": "Can only be called by the administrator .", "title": "", "metadata": ""}
{"_id": "55bac02ca2999d5886debd44b6b5534e", "text": "Total amount of burned tokens .", "title": "", "metadata": ""}
{"_id": "0e049f678ea46081556e99ee715c5e62", "text": "Performs payout based on launch outcome , triggered by bookies .", "title": "", "metadata": ""}
{"_id": "67328fe8e7df6a3b2bf1cfc29e4d7628", "text": "Set fee parameters .", "title": "", "metadata": ""}
{"_id": "ae2d528a0a530a821bb8943da641a72a", "text": "We implement ERC721 here .", "title": "", "metadata": ""}
{"_id": "b1c0005828c8f872d2634b67d8c167c4", "text": "adds an owner .", "title": "", "metadata": ""}
{"_id": "841f3317750091a0ac1a7baaf87a55b2", "text": "For creating Region .", "title": "", "metadata": ""}
{"_id": "d007326b4b7cadab6597f7c636ea61df", "text": "Note how many days are left until the date of withdrawal .", "title": "", "metadata": ""}
{"_id": "763456e50b696c9454f158edb0a6ca1c", "text": "In case somebody sends tokens here .", "title": "", "metadata": ""}
{"_id": "c8e7187b715214735587006d3fa1fe90", "text": "update market rates in USD , EURO , and GBP for a specific coin .", "title": "", "metadata": ""}
{"_id": "f3719718797ddd399f6b1cfd9e052672", "text": "Assigns ownership of a specific Rich to an address .", "title": "", "metadata": ""}
{"_id": "edffacc6397ae811946839824aa40b9c", "text": "4 arrays containing the ids , types , values and owners of the characters .", "title": "", "metadata": ""}
{"_id": "3c6e08e04b0d4987b81084a34be864f4", "text": "agreement not expired , refunds remaining balance in escrow .", "title": "", "metadata": ""}
{"_id": "8ab670b8131d266b2a6f3bf434a73d3b", "text": "explode one supernova from user's supernova balance , write explode result into user account .", "title": "", "metadata": ""}
{"_id": "21a2e1bb53c6469e0fdad7f58709d3c4", "text": "Get balance of a payee .", "title": "", "metadata": ""}
{"_id": "a8d261d0e0c1d88461473338b83b9ed7", "text": "Override of the goalReached function in order to add presale weis to crowdsale weis and check if the total amount has reached the soft cap .", "title": "", "metadata": ""}
{"_id": "fb8a2c058358bcb6012338fade6edca5", "text": "ERC20 Logic Implementation .", "title": "", "metadata": ""}
{"_id": "71ab019a43b32f4163b4a816983692a9", "text": "Ireversibly destroy the specified amount of tokens .", "title": "", "metadata": ""}
{"_id": "e37818505c072a1767e4151ad703928b", "text": "The function that allows the winner of the contest to claim the reward after the contest has ended .", "title": "", "metadata": ""}
{"_id": "1c932f1baef5c50861b21314203e2897", "text": "end ico by owner , not really needed in normal situation .", "title": "", "metadata": ""}
{"_id": "41c8135bbd9d0df23f9cb3dc45822420", "text": "Transfer tokens from one address to another before swap .", "title": "", "metadata": ""}
{"_id": "43ca1ca0c51e99416fe29a74b4b42fa1", "text": "Get furnace information .", "title": "", "metadata": ""}
{"_id": "1d2e7d6703df268f5f6ffb262c76a1f4", "text": "Internal function to clear current approval and transfer the ownership of a given unicorn ID .", "title": "", "metadata": ""}
{"_id": "b3b724785c22179fbb545f18daae2ed1", "text": "TODO : check this again find who owns that sample and at what position is it in the owners arr .", "title": "", "metadata": ""}
{"_id": "62c24cc70e7b5f0c92516ad9269ed3aa", "text": "Stops the minting and transfer token ownership to sale owner .", "title": "", "metadata": ""}
{"_id": "d38b8ca4e48bd97de6354b5a2cbee66b", "text": "Removes _account as an owner .", "title": "", "metadata": ""}
{"_id": "32f6a57c6522db256e99e47335e50c8e", "text": "Override BasicToken transfer .", "title": "", "metadata": ""}
{"_id": "2fe55da1bfe7b47d3be6038e6ca2cc8f", "text": "Calculates the amount of ether per token from the balance .", "title": "", "metadata": ""}
{"_id": "8fd27ddb10d274990839520288a9a584", "text": "Set address of migration target contract and enable migration process .", "title": "", "metadata": ""}
{"_id": "dfeb4aacf1f74c12208901ca8d8dbaff", "text": "funciones del usuario .", "title": "", "metadata": ""}
{"_id": "0841cf795d6aa92402ec8cb344f0cc21", "text": "Proposal-related functions calculate hash of an proposal .", "title": "", "metadata": ""}
{"_id": "1196c9814e95dafd83e848b5b84db643", "text": "Function burns a specific amount of tokens .", "title": "", "metadata": ""}
{"_id": "7bf87b3e7df3c94970ecb395b53f5a1b", "text": "_amount should be greator or equal to what user already have , otherwise will result in underflow .", "title": "", "metadata": ""}
{"_id": "9e193a37d5e70ef8687f2b00e4b755f0", "text": "The current ( or next ) campaign's jackpot .", "title": "", "metadata": ""}
{"_id": "47af6e36db819f389c83905c46023567", "text": "The actual roll function .", "title": "", "metadata": ""}
{"_id": "293fde14ecdba80a5c0dde3d4b395718", "text": "Can only be called after the period .", "title": "", "metadata": ""}
{"_id": "b20b23555bf865a005f6534438458997", "text": "This check is an helper function for \u00d0App to check the effect of the NEXT transaction , NOT simply the current state of the contract .", "title": "", "metadata": ""}
{"_id": "8c22da16dacaa6cfbcbec94985503d0c", "text": "Token Buyer has special to transfer from public sale supply .", "title": "", "metadata": ""}
{"_id": "63aa8eea10183436a5e83ef276df44c6", "text": "ERC20 token transfer function with additional safety .", "title": "", "metadata": ""}
{"_id": "85a8695896e4ea0b2ebdb7a65c93e899", "text": "Modifiers - - note , these are functions here to allow use as a lib .", "title": "", "metadata": ""}
{"_id": "b1829c1c72de355d8f588aa9427635ed", "text": "Function Modification .", "title": "", "metadata": ""}
{"_id": "eef09de9f3e6cf77b555051b6d9e02b8", "text": "Auto Transfer All Schedules .", "title": "", "metadata": ""}
{"_id": "839e066a6eb74c03dbe8246f89e9d8ce", "text": "called only by linked VLBCrowdsale contract to end crowdsale .", "title": "", "metadata": ""}
{"_id": "c838794824dc0fd0d9f8b0d29c388102", "text": "Rents a plot out to another address .", "title": "", "metadata": ""}
{"_id": "30512cb64c9b84c3c725df0a9cb5cc4b", "text": "Standard modifier on methods invokable only by contract owner .", "title": "", "metadata": ""}
{"_id": "35e2ab3d646cc81182718e8d70bb3c2c", "text": "True if the specified address is whitelisted .", "title": "", "metadata": ""}
{"_id": "d50303a64626dbaa09da9336760d1fec", "text": "Claim token pools shares for a delegator from its lastClaimRound through the end round .", "title": "", "metadata": ""}
{"_id": "332da7646c388cb1412e94feba272043", "text": "switch off warrior auras that are enabled in pets auras , pet aura have priority .", "title": "", "metadata": ""}
{"_id": "100e4a927ebd5c2a517bc67d5f070995", "text": "Multi allocate ETH to all token bankrolls .", "title": "", "metadata": ""}
{"_id": "2547f8dc7368365a263a76826a3692fa", "text": "returns value of all dividends currently held by all shareholders .", "title": "", "metadata": ""}
{"_id": "cc3d21f0e73fb68b417e7f56ba9a69eb", "text": "Get a list of ship exploring our universe .", "title": "", "metadata": ""}
{"_id": "058f5db4a85e895c48f83c5964109d11", "text": "Subtracts from the contract balance tracking var .", "title": "", "metadata": ""}
{"_id": "11d53002e4d2a0c838f591ad4705b46c", "text": "Get Security token details by its ethereum address .", "title": "", "metadata": ""}
{"_id": "1b7d859a9c2a805ea6dcacec07ae239d", "text": "Starmid Exchange functions .", "title": "", "metadata": ""}
{"_id": "24386ac942f5702c11460c335f94b22a", "text": "Approve transfer .", "title": "", "metadata": ""}
{"_id": "977b5585d1f715605ab25fe95205443d", "text": "this is called when NTZ are deposited into the burn pool .", "title": "", "metadata": ""}
{"_id": "cb3149389bf2769e69a7aabd554ad442", "text": "will release and make transferable any tokens eligible for release to avoid waste of gas , the calling agent should have confirmed with checkRelease that there actually is something to release .", "title": "", "metadata": ""}
{"_id": "8a3e10cb36b2859ade75b215e0481664", "text": "this contract has to be approved first by _erc223Contract .", "title": "", "metadata": ""}
{"_id": "f4a3870cd72e2d2c2d7b39b84994997f", "text": "Add new proposal and put it in list to be approved .", "title": "", "metadata": ""}
{"_id": "80f39afd618536a5970ce96ac3f23382", "text": "Credits dividends , then mints more tokens .", "title": "", "metadata": ""}
{"_id": "fc7ab23f6d323ca50b3ce56c2ae68dff", "text": "Checks to see if two puppys can breed together , including checks for ownership and siring approvals .", "title": "", "metadata": ""}
{"_id": "5081ffa486e27fc88824e40af19c5afb", "text": "Destroy tokens from other account by force , only a congress contract can call this function .", "title": "", "metadata": ""}
{"_id": "64d277bf8ab0163c189adf9195308a35", "text": "Remove allowed Lock .", "title": "", "metadata": ""}
{"_id": "708a2c7214908c22226e4438bada3dd3", "text": "What is the valance of an user at a block ? .", "title": "", "metadata": ""}
{"_id": "d7307c3a2875e3d4ed81ee4a248d29d4", "text": "Add additional bonus for subscribed investors .", "title": "", "metadata": ""}
{"_id": "e77213d5840900d1b7b45cbef0399ca7", "text": "Crowdsale owners can collect ETH any number of times .", "title": "", "metadata": ""}
{"_id": "5936d3d8f540b26730b2b875a6fa222a", "text": "start Authority and control .", "title": "", "metadata": ""}
{"_id": "2a564d2ef96b18bddcaccb35db523ee7", "text": "Require that the proxy is in _stage .", "title": "", "metadata": ""}
{"_id": "8ac4c98c399feca8c597e85b11c322b9", "text": "Internal function for mocking purposes .", "title": "", "metadata": ""}
{"_id": "1bd27040852e700996136d7f623db24c", "text": "Get the amount of WEDU token that allowed to the user .", "title": "", "metadata": ""}
{"_id": "8e36daef51693b6a1825399a07e4b0f2", "text": "Allows the owner to activate the second pre ICO .", "title": "", "metadata": ""}
{"_id": "08163588445599ebd6f151b151d0e0b7", "text": "This function is choosing the winners based on the random number sent by oraclize .", "title": "", "metadata": ""}
{"_id": "7d7a716d4548bee1a70406914d614ea5", "text": "Returns the details of an auction from its _partId .", "title": "", "metadata": ""}
{"_id": "4008baa46380db508c3f388f2e70f310", "text": "Allow contract to transfer ether directly .", "title": "", "metadata": ""}
{"_id": "8c80f1857c5e2135251b0b2b24191073", "text": "Internal transfer , only called by this contract .", "title": "", "metadata": ""}
{"_id": "ea064855e15861eac53bf7f7af845ea2", "text": "Token allocations for various accounts .", "title": "", "metadata": ""}
{"_id": "a9af14c3f36b177a68e5ecfbc9bb22b4", "text": "withdrawal can only occur after deposit time is exceeded .", "title": "", "metadata": ""}
{"_id": "c8f5554ecf2036a45e34cd776b955d1c", "text": "internal function to check and maybe increase the buying price every time the thresholdAmount is met , the price is increased .", "title": "", "metadata": ""}
{"_id": "cd228ae7ae0be4585c6d4322a18491ab", "text": "Sets the new price for unclaimed plots .", "title": "", "metadata": ""}
{"_id": "4e1dfd18811430c0da9bfdce2e612283", "text": "given a return amount , returns the amount minus the conversion fee .", "title": "", "metadata": ""}
{"_id": "f3c3f37b405350109838baf6307c18d9", "text": "Batch Token Function .", "title": "", "metadata": ""}
{"_id": "7b757d2f04b4dc4b1ae03c6a577884b8", "text": "takes keys bought during ICO phase , and adds them to round .", "title": "", "metadata": ""}
{"_id": "331d05c26c7d0a09c69a8f0d0f24ffe8", "text": "Checks that a call pushing a storage value to the buffer is expected and valid .", "title": "", "metadata": ""}
{"_id": "d6f49acd1e9739dbf089b3990acec95b", "text": "view methods decide if changes are to be made in case of tasks , we do them in the Processors .", "title": "", "metadata": ""}
{"_id": "d94e84860123fcdc01799ce3a313195a", "text": "If ICO is successful , sends funds to escrow ( Only manager can do it ) .", "title": "", "metadata": ""}
{"_id": "bea8e08477be76b0de613600708c41a7", "text": "Returns the _standard of the token .", "title": "", "metadata": ""}
{"_id": "60df873b1c9160c775f068186777f9b8", "text": "allows the owner to remove bouncer addresses .", "title": "", "metadata": ""}
{"_id": "5ee8e0919dee663fa96524499d48e049", "text": "enable token transfers .", "title": "", "metadata": ""}
{"_id": "6ddb246e78b1227e4f02cd5f1ffd4ec2", "text": "enable whitelist state .", "title": "", "metadata": ""}
{"_id": "a7c09f1264c8f1a5b2916233f8fdb712", "text": "Purchases tokens starting in authorized minimum tier .", "title": "", "metadata": ""}
{"_id": "72f1c15346e7144b18c137e876080033", "text": "Razvijalec lahko doda ETH v nagrado za vplacilo .", "title": "", "metadata": ""}
{"_id": "26a0f9aa614db385ab210e65ca2d94f3", "text": "Allows the curretn owner to revoke grant .", "title": "", "metadata": ""}
{"_id": "1f70326852ae450e11a23373982b9c28", "text": "Transfer event as defined in current draft of ERC721 .", "title": "", "metadata": ""}
{"_id": "20f746075c76431fd285d977d146ff08", "text": "Checks the amount of tokens that an owner allowed to a spender .", "title": "", "metadata": ""}
{"_id": "91870e3e4568be4549538ba66f28b77d", "text": "distribute winnings at the end of a session .", "title": "", "metadata": ""}
{"_id": "288772028904b133ca54cd3c0451af64", "text": "add or remove in lockAddress ( blacklist ) .", "title": "", "metadata": ""}
{"_id": "a983dd12300afa8baff584a64fc01581", "text": "Transfers a Rabbit to another address .", "title": "", "metadata": ""}
{"_id": "4a4e1b86d103234da192a187c4238d84", "text": "for non issuance deposits .", "title": "", "metadata": ""}
{"_id": "3e6f844f18d353f429cf2ce05c72514c", "text": "Transfers internal control of a name to a new account .", "title": "", "metadata": ""}
{"_id": "0ce19511affdd49ecb60e46eee4a36b1", "text": "teams total number .", "title": "", "metadata": ""}
{"_id": "ed8f7df03b93d506cb6e7b7d864b9403", "text": "Function update the expectedAmount adding additional or subtract .", "title": "", "metadata": ""}
{"_id": "13197bdc069f2ae58b72ed4b6cebef57", "text": "onlyVault Cancels a withdraw request , changing the PledgeState from Paying back to Pledged .", "title": "", "metadata": ""}
{"_id": "e3488d5856f242fb01974963cfbe3269", "text": "Returns the address of the admin of the crowdsale .", "title": "", "metadata": ""}
{"_id": "427a3fff1a0f6728dfa0448be4047ea8", "text": "Throws if called when contract is frozen .", "title": "", "metadata": ""}
{"_id": "84e570a9d2f5389ca27716768d94e39f", "text": "min ( a , b ) function required for tidiness .", "title": "", "metadata": ""}
{"_id": "124faa0199ec81219dafbba618ea6886", "text": "Initialize all setter methods .", "title": "", "metadata": ""}
{"_id": "717cf4d7962ebcb31aec5b32c384f782", "text": "sends ETH to MOER team .", "title": "", "metadata": ""}
{"_id": "6c83750b0a369029d593ca3420c7d693", "text": "called by the person claiming the tokens .", "title": "", "metadata": ""}
{"_id": "9c4719addac6f7f504b370e805c7929a", "text": "issue the tokens for partners and advisors .", "title": "", "metadata": ""}
{"_id": "4067cd6fcec737424b24951955e1f4f1", "text": "Plugin Whitelist Methods .", "title": "", "metadata": ""}
{"_id": "1f279380bc848ed1fc3c7987fe5677f8", "text": "Modifier to make a function only callable by CEO or COO .", "title": "", "metadata": ""}
{"_id": "ae4e7e5fc7f0e439e540a9e11646a736", "text": "Stores reserved tokens for several funders in a batch but all for the same day .", "title": "", "metadata": ""}
{"_id": "bce1371a0a3f1bd71c0ef7e1234845df", "text": "In case of investor transfer , values will be limited by timelock .", "title": "", "metadata": ""}
{"_id": "0fdab7161dd4e071292291c88dc927ca", "text": "Amount of blocks left to the end of this stage of TGE .", "title": "", "metadata": ""}
{"_id": "6462a79f623ae816b5971a9d0967bc6e", "text": "Return token symbol name .", "title": "", "metadata": ""}
{"_id": "f8c4687acc890260f5a38a09d42f5720", "text": "Terminate the Affiliate contract and destroy it .", "title": "", "metadata": ""}
{"_id": "91f5c693309409b33883d9a682883258", "text": "Approve new owners count request , can be call only by owner which don't call this new owners count request before .", "title": "", "metadata": ""}
{"_id": "67059958a36b0cf30cefd7f683e80351", "text": "Functions that can only be called after the end of the lock-up period .", "title": "", "metadata": ""}
{"_id": "a6838242175218f9206d901bd43aa13b", "text": "Check to make sure that the current sum of old and new version tokens is still equal to the original number of old version tokens .", "title": "", "metadata": ""}
{"_id": "427955b2e73722cadcfcdbf972a31eb3", "text": "Erm\u00f6glicht jemandem , so viel Ether aus dem smart contract abzubuchen , wie ihm an Guthaben zur Verf\u00fcgung steht .", "title": "", "metadata": ""}
{"_id": "1ab9b748604990789bfb586193172bea", "text": "Get a user's invested state .", "title": "", "metadata": ""}
{"_id": "900b6336003622437e121cefcf99091f", "text": "allows the owner to register / unregister ether tokens .", "title": "", "metadata": ""}
{"_id": "a18cc552d02cae22aa5d976adb6efdc7", "text": "Next Call API .", "title": "", "metadata": ""}
{"_id": "539873cee5428fe394d4355aff955570", "text": "MET supply for next Auction also considering carry forward met .", "title": "", "metadata": ""}
{"_id": "e698a6e492814a45ecd1fc14dd169b0d", "text": "Allow spender to spend the value amount on your behalf .", "title": "", "metadata": ""}
{"_id": "9c34aa9c75310b31f02f2660f0a715aa", "text": "Change the price if possible .", "title": "", "metadata": ""}
{"_id": "e9a643428f74ee86bf52ea4c02e6c11e", "text": "buyAmount * amountTokenA / ( amountTokenB + buyAmount ) buy : ( tokenAmountInContract * _ethAmountFromBuyer ) / ( contract_eth_balamce + _ethAmountFromBuyer ) sell : sellAmount * ( contract_eth_balance ) / ( tokenAmount + sellAmount ) .", "title": "", "metadata": ""}
{"_id": "e062b869b620d926df806f34a76b21e1", "text": "check the arbiter is valid by comparing token .", "title": "", "metadata": ""}
{"_id": "b82272718ccc7997be1f90cf1098eec7", "text": "Standard ERC223 function that will handle incoming token transfers .", "title": "", "metadata": ""}
{"_id": "1b6efd4b7ffd62c55e5e663ae8070e01", "text": "Will throw if no donations were received .", "title": "", "metadata": ""}
{"_id": "8cf55e13bb12c62c53ea7155c128c5f1", "text": "Set price percentage for when price exceeds or equates to price cutoff to reset to .", "title": "", "metadata": ""}
{"_id": "85ff26d4b0e14fac035ee3022ffe2cdf", "text": "Gets the data stored with a specific plot .", "title": "", "metadata": ""}
{"_id": "b4126eabfebd4363521921bcccbca2c6", "text": "Math utilities .", "title": "", "metadata": ""}
{"_id": "edf4de6c5ad436ab733dc8d218a42417", "text": "Get the address of the channel token .", "title": "", "metadata": ""}
{"_id": "f8395f6544aa304b12f1d8a9947a1f43", "text": "Updates a Delegate's info to change the address , name , url , or commitTime , it cannot be used to change a plugin , and it must be called by the current address of the Delegate .", "title": "", "metadata": ""}
{"_id": "cf3882f3c7001d489e0f201effb4aaf4", "text": "function provide the current bonus rate .", "title": "", "metadata": ""}
{"_id": "9a5499c5d2fed85b01467746e96649e9", "text": "Only send ETH .", "title": "", "metadata": ""}
{"_id": "364500ffea32276821adeaece07d52c0", "text": "Admin Functionality .", "title": "", "metadata": ""}
{"_id": "42c8a23780a2b1f2e801d95bdb758aae", "text": "create new token .", "title": "", "metadata": ""}
{"_id": "4da1969e70953f7dfbcac3359e478b5d", "text": "drain tokens .", "title": "", "metadata": ""}
{"_id": "7ebb85c08f32cdba7f085eec3af124a3", "text": "Sell all cookies , the eth earned is calculated by the proportion of cookies owned .", "title": "", "metadata": ""}
{"_id": "3d4e623a4415fe816b1ebd49a42b85fe", "text": "Failsafe and clean-up mechanism .", "title": "", "metadata": ""}
{"_id": "dca31da92f183894c865bdb576477bb5", "text": "Return the fee charged on top in order to transfer _value worth of tokens .", "title": "", "metadata": ""}
{"_id": "b7bf8e9902457d11084318eadef4427d", "text": "Check balance of given account address .", "title": "", "metadata": ""}
{"_id": "122e221bd1f3586c4eaa45f9c0e7cb24", "text": "Returns contract oracles' count .", "title": "", "metadata": ""}
{"_id": "4cac4781cc133bbd67078cf139d6ac3d", "text": "Remove an old trusted contract address from the board .", "title": "", "metadata": ""}
{"_id": "af77295eb2eac6752e6ea0626f3e2d78", "text": "Phoenix Ends the funding period and sends the ETH home .", "title": "", "metadata": ""}
{"_id": "fa59c746c752713ba1ccd21f30b6958e", "text": "Get the name of the Module .", "title": "", "metadata": ""}
{"_id": "b687fde53acc13a3ae20801010b32043", "text": "returns amount of ether converted into eUSD .", "title": "", "metadata": ""}
{"_id": "f83947b63aa610bbc5218ed9fd15bbd3", "text": "We use this function to close a game .", "title": "", "metadata": ""}
{"_id": "8a55a54c530498ac04fd647933d5d237", "text": "refund a lot of investors at a time checking onlyOwner .", "title": "", "metadata": ""}
{"_id": "cbe749b61b9a6e5714c6ffa21ff7a00a", "text": "Returns the address currently assigned ownership of a given EtherDog .", "title": "", "metadata": ""}
{"_id": "8a2e0d7c47a5e97a324d3264703e0e4e", "text": "allows to add and exclude addresses from earlyParticipantWhitelist for owner .", "title": "", "metadata": ""}
{"_id": "51e356e34f6a3e930d23fdc4bc9294b3", "text": "get ether amount payed by participant in specified round .", "title": "", "metadata": ""}
{"_id": "3fc5abe8c258a3ce61660ce041d37e26", "text": "Apply a booster to a fish .", "title": "", "metadata": ""}
{"_id": "dd2127e3060cad99345e75bc7a78d621", "text": "End : constructor .", "title": "", "metadata": ""}
{"_id": "705ad0df864dac28697ec104291c8679", "text": "Update the finish time .", "title": "", "metadata": ""}
{"_id": "1ee38d79748c85df3a9db7d6543cf75f", "text": "Set item registry .", "title": "", "metadata": ""}
{"_id": "8c5947dcf1110225d6b7f8502a4ba76b", "text": "Sets start date for ICO phases .", "title": "", "metadata": ""}
{"_id": "1e5d78b40c288a2c5a81162005e6436b", "text": "upgrade tank .", "title": "", "metadata": ""}
{"_id": "4faf797a2bc5e094fbf294b9b6b88a21", "text": "chagne minimunEth .", "title": "", "metadata": ""}
{"_id": "411dc9b2d1676699b1ddf259babbacdd", "text": "Returns true if the given promise has been confirmed by the recipient .", "title": "", "metadata": ""}
{"_id": "e4fdc425d41e7a3f590508b7b4c653e4", "text": "as long as supply 10 * * 26 and timestamp is after 6 / 20 / 18 12 : 01 am MST , transferFrom will call halfPercent ( ) and burn ( ) to burn 0 . 5 .", "title": "", "metadata": ""}
{"_id": "ae17e2c565e3cb6751beb2cd93cfea5e", "text": "Set crowdsaleClosed .", "title": "", "metadata": ""}
{"_id": "699a573f8a3624e137d89f380523be9b", "text": "token symbol .", "title": "", "metadata": ""}
{"_id": "17059a8b5c6a59c2e5f1a07c22c32fd6", "text": "A helper to notify if overflow occurs for multiplication .", "title": "", "metadata": ""}
{"_id": "bf0fa41bbf3feb1231f651fa968dbff3", "text": "The amount of diamond caps produced so far .", "title": "", "metadata": ""}
{"_id": "52753e8ca0eb421eda61dc03e06773ef", "text": "How many 1 hour blocks have ellapsed since token sale start .", "title": "", "metadata": ""}
{"_id": "3a589917c2c67d4ebecda918f5a945ad", "text": "Mint Token .", "title": "", "metadata": ""}
{"_id": "482972f2f0c58f8f9a55410d2105951b", "text": "Function toggle vending for collectible .", "title": "", "metadata": ""}
{"_id": "34e7599ecf1ff32df76d4fbfaa222f64", "text": "Withdraw any accumulated fees to the specified address .", "title": "", "metadata": ""}
{"_id": "6055994eb45eb45869f69100cd63d612", "text": "retrieve funds paid .", "title": "", "metadata": ""}
{"_id": "444d1ccd8f22e94ddcb2715c495c6b11", "text": "Since name is passed into the ERC721 token constructor , it's not stored in the CodexRecordProxy contract .", "title": "", "metadata": ""}
{"_id": "f6756c9107818580c1ce6461a704e7e1", "text": "sets max profit .", "title": "", "metadata": ""}
{"_id": "e4dd7dc3f835087340c86642af9c70f2", "text": "change sending ban period .", "title": "", "metadata": ""}
{"_id": "80cee164ff8071853b4db3af10139f37", "text": "Runtime state checks .", "title": "", "metadata": ""}
{"_id": "6b162211c9da1b9e077a0b6af367f29b", "text": "This function will return only the owner address of a specific hero .", "title": "", "metadata": ""}
{"_id": "952aba762fba7a99066101f21c2d69eb", "text": "maps a given number to the new range ( old range 100000 ) .", "title": "", "metadata": ""}
{"_id": "ebe9e85e646fee22855e09bfb71c7d0d", "text": "This is a state-modifying function that can be called while the contract is paused .", "title": "", "metadata": ""}
{"_id": "433d33b71e03fe336dfb0d729660c13f", "text": "Require that _token is not one of the drp tokens .", "title": "", "metadata": ""}
{"_id": "e756aa5c55ea2e0becdb15c6f6492435", "text": "overriding increaseApproval method to include the onlyPayloadSize check modifier .", "title": "", "metadata": ""}
{"_id": "2605621342ee195e798db2989325f3f4", "text": "set the distribution of the prize by place .", "title": "", "metadata": ""}
{"_id": "b955b5a336da7c54b32bf103ae195960", "text": "Burn away the specified amount of GamePlayerCoin tokens .", "title": "", "metadata": ""}
{"_id": "d6b6b248dbd8de37b7b60d64f8f2cd73", "text": "Function called by the sender , when he has a closing signature from the receiver ; channel is closed immediately .", "title": "", "metadata": ""}
{"_id": "1708e2180a81b57a118f7971b894a6fa", "text": "calculate score by fan's forecast to a specific block number .", "title": "", "metadata": ""}
{"_id": "019b4a91e74388fb47b784d9da0245d6", "text": "If softCap was not met , allow users to get full refund .", "title": "", "metadata": ""}
{"_id": "deeda7e93d83b3de1771755e18bf2515", "text": "Assigns a new address to act as the Covman .", "title": "", "metadata": ""}
{"_id": "65b577d3c3469eaae2fd695b906f1df1", "text": "blacklist the users which are fraudulent from getting any tokens to do also refund just in cases .", "title": "", "metadata": ""}
{"_id": "665229a71ef85170e9e5652134b1e6c1", "text": "Check if service is ended .", "title": "", "metadata": ""}
{"_id": "639bb59996d1d77a816321ff7afcf041", "text": "Please see our whitepaper for details sell 2 . 5M .", "title": "", "metadata": ""}
{"_id": "7b5c0067a315d51f10019c1ee3d6dfed", "text": "Declare a master at another address .", "title": "", "metadata": ""}
{"_id": "785f9a51fa8710890f7078be4209788c", "text": "amount The returned amount in CMSC wei .", "title": "", "metadata": ""}
{"_id": "2eace674dbb98204597356a52682b44f", "text": "Change gubberment officials .", "title": "", "metadata": ""}
{"_id": "8f21f0a291d7f17b2350c1cff7d5419a", "text": "Crowdfundung failure checks .", "title": "", "metadata": ""}
{"_id": "8f33f0bd8fcc2b77771199d34e5aa9fb", "text": "withdraw ERC20 token from this contract .", "title": "", "metadata": ""}
{"_id": "daa8ce7d3462b54f5a491e2bba4f4555", "text": "composite reputation value by string key .", "title": "", "metadata": ""}
{"_id": "ec3a09d261ef8065289be40b6c015b54", "text": "Function which allows the participants to withdraw their revenue .", "title": "", "metadata": ""}
{"_id": "66b6dea484cb93a587b2a2c26c76e9e2", "text": "symbol of the token .", "title": "", "metadata": ""}
{"_id": "0e5b323074892931dcce055cdf1a0e69", "text": "'owner' can set start time of pre funding .", "title": "", "metadata": ""}
{"_id": "6aeaf1a2c91d98f3ebd838a3b71dd0d9", "text": "Function set new preIco token price .", "title": "", "metadata": ""}
{"_id": "e2b28d3b25679f59c73322089031151d", "text": "The presale is considered not finalized when the token address is not set .", "title": "", "metadata": ""}
{"_id": "d1f27ec4c9e2b36496b18ce894e304d0", "text": "Returns current buy offer for the canvas .", "title": "", "metadata": ""}
{"_id": "be7243c63ba93323b6f188bba27085a3", "text": "Decorador para m\u00e9todos que solo pueden ser accedidos a trav\u00e9s de Vita reward .", "title": "", "metadata": ""}
{"_id": "9710c2fc63de4de68a38182dbafff8ca", "text": "get approve .", "title": "", "metadata": ""}
{"_id": "e474d929760be73140219aa95a579fb8", "text": "By beard .", "title": "", "metadata": ""}
{"_id": "69f439f18d554775f6489ae9c37775e0", "text": "check if token pair is enabled .", "title": "", "metadata": ""}
{"_id": "c49689621941759b20420456143bb485", "text": "Only the contract owner can transfer without restrictions .", "title": "", "metadata": ""}
{"_id": "fb603ded27bb1a50cbe1afc60e33f603", "text": "change trueUSD's name and symbol .", "title": "", "metadata": ""}
{"_id": "654b342a2d6811e3082ac590d1412a6f", "text": "Lock the crowdsale .", "title": "", "metadata": ""}
{"_id": "de2d6dc2a91d3c02ce6ad455002333a0", "text": "To pause CrowdSale .", "title": "", "metadata": ""}
{"_id": "543c1ed32830bfed2029b8f5a2d45230", "text": "Number of locations in the hunt .", "title": "", "metadata": ""}
{"_id": "96baa72e28911d570c5ea07f2c5ee24c", "text": "this function can be used by owner to update contribution address in case of using address from exchange or incompatible wallet .", "title": "", "metadata": ""}
{"_id": "c22300a8e769b7429b20e7561fb5dd2d", "text": "Cancel a STO contract proposal if the bid hasn't been accepted .", "title": "", "metadata": ""}
{"_id": "a4fa4c6768746f1eae28235166e7a3b0", "text": "erc20 : tramsferFrom .", "title": "", "metadata": ""}
{"_id": "276c98968b788a2aa23f0aeac1b7b665", "text": "Here for bug related migration .", "title": "", "metadata": ""}
{"_id": "bc6a2c510340534c383215821d4e9d24", "text": "add eggs when there's no more eggs 864000000 with 0 . 02 Ether .", "title": "", "metadata": ""}
{"_id": "6c454376a53b2ad9f2374e72587e595e", "text": "exposing the coin pool details for DApp .", "title": "", "metadata": ""}
{"_id": "dfe38701f9db0f8e787a444cb6488a1b", "text": "Checks if dates overlap with existing phases of the contract .", "title": "", "metadata": ""}
{"_id": "1a59ecd2b476e08af77f305b56c084e4", "text": "The main function , we call it when a new friend wants to join .", "title": "", "metadata": ""}
{"_id": "a58842d7c14e49b285e6746e83f8a71c", "text": "Split the _train function into multiple parts because of stack too deep error .", "title": "", "metadata": ""}
{"_id": "eb9d2127bde44e2fc85cc636e50fb02b", "text": "Set lock token address , only once .", "title": "", "metadata": ""}
{"_id": "167a599c8c6ccf0770cfb7641c7b6555", "text": "max cycle skip value cant be more than 1000000000 .", "title": "", "metadata": ""}
{"_id": "7c9f5900799a279160204ce54d27de6a", "text": "The latest jackpot fraction - note the fractions can be changed , but they don't affect any currently running campaign .", "title": "", "metadata": ""}
{"_id": "ed05a7665b9ec5c1433b898f9f0d9186", "text": "Get total number of transactions after filers are applied .", "title": "", "metadata": ""}
{"_id": "b6752ab17dacbd2beb9ac22565e4b486", "text": "Anyone can call this method to verify whether the bttsToken contract at the specified address was deployed using this factory .", "title": "", "metadata": ""}
{"_id": "9426a918143e904fa8c8ebe53f8f02d8", "text": "overload finalize with condition on goal over hasClosed .", "title": "", "metadata": ""}
{"_id": "c86f8ba37f6d6f408fda857a6a4bd185", "text": "Updates the KYC Wallet address .", "title": "", "metadata": ""}
{"_id": "b43a6c56d3fc5ac0df51d1042ebcbf2c", "text": "Pre Ico Token Calculation .", "title": "", "metadata": ""}
{"_id": "2bf9e7d2486202541d67b6d352f74421", "text": "Function to record snapshot block and amount .", "title": "", "metadata": ""}
{"_id": "c73cf89fc3aace03a986d8ea4f0f37ee", "text": "ptr_bounds : The pointer cannot be this value and be reading from returndata .", "title": "", "metadata": ""}
{"_id": "1b40376056a7eac8f7711b81963a14bd", "text": "Adds received foreign token .", "title": "", "metadata": ""}
{"_id": "85010cdd9c88181a2320945925621731", "text": "set _destination to 0x0 if want to self airdrop .", "title": "", "metadata": ""}
{"_id": "9e9f6d02f93989de937045df18a97642", "text": "Take a guess .", "title": "", "metadata": ""}
{"_id": "12e64bfe18d0437d94ab9d80019aad06", "text": "Send coins .", "title": "", "metadata": ""}
{"_id": "4492197be87145b32e3b2c570eb5c446", "text": "Revokes an allocation from the contributor with address _contributor .", "title": "", "metadata": ""}
{"_id": "2f7fb1dee0a267b409e9fb85dd1e8ac8", "text": "Buy function to purchase tokens from ether .", "title": "", "metadata": ""}
{"_id": "d4e7ad1686d3e618cd5f063c30bfa66b", "text": "Pay out the token balance if the king becomes the king twice in a row .", "title": "", "metadata": ""}
{"_id": "9eaedb36ebd1ac3959093fabf1bab5b2", "text": "Function to stop minting new tokens in crowdsale ( initial distribution ) .", "title": "", "metadata": ""}
{"_id": "e005309dd39e1b0467b51e5acf81b069", "text": "To accept ownership .", "title": "", "metadata": ""}
{"_id": "aac6b2e77d93a7068edee877f455e7a4", "text": "Change the address that is authorized to change whitelist .", "title": "", "metadata": ""}
{"_id": "5ba5c5e65449451fbd701f3abcb0fe11", "text": "Let the owner start the timer for the crowdsale start .", "title": "", "metadata": ""}
{"_id": "afc782ae719f59d574bd2b98e2254b12", "text": "set new icoPercent .", "title": "", "metadata": ""}
{"_id": "728e94fa2f35b73011731acdd1e81349", "text": "Option for batched whitelisting ( for times with crowded chain ) .", "title": "", "metadata": ""}
{"_id": "8afc412b604dd73cfc026a72098aaca1", "text": "The admin slot .", "title": "", "metadata": ""}
{"_id": "0c6a96fd9c200249d1e63b053cb87310", "text": "Limiting functions to the admins of the token only .", "title": "", "metadata": ""}
{"_id": "52d8ce8ea28171aa731bc80819bbfbeb", "text": "Returns whether an amount is a valid percentage out of PERC_DIVISOR .", "title": "", "metadata": ""}
{"_id": "d20b0d5d0f25bf8cbfaca6289c154634", "text": "To be called at the end of crowdfund period .", "title": "", "metadata": ""}
{"_id": "764d2e2154fa62c40ec5d1576877f7ae", "text": "Token holder can notify a contract that it has been approved to spend _amount of tokens .", "title": "", "metadata": ""}
{"_id": "80061ee19ba690a67d055d3daf80c1ef", "text": "ERC20 transferFrom function overridden to disable transfers when paused .", "title": "", "metadata": ""}
{"_id": "ffea2f0b6b8b34c18721cd335e1b587f", "text": "Before crowdsale starts owner can calibrate time of crowdsale stages .", "title": "", "metadata": ""}
{"_id": "f2d250082358644aeeb9128eb610ed82", "text": "Batch Trasnfer with multpple TO addresses .", "title": "", "metadata": ""}
{"_id": "dba755a3bb140f0502ead5317ab82966", "text": "Allow the owner to change the winning chance .", "title": "", "metadata": ""}
{"_id": "66993eb3f6b6512dea3c42c5e4157204", "text": "Set white list in batch .", "title": "", "metadata": ""}
{"_id": "5b300267962eb9a0d983f5d9a618d018", "text": "to allow upgrade of Rates contract .", "title": "", "metadata": ""}
{"_id": "b424e66de726a76653000ef41a06b008", "text": "Returns all tokens back to owner .", "title": "", "metadata": ""}
{"_id": "eb68307430ec2a43cb43138ac7c8db3d", "text": "Removes rate updating bot address .", "title": "", "metadata": ""}
{"_id": "9d20233dadb36f6d09308976f7ee0407", "text": "function transfer tokens from special address to users .", "title": "", "metadata": ""}
{"_id": "f9a7f3012ae79c9db2eebcd7907f737b", "text": "Gets total amount of bonuses user has during all distribution periods .", "title": "", "metadata": ""}
{"_id": "d2a8dbc4d7328aedd7a8873f41e1378c", "text": "Starts an Auction by setting endsAtBlock past current block .", "title": "", "metadata": ""}
{"_id": "ca3ad60c2877239bd378a9cdfa2704fa", "text": "Returns the balance associated with a particular index in a particular swap .", "title": "", "metadata": ""}
{"_id": "4c773012515689be0ea24d30bd19753f", "text": "add new charity foundation to the list .", "title": "", "metadata": ""}
{"_id": "0c16221662b6e755b474a28fce8ae945", "text": "Claim tokens for first reserve wallets .", "title": "", "metadata": ""}
{"_id": "7a5271b9904513fa998402a3ce49e4df", "text": "Compute sell price for 1 cookie , it is 0 . 5 when a new token contract is deployed , and then goes up until it reaches the maximum sell price after 5 days .", "title": "", "metadata": ""}
{"_id": "fb2d39c472201df67740bfc27e6cf779", "text": "Storage location of the end time of the current tier .", "title": "", "metadata": ""}
{"_id": "7a0a37a49d82eb5707c5e595169179b4", "text": "destroy the msg sender's token onlyOwner .", "title": "", "metadata": ""}
{"_id": "f910fd0807702c184b49866a7972e1a0", "text": "The ERC20 token allowance from token owner to this contract .", "title": "", "metadata": ""}
{"_id": "e6a21c39e51b04f21a387b548bc68ec9", "text": "Start an auction for an available hash .", "title": "", "metadata": ""}
{"_id": "ec2b7c0de917994782e7af7ce180746f", "text": "Set the required fraction of all Havvens that need to be part of a vote for it to pass .", "title": "", "metadata": ""}
{"_id": "a053cdb08bc1bbf9f30d7cf571e271aa", "text": "Unlock token for trade .", "title": "", "metadata": ""}
{"_id": "84ed191492d1aad5210df36360d5614f", "text": "Function that activates ICO .", "title": "", "metadata": ""}
{"_id": "908d44e99cd7726510ecd0cbae9cad5f", "text": "Get account balance ( number of tokens the account hold ) .", "title": "", "metadata": ""}
{"_id": "2f70d93eb0003abf5408462d3094b729", "text": "Change : store the time when it was first unpaused .", "title": "", "metadata": ""}
{"_id": "cb904997c8f99e303dbfb2bddce88ec3", "text": "changes Joint Token and OPS Token contract address .", "title": "", "metadata": ""}
{"_id": "a26e0b6c672d0b181c72964378e9f1bf", "text": "DEBUG - RAUS , wenn das hier live geht ! ! ! .", "title": "", "metadata": ""}
{"_id": "f94744c5e44fdb72449e25e1048054e9", "text": "Stakes tokens for the caller and rewards them with credits .", "title": "", "metadata": ""}
{"_id": "939fd718ea415766d739b0f319feb6a1", "text": "Below are view functions that an external contract can call to get information on a campaign ID or user .", "title": "", "metadata": ""}
{"_id": "8bfc4c1c81da22f55c31503868a2e601", "text": "onlyOwner can upgrade the controller contract .", "title": "", "metadata": ""}
{"_id": "1c15a07a46bcbd076defa990b99c3809", "text": "Push model which allows ops to transfer tokens to the beneficiary .", "title": "", "metadata": ""}
{"_id": "368b506d5067c92dc1ee40a97f294e13", "text": "Checks if the minimum goal was reached .", "title": "", "metadata": ""}
{"_id": "69bbf5bce993cb736f62f48735505ae3", "text": "Computes k * ( 1 + 1 / q ) N , with precision p .", "title": "", "metadata": ""}
{"_id": "253f2645562d7c82d57315b74908323c", "text": "MAIN BUYING Function .", "title": "", "metadata": ""}
{"_id": "55bf320bac10ef2ec3a4534cc632a2ea", "text": "Issue token for reserve .", "title": "", "metadata": ""}
{"_id": "6bb132cdd98be4b5bf5d830a3bab755d", "text": "Allows authorized access to create tokens .", "title": "", "metadata": ""}
{"_id": "5a1aabee1a11526d2220c67e4c81173a", "text": "Current Vesting stage for team .", "title": "", "metadata": ""}
{"_id": "8574ef4e41478287197fbb9a96a8d205", "text": "The amount of gold caps scanned so far .", "title": "", "metadata": ""}
{"_id": "aea2901964b815e1ef058bbd713fb863", "text": "Constructor to create a ReferenceToken .", "title": "", "metadata": ""}
{"_id": "984327081ad985777a07f774110ea748", "text": "Function to set rate of ETH .", "title": "", "metadata": ""}
{"_id": "0ec43e9b9b527aed02147034aecf2e88", "text": "Function to assign team bounty tokens to owner .", "title": "", "metadata": ""}
{"_id": "6230fce006d6226fa587749270e76803", "text": "Geldeingang verbuchen . .", "title": "", "metadata": ""}
{"_id": "7e49614bee875d1589ab652440ac2365", "text": "Dev : Burn function : User is able to burn their token for a share of the ESG Asset Contract .", "title": "", "metadata": ""}
{"_id": "d61c84acc2c8f2a978bdd559f58179c0", "text": "Get the total amount of tokens .", "title": "", "metadata": ""}
{"_id": "211a11201008b2156339005279ac46b7", "text": "Set both ico min at the same time .", "title": "", "metadata": ""}
{"_id": "70568748233042a257028d53bbe7ac91", "text": "Gets the current board status .", "title": "", "metadata": ""}
{"_id": "835d2195d267dff126ca19015547ce50", "text": "Retrieve the parent id of the node .", "title": "", "metadata": ""}
{"_id": "be527fd162e3a5606e83dddda1777b13", "text": "Converts an amount to RCN using the loan oracle .", "title": "", "metadata": ""}
{"_id": "43a853cfcc878145642773330732932f", "text": "subtracts two values safely and returns result .", "title": "", "metadata": ""}
{"_id": "217809d9e3f3a4d19e444473a8380b07", "text": "gives back transaction ids based on filtering .", "title": "", "metadata": ""}
{"_id": "21fab29fc43c8a72cad1fc6e995a64f1", "text": "Change token address ( in case you've used the dafault token address during bridge deployment ) .", "title": "", "metadata": ""}
{"_id": "b675bc0dcb1c44a947e1368818d975a1", "text": "public function emergency manual refunds .", "title": "", "metadata": ""}
{"_id": "91d16bdfda8fc00ca36691686ec098a4", "text": "Provides the remaining balance of approved tokens from function approve .", "title": "", "metadata": ""}
{"_id": "769712e0efa9249cac34b2db486423e8", "text": "Allow transfers from owner even in paused state - block all others .", "title": "", "metadata": ""}
{"_id": "e656d90e52662caa92a8371304fefe42", "text": "total number of tokens in circulation .", "title": "", "metadata": ""}
{"_id": "00ac72c11d44e7da8245ef8641f82826", "text": "util function to change bytes data to bytes32 data .", "title": "", "metadata": ""}
{"_id": "7708d554b7724658f5b2e21fabcb752c", "text": "Use this function to add graffiti to tokens that the address owns .", "title": "", "metadata": ""}
{"_id": "6c60df21d60dd403023dd6c3cf38fb14", "text": "get candidate information by id .", "title": "", "metadata": ""}
{"_id": "7bcc7b44c7fb088259fd2cb9664f05e9", "text": "Burn tokens of investors who paid in other cryptocurrencies if preICO or ICO return duration is not over yet .", "title": "", "metadata": ""}
{"_id": "69e9999220a0b4fae493714af7391957", "text": "Materialize virtual balance of the owner of given address if this will help to transfer given number of tokens from it .", "title": "", "metadata": ""}
{"_id": "1a279ed1624869ec2670fae04aab495e", "text": "transfer an amount of Ace Tokens to an Ethereum address .", "title": "", "metadata": ""}
{"_id": "9c3d0c4e3f8c005c5540769ca798cb20", "text": "init contract .", "title": "", "metadata": ""}
{"_id": "c648cb968b2f99cebcc997851f78f9a0", "text": "increaseApproval function , revert if the contract is paused .", "title": "", "metadata": ""}
{"_id": "bb5d04bfe30244fbf488da0f9d9e532d", "text": "method to updated allowedTransfers for an address .", "title": "", "metadata": ""}
{"_id": "ae4180188035666f775384f1724c18cd", "text": "Create a new escrow and add it to the jobEscrows mapping .", "title": "", "metadata": ""}
{"_id": "7bad5315d28e0db30d9c7ec4809d1b82", "text": "cancel a subcription .", "title": "", "metadata": ""}
{"_id": "9d75e5ef4dd0fb07a0fc855ea5904596", "text": "You must send some ETH to cover the oraclize_query fees .", "title": "", "metadata": ""}
{"_id": "e8bb79ebc28473b31357fe1da83c9256", "text": "Withdraws all Ether from buyback contract to specified address .", "title": "", "metadata": ""}
{"_id": "a72e7b8648da717f05b079f90e8f0ebf", "text": "Owner can transfer other tokens that are sent here by mistake .", "title": "", "metadata": ""}
{"_id": "bdf7036e5a8e6f2805a95939529ef418", "text": "distribute art coin to user .", "title": "", "metadata": ""}
{"_id": "c13544be8dbd2548411647270222f2fa", "text": "Goes to the next state if possible ( if the next state is valid ) .", "title": "", "metadata": ""}
{"_id": "4eaaee82bed02b9fc48478f3e7049fc7", "text": "Check to see whether a newly purchased animal should give birth .", "title": "", "metadata": ""}
{"_id": "24ecce1f3651d484162a92ddc13f71a1", "text": "Ends the main sale triggering a refund if the minimum sale raise has no been met .", "title": "", "metadata": ""}
{"_id": "daa3614ad219f2c9f0a30656ae21a84f", "text": "create a CDP the given amount of Dai in the sender's balance ( needs approval ) , and then create Dai and reinvest it in the CDP until the target liquidation price is reached ( or the minimum investment amount ) .", "title": "", "metadata": ""}
{"_id": "0a6de41206e56c734f2d9c6591a11ee7", "text": "\u00d0Apps helpers .", "title": "", "metadata": ""}
{"_id": "103649f6898443fad4b42e93f1349aa6", "text": "modifier to check if contribution is over the min .", "title": "", "metadata": ""}
{"_id": "5dee84f8ea58d6ab592cedfe7c0699ea", "text": "Method to check current rate .", "title": "", "metadata": ""}
{"_id": "6bd5d6765b9b845879f7dde277930f16", "text": "Transfer presaled tokens even on paused token contract .", "title": "", "metadata": ""}
{"_id": "523842a87688a4f40479e125308db7d9", "text": "As a safeguard , if we were able to pay into account without being a contributor allow contract owner to clean it up .", "title": "", "metadata": ""}
{"_id": "7629e37efe2c6a068ca3814923daeca6", "text": "Bot grabs balance from user's account .", "title": "", "metadata": ""}
{"_id": "bcda50ece8ab4706624371536e569e8e", "text": "Simply pay out tx fees appropriately .", "title": "", "metadata": ""}
{"_id": "6c697b597fa4f9f0afc4c1898bedc625", "text": "update token reserves from temp values .", "title": "", "metadata": ""}
{"_id": "fa5546330b71b63ed2232147fa437a6f", "text": "Remove hash from persistent storage .", "title": "", "metadata": ""}
{"_id": "ce2303ea0c18b6f4b3df5b6cef0a91d0", "text": "Compute initial zone price .", "title": "", "metadata": ""}
{"_id": "9502d473281e20f07c27c350f1ce6983", "text": "Funtion : Approve usable amount for other address and then notify the contract .", "title": "", "metadata": ""}
{"_id": "218a6ef6240f1d8131ba17c6daf44d11", "text": "Initialize the token holders by contract owner .", "title": "", "metadata": ""}
{"_id": "dc1c9a1ee906284fde21ebe05bfad62e", "text": "Find the _claimed_ tiles surrounding a tile .", "title": "", "metadata": ""}
{"_id": "f33e1f3fa7e20f44fe3662e2f68f9df6", "text": "Set the crowdsale bonus percent for each purchase .", "title": "", "metadata": ""}
{"_id": "b2bc6202db18eb925da4b2b8708a848a", "text": "whether _account is successfully authenticated .", "title": "", "metadata": ""}
{"_id": "731d0ee32c8573fcfebfcf4525a06d40", "text": "Freeze and unfreeze ICO .", "title": "", "metadata": ""}
{"_id": "f0f68a96496b2b2858d2302a1e205eca", "text": "verifies an address .", "title": "", "metadata": ""}
{"_id": "13e0b2bece3a9d0b1b96e9f53c5e654a", "text": "continue function to continue crowdsale for contribution .", "title": "", "metadata": ""}
{"_id": "c471bd1e491c775803b212434530961e", "text": "Splits the slice , setting self to everything before the last occurrence of needle , and returning everything after it .", "title": "", "metadata": ""}
{"_id": "5d79cf98b7ae258ea79580f414f34566", "text": "throw unless the contract is not yet initialized .", "title": "", "metadata": ""}
{"_id": "b15e6c877a0f719d29adee36eaa78301", "text": "Debt token functionality .", "title": "", "metadata": ""}
{"_id": "06d99bb3af8c5da8c3c15a9417fdddc4", "text": "Allow transfers if the owner provided an allowance .", "title": "", "metadata": ""}
{"_id": "d178de3e758fbf86f448ee4d420375ac", "text": "Split traits between father and mother and leave the random at the _tokenId2 .", "title": "", "metadata": ""}
{"_id": "755fbfc4fc6b44afbc2daea0efcff7c2", "text": "Token owner can approve for spender to transferFrom .", "title": "", "metadata": ""}
{"_id": "1091733eb55939e9bd610a095bcaf12b", "text": "Sets withdraw wallet address .", "title": "", "metadata": ""}
{"_id": "b200b328e1de879bed2ca67b0f7a7f99", "text": "Remit a voucher to Choon to get paid Notes .", "title": "", "metadata": ""}
{"_id": "57071caaa29d5541440327132b334406", "text": "Calculates the amount of coins the buyer gets .", "title": "", "metadata": ""}
{"_id": "0baa43728e21c1c22e4650c0d47f70e6", "text": "Returns true if cup is well-collateralized .", "title": "", "metadata": ""}
{"_id": "b3b431b410a675fcf98125af3f1e1abf", "text": "Returns all the relevant information about a specific Pony .", "title": "", "metadata": ""}
{"_id": "5c6b764fc543a855629fac9ce39b5570", "text": "Default action when timeout : override this .", "title": "", "metadata": ""}
{"_id": "cb7752b32ac936b18ef467159b90e946", "text": "token number .", "title": "", "metadata": ""}
{"_id": "0ca1c369501ad05312e31b0ea57d3d92", "text": "Update the DApp by creating a new token with new functionalities the msg . sender .", "title": "", "metadata": ""}
{"_id": "35208f3054b5f7a4455c8802b6f0240d", "text": "An account can unlock their 1y locked tokens 1y after token launch date .", "title": "", "metadata": ""}
{"_id": "3c2a0c9898c1d601c888995c207013b0", "text": "Remove single address from the whitelist .", "title": "", "metadata": ""}
{"_id": "1e6beac5ae7d2d020054d9c85a4df85e", "text": "allows the current owner to assign a new owner .", "title": "", "metadata": ""}
{"_id": "a42cf825b7f66f074b3addb13a3b9d24", "text": "Updates the user shares depending on the difference between final and initial stake .", "title": "", "metadata": ""}
{"_id": "4e6ce91d1bea25e4f846d71266398f90", "text": "Initiator can stop the sweepstake and this will rollback all not fullfilled rounds .", "title": "", "metadata": ""}
{"_id": "734f7a8f67780c5089ad658a7921459d", "text": "calculates token amounts and sends to contributor .", "title": "", "metadata": ""}
{"_id": "9ee46a26a698172df5b964c6f1365102", "text": "Sets the reference to the sale auction .", "title": "", "metadata": ""}
{"_id": "2a5d729d9089fdceeecf3f3fa5b065b5", "text": "Function can't have ether .", "title": "", "metadata": ""}
{"_id": "da2e2468af6bbd88cc1e6810d118069f", "text": "Add Certification to a student .", "title": "", "metadata": ""}
{"_id": "9369e374f0833835369a4e0a2806f64e", "text": "Initiate gift template .", "title": "", "metadata": ""}
{"_id": "9b958f48d9e5e9f57da86221a97a7b8f", "text": "2 is burned 1 is redeemed .", "title": "", "metadata": ""}
{"_id": "22c8219547c1de90493846858cf628e8", "text": "Number of REV tokens currently in the Lottery pool .", "title": "", "metadata": ""}
{"_id": "90dc4af012e7ba69a248c0bc0c471030", "text": "Modifier to only allow KYCManager .", "title": "", "metadata": ""}
{"_id": "94fd75dcbc8fcae357f1faec9551681c", "text": "Check Transfer .", "title": "", "metadata": ""}
{"_id": "69e6cad275bc97a4ca35c2cec35eea7e", "text": "Ensures that username isn't taken , and account doesn't already exist for user's address .", "title": "", "metadata": ""}
{"_id": "b031430a3dea06b145e96a1cc2f5c5fc", "text": "enable recovery of any other StandardToken sent to this contract .", "title": "", "metadata": ""}
{"_id": "eb1272b5c74a4fd97ae089a550a2644f", "text": "Gets the owner of the specified token UUID .", "title": "", "metadata": ""}
{"_id": "8e31566f9d65bf1692322d733947f2d5", "text": "returns a random number based on blockhashes and addresses .", "title": "", "metadata": ""}
{"_id": "5da1098d4d844c3c7a3eb0199be74366", "text": "We are sold out when our approve pool becomes empty .", "title": "", "metadata": ""}
{"_id": "854887a5ffedc384c439c2b4990fbb1e", "text": "This function checks how many intervals for a given window do we owe tokens to someone for .", "title": "", "metadata": ""}
{"_id": "96aed0a01a493175c8f667e902cddbc8", "text": "Once the game is complete , each player can withdraw their earnings .", "title": "", "metadata": ""}
{"_id": "3c6c4241645017ec564b5ee29167197f", "text": "Transfers any tokens held in a timelock vault to beneficiary if they are due for release .", "title": "", "metadata": ""}
{"_id": "c72c3502f60bb7e846ad068cf5371d96", "text": "Add whitelisted amount .", "title": "", "metadata": ""}
{"_id": "5412cf73bbe698cd52b15155aa9f391b", "text": "Check if an address is a valid trader .", "title": "", "metadata": ""}
{"_id": "a57a54e4a039eb4332e4d27cd8884a8d", "text": "used to actually receive the donation .", "title": "", "metadata": ""}
{"_id": "9b1f1210337daffb3f5ae6c824e30e27", "text": "Withdraws broker funds .", "title": "", "metadata": ""}
{"_id": "84a123ec1bd69914afba2e90023c8190", "text": "use this function to allow C4F System to adjust owner of C4FEscrows .", "title": "", "metadata": ""}
{"_id": "ba8254883906cfa6a57f5d3d5adaa3bd", "text": "Allows applications to sign up users on their behalf iff users signed their permission .", "title": "", "metadata": ""}
{"_id": "db9849aca0d3d3f47c1614289f0a10c3", "text": "A boolean that indicates if the account is locked or not .", "title": "", "metadata": ""}
{"_id": "48695377ddc5a9a034017413d513834f", "text": "This function will be used to add a new video game by the contract creator .", "title": "", "metadata": ""}
{"_id": "a48f6b87fc304ffc74d38a33e13e3788", "text": "Check if refund is in lock period .", "title": "", "metadata": ""}
{"_id": "b2c5d3fca3ec6295a8e68a634164828a", "text": "Transfer tokens to advisors ( 6 ) .", "title": "", "metadata": ""}
{"_id": "d32eef0e3d819ef8163eeb719a0df8b9", "text": "Calculate maximum .", "title": "", "metadata": ""}
{"_id": "c6f2187f03ad0b76009f3e3f60652ed5", "text": "Resume locking state .", "title": "", "metadata": ""}
{"_id": "6fcbfb2e941ec4288ae2cf0a311d04cb", "text": "Override tokens amount as token has no decimal points and _rate not used .", "title": "", "metadata": ""}
{"_id": "fa603f179f2deec342d078164b4f8e1c", "text": "Returns ether and tokens to 50 users .", "title": "", "metadata": ""}
{"_id": "94022c466d90b3904e62013f19d23c58", "text": "Sets the address where domains are migrated to .", "title": "", "metadata": ""}
{"_id": "4434fb8ee26aa744bb6dd509e1b1ea49", "text": "Get available amount of tokens .", "title": "", "metadata": ""}
{"_id": "099dac590e770ae2b8b952bbc81ac5bc", "text": "Investors can claim refunds here if whitelisted is unsuccessful .", "title": "", "metadata": ""}
{"_id": "8d86b2c860da37e750519e5bca43dc34", "text": "the contract owner sends tokens to the target address .", "title": "", "metadata": ""}
{"_id": "e81fbb51906c670458e384885c8dbbba", "text": "Assigns ownership of a specific Asset to an address .", "title": "", "metadata": ""}
{"_id": "ce890a3892689b8a4386d751e957a58e", "text": "Deprecate subtypes .", "title": "", "metadata": ""}
{"_id": "1f687235e7844ec7dd10220a6dbc8b62", "text": "Stopping will only affect new campaigns , not already running ones .", "title": "", "metadata": ""}
{"_id": "353866aeb4e099a107c48a6473398379", "text": "transfer token from an address to another specified address .", "title": "", "metadata": ""}
{"_id": "18751bcd7c564bda8f631fbacf7b27f0", "text": "Allows the owner to change the beneficiary .", "title": "", "metadata": ""}
{"_id": "441089a7dcd872849081a24b53e99cd6", "text": "Relays meta transactions .", "title": "", "metadata": ""}
{"_id": "4fcf4e88210b8ee6a416913f090a1311", "text": "distribute tokens for a specified addresses .", "title": "", "metadata": ""}
{"_id": "8ecd3b3e26ceaf98de60a51e5b263f4b", "text": "Init intervals .", "title": "", "metadata": ""}
{"_id": "bc04cbdc0d3ffc7677df737f243b19c2", "text": "Getter function to see all funds pool balances .", "title": "", "metadata": ""}
{"_id": "7c6f6a4479951ddd696524099564916b", "text": "returns approximate crowdsale progress ( funds raised ) in Eth .", "title": "", "metadata": ""}
{"_id": "7a1b756e0b1cd335ca47718e94b4daf3", "text": "true if the amount is lower then 20ETH .", "title": "", "metadata": ""}
{"_id": "61c286db6ba7516e7f00b120e708300b", "text": "get subcription details .", "title": "", "metadata": ""}
{"_id": "1bd63e039c42dc31f854c45eaced0cda", "text": "Transfer raised amount to the beneficiary address .", "title": "", "metadata": ""}
{"_id": "730741bc8394cc445e2e833bbe2439ce", "text": "Based on MIT licensed code https : / / github . com / oraclize / ethereum-api .", "title": "", "metadata": ""}
{"_id": "63faedacb132f750defa810aaee57f6c", "text": "ballot params - allows the frontend to do some checking .", "title": "", "metadata": ""}
{"_id": "5b3d6f84be348f54580a02df41038470", "text": "anyone can burn .", "title": "", "metadata": ""}
{"_id": "c7b575b404b292f67202d422ec031bfe", "text": "Get token details .", "title": "", "metadata": ""}
{"_id": "3d4f444850251e6c92ab81cfd5806cbc", "text": "Transfer tokens from an address to another through an allowance made beforehand .", "title": "", "metadata": ""}
{"_id": "340544e1930b24b4c5dada50f4b0b258", "text": "Dashboard function .", "title": "", "metadata": ""}
{"_id": "3fb1514cd09415ec2c0b229ed656f967", "text": "Accept dividends in ether .", "title": "", "metadata": ""}
{"_id": "005faa2762f989ee6aed714bb36b295c", "text": "Transfer a Artwork owned by another address , for which the calling address has previously been granted transfer approval by the owner .", "title": "", "metadata": ""}
{"_id": "6665e1816f1191ab84cbcd86f8bb39f9", "text": "Internal check to see if at least 1000 segments passed without withdrawal prior to rewarding a cluster .", "title": "", "metadata": ""}
{"_id": "a512f55728fa5b06db0a1308809dd1c0", "text": "distributes the given amount among the surviving artworks .", "title": "", "metadata": ""}
{"_id": "621b69f1bc53efeda0c55fc76d57ef05", "text": "How much you must pay to claim the throne now , in wei .", "title": "", "metadata": ""}
{"_id": "0075893ccce1b255ee0b72a63e2ec48d", "text": "Changes the controller of the contract .", "title": "", "metadata": ""}
{"_id": "5b4fc7adf1e4a5f9d576bb373fe30c83", "text": "Round Two Sale Period .", "title": "", "metadata": ""}
{"_id": "9cd4fefe1e2bf533b1f32ccd5ee6cf52", "text": "Buys _amount shares of every outcome in the specified market .", "title": "", "metadata": ""}
{"_id": "b2b98a14a3bd8f804dfbb071e969fedf", "text": "BEGIN safe math functions by Open Zeppelin https : / / github . com / OpenZeppelin / zeppelin-solidity / blob / master / contracts / math / SafeMath . sol .", "title": "", "metadata": ""}
{"_id": "9cf69c0ae48a60f50858b81ab6869d3e", "text": "Exploration is complete and 5 Objects maximum will be dropped during one exploration .", "title": "", "metadata": ""}
{"_id": "ae9eed3eb5ab3b6f6b429fb799fa8b89", "text": "Nominate a new owner of this contract .", "title": "", "metadata": ""}
{"_id": "6412efc60df61d19082d4b68236a614b", "text": "Init function i . e .", "title": "", "metadata": ""}
{"_id": "a536c9dd42b92e31530be7b6c54315b9", "text": "Throws if called by any account other than the oracle .", "title": "", "metadata": ""}
{"_id": "fc1edb058c7a466cfbd7e959c47c63d4", "text": "setting Modifier .", "title": "", "metadata": ""}
{"_id": "940efc8f3b967cd949db4247baf6c60d", "text": "assigns ownership of monster to address .", "title": "", "metadata": ""}
{"_id": "e01ae8f7e985b7c0d91cd4948fad393c", "text": "only x modifiers .", "title": "", "metadata": ""}
{"_id": "dec1174abc3900584125e3dc379f5141", "text": "Get the amount of unsold tokens allocated to this contract ; .", "title": "", "metadata": ""}
{"_id": "67ba7a3f8808deaa2ade5b3408c902f1", "text": "Add a new player to an existing leaderboard .", "title": "", "metadata": ""}
{"_id": "28add19f0fbef4ae399aefc0896c365c", "text": "internal funcion to set the outcome sat .", "title": "", "metadata": ""}
{"_id": "6f35175972168abcac66608c3bdacc6f", "text": "Returns LBRS token balance of contract .", "title": "", "metadata": ""}
{"_id": "c058e1c8cb076428348270ddb4f30eeb", "text": "Returns the reputation for the provided user .", "title": "", "metadata": ""}
{"_id": "16b9a4a32e78d2017b0b16718895ee80", "text": "Function of changing allow / forbidden transfer status .", "title": "", "metadata": ""}
{"_id": "e9832b3257768538b869da66b3fcf271", "text": "Open a new channel between msg . sender .", "title": "", "metadata": ""}
{"_id": "27215f4f514ec7497b0e8d48df4e5e89", "text": "Performs the final stage of the token sale , mints additional 40 of token fund , transfers minted tokens to an external fund ( 20 game fund , 10 team , 5 advisory board , 3 bounty , 2 founders ) .", "title": "", "metadata": ""}
{"_id": "5c925f2f1029a5d1e82f25e5ad819bc1", "text": "Approve finish minting request , can be call only by owner which don't call this finish minting request before .", "title": "", "metadata": ""}
{"_id": "8c5078ebe479204fe9a26120f75d8b8a", "text": "burns all remaining token supply .", "title": "", "metadata": ""}
{"_id": "df02616e59cb72e459f06eabfe0b01c6", "text": "solhint-enable code-complexity .", "title": "", "metadata": ""}
{"_id": "298216ab27ee20c1fb95e8a5f43717a4", "text": "change Withdrawable for one round after every month for investor not in top .", "title": "", "metadata": ""}
{"_id": "141ca6f645ce7ea29e191033c46d4fc0", "text": "true if crowdsale has started .", "title": "", "metadata": ""}
{"_id": "1c3522394a270e0521678d4e591390fe", "text": "Transfer tokens from your account to other account .", "title": "", "metadata": ""}
{"_id": "92879c330c4c5c7587b7909b1a0b2a14", "text": "Returns the confirmation status of a transaction .", "title": "", "metadata": ""}
{"_id": "55c10352d9b5959814d1a2f814872a7b", "text": "Allow contracts to have ownership without taking full custody of the token .", "title": "", "metadata": ""}
{"_id": "48b08ee5a8ec513256313aa515d37c2d", "text": "Sets the purchase price of tokens by contract .", "title": "", "metadata": ""}
{"_id": "e9183bb1f77b6ebc3f41c99c8b6c35d8", "text": "Update cap before crowdsale starts .", "title": "", "metadata": ""}
{"_id": "a0f7b37f2a0099887e19ccf158164e2f", "text": "Buy RoseCoin by sending Ether .", "title": "", "metadata": ""}
{"_id": "c5e7dbb085feaa9f25107f0703c39c7e", "text": "Getter and Setter for AccessControl .", "title": "", "metadata": ""}
{"_id": "815ff5e490150b61a9813602bf68813a", "text": "To enable transfer of tokens .", "title": "", "metadata": ""}
{"_id": "cd7f89b277913925eeb2fbd5a59346f9", "text": "Called by server to accept game session created by player with address _playerAddress .", "title": "", "metadata": ""}
{"_id": "0c78c2e1a361480be8454c8097f6ad7d", "text": "Get the admin address .", "title": "", "metadata": ""}
{"_id": "94a3afc6ca1da493707cebb8b9338a75", "text": "The emission function ( the manager or contract owner creates tokens and sends them to a specific account ) .", "title": "", "metadata": ""}
{"_id": "bccb9c211599f46b1b939b31f0a369e2", "text": "Add additional bonus tokens for subscribed investors .", "title": "", "metadata": ""}
{"_id": "be2cc66e161b6aefaae9202ff97fba00", "text": "called by owner for changing blockedTimeForBountyTokens .", "title": "", "metadata": ""}
{"_id": "a20e19940b564ee678cd7b9a54b6f093", "text": "Owner-only functions .", "title": "", "metadata": ""}
{"_id": "43cb9ea99a10a98fe366c2ba920f8f81", "text": "Withdraw dev cut .", "title": "", "metadata": ""}
{"_id": "87f2f677a301c1bc51023283731c9223", "text": "Setup the interface to the storage contract .", "title": "", "metadata": ""}
{"_id": "e3c60d893b4eedfeab63de68c8c255aa", "text": "Return floor ( ln ( numerator / denominator ) * 2 MAX_PRECISION ) , where : .", "title": "", "metadata": ""}
{"_id": "045fcfcc25b5101a72d663026a1caa4e", "text": "Returns the number of Pandas owned by a specific address .", "title": "", "metadata": ""}
{"_id": "c981b9394e9eb70c1efde7a5cf4acf5d", "text": "determine if addr has role .", "title": "", "metadata": ""}
{"_id": "740f628511c002d005261fe9b1c5bf74", "text": "init reference of other contract and initial supply .", "title": "", "metadata": ""}
{"_id": "f5f59d118a12378898100e610a74ef80", "text": "account management .", "title": "", "metadata": ""}
{"_id": "6b235b096502e73ef8505d43131332c7", "text": "release Tokens of an individual address .", "title": "", "metadata": ""}
{"_id": "8baefbc505bcb386fb542cc08ae9267e", "text": "Gets the release timestamp of the specified address if it has a locked balance .", "title": "", "metadata": ""}
{"_id": "afc7c71bcd5f30a77a5bc4eca8d7c8f1", "text": "Get the amount of allowed tokens to spend .", "title": "", "metadata": ""}
{"_id": "0eaf849575b659ba01c71074c7874abd", "text": "Amount of tokens that can be sent .", "title": "", "metadata": ""}
{"_id": "8b7ea8c27ecfef6d6f9fc4d9194bbcdd", "text": "Sets price in wei per 1 PRIME token .", "title": "", "metadata": ""}
{"_id": "c3a6a01f228a077ec011131482e40d1c", "text": "records the winner so that a transfer or withdraw can occur at a later date .", "title": "", "metadata": ""}
{"_id": "8496eb42012a3ee03179cc99bcf859c2", "text": "Move to ceiling , used as a failsafe .", "title": "", "metadata": ""}
{"_id": "448347bd9eaa4377693776816762a798", "text": "Withdraw tokens after the window has closed .", "title": "", "metadata": ""}
{"_id": "4727909c604be11dcd0bbe1746710a2f", "text": "END of this Contruibute .", "title": "", "metadata": ""}
{"_id": "954588a97f4ce8bd7bd08d2c09352b30", "text": "Freeze account ( address ) .", "title": "", "metadata": ""}
{"_id": "d614dc38e041e29df57970282a606dde", "text": "We are starting from TAIL and going upwards .", "title": "", "metadata": ""}
{"_id": "a61fc772536cf7663bdd1be81e62e659", "text": "Update partner 1 vows only once .", "title": "", "metadata": ""}
{"_id": "20b2fce97476d4854c2cbf1413a5e9c0", "text": "Allows the developer to set the token address because we don't know it yet .", "title": "", "metadata": ""}
{"_id": "9a4671f980f89efca8c4437fb200e7cd", "text": "team 1 is Philadelphia team 2 is New England a bet is final and you cannot change it .", "title": "", "metadata": ""}
{"_id": "2c748bf651b2c733ae5fb345cbccade3", "text": "This function logs the balances after the transfer to be used in further calculations .", "title": "", "metadata": ""}
{"_id": "83ae9767924e812d4b771fabf48d4d0c", "text": "in case some bugs .", "title": "", "metadata": ""}
{"_id": "5fda537459ff0bafa1e4995e16f28f07", "text": "Returns token amount for wei investment .", "title": "", "metadata": ""}
{"_id": "28e5502dbbaca7af86dbdceaa3bff8c5", "text": "Function to allow contract owner to withdraw Ethereum deposited to the Eurno contract .", "title": "", "metadata": ""}
{"_id": "90387d02a025e6b7e8f4b17d36cdb4e9", "text": "Transfer tokens from one address to another with pause and freeze features for owner .", "title": "", "metadata": ""}
{"_id": "161fbcd556327e68e8a31121c68e4aa4", "text": "Check interest due + balance .", "title": "", "metadata": ""}
{"_id": "74c0053ec8c3de9a462fbe8e5388c3b8", "text": "recover funds in case of error .", "title": "", "metadata": ""}
{"_id": "df12c82e35b8d286ed1d3b97d7979667", "text": "Finalize the donationraiser if endDate has passed or if hardCap is reached .", "title": "", "metadata": ""}
{"_id": "2284ad0b0beb9cc2c0928a3ac743c553", "text": "Payout your available balance based on your activity in previous weeks .", "title": "", "metadata": ""}
{"_id": "e2dcbb270ec216603c883506bc604754", "text": "Set Finish Minting .", "title": "", "metadata": ""}
{"_id": "f47c0ae837d07850244ed3c614f828aa", "text": "Put a lambo up for sale .", "title": "", "metadata": ""}
{"_id": "3acb51589bf2d0524f5ac51eb48fcda9", "text": "returns the minimum sell amount for an offer .", "title": "", "metadata": ""}
{"_id": "83d5e49bf082866ba2d38acfcc45f346", "text": "Check if sender is controller .", "title": "", "metadata": ""}
{"_id": "3cf392c6bd7b7f47590eb0347468bcd7", "text": "When ICO is closed , send the relaining ( unsold ) tokens to address 0x0 .", "title": "", "metadata": ""}
{"_id": "cc212677a7aed26f3468d58f93636ea9", "text": "Confirm deal completed and transfer money to beneficiary .", "title": "", "metadata": ""}
{"_id": "f7a821e6d10458b9574c5bdd6e6ea7c9", "text": "Withdraws the given number of tokens from the locker as long as they are not already locked or promised .", "title": "", "metadata": ""}
{"_id": "806257886ca3b639a0e5adac2f1d22b6", "text": "See the current token price in wei ( https : / / etherconverter . online .", "title": "", "metadata": ""}
{"_id": "157da89030d8185c8a7751a4667e7802", "text": "registers multiple devices on the Atonomi network .", "title": "", "metadata": ""}
{"_id": "3f604fc87d4c50baecd739c1b64309be", "text": "Modifier throws if called by any account other than the manager .", "title": "", "metadata": ""}
{"_id": "38c46eb7d471aa71e63ae49616f05c42", "text": "block number , after this block tournament is opened for admission .", "title": "", "metadata": ""}
{"_id": "ae6e92526165344a7414776af0b5852f", "text": "Throws if called by any account other than the dao .", "title": "", "metadata": ""}
{"_id": "89c023477bbf4a3ac32ee77b6cc29528", "text": "Adds the latest Btc Euro rate to the history .", "title": "", "metadata": ""}
{"_id": "c4ad0b750602d744fd37a5694266dd6c", "text": "token total supply .", "title": "", "metadata": ""}
{"_id": "6d04007bed5fd657781518bfc2f5db48", "text": "Add tokens to specified address , tokens amount depends of wei amount .", "title": "", "metadata": ""}
{"_id": "f12997ae987bdcf701868b2570c1309a", "text": "Completes a breeding tutorial cutie ( non existing in blockchain ) with auction by bidding .", "title": "", "metadata": ""}
{"_id": "5451edad50aba91054b23c09e4dc8da7", "text": "withdraw Ether to a multisig address .", "title": "", "metadata": ""}
{"_id": "0860e79eabbb16cc4ee64bcd7d35e54e", "text": "An integer is required ( e . g .", "title": "", "metadata": ""}
{"_id": "bf738d1f3619949f7e3808bbf06a8feb", "text": "Allows another account to spend a given amount of tokens on behalf of the owner's account .", "title": "", "metadata": ""}
{"_id": "09ad5024de0dbfc3877d6501130bc3fe", "text": "Stops the registrar , disabling configuring of new domains .", "title": "", "metadata": ""}
{"_id": "c373b6cf24e35f834b3992703fedfc27", "text": "receive approval to spend some tokens .", "title": "", "metadata": ""}
{"_id": "be7f60770952682be1502d64d9c43734", "text": "Owner can add administrators of tokens .", "title": "", "metadata": ""}
{"_id": "d197405f577d2e3a29c685a9e3598e07", "text": "Clears record of a Group from a Contributor's record .", "title": "", "metadata": ""}
{"_id": "99e00bdb6a607f8d9fee16f18e3afc4b", "text": "transfer token from smart contract to another account , only by owner .", "title": "", "metadata": ""}
{"_id": "c1d711f4d19398c2507d966622710b65", "text": "IMPLEMENTS : Bankrollable . getWhitelistOwner ( ) .", "title": "", "metadata": ""}
{"_id": "f72e10b9aedabca1663e54f875f502c0", "text": "Bonus function for the first week .", "title": "", "metadata": ""}
{"_id": "55e4d2310a3053c984a906dd9ac40ab2", "text": "overridden methods .", "title": "", "metadata": ""}
{"_id": "54801bcfc36a6de93cc6966e84663e62", "text": "Transfer part of balance to any account ( by owner and admin only ) .", "title": "", "metadata": ""}
{"_id": "b1d10311b27aae458ebb8740408d4634", "text": "User can claim tokens once the crowdsale has been finalized .", "title": "", "metadata": ""}
{"_id": "010f07f95ac9d5c62ce7b981456b3774", "text": "Deposit functions .", "title": "", "metadata": ""}
{"_id": "1d2b673e8aef8b0b46f9110438d9930e", "text": "Whitelist's section .", "title": "", "metadata": ""}
{"_id": "87271ca0ad3bc360728532d02441c975", "text": "Checks whether minEtherCap is reached .", "title": "", "metadata": ""}
{"_id": "54d3206b81779a1b9ab08f11735e20a9", "text": "setup the Funding parameters .", "title": "", "metadata": ""}
{"_id": "f9559be2ba604b2417fc40d843fc5d7a", "text": "Have a pregnant EtherDog give birth ! .", "title": "", "metadata": ""}
{"_id": "7a80319e53e31d9416fb341bfca6adb4", "text": "Stop sale in case of emergency ( i . e .", "title": "", "metadata": ""}
{"_id": "adc6223d1b3a23ae03b404511a1fa088", "text": "When transaction is complete , buyer will release funds to seller .", "title": "", "metadata": ""}
{"_id": "be1ecdabbe93846482b6d495a8cdf378", "text": "Allows anybody to upgrade allowances from these contract to the new one .", "title": "", "metadata": ""}
{"_id": "f18d5b0e366b17351b171b53addb6ff9", "text": "Transferring the contract ownership to the new owner .", "title": "", "metadata": ""}
{"_id": "ed740df92639efac86ef2a8529e83daa", "text": "ETH balance is always expected to be 0 after the crowsale .", "title": "", "metadata": ""}
{"_id": "ea1ebb28f8049944b1c63861394989b1", "text": "function to show how many animals does an address have .", "title": "", "metadata": ""}
{"_id": "29c8c626e9f51dbddfa0753d08f0f9a4", "text": "Returns a list of all Zodiac IDs assigned to an address .", "title": "", "metadata": ""}
{"_id": "0e0dd5d9ae88c289a7dfc89da6de5067", "text": "Set the address of the user / contract responsible for collecting or distributing fees .", "title": "", "metadata": ""}
{"_id": "3821fb431bb266b02005dabf41964cee", "text": "finalizeSale ( ) ends the EarlyTokenSale .", "title": "", "metadata": ""}
{"_id": "2644462394e0c037a5d5ab4dd40e9e58", "text": "Return the current fiat value of the contract's balance .", "title": "", "metadata": ""}
{"_id": "e95e8f1ec2952595580cf6686541f895", "text": "Update the total balance , to be called in case of subsequent sales .", "title": "", "metadata": ""}
{"_id": "7817ab59f9d96f03fc20f8b713d5e9dd", "text": "Allow addresses to pay newBuyPrice ETH when buying and receive newSellPrice ETH when selling , foreach token bought / sold .", "title": "", "metadata": ""}
{"_id": "9d7b5f640b26bf67ecffbc11e6ce9d6c", "text": "dealer can withdraw the remain ether if distribute exceeds max length .", "title": "", "metadata": ""}
{"_id": "e6d50b8d46c25f6abd2d7c2a96914c46", "text": "Calcultes whether a position captures an enemy group , or whether it's a suicide .", "title": "", "metadata": ""}
{"_id": "23c6f43d975a5fc5e9941bc017d93788", "text": "Called by delegate with a signed hash of the transaction data to allow a user .", "title": "", "metadata": ""}
{"_id": "82ad38d99dce4d723b696720e1a114d3", "text": "used by ERC 223 .", "title": "", "metadata": ""}
{"_id": "49ff3e831ed482f736e43c1d684cf4fe", "text": "Attempts to transfer _value from _from to _to if _from has sufficient allowance for msg . sender .", "title": "", "metadata": ""}
{"_id": "39ae70c3ddda9d8ab41d90e95d5ed759", "text": "Change main owner address and transer tokens to new owner .", "title": "", "metadata": ""}
{"_id": "12f0430a20f0d013887dad491f70efe8", "text": "Convinience function to help present how much time a player has .", "title": "", "metadata": ""}
{"_id": "4e9912f77777d5c957fbff940cd072b3", "text": "Returns selling token balance by user address .", "title": "", "metadata": ""}
{"_id": "0cf5e751f97185879c7cbe4a43e1a532", "text": "Sets the start timestamp for the SALE_ENDED stage .", "title": "", "metadata": ""}
{"_id": "01e11ffc73b79aca43f153e84de9ab7a", "text": "Burn tokens can only use by owner .", "title": "", "metadata": ""}
{"_id": "8e7f06d494aa1d7fbdea1c917f023639", "text": "withdraw NAC for investor internal function only can run by this smartcontract .", "title": "", "metadata": ""}
{"_id": "4fb87662245b9e9c3b0609571f60f3db", "text": "method to check the reward amount .", "title": "", "metadata": ""}
{"_id": "42a01aaadc1505c0983bdd22086ebf95", "text": "Assigns ownership of a specific preSaleItem to an address .", "title": "", "metadata": ""}
{"_id": "965f66cefafc9a04b66dcf533baac6c1", "text": "returns a number between 0 and 4 based on which stat to increase 0 - no stat increase 1 - dexterity 2 - strength 3 - vitality 4 - luck .", "title": "", "metadata": ""}
{"_id": "3651988697f000260583b1cb2b5aac68", "text": "Start Main sale .", "title": "", "metadata": ""}
{"_id": "ded16ef0653f57604223924846af1bfd", "text": "Sets canvas name .", "title": "", "metadata": ""}
{"_id": "cd6280050d25f348eea138c4ec8f62cd", "text": "Reveal your number . . .", "title": "", "metadata": ""}
{"_id": "1e3b151e17c989d2d731ea76c512e2a3", "text": "Return wallets array size .", "title": "", "metadata": ""}
{"_id": "c1d629296a2a84e19d1e782c66ca7f1b", "text": "Get the customer's Tx of payment for MCW data - timestamp of payment for MCW which is recorded in the Tx .", "title": "", "metadata": ""}
{"_id": "326edef2e7d6b62e9d6cd2ebeef2930a", "text": "Withdraw amount from team_fund to given address .", "title": "", "metadata": ""}
{"_id": "c05d2a8f3afb1ffbad25689bcf82592d", "text": "Allow to turn Oraclize on by owner .", "title": "", "metadata": ""}
{"_id": "d763ba51265b87184b04e1eacefb9259", "text": "Get User's reserved amount .", "title": "", "metadata": ""}
{"_id": "67d9f6701e40feb946de9fe49f7469f3", "text": "transfers sender's tokens to a specified address .", "title": "", "metadata": ""}
{"_id": "c6d7d0e6c3ac4554fd8063ad68e1c62a", "text": "prevents contracts from interacting with SuperCard .", "title": "", "metadata": ""}
{"_id": "0449b9224c38c206bcefe507316baee1", "text": "Gets the current price of the tokens based on the current sold amount ( currentBaseTokensSold ) .", "title": "", "metadata": ""}
{"_id": "1326e28eabe9071c8b98c124c86df0fc", "text": "called by the owner to unlock private fund , returns to normal state .", "title": "", "metadata": ""}
{"_id": "60ce0c44d25e56b194fd3f413ff5c839", "text": "Performs the refund of the ignored bids ART tokens .", "title": "", "metadata": ""}
{"_id": "5527ca1fcee27d7d3bdeb4a505b3dae4", "text": "Mints the tokens in the Token contract .", "title": "", "metadata": ""}
{"_id": "49a5a84e5a909a2038a326d998e1936d", "text": "end pool function .", "title": "", "metadata": ""}
{"_id": "4efcebaefa68dea3f6f82c420943e2b1", "text": "Start the vesting process .", "title": "", "metadata": ""}
{"_id": "f7178bf2863ec29f862d8c593f5475e4", "text": "Deposits from user .", "title": "", "metadata": ""}
{"_id": "952a7494cac8d13403ebbb4f396be81b", "text": "Lottery's divs .", "title": "", "metadata": ""}
{"_id": "1ce3a2a5651c9c36733676d8e309cf00", "text": "balance uint256 .", "title": "", "metadata": ""}
{"_id": "89030eac6d81c7ab90783556c949b98a", "text": "Get the title of the Module .", "title": "", "metadata": ""}
{"_id": "04b637944a0b34110401f78b2341acbc", "text": "Charity beneficiary can only be changed every 13 weeks .", "title": "", "metadata": ""}
{"_id": "9d3b79f7d2faf2ac3fc71d4e4145eb1c", "text": "deauthorize a address to call game functions .", "title": "", "metadata": ""}
{"_id": "b70e6e749b89b36ffaac84f968854756", "text": "Starts a new round .", "title": "", "metadata": ""}
{"_id": "fc7a6b14554018f450c12c26f65dc3c9", "text": "public function player submit bet only if game is active bet is valid can query oraclize and set player vars .", "title": "", "metadata": ""}
{"_id": "3eb45c45468b51c8d96c73578cc7c5f8", "text": "converts a string to an integer ( there may only be digits ) .", "title": "", "metadata": ""}
{"_id": "aa0bb4bf2af2086270c626603a282e14", "text": "release any other tokens needed and mark us as allocated .", "title": "", "metadata": ""}
{"_id": "e1850c52bb098e0d6485f3c9dcf693fa", "text": "Get totalSupply of tokens - Minus any from address 0 if that was used as a burnt method .", "title": "", "metadata": ""}
{"_id": "b1bfe4f1a9358b7ca129ccc294af69a0", "text": "add to beneficiary mapping in batches .", "title": "", "metadata": ""}
{"_id": "8722c95f9d59b01938b431aa128c458d", "text": "The configuration from the constructor was moved to the configurationGenericCrowdsale function .", "title": "", "metadata": ""}
{"_id": "f4b0b294f14aa8a43f0ba11ae70e5f76", "text": "requires parts in order .", "title": "", "metadata": ""}
{"_id": "9fae3fd4817ef68b771e79b38d738e6f", "text": "To Distribute AirDrops for Applicants of Round 1 .", "title": "", "metadata": ""}
{"_id": "8d8df8555be7a073752b36d7e829f842", "text": "immediate fund forwarder to owner , unless owner deposits .", "title": "", "metadata": ""}
{"_id": "149d5253a578cf0c1595ce993131a78c", "text": "Sets a specific user's maximum contribution .", "title": "", "metadata": ""}
{"_id": "bd931ae595bade0ceff03f3538f8b587", "text": "Edit a registrant , only registrar allowed public_function .", "title": "", "metadata": ""}
{"_id": "abb0c68bfa470e9a6a3dc6748af34f6c", "text": "gets the parameter keyed by the provided name value from the params mapping .", "title": "", "metadata": ""}
{"_id": "633ab4ce129895a8e9e6bbb4f2cfcc42", "text": "bonus to partners .", "title": "", "metadata": ""}
{"_id": "99374f9936b1fcc7bfdbc0e90ad99b35", "text": "Transfer a Player owned by another address , for which the calling address has previously been granted transfer approval by the owner .", "title": "", "metadata": ""}
{"_id": "af6786c0572e99e15819be49fa4349d7", "text": "Mint function that allows for transactions to come in out-of - order .", "title": "", "metadata": ""}
{"_id": "b395e9a07567e7bb7a2099722aa1afd5", "text": "contributors can claim refund if the goal is not reached .", "title": "", "metadata": ""}
{"_id": "973618dab0d456511e7d69f76246e886", "text": "sqrt root func .", "title": "", "metadata": ""}
{"_id": "19cc7383c102eaabb041ed0b4531b20f", "text": "Add an address to an existing id by a user .", "title": "", "metadata": ""}
{"_id": "748b5f16cacc4687a4c3084867c6a1e6", "text": "Get time to end of the competition .", "title": "", "metadata": ""}
{"_id": "32793f64e57d85b2a517dfb1b627917b", "text": "To create and assign IAC Tokens to transaction initiator .", "title": "", "metadata": ""}
{"_id": "01bb0d6975c39b528290a9b03b826bee", "text": "Get price of one token in wei .", "title": "", "metadata": ""}
{"_id": "57810a8953964dc48c5b6dddf45599d2", "text": "Should be used as sync tool .", "title": "", "metadata": ""}
{"_id": "fe162a9fa87f896cd504f679e63ba55b", "text": "Owner can remove an administrator .", "title": "", "metadata": ""}
{"_id": "8ec15cf479bb31d67de18e41a5e79361", "text": "Function that is called when a user or another contract wants to transfer funds to an address with tokenFallback function .", "title": "", "metadata": ""}
{"_id": "4faca4cc56d8c8c88d087b862edffd4d", "text": "Issue : Change to internal constant .", "title": "", "metadata": ""}
{"_id": "ff7345a6a35f1c8cc53648ddbc26594e", "text": "multi-sig function modifier : the operation must have an intrinsic hash in order that later attempts can be realised as the same underlying operation and thus count as confirmations .", "title": "", "metadata": ""}
{"_id": "a9d1eaf570240aa02e0fd63fe7a46b01", "text": "When investors buy additional coins in Exchange , the amount will require tockenlock for 10 months .", "title": "", "metadata": ""}
{"_id": "6d0b2d59c3484d23f5d9e0a762896fe3", "text": "One-way toggle to allow trading ( remove global freeze ) .", "title": "", "metadata": ""}
{"_id": "8fad475abee9b62a3e71c669def3cc23", "text": "Execute options during the ICO token purchase .", "title": "", "metadata": ""}
{"_id": "c843644913dfcd9ec82b8b64a7766e27", "text": "allow the token to be freely tradeable .", "title": "", "metadata": ""}
{"_id": "f218e1ce7fc5906009fe934ae0b99b7c", "text": "Congress can regulate new token issuance by contract .", "title": "", "metadata": ""}
{"_id": "a74e5d91b5c1dd36ee7e8f9c7c4ef517", "text": "Add backend privileges to an address .", "title": "", "metadata": ""}
{"_id": "db4106e3ce3afbc40cadf82b0f58fce6", "text": "Get the token balance of a wallet with address _owner .", "title": "", "metadata": ""}
{"_id": "9e8ac43f3e5369025038947249b8b257", "text": "For host : returns an array of promotion IDs that an address hosts .", "title": "", "metadata": ""}
{"_id": "527790e794d6f1b8eb4e3a31519f115d", "text": "Reverts if called after the sale is initialized .", "title": "", "metadata": ""}
{"_id": "3b6a30ae248fa05027d25b69b246e80d", "text": "Withdraw untraded tokens 10K at a time .", "title": "", "metadata": ""}
{"_id": "b841677830fef83ad4db0b429b0eb854", "text": "Close presale .", "title": "", "metadata": ""}
{"_id": "21ba5a9a4614813019f5b15d61bd4d16", "text": "Sells your tokens for Ether .", "title": "", "metadata": ""}
{"_id": "a40b5ae2b8653410d07953e8293b85ef", "text": "Migrates TKRP tokens to TKR token at a rate of 1 : 1 during the Crowdsale .", "title": "", "metadata": ""}
{"_id": "c13b678fce0cce5e13c0eda620da2c3c", "text": "Safety to prevent anymore purchases / sales from occurring in the event of unforeseen issue .", "title": "", "metadata": ""}
{"_id": "ca1a3a388b9a1c8eca0c25a2cd91f97d", "text": "allows to change the price of an empty block .", "title": "", "metadata": ""}
{"_id": "9e909b739d0c5bafd5ce938f88023080", "text": "emergency withdraw .", "title": "", "metadata": ""}
{"_id": "cb41611cab49d7d3c33693e9ca46164d", "text": "Called by the owner of the contract to close the Sale and redistribute any crumbs .", "title": "", "metadata": ""}
{"_id": "6fb8adff5e0f6b4e6ce901bad8ebf714", "text": "Safe buy order where user specifies the max amount to buy and the max price ; prevents snipers changing their price .", "title": "", "metadata": ""}
{"_id": "57ab0a5340548397742080fa74d0cbc9", "text": "the owner may disqualify a bid if it is bogus .", "title": "", "metadata": ""}
{"_id": "86c675e1b520e91fdea3a2468dc80719", "text": "Member can withdraw their share of donations from the previous month .", "title": "", "metadata": ""}
{"_id": "18f9cc7ce7286477c50cdfd345c0facf", "text": "Must be called by owner before or after ICO ends , to check whether soft cap is reached and transfer collected funds .", "title": "", "metadata": ""}
{"_id": "34dc94e2f17316045f3602c169639b1f", "text": "Returns the address of any customerService account .", "title": "", "metadata": ""}
{"_id": "bd46fed055b95dd5c8c866e2aac73639", "text": "Voter requirements : .", "title": "", "metadata": ""}
{"_id": "e6b2138d35803e2172578dbf8c03b478", "text": "Put a LinglongCat up for auction to be sire .", "title": "", "metadata": ""}
{"_id": "15c15163fa25dd7fe0e6361425782a51", "text": "Transfer Action .", "title": "", "metadata": ""}
{"_id": "e30f72acfa4087bfb479f7551ee7de71", "text": "time based on blocknumbers , assuming a blocktime of 30s .", "title": "", "metadata": ""}
{"_id": "fefaf2c47ca7e25e11dd6f799c46ba75", "text": "Allows owner to change promo value .", "title": "", "metadata": ""}
{"_id": "4a7c0209e7d67e2ff7dce3a34d9fd170", "text": "Gets the balance of the specified address less escrow tokens .", "title": "", "metadata": ""}
{"_id": "7b907bb2099e7ababc44c322e8daeab1", "text": "Prevents accidental sending of Eth when you shouldn't .", "title": "", "metadata": ""}
{"_id": "638b5279118082f6d3fb709392048152", "text": "only IRN Nodes can call , otherwise throw .", "title": "", "metadata": ""}
{"_id": "0d0dc70fd3668ba59a41de9c5b14c568", "text": "receiveApproval calls function encoded as extra data .", "title": "", "metadata": ""}
{"_id": "be4aa5e95b4916d481aeab1bf88d11a0", "text": "modifier to allow actions only when the refund IS paused .", "title": "", "metadata": ""}
{"_id": "fb5d56cdf1a535b2e3277b4892435da3", "text": "saveBlock is how users post new content .", "title": "", "metadata": ""}
{"_id": "7ca8ca8af323c9c008cff6d6efba2621", "text": "Trading limited - requires the token sale to have closed .", "title": "", "metadata": ""}
{"_id": "f5da5622df4217e22360d3ac519ee65d", "text": "Get bonus percent .", "title": "", "metadata": ""}
{"_id": "2b3a658447e36f42b88fdf246769cd83", "text": "add these addresses to the whitelist .", "title": "", "metadata": ""}
{"_id": "1c536d961e7f45cdfb3f656fc9a1ef6f", "text": "Call me to withdraw money .", "title": "", "metadata": ""}
{"_id": "9af0af66fa691fc0e52a9febb7cff2d0", "text": "Called when an address wants to manually withdraw their bid from the sale .", "title": "", "metadata": ""}
{"_id": "1be04284ce8ebf2ec83761c1fe08bc38", "text": "Members buy tokens from this contract at this price .", "title": "", "metadata": ""}
{"_id": "727976310c816640e31401faa8bb31bd", "text": "Token Contract Functions to be called Manually via Owner calls to ICO Contract .", "title": "", "metadata": ""}
{"_id": "3402501b58277cf43daca9afb92049fa", "text": "Reverts if called before the sale is initialized .", "title": "", "metadata": ""}
{"_id": "5f86ecfc1ca34c063cd1d40052f08e8f", "text": "Approve shutdown of Melon version .", "title": "", "metadata": ""}
{"_id": "274508c72d47e6c984a1ee6208a3769e", "text": "Returns a slice containing the entire bytes32 , interpreted as a null-termintaed utf-8 string .", "title": "", "metadata": ""}
{"_id": "7bffb28be885fbc708d828ff9b579e3a", "text": "Called when _owner sends ether to the MiniMe Token contract .", "title": "", "metadata": ""}
{"_id": "1b404961cf35aca00a41c4efae742107", "text": "Must be called after the crowdsale ends , to send the remaining tokens back to owner .", "title": "", "metadata": ""}
{"_id": "c868164dd9c2cbefeda00e1198d70034", "text": "admin can allocate tokens for redemption .", "title": "", "metadata": ""}
{"_id": "7a011d59ef3c265b6fc89588a3bfd4d4", "text": "Destrui\u00e7\u00e3o dos Tokens .", "title": "", "metadata": ""}
{"_id": "4471894b9cbdeb0dedbbee6fb2d08793", "text": "should allow withdrawal without gas calc .", "title": "", "metadata": ""}
{"_id": "2a8300a4d11dbe59be269c479db04fa7", "text": "Anyone can send the ether in the contract at any time to charity .", "title": "", "metadata": ""}
{"_id": "fa4649dd37593bcbcb35053efb49faef", "text": "Token exchange / migration to new platform .", "title": "", "metadata": ""}
{"_id": "64d280ca3e2d3acb5bfeac3dfe2cf19b", "text": "use this function in case of bug .", "title": "", "metadata": ""}
{"_id": "7c09d594e7d8e3808934a410ecae45c0", "text": "Getter for USD price of tokens .", "title": "", "metadata": ""}
{"_id": "69633a8dd00f75c64a5ff653d4cc0be0", "text": "Set factory address .", "title": "", "metadata": ""}
{"_id": "ddae5fee1629e779f032489d0e7a6f9f", "text": "Add a new event .", "title": "", "metadata": ""}
{"_id": "fa53754e8c51317299ceae47a9aa2492", "text": "true if a ring's hash was submitted and still valid ; false otherwise .", "title": "", "metadata": ""}
{"_id": "a54c945e9ed6d0eaade0f64762598494", "text": "Only executable by an owner of the contract .", "title": "", "metadata": ""}
{"_id": "ef1fd2eb942ff99c9ec2db618f71b4a6", "text": "changes the link hash of a moken this enables metadata / content data to be changed for mokens .", "title": "", "metadata": ""}
{"_id": "eae958cd288d694c91fc2c3eaebb7599", "text": "Returns the total number of Assets currently in existence .", "title": "", "metadata": ""}
{"_id": "09f58569df06bf0805aa032484689c6b", "text": "Notification for allowance of a spender by the contract owner .", "title": "", "metadata": ""}
{"_id": "6255f98625f6f8628957572bc6bc30ec", "text": "run the pre minting for now yes , after it will be done during the ownership transfer call .", "title": "", "metadata": ""}
{"_id": "1bf29921511cef167c5a1a62264f3a5b", "text": "Return all relevant data for a meme .", "title": "", "metadata": ""}
{"_id": "5240682dc218363ba67c1634ba04372b", "text": "calculate score by game forecast ( only for games that have ended ) .", "title": "", "metadata": ""}
{"_id": "a8fa6b2f440bdbbc9792ca78ec87f872", "text": "Allow user to exit ICO .", "title": "", "metadata": ""}
{"_id": "80b7a1e94ae888d3e44e49a2d96238eb", "text": "Set the address to operator .", "title": "", "metadata": ""}
{"_id": "f2fab7937982245ddaa096656aff51ac", "text": "Checks if the sender is whitelisted for the crowdsale .", "title": "", "metadata": ""}
{"_id": "f0f501a52a187b449131aca0b1d3df56", "text": "Utility function to advance the round / payout the winner .", "title": "", "metadata": ""}
{"_id": "7325021b4d475d98e71a07ea1c7dc987", "text": "Gets the all fields for the commitment of the specified address .", "title": "", "metadata": ""}
{"_id": "c8785ba8783c40fab56b30fe54c5cace", "text": "For people who ignore the KYC / AML procedure during 30 days after payment ( KYC_PERIOD ) : money back and zeroing tokens .", "title": "", "metadata": ""}
{"_id": "8f96df5eae439c31d199256b98605400", "text": "Set your referral first .", "title": "", "metadata": ""}
{"_id": "4b21902ed25d62363c5192975513e73e", "text": "Get back the ether sent during the funding in case the funding has not reached the minimum level .", "title": "", "metadata": ""}
{"_id": "2ed4c05b3981b19e3032e00c5482f14a", "text": "Modifier to ensure that a function is only called by the owner : .", "title": "", "metadata": ""}
{"_id": "d4e8d5fa02dda4ff3fb3c72a4af92397", "text": "list global audit documents .", "title": "", "metadata": ""}
{"_id": "6158493d817675000b11cf5c6324aaee", "text": "Destroys destroyAmount new tokens from the hotwallet hotWalletAddress .", "title": "", "metadata": ""}
{"_id": "d30de9612f2cbf7c2214a0c12062430f", "text": "true if tokens were transferred successfully , false otherwise .", "title": "", "metadata": ""}
{"_id": "207ce4151d0ffa115401d41fb800b754", "text": "Calculate the next price given the current price .", "title": "", "metadata": ""}
{"_id": "f078c44566bf5f218d79b60d21d296b7", "text": "Give back CC and get a refund back in CLN , dev can only be called after sale ended and the softcap not .", "title": "", "metadata": ""}
{"_id": "25849894031ec166059bd1381a026f19", "text": "safe closing invest , checking for complete by date .", "title": "", "metadata": ""}
{"_id": "e645e815e040e216255467da76465319", "text": "Pull function sig from _data .", "title": "", "metadata": ""}
{"_id": "932652a0de11e476f89dbbbf570f66e7", "text": "Get lease list from a card .", "title": "", "metadata": ""}
{"_id": "5a2a608af1f62f1ad2ffafcbf2934a93", "text": "Assigns ownership of a specific Person to an address .", "title": "", "metadata": ""}
{"_id": "4c895a32ed81528809a80eedfcf074a9", "text": "Calculates number of tokens RMC for buying with ERC-20 token .", "title": "", "metadata": ""}
{"_id": "e966e8e8e129ab2a0b6f7149fc24e88a", "text": "Cancel transfer and get sent ether back .", "title": "", "metadata": ""}
{"_id": "71dbdc5bbd77ba635c8e092b9efb088f", "text": "Throws if crowdsale has not ended .", "title": "", "metadata": ""}
{"_id": "9d7b9de5bb6d6c1507d2a5280e8cbf7e", "text": "This function is internally called by the buyTokens function to automatically forward all investments made to the multi signature wallet .", "title": "", "metadata": ""}
{"_id": "8b7ac68641068efd1de08a6388ef4534", "text": "Getters for backends .", "title": "", "metadata": ""}
{"_id": "1d1e8daa230662cbb59fb9f977b388cf", "text": "Users use this function to withdraw ether from their custody .", "title": "", "metadata": ""}
{"_id": "258ea1cc92024437207c14ef6ecb62b6", "text": "Claim part of your share of the balance .", "title": "", "metadata": ""}
{"_id": "dd78bf941cb816797a90c42f07f1f338", "text": "function to check if a purchase is valid .", "title": "", "metadata": ""}
{"_id": "3138fbabc977b25bb19d242550b57b75", "text": "whitelist controller .", "title": "", "metadata": ""}
{"_id": "ad3ec73cb2086f9629ddc20bf34c8918", "text": "Allows to delete a previous action not executed .", "title": "", "metadata": ""}
{"_id": "9cc8a03be9d44b5e4fc525b3a7a0a724", "text": "To get all the trees on sale .", "title": "", "metadata": ""}
{"_id": "c8b19da1a1b1317fc2e3784ecf6f7b13", "text": "Log contributors and their contributions .", "title": "", "metadata": ""}
{"_id": "53eba5978a75f7ca2ddd0b2e2aafbafa", "text": "Buys quantity of tokens for the amount of sent ethers .", "title": "", "metadata": ""}
{"_id": "78f376db7c80b86da88397bff753bdcd", "text": "Buy a section based on its index and set its cloud image_id and md5 .", "title": "", "metadata": ""}
{"_id": "b7b7acd589c25040663d018e67c6be36", "text": "Allocate reserved tokens .", "title": "", "metadata": ""}
{"_id": "4d1636b997b5472f38261e48d2ee3458", "text": "Setter for maxAppeals .", "title": "", "metadata": ""}
{"_id": "4fe773bb6793679bdeb7e3e5207f55d5", "text": "A contract attempts _ to get the coins .", "title": "", "metadata": ""}
{"_id": "797339ddbf9c700c8075cc0b9ac163ab", "text": "Distribute token to multiple address .", "title": "", "metadata": ""}
{"_id": "d5644f6ffd9089127138324750e48cd8", "text": "Must be called to end the sale .", "title": "", "metadata": ""}
{"_id": "0b1face2c9b7e8ff110c7aba8fbc087e", "text": "Buying , Very importent part ; .", "title": "", "metadata": ""}
{"_id": "7e90d36f4717d18128bd82890568fe2f", "text": "Allow members to circumvent the safety measure against self-inactivation .", "title": "", "metadata": ""}
{"_id": "54f8f8ca283b2d38a1ff8c411fa6c305", "text": "called by the owner to freeze token holder .", "title": "", "metadata": ""}
{"_id": "83c88c5ffa13e446449e251e9c2e8118", "text": "adds a single dragon of the given type to the ids array , which is used to iterate over all characters .", "title": "", "metadata": ""}
{"_id": "d0cfa27ccccda196f9484d51038412e5", "text": "Function to receive ERC223 tokens ( only from token , only once , only TOTAL_TOKENS ) .", "title": "", "metadata": ""}
{"_id": "12c3cdbdca510b89f0dd9123f0eb7aba", "text": "The basic fundraiser initialization method .", "title": "", "metadata": ""}
{"_id": "334134b50bdaf253194ec0a13cd6e801", "text": "Send out contributions imediately .", "title": "", "metadata": ""}
{"_id": "662ca012a455b4c65bea7d88ace68eec", "text": "LAND Create and destroy .", "title": "", "metadata": ""}
{"_id": "a072773295e4c4f655ee01ad3df4587f", "text": "public ( read only ) : check if addr is a masternode .", "title": "", "metadata": ""}
{"_id": "57891f99b39c2829c41afd6b69da1c34", "text": "Puts the camapign into closed state only controller can do so only possible from the active state we can call this function if we want to stop sale before end time and be able to perform 'finalizeCampaign ( ) ' immediately .", "title": "", "metadata": ""}
{"_id": "946f65b347f74a4da349287cda213bfe", "text": "unique combination of bet and wheelResult , used for access to WinMatrix .", "title": "", "metadata": ""}
{"_id": "242127d5a0dd473ca3aee2b3d672acf3", "text": "Check ownership .", "title": "", "metadata": ""}
{"_id": "2759cde5b2c666fe1b0062556a314787", "text": "If you lock 50 , the lockout time is six months .", "title": "", "metadata": ""}
{"_id": "97fa5ff97ec6f7ca223a6f0b610b3296", "text": "Retreive the poll data .", "title": "", "metadata": ""}
{"_id": "781f560c4cf1e43cfc92f1adbc8fc832", "text": "Calculates tokens for this stage .", "title": "", "metadata": ""}
{"_id": "1dbb91962ae02258533998cba404fda4", "text": "get attack and defence from fish .", "title": "", "metadata": ""}
{"_id": "ef9cc984d2e47ddf8a59999c84fe1d6a", "text": "Check an address to see if it is a controller .", "title": "", "metadata": ""}
{"_id": "3797eb2f9867f022a46849f1346ae711", "text": "Admin Functions .", "title": "", "metadata": ""}
{"_id": "128cd39e7c0b18dd24b788c69f40d0d5", "text": "Begin a motion to confiscate the funds in a given nomin account .", "title": "", "metadata": ""}
{"_id": "eacd46b1826346c116b5b2e35035fd65", "text": "Reverts if not in crowdsale time range .", "title": "", "metadata": ""}
{"_id": "6a4605d1854b007bd972ff8fc7e095d7", "text": "check the address is register for token sale .", "title": "", "metadata": ""}
{"_id": "07622ddd6c8d9709935547d061870089", "text": "If self ends with needle , needle is removed from the end of self .", "title": "", "metadata": ""}
{"_id": "081c7c22cc903d252bb7dff05790bae7", "text": "function to contributes to the campaign .", "title": "", "metadata": ""}
{"_id": "9600ea263e37e1d1dcb5515cdb92424c", "text": "Get the approved address for a single WAR .", "title": "", "metadata": ""}
{"_id": "d2463becb1861fbd751ca851fba87c6c", "text": "param1 licensedState The state of license .", "title": "", "metadata": ""}
{"_id": "e33468d707b24ed979be99d4296c588c", "text": "Returns number of supplied tokens .", "title": "", "metadata": ""}
{"_id": "e43d28b9c329d82634439a58c5095dd7", "text": "Set the Contract Donations Receiver - Set to the Special Olympics Donations Address .", "title": "", "metadata": ""}
{"_id": "5a9a24c977bcd713b6a933c12da7f2fb", "text": "Overrides function to mint tokens from MintableToken contract with new modifier .", "title": "", "metadata": ""}
{"_id": "1e8b61bdf9728b1526e4976b4dd5fa8b", "text": "Allows the current owner to transfer control of the contract to a newCeo .", "title": "", "metadata": ""}
{"_id": "2e6f1921907a14fcd58af84116ae4b30", "text": "Explore a sector with a defined ship .", "title": "", "metadata": ""}
{"_id": "52fa6833ac8516d3ffe1de8347058325", "text": "function to withdraw MarketingAndCommunityOutreach funds to the owner wallet can only be called from owner wallet .", "title": "", "metadata": ""}
{"_id": "8d848fac7316a8642a6aca7a4aff94a0", "text": "allows execution only when conversions aren't disabled .", "title": "", "metadata": ""}
{"_id": "88a8766f7f114cec44ce891c8ffb520f", "text": "Burns a all amount of tokens of address .", "title": "", "metadata": ""}
{"_id": "9bf01d51c75d169923af442551d52b3a", "text": "true if investors are sending more than minimum contribution .", "title": "", "metadata": ""}
{"_id": "857a9a598e100713adeab8a71292aea2", "text": "Investors can claim refund after finalisation .", "title": "", "metadata": ""}
{"_id": "18e7752f4ac5c2fbb6b826e53d76a0bf", "text": "Increase the amount of rooms offered , only called by owner .", "title": "", "metadata": ""}
{"_id": "d995cbb0113707e0ccad6eb675e231e1", "text": "Increases a spender's approval amount .", "title": "", "metadata": ""}
{"_id": "bfd97a4001afa6e13107371d0ef175b9", "text": "Modified allowing execution only if the crowdfunding is currently running .", "title": "", "metadata": ""}
{"_id": "409b70befeae157c0f3e1005fa6a587f", "text": "Transfers the contract owner to a new address .", "title": "", "metadata": ""}
{"_id": "7f4c56f2bc2b379289ece189360d81ab", "text": "converts the token to any other token in the standard network by following a predefined conversion path note that when converting from an ERC20 token ( as opposed to a standard token ) , allowance must be set beforehand .", "title": "", "metadata": ""}
{"_id": "b23fdef5c58d0cbcdf4733bc3961a373", "text": "Determines whether a value is equal to or less than another .", "title": "", "metadata": ""}
{"_id": "1edc219eff176c410580ba103cdfc4b5", "text": "Validate a provided order , hash , and signature .", "title": "", "metadata": ""}
{"_id": "d9920418654c473296dd1f43a74af7ca", "text": "Mint the specific amount tokens .", "title": "", "metadata": ""}
{"_id": "e1aa1676369b4d012c9044edd58de562", "text": "Checks if the given address currently has a valid subscription .", "title": "", "metadata": ""}
{"_id": "72df5f4ac35ce9bb52063476ca1ee639", "text": "The address of the sibling contract that is used to implement the sooper-sekret genetic combination algorithm .", "title": "", "metadata": ""}
{"_id": "634532195a2f84845cee0aa5e943eb64", "text": "no further ether will be accepted ( fe match is now live ) .", "title": "", "metadata": ""}
{"_id": "e2b0a9d26e3e6a24b6ff26913fffce28", "text": "Before calling this function , you must have given the Airdrop Central an allowance of the tokens to distribute .", "title": "", "metadata": ""}
{"_id": "df20ab514d653e3bff51309545da117d", "text": "Function to stop retrieving tokens .", "title": "", "metadata": ""}
{"_id": "4324a36bd0590a237b1babad97827673", "text": "Convert your token back to eth .", "title": "", "metadata": ""}
{"_id": "7b79c7540dfaceb16844153ff837b924", "text": "Allows the owner to set the saleperiod .", "title": "", "metadata": ""}
{"_id": "da94fc0be7eb7f839ab4ea0502a88b8c", "text": "For operators .", "title": "", "metadata": ""}
{"_id": "74e0591296572561b31022cabc906b6b", "text": "Token metadata .", "title": "", "metadata": ""}
{"_id": "2309f57dc335b8e8cbd5e848a9ec459d", "text": "performs only allowed state transitions .", "title": "", "metadata": ""}
{"_id": "1d3968af8e44336baa908023dcb0f985", "text": "tokenId , x , y , sizeA , sizeB , price , inner , outer .", "title": "", "metadata": ""}
{"_id": "5a7eb47c527f5f013d1b854c0c2ea49b", "text": "Ensure sender is owner .", "title": "", "metadata": ""}
{"_id": "e92a351ac7481b2a2b8a397c947e7b26", "text": "Reset team token states .", "title": "", "metadata": ""}
{"_id": "ccd49c3a4a1314c0443c647c25fba16d", "text": "the amount which spender is still allowed to withdraw from owner .", "title": "", "metadata": ""}
{"_id": "44c170eceb3681187b20e04cab4e8bc0", "text": "Allows contributor to collect all token alloted for all period after preiod deadline .", "title": "", "metadata": ""}
{"_id": "d00a10c9b26930235991cb4f4fe69bb8", "text": "Allow the owner to enable or disable the token sale at any time .", "title": "", "metadata": ""}
{"_id": "98f77154d4c12d8e9bf2a6cd383d7a4f", "text": "TokenFund emission function .", "title": "", "metadata": ""}
{"_id": "397ffbb5c54ab4c757532aae1fea9ef1", "text": "Does trade , places order .", "title": "", "metadata": ""}
{"_id": "67d3888e5eac40914da4aa9c4e889953", "text": "This function allows the contract owner to adjust the markup value .", "title": "", "metadata": ""}
{"_id": "9203d2593a254424084fd0b5d467b4ef", "text": "Setter for governor .", "title": "", "metadata": ""}
{"_id": "5bf090f4ea5879c7dbf3fa780042868d", "text": "returns maximum lockable token amount allowed by LTD params .", "title": "", "metadata": ""}
{"_id": "70f968651beeadf0c7bf3a49f1829c3f", "text": "ensures that we didn't reach the ether cap .", "title": "", "metadata": ""}
{"_id": "b2e9c7c173b5cb100cff3bb13f247de7", "text": "Allow anytime withdrawals .", "title": "", "metadata": ""}
{"_id": "2da70a727c04fc4e1219c347cfb392a5", "text": "convert old string representation of robot into 4 new ERC721 parts .", "title": "", "metadata": ""}
{"_id": "05299fed57ab035066c09a409ebee032", "text": "Claim token for msg . sender .", "title": "", "metadata": ""}
{"_id": "65bf8e57c6d6336ff8450d4e8fea859d", "text": "Check if sender provided enough payment for verification .", "title": "", "metadata": ""}
{"_id": "975788e7b728f38b8915b3c094533081", "text": "Adding new voter's proposal .", "title": "", "metadata": ""}
{"_id": "332f16d653b1db521e27d7c88b8203c8", "text": "Connect to Founder contract so user can pay in FCF .", "title": "", "metadata": ""}
{"_id": "3061d4887221e72b857e8f91a6e45c22", "text": "Transfer token for a specified address with pause feature for administrator .", "title": "", "metadata": ""}
{"_id": "5f2cd7812b8c43430ee04d589de9cd2a", "text": "Used to defined the winner of the Tournament 1 : The winning team is updated 2 : All amount invested are gathered in globalBet 3 : All balances of the winning team updated proportionally to the amount invested .", "title": "", "metadata": ""}
{"_id": "896a0a277329e7f0b25e12f7a2b9841a", "text": "Returns the total number of documents on the blockchain written by the passed user .", "title": "", "metadata": ""}
{"_id": "b77d70660c2c44dc8e784876b89293bc", "text": "Accept payment and transfer to owner account .", "title": "", "metadata": ""}
{"_id": "3b4059d197f3c672aa77981a0fb89542", "text": "Prviate utilities : .", "title": "", "metadata": ""}
{"_id": "0a9f3e5772dc1bcaad15488953868a48", "text": "Function to retrieve and transfer back external tokens .", "title": "", "metadata": ""}
{"_id": "6c6c42721bc5e692c9ccac4017dd6343", "text": "destroy this wallet and send all ether to sender .", "title": "", "metadata": ""}
{"_id": "77ecd1754f29484bfac4388f7def952f", "text": "Add a new address to the funders .", "title": "", "metadata": ""}
{"_id": "14c21f2a714b1271104e98feb2f24a83", "text": "Account address of the first token holder .", "title": "", "metadata": ""}
{"_id": "e8a623c55d19713d58e682d6db3f7665", "text": "called by the owner to pause , triggers stopped state .", "title": "", "metadata": ""}
{"_id": "45e51bdfbd68d8995435d993e9b0d3b9", "text": "Burn SHIT from Users .", "title": "", "metadata": ""}
{"_id": "1429634c9fbc031a8bcfa3fda420345e", "text": "true if investors can mint at the moment .", "title": "", "metadata": ""}
{"_id": "cc60279f1d368190b620b303ef7d261f", "text": "Function to burn tokens .", "title": "", "metadata": ""}
{"_id": "9d1edcb6361ac53c528c2ab26d2c1740", "text": "Dereference Fund and shut it down .", "title": "", "metadata": ""}
{"_id": "b6ef95fda397844d9dfb5893c167c3ce", "text": "Registers a new contribution , sets their share .", "title": "", "metadata": ""}
{"_id": "ee281648218c69c47518e3d56428ee51", "text": "allows the owner to update the quick changer contract address .", "title": "", "metadata": ""}
{"_id": "1ec24c8ff2d7942774757fbc347482f1", "text": "Finalizes sale and distributes Artcoin to purchasers and releases payments .", "title": "", "metadata": ""}
{"_id": "e0c0d8689474710d3a6a8b32d56386dd", "text": "Checks whether an address is whitelisted in the competition contract and competition is active .", "title": "", "metadata": ""}
{"_id": "6bda1e92129c242473f0ef677803f9a5", "text": "remove a minter role from an address .", "title": "", "metadata": ""}
{"_id": "0b3e98459b4988138d812bd51fa60b60", "text": "Generates newly minted ACO tokens and sends them to a given address .", "title": "", "metadata": ""}
{"_id": "484328c06a6afdcce21141bd36e8ab64", "text": "block tokens of an voter .", "title": "", "metadata": ""}
{"_id": "58c70fada626933b09eb21bcc91021a6", "text": "Returns the Total Number of BTI Tokens .", "title": "", "metadata": ""}
{"_id": "98ad5fb5430c58c3116510a0b18044c7", "text": "if the address is not valid and the institution name if the address is valid .", "title": "", "metadata": ""}
{"_id": "e4d13b4919347577b1c00fc70a888370", "text": "Set explosive power of phoenix .", "title": "", "metadata": ""}
{"_id": "99b64ddd9d0a18daa2c70652ba2326bb", "text": "Is this addres in the whitelist ? .", "title": "", "metadata": ""}
{"_id": "86e50e9e99af929464b31553d2ba1a41", "text": "allows transferring the contract ownership the new owner still needs to accept the transfer can only be called by the contract owner .", "title": "", "metadata": ""}
{"_id": "9c3323aa38911c7584e68d473861f561", "text": "update the addressLUT list of addresses by checking if the address is in the list already , and if not , add the address to the list .", "title": "", "metadata": ""}
{"_id": "49cf20ac1fbaf9347fe404d74faf2c02", "text": "after a day , admin finalizes the burn bounds change .", "title": "", "metadata": ""}
{"_id": "7b962160d5424dd16649451d442dae56", "text": "worker list management .", "title": "", "metadata": ""}
{"_id": "8331e7993a9e127497d9edb48af8bd7f", "text": "Bulk mint tokens ( different amounts ) .", "title": "", "metadata": ""}
{"_id": "9397f209d8ec9ef0f6731aa0db9af561", "text": "Checks whether _beneficiary in whitelisted for the Presale And sale .", "title": "", "metadata": ""}
{"_id": "b8e5a80aa1c84956fb405d62cd432a69", "text": "An internal method that update a new ship .", "title": "", "metadata": ""}
{"_id": "75f361266b691e7a8a389f84fe76176b", "text": "Cancels active investment and redemption requests .", "title": "", "metadata": ""}
{"_id": "da0118e9117344df4917b33f15a2f937", "text": "update price .", "title": "", "metadata": ""}
{"_id": "399c0028d5f308597909dba176d236c2", "text": "Distribute presold tokens and bonus tokens to investors .", "title": "", "metadata": ""}
{"_id": "a84d9eae8a27365be0f3c5ef2aa68bbc", "text": "Claim a new hero with empty genes .", "title": "", "metadata": ""}
{"_id": "c0e92be77b56262d8ae257f24df8aab7", "text": "Remove bidder address from whitelist .", "title": "", "metadata": ""}
{"_id": "68c98bc9aa9a33b276e6fe483e0e1010", "text": "Token id must be in range .", "title": "", "metadata": ""}
{"_id": "886251a8c4c5c3e8ab977b929ec0f380", "text": "Check the amount of tokens the owner has allowed to a spender .", "title": "", "metadata": ""}
{"_id": "41b43bece2edba292903adb79781f771", "text": "Increase the tokens of an specified address increasing totalSupply .", "title": "", "metadata": ""}
{"_id": "9bfada0563a848fac61e43badd781b64", "text": "bool Returns true if revocation was successful .", "title": "", "metadata": ""}
{"_id": "76c7fd8c137b374de0c6173689907723", "text": "This sets the token agent to the contract , allowing the contract to reclaim and burn tokens if necessary .", "title": "", "metadata": ""}
{"_id": "3253788c6da049ea8f18acebbc518a6b", "text": "Assigns ownership of a specific Card to an address .", "title": "", "metadata": ""}
{"_id": "8312cf978ced26b7cb7402bddfc5d4c4", "text": "Contructor to the vending Machine .", "title": "", "metadata": ""}
{"_id": "69963b60beda10b42e3654ffffee2f33", "text": "Transfer team tokens to target address .", "title": "", "metadata": ""}
{"_id": "7dd7785903d83a8969f5e12ee035bf05", "text": "To resume token transfer .", "title": "", "metadata": ""}
{"_id": "b62222c57a059ee49d577c125b1deb45", "text": "Throws if called by other account than broker or client .", "title": "", "metadata": ""}
{"_id": "60acbd23a63c491b1ed7aec84ad55a49", "text": "Internal function .", "title": "", "metadata": ""}
{"_id": "830e187d16482d6a218f320020ee8bd3", "text": "Calls transfer item .", "title": "", "metadata": ""}
{"_id": "e75bea11d44c939f09709f443893ffb2", "text": "verifies that the ether cap is valid based on the key provided .", "title": "", "metadata": ""}
{"_id": "ae9998fe64dbe6b8ef08d14f4367573b", "text": "Return information about a module .", "title": "", "metadata": ""}
{"_id": "bf8a20f404df2fbf92f6187188e6a2b0", "text": "you can donate to me .", "title": "", "metadata": ""}
{"_id": "f3748f64b99be1cff9a52b9a71e8f6b5", "text": "Get profit for specified token holder .", "title": "", "metadata": ""}
{"_id": "87730b7aa1e2e6de7d8954013f4260d5", "text": "return true if 'address' is an icoAgent .", "title": "", "metadata": ""}
{"_id": "47db8f1d7a4c447f571ff6100bdd51f0", "text": "calculate the fee for quick withdrawal .", "title": "", "metadata": ""}
{"_id": "b191a75ee59ff5e1c062cac536f064ec", "text": "internal : token purchase function .", "title": "", "metadata": ""}
{"_id": "bc708b4f64181d613d28a2191a8198a0", "text": "move to next round by overwriting soldTokens value , unsold tokens will be burned ; .", "title": "", "metadata": ""}
{"_id": "06f626bf6c8bd22909cbebd0050b583a", "text": "This is to add the token sale platform ownership to send tokens .", "title": "", "metadata": ""}
{"_id": "4dcacfcb284818a2735dd2e36a2c4bec", "text": "Add Identities to already existing Thing .", "title": "", "metadata": ""}
{"_id": "13525394059124dd61ec3b0a3a13b5ef", "text": "Guarantees that the msg . sender .", "title": "", "metadata": ""}
{"_id": "fb4e48178a89482d88bb02d32c19a71f", "text": "Executes active investment and redemption requests , in a way that minimises information advantages of investor .", "title": "", "metadata": ""}
{"_id": "539f5ba769692573a82980cfc49cb58b", "text": "Calculate how many BOV are rewarded per approved steak pic .", "title": "", "metadata": ""}
{"_id": "8b99c36427ddf1b99d6abdaf804e4333", "text": "Do the transfer if the requirements are met .", "title": "", "metadata": ""}
{"_id": "ac4105ce6144d25ca9f9e0ae50ba1a0f", "text": "member function to mint tokens to a beneficiary .", "title": "", "metadata": ""}
{"_id": "c27a43dfdf27845b229eef7be7ad7077", "text": "function to withdraw a sale advertisement that was put earlier .", "title": "", "metadata": ""}
{"_id": "b458fe9299ad3aa299992f06a997b00a", "text": "Owner can Set Multisig wallet .", "title": "", "metadata": ""}
{"_id": "2734993634b007e5a74185ca19eec8e5", "text": "Send a specified amount of tokens from sender address to '_recipient' .", "title": "", "metadata": ""}
{"_id": "01c6a400f2ba601f214bde67b6950de2", "text": "help debug mining software ( even though challenge_digest isn't used , this function is constant and helps troubleshooting mining issues ) .", "title": "", "metadata": ""}
{"_id": "6199a69dd1c39c2129d75232386e5451", "text": "Tokens for team will be frozen for a period of 6 months after end ICO .", "title": "", "metadata": ""}
{"_id": "a11efb10899592fa19c44677eccf299e", "text": "checks if the goal has been reached .", "title": "", "metadata": ""}
{"_id": "c00b007f1fea68da32133a183782217e", "text": "For creating color .", "title": "", "metadata": ""}
{"_id": "e6df15705b0cbb2c315e7c5a4ea081aa", "text": "sets global default composition fee for all new tokens .", "title": "", "metadata": ""}
{"_id": "e3a5178f28fa214d8c0f1dffa1a8177f", "text": "Update or Insert a data element represented by the unique identifier id into the index .", "title": "", "metadata": ""}
{"_id": "fea6f36afbfd538ac4f84f633f551805", "text": "list global audit documents from a specific document .", "title": "", "metadata": ""}
{"_id": "298482462b904985eab28fd513d60d70", "text": "Allows a token holder to transfer tokens to another address .", "title": "", "metadata": ""}
{"_id": "df16897b8ad71d024d3460824f204682", "text": "Allow the owner to withdraw STAKE tokens .", "title": "", "metadata": ""}
{"_id": "ca0fd36faa39040687d245716c18d743", "text": "Returns the balance of credits at a user's address .", "title": "", "metadata": ""}
{"_id": "d520598974c64a0d3d972fbdae4a107d", "text": "Called by the ERC223 contract ( PHX ) when sending tokens to this address .", "title": "", "metadata": ""}
{"_id": "86373d09dddbc0e01e4d0bb8f14ff0e6", "text": "Refund broadcaster for a job .", "title": "", "metadata": ""}
{"_id": "86d904f47fe0e03ddefdd5ca1013c4ff", "text": "frontend function to get the referral balance of a user .", "title": "", "metadata": ""}
{"_id": "0bbab9859b4a674ba950855ca3fa943a", "text": "Initialize is called to check some configuration parameters .", "title": "", "metadata": ""}
{"_id": "da7546329427b3cf1d0e7c870778cc6a", "text": "dividend payout section when user wants to claim for dividend , they should press this function which will freeze their account temporarily after diviendend payout is complete .", "title": "", "metadata": ""}
{"_id": "3c1954aa7398696243af8625dc4ecd92", "text": "called after the crodsale ended needed to allow everyone to send their LNC around .", "title": "", "metadata": ""}
{"_id": "9f7e02193cdd673669cda62f7e9a128c", "text": "called by arbiter when winner is decided .", "title": "", "metadata": ""}
{"_id": "d82bdc11fad1cb07af9a597c039a1129", "text": "Each time this contract send Nxc this function is called .", "title": "", "metadata": ""}
{"_id": "89a60fe5d1d4875be6ac0ade638a2a40", "text": "Thaws tokens of owner until enough tokens could be spent or no more such tokens found .", "title": "", "metadata": ""}
{"_id": "513ab20fcdab504ae93918066e9819c7", "text": "Property owner delists their Property from being for sale .", "title": "", "metadata": ""}
{"_id": "82f9adb8ad0c40140c8c956e43e0b22d", "text": "Calculates how many tokens a given amount of wei can buy at a particular level of weiRaised .", "title": "", "metadata": ""}
{"_id": "3633b39aefefe5e92bf02bc4b228169a", "text": "Migrate _value of tokens to the new token contract .", "title": "", "metadata": ""}
{"_id": "ce354275238e0d09f97cc2dd29b97f97", "text": "Burn _value of tokens from your balance .", "title": "", "metadata": ""}
{"_id": "a46e5bad5faf55f3824fa7ac8cc3df8c", "text": "caculate amount of token in presale stage .", "title": "", "metadata": ""}
{"_id": "3f6050af030889a8df4388fbb2a9d007", "text": "Method to withdraw shared part of received tokens for providen address .", "title": "", "metadata": ""}
{"_id": "98a03fa46fcf563571a7f361f4e41c4e", "text": "deploys a new proxy instance sets owner of proxy to caller .", "title": "", "metadata": ""}
{"_id": "8368dd065ffd6f460326a2d59b5a7e09", "text": "Substracts two numbers , throws on overflow ( ie if subtrahend is greater than minuend ) .", "title": "", "metadata": ""}
{"_id": "58457ebc27e07136a5ab6f513bc7b692", "text": "Inserts a new node between _prev and _next .", "title": "", "metadata": ""}
{"_id": "80be80010fb9fe0b88db69d1b9101d58", "text": "End Helper Functions .", "title": "", "metadata": ""}
{"_id": "612f034b0e8ceaf7deca608802152ae7", "text": "see the current max participants .", "title": "", "metadata": ""}
{"_id": "4dee8e983a88b9ff36b41b87b054f71c", "text": "overriding BasicToken transfer .", "title": "", "metadata": ""}
{"_id": "e1d2c94103943eb54b5261458cfd319f", "text": "The contract is not designed to hold ETH .", "title": "", "metadata": ""}
{"_id": "f9fdbb70b926bf6877ec63bd310babd4", "text": "Transfer tokens / eth to the escapeHatchDestination .", "title": "", "metadata": ""}
{"_id": "1ff10b64b6ce2e34927068a661f62c2d", "text": "low level token purchase function implements the logic for the token buying .", "title": "", "metadata": ""}
{"_id": "5112333b5b6675810f8823e209ef9846", "text": "function to change the start timestamp of the ico can only be called by owner wallet .", "title": "", "metadata": ""}
{"_id": "5443981cd170c41084242de5e4584df1", "text": "Deposit ethers in the contract keeping track of the sender .", "title": "", "metadata": ""}
{"_id": "b54036646e752ffb5c6f710e5c751071", "text": "Change the relayer to a new address .", "title": "", "metadata": ""}
{"_id": "825385b78ddf3afbbcdbf2d17a073326", "text": "Creates a new gen0 Puppy with the given genes and creates an auction for it .", "title": "", "metadata": ""}
{"_id": "c52bc5de2af5ad2ecb013cab19b75fc1", "text": "Enables transfers of DNT .", "title": "", "metadata": ""}
{"_id": "9e49b8b394bf40a004e8edd9689ade2b", "text": "Get stage is required to rethen the stage we are currently in .", "title": "", "metadata": ""}
{"_id": "fd9c35c46241101174e0c6226e371080", "text": "returns current gas price .", "title": "", "metadata": ""}
{"_id": "391e36c36b4ccc8705e64544c58a8718", "text": "A getter that searches the delegationChain for the level of authority a specific delegate has within a Pledge .", "title": "", "metadata": ""}
{"_id": "8d8b0a5e1cedc995ac8dbceb63b94f5d", "text": "Allow an existing user to claim one or more previously unclaimed tiles by paying Ether .", "title": "", "metadata": ""}
{"_id": "b58863a7db162ff7970d874588b39b96", "text": "If caller is one of wallet owners Function revert his confirmation for transaction number i .", "title": "", "metadata": ""}
{"_id": "aed9cdaa20950499f8f630d88da9a6b8", "text": "Send limit tokens to company .", "title": "", "metadata": ""}
{"_id": "9b276eb8a04b0c3ada569993c5dd3a19", "text": "Calculates gross asset value of the fund .", "title": "", "metadata": ""}
{"_id": "5ec45ecc6a581069d2da49f1bd7d829f", "text": "transfer tokens to the specified address .", "title": "", "metadata": ""}
{"_id": "e3e8ea51a9a10f487eeb092ed656f2c6", "text": "private function for edit field cryptoPicture .", "title": "", "metadata": ""}
{"_id": "6effcf84bb383e9fe09f47decc350418", "text": "Transfer tokens from one address to another param _from address The address which you want to send tokens from param _to address The address which you want to transfer to param _value uint256 the amout of tokens to be transfered .", "title": "", "metadata": ""}
{"_id": "d939d7253d9ca2b99b1ddd657ba6d4fe", "text": "Check is policy exist .", "title": "", "metadata": ""}
{"_id": "c686f329e1ab9c9f45af6ac499ca6ffa", "text": "Calculates Keccak-256 hash of order with specified parameters .", "title": "", "metadata": ""}
{"_id": "29e0b5e8c2c01fe3d3480f5414536a1f", "text": "Rate of change of target price ( per second ) .", "title": "", "metadata": ""}
{"_id": "dbcfafea5987bbd8a2796ace204a3575", "text": "Get current date for web3 .", "title": "", "metadata": ""}
{"_id": "d9e3892031505027b2c2002cd75cdb95", "text": "Controller Interface transfer callback method .", "title": "", "metadata": ""}
{"_id": "5e99e8e5668c082208a248004e09db33", "text": "For a holder to initiate a withdrawal of their ether balance .", "title": "", "metadata": ""}
{"_id": "f700d1c1204ca411cea8e6f825069036", "text": "add new url to mapping .", "title": "", "metadata": ""}
{"_id": "88819ebc5b16076de5cc3e0b8ac98734", "text": "event OnCancelSellingToken ( address indexed _tokenAddress , address _seller , uint indexed _sellingAmount , uint256 indexed _price , uint _lineTime , bool _cancel ) ; .", "title": "", "metadata": ""}
{"_id": "1d9a2b942a8c8325d7299029bbc60c5c", "text": "check user's BOB balance tier .", "title": "", "metadata": ""}
{"_id": "f6996e289df42fbe4f31a0565847ae14", "text": "A separate method getHash ( ) for converting bytes to uint64 8 , which is done since the EVM cannot pass bytes between contracts .", "title": "", "metadata": ""}
{"_id": "118ec85f7b98d29e8d380b35ade3eef6", "text": "Used to buy an exclusive special personality such as graduate .", "title": "", "metadata": ""}
{"_id": "85b271adce9bba4203d2702d7c8ab5be", "text": "check if address is withdrawed .", "title": "", "metadata": ""}
{"_id": "19bc94bcff4c7af4a4e0a618f62a8d36", "text": "Converts an amount sent in Wei to the equivalent in USD .", "title": "", "metadata": ""}
{"_id": "082c7f12bc91ac5704718e6969a551a5", "text": "Transfer Eth .", "title": "", "metadata": ""}
{"_id": "5e507e1bb3992d30a2f31bef7126b99a", "text": "Reveals vote with choice and secret salt used in generating commitHash to attribute committed tokens .", "title": "", "metadata": ""}
{"_id": "371505ba58c8a02d84ea74418b4a6a63", "text": "Set default allowed lock .", "title": "", "metadata": ""}
{"_id": "311e41fbfdd551e3c52bea3016890b24", "text": "called to send tokens to contributors after ICO .", "title": "", "metadata": ""}
{"_id": "e04fd48f3132fcae6940ef17451503ad", "text": "Returns cost of requestRates function .", "title": "", "metadata": ""}
{"_id": "d16f83c3894ae1c7ad2f6b539f5a3e5c", "text": "Set new admin address .", "title": "", "metadata": ""}
{"_id": "f8f776531a00b47822bab5911b4bbca9", "text": "Creates a new release token with the given name and creates an auction for it .", "title": "", "metadata": ""}
{"_id": "9c88d643b422d42a270f318e54daa79f", "text": "Functions with this modifier check the validity of original buy price .", "title": "", "metadata": ""}
{"_id": "5581b0ff0c16e0bd36ad23425aa43d1e", "text": "Invest in a group .", "title": "", "metadata": ""}
{"_id": "4da56b83914d2eaecd602da10c80db9b", "text": "Set final period of MCT crowdsale .", "title": "", "metadata": ""}
{"_id": "26441fdf9e101597fdb8f5f43094066c", "text": "Get the number of winnings of the user .", "title": "", "metadata": ""}
{"_id": "dd70ea5ae324a87af82081020e40177b", "text": "Withdraw funds from the contract .", "title": "", "metadata": ""}
{"_id": "0241dcafd4c18d6d83a09625652a54ef", "text": "Extend parent behavior adding pricing tiers .", "title": "", "metadata": ""}
{"_id": "e3d4a4dad04ef9ab7b0072d240b8a876", "text": "Throws if called by any account other than the owner or administrator .", "title": "", "metadata": ""}
{"_id": "dce186fecb409d4a7fcdbfe2e7624c0e", "text": "Function to change game settings ( within limits ) ( to adapt to community feedback , popularity ) .", "title": "", "metadata": ""}
{"_id": "f6a8adad149c07f79d8eb5c896773a4c", "text": "If crowdsale is unsuccessful , participants can claim refunds .", "title": "", "metadata": ""}
{"_id": "89b38e6db1fc5e75902cdfa052cfaaa8", "text": "calculates unmasked earnings ( just calculates , does not update mask ) .", "title": "", "metadata": ""}
{"_id": "5930b409be1abc4f5f0216e89dfba3d5", "text": "Burns all tokens of the eligible burner .", "title": "", "metadata": ""}
{"_id": "1c060b4d3c62a669463d3d80328f046b", "text": "Allows to transfer the sectors at given coordinates to a new owner .", "title": "", "metadata": ""}
{"_id": "ea1d2ecd176d89628cdab4573e247b2f", "text": "function to release a Vanity URL by Owner .", "title": "", "metadata": ""}
{"_id": "6b8e95cd300343d7b6cd55ccc7a4c4a8", "text": "transfer Gift for new owner ( _to ) which is approved .", "title": "", "metadata": ""}
{"_id": "5ac79a86475125ce8127ada023d6965e", "text": "for website .", "title": "", "metadata": ""}
{"_id": "689541fc903ea0f94ba3c589097b5a92", "text": "Re-enable token circulation - splitProfits internal .", "title": "", "metadata": ""}
{"_id": "ae8421e2566ec71cd399378082ce540c", "text": "Standar function to kill ICO contract and return ETHs to owner .", "title": "", "metadata": ""}
{"_id": "072f3367a7973c3f5a1e50e2f10dd091", "text": "The balance transfer to project owners .", "title": "", "metadata": ""}
{"_id": "e1cf8bb34ea0896a2eed243a04608eef", "text": "_price The current price of token .", "title": "", "metadata": ""}
{"_id": "f6672153fd914348404fdd5bf3638d27", "text": "Deposit ether on the client's account .", "title": "", "metadata": ""}
{"_id": "86225ef0a8983032eacb7272f672399c", "text": "Set ICO contract address to supply tokens .", "title": "", "metadata": ""}
{"_id": "4120d027dc8fca7fb4a39db8801ae96f", "text": "Release all the bets back to the betters if , for any reason , payouts cannot be completed .", "title": "", "metadata": ""}
{"_id": "6fcb34e121d588adaec090f944e4ad5f", "text": "Assigns ownership of a specific Villain to an address .", "title": "", "metadata": ""}
{"_id": "08797f88e9ae93df046d98e276a3562d", "text": "activates the contract in * Live * mode which sets the searchSeed and enables rescuing .", "title": "", "metadata": ""}
{"_id": "ef08cfc87693bac59d808b31350bac0f", "text": "doPayment ( ) is an internal function that sends the ether this contract receives to the vault and creates tokens in the address of the _owner as long as the Campaign is still accepting funds .", "title": "", "metadata": ""}
{"_id": "e80642d4e84e9e8a03f5bfcc4b03589f", "text": "for data tracking lets make a function to check this contracts balance .", "title": "", "metadata": ""}
{"_id": "d9553cc8426e135a89b7f3213fef931f", "text": "buy dai price , will be more than normal conversion , _minReturn should be 1 / ( Dai / Eth price ) * 1 . 05 .", "title": "", "metadata": ""}
{"_id": "8f797bea86a92ddf7656b2953567750a", "text": "Gets redemption fee value .", "title": "", "metadata": ""}
{"_id": "c0aeb3c4c23ccbcd70d887bb365dc515", "text": "The seed is computed from the block hash and the sender address .", "title": "", "metadata": ""}
{"_id": "e7b4d12b4ead0cab52bbaf151468adb7", "text": "Hold team / founders tokens for defined time .", "title": "", "metadata": ""}
{"_id": "e543a1a1b580679e5c09c6f4e928d75f", "text": "creates more payment channels , up to the limit but not exceeding gas stipend .", "title": "", "metadata": ""}
{"_id": "de92426342473e8d77f3160eab9a47f6", "text": "for when I get bored paying bonus ether : .", "title": "", "metadata": ""}
{"_id": "8979fe0682db525aba369dfb3b2ba4a5", "text": "Get the address of an app instance or base implementation .", "title": "", "metadata": ""}
{"_id": "f7b1f739a89fb4c9064c2078847a81db", "text": "Register purchase with given payment id .", "title": "", "metadata": ""}
{"_id": "08a62a132c431a5108e882a6cabc7eae", "text": "Sells all tokens of a user .", "title": "", "metadata": ""}
{"_id": "cfa39e471de4da56466da4df6ccf599c", "text": "Calibrate game state and take tokens .", "title": "", "metadata": ""}
{"_id": "13fb7d15f2c0c1904b79deeb3cccdd5d", "text": "Function to stop transfering tokens .", "title": "", "metadata": ""}
{"_id": "60f2c4a4cc9ee54b6a63b7f3dfdc66af", "text": "forceNSFW allows the owner to override the NSFW status for a specific ad unit .", "title": "", "metadata": ""}
{"_id": "453c2812efbe64435e511dbfdd2cf467", "text": "Allow the owner to cancel a bet when it's in progress .", "title": "", "metadata": ""}
{"_id": "2ac7477c55dd25d775b15fe8165e3da3", "text": "Modifier to check purchase is valid .", "title": "", "metadata": ""}
{"_id": "1f67bf9c7da3371f319a7a31f87d39b8", "text": "Returns difference if no overflow occurred .", "title": "", "metadata": ""}
{"_id": "b794ba14fc14dd3a0133a000d80197c2", "text": "Computes the payment for the token , which is the sale price of the token minus the house's cut .", "title": "", "metadata": ""}
{"_id": "c9199c9922325a6f6602b60ddee10b0f", "text": "Public methods if crowdsale is unsuccessful or blocked , investors can claim refunds here .", "title": "", "metadata": ""}
{"_id": "60dfaab0bce86ec5e27ced93f5211d5c", "text": "Get name of this token .", "title": "", "metadata": ""}
{"_id": "38dfe392cf5d1f2ffc9c5c2c3e2e676e", "text": "Sets a group of users' maximum contribution .", "title": "", "metadata": ""}
{"_id": "0130e8b05605f1c595cc68ce4ce20635", "text": "called by the owner to make additional emission .", "title": "", "metadata": ""}
{"_id": "777f0d95fa7b852161bce7971741cc7c", "text": "Start selling tokens .", "title": "", "metadata": ""}
{"_id": "64cf44df5ccb4dc33ffddcf115ce3d93", "text": "approve all an owner's pixels to be managed by an address .", "title": "", "metadata": ""}
{"_id": "fe1e69f014311981dfa5ad3532191771", "text": "0x0000000000000000000000000000000000000000 if the name is not valid and the institution Ethereum Address if the name is valid .", "title": "", "metadata": ""}
{"_id": "18ef417fe2b7dc6ac3a23ad386442b44", "text": "Gets the MLB player Id from the player attributes .", "title": "", "metadata": ""}
{"_id": "cdc281de0352f63dd04d0fc4bc224f63", "text": "Limit withdrawals to the contract creator .", "title": "", "metadata": ""}
{"_id": "5d94782e60aecfbf3eb5db5e94ca1393", "text": "to get the time bonus amount given the token amount to be collected from contribution .", "title": "", "metadata": ""}
{"_id": "f491cf6aef58ca3142d89c4d95befd26", "text": "Deposit ethers to EtherDelta .", "title": "", "metadata": ""}
{"_id": "95e8415d37990740649f8cf3ec3af19b", "text": "Mint RAcoin tokens and approve the passed address to spend the minted amount of tokens .", "title": "", "metadata": ""}
{"_id": "1a296ca5c77e111580ee795c5b6c81fc", "text": "Dev should initially seed the game before start .", "title": "", "metadata": ""}
{"_id": "fabfa3734cf74e7bb052821159b251c2", "text": "Transfers the balance of the auction contract to this contract by owner or admin .", "title": "", "metadata": ""}
{"_id": "59f78f55dd8db703af74ed8ab46c3e64", "text": "get the amount of tokens from a particular user .", "title": "", "metadata": ""}
{"_id": "ffa25cd41c4715184949ea406eb418f2", "text": "Allow the creator of the game to send balance .", "title": "", "metadata": ""}
{"_id": "bf4227fb8e8dffca0c1238fae3e5081b", "text": "after the ico has run its course , the withdraw account can drain funds bit-by - bit as needed .", "title": "", "metadata": ""}
{"_id": "826a7a283bde3560e0a552addd33787e", "text": "Burn token , only owner is allowed .", "title": "", "metadata": ""}
{"_id": "2b74f8db0abbb00048f7021556493749", "text": "The caller is responsible to confirm that _to is capable of receiving NFTs or else they maybe be permanently lost .", "title": "", "metadata": ""}
{"_id": "e6f31850ab1eb01a265627df43f4acfe", "text": "Purchase tokens for the amount of ether sent to this contract for custom address .", "title": "", "metadata": ""}
{"_id": "889531530ac6e92cfc7429207d4f782b", "text": "Enables to transfer ownership .", "title": "", "metadata": ""}
{"_id": "980a9112353e1df4f6d1139c7e407c99", "text": "Return product to market .", "title": "", "metadata": ""}
{"_id": "331f55913cbf17f60b4b31153a60af24", "text": "It divides ( ETH / USD rate ) / ( PHI / USD rate ) , use the custom function getEthPhiRate ( false ) if you want a more accurate rate .", "title": "", "metadata": ""}
{"_id": "940af56e700183426ce239ff67106467", "text": "Sends a special taster package to recipient - Contract supply of tokens must have enough balance .", "title": "", "metadata": ""}
{"_id": "0cfec0a06a5a369365831d69f2d9bedd", "text": "Contract payout hald .", "title": "", "metadata": ""}
{"_id": "ebd33df84dd28a02593164527b35cc28", "text": "mint new token for given account in crowdsale stage .", "title": "", "metadata": ""}
{"_id": "f4f53877f2365181ec0fa039ff47b247", "text": "Provides a registered oracle's address when given the oracle name .", "title": "", "metadata": ""}
{"_id": "54171b95fd64ca6bcbad3fec84713d74", "text": "Sell function that takes tokens and converts them into Ether .", "title": "", "metadata": ""}
{"_id": "8c0ff05ba6bffac3edf55db64ecef0fd", "text": "Set the SIFT contract address as a one-time operation .", "title": "", "metadata": ""}
{"_id": "e4924610129aa8b7789330e586612db1", "text": "create and begin new auction .", "title": "", "metadata": ""}
{"_id": "bbb56df4ed577508dd3b41b909ed5984", "text": "check on min amount for the deal .", "title": "", "metadata": ""}
{"_id": "9c77e8ea58f3c69930deb8139366d889", "text": "Batch lock amount with array .", "title": "", "metadata": ""}
{"_id": "75945d64151b4bde2d748398cfc8b9f4", "text": "Called on ETH price update by Oraclize .", "title": "", "metadata": ""}
{"_id": "be60f42d10d8b6735c0e85c0075f101f", "text": "Change discount percentages for different phases .", "title": "", "metadata": ""}
{"_id": "591f1675c1e26036c21553d8b4380eab", "text": "Get the token purchase state for the given token .", "title": "", "metadata": ""}
{"_id": "a03458ec99c1efe99129a3a1bbb5fdc9", "text": "Gets the balance of the calling address .", "title": "", "metadata": ""}
{"_id": "0dca3878bdedb89bb63827d845b613f7", "text": "SALES_DEADLINE update .", "title": "", "metadata": ""}
{"_id": "2d6f5eb6f66b061d8e06cf4b1cc93832", "text": "Allow owner to withdraw funds .", "title": "", "metadata": ""}
{"_id": "45673606fa86b0fe30268b658bab02ad", "text": "process game .", "title": "", "metadata": ""}
{"_id": "362be753c325243aecd88944e7147387", "text": "Only for the owner of the contract .", "title": "", "metadata": ""}
{"_id": "6b2153a7e9736de250f6790e7ae0cf2c", "text": "Creates a new promo game Item with the given name , with given _price and assignes it to an address .", "title": "", "metadata": ""}
{"_id": "cc963d24f45c7404726e598b73a80e82", "text": "A getter function for retriving standardized variables from the factory contract .", "title": "", "metadata": ""}
{"_id": "8bc0947bbf438dee7d2e734bbff4469c", "text": "This function tells the balance of tokens at a particular address .", "title": "", "metadata": ""}
{"_id": "5c098eb088c27964a40216960f1f08a1", "text": "Method called by owner of contract to withdraw all tokens after timeout has reached .", "title": "", "metadata": ""}
{"_id": "fa42fe91fa73e1f09003b8a8e152cd76", "text": "Anyone can call to see if tokens have been received , and then set the flag to let withdrawls happen .", "title": "", "metadata": ""}
{"_id": "db3a609ee3bdc6052c5848c69eb3013d", "text": "Function allows the current owner to transfer control of the contract to a newOwner .", "title": "", "metadata": ""}
{"_id": "3fd1eb3e3d219680bf29d57836e568bf", "text": "Adds presale account addresses to privatesalewhitelist .", "title": "", "metadata": ""}
{"_id": "8e6ccc66bb1480b33458745515d42938", "text": "Create new instances of a PlayerToken contract and pass along msg . value .", "title": "", "metadata": ""}
{"_id": "cc85c7b8b8e53104aa5ed8128466be5f", "text": "Adds an sale to the list of open sales .", "title": "", "metadata": ""}
{"_id": "cd8829fe4016f13b4df6ce2df386b663", "text": "Mint new tokens to the specified address , only callable by the presale contract itself .", "title": "", "metadata": ""}
{"_id": "c02916672b45d4155ac6a42ece50efb5", "text": "called by owner , add addBountyAccount .", "title": "", "metadata": ""}
{"_id": "fc1141b6588180f907fd9c88e5fe44e6", "text": "byte constant internal proofType_TLSNotary 0x10 ; .", "title": "", "metadata": ""}
{"_id": "439b8113d4234162639c69b7cc57a900", "text": "Purchase the item ( s ) represented by this listing , and send the tokens to another address instead of the sender .", "title": "", "metadata": ""}
{"_id": "b1011d89f0071822cdc73a7bf8f5a47b", "text": "Set the base eth cap .", "title": "", "metadata": ""}
{"_id": "8513d2aa51079279d9cc482d71da489d", "text": "all power balances .", "title": "", "metadata": ""}
{"_id": "5e275ebd623d79308bd747d7b057bef5", "text": "Function to start the second stage of human token allocation .", "title": "", "metadata": ""}
{"_id": "2c82016710daa9e8fc57897357083b10", "text": "Sets the start timestamp for the SALE_IN_PROGRESS stage .", "title": "", "metadata": ""}
{"_id": "0e4a033a65f8ecf1d4815b67618911b3", "text": "Update additional data for whitelisted wallet .", "title": "", "metadata": ""}
{"_id": "b64fec032df76f879750d88e31814d20", "text": "Returns true if supplied address is a contract .", "title": "", "metadata": ""}
{"_id": "b0e8789aa4aa1cd15af9b2363aa1e6c2", "text": "Transfers vested tokens to beneficiary .", "title": "", "metadata": ""}
{"_id": "6d679c203ead351e31c75409678fc29b", "text": "Allows to change the address of the current Horsey contract .", "title": "", "metadata": ""}
{"_id": "104c14ff381f20f9f3a2692a7fa9f40a", "text": "Set new registrar address , only registrar allowed public_function .", "title": "", "metadata": ""}
{"_id": "f2c6807e3d79b9fbca3f3f2125b2b066", "text": "Function to extract mistakenly sent ERC20 tokens sent to Crowdsale contract .", "title": "", "metadata": ""}
{"_id": "df9cefc625431e135d6ae77a473a1714", "text": "update release amount for single day according to dividend rule in https : / / coincoolotc . com .", "title": "", "metadata": ""}
{"_id": "88c6b6380279800ba0be1a413f8f3d7c", "text": "Transfer tokens from the caller to a new holder : the Used By Smart Contracts edition .", "title": "", "metadata": ""}
{"_id": "3057f1870d6f2a30bae7e68c80c5884f", "text": "Post image data to the blockchain and log completion .", "title": "", "metadata": ""}
{"_id": "f3d3a87c79d2055f8b2d413aab93a167", "text": "function called by the ICO contract to transform the tokens into ETCH tokens .", "title": "", "metadata": ""}
{"_id": "3ec4591261727e01f0ec1ab86b6f6ec8", "text": "Function called by Hydro API to check if the partner has validated .", "title": "", "metadata": ""}
{"_id": "b436a821a59cb9aa388c8440732cc327", "text": "cap is checked in buyTokens function .", "title": "", "metadata": ""}
{"_id": "d2c7dd4b37f61db09d7e00d75cc8a73f", "text": "Set Service Provider fee - - only Contract Owner can do this , affects Service Provider settleSeller .", "title": "", "metadata": ""}
{"_id": "5b13dbf3d4a9c5cdc85b759e9acaa408", "text": "Loads the token balance of all the accounts .", "title": "", "metadata": ""}
{"_id": "8bb74c100a6aa07353e9811f532b4e95", "text": "Returns the ether value of USD at the set USD / ETH rate .", "title": "", "metadata": ""}
{"_id": "23ecfbeead2c724fac23982d38cfe140", "text": "Get details of the latest monarch ( even if they are dead ) .", "title": "", "metadata": ""}
{"_id": "bd5b19b97f19cec8f554a560aefabb38", "text": "The death of a great man demands the birth of a great son .", "title": "", "metadata": ""}
{"_id": "9164307edde47f63300cdd1f35fc66ca", "text": "These functions will return the details of a piece of land .", "title": "", "metadata": ""}
{"_id": "38af07badc57c014f9d0516c338ce387", "text": "functions for debug .", "title": "", "metadata": ""}
{"_id": "2a9ddaf1c24ef7dc2a37df729c349d58", "text": "get total hearts by id .", "title": "", "metadata": ""}
{"_id": "3783bd1ea92bda4c6f15f1d9e03a38d6", "text": "One does not simply walk into Mordor . .", "title": "", "metadata": ""}
{"_id": "c9ca830d2ba7aec8642ec5efacd63d5b", "text": "Can only set once .", "title": "", "metadata": ""}
{"_id": "9a88aad5afe5c23f8006e4da6af8fc4d", "text": "Contributors can make payment and receive their tokens .", "title": "", "metadata": ""}
{"_id": "22c081a6f135cca656bf73c62b0f66c0", "text": "checks if a user address has locked the needed qty to allow trading to a given contract address .", "title": "", "metadata": ""}
{"_id": "41cb43365958bb519d57acd07c9468db", "text": "Function that returns any registered EOS address from the original EOS crowdsale .", "title": "", "metadata": ""}
{"_id": "102b4bad3d93cb78bb3f8e6e4a3c3cc4", "text": "Returns the raw pool amount ( including the amount of the house cut ) .", "title": "", "metadata": ""}
{"_id": "967804d45e3267a77da2360efb2a2bc6", "text": "ecrecover from the signature parts v , r , s .", "title": "", "metadata": ""}
{"_id": "770eea4a80047f3a2513bcbea4e9b66a", "text": "Assign a role to a user globally .", "title": "", "metadata": ""}
{"_id": "600b9eb01675ccfb039389fd2fd6808e", "text": "Borrow from flash lender to execute arbitrage trade .", "title": "", "metadata": ""}
{"_id": "0d830819c6d73bfff4c87ffc809b99eb", "text": "Returns current token Owner .", "title": "", "metadata": ""}
{"_id": "0d00e19c9e760ab6ca12490795bad377", "text": "Set depositStartTime .", "title": "", "metadata": ""}
{"_id": "de10d2728fb7f2b95e2afd0629513679", "text": "can transfer a soul to a different account , but beware you have to pay Charon again ! .", "title": "", "metadata": ""}
{"_id": "98227fe8dac7f38143c4795b1bd7dd84", "text": "Allow company to unlock allocated tokens by transferring them whitelisted addresses .", "title": "", "metadata": ""}
{"_id": "ffcd46005950c6bc39bd4eb009ca0416", "text": "Retrieve the details of a battle .", "title": "", "metadata": ""}
{"_id": "a5efacf09d7f1a088eaccfd227d82d15", "text": "Calculate the amount of Tokens purchased based on the value sent and current Token price .", "title": "", "metadata": ""}
{"_id": "0657042a04665edd2be10a42194e1538", "text": "Internal function to add a deed ID to the list of a given address .", "title": "", "metadata": ""}
{"_id": "841844682474c592ebc0418233574084", "text": "can be called over and over to update the data .", "title": "", "metadata": ""}
{"_id": "6bfa686b2d1d1c1841a7a2ce933aeb0f", "text": "Transfers the balance of the sales manager contract to the CSLCollectible contract .", "title": "", "metadata": ""}
{"_id": "4075e152bb528d6d0e210ca650843782", "text": "Airdrop Batch with lock .", "title": "", "metadata": ""}
{"_id": "00a79466de2eb82060107c47f66b3150", "text": "Bonus tokens accrual .", "title": "", "metadata": ""}
{"_id": "629c48f69c1ae53097b4a78e44c65f7a", "text": "Allow the owner to set the bank address .", "title": "", "metadata": ""}
{"_id": "c0dec89f2622db7f61d2d08c5ecc10dc", "text": "generate tokens for many addresses with a single transaction .", "title": "", "metadata": ""}
{"_id": "301905b3b6dd137bf7898c3421f65553", "text": "Generates a random number from 0 to max based on the last block hash .", "title": "", "metadata": ""}
{"_id": "0d648d0bf14f220dfc1d3851a613d426", "text": "Admin function to pull all tokens if we need to - like upgrading this contract .", "title": "", "metadata": ""}
{"_id": "460e79bbdaa487d2c3e98a91922d7f86", "text": "Jackpot condition , happens when today's total bids is more than or equals to current pool * condition percent .", "title": "", "metadata": ""}
{"_id": "82ea01b50a5122cc2831a19ad864e914", "text": "Internal implementation of revealNumber ( ) .", "title": "", "metadata": ""}
{"_id": "04d5e73775a7f05c086ea8bc1595c446", "text": "Transfers tokens of unknown holders to token contract owner .", "title": "", "metadata": ""}
{"_id": "8a00ebd3db3e0cce94bb5fecce41ae60", "text": "DON'T BUY FROM EXCHANGE ! Only buy from normal account in your full control ( private key ) .", "title": "", "metadata": ""}
{"_id": "0cdc618adf8adab53e79c60edfcb76df", "text": "Remove an address from Approved List .", "title": "", "metadata": ""}
{"_id": "b84f56ceea9afa093c06b4f6ed320dba", "text": "Withdraw your funds , i . e .", "title": "", "metadata": ""}
{"_id": "e38095162267bb0409f4473a5fc5b40d", "text": "The host is able to withdraw the fund when the promotion is finished .", "title": "", "metadata": ""}
{"_id": "580f014ee65becb7474bd7a3e2e9dd59", "text": "function to change the end timestamp of the ico can only be called by owner wallet .", "title": "", "metadata": ""}
{"_id": "b220c60f452d6623355d1e37edefdd31", "text": "Allow access only when not locked .", "title": "", "metadata": ""}
{"_id": "961c529f8026f0c790896414929d8dc1", "text": "Test withdraw : new Crowdsale ( ) ; 0 . purchase ( ) ( 1000 ) ; .", "title": "", "metadata": ""}
{"_id": "3e82c4bf513afb8d963994b3004c0ef9", "text": "Return log ( x / FIXED_1 ) * FIXED_1 .", "title": "", "metadata": ""}
{"_id": "f45eda6460e180d3904d7cae6804a3b9", "text": "Override ERC20 transfer function in order to check whether the recipient account is frozen .", "title": "", "metadata": ""}
{"_id": "20df610e7d457d725781cbaa8a94bcca", "text": "How many wei can the msg . sender .", "title": "", "metadata": ""}
{"_id": "12091469ec8526ed21a8d855e5150b73", "text": "withdraw from the Balance array .", "title": "", "metadata": ""}
{"_id": "cb2e05637dcd14ec93205011cb154f59", "text": "tell the receivers that the sale has begun .", "title": "", "metadata": ""}
{"_id": "da21c219d7218d8dbe7d0c8d6625e1aa", "text": "User can sell tokens back to contract .", "title": "", "metadata": ""}
{"_id": "7be210bda8394e1a6270792ad9c21aa3", "text": "_sellPresale checks CST purchases during crowdsale .", "title": "", "metadata": ""}
{"_id": "0c48e80f5ee31168d776245bf3e072ad", "text": "Put a artwork up for auction .", "title": "", "metadata": ""}
{"_id": "de12d227995d38c6dfa0026e3f2e8b7b", "text": "Internal Price Calculation - is a packed price on the buy side ? .", "title": "", "metadata": ""}
{"_id": "f5c0c7251059cd8daf27ee8b44c60f51", "text": "Bonus Period 1 - - - Bonus 0-9 SMS - 5 10-49 SMS - 10 50-99 SMS - 20 100 SMS - 30 - - - Time - - - ( 2 days 9 hours 59 minutes 59 seconds ) .", "title": "", "metadata": ""}
{"_id": "6f0a0eb77edac0ffd402b10ab2cfbe25", "text": "Modifier throws if called by any account other than the pendingGDPOracle .", "title": "", "metadata": ""}
{"_id": "3638e33b916b2c3751849d85c855e964", "text": "Add Madame BOV as a beef judge .", "title": "", "metadata": ""}
{"_id": "d25017225b3d79a4b96563c19c60d50a", "text": "Modifier ok if the transaction can buy tokens on TGE .", "title": "", "metadata": ""}
{"_id": "ab0b1d1e43eb7ff322b529a2fe1f8ce4", "text": "Function to set an allowed address .", "title": "", "metadata": ""}
{"_id": "133e0fe28a71242179d75386c08886c1", "text": "Move champ reward to pending withdrawal to his wallet .", "title": "", "metadata": ""}
{"_id": "4e339596f37466de209af8a8dae5659c", "text": "transfer the ownership to new owner .", "title": "", "metadata": ""}
{"_id": "a2ccad8ce30c162e96c3fb6bef2849c5", "text": "Service functions .", "title": "", "metadata": ""}
{"_id": "2356d39e9d45a3c11d32cc06ca0181c0", "text": "3 ) DRIVE AS FAST AS YOU CAN ( hit this function as often as you can within the next 30 mins ) .", "title": "", "metadata": ""}
{"_id": "a5c899516e2fd18ea8ec945735307648", "text": "Batching Operation : Creates a new Collectible and creates an auction for it .", "title": "", "metadata": ""}
{"_id": "afee2d615b6c7b3c26e3a9cb8e5b8f35", "text": "Perform an airdrop from the airdrop pool to multiple beneficiaries .", "title": "", "metadata": ""}
{"_id": "341d33acdaca4bdc820ea7f79572d419", "text": "Set authorized to given address - changes the authorization for presale or crowdsale .", "title": "", "metadata": ""}
{"_id": "f9168cff04570e66d254b68df0bd8ed9", "text": "Token purchase logic .", "title": "", "metadata": ""}
{"_id": "fda0102fff4134ac0cef491cce6ea058", "text": "Refund ETH in case the minimum goal was not reached during the Token Sale .", "title": "", "metadata": ""}
{"_id": "411de106c7261ae500dcf9f74cc6c51c", "text": "gives _spender allowance to spend amount from sender's balance .", "title": "", "metadata": ""}
{"_id": "90ebe8a8ebff41d44e200f5a93a3d637", "text": "Allows the owner to set an optional limit on the amount of tokens that can be purchased by a contributor .", "title": "", "metadata": ""}
{"_id": "e9a4e985c5e722c16ec7f9e03d629cd4", "text": "Get the amount of PreSale tokens left for purchase .", "title": "", "metadata": ""}
{"_id": "fb86a1454b5cec3e0f01cbbaa901069c", "text": "Compute the ProjectX bonus according to the investment period .", "title": "", "metadata": ""}
{"_id": "c55cdc6c23480ad8b951c86a57582563", "text": "An internal method that creates a new lambo and stores it .", "title": "", "metadata": ""}
{"_id": "e6fe9a3413eb1685619ff834f40afdce", "text": "Function To allow the creator to pause during the presale .", "title": "", "metadata": ""}
{"_id": "adade3d0cb85c79e6d2625731f9f47cb", "text": "function to get all animals in costume not yet approved list .", "title": "", "metadata": ""}
{"_id": "5cb83ce939409b161e33af24bfecfcbc", "text": "Refund part of ether to the investors in case of successful end of CrowdSale .", "title": "", "metadata": ""}
{"_id": "65acf1874dd27119e2ff9833c7d1eca3", "text": "Returns the time that the ICO duration will end .", "title": "", "metadata": ""}
{"_id": "fd8767a15fa4a4577b2d435f7cbe0769", "text": "function to register claim .", "title": "", "metadata": ""}
{"_id": "53c670e91eaafa78f344753c3650b9f5", "text": "sends all the value to the beneficiary .", "title": "", "metadata": ""}
{"_id": "3a238d29eadeb5b1bcabc3022fa1b020", "text": "send coins throws on any error rather then return a false flag to minimize user errors in addition to the standard checks , the function throws if transfers are disabled .", "title": "", "metadata": ""}
{"_id": "e2f654f5df2f81b06aefcb8e44783376", "text": "Overrides _preValidatePurchase function in Crowdsale .", "title": "", "metadata": ""}
{"_id": "0b79b9ab580f7d10db979255d4dee011", "text": "Minimal contribution which will be processed is 0 . 5 ETH .", "title": "", "metadata": ""}
{"_id": "281fc66d08d72f732789888a60040210", "text": "Find the owner of an NFT .", "title": "", "metadata": ""}
{"_id": "095b33521978d8f4943a264ef4fc26f4", "text": "Additional check that the game address we are sending tokens to is a contract assemble the given address bytecode .", "title": "", "metadata": ""}
{"_id": "0424062a2f9018ce1371a0d49eb6592f", "text": "ICO Smart Contract can call this function for the investor to refund .", "title": "", "metadata": ""}
{"_id": "0b132b3f3d7d46151997fe4ccc1db386", "text": "A utility function to get the minimum distance between two selections on a wheel of WHEEL_SIZE wrapping around at 0 .", "title": "", "metadata": ""}
{"_id": "44ad4a35dc2491e55618b86ef0570cc3", "text": "given a token supply , connector balance , weight and a deposit amount ( in the connector token ) , calculates the return for a given conversion ( in the main token ) .", "title": "", "metadata": ""}
{"_id": "b19b4dc1611ffe3b32929c1513cafb08", "text": "creates all tokens 180 millions this address will hold all tokens all community contrubutions coins will be taken from this address .", "title": "", "metadata": ""}
{"_id": "a86d7d538468d27cfe7875123e8ba6e1", "text": "Migration rewards decreased linearly .", "title": "", "metadata": ""}
{"_id": "5ae7572947692883e0701450a4e1fefb", "text": "Remove failed game .", "title": "", "metadata": ""}
{"_id": "61b78bde4b2f4ba6450e502a66d0932a", "text": "Retrieve the unique identifier this node represents .", "title": "", "metadata": ""}
{"_id": "beecde4d003e05b23900e07f85063ef5", "text": "Set randomizer address .", "title": "", "metadata": ""}
{"_id": "45340df0f1fd51d88787b606b791d070", "text": "Reinvest Halo3D PotPotato dividends .", "title": "", "metadata": ""}
{"_id": "dd721e85f06dfe9a0fc835ddf3089822", "text": "Extended to transfer unused funds to team team_multisig and release the token .", "title": "", "metadata": ""}
{"_id": "8905a20ed2b6acdcaae0bd4cfb75b3f5", "text": "called by the owner to unlock , returns to normal state .", "title": "", "metadata": ""}
{"_id": "e9dd3d67d750615dc66a4e432ca2deac", "text": "allow sender to transfer dividends .", "title": "", "metadata": ""}
{"_id": "2f7bdb5fbec6e292aa1af775e2acf80c", "text": "if false , token sale is available .", "title": "", "metadata": ""}
{"_id": "12d68042739a86928259d8dd7c529ca4", "text": "Creates new tokens as long as total supply does not reach limit .", "title": "", "metadata": ""}
{"_id": "84bd47ee060f9245eb6c8a7c744ee418", "text": "Locks up all changes to balances .", "title": "", "metadata": ""}
{"_id": "6373d1a56161e7521df83972e49d4885", "text": "fee is not applied to owners .", "title": "", "metadata": ""}
{"_id": "5a53db96c23ca9b6211cb961f953a267", "text": "Load early purchases from the contract keeps track of them .", "title": "", "metadata": ""}
{"_id": "032e313eba21d0fc6c912d1ded0dcd67", "text": "Transfers ownership rights to current owner to the new owner .", "title": "", "metadata": ""}
{"_id": "8361c2da5aec3a5feba7052b264117d8", "text": "Makes you have the bigger dick .", "title": "", "metadata": ""}
{"_id": "02ab3485cf1ceb234ce1b0fbce959a52", "text": "Method called to cancel specific pledge .", "title": "", "metadata": ""}
{"_id": "a80aeeb1834d7f79a0d8e352e23adb83", "text": "Compute the GamePlayercoin bonus according to the investment period .", "title": "", "metadata": ""}
{"_id": "6219d4d7916ece1c45a433776051b0b8", "text": "Checks whether contract is in a state in which contributions will be accepted .", "title": "", "metadata": ""}
{"_id": "2937a397effd72b39b2a32686c41146c", "text": "ensures that the controller is the token's owner .", "title": "", "metadata": ""}
{"_id": "49ef1109ad6ee14795ffd6957848bf90", "text": "Calculates and returns proof-of - stake reward .", "title": "", "metadata": ""}
{"_id": "2de3082e676ccbb31f846282b1449f3c", "text": "Releases 1 / 4 of team supply after 18 months .", "title": "", "metadata": ""}
{"_id": "c75a489f1df559f66a8898dcb795fe02", "text": "Proposes to transfer control of the PAIReceipt contract to a new owner .", "title": "", "metadata": ""}
{"_id": "20daf6d8bd9305977980ef4a4fa8b169", "text": "Get the player info by address .", "title": "", "metadata": ""}
{"_id": "4489b0a3ffec0d2134d37a24e38896f0", "text": "withdraw loot tokens .", "title": "", "metadata": ""}
{"_id": "ce53226177b5bca62767166b40582721", "text": "allows to anyone to release all funds without burning Neumarks and any other penalties .", "title": "", "metadata": ""}
{"_id": "5d82a93de550c235c8d661fe3b303bbf", "text": "Withdraw the amount of ethers from the contract if any .", "title": "", "metadata": ""}
{"_id": "f400b2de878d64e9fbfd57057fd440b0", "text": "Removes an account without searching for the index .", "title": "", "metadata": ""}
{"_id": "1fa4f78983597459a1ec10933f049570", "text": "Allow Multiple Transactions Array .", "title": "", "metadata": ""}
{"_id": "6ece7e2b53ff060e8f45d69b7dd761cf", "text": "Dynamically set caps .", "title": "", "metadata": ""}
{"_id": "08d5115357a17941b277ced4f9197311", "text": "Issue token based on ether received .", "title": "", "metadata": ""}
{"_id": "1b7f87fbefc37c17b7786f74e2ee46c7", "text": "Finish vote .", "title": "", "metadata": ""}
{"_id": "a6bec1e3fbd18e5bcd0375e07b7be0d6", "text": "withDraw Ether to a Safe Wallet .", "title": "", "metadata": ""}
{"_id": "a60df541d26e331205f374a108327f30", "text": "Modifier that check that msg . sender .", "title": "", "metadata": ""}
{"_id": "0595691cc271487802c66af535fd5641", "text": "getFulfillment ( ) : Returns the fulfillment at a given index .", "title": "", "metadata": ""}
{"_id": "5f34ab8900da3c3b0dffb22df94b38eb", "text": "For creating Avatars .", "title": "", "metadata": ""}
{"_id": "03efb815d86e209f860552cebec92e1c", "text": "Set Minimum Contribution .", "title": "", "metadata": ""}
{"_id": "64dc2b0ce6d3a5fd688bb3ebd95ae80d", "text": "Sets the reclaim address to current owner .", "title": "", "metadata": ""}
{"_id": "6a51d27e4ea854c68b393d3d3b7f8f00", "text": "Assures that tokens can be transfered .", "title": "", "metadata": ""}
{"_id": "9c102cdc158fadde6f848f9ddba05001", "text": "called by the owner to make the purchase preparations ( 'approve' must be called separately from 'vendorWallet' ) .", "title": "", "metadata": ""}
{"_id": "3e74562402535d3d7275055dd8b373b1", "text": "release earlyInvestor Tokens .", "title": "", "metadata": ""}
{"_id": "610d89bdd307b5010975f470cc56752f", "text": "Remove an address from the accredited list .", "title": "", "metadata": ""}
{"_id": "80803813a072f804f9428c682c3aeb88", "text": "Allows someone to send ether and obtain the token .", "title": "", "metadata": ""}
{"_id": "7ce121162b1549a99f53275464c331ce", "text": "TODO : Override this method in the derived functions , think about on-chain / off-chain communication mechanism .", "title": "", "metadata": ""}
{"_id": "aab010d5ab7ab453c7f16f399550b971", "text": "Set allowance for other address .", "title": "", "metadata": ""}
{"_id": "6e479ceb3006c3d4d3af805fb677b7e6", "text": "Safety to prevent anymore purchases / sales from occurring in the event of unforeseen issue , or if seller wishes to limit this particular sale price and start a new contract with a new price .", "title": "", "metadata": ""}
{"_id": "eca23242cec31f6fe6e90c7bb5157745", "text": "Concludes the tournament and issues the prizes , then self-destructs .", "title": "", "metadata": ""}
{"_id": "d67e54c770d4422e9f05fe2b7907e27e", "text": "Returns the vested amount for a specified user .", "title": "", "metadata": ""}
{"_id": "e072f8035225cd43ebc3d6ccdc2b0bc6", "text": "Override PullPayment withdrawPayments .", "title": "", "metadata": ""}
{"_id": "41ab42e599ccb14f9af1a1454d632b92", "text": "owner may add or remove a locker address for the contract .", "title": "", "metadata": ""}
{"_id": "5c6c98b870ce3e12028b794f26407db0", "text": "Freeze account , make transfers from this account unavailable .", "title": "", "metadata": ""}
{"_id": "392c205c30313f1a133e79ff731243d3", "text": "Check if a given address is locked .", "title": "", "metadata": ""}
{"_id": "92164fd05e446b0728eaa26566c4e1af", "text": "Allows the current owner to withdraw ether funds after ICO ended .", "title": "", "metadata": ""}
{"_id": "2059c3c643bf95d4dc2c83785447d1c0", "text": "proxy updates to main contract .", "title": "", "metadata": ""}
{"_id": "b971e921feeb86af9c1058abc15efa50", "text": "Reinvest Etheropoly Shrimp Farm dividends .", "title": "", "metadata": ""}
{"_id": "f274d336ad0d2eb2ce6a4aa10c812212", "text": "Approves _who to transfer _value tokens from msg . sender .", "title": "", "metadata": ""}
{"_id": "b4ad641519707539419063d99297def8", "text": "create a new auctions for a given pixel , only owner or authority can do this .", "title": "", "metadata": ""}
{"_id": "e3c202922140c2929be493e7a4f88f81", "text": "Fetches the details related to the Sale .", "title": "", "metadata": ""}
{"_id": "88bc143253e7166a0ad3b405f523c2b6", "text": "Balance of tokens .", "title": "", "metadata": ""}
{"_id": "cee8aa52c3666e23d703854c18f2f5c8", "text": "onlyRecipient Sends the milestone payment as specified in payData ; the recipient can only call this after the reviewTime has elapsed .", "title": "", "metadata": ""}
{"_id": "e364992b94e401fd87f20af7b12e244c", "text": "Get the customer's Tx of payment for MCW data - Tx of original MCW transfer in Ethereum network which is recorded in the Tx .", "title": "", "metadata": ""}
{"_id": "4939e34e2cecd259e47031ca0a7560f8", "text": "allows transferring the contract ownership the new owner still need to accept the transfer can only be called by the contract owner .", "title": "", "metadata": ""}
{"_id": "2d8ec3eb7f2abc209034a0d57f04356d", "text": "pushes an enrty to the head of the linked list .", "title": "", "metadata": ""}
{"_id": "7d07516ba14ba57f5cdda9cd52755e02", "text": "Changes buyback parameters .", "title": "", "metadata": ""}
{"_id": "15df059579a4bbabd3d74c2d5884c406", "text": "change sell price .", "title": "", "metadata": ""}
{"_id": "73bc244b4baa84b4ac2a19bb9e97c5d8", "text": "check if user illicit activity , freezeAccount and back to totalSupply .", "title": "", "metadata": ""}
{"_id": "3ad73568a8348294f033d848d0b23276", "text": "Transfers an NFT owned by this contract to another address .", "title": "", "metadata": ""}
{"_id": "7f8ccddac03a5e1e15c085e619446710", "text": "Wait more time without changing the price .", "title": "", "metadata": ""}
{"_id": "0f9cd8c6b06a15500f17c4d05d20014c", "text": "Pushes id onto the array , throws if too many .", "title": "", "metadata": ""}
{"_id": "0a791554a7cd9d82100466efef687aaa", "text": "returns the total quantity of active validators only 'active' ones quantity .", "title": "", "metadata": ""}
{"_id": "33ab0260c917e6b7839393139598b238", "text": "Purchases tickets to the raffle .", "title": "", "metadata": ""}
{"_id": "449680c86176664c7fe6795cfbf7c18f", "text": "To payout to an address .", "title": "", "metadata": ""}
{"_id": "186dbce654d977bf4c79151989a9d1bf", "text": "Pay the fee for the call / transaction .", "title": "", "metadata": ""}
{"_id": "abb28bf02bba62a4e4198fd6e4e5876d", "text": "Approve KYC of a user , who contributed in ETH .", "title": "", "metadata": ""}
{"_id": "c1f461a78128bb084d79f970b325cf8e", "text": "Sets bonuses for time .", "title": "", "metadata": ""}
{"_id": "288584c069990a4df6d3015294ed37d3", "text": "burn the rest keep nuc and team tokens .", "title": "", "metadata": ""}
{"_id": "a16aea68ba4997e1cc0b48f53f4d890a", "text": "This utilized compact arrays popnext function to have a rotating pop .", "title": "", "metadata": ""}
{"_id": "15d351cdf43a7bdad15ca5d80fbfe00c", "text": "Disables the ERC20 interface .", "title": "", "metadata": ""}
{"_id": "dbeab36c42f3f447e2f27c0de6a13378", "text": "ArtToujourToken Contract .", "title": "", "metadata": ""}
{"_id": "bc1d422870d96592ffb4759d6386bdac", "text": "check Ico Failed .", "title": "", "metadata": ""}
{"_id": "89b0a1a7b519fc661d5c7f2042934a22", "text": "Adds two numbers and checks for overflow before returning .", "title": "", "metadata": ""}
{"_id": "e6e5c360e4688df0bdfe5e4b8bfcd369", "text": "Success finish of PreSale .", "title": "", "metadata": ""}
{"_id": "1282e4b1d9db2849bbdc1b1daccf3154", "text": "ownership controller .", "title": "", "metadata": ""}
{"_id": "6a4b9461a0a8f604a74d93941ad2579c", "text": "Approve new owner request , can be call only by owner which don't call this new owner request before .", "title": "", "metadata": ""}
{"_id": "728008ed15f73a1aa68f726f08bcb6bb", "text": "If the user wants / needs to withdraw his funds himself , he needs to request the withdrawal first .", "title": "", "metadata": ""}
{"_id": "2987034837b89ba2ed186faf689b7b7f", "text": "Used to withdraw the balance when the round is completed .", "title": "", "metadata": ""}
{"_id": "bfbc3b8cd18068b92431405be2fa3ea9", "text": "Create a TokenVault and fill with the specified newly minted tokens .", "title": "", "metadata": ""}
{"_id": "f02f2df1be189305f20c61326573680f", "text": "Sets the Contract Donations Receiver address .", "title": "", "metadata": ""}
{"_id": "af7c7d3dc04781fdb17f08c0e0569895", "text": "Function which tells us is the revenue for given block is calculated .", "title": "", "metadata": ""}
{"_id": "d253a434f0184db267f907d0cb492a7a", "text": "change the contract address .", "title": "", "metadata": ""}
{"_id": "8239c4a1ec3a4d0f25f6af08c0e68207", "text": "Allow upgrade agent functionality kick in only if the crowdsale was success .", "title": "", "metadata": ""}
{"_id": "381b143e5096516fdef8a4625351f0e0", "text": "util functions for collect .", "title": "", "metadata": ""}
{"_id": "9c2b9041064920bbee821fd3dd3938de", "text": "distribites the contract balance amongst the creator , wthe winners , the lucky voters , the referee and the provider .", "title": "", "metadata": ""}
{"_id": "708aca6e5564afdb53aaecad074adf97", "text": "Transfer a deed owned by another address , for which the calling address has previously been granted transfer approval by the owner .", "title": "", "metadata": ""}
{"_id": "c3fc3752ac1fa1cc3afc88ce4cda554e", "text": "Define how many wonderful Kitten Coins will be issued for donators participating the selfdrop .", "title": "", "metadata": ""}
{"_id": "8b4497263e3e32881e5fbac2f7560e82", "text": "The participant will need to withdraw their funds from this contract if the presale has not achieved the minimum funding level .", "title": "", "metadata": ""}
{"_id": "e2c7b9288ab5a6fd0dd208b84d0496ac", "text": "finish collecting data .", "title": "", "metadata": ""}
{"_id": "ccccb4fb91a7a30999ba45800bced1c7", "text": "Show block number of lottery run for the bet .", "title": "", "metadata": ""}
{"_id": "ef07eac521a2ba74a9a4472f5a809cf9", "text": "Returns the amount of tokens a spender may spend on an owner's behalf .", "title": "", "metadata": ""}
{"_id": "94984ea0c976e7daf87ce2ffbb9d88af", "text": "should only be called when first setting an allowance .", "title": "", "metadata": ""}
{"_id": "4c864053badb5576e9b756a60fc0c678", "text": "Sets the multihash associated with an ENS node .", "title": "", "metadata": ""}
{"_id": "99e9243e41e01ff30f86be0c06633a40", "text": "don't allow smart contracts to play .", "title": "", "metadata": ""}
{"_id": "41558a2f280a594170c4e711a24d163d", "text": "External function to mint a new token .", "title": "", "metadata": ""}
{"_id": "e67094b5594536bc357e88ddf8e4eb7a", "text": "+ buy lc , 1eth 1000lc , 30 eth send to owner , 70 keep in contact .", "title": "", "metadata": ""}
{"_id": "70cd7eb9b08a5b27016f9204cef97d36", "text": "Invoked internally by the airdrop functions .", "title": "", "metadata": ""}
{"_id": "797c0883424903bce53b683ba0d0c89e", "text": "withdraws and sends 'amount' of ether to msg . sender .", "title": "", "metadata": ""}
{"_id": "7c369fdbb671bbe3c296b4b74b7cdfe5", "text": "Calculate amount of vested tokens .", "title": "", "metadata": ""}
{"_id": "ed6f3d2311be636008bf8ddf8c4d4f98", "text": "reward the previous owner of the block or the contract if the block is bought for the first time .", "title": "", "metadata": ""}
{"_id": "ea9ac6e2b8bf246a61141f4c4b05e85b", "text": "proxyPayment ( ) allows the caller to send ether to the BaseTokenSale and have the tokens created in an address of their choosing .", "title": "", "metadata": ""}
{"_id": "29743f8275d0cff9af67cbb7793bc702", "text": "Set new authenticated address for admin .", "title": "", "metadata": ""}
{"_id": "3a1b2fc15926965db501c6ae71a67c58", "text": "BancorContract public bancorTradingContract BancorContract ( 0x8FFF721412503C85CFfef6982F2b39339481Bca9 ) ; .", "title": "", "metadata": ""}
{"_id": "3b64ddb0a7364289b8bfebbf4b278603", "text": "Retrieve amount ether to owner .", "title": "", "metadata": ""}
{"_id": "287b92bee89867a9c2de8946692e4085", "text": "Transfers tokens from one address to another address .", "title": "", "metadata": ""}
{"_id": "4b87856507f84aae7c39bb0b30290bae", "text": "Make sender's locked balance liquid when called after lockout period .", "title": "", "metadata": ""}
{"_id": "896e2105cbf57584970ed7807f58f427", "text": "helper methods for siphoning .", "title": "", "metadata": ""}
{"_id": "5122141fcd9ca498fb35d66260227ccd", "text": "Destroys ( removes from supply ) a specific amount of tokens .", "title": "", "metadata": ""}
{"_id": "c0a280127f3b5f00897fb5f960b098f1", "text": "Decreases the allowed amount for spender from msg . sender .", "title": "", "metadata": ""}
{"_id": "56b43bff8440994957354b6404273761", "text": "Transfers tokens from your address to other .", "title": "", "metadata": ""}
{"_id": "0528138362d11bb409b28d7f59e3e6fc", "text": "purchase DGX gold using DAI .", "title": "", "metadata": ""}
{"_id": "71809d68c663cf6c7d0d630976aa8fad", "text": "Destroy tokens from account .", "title": "", "metadata": ""}
{"_id": "6af24de072f88ac0327cf007976d2d1d", "text": "Sets the flag stopMatchBetting to true .", "title": "", "metadata": ""}
{"_id": "d620657373f386360fe622afdce64476", "text": "retruns the balance of the owner address .", "title": "", "metadata": ""}
{"_id": "36d4c51364c6ebf6da5123f89a3c3421", "text": "Releasing funds .", "title": "", "metadata": ""}
{"_id": "8ad7abf66a4c69ad493334a1faa188be", "text": "Check the decimals of the token ERC-20 Standard .", "title": "", "metadata": ""}
{"_id": "163299d78173491ed71db8cea1e98bda", "text": "Delegate stake towards a specific address .", "title": "", "metadata": ""}
{"_id": "804a9aaa5006c16b58505b3826eb1157", "text": "minting and locking functionality .", "title": "", "metadata": ""}
{"_id": "1289573a9f2975e990d239ca3f1f1288", "text": "event QueryIdRetrieved ( bytes32 _queryId ) ; event QueryIdConverted ( uint _queryId ) ; event QueryIdBetValueAdded ( uint _queryId , uint _betValue ) ; event QueryIdBetPlayerAddressAdded ( uint _queryId , address _playerAddress ) ; event CallbackInitiatedWithParameters ( bytes32 _queryId , string _result , bytes _proof ) ; event ProofVerifySuccess ( bool _success ) ; event CurrentQueryIdSet ( uint _queryId ) ; event RandomNumberGenerated ( uint _randomNumber ) ; event AmountToPayoutSet ( uint _amount ) ; event PlayerLost ( bool _lost ) ; event SecondaryPayoutVariableSet ( uint _payout ) ; event PlayerAddressPriorToPayoutIs ( address _address ) ; event CurrentBetIncremented ( uint _currentBetNumber ) ; .", "title": "", "metadata": ""}
{"_id": "07b78eec03f8ae312dcfd04e611c039a", "text": "Enable or disable approval for a third party ( operator ) to manage .", "title": "", "metadata": ""}
{"_id": "b00e36aabb8e57ac99f521c52b939739", "text": "Payouts to the last 3 Torch Runners , the Day Owner Dev .", "title": "", "metadata": ""}
{"_id": "1c4bd136c1cd86ab3e745fb8d18344be", "text": "approve transfer / transferFrom request .", "title": "", "metadata": ""}
{"_id": "c4ed9800b11d1e95d84fdd0e4c57601d", "text": "Creates a new token with the given name .", "title": "", "metadata": ""}
{"_id": "6a07652a20acf835eca649814b8e30c2", "text": "investments Crowdsale closing date .", "title": "", "metadata": ""}
{"_id": "8a655f4aae73eca3e03fc25e8814ebfb", "text": "May be used by owner of contract to halt crowdsale and no longer except ether .", "title": "", "metadata": ""}
{"_id": "e59c6a2a0c567f84663c223c2fe009c1", "text": "Get a certain number of blocks in ascending order .", "title": "", "metadata": ""}
{"_id": "bb29693c943c12c6944c4a39f13ce93a", "text": "Range Game .", "title": "", "metadata": ""}
{"_id": "8335dd24becb449328f958d0d81ae626", "text": "Send split amounts to respective balances .", "title": "", "metadata": ""}
{"_id": "65daa4bd382031d7a00a1dd04e324d31", "text": "Unpause contract .", "title": "", "metadata": ""}
{"_id": "c335dc8eb62cd94c73259d0591eb0d59", "text": "Send _minedAmount to _target as a reward for mining .", "title": "", "metadata": ""}
{"_id": "f3a6af1d68a85cb67190293c14ff5e0c", "text": "update price fci daily .", "title": "", "metadata": ""}
{"_id": "60af003802d4b7cc8e28e3c4436dc41e", "text": "function that calculates bonus .", "title": "", "metadata": ""}
{"_id": "184f615d8ab55ee9efa9e5ef077752e6", "text": "Modifier to check if value send fulfills player stake requirements .", "title": "", "metadata": ""}
{"_id": "d60861871f9de085e40f5d43390425d3", "text": "Trading and buying balances flow .", "title": "", "metadata": ""}
{"_id": "22f80500af2f9467f47c751f1384d985", "text": "Update capital , i . e .", "title": "", "metadata": ""}
{"_id": "b646b3dcc5faa5bb4667cfb4d69be58b", "text": "Allow players to withdraw their money in case the lottery fails .", "title": "", "metadata": ""}
{"_id": "14684b1777e92ff7161771f24189ff10", "text": "This function sends ETHs to the list of address SALARIES , MARKETINGandBUSINESS , RESEARCHandDEVELOPMENT , RESERVE , FACTORIES , PLANEQUIPMENT , PRODUCTION .", "title": "", "metadata": ""}
{"_id": "0357e56f105b2f97018ad8d0e0943f9d", "text": "For creating Color .", "title": "", "metadata": ""}
{"_id": "40fd71ffe08691e04e75611568f521ab", "text": "Participate ICO .", "title": "", "metadata": ""}
{"_id": "2a35f94700a5bafeb282decc4daed6db", "text": "Get the current balance of tokens .", "title": "", "metadata": ""}
{"_id": "24ac467b683991f672623915100fe26e", "text": "match token orders with admins involved , only admin .", "title": "", "metadata": ""}
{"_id": "2f04056d247c979e0ce3a91d6b5e502a", "text": "Assigns ownership of a specific Puppy to an address .", "title": "", "metadata": ""}
{"_id": "1d5251e2fe14842a0763944e34d35cd5", "text": "withdrawRefund performs fund transfer to the client's account .", "title": "", "metadata": ""}
{"_id": "5f8b74be1514392e45484554e1f1bfc6", "text": "Approve the spender ammount set allowance for other address allows _spender to spend no more than _value tokens on your behalf .", "title": "", "metadata": ""}
{"_id": "43ca0e201497babfcdb850062f60ce33", "text": "Allows admin to change minBet , maxBet , and curPayTableId .", "title": "", "metadata": ""}
{"_id": "50376f0a0dd018c832659468652db2f1", "text": "Auditor can decrease certified assets .", "title": "", "metadata": ""}
{"_id": "012e95515a01ebe139691c4351c02a02", "text": "Distribute ether to sellers .", "title": "", "metadata": ""}
{"_id": "eda4f7cd49da84043ccdb2671509f420", "text": "Choose a random int between 1 and totalTickets .", "title": "", "metadata": ""}
{"_id": "59ca415fdd15eac6ee58b42ac351441c", "text": "Buys champ .", "title": "", "metadata": ""}
{"_id": "eda391a9af29b695463c007a2dbdefe8", "text": "Get the player id either by player Name or address .", "title": "", "metadata": ""}
{"_id": "e45de0f1b36bd896aa17c26cc3791d52", "text": "To collect tokens from target addresses .", "title": "", "metadata": ""}
{"_id": "d3afc93c02832b23fcf48fd68062715b", "text": "Reverts if called by any account other than the owner for token sending .", "title": "", "metadata": ""}
{"_id": "7a82585da70bfc76588d22f39843a5d4", "text": "standardTokenDefrosting function allows the owner of the smart contract to defrost frozen tokens based on a base defrosting Rate of 0 . 2 ( from multiple recipients at once if desired ) of particular recipient addresses 50 .", "title": "", "metadata": ""}
{"_id": "4a3443d9e4e0d7b420520d28df01a501", "text": "Returns the account balance of another account with address _owner .", "title": "", "metadata": ""}
{"_id": "e15bb9f5bab16c2a579baf20fcc6843e", "text": "Releases 1 / 4 of team supply after 12 months .", "title": "", "metadata": ""}
{"_id": "6ac5653a987dc02230b518afeab5a07c", "text": "Set the time and amount of presale for each period .", "title": "", "metadata": ""}
{"_id": "d575cd98811dfb34e97d943989d63c2f", "text": "Withdraws dividends , then buys in half of balance 33 if balance 0 . 01 eth .", "title": "", "metadata": ""}
{"_id": "9ce41f39895e2119ba202f972a9a2d18", "text": "This method allows the caller to recieve a tulip if the caller is the approved address caller can also give another address to recieve the tulip .", "title": "", "metadata": ""}
{"_id": "eac6f7398c552e38f97f2fad1f761bf5", "text": "Burn particular HQX amount using token allowance .", "title": "", "metadata": ""}
{"_id": "eb3008211606d4a657b53b9cb13fe757", "text": "Enables the owner to withdraw the funds .", "title": "", "metadata": ""}
{"_id": "0fd3fb25086f79359f661c190b0dfc9d", "text": "Function to get manifest Id based on registrant address , manifest name and version .", "title": "", "metadata": ""}
{"_id": "46cb95be3063f0412a5734a4e9b314b9", "text": "Returns a list of all Card IDs currently owned by _owner .", "title": "", "metadata": ""}
{"_id": "e983052d5188419b5ee01646b2c8e7b3", "text": "Calculates next price of celebrity token .", "title": "", "metadata": ""}
{"_id": "600d3190034cdee6d1b4335bdb22e43e", "text": "modifier to continue with transaction only when Sale is paused .", "title": "", "metadata": ""}
{"_id": "104ccd337631b04d969665a7f4569258", "text": "Functions reserved for the owner .", "title": "", "metadata": ""}
{"_id": "8591b9c954d49f1ca08671875059a29f", "text": "ensure a device is validated for a new reputation score .", "title": "", "metadata": ""}
{"_id": "1238544139de3ef537b64b45db27a271", "text": "Stop running ICO .", "title": "", "metadata": ""}
{"_id": "f8d14ffca6af0ba6ca8b56864b2fbebf", "text": "Function that creates new tokens by owner .", "title": "", "metadata": ""}
{"_id": "863c5db31c2c1d282da4d7b4b871e4dd", "text": "Gets the genome of the active hero .", "title": "", "metadata": ""}
{"_id": "17381c0d26bd55b2d2a7f7fc15efe9e7", "text": "Round the operand to one decimal place .", "title": "", "metadata": ""}
{"_id": "830ea386be35d838d971fe0534bc39b9", "text": "during ICO phase all eth sent in by each player .", "title": "", "metadata": ""}
{"_id": "43b9b419f163585e30f6a4804da00e35", "text": "Admin API .", "title": "", "metadata": ""}
{"_id": "e37d795f2982ecc0ef852dfcc2e6ec64", "text": "accepts calls from token holders only .", "title": "", "metadata": ""}
{"_id": "47bd5c4a8f01d927db7a11876d3cce92", "text": "Track who is the customer making the payment so we can send thank you email .", "title": "", "metadata": ""}
{"_id": "48052f6f89243444d196d2e74e864499", "text": "This is the function that will allow players to purchase the contract .", "title": "", "metadata": ""}
{"_id": "4f6ee072ab142aa02ebb33edf5686f4b", "text": "Public setters area .", "title": "", "metadata": ""}
{"_id": "6daf981fb8e8b257602b3b2903f71482", "text": "Obtain current total supply of CTN tokens .", "title": "", "metadata": ""}
{"_id": "a260afc11733f93aa4533672a4a790eb", "text": "Callback from Oraclize with the name of the winning team .", "title": "", "metadata": ""}
{"_id": "eeb8277092d9e7b8414e6786f8d9620f", "text": "set token symbol .", "title": "", "metadata": ""}
{"_id": "d7b2ff214b99ad6dd84da70faa0df6c6", "text": "Allows the admin to whitelist addresses for the sale .", "title": "", "metadata": ""}
{"_id": "9e8b67f684fe332b267c3cb17e98b6d4", "text": "Function for claiming tokens for presale investors .", "title": "", "metadata": ""}
{"_id": "b50681245d12d0f018f6d564bde5575b", "text": "Force end of game if server does not respond .", "title": "", "metadata": ""}
{"_id": "dfc6a7a1bcfb71f296303eda2e541595", "text": "Updates limit per day for holder .", "title": "", "metadata": ""}
{"_id": "5c4b29e0efdc808299259ad1e97b25b2", "text": "state related .", "title": "", "metadata": ""}
{"_id": "51cd48fd4ad00a79d34c4d48149627fb", "text": "Return true if the item is allowed .", "title": "", "metadata": ""}
{"_id": "a6f2ca025c5cb0e25ee64d29c236b572", "text": "prepare auction when first import is done on a non ETH chain .", "title": "", "metadata": ""}
{"_id": "fe6b2d42fe6d0af459129cfe146b1548", "text": "Handle refunds only in closed state .", "title": "", "metadata": ""}
{"_id": "5f011915df9cc5fd2a95fd12f695bf9f", "text": "Used by lock , claimBonus and unlock functions .", "title": "", "metadata": ""}
{"_id": "63d95f4b96c01b8ea3b5f88f6588204d", "text": "the number of cards which have been burned .", "title": "", "metadata": ""}
{"_id": "64f90825ef0848ef49c97df197163c33", "text": "Schedule price tier .", "title": "", "metadata": ""}
{"_id": "e5af18f3a6250c6d599a132530b99535", "text": "How many contributors we have .", "title": "", "metadata": ""}
{"_id": "14c7979c8cb0d1d0ae457284266a7617", "text": "Approves a third-party spender .", "title": "", "metadata": ""}
{"_id": "2674e003f04a59696508b61f37d4798b", "text": "returns the number of investors .", "title": "", "metadata": ""}
{"_id": "a54ae3f859ed90a9d9645729bd91999d", "text": "requires that a valid signature of a bouncer was provided .", "title": "", "metadata": ""}
{"_id": "0b8ff38f88cfc8184b0a162b2b60b6cb", "text": "End of useless functions .", "title": "", "metadata": ""}
{"_id": "0ec271bc7e65976733a685ca5900b60b", "text": "Modifier to check if tokens can be transfered .", "title": "", "metadata": ""}
{"_id": "e054bb8a13559557fe1f24e62ec0e722", "text": "finish mining coins and transfer ownership of Change coin to owner .", "title": "", "metadata": ""}
{"_id": "22e57bcca74dabe64c52b9309227e584", "text": "Sets the specified token as user's active Hero .", "title": "", "metadata": ""}
{"_id": "20dfb9fbff264c0d4e5e2c27fd69d53d", "text": "How many HEAL tokens do this contract have .", "title": "", "metadata": ""}
{"_id": "5af06c1d9f95166ad281ae3dc0795877", "text": "Allow the owner to set a funding cap on the crowdsale .", "title": "", "metadata": ""}
{"_id": "98de0560f3a90054b448a111355bc3b3", "text": "if there's a draw or a bug in the contract .", "title": "", "metadata": ""}
{"_id": "b8a564b28c4141ffd7566d99b03aaa93", "text": "Returns a list of all Pony IDs assigned to an address .", "title": "", "metadata": ""}
{"_id": "af1f5ab69476e3bba0ddd27678b17106", "text": "send with charge fee .", "title": "", "metadata": ""}
{"_id": "b0e79bbb6e821a3fbbd2b882d7ecc4c5", "text": "Owner can mark a customer's Tx of payment for MCW as spent .", "title": "", "metadata": ""}
{"_id": "9ae718259af586b45ddd4da4a8417425", "text": "Returns the contribution to be used as part of the transaction , and any refund value if expected .", "title": "", "metadata": ""}
{"_id": "24a964f9a36a958de99ad496ab55423d", "text": "Investor can claim his tokens within two weeks of ICO end using this function .", "title": "", "metadata": ""}
{"_id": "d4bd3e2ec543501c492bcb29357f8687", "text": "Proposes to transfer control of the StoxSmartToken contract to a new owner .", "title": "", "metadata": ""}
{"_id": "4624636c2144e5d937e681813ca7a551", "text": "Functions with this modifier can only be executed by approved factory contracts .", "title": "", "metadata": ""}
{"_id": "c71b25e19e981049ff242ea61e625bc6", "text": "Set whether prices can be changed manually .", "title": "", "metadata": ""}
{"_id": "9faa984c99d7bd815c762dc445c2cadd", "text": "function for sign deal by buyer and for transfer money ( call after sign seller only ) .", "title": "", "metadata": ""}
{"_id": "c1f87b818af8b6339c8ebb87a3ce7ff1", "text": "Changes the address of the supported token .", "title": "", "metadata": ""}
{"_id": "304387a82051dd7bfe9598b183ba8f03", "text": "Transfer given amount of tokens to specified address .", "title": "", "metadata": ""}
{"_id": "eb0b97fec5b202f6d394bb6f38ecda28", "text": "true if the crowdsale is active , hence users can buy tokens .", "title": "", "metadata": ""}
{"_id": "1666343a854106aa29b388c948fc6604", "text": "get a quote for exchanging .", "title": "", "metadata": ""}
{"_id": "763ef0cb8de48853a72f5f0a21f45ce5", "text": "get total bets for every team .", "title": "", "metadata": ""}
{"_id": "18e2f79a716383f77d2988094f133cac", "text": "Burn away the specified amount of CareerXon tokens .", "title": "", "metadata": ""}
{"_id": "c0fd019f5ddecc644e2de08709b89184", "text": "Deploy the proxy .", "title": "", "metadata": ""}
{"_id": "8f5843d82e795f2dad3c1df90e33b4f4", "text": "Internal logic that processes payments .", "title": "", "metadata": ""}
{"_id": "546abe98305cd6d1b17dd2e188dc1232", "text": "setup function to be ran only 1 time setup token address setup end Block number .", "title": "", "metadata": ""}
{"_id": "1dbc2b6c45b0bd2d752acec8c50acbf6", "text": "the contract is closed .", "title": "", "metadata": ""}
{"_id": "b3c3504451438b1f46b78fd773c5bc0f", "text": "The value that you would need to send so that the recipient receives a specified value .", "title": "", "metadata": ""}
{"_id": "a8642cbf36922f37cad192a4c1b09cd5", "text": "check TMX Global Tokens balance of an Ethereum account .", "title": "", "metadata": ""}
{"_id": "8e1c2a99015410fcfab9c7584fa73e4a", "text": "disable automatically seller .", "title": "", "metadata": ""}
{"_id": "3697b9e678dbdb78d72e3d41603a162b", "text": "Helper function to access the time periods of a player in a board .", "title": "", "metadata": ""}
{"_id": "c960f1e02038f3fc7a275115b8c896c2", "text": "Distribute fees for multiple claims .", "title": "", "metadata": ""}
{"_id": "341cf4805fbd28d3c7d3e437b594b842", "text": "Change ownership .", "title": "", "metadata": ""}
{"_id": "556fa944e3196c5b937d2cf5cf33e755", "text": "Transfer holder .", "title": "", "metadata": ""}
{"_id": "1bd8f0762a10b47324e98c11c6a0bb08", "text": "returns the current amount of wei that will be given for the purchase at purchases index .", "title": "", "metadata": ""}
{"_id": "b364683ed1a744225adb20e0762fab63", "text": "allows owner to transfer tokens which are locked by default .", "title": "", "metadata": ""}
{"_id": "0b51e93c4437b871a9242bf8e71eee55", "text": "when you Donate any amount from balance , deposit is untouched .", "title": "", "metadata": ""}
{"_id": "df95f4a2e4d8ddc92cfc713666ad8617", "text": "returns true if the role has been defined for the contract .", "title": "", "metadata": ""}
{"_id": "41e56c44d9000460da56b728b53f6542", "text": "Assigns ownership of a specific Poo to an address .", "title": "", "metadata": ""}
{"_id": "ce2c5cc489a02af1eec9adbe033b1ab1", "text": "The function of the stop token .", "title": "", "metadata": ""}
{"_id": "0b370ddbde5476315c8720cfc09f6dfe", "text": "used to withdraw the fee by the factory owner .", "title": "", "metadata": ""}
{"_id": "ee2ddbcfc099b14eaf92bfaf5fe9b0eb", "text": "Returns the option value for a given key .", "title": "", "metadata": ""}
{"_id": "8a482cc905b3eccc6ad29f4b01471cba", "text": "total of amount of wie collected by the contract .", "title": "", "metadata": ""}
{"_id": "1a15b82fca745881a875ab8b79ff66c7", "text": "For creating Dank .", "title": "", "metadata": ""}
{"_id": "3152e192504ea525e87f2d3f4daebd66", "text": "Extend parent behavior to check if current stage should close .", "title": "", "metadata": ""}
{"_id": "9637139b16775bc3de6081ec0ccd674d", "text": "activates the contract in * Test * mode which sets the searchSeed and enables rescuing .", "title": "", "metadata": ""}
{"_id": "e71a61c6ac5e759b724ca60ddd711a4f", "text": "Return all tokens back to owner , in case any were accidentally transferred to this contract .", "title": "", "metadata": ""}
{"_id": "7ccaec4a23a638f48bd05fac3ba8d86c", "text": "Tranfer tokens from one address to other .", "title": "", "metadata": ""}
{"_id": "19054b10f4e30d98f582dd0cb689cdcd", "text": "internal function can be called by this contract only .", "title": "", "metadata": ""}
{"_id": "10526ecedf84adc4543ecd8aca2c1034", "text": "p1_duration constant .", "title": "", "metadata": ""}
{"_id": "0724d95dff0f3c21bbdd632e79833a5b", "text": "Function to set supply locks .", "title": "", "metadata": ""}
{"_id": "c824b246fa2156fa114b9c606f7bb85a", "text": "function to disapprove a single user which means the user has failed the KYC checks can only be called by the owner .", "title": "", "metadata": ""}
{"_id": "d43e1510782b5960ca146510c38877ba", "text": "Transfer ownership .", "title": "", "metadata": ""}
{"_id": "93c3bb777d0b37965b231b482d5cfb72", "text": "Internal helper function to remove element from an array .", "title": "", "metadata": ""}
{"_id": "a03cf6ff309aa2ed588bc98bea96b3f6", "text": "notice Allow users to buy tokens for newBuyPrice eth and sell tokens for newSellPrice eth .", "title": "", "metadata": ""}
{"_id": "f4c7a3ee948573525682edfa5e632193", "text": "Returns numCards from a uint256 ( eg , keccak256 ) seed hash .", "title": "", "metadata": ""}
{"_id": "420d9cd68f29488bcc3411f984ad664a", "text": "do not accept any more investments .", "title": "", "metadata": ""}
{"_id": "ee32c80720551be6f4b2af215518dc95", "text": "Returns a boolean for whether the given address is in the given generation .", "title": "", "metadata": ""}
{"_id": "779277a6aff3b7dfe8617dac4a639ec5", "text": "To make token transfers from the allowance of another user .", "title": "", "metadata": ""}
{"_id": "80290b098798148572e8c04601252010", "text": "ERC20 override functions .", "title": "", "metadata": ""}
{"_id": "dda27c9b3b00f80996d57bf19756029c", "text": "Disable the hot wallets for transfers .", "title": "", "metadata": ""}
{"_id": "4f43552a8ac8b5ad112027d31538d126", "text": "Sets the address of the contract to which all generated tokens are duplicated .", "title": "", "metadata": ""}
{"_id": "4b0ea7165dbbb981f0f4c0c1152605ca", "text": "Distribute tokens to selected team members founders .", "title": "", "metadata": ""}
{"_id": "4a42337ed91b854072d93dee20c9beee", "text": "Validate star parameters .", "title": "", "metadata": ""}
{"_id": "416d871b89bb9681d851ed0fbe045260", "text": "Director can alter the epoch time .", "title": "", "metadata": ""}
{"_id": "08767dc2caf2dd3956c7fed8ecbcdd2b", "text": "Get the id for this BlobStore contract .", "title": "", "metadata": ""}
{"_id": "c3509edb46460b8fac7e19f3ce44fec3", "text": "Prevents further changes to name and symbol .", "title": "", "metadata": ""}
{"_id": "4e7d5e6782a4aba5ec8ba777cf922abf", "text": "returns approximate crowdsale max funding in Eth .", "title": "", "metadata": ""}
{"_id": "a358df44e20358282cb392a2865c5f1a", "text": "Returns if an user has KYC approval or not .", "title": "", "metadata": ""}
{"_id": "18aa416b7d78b102bb259555794430b7", "text": "lock tokens .", "title": "", "metadata": ""}
{"_id": "630eaab4498522c483a1087d04ca6c5a", "text": "Allow developer to unlock allocated tokens by transferring them from GNTAllocation to developer's address .", "title": "", "metadata": ""}
{"_id": "2adddbb34f3a7a00eba982cc1300d7c2", "text": "Add New tokens to contract balance newemission - number of new tokens ( WITH decimals ! ! ! ! ! ) .", "title": "", "metadata": ""}
{"_id": "4db0247a28ad354e424c174280f87e6c", "text": "balance uint256 Corresponding token holder balance .", "title": "", "metadata": ""}
{"_id": "befafbe460316d11430dba62574cad8f", "text": "receives animals from an old contract version .", "title": "", "metadata": ""}
{"_id": "2faa7d9ab7106c858193edffd34c6325", "text": "Bid on an auction .", "title": "", "metadata": ""}
{"_id": "40193f6d2f8dab73047f014643b4b26d", "text": "BuyNow Function which call the interncal buy function after doing all the pre-checks required to initiate a buy .", "title": "", "metadata": ""}
{"_id": "1cd35d6cf5f41bc860827a791b785241", "text": "Notifies the controller about an approval , for this Campaign all approvals are allowed by default and no extra notifications are needed .", "title": "", "metadata": ""}
{"_id": "f282d76f60de22fccae4fb040ca2c288", "text": "Unregister a given record .", "title": "", "metadata": ""}
{"_id": "494d4fbd4ae26106f1103910fbd707a4", "text": "called by participate ( ) and the fallback function for obtaining ( additional ) entries .", "title": "", "metadata": ""}
{"_id": "5ee5f71e884d3fec564c3a284654b9fb", "text": "Throws if tokens will exceed maximum supply .", "title": "", "metadata": ""}
{"_id": "16f772c8178f5582003e6a478f45d027", "text": "Get new price .", "title": "", "metadata": ""}
{"_id": "6f9456ca1ee24ecfd93629495c0a209f", "text": "Sets the current balance of the board , this is internal and is triggerred by functions run by external player actions .", "title": "", "metadata": ""}
{"_id": "d582e19cc67745b31b1610e5e2f576fc", "text": "owner withdraw eth reserved from comissions .", "title": "", "metadata": ""}
{"_id": "106dcdefa26b98d1095322e65e142afa", "text": "once the ICO has ended , owner can send all the unsold tokens to treasury address .", "title": "", "metadata": ""}
{"_id": "c8667a9860d3cf12be8acc2f2c33a59c", "text": "buyout mode is set to flag status value , true / false .", "title": "", "metadata": ""}
{"_id": "bc0f62d9a87169b576312457de66fdbd", "text": "Upgrade function , requires the owner to first approve tokens equal to their old token balance to this address .", "title": "", "metadata": ""}
{"_id": "41758b4c31cb327b1b21e3efb0080643", "text": "Transfers a Property to another address .", "title": "", "metadata": ""}
{"_id": "4d85483a4c99485a9ad774abb2e035f9", "text": "given an entry number , find the corresponding participant ( address ) .", "title": "", "metadata": ""}
{"_id": "95e51b085328297435d142762c48f0cd", "text": "method to place the oraclize queries .", "title": "", "metadata": ""}
{"_id": "6b639217ca2a8c9c0572eb151dbcf31a", "text": "Re-enable token circulation .", "title": "", "metadata": ""}
{"_id": "029d60b88358b6ccb8c276c4c1436a37", "text": "Send shares function .", "title": "", "metadata": ""}
{"_id": "7c98f150d490549bed693e74575e5b61", "text": "Allows investors to buy ETCL tokens by sending ETH and automatically receiving tokens to the provided address .", "title": "", "metadata": ""}
{"_id": "d4ef0ceb7914ae5dc211c759772e38de", "text": "Method for call mint ( ) in EXT ERC20 contract .", "title": "", "metadata": ""}
{"_id": "2b1cfed1401bdaf7674e91a932885563", "text": "FUnction to send ether to address .", "title": "", "metadata": ""}
{"_id": "f25e72dfe32007f56799a4a243bfa2b5", "text": "Changes the vig address .", "title": "", "metadata": ""}
{"_id": "aece6dae085372dd27d9663a1eb89332", "text": "Modifier to make a function callable only when the address is in black list .", "title": "", "metadata": ""}
{"_id": "650655ffcf4fa5a41c90257fc5af5aa8", "text": "Called anytime ether is sent to the contract creates an event to more easily track the incoming transactions .", "title": "", "metadata": ""}
{"_id": "74b8047479998789ec5ab2540f1265b2", "text": "Issue tokens for investors who paid in other cryptocurrencies .", "title": "", "metadata": ""}
{"_id": "69e656d0e9688d0438f34cd7ed2c2ecf", "text": "Transfers tokens to a specified address .", "title": "", "metadata": ""}
{"_id": "a5c4cc61943aaa5c5c39b755b26578f0", "text": "put all capital in this contract .", "title": "", "metadata": ""}
{"_id": "bb32da5f2c7d73866ea302e1a9e3227b", "text": "calc Invalid Keys by rID pId .", "title": "", "metadata": ""}
{"_id": "e3b2a96d372c222c3712e290dab80a20", "text": "helper function to input bytes via remix from https : / / ethereum . stackexchange . com / a / 13658 / 16 .", "title": "", "metadata": ""}
{"_id": "4ddeec06fcb99e6531202d21e9ee40fc", "text": "When refunds are enabled , contributors can call this function get their contributed Ether back .", "title": "", "metadata": ""}
{"_id": "e62c63165e2f944c13dde38bb3e0a5de", "text": "Users must first deposit assets into the Exchange in order to create , purchase , or exercise Options .", "title": "", "metadata": ""}
{"_id": "7f8d6cd7e085edc911d43fca89853844", "text": "total number of tokens issued so far , normalised .", "title": "", "metadata": ""}
{"_id": "b7af57b2dc29883cb6f8bb5437121a78", "text": "Returns the total number of promotions .", "title": "", "metadata": ""}
{"_id": "20a025be2c9f54f479a77a0bf8ecb4db", "text": "expand map in direction Y .", "title": "", "metadata": ""}
{"_id": "1407fd61212aa654fff708a9a3c77985", "text": "Returns the memory address of the first byte after the last occurrence of needle in self , or the address of self if not found .", "title": "", "metadata": ""}
{"_id": "ab23d88b4c379faef09b2befe10b3d95", "text": "standard function transfer similar to ERC20 transfer with no _data added due to backwards compatibility reasons .", "title": "", "metadata": ""}
{"_id": "3cc85d3ca6db0e931d817691c01cc911", "text": "Terminate the ICO .", "title": "", "metadata": ""}
{"_id": "66814c7a8e773e2f624eceec6fef04e2", "text": "stop the ICO .", "title": "", "metadata": ""}
{"_id": "2e7435b5c4dc127ca37ccd1393808a1f", "text": "setup the Fundung parameters .", "title": "", "metadata": ""}
{"_id": "9d7bef5d82aecbef459d390d8f1372ff", "text": "Functions that can only be called if the awards are fully funded .", "title": "", "metadata": ""}
{"_id": "6d120032137cdf0f6c1cf643130dc752", "text": "Allows House to terminate ICO as an emergency measure .", "title": "", "metadata": ""}
{"_id": "118bb8169e0a3057d86d7885fa3b64cc", "text": "Internal Order Placement - remove a still-open order from the book .", "title": "", "metadata": ""}
{"_id": "264fba792afafcb5e9a2df06e498eaa5", "text": "This is confiscate the money that is sent to the wrong address accidentally .", "title": "", "metadata": ""}
{"_id": "11570a55e00a50f1f049c5848abdb2b4", "text": "Test whether an investor .", "title": "", "metadata": ""}
{"_id": "a07ce8a059c25576821e60798632549e", "text": "Access modifier for Issuer-only functionality .", "title": "", "metadata": ""}
{"_id": "47df5e400c74e89d4cec09550f81391c", "text": "BK Ok - Only owner can assign new proposed owner .", "title": "", "metadata": ""}
{"_id": "c621585cc006608d6c8b12ebdcad9bdd", "text": "Sell metadollars and receive ether from contract .", "title": "", "metadata": ""}
{"_id": "2eb9b642fa7fb84e630e7103d7c29056", "text": "Check if minimal goal is reached .", "title": "", "metadata": ""}
{"_id": "2cc7f82bd2ca81505e83b86d14b1b588", "text": "forwarding transactions for an investor .", "title": "", "metadata": ""}
{"_id": "01a89261e0011cbee08724b1e1e07c1e", "text": "Internal utility function to sign up to tournament , assumes that all battle requirements have been checked .", "title": "", "metadata": ""}
{"_id": "69f3c3d1de66c8f305e88de548949e41", "text": "Verify a Merkle proof using the UTXO Merkle tree .", "title": "", "metadata": ""}
{"_id": "1c6f4869a96fea47481d205f4ceb44b8", "text": "Creates new instance of UKTTokenVoting contract with given params .", "title": "", "metadata": ""}
{"_id": "3e3102ca627bd907e6c7a11be1daa2a5", "text": "attach SAN token to work with ; can be done only once .", "title": "", "metadata": ""}
{"_id": "eabc23ce814b31adb72b53baa4897057", "text": "function Buys tokens with Ether , exchanging them 1 : 1 .", "title": "", "metadata": ""}
{"_id": "3d976a5b2119571b12a34f8b121a5cac", "text": "ETH has been transfered so we should not be allowed to void transactions .", "title": "", "metadata": ""}
{"_id": "234bcd4d84344e6a2e0d22416cf6a702", "text": "Creates new canvas .", "title": "", "metadata": ""}
{"_id": "6aa8ec1c625d1ee0f6c576d7d130d878", "text": "payment callback .", "title": "", "metadata": ""}
{"_id": "6060f041e80966c499b247505de95109", "text": "onlyOwnerOrOperator can set jackpotToken .", "title": "", "metadata": ""}
{"_id": "dfbd5fac6a99252883c55f251cc827fd", "text": "exec_id : The execution id under which the registry will store data .", "title": "", "metadata": ""}
{"_id": "92cef0196ea9badec12257574637ce68", "text": "uint Returns a escaled value .", "title": "", "metadata": ""}
{"_id": "d2dfb8215fd445fc62f997cc00bee6f7", "text": "Add an admin .", "title": "", "metadata": ""}
{"_id": "e2dbdd468440d65a85eaa2d4252f04be", "text": "Reviewed : - Interger overflow OK , checked .", "title": "", "metadata": ""}
{"_id": "e72db47c7d990fbba8e7e5264440d28e", "text": "Modifier to ensure that a function is only called during the ico : .", "title": "", "metadata": ""}
{"_id": "ad449d93d8242d7ab7da14e35f21bb45", "text": "token purchase function .", "title": "", "metadata": ""}
{"_id": "61db36a439368e26402c0462b31a9a81", "text": "ERC20 interface implementation .", "title": "", "metadata": ""}
{"_id": "306dae576543e30bcc46c441344bb564", "text": "Anyone can call this function to disburse the payment to the recipient after earliestPayTime has passed .", "title": "", "metadata": ""}
{"_id": "315d16d6ab8278067cd2a53bdadbf616", "text": "Change the client address .", "title": "", "metadata": ""}
{"_id": "72cb7c08a2518f162ab449af8f731579", "text": "Withdraws tokens held by the contract and sends them to a given address .", "title": "", "metadata": ""}
{"_id": "953f51abdebbedd90869d710cf1aca93", "text": "Transfer _value tokens from address _from to address _to using allowance msg . sender .", "title": "", "metadata": ""}
{"_id": "c670ba07653c19e26671f1261fe27a15", "text": "After sale finalized , token and other contract ownership is transferred to another contract or account .", "title": "", "metadata": ""}
{"_id": "b1609fd4e705be7fe42572a5c517b1b5", "text": "Audit the reserve balances , in the base token and in ether returns : token balance , ether balance - ledger .", "title": "", "metadata": ""}
{"_id": "623ad2f6e311f13e7e37c7987866a1ef", "text": "Internal function for when a winner is chosen .", "title": "", "metadata": ""}
{"_id": "71eb7b25b68a665876add2c37a00d870", "text": "Returns sale info for an NFT on sale .", "title": "", "metadata": ""}
{"_id": "9595681f22b5917ce107637d490867d6", "text": "Creates a new Covfefe with the given term .", "title": "", "metadata": ""}
{"_id": "6cddb67cee62d1f8f003fb682b706648", "text": "Called by the owner of the contract to start the Sale .", "title": "", "metadata": ""}
{"_id": "68133d72bcf39955b333d0ec3c6fd4ab", "text": "returns a hashed version of msg . data .", "title": "", "metadata": ""}
{"_id": "18274054b66d0b575afea6ce9b7ddb93", "text": "Special override for the standard mint function .", "title": "", "metadata": ""}
{"_id": "0d2c8cccf0cbf61320c960dd0c3a658b", "text": "Tokenholders can claim refunds here .", "title": "", "metadata": ""}
{"_id": "e9db889b4a2c21245847ca0ffcc94ed4", "text": "to mint tokens .", "title": "", "metadata": ""}
{"_id": "4cb9e570f40eb40cf42e531478360b2d", "text": "set the whitelistOff variable .", "title": "", "metadata": ""}
{"_id": "38652dd276d849b7d1383a02eec10637", "text": "Enter this dungeon .", "title": "", "metadata": ""}
{"_id": "c53270a2a72fbebf22fee58d6da7604d", "text": "Buyer must be whitelisted .", "title": "", "metadata": ""}
{"_id": "9d35656f9cd69bdd2e937ad99cf99247", "text": "function to set reserve pricing .", "title": "", "metadata": ""}
{"_id": "5c13050d656b56e205ef0683db44d47a", "text": "stage lock function .", "title": "", "metadata": ""}
{"_id": "8b2fd819f16efc280067e057d7e17843", "text": "This method will generally be called by the PFC token contract to acquire PFCs .", "title": "", "metadata": ""}
{"_id": "650918b28d1a0755821c29c27070b742", "text": "Transfer token from message sender to another .", "title": "", "metadata": ""}
{"_id": "35932b593c5fb71f9c52d4853de6160e", "text": "this is a recent ethereum block hash , used to prevent pre-mining future blocks .", "title": "", "metadata": ""}
{"_id": "7be834038a6bea3235b8fe0f6e2a5ab7", "text": "Get the customer's TxRegistry contract .", "title": "", "metadata": ""}
{"_id": "294ef98f0e192b5901804f8a76fe041c", "text": "Change the address to where the bounty will be send when sale starts .", "title": "", "metadata": ""}
{"_id": "1f094687a721545f031fe09685fe1c9b", "text": "Converts all incoming ethereum to tokens for the caller , and passes down the referral addy ( if any ) .", "title": "", "metadata": ""}
{"_id": "b6e8c279bf91871dd45cff7359e5fe5a", "text": "Pay with Merculet .", "title": "", "metadata": ""}
{"_id": "77c9a69e93a813f9211817053a8e521f", "text": "Remove an existing contract .", "title": "", "metadata": ""}
{"_id": "055219df32d96f88b3ee67e67ac3a929", "text": "Compute the amount of OGX token that can be purchased .", "title": "", "metadata": ""}
{"_id": "2dab3bf3add109aba7347c4bc67dc1a2", "text": "Processing each buying .", "title": "", "metadata": ""}
{"_id": "ff80916d9818fca4b91458af7bd0f2b1", "text": "burn token if token is not sold out after Public .", "title": "", "metadata": ""}
{"_id": "7631509c5fab7da54898c63e45fc8525", "text": "Throws an exception in case of overflow or zero divisor ; x must be less than 2 256 / UNIT .", "title": "", "metadata": ""}
{"_id": "951de91b9af36d1b20764d5b1e51226a", "text": "Throws if called by any account other than one owner .", "title": "", "metadata": ""}
{"_id": "f502e6905d71d0e187da50f3023c9d96", "text": "Overriding Crowdsale buyTokens to add partial refund .", "title": "", "metadata": ""}
{"_id": "81a23e1baeb722fa53bab1321c82edb9", "text": "This function is called by the owner to modify the contribution cap of a whitelisted address .", "title": "", "metadata": ""}
{"_id": "b5db3c846b5380cfd3ea757671f0b9d6", "text": "Private variables .", "title": "", "metadata": ""}
{"_id": "8d2aa0b87aaeae90e75f76a3f96b8ac1", "text": "Overriding ERC20 standard token functions to support transfer lock .", "title": "", "metadata": ""}
{"_id": "5cbdee9ea3aa57c6f4d5d94703e1d35d", "text": "convert wins into pending battle crates .", "title": "", "metadata": ""}
{"_id": "2dbb490cf962aa78b22595ad5a346d15", "text": "starting a new campaign .", "title": "", "metadata": ""}
{"_id": "ff54abfb7434cf251bb8fccd20ef80d5", "text": "Bid on the auction with the value sent with this transaction .", "title": "", "metadata": ""}
{"_id": "d0f1d50f75038a65f00f961aefefcfe9", "text": "Using this function a user transfers tokens and participates in operating jackpot .", "title": "", "metadata": ""}
{"_id": "21cd0ac6fb359609693cb7c81ce26bb8", "text": "Process unBlacklisting .", "title": "", "metadata": ""}
{"_id": "c4a20b514fb447972112f235472e4c7f", "text": "Transfer all the funds in ETH to the owner .", "title": "", "metadata": ""}
{"_id": "281bca1a375f2d56e7230029c6a08bad", "text": "Creates a new Region with the given name .", "title": "", "metadata": ""}
{"_id": "5da62dcaa054f18f7620b14b8098f88a", "text": "return an arbiter token from an hGame .", "title": "", "metadata": ""}
{"_id": "cb70a2f8bb123f889c526065f614a9df", "text": "unblock tokens of an voter .", "title": "", "metadata": ""}
{"_id": "9beb0029b801081d4f06e566cfedfcf7", "text": "Added due to backwards compatibility reasons .", "title": "", "metadata": ""}
{"_id": "0d7376e4619c44d5fa6e5109d0ce19d0", "text": "spend TMX Global Tokens from another Ethereum account that approves you as spender .", "title": "", "metadata": ""}
{"_id": "593419bbf4feb8e3ee09830e068ffb0f", "text": "Get least expensive crypto gamers ( to transfer the owner 5 of the transaction ) .", "title": "", "metadata": ""}
{"_id": "1783d049b762c2f7f52b5a969d511540", "text": "Transfers amount of token to dest , only used internally , and does not throw , will always return true or false .", "title": "", "metadata": ""}
{"_id": "d468aca8dd6c4b6df73e36fe637ac370", "text": "modifier that insists on a valid bet .", "title": "", "metadata": ""}
{"_id": "ab79dde12bc9e054774da06927769ec2", "text": "All functions that are only executable by the owner of the contract .", "title": "", "metadata": ""}
{"_id": "757c1c952a3f389fc9c17c8db2d225da", "text": "For Owner .", "title": "", "metadata": ""}
{"_id": "501786ac1a372bdfa073caae02b084c2", "text": "Backup withdraw , in case ERC20 tokens get in here .", "title": "", "metadata": ""}
{"_id": "560a150871d081a3697fb9430dfadf1e", "text": "ERC 721 safeTransferFrom functions .", "title": "", "metadata": ""}
{"_id": "613a668ffb8da6bc457b4f3fb4f44ce5", "text": "anyone can withdraw on behalf of someone ( when the player lacks the gas , for instance ) .", "title": "", "metadata": ""}
{"_id": "fa692f48265e64f72081d0de377fe1ef", "text": "Start Round A .", "title": "", "metadata": ""}
{"_id": "2677e14b9ab02e519225c48169f54fd8", "text": "Required methods .", "title": "", "metadata": ""}
{"_id": "4df0af4976be2c39931372ca51910281", "text": "Calcuate the timestamp after which the auction will expire .", "title": "", "metadata": ""}
{"_id": "03a48188ca804bcda25318235fceb30c", "text": "Change service agent .", "title": "", "metadata": ""}
{"_id": "ed7858771b28dda31778765dc63aa606", "text": "Check if you have been linked to this contract .", "title": "", "metadata": ""}
{"_id": "01d3d8189ae1b52969dc1dcce204b90d", "text": "reclaim \u039e for sender if fundingGoal is not met within timeoutBlock .", "title": "", "metadata": ""}
{"_id": "93b890a73dd08b16bfebd949fe256bb0", "text": "change owner of song registration .", "title": "", "metadata": ""}
{"_id": "0ee2131437945ceb3ca1c109ac05bb7b", "text": "Prohibition if it does not match the settings .", "title": "", "metadata": ""}
{"_id": "d29bcb1a0ab3b32dba6d37c9b77f4029", "text": "Public API .", "title": "", "metadata": ""}
{"_id": "92517453e18a116f55b3486fbdb2e212", "text": "Bans an Address .", "title": "", "metadata": ""}
{"_id": "b21060f61540901629064cf449d1e501", "text": "modify ICO cap .", "title": "", "metadata": ""}
{"_id": "2878689b1087e6375ee67d81b3bb495a", "text": "check if a lock can be set in the given positions .", "title": "", "metadata": ""}
{"_id": "de77faf69ae7efbe17531c68d93de6c3", "text": "Add an address to an existing id .", "title": "", "metadata": ""}
{"_id": "5ebb1af57b77daa5061ddca63b45bbca", "text": "Voters agreed on proposed contract and Ethereum is being send to that contract .", "title": "", "metadata": ""}
{"_id": "3ad17fd6ec3587df0fb57be8b1ca82f3", "text": "This modifier allows a method to only be called by token contract .", "title": "", "metadata": ""}
{"_id": "ecf1975fdc72bd1b2acaffde302f3f56", "text": "Fill unique random cars into _randomCars starting from _startFrom as some slots may be already filled .", "title": "", "metadata": ""}
{"_id": "ea2ddd7221d145b80509ddcbd73f45b0", "text": "true if the soft cap has been reached .", "title": "", "metadata": ""}
{"_id": "9d34e46ff3a91242a37f731d54d300ea", "text": "Require that sender has more than zero tokens .", "title": "", "metadata": ""}
{"_id": "ebcbcbf7b37e5f3f844d4db0a7b58a9a", "text": "Add spender to authorize for spending specified amount of BOPT .", "title": "", "metadata": ""}
{"_id": "96afde7747dd8430d2df5aa7eca72dea", "text": "Returns list of issuance ids ( allso the token address of the issuance ) in defined range after filters are applied .", "title": "", "metadata": ""}
{"_id": "9b3f2ef300212075fac8e222ad47081c", "text": "wei_raised : The amount of wei raised in the crowdsale so far .", "title": "", "metadata": ""}
{"_id": "991dc0f6ca895937a261450bb8b9a997", "text": "ERC20 Standard method to return the token balance of an address .", "title": "", "metadata": ""}
{"_id": "be5a0f0608abb2e946f4dab389142c69", "text": "receive a player balance from the predecessor contract .", "title": "", "metadata": ""}
{"_id": "fdbdde6383cce5bd1b4e9ccd60fb0649", "text": "Allows the owner of the contract to withdraw all unsold tokens .", "title": "", "metadata": ""}
{"_id": "4d6b64ddc9748398f9206fcc154a3eae", "text": "Allows execution by the one of controllers only .", "title": "", "metadata": ""}
{"_id": "04824dcb424e49d37cbe53b8da84ebd6", "text": "Hashes the order .", "title": "", "metadata": ""}
{"_id": "c717eb4d4b128c3cb90aa544d52be6ff", "text": "Function to claim the wei that a token owner is entitled to .", "title": "", "metadata": ""}
{"_id": "316da54ac11c814707077f88f6b98af1", "text": "check if Account is the Authorized Minter .", "title": "", "metadata": ""}
{"_id": "e0ec2fa2d1bd2a22ac45dea6c037d00e", "text": "get all rised wei .", "title": "", "metadata": ""}
{"_id": "33621a6abab823298e2406317e8d8f93", "text": "solhint-enable var-name - mixedcase .", "title": "", "metadata": ""}
{"_id": "126401a8fbc5fc09f74aba43be18902c", "text": "get id of Gift was approved from owner to spender .", "title": "", "metadata": ""}
{"_id": "3d9fdada18cf9c9447293a5feec83ca1", "text": "Transfer transferOwnership .", "title": "", "metadata": ""}
{"_id": "a773491e9bc872815298d332c9c8c3f8", "text": "Returns current price of an token on auction .", "title": "", "metadata": ""}
{"_id": "e105121b55f1e3771dd6fe8eba2833b0", "text": "If accredited , non-bonus tokens are given as tokenR0 , bonus tokens are given as tokenR6 .", "title": "", "metadata": ""}
{"_id": "31a7e88aff6f127bb6abf3311da9c983", "text": "Reopen ICO .", "title": "", "metadata": ""}
{"_id": "833ef4dce3a1353782fa0c4afa018105", "text": "To be called once minting is complete , disables minting .", "title": "", "metadata": ""}
{"_id": "0aac565f416aaa884b246c1a4fe2a865", "text": "Outside-visible transact entry point .", "title": "", "metadata": ""}
{"_id": "f50180ce6e17039bc1b5e6dd68d94a34", "text": "Compute the VenusCoin bonus according to the bonus period .", "title": "", "metadata": ""}
{"_id": "9f1e745268e59c1920b1dbbca2702999", "text": "Claim throne in the given _monarchName .", "title": "", "metadata": ""}
{"_id": "6c0193c22c2583ff4a4e9fb0de9b0ffe", "text": "Change tokensPerEth before ICO start .", "title": "", "metadata": ""}
{"_id": "d0e1f1662fd0b8b1fb8e26b05648427b", "text": "Land is assignable by the owner .", "title": "", "metadata": ""}
{"_id": "cdad73c113c227500bc6ab6cf0f62501", "text": "db lookup helper .", "title": "", "metadata": ""}
{"_id": "0e239afdc9cd77c05c5000426ad78927", "text": "Sell all metadollars for half of a price and exit this ICO .", "title": "", "metadata": ""}
{"_id": "e6e2f3e7c12a0827ed6bee960685a787", "text": "Restricted function to allow pretoken signers to fix incorrect issuance .", "title": "", "metadata": ""}
{"_id": "108408ad30a36b4f0746575132a8115e", "text": "Non-upgradable function required for LimitedTransferToken .", "title": "", "metadata": ""}
{"_id": "bc18181bcaf0bfa71750468e1cbac2fb", "text": "allows participants in the Atonomi network to claim their rewards .", "title": "", "metadata": ""}
{"_id": "f686fa2a3bc2de2bb3f5cf3161e5c44a", "text": "Call calculateCurrentPrice - Solidity ABI encoding limitation workaround , hopefully temporary .", "title": "", "metadata": ""}
{"_id": "8c3f541f45d2cb17bcdd6d0022d8dd1a", "text": "Grant vesting token to an address .", "title": "", "metadata": ""}
{"_id": "084a5b8e0d7072e4b884288bcb86dc6a", "text": "user is buying etd .", "title": "", "metadata": ""}
{"_id": "fc542039d18c6e255dedb4dba86bdf20", "text": "Can only be called by the icoAgent .", "title": "", "metadata": ""}
{"_id": "67f5a59f47a86b95f72f407d3d22283b", "text": "Called by owner when ico token cap has been reached .", "title": "", "metadata": ""}
{"_id": "a622aaa9f2481ebe7bec9ea10fbfa98b", "text": "Count the PreIco investors total ( not including third-party investors ) .", "title": "", "metadata": ""}
{"_id": "b0786a67b5b87c48b673b1c99ebcb92c", "text": "can never remove any of these contracts , can only add once we publish a contract , you'll always be able to play by that ruleset good for two player games which are non-susceptible to collusion people can be trusted to choose the most beneficial outcome , which in this case is the fairest form of gameplay .", "title": "", "metadata": ""}
{"_id": "71f3ef627c1233f2c51875caebc48231", "text": "add account to allow calling of transferIXT .", "title": "", "metadata": ""}
{"_id": "bcd2b32902533364087d88c952ac68de", "text": "amount of wei collected .", "title": "", "metadata": ""}
{"_id": "908f5c3955df2b9fb606d42facca045a", "text": "Sets default register fee .", "title": "", "metadata": ""}
{"_id": "c318a217b57d46833f52f85f6f2fc09d", "text": "get balance of user .", "title": "", "metadata": ""}
{"_id": "21ff61045248a7f269eb1c77996920b0", "text": "To be used in case the default gas cost is too low .", "title": "", "metadata": ""}
{"_id": "0f8222774b60d775f7d882930cc6a9f6", "text": "roll the dice for a player .", "title": "", "metadata": ""}
{"_id": "0a80a41e2a7019a37906d98c4c360008", "text": "We use this function to purchase a building from a business .", "title": "", "metadata": ""}
{"_id": "a6ca9e3e69df4334690b9475a7aef4c9", "text": "Add new investment to the pre-ICO investments storage .", "title": "", "metadata": ""}
{"_id": "7b930e1c57a6559eb1e64876ac7acf6a", "text": "Function for the Crowdsale to transfer tokens .", "title": "", "metadata": ""}
{"_id": "fb993a5e3ce87308e56ce90da9142a67", "text": "Self-register multiple new DINs and set the resolver .", "title": "", "metadata": ""}
{"_id": "7600fcb9ec2d340f2775f86f15b3443f", "text": "Function that can only be called by the sister to check and increase prices .", "title": "", "metadata": ""}
{"_id": "e9040d9efc31339fc6cd1094736461d5", "text": "use to verify the investment , whether the investor provide the allowance to the STO or not .", "title": "", "metadata": ""}
{"_id": "87412497f37b7f2bf8a5af1cae38124c", "text": "redeem tokens ( admin fallback ) .", "title": "", "metadata": ""}
{"_id": "ae50598d2ccbd6924d51e7377608688b", "text": "restrict external contract calls .", "title": "", "metadata": ""}
{"_id": "ab9b51a79a00f4d70a2a100c26f6938b", "text": "Updates current stage cap and returns amount of excess tokens if ICO does not have enough tokens .", "title": "", "metadata": ""}
{"_id": "3eb8beded641faefd4b9a8c4cbbf6b5d", "text": "modifier to allow actions only when the crowdsale has not ended .", "title": "", "metadata": ""}
{"_id": "1fef838d8d020b55c358d72e4688ec2e", "text": "Throws if the caller address is a contract .", "title": "", "metadata": ""}
{"_id": "ba46a4850d7196f01cf9826eaa749086", "text": "To be used if the migrationInfoSetter wishes to transfer the migrationInfoSetter permission to a new account , e . g .", "title": "", "metadata": ""}
{"_id": "0161e28106824a55c083546e0487715a", "text": "Find out what the results would be of a prospective purchase .", "title": "", "metadata": ""}
{"_id": "b09b895323d513d62a359a545447d50c", "text": "Updates the endTimestamp propety with the new _end value .", "title": "", "metadata": ""}
{"_id": "6225e5392913a7297b00dfc30551d36e", "text": "Update a treasury address .", "title": "", "metadata": ""}
{"_id": "959b4ec8bad952389ecf3dfc0deaa8a1", "text": "Main function that checks all conditions and then mints fuel tokens and transfers the ETH to our wallet .", "title": "", "metadata": ""}
{"_id": "752ed61c38741acc3f6115f91a06bed0", "text": "either host or manager can end the promotion if needed .", "title": "", "metadata": ""}
{"_id": "33f604183aeae88370c92ad6c88d484e", "text": "Allows execution by the event manager only .", "title": "", "metadata": ""}
{"_id": "39d72ce85d40a03d48fd107d4e9c6d87", "text": "initialize the contract and set token .", "title": "", "metadata": ""}
{"_id": "c36ad1e77c1968ee366005e569c9f53a", "text": "Send _amount of tokens to address _to passing _userData to the recipient .", "title": "", "metadata": ""}
{"_id": "77c2398ba04e20e2612f50ae64bb1b5f", "text": "ensure that the result of subtracting y from x is accurate .", "title": "", "metadata": ""}
{"_id": "865ce989918b87e71e5337d49d014623", "text": "Trade buy or sell orders .", "title": "", "metadata": ""}
{"_id": "4570963a0e2c1ea7572f29a0a1948beb", "text": "Checks whether a LinglongCat is currently pregnant .", "title": "", "metadata": ""}
{"_id": "929b1b7837b5e53f81eb2f9e5f16cb4f", "text": "transfer contracts for a specified address .", "title": "", "metadata": ""}
{"_id": "f428aa5c6c6511245284d2e3276643e8", "text": "Confirms the user is not in the middle of a flushing process .", "title": "", "metadata": ""}
{"_id": "9eb2a79f5825b61484e8407b8baae3f8", "text": "Get hash sum for property .", "title": "", "metadata": ""}
{"_id": "f384274971326f78d9020b9f32f4060b", "text": "allow to change the depositAccount of the house share , only the depositAccount can change it , depositAccount organizer at creation .", "title": "", "metadata": ""}
{"_id": "961d01f2aad805f65af49b12117a968f", "text": "Calculate number of ticks elapsed between auction start time and given tick .", "title": "", "metadata": ""}
{"_id": "7ca0bdf7dc6005604496de43d22ff6d3", "text": "view surplus .", "title": "", "metadata": ""}
{"_id": "79890bfe8ed95579464ae70f7ee88704", "text": "open waittokens and transfer them into the multisig wallet .", "title": "", "metadata": ""}
{"_id": "78bd1d203b47cfcd665aed51ebebead4", "text": "Performs the refund of the loser bids ART tokens .", "title": "", "metadata": ""}
{"_id": "b82e437451632dad7832413653f9cd77", "text": "Request to change ownership ( called by current owner ) .", "title": "", "metadata": ""}
{"_id": "b21b419da60aec6a6f1c9bfbbff7e7c5", "text": "only callable whenPaused b / c pausing the contract will reset allowDisbursePaymentWhenPaused to false .", "title": "", "metadata": ""}
{"_id": "4281edcb2745c63650afa4e8a5dd76fb", "text": "allows anyone to use escape hatch .", "title": "", "metadata": ""}
{"_id": "7387b3ade6b60d8f8a57ccdf7a372bbc", "text": "Calcul the ROK bonus according to the investment period .", "title": "", "metadata": ""}
{"_id": "05c8e3f85a57f382b53cdf4688c2a439", "text": "buys the token by depositing one of its connector tokens .", "title": "", "metadata": ""}
{"_id": "475144079f94cdf91fd9a29892c23981", "text": "Get the customer's Tx of payment for MCW data - timestamp of payment for KWh which is recorded in the Tx .", "title": "", "metadata": ""}
{"_id": "bf7a4d9acf3543cae52a365635f42b48", "text": "Property owners can toggle their Properties between private mode and free-use mode .", "title": "", "metadata": ""}
{"_id": "92d74fcefafc6d2a7a2bb2ab464b26f6", "text": "Token Spending : .", "title": "", "metadata": ""}
{"_id": "91e0fc0d24f4ed2372c990d49ed7c6d2", "text": "Returns if user has subscribed to trade hooks .", "title": "", "metadata": ""}
{"_id": "9532fddafcfeb7d7710970bd7b8d6e81", "text": "Identification check for KYC / AML .", "title": "", "metadata": ""}
{"_id": "a083eb87d95458c4e423b69afda737cc", "text": "Update the price of a CardboardUnicorn to be 1 / 1000 a real Unicorn's price .", "title": "", "metadata": ""}
{"_id": "bd3665c1be902e64d09a3b34e2ed9ca0", "text": "Return total supply of cats existing .", "title": "", "metadata": ""}
{"_id": "cd8cb71390a6b16e589efdb9e7412a2b", "text": "Whether the allocation was successful or not .", "title": "", "metadata": ""}
{"_id": "1d443f60caedf02771d05a5cb6533cf5", "text": "Creates a loan request , the loan can be generated with any borrower and conditions ; if the borrower agrees it must call the approve function .", "title": "", "metadata": ""}
{"_id": "080096e7aa3b1318512f59e30a0b539e", "text": "totalSupply function returns the total supply of tokens .", "title": "", "metadata": ""}
{"_id": "047faa124480ffdb07aa9363589eb504", "text": "Request payout dividend ( claim ) ( requested by tokenHolder - pull ) dividends that have not been claimed within 330 days expire and cannot be claimed anymore by the token holder .", "title": "", "metadata": ""}
{"_id": "a0d40f8c57a7067b3465366d48efce62", "text": "Create mintedAmount tokens and send it to owner , can be run only by owner .", "title": "", "metadata": ""}
{"_id": "e2b3615c79e34720ffafe1ddb0c8b793", "text": "proposeAssignProject proposes the assignment of a pledge to a specific project .", "title": "", "metadata": ""}
{"_id": "cf95a0eca8b7e1f7131b58be84575653", "text": "Match Simulator .", "title": "", "metadata": ""}
{"_id": "0fc1bab51919327dab6d01443c0996b2", "text": "buy lovelock ( with ETH ) .", "title": "", "metadata": ""}
{"_id": "38acfc4c29f4469c0d810700aafd8fc3", "text": "Allows the owner to set a bonus to apply to all purchases .", "title": "", "metadata": ""}
{"_id": "483b2ed754f8aa8d02701806740fb98c", "text": "This is merely a shortcut for sha3 ( indexId , id ) .", "title": "", "metadata": ""}
{"_id": "39c7f7f26eba005005ac58ca6a2a479e", "text": "Returns whether the transferring of tokens is available fundraiser .", "title": "", "metadata": ""}
{"_id": "f63405d86c3dfd5d227b1bebedaa9101", "text": "Add Value to Covfefe .", "title": "", "metadata": ""}
{"_id": "9243023fcdaaa7c653fb2fa32e6168ba", "text": "Buy wanchain tokens by partners .", "title": "", "metadata": ""}
{"_id": "5ce80ccc54682eaf17cdf5d86709c619", "text": "function to withdraw Ether to owner's account .", "title": "", "metadata": ""}
{"_id": "d315418af0dfc17fe95dab6da29a7758", "text": "onlyOwner function 11 freeze or unfreeze account .", "title": "", "metadata": ""}
{"_id": "2d0c334110a9a3caafa2e9a7585b20c9", "text": "Get current difficulty .", "title": "", "metadata": ""}
{"_id": "57baac5285a47ef9d7c5b181550f6857", "text": "No need for the same require anymore .", "title": "", "metadata": ""}
{"_id": "6f0597177de31a35a61e860884c62e99", "text": "For creating whale .", "title": "", "metadata": ""}
{"_id": "7c9ad6935613009443b9d821356318df", "text": "Sets the address of the DistributedAutonomousExchange contract .", "title": "", "metadata": ""}
{"_id": "a3fd65e29b111fd918a615c2c9550cec", "text": "Get the amount of Wei you can withdraw .", "title": "", "metadata": ""}
{"_id": "18cb6a2aea52a5b60180189e932f0172", "text": "Allows a function to be executed only if minting is still allowed .", "title": "", "metadata": ""}
{"_id": "20aad09f3436b0304bf2aa1e9b714d61", "text": "sells the smart token for ETH note that the function will sell the full allowance amount .", "title": "", "metadata": ""}
{"_id": "78a4bff51ce29146f37c1db0729c0273", "text": "true if the transaction can buy tokens removed view to be overriden .", "title": "", "metadata": ""}
{"_id": "696cd238e8c966c913ed458265ea7f47", "text": "Revokes a specified NFT .", "title": "", "metadata": ""}
{"_id": "6db8369e7e6f21e3134fb78360577368", "text": "Burn state for a pricefeed operator .", "title": "", "metadata": ""}
{"_id": "e934317f69ea6796b096a88b1e27bd26", "text": "check PreIco Finish .", "title": "", "metadata": ""}
{"_id": "b94f275d58fe4a0d1520023239ed4893", "text": "Validates arguments for addOwner function .", "title": "", "metadata": ""}
{"_id": "f067896e074ff8f5f239ff4991226fc6", "text": "Modifier that allows only shareholders to vote and create new proposals .", "title": "", "metadata": ""}
{"_id": "db7b89cc1acb5ec8276c9f7fa02dff1b", "text": "return releaseable amount for beneficiary in case of variable type of release .", "title": "", "metadata": ""}
{"_id": "fc2971228baee5846827661493d81d34", "text": "Used by owner to change price of a special kitty or lower available population .", "title": "", "metadata": ""}
{"_id": "d19f072ee5aab5c842ec0f0289f23339", "text": "Pulls votes from the preferred candidate required before any adjustments to tokenBalance or vote preference .", "title": "", "metadata": ""}
{"_id": "f9f635577ddb2d77bcaf18ac18b14b27", "text": "Set ICO address .", "title": "", "metadata": ""}
{"_id": "185024230ac015a865287009e65b9370", "text": "whether _account is has an entry in the whitelist .", "title": "", "metadata": ""}
{"_id": "20427d892e60120a06feb006c4cfa70b", "text": "Unset a tweedentity .", "title": "", "metadata": ""}
{"_id": "3e7ad4955c360929474203d7729fdb80", "text": "Accepts ETH and send equivalent tokens .", "title": "", "metadata": ""}
{"_id": "68609a1fc49041bb9f6aa4a7a1d81ae5", "text": "Updates the wallet propety with the new _newWallet value .", "title": "", "metadata": ""}
{"_id": "45adbc34e1f71f05222609c7ff1d57f0", "text": "Allows voter to claim his tokens back to address .", "title": "", "metadata": ""}
{"_id": "3fcb76c7524d3bf06426e9a0f8e09c54", "text": "Writes how many tokens investor received ( for payments in other cryptocurrencies ) .", "title": "", "metadata": ""}
{"_id": "2595fd301d46dab8a4babf231480dac3", "text": "combo operations .", "title": "", "metadata": ""}
{"_id": "5bbaf745c5cac98860dea67a2af3b2b9", "text": "Returns all the world cup team information by token id .", "title": "", "metadata": ""}
{"_id": "f98d4cc81feee24c0ca50bd416690f80", "text": "Last minute add just in case I somehow manage to set the wrong token address on deployment .", "title": "", "metadata": ""}
{"_id": "4c49ad88da498797327de816e971c998", "text": "Assigns a new address to act as the COO3 .", "title": "", "metadata": ""}
{"_id": "b8cd119a9a2dc2f6cd1d63ce8f55122e", "text": "Everyone can call this function to invalidate mail if its validation time is already in past .", "title": "", "metadata": ""}
{"_id": "cd06ec6529c81bbe7aa257df6a6cf505", "text": "Set token offering address to approve allowance for offering contract to distribute tokens .", "title": "", "metadata": ""}
{"_id": "9db9e2a6e09a0eb01addb29b3807c496", "text": "Process new ETH investment and sends tokens back .", "title": "", "metadata": ""}
{"_id": "dfeb9fa3b592c4e7f2d48cda70bbd5d2", "text": "Internal transfer for all functions that transfer .", "title": "", "metadata": ""}
{"_id": "052ac4dd158ac96cf7236f2de2863166", "text": "uint : amount of volume available for the given order in terms of amountGet / tokenGet .", "title": "", "metadata": ""}
{"_id": "7f2553e7f501a2cd9df98642be5a644b", "text": "Add Tower .", "title": "", "metadata": ""}
{"_id": "75256733f32374e07324f505dfeaa32b", "text": "Get the total token supply in circulation .", "title": "", "metadata": ""}
{"_id": "4c39f1af5b424f3c9ec64df7288b545e", "text": "Overridden TimedCrowdsale , takes crowdsale opening and closing times .", "title": "", "metadata": ""}
{"_id": "db7b2d224776d16f78973d80feace28e", "text": "returns true if the node exists .", "title": "", "metadata": ""}
{"_id": "4b04957a48d5c5b7b9af71f85003506a", "text": "Checks if the list is empty .", "title": "", "metadata": ""}
{"_id": "8f5cf01ee5f56196a542c45f634fcade", "text": "Transfer the SMS balance from specific wallet address to target's wallet address .", "title": "", "metadata": ""}
{"_id": "a1056c6bfd2750132d68df54687810cc", "text": "FEATURE 5 ) : 'Convertible' implements .", "title": "", "metadata": ""}
{"_id": "a827a1d39ddf2f151a80d360f60f19b0", "text": "set an exchange rate in wei .", "title": "", "metadata": ""}
{"_id": "4cffc5fa4946f47f4af86a1d6e114783", "text": "If you want to transfer tokens to multiple receivers at once .", "title": "", "metadata": ""}
{"_id": "4ada80dfb4eb18b7d5983d54166d01ee", "text": "disable / enable access from API - for security reasons .", "title": "", "metadata": ""}
{"_id": "1e49a4317a13bb5c5e05c42caf396cbf", "text": "fails if something in setup is looking weird .", "title": "", "metadata": ""}
{"_id": "fdde1fa913ead4b4651524e6a7957549", "text": "This function is only valid for a very small amount of time after which it will become useless ! .", "title": "", "metadata": ""}
{"_id": "4009121d5ff7cd67a402721123942675", "text": "Function used to change the exchange rate .", "title": "", "metadata": ""}
{"_id": "3af8a26e6c63c02dc572aad9afad4261", "text": "Decode an RLPItem into an ascii string .", "title": "", "metadata": ""}
{"_id": "d54cff9280756c79ad65d3c51208ad16", "text": "Register new investor .", "title": "", "metadata": ""}
{"_id": "11ef5b2ce81058bcca45e88d7faba35d", "text": "openANX can set number of tokens per 1 , 000 ETH .", "title": "", "metadata": ""}
{"_id": "4f095dcaacfd237283327f70c821cf8c", "text": "init function run on fallback .", "title": "", "metadata": ""}
{"_id": "5ccf52546b7eb4e9be9b76f7a12d6e07", "text": "Deploys a vesting contract to _beneficiary .", "title": "", "metadata": ""}
{"_id": "6c40fb14383e46876e65e48a4e5c87ec", "text": "Give rewards .", "title": "", "metadata": ""}
{"_id": "b34f53fe55ab39a9d89b998abffac6e7", "text": "Simply returns the current owner address .", "title": "", "metadata": ""}
{"_id": "159c6f9922020bb9928d002dc346daa5", "text": "Add a new leaderboard .", "title": "", "metadata": ""}
{"_id": "e6b74399dab9a2e69d67acff58be7c3d", "text": "Throws if called by any account other than the whitelister .", "title": "", "metadata": ""}
{"_id": "6972a589af34e47b7c6b0ae03affc3d7", "text": "Batch transfer some tokens to some addresses , address and value is one-on - one .", "title": "", "metadata": ""}
{"_id": "cdd7892d0edfcb931279e410414b892d", "text": "other round info .", "title": "", "metadata": ""}
{"_id": "f238ee7ed8f118b78da20b97ba3e1d1c", "text": "returns all current round info needed for front end 0x747dff42 .", "title": "", "metadata": ""}
{"_id": "7e15cdfcdcaf991ac778399bed545d8d", "text": "dev function for withdraw resAmount ( active only if minimumTarget is reached ) .", "title": "", "metadata": ""}
{"_id": "c949ef0501820d264392b0f0ed9dd6bc", "text": "Register a new DIN .", "title": "", "metadata": ""}
{"_id": "11953fe7606b2eea4cc5ea592579ef2e", "text": "uint public lastMsgValue ; uint public lastMsgGas ; uint public lastRandomNumber ; .", "title": "", "metadata": ""}
{"_id": "275b9f602b2d3b610d9c8a970ae2469d", "text": "Extend parent behavior requiring sale to be opened .", "title": "", "metadata": ""}
{"_id": "979418c60f5544dda116fdd3e0482bae", "text": "Retrieve the symbol of the token .", "title": "", "metadata": ""}
{"_id": "b6239d7785367903fab11c2ff829afce", "text": "To be called as frequently as required by any external party .", "title": "", "metadata": ""}
{"_id": "41daba22f29154e7ed76316ff9c64b63", "text": "deposit all allowance .", "title": "", "metadata": ""}
{"_id": "b5116dfcc6621a35ae377358aa180825", "text": "Division with safety check .", "title": "", "metadata": ""}
{"_id": "33804f338b96858c71fd630684886207", "text": "remove VIP buyer address .", "title": "", "metadata": ""}
{"_id": "1a4f78e8fe120c26d688b30e9f854955", "text": "not implemented .", "title": "", "metadata": ""}
{"_id": "50bdc2f500e8a0d4fdac6ce43d52d7b0", "text": "100 , 000 , 000 Seed UFT .", "title": "", "metadata": ""}
{"_id": "e7e0a2bf1b6d2812bc67e2e48cb0b26d", "text": "withraw all PLAT by dev .", "title": "", "metadata": ""}
{"_id": "88ea83807307cbe02495fad851f87ae3", "text": "disable token sale .", "title": "", "metadata": ""}
{"_id": "44322dcece98a5d07ed988f6d0823a4f", "text": "this function added Contributor that already made contribution before presale started should be called only after token was transfered to Sale contract .", "title": "", "metadata": ""}
{"_id": "96bfd75194709b2cf6bd4de9f2c9e0f2", "text": "modified toBase58 impl from https : / / github . com / MrChico / verifyIPFS / blob / b4bfb3df52e7e012a4ef668c6b3dbc038f881fd9 / contracts / verifyIPFS . sol .", "title": "", "metadata": ""}
{"_id": "c4d057761fdf521dfeb9744d3ecaf3d1", "text": "Withdraws the beneficiary's funds .", "title": "", "metadata": ""}
{"_id": "b662e69e7041fb8779f27661425b5a1e", "text": "If something goes wrong we can destroy the contract and everyone gets a refund at card price for each of their cards .", "title": "", "metadata": ""}
{"_id": "acf4694dbe34a89591d0c2564bd1bfad", "text": "Is the spender address one of the Cryphos Team ? .", "title": "", "metadata": ""}
{"_id": "cb3c45955a7b3ef9c4d329c57c22d195", "text": "split function to lower the price .", "title": "", "metadata": ""}
{"_id": "8b617791ec3044d1409b1410455a311d", "text": "administrator can : - change the name of the contract - change the name of the token - change the PoS difficulty ( How many tokens it costs to hold a masternode , in case it gets crazy high later ) they CANNOT : - take funds - disable withdrawals - kill the contract - change the price of tokens .", "title": "", "metadata": ""}
{"_id": "041c9b2d84b06f6848ba10abd54dcee7", "text": "ERC20 token transfer function .", "title": "", "metadata": ""}
{"_id": "907a04ca35cdfff9a2d26ebb3f80f250", "text": "Overload to check ICO success and KYC flags .", "title": "", "metadata": ""}
{"_id": "bcd6bebb8f09b7089a6f2f5f2aa4810f", "text": "Reward the winner .", "title": "", "metadata": ""}
{"_id": "0147d14f0b57113befcc477020059113", "text": "Enable whitelisting .", "title": "", "metadata": ""}
{"_id": "1d375ca3a4a71829293eeb0d84a291f1", "text": "Returns available token .", "title": "", "metadata": ""}
{"_id": "79eb295e6224d210d2930248f7a1ddf1", "text": "change founder .", "title": "", "metadata": ""}
{"_id": "833c584bf179144117ff6fb25e42f577", "text": "If TGE was not successfull refunding process will be released by SmartOne .", "title": "", "metadata": ""}
{"_id": "922a3a66758436454f1d001f41e22a3e", "text": "Allows the exec admin to set the provider from which applications will be initialized in the given registry exec id .", "title": "", "metadata": ""}
{"_id": "98b82fe0576cf7855696ff44cab5b187", "text": "Modifier for client functions .", "title": "", "metadata": ""}
{"_id": "929a9a79576ce5184ebb97679ad4e8d8", "text": "Transfer CryptoColor from Previous Owner to New Owner .", "title": "", "metadata": ""}
{"_id": "0e43273f0e6ef7d492fa4d481cdafd41", "text": "Sell tokens during ICO .", "title": "", "metadata": ""}
{"_id": "d421d3cbc679a8a4d77a901ebe2bef25", "text": "Gets the balance of the sender address .", "title": "", "metadata": ""}
{"_id": "594fe2b403148745a8845232d797774a", "text": "Allocated tokens transfer to Founder Key Employee team .", "title": "", "metadata": ""}
{"_id": "2682de30ba5f15f09d52fb114051c060", "text": "release Tokens .", "title": "", "metadata": ""}
{"_id": "bd58469805cc542571abb6ad2f88af83", "text": "true if ICO is closed manually or stage is Inactive , otherwise false .", "title": "", "metadata": ""}
{"_id": "87c9804fcf8cb7c59361ad25cd22616d", "text": "to check that a game has ended .", "title": "", "metadata": ""}
{"_id": "2a6204d6bc21779d7d6378262c4779d2", "text": "Tokens transfer to beneficiary address only contract creator .", "title": "", "metadata": ""}
{"_id": "c506348781b7abb9432552b39ba32f71", "text": "these functions I can use to deposit money into this account .", "title": "", "metadata": ""}
{"_id": "a43ab42b3155b5f0017475e665513986", "text": "constant function .", "title": "", "metadata": ""}
{"_id": "84295049bc75506fa0e7c28b3c89ab96", "text": "ends the round .", "title": "", "metadata": ""}
{"_id": "9da813b3bc32379fa980c803171a6363", "text": "Kill contract if needed .", "title": "", "metadata": ""}
{"_id": "d759e5e2509141ba6cf9a1977ea60d9b", "text": "sends all ethereum in this contract to the address specified .", "title": "", "metadata": ""}
{"_id": "7b18db607730b1ce7e3c99eaf50f2531", "text": "Request an item to be cleared .", "title": "", "metadata": ""}
{"_id": "56c66e99acb9ecdb9eb728b560bb7934", "text": "Function to close the setting procedure and start to use this smart contract .", "title": "", "metadata": ""}
{"_id": "4bbab053575ea90570a3beeecd9bc3ae", "text": "EmergencyStop Function called by the owner on emergency , triggers stopped state .", "title": "", "metadata": ""}
{"_id": "76a746344af24691a69058116d0b7fa9", "text": "Remove an item from the set .", "title": "", "metadata": ""}
{"_id": "b3bb72727938c8ac65e0d6bffd67dbe2", "text": "refund ETH to non-KYCed investors .", "title": "", "metadata": ""}
{"_id": "fd2c60571d736c39973fe3559dc88643", "text": "Allow the owner to transfer out any accidentally sent ERC20 tokens .", "title": "", "metadata": ""}
{"_id": "e0fb22d1e7365d895e26739a8e067bd9", "text": "Utility function for updating a KODA assets price .", "title": "", "metadata": ""}
{"_id": "93e6a22ac54a9dc162ee051dce383793", "text": "Send tokens to an account and froze the account immediately ( Owner only ) .", "title": "", "metadata": ""}
{"_id": "e23b7cea32bbd5fe15934a23b25f161c", "text": "Set snacpshot block .", "title": "", "metadata": ""}
{"_id": "9d404fb093e314022ba6ae800db4f286", "text": "Get my total amount of Ether staked on all countries .", "title": "", "metadata": ""}
{"_id": "d04ef539ed52a6f57024e240a06adf25", "text": "Returns the address of the resolver for the specified node .", "title": "", "metadata": ""}
{"_id": "71982f6cbd6d930f0e7408820ec9cc50", "text": "Get the amount of tokens approved by the owner that can be transferred to the spender's account .", "title": "", "metadata": ""}
{"_id": "3c750b7eb4ef53a5085afb1c9bcf9c4f", "text": "this function is called to calculate countdown on the front side .", "title": "", "metadata": ""}
{"_id": "1c4a73cfc819dbd1716de385e4e3e1eb", "text": "Add users and their allowed amount to allocation list .", "title": "", "metadata": ""}
{"_id": "4c86f208f5383aecb2e32de81e376408", "text": "Check bank not empty ( empty is betPrice eth ) .", "title": "", "metadata": ""}
{"_id": "0d3d6a53e4e5465acf10c204eaa5f97d", "text": "Allow future tenant to lease a card .", "title": "", "metadata": ""}
{"_id": "441dca6c6ce00061abcb8c0f4447b91c", "text": "Close main sale and destroy unsold tokens .", "title": "", "metadata": ""}
{"_id": "4f44f433fb1c8262ce96011fe4c953b3", "text": "Check if minimal goal of ICO is reached .", "title": "", "metadata": ""}
{"_id": "045d3ea7fcc9d0d9e137c991f39382d8", "text": "Wrapper for getAttribute with attrName numTokens .", "title": "", "metadata": ""}
{"_id": "5dabd232dbd29274118aed42da084c52", "text": "Allows any user to withdraw his tokens .", "title": "", "metadata": ""}
{"_id": "ba080997837ab62ccc1992988bcae659", "text": "Sell tokens when we don't have enough token in PreSale .", "title": "", "metadata": ""}
{"_id": "6d05f873ca6ff7ac39abb26160f0967a", "text": "When MIN_CAP is not reach : 1 ) backer call the approve function of the Resilium token contract with the amount of all Resiliums they got in order to be refund 2 ) backer call the refund function of the Crowdsale contract with the same amount of Resiliums 3 ) backer call the withdrawPayments function of the Crowdsale contract to get a refund in ETH .", "title": "", "metadata": ""}
{"_id": "b745c28dc4e2bbaaf7b570bca6ed9b6e", "text": "Allows to adjust the crowdsale end time .", "title": "", "metadata": ""}
{"_id": "88317b37439eb40f1ad9ace36f26ae2a", "text": "trigger rewarding a miner with STA token : .", "title": "", "metadata": ""}
{"_id": "b0235bcb39257eae1cd4a97543597366", "text": "Burn HELs by User .", "title": "", "metadata": ""}
{"_id": "fb88b4beb5b8a0947fad440a8dfc49f2", "text": "contractAddress - The address of the contract .", "title": "", "metadata": ""}
{"_id": "d46c21cfab78c134ee9b48305f45501c", "text": "Returns TOTAL payout per tier when calculated using the splits method .", "title": "", "metadata": ""}
{"_id": "60b936eefb83ee19b6c4e8590e25cbbf", "text": "Removes account addresses from public sale ETH whitelist .", "title": "", "metadata": ""}
{"_id": "37ac3ddb1b4ee395e291b31c0eb16c1a", "text": "constant functions .", "title": "", "metadata": ""}
{"_id": "07c163993441d644c08163a9e5271f87", "text": "Query the index for the edge-most node that satisfies the given query .", "title": "", "metadata": ""}
{"_id": "4a434b2c2583b0cd84d7c5bae421d9dd", "text": "Retrieves block number at which sender performed redemption .", "title": "", "metadata": ""}
{"_id": "e4f5597243ebb91adcaa9f93c785ecdf", "text": "View current token balance of the given address .", "title": "", "metadata": ""}
{"_id": "e936d554dd68575bc1a52f69abe3556c", "text": "Process crowdsale contribution without whitelist .", "title": "", "metadata": ""}
{"_id": "3fa3c6eca76f80e808ea90f34afcd5af", "text": "Round Three Sale Period .", "title": "", "metadata": ""}
{"_id": "d8c5d2e439a0f7e403b3d9f3fefbc2fa", "text": "function to update transferTokenTo .", "title": "", "metadata": ""}
{"_id": "ecc8b2edb5760b1b66e9dee511f2d467", "text": "Returns all the relevant information about a specific rabbit .", "title": "", "metadata": ""}
{"_id": "756656039425b4d6ac0e50aafb2cf15e", "text": "Batch SafeTransferFrom from a single address to another address .", "title": "", "metadata": ""}
{"_id": "abcecd23e98d10001dd54584951187e5", "text": "recommended fix for known attack on any ERC20 .", "title": "", "metadata": ""}
{"_id": "587cec5f07487922ec49092808a6acb8", "text": "ability for owner to withdraw the commission .", "title": "", "metadata": ""}
{"_id": "89994c5153688816abf323659a8294b8", "text": "Transfer a number of AirTokens to the internal AirFox ledger address by a user's MDN , digits only including country code , no white space , dashes , plusses , or any other special characters .", "title": "", "metadata": ""}
{"_id": "c6bd33c6c80177f2a27cccdc323c7054", "text": "The beneficiary can decide to stop using this contract .", "title": "", "metadata": ""}
{"_id": "8d1f54f576e11d705065d2129c325ae8", "text": "Assigns ownership of a specific Team to an address .", "title": "", "metadata": ""}
{"_id": "30fbf00d6a365f6c4055b754c594cb30", "text": "Take a bet .", "title": "", "metadata": ""}
{"_id": "d55a305d507b5772d3705b8940828055", "text": "Update related functions .", "title": "", "metadata": ""}
{"_id": "61ac0669700f996b086a7d42afbbdbd8", "text": "Destroys the amount of tokens and lowers total supply .", "title": "", "metadata": ""}
{"_id": "d3a53c681d46646c7ea1887800731f9a", "text": "Allows to perform method only after all owners call it with the same arguments .", "title": "", "metadata": ""}
{"_id": "92b8c05a924b71907e01575107087abc", "text": "Function to manually mint tokens while crowdsale is running .", "title": "", "metadata": ""}
{"_id": "3b311dc51e73e4b2d5f7193253af892d", "text": "Returns the location of a registered app's index address under a provider .", "title": "", "metadata": ""}
{"_id": "2519a1208758f1ef48807339a9c575ac", "text": "Transfer dev tokens to vesting wallet .", "title": "", "metadata": ""}
{"_id": "1bfdc673678edeebad574ed0bcb99999", "text": "Removes approval for another address to claim for the ownership of any tokens owned by this account .", "title": "", "metadata": ""}
{"_id": "4b62af4094a3a3201d409a9fea096ed2", "text": "Gets the Current ( or Default ) Price of a Day .", "title": "", "metadata": ""}
{"_id": "032e479373c02e599b253f5b2fa456c0", "text": "This function is used to process a batch of net eth flows , two arrays .", "title": "", "metadata": ""}
{"_id": "fb0f181617b29a3b436e8c2831518190", "text": "Make sure derivative tokens are handled for the msg . sender .", "title": "", "metadata": ""}
{"_id": "bf66cb5c34e19fd72bb192dcae02109e", "text": "move Eth to Ethertote development wallet .", "title": "", "metadata": ""}
{"_id": "51bd0e9779bd68f0e6b8318eac4ac1f6", "text": "Calculates the fraction of total ( one-off + monthly ) withdrawable given the current timestamp .", "title": "", "metadata": ""}
{"_id": "08d11c4d95b4cad06a830c2a43240056", "text": "basic operations .", "title": "", "metadata": ""}
{"_id": "0ef86a500cf7607a52d6b5edbbd5e367", "text": "called by customer or service provider to place a subscription on hold .", "title": "", "metadata": ""}
{"_id": "888aeb858ec9c485e3dd486b92c03f89", "text": "transfer token from _from to _to .", "title": "", "metadata": ""}
{"_id": "a73192cdcab6534c3aa2f043e9aeadf8", "text": "Mint a new InterfaceToken token .", "title": "", "metadata": ""}
{"_id": "b9dc99fdbdd917eb98ebe26c9a72d429", "text": "Approves an amount for a certain currency , called before the contract is locked .", "title": "", "metadata": ""}
{"_id": "b2fb79443cc47eb59f34a09c1fe959be", "text": "Function which set the duration in which the tokens bought in threeHotHours will be locked .", "title": "", "metadata": ""}
{"_id": "06c1f01671fabd47d287d4971230012a", "text": "Approve spender _spender to transfer _amount from msg . sender . address ( ) .", "title": "", "metadata": ""}
{"_id": "ea93d73940c9ca8514a028616fb4587c", "text": "Methods based on Token . sol .", "title": "", "metadata": ""}
{"_id": "844ecac258e36bf419c53de03c24b534", "text": "Returns an estimate of profits to send , and reward .", "title": "", "metadata": ""}
{"_id": "3361dc2186284749dc059d9ee8b6956f", "text": "transfer contract balance to owner .", "title": "", "metadata": ""}
{"_id": "149f2bad4380788d185b2250f87b0c93", "text": "add num tokens which means that totalSupply will be added by num * decimals .", "title": "", "metadata": ""}
{"_id": "54463f307788a2c0877aaef98787b42e", "text": "allocates BXT tokens to buyers .", "title": "", "metadata": ""}
{"_id": "3f5c2e66db7a9b27e5ec227b671ae747", "text": "lock team address by crowdsale .", "title": "", "metadata": ""}
{"_id": "48f327034e9cea5e85416d8a8a32fb96", "text": "deauthorize a address to call game functions and set configs .", "title": "", "metadata": ""}
{"_id": "1be9c4112fec80a5f982fb04ca88c836", "text": "Ico start and stop .", "title": "", "metadata": ""}
{"_id": "f34c97a7af2f1539ca43c9e5cf73afb1", "text": "Modifier to prepend to functions rendering them only callable by the Etheraffle multisig address .", "title": "", "metadata": ""}
{"_id": "0d41a6a869bf0dbc598293bd1a5a6aec", "text": "modifier to check if the whitelist is not paused .", "title": "", "metadata": ""}
{"_id": "6d76b3ae4e6c98ffbb371fd895a9bce9", "text": "Called by the arbitrator to resolve a dispute .", "title": "", "metadata": ""}
{"_id": "2dab482ac5872e506adb00be507fe9af", "text": "return total count of registered UBet Checks .", "title": "", "metadata": ""}
{"_id": "6125d58c23af985244cccdbbe5c62536", "text": "data create helpers helpers .", "title": "", "metadata": ""}
{"_id": "e5dfc52cec41399adf29e034eae8f4d9", "text": "Direct refund to caller .", "title": "", "metadata": ""}
{"_id": "bb33240150d2c2e9ed22f138bfc3c824", "text": "eth to receive in wei .", "title": "", "metadata": ""}
{"_id": "a131fa4a6d8c59d2a836e51c65d2cf0d", "text": "If a mistake is done during upload , reverse using erase ( ) .", "title": "", "metadata": ""}
{"_id": "d4d167d644a1d9f7d477e00ee8dd4890", "text": "Force to transfer only by tokenSaleContract during sale period .", "title": "", "metadata": ""}
{"_id": "517df37103cf8ea9aaa2a89c97a99b4d", "text": "allow contract manager to decrease bonus over time .", "title": "", "metadata": ""}
{"_id": "0b34b3e8b329e8180d7b9c6f210a7534", "text": "Account service cost .", "title": "", "metadata": ""}
{"_id": "66baeead9cfe0546cd5b7689295e289e", "text": "In case of an emergency situation or other unexpected event an owner of the contract can explicitly enable refunds .", "title": "", "metadata": ""}
{"_id": "8538b7f103515921ac6a9cc817421a9f", "text": "Setter's Section .", "title": "", "metadata": ""}
{"_id": "3facc2d8c49e628546b4dd2d4c1c5855", "text": "staking function which allows users to stake an amount of tokens to gain interest for up to 30 days .", "title": "", "metadata": ""}
{"_id": "15c610fbbf191cf4b4428630eef8a044", "text": "Ends the CrowdSale .", "title": "", "metadata": ""}
{"_id": "6f0f7bb212c7fe90a113a4f3318e5882", "text": "ERC20 methods .", "title": "", "metadata": ""}
{"_id": "5a369ee1d659b1567614711ddae597ae", "text": "Provides a registered token's metadata , looked up by name .", "title": "", "metadata": ""}
{"_id": "d07592c87848e3f4a0c05440f2a81759", "text": "Air drop single amount .", "title": "", "metadata": ""}
{"_id": "a7648c02ca18693d3c72ee674c2b0cdc", "text": "Called by a voter to claim their reward for each completed vote .", "title": "", "metadata": ""}
{"_id": "70e5e29a74cb4d4bda933a57dd1a122e", "text": "Handles Casino deposits Custom ERC-223 Proposed Standard Addition .", "title": "", "metadata": ""}
{"_id": "a0e04e6b2b6e985fb45931ceec59d330", "text": "Airdrop tokens from bounty wallet to contributors as long as there are enough balance .", "title": "", "metadata": ""}
{"_id": "7e1b653ed6cb6dac4a9310f917ed6509", "text": "Creates a new Villain with the given name .", "title": "", "metadata": ""}
{"_id": "afb11b359f0b21a7d460bcc0551f6da3", "text": "To send tokens that were accidentally sent to this contract .", "title": "", "metadata": ""}
{"_id": "fa7114121efd09ca5a02efa867a978fa", "text": "Add deposit .", "title": "", "metadata": ""}
{"_id": "2c1ce60bd5fcf7350a9d17f2dda09d45", "text": "Transfer OwnerShip .", "title": "", "metadata": ""}
{"_id": "9178e2427b609e44c04ec6d00b738fea", "text": "get total bet amount for address for team .", "title": "", "metadata": ""}
{"_id": "c9c51bed69b25954f06c729eebdfc535", "text": "Transfer or sell tokens .", "title": "", "metadata": ""}
{"_id": "d0a48aa70236918ccbe2a8f5c5302fe2", "text": "Other functions .", "title": "", "metadata": ""}
{"_id": "09c8b039cd2082be784e8421f46a1a9e", "text": "Transfer funds from a user's balance into an Option .", "title": "", "metadata": ""}
{"_id": "d6a72e9e9b403de7169145b77381e18c", "text": "Second step to withdraw : after confirming divs , players can withdraw divs to their wallet .", "title": "", "metadata": ""}
{"_id": "be47988bfbcf163b08e0b5217ed28922", "text": "Destroy one's account .", "title": "", "metadata": ""}
{"_id": "8dfc1126099f9c6f8ba4679b700f7e91", "text": "Allocates tokens and bonus tokens to early-bird contributors .", "title": "", "metadata": ""}
{"_id": "cf87e76c7591e4a86bbabc14c80469c3", "text": "Returns all the relevant information about a specific avatar .", "title": "", "metadata": ""}
{"_id": "62e107934ac289523d27199baa7f0e68", "text": "change Gifto contract's address or another type of token , like Ether .", "title": "", "metadata": ""}
{"_id": "f10e3447cda53b45b2b90cf3944839d8", "text": "Returns an array with address of investors , amount invested and when invested .", "title": "", "metadata": ""}
{"_id": "34fedeb5d289af465db81fe0f92b27d4", "text": "no ether should be transferred to this contract .", "title": "", "metadata": ""}
{"_id": "a9086d12766a8b1b2a88c131ecdadd5a", "text": "Token Holders Only .", "title": "", "metadata": ""}
{"_id": "5ed527f0b469eef637552a838ed19511", "text": "Functions inherited from CrowdsaleLib library .", "title": "", "metadata": ""}
{"_id": "24a8c5855b4b671a67a0b6a64788a095", "text": "Owner : Withdraw excess funds which don't belong to Basket Token holders .", "title": "", "metadata": ""}
{"_id": "bcd5ec752738e5e64c4217e289a283dc", "text": "function to join the pre sale associated with variables , functions , events of suffix Pre .", "title": "", "metadata": ""}
{"_id": "60906040a5807010f451f4c2af1c0198", "text": "Withdraw unsale Token .", "title": "", "metadata": ""}
{"_id": "faf202d3061a45e46d8a1da8813fa649", "text": "set token for bounty hunter to release when ICO success .", "title": "", "metadata": ""}
{"_id": "b947c1a766a296c372c28141f0628642", "text": "process payments - record analytics and pass control to iaOnInvested callback .", "title": "", "metadata": ""}
{"_id": "5a430404a6f9dbff52bb0a6dac0f4141", "text": "onlyOwnerOrOperator adjust contract balance variable ( only used for max profit calc ) .", "title": "", "metadata": ""}
{"_id": "9c5394691e08ef1de43a062187088e81", "text": "force to end the game .", "title": "", "metadata": ""}
{"_id": "94f4f801498398186717afd91b8b08de", "text": "event OnBuyToken ( address _buyer , address indexed _seller , address indexed _tokenAddress , uint256 _transTokenAmount , uint256 indexed _tokenPrice , uint256 _sellerRamianTokenAmount ) ; .", "title": "", "metadata": ""}
{"_id": "40ee2a8155e127100302846a64e9bf59", "text": "To pause the contract's functions should the need arise .", "title": "", "metadata": ""}
{"_id": "c1fa4674fca1ae5565bdcbd15ff2a8cf", "text": "Return card details by id .", "title": "", "metadata": ""}
{"_id": "6c2c960ec28e333616eaab3fca319461", "text": "setEthRate function used to set the ether Rate .", "title": "", "metadata": ""}
{"_id": "be9fd8dfbf4bf13b7eee9a177cfba956", "text": "Commission CryptoTulip for abstract deconstructed art .", "title": "", "metadata": ""}
{"_id": "50a8970a3e7aace443f58b8231aa4655", "text": "set up true or false for a target address .", "title": "", "metadata": ""}
{"_id": "9a69d18c2e95d303ae85573800ae3acf", "text": "Locker notifying when releasing funds to update KPIs .", "title": "", "metadata": ""}
{"_id": "00bc69c518b14f3f72ca4e12ef062410", "text": "refund of the Non whitelisted .", "title": "", "metadata": ""}
{"_id": "5138dab087a58e64fadec6006c2fcf5b", "text": "Claim tokens for Musk team reserve wallet .", "title": "", "metadata": ""}
{"_id": "57ea63f58ca77af48a62e96999973d66", "text": "This is function , is needed to set new fee .", "title": "", "metadata": ""}
{"_id": "6be089478e89bed63bb23e0287ced248", "text": "End the auction and send the highest bid / / / to the beneficiary .", "title": "", "metadata": ""}
{"_id": "cb67b8589d0c4397a41882e685a5ec72", "text": "Fills a buy order by synchronously executing exchange sell orders .", "title": "", "metadata": ""}
{"_id": "7278abf7a49a7fa0cf0d6b1c67f29fe5", "text": "Set an upgrade agent that handles the upgrade process .", "title": "", "metadata": ""}
{"_id": "cc3fc0198d6673ade2d35bc50251578d", "text": "returns true if string _a ends with string _b .", "title": "", "metadata": ""}
{"_id": "bb0be5abd9f4bf06f516dacb839ee272", "text": "Returns the address currently assigned ownership of a given Dog .", "title": "", "metadata": ""}
{"_id": "452dd0687e519942762f9234f25a0801", "text": "change the owner .", "title": "", "metadata": ""}
{"_id": "715ff50b993d2e590c0fab1f2a7d94df", "text": "allows the owner to withdraw unspent POLY stored by them on the ST .", "title": "", "metadata": ""}
{"_id": "62571b7dadf3bc42d0e4aa66bc6ad2ce", "text": "calculates the next bid amount so that you can have a one-click buy button .", "title": "", "metadata": ""}
{"_id": "b7f668cd9533e0e8de3d728d48334497", "text": "Function to distribute tokens to the list of addresses by the provided amount .", "title": "", "metadata": ""}
{"_id": "28ba8f0bc6e377097384f09903c0a9b1", "text": "Called by the members of the loan to show that they agree with the terms of the loan ; the borrower must call this method before any lender could call the method lend .", "title": "", "metadata": ""}
{"_id": "88736f025ae34ce370ed9b3a145e27b3", "text": "After vesting period , this function transfers all available tokens from it's account to _recipient address .", "title": "", "metadata": ""}
{"_id": "c09456cc969d4147f8c9ce9dd26fd5f7", "text": "Allows the current owner to set the minter contract to a new smart contract .", "title": "", "metadata": ""}
{"_id": "fb7f50c8b4507e078578babe8a693849", "text": "Permite genera concesiones a direcciones de terceros especificando la direccion y la cantidad de monedas a conceder .", "title": "", "metadata": ""}
{"_id": "35d0d678015496b0cfec54622e2f350a", "text": "Allows contributing and voting only to human events .", "title": "", "metadata": ""}
{"_id": "6f0e616d635a743bab6b41e04c7de0c2", "text": "Internal so that feeds inheriting this one are not obligated to have an exposed update ( . . . ) .", "title": "", "metadata": ""}
{"_id": "9833cf024182bab18fa1188db17acdb2", "text": "Creates modifier to prevent short address attack .", "title": "", "metadata": ""}
{"_id": "4276b594c3437846aab1984f93d33ede", "text": "redeem tokens .", "title": "", "metadata": ""}
{"_id": "8cd49dc82958194854036e275b25a942", "text": "refund ETH - after unsuccessful ICO .", "title": "", "metadata": ""}
{"_id": "49eb96566588e8490b57b09a37a167fa", "text": "Change the controller .", "title": "", "metadata": ""}
{"_id": "a8c85c8469df3619e20067c54d1e7840", "text": "Credit to user eth from StackExchange at : https : / / ethereum . stackexchange . com / questions / 8346 / convert-address - to-string .", "title": "", "metadata": ""}
{"_id": "483ef2f46d1102b0fe69a3d972959b73", "text": "Methods of the utility contract can only be called by a valid member .", "title": "", "metadata": ""}
{"_id": "18a96eac112e98518b3cbfb770e57379", "text": "Settlement transaction - can be issued by anyone , but is designed to be handled by the dice2 . win .", "title": "", "metadata": ""}
{"_id": "74e36992905a6864cc4f2443f866daae", "text": "Send coins during ICO .", "title": "", "metadata": ""}
{"_id": "a740623c2c83a9a4bd2611ece4083394", "text": "This function will return the data about the pre-sale ( how many lands purchased , current price ) .", "title": "", "metadata": ""}
{"_id": "5cac0ffc22206fb2bc71aea357822234", "text": "execute passed proposal .", "title": "", "metadata": ""}
{"_id": "9dacc7c364f3a3ebbfb5310b668d2f2d", "text": "Check the validity of a signed request the expiration date .", "title": "", "metadata": ""}
{"_id": "5c80c53290b020d4883982a67e43bcc1", "text": "Adds a token deposit to deposits ; only the owner can call this function and it will only work if the account sending the tokens has called approve ( ) so that this contract can call transferFrom ( ) and take the tokens .", "title": "", "metadata": ""}
{"_id": "fbb26a034c1ac0a5de681e313e626e11", "text": "Buy Tokens .", "title": "", "metadata": ""}
{"_id": "bc77be43d19c0753149e6beedf06bcf8", "text": "Allows the owner to activate the main public ICO stage .", "title": "", "metadata": ""}
{"_id": "99e25fa77672e6d0ae2f25a775568441", "text": "Contract owner can withdraw ownerEth amount .", "title": "", "metadata": ""}
{"_id": "149b2c7fb7a93a93788911ae8f8c1ce0", "text": "called by the owner to AddToBlacklist .", "title": "", "metadata": ""}
{"_id": "98225980431d629123ed8501f966f90d", "text": "Update timestampLimit : the date on which the richest player and the last buyer will be able to share the contract balance ( 1 / 4 each ) .", "title": "", "metadata": ""}
{"_id": "bf73ea28e1d50dee8b860336e622e421", "text": "set minimum deposit limits .", "title": "", "metadata": ""}
{"_id": "4d1a69ee79fa475dd3e8059a5e3439cb", "text": "token decimals .", "title": "", "metadata": ""}
{"_id": "b3513c3e4be71a76b78715ca1dc6973b", "text": "internal ( command ) : .", "title": "", "metadata": ""}
{"_id": "87512d78b27449456ea459051cebf712", "text": "Propose a bounty transfer .", "title": "", "metadata": ""}
{"_id": "54c7aaa3ef70407d42f63f66a2dfd097", "text": "initializes a round of blackjack .", "title": "", "metadata": ""}
{"_id": "60f858ee562dd9b27b85e8e8aa9943d9", "text": "Burns a specific amount of tokens from tx . orgin .", "title": "", "metadata": ""}
{"_id": "33317fa69a3b44391f233c77e179784e", "text": "allow owner to pause ico in case there is something wrong .", "title": "", "metadata": ""}
{"_id": "d15e8f73499f4233484d93ba41f004af", "text": "The Oralize call back function .", "title": "", "metadata": ""}
{"_id": "bf6f5c4e404d78530fa0b9caacac4bfa", "text": "Initially safe sets preICO manager address .", "title": "", "metadata": ""}
{"_id": "ba65958588c5a2b1fa5bfe9f090d4519", "text": "Function to unpause transfer restriction .", "title": "", "metadata": ""}
{"_id": "69b306a279b9698a194db70205a41e4a", "text": "Gets star distance in thousandths of ly .", "title": "", "metadata": ""}
{"_id": "65c9cddd22793e90df7a00e2a4e52a87", "text": "paymentReminder Number of Wei remaining from payment .", "title": "", "metadata": ""}
{"_id": "c0862dd30111e98427a7a3c9d4851620", "text": "distributes reserved tokens .", "title": "", "metadata": ""}
{"_id": "1a709a053fe3ac4556e8705f3dc76cd6", "text": "Queries value at a defined checkpoint .", "title": "", "metadata": ""}
{"_id": "d9dba5a979466eb73bfd57c387f92169", "text": "Calculates game result and returns new balance .", "title": "", "metadata": ""}
{"_id": "a6ee7d2e90adb90895e68b2a3946a118", "text": "Set the exchange rate from ETH to USD .", "title": "", "metadata": ""}
{"_id": "b25d0d20ea9526119c001753451b49b6", "text": "Returns number of early purchases .", "title": "", "metadata": ""}
{"_id": "b99ed73611861b031429baf6660c287b", "text": "Cancel auction and return tulip to original owner .", "title": "", "metadata": ""}
{"_id": "67464769baf2d8bfc05ee7b497e0933e", "text": "Counts addresses involved in the swap based on the length of balances array for _swap .", "title": "", "metadata": ""}
{"_id": "951815cf7c638759a21b062e363bfa8b", "text": "creates a list of all the tokenIds .", "title": "", "metadata": ""}
{"_id": "64d891a683b496d07241d3089d35f765", "text": "NOTE : You must prefix hashes with '0x' .", "title": "", "metadata": ""}
{"_id": "cbdf082e7e12c58d953f5b1e6157ad06", "text": "Investing function that recognizes the receiver .", "title": "", "metadata": ""}
{"_id": "f34cca178a2b3b216f808c7b301d425c", "text": "Implements IClonedTokenParent .", "title": "", "metadata": ""}
{"_id": "1dd6e248406b1025e524e4df9c48b67b", "text": "dev functions .", "title": "", "metadata": ""}
{"_id": "4f284f19255bf4d0d1d16e494186924f", "text": "For remove discount for some purchaser - see WhitePaper .", "title": "", "metadata": ""}
{"_id": "e9df220d27fb3beaf0cc35910fe55eb5", "text": "Returns ready ( which have data to be used ) oracles count .", "title": "", "metadata": ""}
{"_id": "24634ed8e7db6fe52967ce578d0ecfb8", "text": "Get the name of an emoji .", "title": "", "metadata": ""}
{"_id": "dd525afc341eb6c820459210b41c8f4a", "text": "always true for deregistered accounts .", "title": "", "metadata": ""}
{"_id": "73effa74c4497059855220ddde615100", "text": "Adds or updates contributions .", "title": "", "metadata": ""}
{"_id": "d07e8f34fe8ea67a3de9b0e22038be45", "text": "Returns the timestamp of next queue opening .", "title": "", "metadata": ""}
{"_id": "8e7ca0e6715418dc9eae0d83be07a033", "text": "Returns the number of Monsters owned by a specific address .", "title": "", "metadata": ""}
{"_id": "3f4c08b46508940aae666af0c680d40d", "text": "functions pulled from the SafeMath library to avoid overflows .", "title": "", "metadata": ""}
{"_id": "aafb9c5545107bb28aaded128f3a8617", "text": "100 million BOE ever created .", "title": "", "metadata": ""}
{"_id": "4b6b5814482e26e79fc05808535be03c", "text": "Checks if CoFounder A is performing the action .", "title": "", "metadata": ""}
{"_id": "d830cb0a8ab42c1453daed899d193819", "text": "edit both title and metadata with one transaction , will make things easier on the front end .", "title": "", "metadata": ""}
{"_id": "ea0fee814e7402b2d8869601582f9eea", "text": "The way to check is pre ico stage in variable time .", "title": "", "metadata": ""}
{"_id": "5e8fd8286e71d48cd4712c25dd7a0914", "text": "Withdraw sales fees .", "title": "", "metadata": ""}
{"_id": "a84133abb81a8dd64e98765d34d176be", "text": "Throws unless msg . sender .", "title": "", "metadata": ""}
{"_id": "73ea31d08dc8f4ce4364e9d47a29180d", "text": "Cancel a bid .", "title": "", "metadata": ""}
{"_id": "d72b1f9ff245ebb8ff6dfc61a7df2616", "text": "When transfer tokens decrease dividendPayments for token owner and increase for receiver .", "title": "", "metadata": ""}
{"_id": "c7c0df83597b23f794231ec174b6594b", "text": "When the bribed Citizen decides to collect his fees .", "title": "", "metadata": ""}
{"_id": "0be4a60e9ebeeb028d94c1dd415d51fe", "text": "Initializes cont ract with initial supply tokens to the creator of the contract .", "title": "", "metadata": ""}
{"_id": "88d59bbe4f2908e78ec04f51c31bbec5", "text": "Approves a proposition of a partner token split .", "title": "", "metadata": ""}
{"_id": "2f36a42d7878a14afe27a87a4f74f51e", "text": "emit BuyBack .", "title": "", "metadata": ""}
{"_id": "046fe8c216d4c7c9b78162eedc323b27", "text": "Allow to change vesting agent .", "title": "", "metadata": ""}
{"_id": "bd00f6977bfc508cddc8072dfcdd37b3", "text": "Function to send eth to owners of this token .", "title": "", "metadata": ""}
{"_id": "1f4a097152131e5fea8d06b81a9b7180", "text": "SafeMath Start .", "title": "", "metadata": ""}
{"_id": "e4c41f81194e01c89a7bd1437da2afde", "text": "returns discount for the current time .", "title": "", "metadata": ""}
{"_id": "92582ead7cdfe7694df992025d6b72bb", "text": "update token mint rate per eth .", "title": "", "metadata": ""}
{"_id": "f1c00f148f2c6a4e2e8da6455c8b1841", "text": "Converts ETH dividends to RAMEN tokens .", "title": "", "metadata": ""}
{"_id": "a21ecdd25ab19e57d3efad721c381889", "text": "admin utils for accounts .", "title": "", "metadata": ""}
{"_id": "892b6aaaa48e2d666e3cd5884a43cde9", "text": "Checks if a given address currently has transferApproval for a particular Artwork .", "title": "", "metadata": ""}
{"_id": "92b4c6ba25bc29db66c7fd788a35d272", "text": "Withdraw balance to the Core Contract .", "title": "", "metadata": ""}
{"_id": "4116dc47eaaf06962ef171f2e7754be1", "text": "Get withdrawable balance from sale proceeds for a user .", "title": "", "metadata": ""}
{"_id": "d9fbb9220540e4194ede44208810d5b8", "text": "We check whether we collected the necessary minimum funds .", "title": "", "metadata": ""}
{"_id": "589959a740dfe7f0e5029df27580ca1b", "text": "return token sizes .", "title": "", "metadata": ""}
{"_id": "d8cada37abb2fe3adc6d6d34584ac9e2", "text": "Implementation of the standard transferFrom method that takes into account the finalize flag .", "title": "", "metadata": ""}
{"_id": "c2f29ef068b34d68b2fcc849c3f53e09", "text": "Start the contribution .", "title": "", "metadata": ""}
{"_id": "f122a95ea13ca3d82c38adb5068f366f", "text": "Modifier to make a function callable only by the owner of the contract .", "title": "", "metadata": ""}
{"_id": "52dfb8f40881b780f78b032d5046462f", "text": "Determines whether the Seller is the Maker or the Taker for a given Option .", "title": "", "metadata": ""}
{"_id": "1e0f0235bd1d5d57fed48ac855ba6473", "text": "Allow the contract to approve the mint restart ( Voting will be essential in these actions ) .", "title": "", "metadata": ""}
{"_id": "4ef8bceea14dfff0223c292804c73309", "text": "Total tokens issued in weis .", "title": "", "metadata": ""}
{"_id": "75d9df00c82cd07e3d99a3e6dbe0a818", "text": "Check if sale contract has enough tokens on its account balance to reward all possible participations within sale period .", "title": "", "metadata": ""}
{"_id": "b2a90457e276a8389ca1933cb2cf4070", "text": "Withdraw all not sold tokens .", "title": "", "metadata": ""}
{"_id": "3d1b687b045a8679cc87e3d9610e9f3b", "text": "Owner can Set TokenVault .", "title": "", "metadata": ""}
{"_id": "9b154961e14a480682e209bb98e0fea6", "text": "Does subtract in safe manner .", "title": "", "metadata": ""}
{"_id": "4ccdd29b285a4aa403ac80cb468cd5f9", "text": "Need to update sale params after publish because of UI bug .", "title": "", "metadata": ""}
{"_id": "256bc8dc2aa7b654ff33915fa7c3cd68", "text": "Modifier to make a function callable only when the contract is started .", "title": "", "metadata": ""}
{"_id": "ff08457c1738355591ced94b8ee94b29", "text": "Transfer different amounts of tokens to multiple beneficiaries .", "title": "", "metadata": ""}
{"_id": "2d7183efccbb6e98c6dee5bc49e42c57", "text": "Implementation for transferring BOPT to provided address .", "title": "", "metadata": ""}
{"_id": "63e93cd3c8bddbde46e038400742dad3", "text": "Override ERC20 transferFrom function in order to check whether the recipient account is frozen .", "title": "", "metadata": ""}
{"_id": "e8c627383b724df7c20fc689716f523b", "text": "copies the connectors from the old converter to the new one .", "title": "", "metadata": ""}
{"_id": "bbb9d16dfabbe3175bc314d050ee367b", "text": "Move the money to sender , and close the channel .", "title": "", "metadata": ""}
{"_id": "6d45aa1c0c9cca080cc6c1250f1594b0", "text": "Function to reserve tokens for buyer after sending ETH to crowdsale address .", "title": "", "metadata": ""}
{"_id": "f9db57b1a02fd793586ee13839d79ddb", "text": "Initialize tokensArray records with actual addresses of WP tokens baskets .", "title": "", "metadata": ""}
{"_id": "e2e43f8ee60b15b1b4ecb9c38122c64f", "text": "Check for the possibility of buying tokens .", "title": "", "metadata": ""}
{"_id": "8168d48c407b4295ac6870d2faec0777", "text": "Allow the owner to withdraw the house fees + house top ups .", "title": "", "metadata": ""}
{"_id": "d06f5709aa5c05c2decb79a00beee31f", "text": "this is just to inform the owner that a user wants to redeem some of their IOU tokens .", "title": "", "metadata": ""}
{"_id": "bb0b8d8412b2441109d84d4cecf3b30f", "text": "transfer the balance from token owner account to 'to' account - Owner's account must have sufficient balance to transfer - 0 value transfers are allowed .", "title": "", "metadata": ""}
{"_id": "584b14100f8f0c82e30d3aa4e102c0ef", "text": "Gets hash of an order for eth_sign .", "title": "", "metadata": ""}
{"_id": "61dc81d38266ae38d214bc5ddbd8b59c", "text": "Imports account's tokens from pre-Sale .", "title": "", "metadata": ""}
{"_id": "f7c89a1b5e71b0c6caa2ea2a6c61ea64", "text": "Transfer tokens to bounty partners ( 2 ) .", "title": "", "metadata": ""}
{"_id": "525e921b0470268ee61e47f5e588ca35", "text": "1 ether 1 spot .", "title": "", "metadata": ""}
{"_id": "71d76f6fb1d70e6f870e5f8d7e0d4c48", "text": "opens preparation for new voting on proposed Lottery Contract address .", "title": "", "metadata": ""}
{"_id": "94379bcea8840643c242bc1ce5102c1f", "text": "add an address that is responsible for creating deposits .", "title": "", "metadata": ""}
{"_id": "5196ca5f110964802c34f40d4d8d2258", "text": "Function is called by contributor to refund BNB token payments if crowdsale failed to reach soft cap .", "title": "", "metadata": ""}
{"_id": "f2bcce0bfefa62aad802bc6acc8566c2", "text": "function to run when the transaction has been veified .", "title": "", "metadata": ""}
{"_id": "9458dfbef520f308daaeb6f70eb6c801", "text": "Anyone can contribute to the prize pool ( i . e .", "title": "", "metadata": ""}
{"_id": "199bd1beb8d8b3773c2ddb8c2337a10e", "text": "contract status change to Unavailable .", "title": "", "metadata": ""}
{"_id": "6f4328482165b6c7909d96f1edc4bac0", "text": "Set _allowance for other address .", "title": "", "metadata": ""}
{"_id": "11b99669426756c365a105c9542c5c1b", "text": "Vote to freeze the fee of a certain network participant .", "title": "", "metadata": ""}
{"_id": "a31d1a248b2cdf5e74773578b7dfec12", "text": "Enable token transfers .", "title": "", "metadata": ""}
{"_id": "a73af47ebfbcf7871e71698333ca9567", "text": "Refund the investors in case target of crowdsale not achieved .", "title": "", "metadata": ""}
{"_id": "4aa7a29c1856052778741717daed8705", "text": "in case it ever needs to be updated for future Ethereum releases .", "title": "", "metadata": ""}
{"_id": "0edf25f787cfa846f31c007c5ee580d9", "text": "Returns current annual interest .", "title": "", "metadata": ""}
{"_id": "bcedb50b88e7ceb9912bad0d6146aaf3", "text": "Allows the current owner to begin to transfer control of the contract to a newOwner .", "title": "", "metadata": ""}
{"_id": "6af8ff2ab85fd27c6a602fa6c652b441", "text": "Withdraws all tokens from a wallet and sends it to the forward address .", "title": "", "metadata": ""}
{"_id": "0408b085c5c0c5396027a097a907d989", "text": "return if the sale is open .", "title": "", "metadata": ""}
{"_id": "e115d61817f8995f89b64e89c4b813eb", "text": "Determines how ETH is being transfered to owners wallet .", "title": "", "metadata": ""}
{"_id": "892a74d9e1bac95cfdb3c51cb535d5e3", "text": "transfer token to owner .", "title": "", "metadata": ""}
{"_id": "a23c0ffcd18b63cb314469d277369ee2", "text": "Creates a new Legendary Token Auction .", "title": "", "metadata": ""}
{"_id": "4977ccff42f9a1eee6bab1b4fa01356d", "text": "Method to activate withdrawal of funds even in between of sale .", "title": "", "metadata": ""}
{"_id": "20e50c5e6218ff0dbc57e7fb973981d7", "text": "Returns the timestamp for the given stage id .", "title": "", "metadata": ""}
{"_id": "69adbd08df6f831e286ca9b76441666e", "text": "ETH handler .", "title": "", "metadata": ""}
{"_id": "47f4668b97bfda62f12c18255ef4ed68", "text": "Throws if called by any account other than the systemAcc .", "title": "", "metadata": ""}
{"_id": "d57a1189cf11d1b1af6bc5a9455bea9f", "text": "Remove a manager .", "title": "", "metadata": ""}
{"_id": "c4f479b38acbbaca14b2fc0022e9679b", "text": "this methods clears the state of current lottery .", "title": "", "metadata": ""}
{"_id": "560bb7790f726ddc95d47a11999cee98", "text": "exchange lc to eth , 1000lc 0 . 7eth , .", "title": "", "metadata": ""}
{"_id": "ac38087fb2d18a73f491183633117e53", "text": "Creates an order to buy a token .", "title": "", "metadata": ""}
{"_id": "6fa06e3248e13b4ee3cb43ea419b150c", "text": "bonus rate percentage ( value 0 to 100 ) cap is the cumulative cap at this point in time .", "title": "", "metadata": ""}
{"_id": "799175ac7c679886b63b4317ed6f4801", "text": "emergency function .", "title": "", "metadata": ""}
{"_id": "755be296cd01abca6731020ae0d3a03e", "text": "Returns a descriptive name for a collection of NFTokens .", "title": "", "metadata": ""}
{"_id": "c90c5c2709f71267c4f1bc09488160c2", "text": "check to see if sender is owner .", "title": "", "metadata": ""}
{"_id": "f6823459c9dc613f9abe4e7a44f64fbd", "text": "allows First buyers to collect fee from transactions .", "title": "", "metadata": ""}
{"_id": "6b8628a36d4b4842f99d692c897055e4", "text": "Confirms previously requested ERC20 transactions .", "title": "", "metadata": ""}
{"_id": "2e761ff5f1ad0a6ad6d7f9e6c7c3b08a", "text": "Mint timelocked tokens .", "title": "", "metadata": ""}
{"_id": "48be0a3b90700a897a8396af71bb3a80", "text": "bool true if is allowed to transfer and false if not .", "title": "", "metadata": ""}
{"_id": "2f9f362351562e3bf64b119098d22cfa", "text": "Reclaim all ERC20 compatible tokens .", "title": "", "metadata": ""}
{"_id": "9b6842a5fc4cd29d29047512352504d9", "text": "End of external sales .", "title": "", "metadata": ""}
{"_id": "533289de04ad0e8aa03fb0c7fe196610", "text": "Allow anyone to buy tokens against ether , depending on the buyPrice set by the contract owner .", "title": "", "metadata": ""}
{"_id": "0235d2b6ded28fcf8ab123500e8414ab", "text": "pay the carnitaAsada .", "title": "", "metadata": ""}
{"_id": "ab4b544909de0a817f91913e0a4c4af9", "text": "Allow the owner to end the crowdsale manually .", "title": "", "metadata": ""}
{"_id": "8a7225632a38cf4179f64361b63a6a13", "text": "transfers ownership of contract back to wallet .", "title": "", "metadata": ""}
{"_id": "6d2466c18c92f7f780f4fa21f99b8e8c", "text": "Get annual fee in RvT .", "title": "", "metadata": ""}
{"_id": "a053d63d977a76558ba6fb1744333cbd", "text": "remove access from a contract to interact with this contract .", "title": "", "metadata": ""}
{"_id": "dd3bbd7a15ee16e3d7555cf98be9b928", "text": "calculates dividends for the account _for .", "title": "", "metadata": ""}
{"_id": "ccd69e52b66775761e75ea5188935f3b", "text": "refund if the softcap is not reached .", "title": "", "metadata": ""}
{"_id": "9b9e6b4e973d95ad666044539b0093d9", "text": "Multiplies two numbers , reverts on overflow .", "title": "", "metadata": ""}
{"_id": "bc7774cb8cfcf28f1776bf2cb40b560f", "text": "checks if the given address is passed as first parameters in the bytes field data the function call .", "title": "", "metadata": ""}
{"_id": "4bf2a9dc291b56893146256cff9f4d27", "text": "Get the pre-ICO investor address .", "title": "", "metadata": ""}
{"_id": "ad24917cd35b1e4b1e58577e9560bf50", "text": "called by the owner to disable tranfers .", "title": "", "metadata": ""}
{"_id": "c07ed32080be178e3e97c3a3424079cb", "text": "change transfer status for FarmCoin token .", "title": "", "metadata": ""}
{"_id": "2af14d95f15c803cfb899a0504ddc93f", "text": "Calculate the date when the holder can transfer all its tokens .", "title": "", "metadata": ""}
{"_id": "d2ee973c3de56101b54f22b40bb51c5c", "text": "Burns a specific amount of tokens from another address .", "title": "", "metadata": ""}
{"_id": "2505fed773d7b25bab5f5c7bcf83922d", "text": "Do the transfer from token address to to address value .", "title": "", "metadata": ""}
{"_id": "97232c57ebb72157b99df64ab0706536", "text": "Checks whether the sender is allowed to withdraw and has sufficient funds , then withdraws .", "title": "", "metadata": ""}
{"_id": "ffda5ce03c3388a3802f1ee3e729c2a8", "text": "Transfers all the funs on this contract to the sender which must be withdrawOwner .", "title": "", "metadata": ""}
{"_id": "82d4f4f5bd33f8b46c8398709da1665b", "text": "Function to withdraw ether .", "title": "", "metadata": ""}
{"_id": "df324f093d04cf74d32d7c1fc4bfa36d", "text": "withdraw any ERC20 token in this contract to owner .", "title": "", "metadata": ""}
{"_id": "c4fc4bac4d0a992e9403b8771687bbe9", "text": "Deposit WETH .", "title": "", "metadata": ""}
{"_id": "c5eacf45ad75f6896671e66ac38be4a2", "text": "unregisters multiple users at the same time .", "title": "", "metadata": ""}
{"_id": "6f2171ca958a0838d368e988a0c66164", "text": "Update the contents of your square , the first 3 personalizations for a square are free then cost 100 finney ( 0 . 1 .", "title": "", "metadata": ""}
{"_id": "4ec36d330016e5de9b22a47a22ff597b", "text": "recount reward of somebody .", "title": "", "metadata": ""}
{"_id": "402e895d372bbf336c826dd43ff93d39", "text": "Set token price .", "title": "", "metadata": ""}
{"_id": "5f64d0d9685e76d0aa06806f9d010196", "text": "Withdraw tokens from the reserve .", "title": "", "metadata": ""}
{"_id": "92203961abb85d1425d22487c6388b8f", "text": "The latest preiod .", "title": "", "metadata": ""}
{"_id": "7db96d565024fb64ad5b56adf9427a2e", "text": "Method to mint the team and pool tokens .", "title": "", "metadata": ""}
{"_id": "6900411e87c3e9f541cf8674638a5fca", "text": "Changes main contribution wallet .", "title": "", "metadata": ""}
{"_id": "49cb00b7a221acde077bcd5718a841c6", "text": "grant vested tokens .", "title": "", "metadata": ""}
{"_id": "d2a0fe34881c5a0323bf6b2d7d9bf1b5", "text": "add a new function to withdrawal rest token .", "title": "", "metadata": ""}
{"_id": "eee1e54c1a664acd7a3d03b12e5fc2b7", "text": "should be called after crowdsale ends , to do some extra finalization work .", "title": "", "metadata": ""}
{"_id": "89c0a7f78f8d81e67b97fad95e5c2514", "text": "Register a new ERC20 token .", "title": "", "metadata": ""}
{"_id": "9a38b80d0c665f4694f16566af778e15", "text": "internal part .", "title": "", "metadata": ""}
{"_id": "d4ec0842ad18b8e1c04c692df128cb92", "text": "Logs coinage record for sender and receiver .", "title": "", "metadata": ""}
{"_id": "4f66e4ec49a258a3c64f8b285a6c95f3", "text": "Permanently destroy tokens belonging to a user .", "title": "", "metadata": ""}
{"_id": "b1c712929a09d9284022c726442aaae0", "text": "Transfer a Lambo owned by another address , for which the calling address has previously been granted transfer approval by the owner .", "title": "", "metadata": ""}
{"_id": "aac6b0b6c28fdc53ce5c2ea4c1fc04aa", "text": "Returns an early purchase record .", "title": "", "metadata": ""}
{"_id": "9f90264461427c6f30eacef42dd9d999", "text": "Checks if referral tokens are available .", "title": "", "metadata": ""}
{"_id": "113f62d221d1687baec7e54d90c65fa3", "text": "Initialize an AuthenticatedProxy .", "title": "", "metadata": ""}
{"_id": "18a0733fbf0f9638fb7c82d4e22b03d2", "text": "ERC223 tokenFallback function allows to receive ERC223 tokens properly .", "title": "", "metadata": ""}
{"_id": "2f43e2344d5b4ad036b4586a78a3fc32", "text": "Function is internally called by the burn function .", "title": "", "metadata": ""}
{"_id": "776017346f08c221dd0777e8eea59ce4", "text": "someone can end ICO using this function ( require 3 days after ICO end ) .", "title": "", "metadata": ""}
{"_id": "76e3ecf142606c3de78f01aba0027ae2", "text": "Get mixing result , return the resulted skin id .", "title": "", "metadata": ""}
{"_id": "5663d30ba31e56cf5909bb034217aa14", "text": "Delete wallet by its index .", "title": "", "metadata": ""}
{"_id": "bbabfa46d05f670c2c8773d94b5c9cd3", "text": "The ownership is transferred only if the new owner approves it .", "title": "", "metadata": ""}
{"_id": "223cce1d009da89e9fb8647d13b24c4f", "text": "Enable transfers for token holders .", "title": "", "metadata": ""}
{"_id": "737133bd20b6ba33f9fdb7776a439434", "text": "Allows the user to perform the requestWithdraw operation .", "title": "", "metadata": ""}
{"_id": "88ff5378c9b73e2f770a4be75f2ff681", "text": "checks if the instance of market maker contract is closed for public .", "title": "", "metadata": ""}
{"_id": "80ea5aa6a6bd0a477ebc0c9cab922d31", "text": "Calculate the hash of a ring .", "title": "", "metadata": ""}
{"_id": "1a41dd8d86654753c080fdf9220f2010", "text": "function that will determine how many tokens have been created .", "title": "", "metadata": ""}
{"_id": "a892c11a5a23e1d1770f12fd925e1a79", "text": "Only allow a method to be executed if 'msg . sender' .", "title": "", "metadata": ""}
{"_id": "ba13f7609e846aced95efd3d1be81b8f", "text": "modifier to ensure it is after the deadline of last sale period .", "title": "", "metadata": ""}
{"_id": "a8d0167aaff6a00439635c78b110d103", "text": "! Migrate tokens to the new token contract .", "title": "", "metadata": ""}
{"_id": "95898080a7e75609878aebc07f0d1dc5", "text": "Only centerBanker is available and withdrawal of the amount of coins to owner is possible .", "title": "", "metadata": ""}
{"_id": "908667c25701eda1fb48d84db371fbcb", "text": "werify wether the message is form coo or not .", "title": "", "metadata": ""}
{"_id": "bee4d69e316a577e581bd21af61acf7c", "text": "Sanity check that allows us to ensure that we are pointing to the right BattleProvider in our setBattleProviderAddress ( ) call .", "title": "", "metadata": ""}
{"_id": "4a477dbea342f9ff33a899c7f325283c", "text": "Returns current timestamp .", "title": "", "metadata": ""}
{"_id": "4d81cbb91a9c9f59c096ad506bd35864", "text": "valid reward and user has enough funds .", "title": "", "metadata": ""}
{"_id": "627a7603d11996f2db4e29dd02c19adf", "text": "convenience to manage a growing array .", "title": "", "metadata": ""}
{"_id": "950131d3240e7630f93592ca8194b679", "text": "Reopen a bet .", "title": "", "metadata": ""}
{"_id": "c36bd07f81541d9f75c24db211d0a1ad", "text": "Set a cutoff timestamp to invalidate all orders whose timestamp is smaller than or equal to the new value of the address's cutoff timestamp .", "title": "", "metadata": ""}
{"_id": "2671a9f56feda44f68566a3a931a188c", "text": "Closing a term deposit before the end of the term , or maturity , comes with the consequence of saving only the doubled interest ! The penalty for withdrawing prematurely is the sum amount_to_invest .", "title": "", "metadata": ""}
{"_id": "fec8635e7d50c5290f05eba8be6d378f", "text": "Owner can issue tokens for investors , who made fiat contribution .", "title": "", "metadata": ""}
{"_id": "94053414a715c5792a2f77ebc145bc5a", "text": "Once a user gets paid out for a period , we lock up the tokens they own until the next period .", "title": "", "metadata": ""}
{"_id": "ad1e18d5b4125cf1bf481c29bd3165df", "text": "total number of napkins distributed by Charon .", "title": "", "metadata": ""}
{"_id": "2cfd4c3a0a0fcf0bc55bcb68a1c4c73a", "text": "Finalize crowdsale .", "title": "", "metadata": ""}
{"_id": "66e26423840820a0eb79e936cb84ba71", "text": "Replaces an owner .", "title": "", "metadata": ""}
{"_id": "ec5c2e8b988a85fbc2d19d465df88074", "text": "Remove from balance .", "title": "", "metadata": ""}
{"_id": "5aeb90260e03053ff62eae75c8f31a82", "text": "Set the minimum investment in wei .", "title": "", "metadata": ""}
{"_id": "840d91918405dbc2a325a70cacba1c75", "text": "Switches crowdsale stages : PreSale - Round One - Round Two .", "title": "", "metadata": ""}
{"_id": "b0bc26957fe10f7cb3a42ef7ce8405af", "text": "Allow users to buy tokens for newBuyPrice eth .", "title": "", "metadata": ""}
{"_id": "9907f472dfedaba4d2ba109eaaf075e8", "text": "Returns all the relevant information about a specific library .", "title": "", "metadata": ""}
{"_id": "33fcc38c12305bb7e33f0e05416965b3", "text": "generic transfer function can interact with contracts by supplying data / function calls .", "title": "", "metadata": ""}
{"_id": "2bd272d412d50b05450221932cbb9825", "text": "The BitcoinCityCoin constructor mints tokens to four addresses .", "title": "", "metadata": ""}
{"_id": "a2272ad04fbeb17ae03d148b3e86ef93", "text": "Register to take part in the competition .", "title": "", "metadata": ""}
{"_id": "ce9ad8bb4bc09fcacacd34c7819eb50f", "text": "Enable tokens transfers to allow tokens to be traded .", "title": "", "metadata": ""}
{"_id": "cfa7640cf805c7c9854e010db74f93f3", "text": "prevents contracts from interacting with LastUnicorn .", "title": "", "metadata": ""}
{"_id": "5dab45e65a66551aab50d6f65d60dccd", "text": "standard erc20 transferFrom function .", "title": "", "metadata": ""}
{"_id": "a8c8e1ae76b4cc40e07b627cebdca797", "text": "called by contract to generate random number between 0-9 .", "title": "", "metadata": ""}
{"_id": "c61e62e589692d22bf18eeb3e6757547", "text": "initialize the contract .", "title": "", "metadata": ""}
{"_id": "41d914c93a079c481590fae9b0923333", "text": "recover tokens tha were not claimed .", "title": "", "metadata": ""}
{"_id": "075ee5cf7b990bcd78b165ea34428520", "text": "Only ShareX team reserve wallet .", "title": "", "metadata": ""}
{"_id": "8993115b852a3c28e26d8e2a77ef9905", "text": "deleting actual file on the IPFS network is very hard .", "title": "", "metadata": ""}
{"_id": "b2c6e98e0e0425271af25c41126ef1c0", "text": "Sweep out any other ERC20 tokens that got sent to the contract , sends to the manager .", "title": "", "metadata": ""}
{"_id": "b5404ad6da2d83fe94f08b5912c28b31", "text": "This function overrides the startConditions function in the parent class in order to enable automatic transitions that depend on the timestamp .", "title": "", "metadata": ""}
{"_id": "f6cf64ce4ef17eb08d4b0ead0af36386", "text": "Allows the owner to set the exchange rate .", "title": "", "metadata": ""}
{"_id": "cfff283d5d249b245e9a8f33f866a1c3", "text": "Sets the token contract configuration .", "title": "", "metadata": ""}
{"_id": "6b797e226a1072a511c2a12a405e8039", "text": "Owner Management API .", "title": "", "metadata": ""}
{"_id": "8fea666df5db3a1059b4b90f18e61fc0", "text": "List all the checks in the .", "title": "", "metadata": ""}
{"_id": "b3b78d2908a30f404dafc5615606a9e7", "text": "Set team address ( only once ) .", "title": "", "metadata": ""}
{"_id": "e866ed50c0debd816afb0cb999c368de", "text": "Destroy contract and reclaim leftover funds .", "title": "", "metadata": ""}
{"_id": "f14c88eb0d4e0c87d50d33bf3a15fa7d", "text": "play offer game : target address , id , possible setting .", "title": "", "metadata": ""}
{"_id": "bdf84ce30682ea4e046563a14057a47e", "text": "thirsty function .", "title": "", "metadata": ""}
{"_id": "03c9a744e9ba5af3b0710023ff4f98a3", "text": "Mint functions .", "title": "", "metadata": ""}
{"_id": "8f2e5fbdd7de3a6609657a4fbf7e6aa4", "text": "Performs actual token sale process .", "title": "", "metadata": ""}
{"_id": "fc2bf340f3e2131be94c549efd59e17e", "text": "For owner .", "title": "", "metadata": ""}
{"_id": "28bd5ee5fe69b520fb151d07e0027ed0", "text": "set lockup for contributors .", "title": "", "metadata": ""}
{"_id": "b93aa67bd1acf587727b9ee2b41d4a4f", "text": "Retreive order based on given array _by .", "title": "", "metadata": ""}
{"_id": "78518fd0e0f2a61b7e53ceea7e44f34e", "text": "access modifiers for ceo .", "title": "", "metadata": ""}
{"_id": "7bfbe3d07bad9087fd58e2771ab25cc7", "text": "Buy in function to be called from the fallback function .", "title": "", "metadata": ""}
{"_id": "73bda0e32c394739f079fcc11b22f432", "text": "a subtract b .", "title": "", "metadata": ""}
{"_id": "3bb2774b001daa7997ead2211c6a06dd", "text": "Ensures execution completed successfully , and reverts the created storage buffer back to the sender .", "title": "", "metadata": ""}
{"_id": "43bff29cec9578c05bc429b34a463293", "text": "function to pause the contract can only be called from owner wallet .", "title": "", "metadata": ""}
{"_id": "e21d06e12028de285129c1733e1276dc", "text": "setMerchantDealsHistory allows owner to change address of MerchantDealsHistory .", "title": "", "metadata": ""}
{"_id": "b00817d5bc18d94459f4d7c7a5f4852c", "text": "overriding FinalizableCrowdsale finalization finalizes minting for the token contract , disabling further minting .", "title": "", "metadata": ""}
{"_id": "867a90c149171c782f2d2e815e964033", "text": "get records about approval .", "title": "", "metadata": ""}
{"_id": "0fc1038ea29979ad573de3914694d711", "text": "Create multiple Things at once .", "title": "", "metadata": ""}
{"_id": "89a0d34c57413ff6785aa301458e9b96", "text": "This function allows the owner of the contract to airdrop LMDA tokens to a list of addresses , so long as a list of values is also provided .", "title": "", "metadata": ""}
{"_id": "0f844e77234c7c18b7274194b9a0bde6", "text": "Adds two signed integers , throws on overflow .", "title": "", "metadata": ""}
{"_id": "d5563d7add8abd3a9f8c7ada798ae818", "text": "Throws if game is not paused .", "title": "", "metadata": ""}
{"_id": "6df970e4154992787e6355fe0ffa9726", "text": "Refund an accounts investment .", "title": "", "metadata": ""}
{"_id": "498510223047462aabdcaad04ce72cc9", "text": "Function to process cases when person send more than 10 ETH to smartcontract but never provided KYC data and wants / needs to be refunded .", "title": "", "metadata": ""}
{"_id": "55ac9545092603e11aa39d87189cd253", "text": "Controller can mark the receipt of funds attracted in other cryptocurrencies , in equivalent of ether .", "title": "", "metadata": ""}
{"_id": "be349ec0c1fd1fa9737f1f5d5538b88f", "text": "Transfer function makes it possible for users to transfer their Hire tokens to another .", "title": "", "metadata": ""}
{"_id": "a56cb2884f00461290c2521b77d9ee8c", "text": "Calculate the contract owner's fee .", "title": "", "metadata": ""}
{"_id": "2de96d4d7002f05f0ddd45aeb6fa9059", "text": "Function to be called when anyone sends us money .", "title": "", "metadata": ""}
{"_id": "c847143f16ce8962dd8cdfb0ee06a6bb", "text": "bet to the match .", "title": "", "metadata": ""}
{"_id": "a6131e322c2a39fb07d69c992893fa18", "text": "Buy token with Wei .", "title": "", "metadata": ""}
{"_id": "1f1a274a7410e9eda557cb294a3f14f2", "text": "Provides a registered oracle's metadata , looked up by name .", "title": "", "metadata": ""}
{"_id": "5be4f52c8caa5237a91165ed2e4d479c", "text": "Submit claim for a range of segments .", "title": "", "metadata": ""}
{"_id": "196e601b42c698173e51a8118f1684db", "text": "LBA token contract version .", "title": "", "metadata": ""}
{"_id": "c373b76ea394ab7a3d37bc9fdb98424f", "text": "Lets the organizer add a new data request .", "title": "", "metadata": ""}
{"_id": "5e9add046d6919b8f3f069862e12957d", "text": "This will eventually be expanded to include MoneyLine and OverUnder bets line is actually 10x the line to allow for half-point spreads .", "title": "", "metadata": ""}
{"_id": "2fc3816c5919a1495f6676da69066f89", "text": "Manager can get his / shes bonus after preICO reaches it's softcap .", "title": "", "metadata": ""}
{"_id": "d462b9b03b30db4402ecc296a81ae072", "text": "allow the sale to be changed for single deployment .", "title": "", "metadata": ""}
{"_id": "838fff7ae28b42798a9aa78297d66d6e", "text": "you can only vote once .", "title": "", "metadata": ""}
{"_id": "db104fe81fb17d7dfb39e33cbcaef528", "text": "Contribute tokens from delegated address .", "title": "", "metadata": ""}
{"_id": "95b39b15c0f498c43f2f7a4034c1f9aa", "text": "set min eth contribute .", "title": "", "metadata": ""}
{"_id": "f74230cc1f54f0c42ad15e93c5ea706c", "text": "Returns the calculated reward amount .", "title": "", "metadata": ""}
{"_id": "6de52e5539b318e579fd321217c6e131", "text": "Set current Commission Rate .", "title": "", "metadata": ""}
{"_id": "4c4a528f5291ffbbab0daae91af0a1c1", "text": "Owner can allow a contract to mint tokens .", "title": "", "metadata": ""}
{"_id": "ba3040d3f6bdbba0de69ccf06162ad7d", "text": "returns tickets numbers for the current draw in the possession of specified address .", "title": "", "metadata": ""}
{"_id": "011bbfb70153507fa7ce50b9ec9982ff", "text": "Buys tokens on behalf of an address .", "title": "", "metadata": ""}
{"_id": "5e7538fd2a91dd27a7684a45b9326f2c", "text": "Rent out a deed to an address .", "title": "", "metadata": ""}
{"_id": "a81162427145018a6cee05039627a7d2", "text": "transfer all unsold token to bounty balance ; .", "title": "", "metadata": ""}
{"_id": "d60b5f3ca5fc18fc69662bce4e2b3dcc", "text": "Current / next campaign charity balance .", "title": "", "metadata": ""}
{"_id": "3064a3d50c8050db2bbe57e43a96e815", "text": "set the target sale address .", "title": "", "metadata": ""}
{"_id": "0d0853ec243cdf8c6542ca200ff46cc4", "text": "Takes the results of the oraclize Etheraffle api call back and uses them to calculate the prizes due to each tier ( 3 matches , 4 matches etc ) then pushes them into the winning amounts array in the raffle in question's struct .", "title": "", "metadata": ""}
{"_id": "427ac07ce2a16abaf6731ab3a6a7e10b", "text": "Set smart contract owner .", "title": "", "metadata": ""}
{"_id": "aa419e0f3c81babc4789120797770dd2", "text": "Only people with profits .", "title": "", "metadata": ""}
{"_id": "dacacb9ca0e034f6512082e102feb28a", "text": "Returns the address currently assigned ownership of a given Player .", "title": "", "metadata": ""}
{"_id": "dce9e05c0b63b453acf570e0cf23de96", "text": "Deposit amount to channel .", "title": "", "metadata": ""}
{"_id": "aee5ac36369726b69a470e9675ea44e7", "text": "When MIN_CAP is not reach : 1 ) backer call the approve function of the RedPillToken token contract with the amount of all RedPillTokens they got in order to be refund 2 ) backer call the refund function of the Crowdsale contract with the same amount of RedPillTokens 3 ) backer call the withdrawPayments function of the Crowdsale contract to get a refund in ETH .", "title": "", "metadata": ""}
{"_id": "8ffad87236bc6828ff600b668e175574", "text": "Withdraw function sends all the funds to the wallet if conditions are correct .", "title": "", "metadata": ""}
{"_id": "93b886d451c76643ccef36b309ee2cf0", "text": "Return total number of tokens in existence .", "title": "", "metadata": ""}
{"_id": "f212d1fef8ca6da8ccc3ba5675e7438e", "text": "Transfer function to be compatable with ERC20 Standard .", "title": "", "metadata": ""}
{"_id": "4871800b25758e335bbed3e2ed4e586d", "text": "Throws if token is not under maintenance .", "title": "", "metadata": ""}
{"_id": "b2c67346472522d62a82786d1e4ffbfc", "text": "Throws if called by any account other than the owner .", "title": "", "metadata": ""}
{"_id": "05b67640baaf5f70238130ea45b436c6", "text": "ensures the member is whitelisted .", "title": "", "metadata": ""}
{"_id": "5f6d344c58edab4c72c0c932ef916617", "text": "Allow another address to spend tokens on your behalf while mitigating a double spend .", "title": "", "metadata": ""}
{"_id": "97b3267c4dca85c4e17524a369980b3d", "text": "The following modifiers only allow specific roles to call functions with these modifiers .", "title": "", "metadata": ""}
{"_id": "739e189a90fffc8ca1db5f264ad9554c", "text": "Allow anonymous contributions to this crowdsale .", "title": "", "metadata": ""}
{"_id": "33675b1878a8659da2492ac9b5675650", "text": "Function Transfers the funds to accounts described in the whitepaper .", "title": "", "metadata": ""}
{"_id": "be0ce58b29d0fcd2d1280c2217411038", "text": "Name must only include upper and lowercase English letters , numbers , and certain characters : ! ( ) - .", "title": "", "metadata": ""}
{"_id": "eca55bff0a6557a11450161c56fc53be", "text": "is a number pending for this requestor ? .", "title": "", "metadata": ""}
{"_id": "4e0ddd207e35290715c19f87e2dec8f6", "text": "Transfer a token to another address .", "title": "", "metadata": ""}
{"_id": "ff7038e2ba829492e6217eff5a36b5d6", "text": "Activates the trasfer for all users .", "title": "", "metadata": ""}
{"_id": "aeab2a057ca2b931182deab09ff8f7e4", "text": "Assigns a new address as the CEO .", "title": "", "metadata": ""}
{"_id": "33e8b50934da158aa02a8324bfe34567", "text": "This method is used to get the current amount user can receive for 1BTC - - Used by frontend for easier calculation .", "title": "", "metadata": ""}
{"_id": "5f61fad89d427dfc71ebad9066bd9fcc", "text": "contruibute data .", "title": "", "metadata": ""}
{"_id": "086027f336c9d2fdbfc29dc8ed84fa47", "text": "Agent sign on user data by agent .", "title": "", "metadata": ""}
{"_id": "2bd6d66a90b0195d531a3b0b7b9d4c56", "text": "Allow founder to start the Crowdsale phase3 .", "title": "", "metadata": ""}
{"_id": "a15493727f5fcc06aef4765b897d0fe7", "text": "Get Businesses per city .", "title": "", "metadata": ""}
{"_id": "d7792ce3b8b989593e2e641eb81e2f1d", "text": "For Mining .", "title": "", "metadata": ""}
{"_id": "af65dd6bf64f28b4dd67b2bb6b27886a", "text": "burn tokens belonging to a specified address .", "title": "", "metadata": ""}
{"_id": "263e598bf13d92d2c7813f269bc90d6a", "text": "Change pubKey , must be existing registrant or Rivetz .", "title": "", "metadata": ""}
{"_id": "2838692196f3402a4aa64ff1b7b5c20f", "text": "set the minimum contribution to _minContrib .", "title": "", "metadata": ""}
{"_id": "d158b9c68e27d225a04a2300155e67c5", "text": "Prevent the development fund from transferring its tokens while they are locked .", "title": "", "metadata": ""}
{"_id": "b7d8796e56e3ba69e32fae2825657ea0", "text": "Get contract version .", "title": "", "metadata": ""}
{"_id": "ea00e2b18497ddb84a8bf973e7bb7259", "text": "Function set new preIco start time .", "title": "", "metadata": ""}
{"_id": "3ed33342934a12a864458c51829c8833", "text": "finalization function called by the finalize function that will distribute the remaining tokens .", "title": "", "metadata": ""}
{"_id": "8f4d175292e70319e7be74e4129fde5d", "text": "Add ambassadors dynamically .", "title": "", "metadata": ""}
{"_id": "4b3aa965cd2fb19a88396adcb4ccb861", "text": "Checks if a given address is the current owner of a particular Rabbit .", "title": "", "metadata": ""}
{"_id": "d71029fccea790c7741a175d37f1addd", "text": "Get investors count .", "title": "", "metadata": ""}
{"_id": "3756423a4c452b446dc48722da181420", "text": "Finish ICO / PreICO .", "title": "", "metadata": ""}
{"_id": "87067b947ba21936c1e38f8752aa00a4", "text": "getState used to findout the state of the crowdfund .", "title": "", "metadata": ""}
{"_id": "630c6bedc0adebf14c3f492f299f18cb", "text": "change manager .", "title": "", "metadata": ""}
{"_id": "3d32b06df31d1c9ad69ce7844a0ccb21", "text": "It will be possible to refund only if min ( soft ) cap is not reached and refund requested during 30 days after tokensale finished .", "title": "", "metadata": ""}
{"_id": "94debe45c41404722559a6f040b0b89e", "text": "allow another account / contract to spend some tokens on your behalf throws on any error rather then return a false flag to minimize user errors also , to minimize the risk of the approve / transferFrom attack vector ( see https : / / docs . google . com / document / d / 1YLPtQxZu1UAvO9cZ1O2RPXBbT0mooh4DYKjA_jp-RLM / ) .", "title": "", "metadata": ""}
{"_id": "4e915737a8f70fc870a77262f5e16e0e", "text": "Upgrade token functions .", "title": "", "metadata": ""}
{"_id": "855606071aee0868ae2758e167a30fda", "text": "Section 2 - modifiers .", "title": "", "metadata": ""}
{"_id": "ddefe457fedb95d33bc6e2219dc5e9ad", "text": "Transfers the funds of the investor to the contract of return of funds .", "title": "", "metadata": ""}
{"_id": "5ab3dbc9772fa23e38ca33df4026c76d", "text": "The contract is not designed to hold and / or manage tokens .", "title": "", "metadata": ""}
{"_id": "5622a8bdf7d05330b01768b49030b49b", "text": "Return a pseudo random number between lower and upper bounds given the number of previous blocks it should hash .", "title": "", "metadata": ""}
{"_id": "e7fae8c1cbb0d2aa0352924a04418559", "text": "Returns the hand rank and payout of a Game .", "title": "", "metadata": ""}
{"_id": "de21fd38913f5e95ae98a483418b4a24", "text": "Returns the corresponding signature for a specified digital fingerprint .", "title": "", "metadata": ""}
{"_id": "7b401d8cf77e97a0f5ceaafd641b3d69", "text": "Transfer owner's power to others .", "title": "", "metadata": ""}
{"_id": "81f426f2bbe4f77566861aa7fa548fd7", "text": "Transfer funds .", "title": "", "metadata": ""}
{"_id": "74efd2f156a96765eaccf0233ebad9dc", "text": "We accept payments other than Ethereum ( ETH ) and other currencies , for example , Bitcoin ( BTC ) .", "title": "", "metadata": ""}
{"_id": "7ff2c4d1990ce497f79d485ad5b867d7", "text": "Sign that the DApp is ready .", "title": "", "metadata": ""}
{"_id": "4143e4bd6fd369fdc4dcdb8884f9595d", "text": "Method called by the vault to confirm a payment .", "title": "", "metadata": ""}
{"_id": "36823bf7106d68a62f1416dc2fdb8d18", "text": "get addresses who has bonus tokens .", "title": "", "metadata": ""}
{"_id": "96b60ee9041550cd964b4e3e199f303d", "text": "Extended Functionalites .", "title": "", "metadata": ""}
{"_id": "c7a463b90091098279e151cedd5dd504", "text": "To get the token balance of a user .", "title": "", "metadata": ""}
{"_id": "0d4ffb4d544a7792621c847dc5e333c2", "text": "erc20 : public ( read only ) .", "title": "", "metadata": ""}
{"_id": "fe5782b2d7a4515b8c03e56ddd04ccfa", "text": "Static information getters .", "title": "", "metadata": ""}
{"_id": "cd7e16223418b6b6598c9ee7b4daa300", "text": "Admins functions .", "title": "", "metadata": ""}
{"_id": "842606088f8d04c88eccc0a3de3b294c", "text": "Called when deposit address needs to change .", "title": "", "metadata": ""}
{"_id": "d1922dcb9c26754361f51a078010f064", "text": "Increases totalSupply by specified amount .", "title": "", "metadata": ""}
{"_id": "5cf80dbfe46140a566eae944a21d1c8d", "text": "ERC20 top down .", "title": "", "metadata": ""}
{"_id": "1472443ad9cb793cb80f4b839b142031", "text": "Internal function to clear current approval of a given token ID .", "title": "", "metadata": ""}
{"_id": "d0b7a99756027a621d4f8952a0e406ca", "text": "Returns is Pre-Sale .", "title": "", "metadata": ""}
{"_id": "4b21cdeb3190e719e083f2f41989622d", "text": "MINTING SUPPORT - Rewarding growth tokens for value-addeddata suppliers .", "title": "", "metadata": ""}
{"_id": "ea426b388b75b4604e8b79df05368e59", "text": "Return the current bonus .", "title": "", "metadata": ""}
{"_id": "7c1e6f2cd91536b1719b494dba66e911", "text": "This function checks if the expiry date has passed and if it has , then returns the tokens to the beneficiary .", "title": "", "metadata": ""}
{"_id": "ff91713f1db06e8713fc0cdb736625fd", "text": "Get balance of address .", "title": "", "metadata": ""}
{"_id": "120faa20707fa8f45f0275ad94505632", "text": "Transfer tokens from an different address to another address .", "title": "", "metadata": ""}
{"_id": "c86826c3c21000dd13abc655896ce02d", "text": "Sets the oversight address ( not the contract ) .", "title": "", "metadata": ""}
{"_id": "cebe3ddd9b3f6355f109e69369868cf6", "text": "shows tradability of the contract .", "title": "", "metadata": ""}
{"_id": "9ac9af55ec0a389ecd0ffce04478cbea", "text": "Modifier to limit access to admin functions .", "title": "", "metadata": ""}
{"_id": "d812444d1346d4306b227023824324ac", "text": "buy clone of token .", "title": "", "metadata": ""}
{"_id": "016e12537cd30ec72ce25a71a75d647c", "text": "Checks whether investment is permitted for a participant .", "title": "", "metadata": ""}
{"_id": "3a2058bff085cd03d33048374a93eb09", "text": "Buys item .", "title": "", "metadata": ""}
{"_id": "1eb800c633a051a725886dedcc25820f", "text": "To manage ERC20 tokens in case of accidental sending to the contract .", "title": "", "metadata": ""}
{"_id": "d90ddda3956a5e7b8b9f8c7d8c97695c", "text": "Get current rate from oraclize and transfer tokens or start unsold tokens allocation .", "title": "", "metadata": ""}
{"_id": "3f640f6b3e89bebc3437cd6a9f8facce", "text": "A boolean indicating whether a new game can start , based on the active times .", "title": "", "metadata": ""}
{"_id": "d79cb1393dc3715722371fa6b3144a8d", "text": "Increase total fund of a bet .", "title": "", "metadata": ""}
{"_id": "98fb3f27f3340ba394f07a7fb37ad55e", "text": "judge whether we need to release some of the locked token .", "title": "", "metadata": ""}
{"_id": "456b35427698dd920e414f166cd7e026", "text": "Total sumbitted for mining .", "title": "", "metadata": ""}
{"_id": "9b1ed3029d5cacf6f05a492934dacb51", "text": "changeFounderMultiSigAddress function use to change the ownership of the contract .", "title": "", "metadata": ""}
{"_id": "e4f653a6a720ad6c5b4d6e8f0834aa26", "text": "Collected fees sit here until they are distributed .", "title": "", "metadata": ""}
{"_id": "b6b1f365a9ee09b3e9c2cf5363f6fcba", "text": "Get any token metadata by passing in the ID .", "title": "", "metadata": ""}
{"_id": "e483b0d02d38600729e0b1c4102f5839", "text": "buy ticket start game init game by conditions .", "title": "", "metadata": ""}
{"_id": "0efc663e09350234c6e35b03f4bfa0c6", "text": "burn tokens on behalf of someone .", "title": "", "metadata": ""}
{"_id": "6a393b5bd1d28de045b00a97c21f5772", "text": "Get the balance of a specific account by its address .", "title": "", "metadata": ""}
{"_id": "4d30cad9a66f87dfb85f4e268d72edd7", "text": "Returns the number of transferable company's tokens .", "title": "", "metadata": ""}
{"_id": "eca05d2521f7ad300510c33cbf01a971", "text": "Computes the amount of fees given total segments , total number of profiles and price per segment .", "title": "", "metadata": ""}
{"_id": "150fbf5518566c8ff1c990e8b39252e0", "text": "change Withdrawable for one round after every month for investor in top .", "title": "", "metadata": ""}
{"_id": "07e0edc2854b94bc4c37186631eec19e", "text": "issuePreferedTokens - prefered tokens issued on the hackathon event grant special rights .", "title": "", "metadata": ""}
{"_id": "719013b987fed4c123797d5dac6fee46", "text": "Function to check the amounts of tokens that an owner allowed to a spender .", "title": "", "metadata": ""}
{"_id": "b75a579524e99f7f69c184e4224463cc", "text": "End sale in crrent round .", "title": "", "metadata": ""}
{"_id": "dfabc17dcd72b7610f3e4e70c92adbea", "text": "Functions Public .", "title": "", "metadata": ""}
{"_id": "964d36aa681f2bc25dd6d10f3fb1d147", "text": "set developers account .", "title": "", "metadata": ""}
{"_id": "60286bcf9acdf116ce2633871e71d74e", "text": "use this when extending has changes .", "title": "", "metadata": ""}
{"_id": "2152c94afcf30454b14e705db89bc2e3", "text": "Executes transferAllowed ( ) function from the Controller .", "title": "", "metadata": ""}
{"_id": "a5710e687fd2e560ece3a62ea7787b19", "text": "initiates Oraclize call for random number .", "title": "", "metadata": ""}
{"_id": "4d9614d6abf5762d24cfe4468f71de71", "text": "If somehow another unrelated type of token was sent to this contract , this can be used to claim those tokens back .", "title": "", "metadata": ""}
{"_id": "a3aa5a284b9a1f5824168bfddf68afca", "text": "solhint-disable - next-line code-complexity .", "title": "", "metadata": ""}
{"_id": "6f6a67fa8abb39833eb8bb67f16c9d33", "text": "set the token's tokenExchangeRate , .", "title": "", "metadata": ""}
{"_id": "6ecf47a393b9d204abcf8d373f069724", "text": "starts a new game .", "title": "", "metadata": ""}
{"_id": "ba7d50c32c17c2dbd422f7ab788ebc68", "text": "Taks fuer Initialisierung . .", "title": "", "metadata": ""}
{"_id": "45508798d61d4b483931d48ed604adf7", "text": "proof is currently a placeholder for when associated proof for addressType is added .", "title": "", "metadata": ""}
{"_id": "9ca7cf61309bfd2808d708a6d0d81b89", "text": "The new rate has to be passed in format : 100 rate 100 000 passed rate ( 1 ether 100 tokens ) 1 rate 1 000 passed rate ( 1 ether 1 token ) 0 . 01 rate 10 passed rate ( 100 ethers 1 token ) .", "title": "", "metadata": ""}
{"_id": "bfa68feffc73c0ded4120f53388e8519", "text": "Gets the locked balance of the specified address .", "title": "", "metadata": ""}
{"_id": "bd1ffa67c49e603a0a99cd177a28c254", "text": "Stores a spender's minimum token purchase amount .", "title": "", "metadata": ""}
{"_id": "8f5023b2a6a63b49e504107de7c6554a", "text": "gets _address and _value as input and sells tokens to '_address' throws if not enough tokens after calculation .", "title": "", "metadata": ""}
{"_id": "c69c0d72e8e6892b7168bd0d979248df", "text": "true if the transaction can mint tokens .", "title": "", "metadata": ""}
{"_id": "b638ce8b2c3160bc7a7c718fafd7ae3c", "text": "this method is used to finalize Lottery it generates random number and sends prize it uses 32 blocks to generate pseudo random value to determine winner of lottery .", "title": "", "metadata": ""}
{"_id": "8768fc3e99bd42cab0440168e69a52ae", "text": "For deposits that do not come thru the contract .", "title": "", "metadata": ""}
{"_id": "b7163f4a857d4b3bef6e6647bf730d24", "text": "Transfer ownership of _child to _newOwner .", "title": "", "metadata": ""}
{"_id": "e9e1748bddf92126280a02ae33bd7a07", "text": "Batch issue tokens on the presale .", "title": "", "metadata": ""}
{"_id": "7ac4db65267ae4f5bb709b0cb81f0b7d", "text": "It will be called by owner to start the sale .", "title": "", "metadata": ""}
{"_id": "38becdeb2ac4a823e2bcac5e7fccebba", "text": "Check if ICO is active .", "title": "", "metadata": ""}
{"_id": "da90462298fbd5e231bcccb82dc40ea8", "text": "creates a new factory by cloning the factory specified in setFactory .", "title": "", "metadata": ""}
{"_id": "c0aad614bc063082062eb2a843e36527", "text": "Transfer an amount from the owner's account to an indicated account .", "title": "", "metadata": ""}
{"_id": "1e413025175f844281ffaeca1566635f", "text": "allows withdrawal of funds after selfdestructing of a child contract which return funds to this contract .", "title": "", "metadata": ""}
{"_id": "a0e0b017b964562bc84d232ca4435aee", "text": "Returns marginal price of an outcome .", "title": "", "metadata": ""}
{"_id": "c77727419fcb329631dd52c8cdb6a0cf", "text": "Set minimum contribution for round .", "title": "", "metadata": ""}
{"_id": "30094cb6545ff0476a0430dcd3548d4d", "text": "Creates the blacklist of tokens that are not able to be taken out of the contract ; can only be done at the deployment , and the logic to add to the blacklist will be in the constructor of a child contract .", "title": "", "metadata": ""}
{"_id": "5254ae78ce7f19e90a34646f2f0c0882", "text": "Returns address by position .", "title": "", "metadata": ""}
{"_id": "937b67305cc57f5d42656614c1e9f0b9", "text": "The project Manager address .", "title": "", "metadata": ""}
{"_id": "ce267c9362861ee740bfa0418d0faa08", "text": "Get information pertaining to the current game .", "title": "", "metadata": ""}
{"_id": "bd903f1510cf2d34d2ed5894bb1273f4", "text": "Burn the percentage of tokens not sold from the founders and bounty wallets .", "title": "", "metadata": ""}
{"_id": "3185f629010b1203c0de97a9e92d2e6f", "text": "converts ETH to TOKEN and sends new TOKEN to the sender .", "title": "", "metadata": ""}
{"_id": "327650e4b1e3ef6f183195ee1c37352b", "text": "returns the number of the tokens available for the ico .", "title": "", "metadata": ""}
{"_id": "dfe9180f6b7f4f31f1b1d86b994ae6eb", "text": "action for issue tokens .", "title": "", "metadata": ""}
{"_id": "9cde1ec61b8f9ed51b61e3d946cd5eff", "text": "Gets total seeded supply commanders .", "title": "", "metadata": ""}
{"_id": "9c9880545575a6ba8ffa3058e1c702a9", "text": "Disable minting forever .", "title": "", "metadata": ""}
{"_id": "05f0ed6a638a94ae87b3808d1cf99a0a", "text": "function to stop the crowdsale can only be called from the owner wallet .", "title": "", "metadata": ""}
{"_id": "f8b27554851fce23cc1d2820a6157c5c", "text": "Lock functions .", "title": "", "metadata": ""}
{"_id": "f59295adaddf38f1cebb3fcb9c8ea298", "text": "anyone can claim reward for a voter .", "title": "", "metadata": ""}
{"_id": "a69fd565bd7923a754a92e87ae6c06a7", "text": "Anyone can pay the gas to create their very own Tester token .", "title": "", "metadata": ""}
{"_id": "4dfe68fa39b4da0cbaf7408208fc7ada", "text": "Looks like transfer of this token , but actually frozenTransfers SMR .", "title": "", "metadata": ""}
{"_id": "db00769b1bf74ccf0f91f7c38a67647c", "text": "Open new session , only escrow can call .", "title": "", "metadata": ""}
{"_id": "d3f436cfdffb733ffa999e6e66beaf69", "text": "sale coin with time locking only the manager can call this function and this operation should be confirmed .", "title": "", "metadata": ""}
{"_id": "e9e166874941ebbe0d0996df46c53232", "text": "oraclize END function that is called from KYCBase .", "title": "", "metadata": ""}
{"_id": "d250a73c15543fec13dbd5575c09cb59", "text": "Sets a new COO .", "title": "", "metadata": ""}
{"_id": "6819086ec125491716a7f5f4b3a5940d", "text": "Callback function invoked by a solver to submit the result of a verification computation .", "title": "", "metadata": ""}
{"_id": "d9ee4f81e09abc77b930708e69ffd06f", "text": "Functions for manual calling via same name function in PacioICO ( ) .", "title": "", "metadata": ""}
{"_id": "787c374bbf7fab5f2dc9b79066fce7e3", "text": "Tip user for his post / comment .", "title": "", "metadata": ""}
{"_id": "8b97d9f40d4978cc2b86c356f1dd2059", "text": "Destroys specified amount of senders asset tokens .", "title": "", "metadata": ""}
{"_id": "0c057d769359f3303cbd6f7cc5583e1b", "text": "Modifier to allow only founder to transfer .", "title": "", "metadata": ""}
{"_id": "ad20ac02908e5dd130e4d243defb7f19", "text": "Perform the inevitable actions which cause release of that which each FinderHyper is built to deliver .", "title": "", "metadata": ""}
{"_id": "ffad7becda1610cb79155561a7b83bc8", "text": "Buyer balance in wei .", "title": "", "metadata": ""}
{"_id": "eb5583182cf6a5de33511746155153db", "text": "Sets up alll the addresses needed for the token distribution .", "title": "", "metadata": ""}
{"_id": "f09bae6d560e940d2e4217b2ac5fd48c", "text": "Set the reference to the auction contract .", "title": "", "metadata": ""}
{"_id": "2386883effb46158e6b05d5059fb63ca", "text": "For creating Card .", "title": "", "metadata": ""}
{"_id": "8fe276c925ef82e92264f15bfe54a7e5", "text": "ERC20 versions .", "title": "", "metadata": ""}
{"_id": "9a0d83f6dc2b5b4e5336360bed97e43e", "text": "check Ico Finish .", "title": "", "metadata": ""}
{"_id": "7d865f2b36380208a30c3fc020f2cb75", "text": "If the user sends 0 ether , he receives 500tokens .", "title": "", "metadata": ""}
{"_id": "0c276d3aa8c6a778f4c51b82ebb0512b", "text": "Function to freeze an account from transactions .", "title": "", "metadata": ""}
{"_id": "ba61bae784b1cc1b72c04585c8ef7ea5", "text": "Revoke user s vote .", "title": "", "metadata": ""}
{"_id": "0379ae91403f70ac6eec71c828d7c5a6", "text": "Function to expose the _AddedToGeneration event to contracts .", "title": "", "metadata": ""}
{"_id": "d7bcf762107c36b1823a58c05d3079fd", "text": "Function to calculate hash of the token s symbol .", "title": "", "metadata": ""}
{"_id": "d910a17c08c9fa9008b4954a1c467cca", "text": "set art escrow report .", "title": "", "metadata": ""}
{"_id": "a771fd51ce271d5b4a6179c880be0395", "text": "Compute the VISTAcoin BONUS according to the investment period .", "title": "", "metadata": ""}
{"_id": "4cec3bf80f4b69dfd8753a4fc6f76dbd", "text": "owner is the only address that can call a function with this modifier .", "title": "", "metadata": ""}
{"_id": "c208ed11a85a6c6776368aa76eb8b5ff", "text": "An approved sender can burn _amount tokens of user _from .", "title": "", "metadata": ""}
{"_id": "745262845c06c54a05ea136ed09a6ef2", "text": "Function to start new round .", "title": "", "metadata": ""}
{"_id": "90f4ac9da3e2e3633ea8b9a35dee81f6", "text": "Withdraw Ether from the contract .", "title": "", "metadata": ""}
{"_id": "1beda8c7b17daa98a03c61b3bfcf90b0", "text": "hook on standard ERC20 transfer to pay dividends .", "title": "", "metadata": ""}
{"_id": "93c83db10e8f7a1548279a9c8d19f13a", "text": "Retrieve the referral dividends balance of any single address .", "title": "", "metadata": ""}
{"_id": "b9d3ab0cf973cdb06c279e6bb8ebea2d", "text": "Check the token balance of a wallet in a token contract .", "title": "", "metadata": ""}
{"_id": "ab92c0ad02348ad265e39dd9ec29a005", "text": "Allow the owner to set waitTimeBlocks .", "title": "", "metadata": ""}
{"_id": "d084210c0e83f6ad575561d563b2569f", "text": "Get the active buildings ( by type ) owned by a specific city .", "title": "", "metadata": ""}
{"_id": "ddd2a37c2f110351386e9d7afb51785c", "text": "This function can be called only by the winner once the timer has ended .", "title": "", "metadata": ""}
{"_id": "73183a15b5c60a05fbc6d78209b9805d", "text": "Calculates unpaid rewards of a given address .", "title": "", "metadata": ""}
{"_id": "615a274e330d28b218df0b79040cf47c", "text": "opens the trading for everyone .", "title": "", "metadata": ""}
{"_id": "7d3b354854fdbfcbab6f4bce7e8f15bd", "text": "For existing plot holders to get added to Mini-game .", "title": "", "metadata": ""}
{"_id": "2ea537211cc7c365c04c5942825b0005", "text": "Refund a number of accounts specified by _count , beginning at the next un-refunded index which is lastRefundedIndex + 1 .", "title": "", "metadata": ""}
{"_id": "49472fc4f27eeb5f8f4fc83793a61f03", "text": "using SafeMath for uint256 ; MODIFIERS only people with tokens .", "title": "", "metadata": ""}
{"_id": "fbf59de610566227712809291e2f6145", "text": "Called by the owner of the contract to start the Presale .", "title": "", "metadata": ""}
{"_id": "da9a83704c3fe1b8bab11f5cdcaae926", "text": "Check if the user is whitelisted for the crowdsale .", "title": "", "metadata": ""}
{"_id": "2da1e20e831a8fa1abcb19a956d2ea50", "text": "Transfer tokens to the beneficiary account .", "title": "", "metadata": ""}
{"_id": "09af9e509030e662dbcb42a3994dbda6", "text": "changeFounderWalletAddress used to change the wallet address or change the ownership .", "title": "", "metadata": ""}
{"_id": "dfc930c6bde38b434a649850c41314f2", "text": "anyone can claim the card / pay gas for them .", "title": "", "metadata": ""}
{"_id": "a939bca22fa1d72e99d4a5893f7ec323", "text": "Finalizes the sale .", "title": "", "metadata": ""}
{"_id": "d6edf121c52f13bbd15cad9880dd1d44", "text": "set new asset price .", "title": "", "metadata": ""}
{"_id": "7c844ad51cd9e85ad249a21ea1b5afd1", "text": "Can only be called by admin .", "title": "", "metadata": ""}
{"_id": "384fb3a295e511a54cc218c068e7d227", "text": "Owner can change end date .", "title": "", "metadata": ""}
{"_id": "5ac56735ae15b9eb3200163a6c2d7f33", "text": "add interest to each payees .", "title": "", "metadata": ""}
{"_id": "394907d95dbfcc533298eff77c909272", "text": "Place a username back into circulation for re-registration .", "title": "", "metadata": ""}
{"_id": "4d81b1dd962058b564aad97057920589", "text": "Disabling fairsale protection .", "title": "", "metadata": ""}
{"_id": "acce2ee8c15150c9889cead306a8da9d", "text": "Modifier to make a function callable only when the address is frozen .", "title": "", "metadata": ""}
{"_id": "6bf12802ffa34f63dbe9f60d788c45e9", "text": "function that is called when transaction target is an address .", "title": "", "metadata": ""}
{"_id": "997480dfd7dc795cdf251644cffa72ce", "text": "Dev : Key parameters to setup for ICO event .", "title": "", "metadata": ""}
{"_id": "e16868cf20e53a0f9e9afa9a24ca585b", "text": "Calculates fee to be paid to market maker .", "title": "", "metadata": ""}
{"_id": "b7679309f0acf71af02751687ed10d39", "text": "Returns maxSupplyReached True / False .", "title": "", "metadata": ""}
{"_id": "1593088616d67746fe5d46fba22fea3c", "text": "allows to participants reward their tokens from the current round .", "title": "", "metadata": ""}
{"_id": "326041fccef66eba338328dceb98b1f1", "text": "Approve sent address to spend the specified amount of tokens on behalf of msg . sender .", "title": "", "metadata": ""}
{"_id": "02e8973d69d366a646f05396122a985e", "text": "Adds an address for pre-sale commitments made off-chain .", "title": "", "metadata": ""}
{"_id": "dbe9acdd766f7eb951351f1d99323cf2", "text": "creates the FDU token to be sold .", "title": "", "metadata": ""}
{"_id": "12cb39843f57c9bd598fd4dc7dbc5d41", "text": "Calculate the maximum potential profit .", "title": "", "metadata": ""}
{"_id": "8b243e5105400d6980fd55e90a57cf34", "text": "returns the status of the Escrow contract .", "title": "", "metadata": ""}
{"_id": "56fcb289420c6f8810c9d25e9c442e4f", "text": "External functions for regulators .", "title": "", "metadata": ""}
{"_id": "794d8d87c87bbee643415d2dd866d1ba", "text": "function returning tokenID of the last token issued .", "title": "", "metadata": ""}
{"_id": "a515c37c9b426ac17d4421639ee5164c", "text": "unsigned log .", "title": "", "metadata": ""}
{"_id": "7d013396359a0cf432ae71fb7b8ed7a6", "text": "ERC20 token transferFrom function .", "title": "", "metadata": ""}
{"_id": "f0ef0d6b1c9c303639aa1a27b901e27b", "text": "Creator reveals game choice .", "title": "", "metadata": ""}
{"_id": "16377c31c4ac4ec32ab019565d4e39b3", "text": "customTokenDefrosting function allows the owner of the smart contract to defrost frozen tokens based on custom defrosting Rates ( from multiple recipients at once if desired ) of particular recipient addresses 50 .", "title": "", "metadata": ""}
{"_id": "256592819f9095fc18409d11acb6ffb7", "text": "Returns the total number of documents on the blockchain .", "title": "", "metadata": ""}
{"_id": "c5003d018908c3793b0e40774ba39dd5", "text": "transfers can be free but at the users own risk .", "title": "", "metadata": ""}
{"_id": "7244d6ca0c7f07adab3fd6a8cc893a96", "text": "function buys tokens from investors and burn it .", "title": "", "metadata": ""}
{"_id": "11f59a43c4e39bf2b0b214da850d8681", "text": "Optional name your masterpiece .", "title": "", "metadata": ""}
{"_id": "37b79216d91a43d64c9e18e058b6eff6", "text": "Transfer some ETH tokens from contract .", "title": "", "metadata": ""}
{"_id": "90478233c06d9802890f82fb116a22ce", "text": "Setup function sets external contract's address .", "title": "", "metadata": ""}
{"_id": "b3ef3ff3bd1aebf9f1dfc43945cacfac", "text": "this is how we get our money out .", "title": "", "metadata": ""}
{"_id": "ddf1bf5580062830bce3e6dbdbe1d861", "text": "Check this crowdsale event has ended considering with amount to buy .", "title": "", "metadata": ""}
{"_id": "3042fecf135caa0c9cf26f6ecf84d075", "text": "Add a list of participants to cap tier 1 .", "title": "", "metadata": ""}
{"_id": "deb3468ac916f4c6ee35d81cea869a53", "text": "Closing oracle service , inputs final stats and triggers payouts .", "title": "", "metadata": ""}
{"_id": "5ac9a7d72246d3f81b3e69d67a498cb0", "text": "withdrawal amount tokens from contract .", "title": "", "metadata": ""}
{"_id": "897b5b114bfc804765048a7b7e8597d9", "text": "mint tokens for a specified address .", "title": "", "metadata": ""}
{"_id": "3afaefdfc634b1ff31f34369105caea6", "text": "Given an amount in EBSC , this method returns the equivalent amount in mini-EBSC .", "title": "", "metadata": ""}
{"_id": "a5019bc11ff8f1c640ec84176df56acb", "text": "Withdraw your money for FREEEEEE ! Or too if you wanna break up .", "title": "", "metadata": ""}
{"_id": "277b100a452c142f81f4be87acdee319", "text": "true if successful .", "title": "", "metadata": ""}
{"_id": "c733ee6a4e1afe25b5431c0c15310b6b", "text": "Applies the discount based on the discount tiers .", "title": "", "metadata": ""}
{"_id": "d97753b9d58517a8f19efa84cff2c9dc", "text": "Extending RefundableCrowdsale finalization sending back excess tokens to ethealController .", "title": "", "metadata": ""}
{"_id": "ca5af16c76e4da7d30b0e90bcc1038d0", "text": "100 , 000 winners of 1 . 5 tokens or . 0000375 .", "title": "", "metadata": ""}
{"_id": "f25d0d5e11a20b15da35a7e0d37a30ee", "text": "Round 2 least gas war returns : can play ( bool ) , high jackpot ( bool ) .", "title": "", "metadata": ""}
{"_id": "c707965781e4193b0ff1a201f889255c", "text": "Allow owner or contract to finish minting .", "title": "", "metadata": ""}
{"_id": "a01abfe38d0a13cfacdde9bfaace8f71", "text": "some amount ma be not the reserve .", "title": "", "metadata": ""}
{"_id": "aa816edbd45109a70fd0faa483e7b3b0", "text": "When the brided Citizen decides to give his seat to someone else .", "title": "", "metadata": ""}
{"_id": "295c3287b36c6c0bea3dbfd22d9d7f4e", "text": "Seles manager .", "title": "", "metadata": ""}
{"_id": "6f7366d2b4a7be82e8aacea63b1ff26d", "text": "Move army block value from one block to an adjacent block .", "title": "", "metadata": ""}
{"_id": "b81300cd4025d7d8ba428976aaf1e354", "text": "The success of this transaction .", "title": "", "metadata": ""}
{"_id": "17f66afe340670314f6338502be7260e", "text": "balanceOf function gets the balance of the specified address .", "title": "", "metadata": ""}
{"_id": "c50abed56e1f055dbe61e87b2c749f2e", "text": "Send back ether sent to me .", "title": "", "metadata": ""}
{"_id": "fd29a90065def9feb9a86b097917d093", "text": "Returns true if period has already finished ( time passed or tokens sold ) .", "title": "", "metadata": ""}
{"_id": "c5bdd1ad76f1be90ed3cb9493939f2ee", "text": "Function used by the client to infor about the submitted amount .", "title": "", "metadata": ""}
{"_id": "d969dce192ef063290c6e805c382d3e8", "text": "External interface similar to the crowdfunding one .", "title": "", "metadata": ""}
{"_id": "6d576d3150a13a7791ba266cb5f5c2a7", "text": "Transfer airdrop tokens to all registered participants .", "title": "", "metadata": ""}
{"_id": "f1cc661c570d1865a5ff20422971f4c0", "text": "A contract or user attempts to get the coins .", "title": "", "metadata": ""}
{"_id": "58a05bc5e470ab2c174c9c9c2ae68ee3", "text": "bool Return true if the contract is in Pre Sale Period .", "title": "", "metadata": ""}
{"_id": "38ab8e1de8d0b2e88cb37af06969a7af", "text": "Overridden the BurnableToken burn ( ) function to also correct maxSupply .", "title": "", "metadata": ""}
{"_id": "a9f2ea40ac39629b43afb77a0d79085d", "text": "allocate player winnings .", "title": "", "metadata": ""}
{"_id": "ec9888e27691e487066e5027f8cc68ff", "text": "Allow contract to transfer tokens directly .", "title": "", "metadata": ""}
{"_id": "5acf7721923dabfd8537e3a080339e18", "text": "Balance description update .", "title": "", "metadata": ""}
{"_id": "6f973d25f042c42ea7cd894ccc342f7f", "text": "Function to stop sale for an emergency .", "title": "", "metadata": ""}
{"_id": "c15d45d5594eadfda15440e4f4e59fcb", "text": "Function to chnage the OwnerCut only accessible by the Owner of the contract .", "title": "", "metadata": ""}
{"_id": "89492b7e2c1cfb700905ba3d8c6c3975", "text": "amount of tokens .", "title": "", "metadata": ""}
{"_id": "9d8eac544a1617caf17e63696cb69462", "text": "called by the delegate to reverse purchases / grants for a particular contributor .", "title": "", "metadata": ""}
{"_id": "cbc997fa8a604ae19b0cf2deb64d8fef", "text": "Release MDL tokens held by this smart contract only after the timelock period .", "title": "", "metadata": ""}
{"_id": "fb2f24b7b6702983120f927d415e8f3c", "text": "Close current round .", "title": "", "metadata": ""}
{"_id": "bed8d59cdb4bd11e9ffe9108926a7567", "text": "Don't want to sell KIM anymore ? .", "title": "", "metadata": ""}
{"_id": "8dac7afb4e2a3f0840ed17e9cf4bc6e4", "text": "Verifies the amount is 0 .", "title": "", "metadata": ""}
{"_id": "4f8505732bc5eddc6496af9e5d804e94", "text": "burnToken burn tokensAmount for sender balance .", "title": "", "metadata": ""}
{"_id": "8d6d338043948ffa8a361ab394a3c39c", "text": "Exchanges sender's winning outcome tokens for collateral tokens .", "title": "", "metadata": ""}
{"_id": "8fe5cd80f649ea1ea3b6013e36411ae9", "text": "adjust tranche for next cycle .", "title": "", "metadata": ""}
{"_id": "b1c373eb618fd42eaca03f82cd99314a", "text": "Accept deposit and create Depositor record .", "title": "", "metadata": ""}
{"_id": "81876efabb7f405d74cc1abac392dceb", "text": "Land owner can use this function to remove a city from their land .", "title": "", "metadata": ""}
{"_id": "bfc36b1ad95ffa0426bd16593380c437", "text": "internal function to test if a delegation is valid or revoked / nonexistent .", "title": "", "metadata": ""}
{"_id": "d3e8a0a62bc9ed24069373cf9c815d28", "text": "Security Wallet address setting .", "title": "", "metadata": ""}
{"_id": "b17d97f13455d5223e5dc31522f6eec8", "text": "Calculate the total amount of vested tokens of a holder at a given time .", "title": "", "metadata": ""}
{"_id": "759488a7589170a2273ac99ec7244700", "text": "returns owner address using ticket number .", "title": "", "metadata": ""}
{"_id": "daef194e8a5d706ff889a60094b91a7e", "text": "sending rewards to the investing , team and marketing contracts .", "title": "", "metadata": ""}
{"_id": "7f191e72e09d80b6f823873982989927", "text": "Set _periods Spending amount percentage with time schedule using Period .", "title": "", "metadata": ""}
{"_id": "17acda609f35776c502c856ad3c24edb", "text": "Modifier that checks that this contract can transfer tokens from the balance in the stakingToken contract for the given address .", "title": "", "metadata": ""}
{"_id": "962bb3734bfcd92f3ae26b3a7803cc5a", "text": "minimum fee is 1 unless same day .", "title": "", "metadata": ""}
{"_id": "9bfc89ca12c1a001381438a6aacd8326", "text": "Execute sell of the tokens - send investor to investors storage and transfer tokens .", "title": "", "metadata": ""}
{"_id": "4d1d8413a8791978835d557c48c396e4", "text": "Only ballast fund function to burn tokens from account .", "title": "", "metadata": ""}
{"_id": "9cb54274179697fe21273d4c82245c78", "text": "User is purchasing attack .", "title": "", "metadata": ""}
{"_id": "5a31bbff8e4fdb65beff212f9f423146", "text": "get content by _index into key array .", "title": "", "metadata": ""}
{"_id": "afe4a204d913d4401baad887837688ac", "text": "presale token conversion .", "title": "", "metadata": ""}
{"_id": "400e90374b6029f1e51563d0109bcf13", "text": "Lock nomin purchase function in preparation for destroying the contract .", "title": "", "metadata": ""}
{"_id": "effc0b80e6daa403923c60a4ebce6adb", "text": "End core methods .", "title": "", "metadata": ""}
{"_id": "432394e8faa2824af136292a3659611e", "text": "Transfers the ownership of a given token ID to another address .", "title": "", "metadata": ""}
{"_id": "15368d7a4c498b66518a8faee6e8101a", "text": "Remove a reservation contract .", "title": "", "metadata": ""}
{"_id": "defb14f2c913d07f703b371ee8b4526c", "text": "Gets champ's attack power , defence power and cooldown reduction with items on .", "title": "", "metadata": ""}
{"_id": "793e3daee3f2910b5674fc043fc67899", "text": "When the game stops .", "title": "", "metadata": ""}
{"_id": "a3453b3043e1e7bf7e84790a0cc35315", "text": "opens the vault , allowing the Tokens to be withdrawn , .", "title": "", "metadata": ""}
{"_id": "d1fe9bd50fee141815c49fbe58414d75", "text": "Returns the contribution and refund value to be used when the transaction value equals the whitelisted contribution for the sender .", "title": "", "metadata": ""}
{"_id": "d4e6ad016b6939d96758d500f6a1dd24", "text": "Function is called by contributor to refund payments if crowdsale failed to reach soft cap .", "title": "", "metadata": ""}
{"_id": "a37eb69bee5c36b4d2c4abe0976276da", "text": "Returns the balance of the baseToken stored in this contract .", "title": "", "metadata": ""}
{"_id": "52feca689fb94adafb1eb5228323eca4", "text": "In cases where there's bugs in the exchange contract we need a way to re-point .", "title": "", "metadata": ""}
{"_id": "b03517f867258940f0ba387766c6c5d6", "text": "Internal executable function for creating new tokens .", "title": "", "metadata": ""}
{"_id": "ed322e276e31bd89f196db3997609f02", "text": "check if withdraw amount is not valid .", "title": "", "metadata": ""}
{"_id": "9ca378962c36d6e81735ec02a421a707", "text": "Withdraw any token , including ether from this wallet to an EOA .", "title": "", "metadata": ""}
{"_id": "cc04e5cd34b33305286ebea466654240", "text": "endCrowdFund called only after the end time of crowdfund .", "title": "", "metadata": ""}
{"_id": "57a8b34bc3f1d52444cf612a5d820aea", "text": "calculates and withdraws the amount of tokens the user has been awarded by airdrops .", "title": "", "metadata": ""}
{"_id": "7861d2b1db035b82337e59b11b9727ef", "text": "Implementation of the override to the buy in function for incoming ETH .", "title": "", "metadata": ""}
{"_id": "48a1440550dd0576b72683098e1a417c", "text": "Withdraws a specific token .", "title": "", "metadata": ""}
{"_id": "72d12d1ce68e892d326bea174c40fa32", "text": "Withdraw foreign .", "title": "", "metadata": ""}
{"_id": "ca454afb921179dfb12f4bcc7e7fa240", "text": "Checks whether the provided ( v , r , s ) signature was created by the private key associated with _address .", "title": "", "metadata": ""}
{"_id": "22af53764d873f03a0cd331643f31b68", "text": "Get the missing funds needed to end the auction , calculated at the current XBET price in WEI .", "title": "", "metadata": ""}
{"_id": "9cb1ab44128470b386c4ececb99a9f9d", "text": "Approves an User's KYC .", "title": "", "metadata": ""}
{"_id": "f006815e748f56a2ae5f999303c6758f", "text": "Withdraw lender funds .", "title": "", "metadata": ""}
{"_id": "3d8d5af338a6870360ba0b43772a3db3", "text": "Return current token price .", "title": "", "metadata": ""}
{"_id": "964d6277145c426aafec7be02d83a64f", "text": "Admin function to restart attempt counts for a user .", "title": "", "metadata": ""}
{"_id": "4314de1280c74d939c982bccb89a8d8c", "text": "Removes a reserved token listing .", "title": "", "metadata": ""}
{"_id": "6aeb643c9fefaae960951e1cdfc0e21d", "text": "buy function allows to buy ether .", "title": "", "metadata": ""}
{"_id": "a0ca82198f7bb8cb0229736062d6d0c5", "text": "true if the ICO is in pre ICO phase .", "title": "", "metadata": ""}
{"_id": "11ee2e822c2c5234bb0071f1a972bf04", "text": "This function is used to transfer adminship to new owner .", "title": "", "metadata": ""}
{"_id": "4e67dd54da560a766e389649d9366c19", "text": "Returns the nth Cutie assigned to an address , with n specified by the _index argument .", "title": "", "metadata": ""}
{"_id": "03b0ecbc73f4418b5619f2096430ea6e", "text": "Allowing a spender to bypass global frezze .", "title": "", "metadata": ""}
{"_id": "ebe1f992f1e9a615522f2e981875d8e6", "text": "We restrict transfer by overriding it .", "title": "", "metadata": ""}
{"_id": "545e1dfe71023014875f93a980dcd838", "text": "ICO related operations .", "title": "", "metadata": ""}
{"_id": "29991513ccdc9424e6de50a5045fd793", "text": "Calculates how many tokens a user should get with a given ICO transfer .", "title": "", "metadata": ""}
{"_id": "d91388fa47bb1427b3cfd3b36b50b695", "text": "PlayerBookInterface Interface .", "title": "", "metadata": ""}
{"_id": "dc8fa82959cbecc66343a530c79c691a", "text": "deposit unpacks _extraData and log listing info .", "title": "", "metadata": ""}
{"_id": "70bb218ddb8a243085d1668cab1cdf0a", "text": "allow owner to update airdrop admin .", "title": "", "metadata": ""}
{"_id": "1cd7aba5b7f70d7b746a367879190f44", "text": "an account / contract attempts to get the coins throws on any error rather then return a false flag to minimize user errors .", "title": "", "metadata": ""}
{"_id": "6b8e5b5ff6abfa1f0554733a52aeb230", "text": "Returns the first generation id that fully contains the block window provided .", "title": "", "metadata": ""}
{"_id": "12b8971c52d2ded8fed05ec948005cdf", "text": "Tokensend Functions .", "title": "", "metadata": ""}
{"_id": "d15ed6d27c843e696281577952fae573", "text": "Transfer tokens to an address given by sender .", "title": "", "metadata": ""}
{"_id": "4797699a1e61cc4d1b56bc293863057c", "text": "Transfers ownership of the reverse ENS record associated with the calling account .", "title": "", "metadata": ""}
{"_id": "0eef46248cb01767c30843df3542aad7", "text": "returns the expected return for buying the token for a reserve token .", "title": "", "metadata": ""}
{"_id": "96e0103ac70ae63cc9b0fd08ac3b3877", "text": "Buy tokes with guarantee .", "title": "", "metadata": ""}
{"_id": "10440e930a00579179e1b3d3090866a4", "text": "Executes any transaction .", "title": "", "metadata": ""}
{"_id": "6b511416cabe13580756ff5cbb18efbd", "text": "Sets the token's interchangeable logic contract .", "title": "", "metadata": ""}
{"_id": "7fdf6ed7ef66e1ac7e66bdfd7d5338f0", "text": "Overrides Abstract internal method to calculate payment proportion for old owner out of selling price in current purchase .", "title": "", "metadata": ""}
{"_id": "3f8664698ca1f801112e37f0dd965b68", "text": "Transfer logical layer authority .", "title": "", "metadata": ""}
{"_id": "9be4f4c029c90ed89bbd0f991941d8a5", "text": "Checks if a given address is the current owner of a particular Lambo .", "title": "", "metadata": ""}
{"_id": "96ed09056a5b19cf6a04aa96e613a31d", "text": "Transfer the balance from token owner's account to to account - Owner's account must have sufficient balance to transfer - 0 value transfers are allowed - If the sender is a locked token storage address then do not allow .", "title": "", "metadata": ""}
{"_id": "8a4adfac13a6ef1dbd45a9751ca6d2c8", "text": "address restricted function crowdfund contract calls this to burn its unsold coins .", "title": "", "metadata": ""}
{"_id": "d1be854f4f87ffed6196ecfa376825e1", "text": "Get a entrant's number of entries into a specific raffle .", "title": "", "metadata": ""}
{"_id": "c52d97891aef68930ac570f71dd95e9f", "text": "Send all ETH to the presale contract once total is between 149 , 299 , callable by anyone .", "title": "", "metadata": ""}
{"_id": "1df42e046a799f8058191c4271f1eac7", "text": "getAllTheFunds - to ensure there is no deadlock can can happen , and no case that voting structure will freeze the funds forever the startup will be able to get all the funds without a proposal required after 6 months .", "title": "", "metadata": ""}
{"_id": "c045d8c001ced4294764763a06b271e0", "text": "true if crowdsale event has ended limit has not been reached .", "title": "", "metadata": ""}
{"_id": "f32f92a6f033030391c87996800d613f", "text": "Load / Unload Calls for Company . .", "title": "", "metadata": ""}
{"_id": "957ceca9928d2f04c04344371ae93815", "text": "Amount Locked .", "title": "", "metadata": ""}
{"_id": "768bbe867a9e54bec522d39aed7343ae", "text": "updates the maximum withdrawal .", "title": "", "metadata": ""}
{"_id": "f115bec51b7ebf5f37c71966f2d00fd0", "text": "remove liquidity from contract .", "title": "", "metadata": ""}
{"_id": "242bdbf7f96a498d98ae842ce3946c38", "text": "Get the rules for the upcoming game ( if there even is one ) ( jackpot , numberOfTickets , ticketPrice , maxTicketsPer , willStartNewGameUponCompletion ) .", "title": "", "metadata": ""}
{"_id": "d4c5e2e3c01fa6d1a7b7c7a2ac48eee3", "text": "Returns all the relevant information about a specific crypton .", "title": "", "metadata": ""}
{"_id": "52b1c3c26dc759f9bc6d2cca1f9a5949", "text": "Return owned tokens .", "title": "", "metadata": ""}
{"_id": "568ddb29105c00593800171b773c4a52", "text": "payout rewards to all token holders use a second holding variable called PayoutBalance to do the actual payout from b / c too much gas to iterate thru each payee .", "title": "", "metadata": ""}
{"_id": "c700d42632f5561c6cb8dac493f5e853", "text": "cage by reading the last value from the feed for the price .", "title": "", "metadata": ""}
{"_id": "f44fdddf4c7d3aa7aab9e98e9ed3697f", "text": "low level token purchase function mapping ( address uint ) public BALANCE ; .", "title": "", "metadata": ""}
{"_id": "4de21a00c34b9f50e1ef897b74344ffc", "text": "Called by any team member to pause the contract .", "title": "", "metadata": ""}
{"_id": "16d283e6a7463a6146ad668be4397e5e", "text": "When the result of a game is known , enter the result .", "title": "", "metadata": ""}
{"_id": "d58a5fef24f7b84b26e59cfa8c663665", "text": "Reset values of updating ( KeyUpdate object ) .", "title": "", "metadata": ""}
{"_id": "dcc4123bd7c3eb04355b72a732789fc2", "text": "Activates the raffle , if inactivated .", "title": "", "metadata": ""}
{"_id": "5a30ca6989ea6fe702ff0dda2d8a1897", "text": "prevents contracts from interacting with x3d .", "title": "", "metadata": ""}
{"_id": "1c5ab21ce88a4614fb2f5971b7fa9004", "text": "Ban a user .", "title": "", "metadata": ""}
{"_id": "79b1c93ede10b37dd0132ca44bc0c656", "text": "This function returns the amount of tokens approved by the owner that can be transferred to the spender's account .", "title": "", "metadata": ""}
{"_id": "e2f51c6d3729929395ba8037adc72a18", "text": "returns if this product is a subscription or not .", "title": "", "metadata": ""}
{"_id": "8b4ec0fbfc3dec286c47f144c698e1a7", "text": "Issuing tokens from the fund .", "title": "", "metadata": ""}
{"_id": "f3f886c5b0bb4c360c89c527cee3d5d1", "text": "Allows the owner to cancel the reservation thus enabling withdraws .", "title": "", "metadata": ""}
{"_id": "5a41c384f7d807a7feb5ee052b60086d", "text": "Current Vesting stage for economic wallet .", "title": "", "metadata": ""}
{"_id": "3fd3cfcc11826ef364c4e68cebb2e8ac", "text": "Allows an owner to submit and confirm a withdraw token transaction .", "title": "", "metadata": ""}
{"_id": "c3daee022fccdfd5df8ec24dcf1cc7c3", "text": "Cancels a request .", "title": "", "metadata": ""}
{"_id": "63484531c9aeb7a8b45a7e6e08dbdbc0", "text": "Destroy an amount of metadollars .", "title": "", "metadata": ""}
{"_id": "94fcb891c05afc39151f6d16eb4a1f35", "text": "Change Token contract owner .", "title": "", "metadata": ""}
{"_id": "98cd572cc115e55d58e31d9153a99143", "text": "Change current token price .", "title": "", "metadata": ""}
{"_id": "37fb4e8285167950692b757467378723", "text": "Internal function for changing the token address .", "title": "", "metadata": ""}
{"_id": "4a35d1f6222ab101d69d45a9715c8064", "text": "release time of freezed account .", "title": "", "metadata": ""}
{"_id": "a6600115818280eb45776e0e8a3dd58b", "text": "function to change the minimum contribution can only be called from owner wallet .", "title": "", "metadata": ""}
{"_id": "304d9df3184261321bf1f404338a88b3", "text": "get the token total supply .", "title": "", "metadata": ""}
{"_id": "e4a3dc8d3769f3a8003eae556c489c8a", "text": "Get the Instructions that helped to used the module .", "title": "", "metadata": ""}
{"_id": "9b325851e2f8c41c44960d84d5c46b6b", "text": "The owner can update the rate ( UI to ETH ) .", "title": "", "metadata": ""}
{"_id": "b211f0b71f29d7a8264944ad8458f7da", "text": "for player withdraw .", "title": "", "metadata": ""}
{"_id": "24178f4e5a09d6b1b9aac3587c967b48", "text": "Returns a list of all Animecard IDs assigned to an address .", "title": "", "metadata": ""}
{"_id": "f856181fc366ee07a2bc8e0d0e39aad6", "text": "Returns player Id for a given token .", "title": "", "metadata": ""}
{"_id": "f1ab2594c7137ad6f45ba9e502e27529", "text": "ends the crowdsale , callable only by contract owner .", "title": "", "metadata": ""}
{"_id": "fe31278c9c94eba5d51f46e702e219b3", "text": "Create the auction .", "title": "", "metadata": ""}
{"_id": "ac4b3d6f39d9433c893b44ffca2ca253", "text": "Scarcecoin - Modified the correct technical term mint to a well know term mint for marketing purposes .", "title": "", "metadata": ""}
{"_id": "463bb4cb2db4cc1729e1729ddf101bf6", "text": "Function allowing investors to participate in the ICO .", "title": "", "metadata": ""}
{"_id": "678faae0e8c2b95d64b2d6218080ce22", "text": "Set allowed for other address .", "title": "", "metadata": ""}
{"_id": "00bac7ce2958549c5a8b05a84724551a", "text": "returns the expected return for buying the token for a connector token .", "title": "", "metadata": ""}
{"_id": "fd7ae4ef8a6cc89128795bfe8f73e417", "text": "Checks the current week in the sale .", "title": "", "metadata": ""}
{"_id": "468435a2b17001f12eae3b9bdb441cef", "text": "Get the XCH price in WEI during the auction , at the time of calling this function .", "title": "", "metadata": ""}
{"_id": "cc86b3955163bc1eae33a62c219d21af", "text": "returns the number of changeable tokens supported by the contract note that the number of changeable tokens is the number of reserve token , plus 1 ( that represents the smart token ) .", "title": "", "metadata": ""}
{"_id": "51710bde64d888826b268647b974615c", "text": "generates a random number between 0-99 and checks to see if thats resulted in an airdrop win .", "title": "", "metadata": ""}
{"_id": "c65eae14e1e951902382ad7a5e295ce4", "text": "User is trying to flush the toilet .", "title": "", "metadata": ""}
{"_id": "a19d9e46a04cc2d532d3701fd7c133a7", "text": "title String Utils - String utility functions https : / / github . com / pipermerriam / ethereum-string - utils .", "title": "", "metadata": ""}
{"_id": "82099c6d992d261809a851e6bf258fdc", "text": "Burn from Users .", "title": "", "metadata": ""}
{"_id": "487aecdc56ff02101274c3b14b53aca4", "text": "true if the soft cap is reached .", "title": "", "metadata": ""}
{"_id": "c7233fe68ca065a8d717ab5cb95d4f11", "text": "release the locked tokens owned by multi-accounts , which are the tokens that belong to these accounts before being locked .", "title": "", "metadata": ""}
{"_id": "03629d9c64c82bd82aff44cecf27977f", "text": "set the bonus multiplier .", "title": "", "metadata": ""}
{"_id": "a1edd4cef36b5dab83ee932c82725d73", "text": "Function to end the crowdsale by setting the stage to Ended .", "title": "", "metadata": ""}
{"_id": "2e635e9c7cc0d0942fa1b24df96e495f", "text": "called by contract owner to record a off chain contribution by Bitcoin .", "title": "", "metadata": ""}
{"_id": "bde558477eebe497d529b359bb9ca6e9", "text": "this allows to end PoS before 2550 days pass or to extend it further .", "title": "", "metadata": ""}
{"_id": "fca46b401abd981fe3ab3b3e51a0be57", "text": "make functions to write and read index entries and nubmer of entries .", "title": "", "metadata": ""}
{"_id": "196df4023a9f4432e2eba414b844945b", "text": "change the balances database to _newDB .", "title": "", "metadata": ""}
{"_id": "1b7771c7cc0c4c35dcd1e803f03740f7", "text": "Set qualified crowdsale partner i . e .", "title": "", "metadata": ""}
{"_id": "d9957096600d149743845f8b5d573c6a", "text": "Starts a poll for a listingHash which is either in the apply stage or already in the whitelist .", "title": "", "metadata": ""}
{"_id": "0e7da8c1a47ffe325432e7110f6b4c50", "text": "Counts number of start dates in this factory .", "title": "", "metadata": ""}
{"_id": "5db711c1d1e912813803826e15c6daac", "text": "Assigns ownership of a specific Politician to an address .", "title": "", "metadata": ""}
{"_id": "ab7ad597534e41ba393a49dc05540b29", "text": "Update the 10x10 image data for a Property , triggering potential payouts if it succeeds .", "title": "", "metadata": ""}
{"_id": "4de5ad30fb459c93b206f6adf1f8ce8d", "text": "The creator of KTs .", "title": "", "metadata": ""}
{"_id": "79ed8e7402b0b6536052ddae7d0f1034", "text": "the total payout this entry in line will receive .", "title": "", "metadata": ""}
{"_id": "f2749e804cae824291a39bafd26dc6f3", "text": "Changes the date that trades are free until .", "title": "", "metadata": ""}
{"_id": "752f25c18bc19be46e31b0d93ceb48ab", "text": "return ETH for normal buyers in range a , b .", "title": "", "metadata": ""}
{"_id": "f2937852d14e8d0d8320d88cf32b1349", "text": "Collected funds for the current round .", "title": "", "metadata": ""}
{"_id": "f6a6b46b4c3fc608cee5ce449055cb0b", "text": "change restricted releaseXX account .", "title": "", "metadata": ""}
{"_id": "1ca0d73fbbb25fbe8bfe98b4df8b2917", "text": "change agent for waves minting .", "title": "", "metadata": ""}
{"_id": "64cd4cf42713949b22812aa56b636663", "text": "Function for investments .", "title": "", "metadata": ""}
{"_id": "07a36c4bdd86cd4427a5c700092786b7", "text": "Croupier invokes this method to return deposits to players .", "title": "", "metadata": ""}
{"_id": "134c87f3ce4bd6a5d153776b8a9e42bc", "text": "Function that ends sales .", "title": "", "metadata": ""}
{"_id": "18fb67147b49642ae31120cacfe5aeb5", "text": "Pre Token Sale time .", "title": "", "metadata": ""}
{"_id": "24df8e768ba0b66af9c9e5ea91600175", "text": "account status - getters .", "title": "", "metadata": ""}
{"_id": "a7bbf5c59d3060ade825598d3b9c9cc2", "text": "Revoke a third party _operator 's rights to manage ( send ) msg . sender 's .", "title": "", "metadata": ""}
{"_id": "34d697a666a643454ec3a52a172dc980", "text": "Gateway check - did you send exactly the right amount ? .", "title": "", "metadata": ""}
{"_id": "9bfe001940211019780cdc0a519ec70f", "text": "Operation modifiers for any Operators .", "title": "", "metadata": ""}
{"_id": "c6ef8261f4bb9e20927127fea9f84eab", "text": "finalize crowdsale .", "title": "", "metadata": ""}
{"_id": "6fa4ae8d7f08224df59ee2aa9b9555d0", "text": "Forward ERC20 methods to upgraded contract if this one is deprecated .", "title": "", "metadata": ""}
{"_id": "2a3ab464c34456201dc520f83a37cfd0", "text": "Only used by owner for raffle .", "title": "", "metadata": ""}
{"_id": "f72768913885a80e8e1fc6bc85e69bc2", "text": "SafeMath multiply function .", "title": "", "metadata": ""}
{"_id": "cd69f659251d194bd60b659a26dde18e", "text": "End current voting with 3 scenarios - toAllow , toCancel or refund .", "title": "", "metadata": ""}
{"_id": "677d974e71d654fb53160305872caaaf", "text": "modify trading behavior .", "title": "", "metadata": ""}
{"_id": "6a86c52cb2723e01061e6eda9c8b51bb", "text": "Retrieve the size of the code on target address , this needs assembly .", "title": "", "metadata": ""}
{"_id": "9abe887977af5e25a88894d9045e5691", "text": "This method will generally be called by the APT token contract to acquire APTs .", "title": "", "metadata": ""}
{"_id": "395f55854d03cd558bde94b6da4cd75c", "text": "Function to check the Token balance of a contributor .", "title": "", "metadata": ""}
{"_id": "cb7852ac244eebda3cba2f0113f3fa8d", "text": "Returns the largest bet such that we could pay out 10 maximum wins .", "title": "", "metadata": ""}
{"_id": "0b7b59790ee8b722bb16aa7db5fecdcf", "text": "total number of tokens for an amount of wei , discount-adjusted .", "title": "", "metadata": ""}
{"_id": "f6731538eaebe2fd4b6531a3627d4d37", "text": "modifier to ensure it is before start of first period of sale .", "title": "", "metadata": ""}
{"_id": "06ec86e35bafa696ee3979b6dfb29161", "text": "Users can withdraw their funds .", "title": "", "metadata": ""}
{"_id": "2d988ddd4696174af9109fd817ea1ca4", "text": "Borrow tokens from the bank on behalf of another account .", "title": "", "metadata": ""}
{"_id": "611465cd1c3bcbb1a9859694d2ae9652", "text": "Sets the wallet to hold unsold tokens at the end of ICO .", "title": "", "metadata": ""}
{"_id": "d9debee69a9f4275ebaa9c005fde47e0", "text": "Get the number of stocks being held .", "title": "", "metadata": ""}
{"_id": "4a2d1368648b6c098b0a7c74c73bacd9", "text": "Seo tokens .", "title": "", "metadata": ""}
{"_id": "1e2b922e17a970699345660b4ee29d83", "text": "Allow crowdsale owner to change maximal investment per address in pre funding stage .", "title": "", "metadata": ""}
{"_id": "43cf05003deda71bc47d671f2d4e3dc7", "text": "The combined total drp supply .", "title": "", "metadata": ""}
{"_id": "aebd73b47a4f0fc77e393f8f729c6ac7", "text": "Change rate .", "title": "", "metadata": ""}
{"_id": "6ef60bfd488509934be6fd6cc7f0316d", "text": "Count the bid towards minor prize fund , check if the user wins a minor prize , and if they did , transfer the prize to them .", "title": "", "metadata": ""}
{"_id": "26003d9254fb82f14c61837990ef51e6", "text": "Picops verification .", "title": "", "metadata": ""}
{"_id": "4da734462e525f1da85a05032bf9351d", "text": "Turning off the ICO .", "title": "", "metadata": ""}
{"_id": "48ebb0aa2fef74f5cac6c69a2e82612d", "text": "Make an offer to sell a specified amount of tokens to a specific buyer at an already agreed price .", "title": "", "metadata": ""}
{"_id": "9ef565ae4a0a6bdff2d539219fb08c22", "text": "Function to send tokens after verifing KYC form .", "title": "", "metadata": ""}
{"_id": "9189c599174696f08437e3f35d7d9841", "text": "mechanism for TMX Global Tokens Creation only minter can create new TMX Global Tokens check if TMX Global Token Hard Cap is reached before proceedig - revert if true .", "title": "", "metadata": ""}
{"_id": "5a58f3c4c23f4c3a66c29e801e48c23b", "text": "Checks if the sender is whitelisted for the presale .", "title": "", "metadata": ""}
{"_id": "4ce4cc6c8d83a73524df4e68f54c1649", "text": "checks to make sure user picked a valid team .", "title": "", "metadata": ""}
{"_id": "e96029331dc575c2b62a40bc0d6cf5ce", "text": "Allow the system to create transactions for transfers when appropriate .", "title": "", "metadata": ""}
{"_id": "72475d2b65491b8949767e41fc2b8a09", "text": "increase supply and send newly added tokens to owner .", "title": "", "metadata": ""}
{"_id": "7bdc130e03f583737ce552f5ee0068ef", "text": "Create new 0 gen .", "title": "", "metadata": ""}
{"_id": "6deb16bdf2b709cb81b525a10cad3620", "text": "number of complete cycles d / m / w / y .", "title": "", "metadata": ""}
{"_id": "8f617cc0b36a74168a12d5a6e833d161", "text": "Distributes tokens for playing .", "title": "", "metadata": ""}
{"_id": "8304d05ce662dbc0e4259e958bf112a7", "text": "Go back to private sale .", "title": "", "metadata": ""}
{"_id": "4f3c1ef4fe4f187ec463c0f4eeae0505", "text": "issueAndActivateBounty ( ) : instantiates a new draft bounty .", "title": "", "metadata": ""}
{"_id": "8475a94b3e0e4cc0a713027557a2f5c5", "text": "Recalculates dividends and redumptions .", "title": "", "metadata": ""}
{"_id": "09c0362ecb582a81c69c7117dfe4d3a6", "text": "Throws if contract is not paused .", "title": "", "metadata": ""}
{"_id": "60c3fab8dc913b186c7749340aca0639", "text": "Checks whether a given wallet is authorized to ICO investing .", "title": "", "metadata": ""}
{"_id": "4aac61f86d7417ca37fb0883a9d33546", "text": "This function handles deposits of Ether into the contract .", "title": "", "metadata": ""}
{"_id": "00b316bb440df2fee373096cd6e2c1fb", "text": "Allow founder to set the token contract address .", "title": "", "metadata": ""}
{"_id": "9c3445f2015fc6ab0e3fe4136b90072a", "text": "mint tokens for airdrop .", "title": "", "metadata": ""}
{"_id": "585d830fb26e0c5573969eb844547d86", "text": "Finalize the balance for the given address .", "title": "", "metadata": ""}
{"_id": "d96a18150d02adc13a8b97fa5e117abc", "text": "Transfer a element owned by another address , for which the calling address has previously been granted transfer approval by the owner .", "title": "", "metadata": ""}
{"_id": "883c65e4bc1b42720eb695ecef7871af", "text": "Return the amont of allowance .", "title": "", "metadata": ""}
{"_id": "0dfd6381378dad5d553821273c378710", "text": "Schedule crowdsale end .", "title": "", "metadata": ""}
{"_id": "da2ca4fd5986364e235f67f817567dbb", "text": "Changes the beneficiary of the _id'th lock of the sender with the provided newBeneficiary .", "title": "", "metadata": ""}
{"_id": "a9121b4262da24bee7ed1e651f659e82", "text": "Migrate the holder's tokens to a new contract and burn the holder's tokens on the current contract .", "title": "", "metadata": ""}
{"_id": "7fb5ac6979eb4d030a2c651e47feee0a", "text": "Creation of unit properties .", "title": "", "metadata": ""}
{"_id": "b07ec45fce648a994585f5a78cdc6911", "text": "Burns the rest of the tokens after the crowdsale end .", "title": "", "metadata": ""}
{"_id": "8231496e9cf76188246a307fbf1a3a28", "text": "Return transcoder's token pools for a given round .", "title": "", "metadata": ""}
{"_id": "282d6e71f0c46dee66883c894882de99", "text": "Returns only stats data about a specific asset .", "title": "", "metadata": ""}
{"_id": "a0d03e8efb8af915ded695ba9d857a93", "text": "bonus to the fighters in the season .", "title": "", "metadata": ""}
{"_id": "2f0b68dd7b37e9dfc3c03334acea14be", "text": "get balance of address x .", "title": "", "metadata": ""}
{"_id": "7a80d3e1922e3cb90fa95045e7e23786", "text": "Releases 1 / 4 of team supply after 6 months .", "title": "", "metadata": ""}
{"_id": "c9d39b8b0bb1ff48f0872e5e0d441a7e", "text": "add Ether to reserve fund without issue new tokens ( prices will growth ) .", "title": "", "metadata": ""}
{"_id": "488273d383b89273fd725ee2f02aed56", "text": "4 * 21m coins total reward begins at 4 * 25 and is cut in half every reward era ( as tokens are mined ) .", "title": "", "metadata": ""}
{"_id": "c2d16bbfaaf04663329975670a606f4a", "text": "Set the aelfCommunityMultisig .", "title": "", "metadata": ""}
{"_id": "649cc88f00b231470078e607df01c371", "text": "The bid is canceled by the publisher .", "title": "", "metadata": ""}
{"_id": "6e5ffed3d3a5891d822e7b2316096520", "text": "Accepts ether and creates new MUSC tokens .", "title": "", "metadata": ""}
{"_id": "1b2cfda7e9dd1fbcfe1b7ee0dcc7f1e1", "text": "un-freeze all the transfers .", "title": "", "metadata": ""}
{"_id": "22952fcaeda9fb21d7b448c85ba08b68", "text": "Only callable by the whitelister .", "title": "", "metadata": ""}
{"_id": "4e95a88805db6c6f811ce1cf4c18dec1", "text": "In case one of us dies , we need to replace ourselves .", "title": "", "metadata": ""}
{"_id": "1c894b0506e1c1455466d2af531f8bae", "text": "Admin functions only executed by owner : .", "title": "", "metadata": ""}
{"_id": "43fdb123086d956ac597f5f5a2b00364", "text": "Stores a horsey name .", "title": "", "metadata": ""}
{"_id": "6c4003127276316758ea8d074d429789", "text": "true if crowdsale event has ended .", "title": "", "metadata": ""}
{"_id": "1c569dc3a475161da57165d759bbcbc7", "text": "Allows an address with sufficient spending allowance to send tokens on the behalf of _from .", "title": "", "metadata": ""}
{"_id": "2b67b75bce26cf14726de7c39499a530", "text": "Participate in the CLN based issuance ( for contract ) .", "title": "", "metadata": ""}
{"_id": "19472e6782198f8228d1ab21fb8da021", "text": "returns randomness used in PoW calculations .", "title": "", "metadata": ""}
{"_id": "63a615c9b38dd862ec573d255b140f25", "text": "Returns the address that owns the specified node .", "title": "", "metadata": ""}
{"_id": "092884ad525855631c1f55e7fc4f53a7", "text": "Checks that a given Ponie is able to breed ( i . e .", "title": "", "metadata": ""}
{"_id": "0e7f0f0620e54e0746a9a62d6dc88a30", "text": "The 160 LSB is the address of the balance .", "title": "", "metadata": ""}
{"_id": "635127a520e2aec78e1609f42dca4d4b", "text": "Change the address which is authorized to send bought tokens with BTC .", "title": "", "metadata": ""}
{"_id": "5bbbea92a4755ebf74db9baf14bb28ae", "text": "This internal function returns the cap amount of a whitelisted address .", "title": "", "metadata": ""}
{"_id": "2743890398e9fd06f3c9113f79ea1618", "text": "Returns a lookup table of all vesting grant beneficiaries .", "title": "", "metadata": ""}
{"_id": "d0db566c1dd5c18e3a6f84fa64936696", "text": "Withdraw selected amount of ethereum from the contract back to user , update the balance .", "title": "", "metadata": ""}
{"_id": "e54f9769eca64eb1a374bcbeb4689589", "text": "Allow changing the Vuepay MultiSig wallet incase of emergency .", "title": "", "metadata": ""}
{"_id": "e6a37ebc33b40d2d388be5f15c30d5bb", "text": "Changes the official admin user address .", "title": "", "metadata": ""}
{"_id": "e7a6eff86d83ca0a71d46c2b094abb0d", "text": "Update allows for setting the data associated to a property .", "title": "", "metadata": ""}
{"_id": "d0551ec74be0545749498ac5654f0394", "text": "For creating Meme .", "title": "", "metadata": ""}
{"_id": "b36af96532f2ec123f46663c44406be6", "text": "True if the current timestamp is before the allocation lock period .", "title": "", "metadata": ""}
{"_id": "51b402b204dd7e93157377b994341e38", "text": "Delete all of a blob's packed revision block numbers .", "title": "", "metadata": ""}
{"_id": "1cbf073ea77686480f6dd102be8a4089", "text": "given game result , _return win choice by specific spread .", "title": "", "metadata": ""}
{"_id": "ce8176c4f1207ae55cab64cea71398f1", "text": "Amount of remaining tokens of _owner that _spender is allowed to spend .", "title": "", "metadata": ""}
{"_id": "978e59852ba3aee80835fdd94aa53e3f", "text": "Token purchase .", "title": "", "metadata": ""}
{"_id": "95553cd579d8640d7025bd644a05ae2c", "text": "Add new beneficiary to start vesting .", "title": "", "metadata": ""}
{"_id": "2f6bddae6c81de7f44d5a00e966e7f4c", "text": "Return the result of multiplying x and y , interpreting the operands as fixed-point demicimals .", "title": "", "metadata": ""}
{"_id": "95f19e6e12e5e816471ae42d41dcb574", "text": "finalizeSale ( ) ends the TokenSale .", "title": "", "metadata": ""}
{"_id": "6aaf40acc270e51550746e5145309966", "text": "Transfer token from 'from' address to 'to' addreess .", "title": "", "metadata": ""}
{"_id": "051c5967c46f6e86f44a96cbd13a9699", "text": "Make sure you allowed this contract enough ERC20 tokens before using this function as ERC20 contract doesn't have an allowance function to check how much it can spend on your behalf .", "title": "", "metadata": ""}
{"_id": "e49cffddd9ceaef8429c28689170682d", "text": "VantageToken Contract is generating from here .", "title": "", "metadata": ""}
{"_id": "d2e6d19b59647589ad236ed337a9fb6c", "text": "Pre Sale 1 ETH 30 , 000 token - - Limit 50 , 000 , 000 tokens 1 Stage 1 ETH 15 , 000 token - - Limit 25 , 000 , 000 tokens 2 Stage 1 ETH 7 , 250 token - - Limit 25 , 000 , 000 tokens 3 Stage 1 ETH 7 , 000 token - - Limit 25 , 000 , 000 tokens 4 Stage 1 ETH 6 , 750 token - - Limit 25 , 000 , 000 tokens 5 Stage 1 ETH 6 , 500 token - - Limit 25 , 000 , 000 tokens 6 Stage 1 ETH 6 , 250 token - - Limit 25 , 000 , 000 tokens 7 Stage 1 ETH 6 , 000 token - - Limit 25 , 000 , 000 tokens 8 Stage 1 ETH 5 , 750 token - - Limit 25 , 000 , 000 tokens 9 Stage 1 ETH 5 , 500 token - - Limit 25 , 000 , 000 tokens 10 Stage 1 ETH 5 , 250 token - - Limit 25 , 000 , 000 tokens 11 Stage 1 ETH 5 , 000 token - - Limit 50 , 000 , 000 tokens .", "title": "", "metadata": ""}
{"_id": "cd25023ed552142482e3ecdc5a3b9d19", "text": "Disables burning through burnable bool .", "title": "", "metadata": ""}
{"_id": "4f9ee0c075e0d857f01b21d0464bac22", "text": "Called by the recipient after the lock has expired .", "title": "", "metadata": ""}
{"_id": "00448d14948f879dc26053f33bdc6579", "text": "Creates a new promo Athlete with the given name , with given _price and assignes it to an address .", "title": "", "metadata": ""}
{"_id": "f53ca66d31e1fe1e66777f10b17547f6", "text": "Lock all trading of tokens .", "title": "", "metadata": ""}
{"_id": "edb648398c370761c75d2686ffe23a73", "text": "gas 210019 .", "title": "", "metadata": ""}
{"_id": "08ebae615edf8afad492ca7f119a16f9", "text": "Get an array of IDs of each token that an user owns .", "title": "", "metadata": ""}
{"_id": "9afd686f08374619986bf17226d36663", "text": "Removes allowed contract from the list of allowedContracts .", "title": "", "metadata": ""}
{"_id": "eecd9a27300487a5aa44b5dcd69c8a6b", "text": "Updates the payout for the token the owner has .", "title": "", "metadata": ""}
{"_id": "6538dc58b9ca83153594386947465fd0", "text": "from begin January to end January around 1 cent per token from begin Febuary to end Febuary around 5 cent per token before and after . . . . .", "title": "", "metadata": ""}
{"_id": "55d9b350841cc6d76522fc63eb74fe2d", "text": "minimum amount of funding to consider crowdsale as successful .", "title": "", "metadata": ""}
{"_id": "fdaaf6bc54b063052717ff12381d846e", "text": "Grants a beneficiary Jiffys using a vesting schedule .", "title": "", "metadata": ""}
{"_id": "050f5588752e357dd65d3bf9ae5e3a59", "text": "Function to check if an address is authorized .", "title": "", "metadata": ""}
{"_id": "b2ea60ee42fa77a2c2cbe118c3a0ddd4", "text": "Transfers token ownership to this contract owner .", "title": "", "metadata": ""}
{"_id": "05cb9b2f35f2271778f201bae089645c", "text": "Get dealer and lucky records .", "title": "", "metadata": ""}
{"_id": "2571122bebdac654ac46cf7981fab1a8", "text": "Opens refunding .", "title": "", "metadata": ""}
{"_id": "82506588513e9c3ad58a3f54b0051664", "text": "lock's down the proxy and prevent the call of exec by ownerAddress and recoveryAddress .", "title": "", "metadata": ""}
{"_id": "6bf301b9eb7e7b4f745c24bb116d7631", "text": "Define stats to an asset .", "title": "", "metadata": ""}
{"_id": "f9220275b5be42b4b03c3827614db738", "text": "Convenience function to assign bounties / bonds for multiple questions in one go , then withdraw all your funds .", "title": "", "metadata": ""}
{"_id": "20796311ecf8fa1dd6fad028ee44e449", "text": "Destroy minted tokens and refund ether spent by investor .", "title": "", "metadata": ""}
{"_id": "ab079b8a853a6efb751d4cdd1d8d60aa", "text": "Transfer the same amount of tokens to multiple beneficiaries .", "title": "", "metadata": ""}
{"_id": "a5da17d24eb41eb8c609a7fcad84f768", "text": "sun timelocked tokens .", "title": "", "metadata": ""}
{"_id": "b88c170a1fe58573a518fbbf4f504875", "text": "Can be called only before initialization .", "title": "", "metadata": ""}
{"_id": "487b7f818b3647015b48fef78f84b1f3", "text": "proposal rank by voteCount .", "title": "", "metadata": ""}
{"_id": "f1d7894e348bf23a4d1b4ccfd0bf2899", "text": "function through which owner can remove an address from whitelisting .", "title": "", "metadata": ""}
{"_id": "c36d64163e4b4cca27bf876c0e95deed", "text": "Flag an user as known .", "title": "", "metadata": ""}
{"_id": "6f43077415ef1e13661b3b041bcfef52", "text": "allows the owner of the cat to accept an adoption request .", "title": "", "metadata": ""}
{"_id": "887c6b597fa596d90955d053b1dadedf", "text": "Return total amount of funded ether , in wei .", "title": "", "metadata": ""}
{"_id": "cbda570e7ae0336a4ac2254b31a9f9f2", "text": "Jurors can withdraw their PNK from here .", "title": "", "metadata": ""}
{"_id": "279c41380da03667293e41fe901e9d6a", "text": "create new policy .", "title": "", "metadata": ""}
{"_id": "7fbae928c0706961aac4b0c738ff394e", "text": "Return address of crowdfunding beneficiary address .", "title": "", "metadata": ""}
{"_id": "c97504d86d725c20a1ddc5dcfb61eba2", "text": "Map block number to block index .", "title": "", "metadata": ""}
{"_id": "e0a4a407731bc1243784a75784e86509", "text": "Implements transfer method for multiple recipient .", "title": "", "metadata": ""}
{"_id": "7c93e7e2c630c2b76613ee5ca2e60ade", "text": "Return all variables needed for dapp in a single call .", "title": "", "metadata": ""}
{"_id": "3a3bbb433650a21b2cc1f2177bcfa219", "text": "Checks if a given address currently has transferApproval for a particular EtherDog .", "title": "", "metadata": ""}
{"_id": "939256a70d764bc77e646e2a0ce926d8", "text": "contract can only be destructed if all payments where paid back .", "title": "", "metadata": ""}
{"_id": "9c54b08a7e7933c2dd0e35fb5ed0d137", "text": "Return cardList array .", "title": "", "metadata": ""}
{"_id": "a7beab1c3718577b3c757ed8cfd6d539", "text": "hatch eggs into bats .", "title": "", "metadata": ""}
{"_id": "0954fcf635b4db7c1c15179091fe9f9b", "text": "Calculates the rate based on slabs .", "title": "", "metadata": ""}
{"_id": "126fdfe1d3f21f9f2982dad02410b684", "text": "Get CWC and Transfer UETs .", "title": "", "metadata": ""}
{"_id": "aea95ff9056944613da6cc2f71a2d851", "text": "withdraws tokens held by the controller and sends them to an account can only be called by the owner .", "title": "", "metadata": ""}
{"_id": "77088d6b61b977c747908ed81ef301d3", "text": "This function is used to transfer tokens that have been bought through other means ( credit card , bitcoin , etc ) , and to burn tokens after the sale .", "title": "", "metadata": ""}
{"_id": "c1f1fa3f42c612b59786510d4cbe1722", "text": "Increase allowance of spender .", "title": "", "metadata": ""}
{"_id": "391737ace8399fa875100b83715e9b48", "text": "IInvestRestrictions implementation .", "title": "", "metadata": ""}
{"_id": "39546a1ae9a3f6da1bd8b4683a6821aa", "text": "invest bct token function .", "title": "", "metadata": ""}
{"_id": "231a982687a80d171169f7055efd369c", "text": "Assigns ownership of a specific Dank to an address .", "title": "", "metadata": ""}
{"_id": "83c59e780dcde8037f456efb51984435", "text": "Access modifier for CLevel-only functionality .", "title": "", "metadata": ""}
{"_id": "3c0cb7b8029a6627b4ca24862de5daa1", "text": "Mint 55 mln tokens for owner .", "title": "", "metadata": ""}
{"_id": "3287a79071a6c2cf58366b452266a1d2", "text": "returns the mining status of the passed address .", "title": "", "metadata": ""}
{"_id": "97fb4c6925212a770481d7cb8b8ab663", "text": "Function Modifiers .", "title": "", "metadata": ""}
{"_id": "a2eee43e3834c0f6bee4063dc6b923a7", "text": "function to put mating request in exchange for ethers .", "title": "", "metadata": ""}
{"_id": "eea1f5084889e19efd2512abc7126fdb", "text": "Mints a FreeLOT coupon to a two match winner allowing them a free entry to Etheraffle .", "title": "", "metadata": ""}
{"_id": "5b1690c3bd57552754297dad29eaba04", "text": "karma functions .", "title": "", "metadata": ""}
{"_id": "3bf16b5224dec9ef10ab5cba473368d0", "text": "result - total supply of tokens ever emitted .", "title": "", "metadata": ""}
{"_id": "c675dc05cdcb7da06e0b24836faf1a39", "text": "onlyArbitrator Forces a milestone to be paid out as long as it has not been paid or canceled .", "title": "", "metadata": ""}
{"_id": "6a974c2f79ccb34982f49ecf6636feab", "text": "Method to calculate bonus for the user as per currently running phase and contribution by the user .", "title": "", "metadata": ""}
{"_id": "473d6f8ac1d0c38052ea9ce91c1b2540", "text": "Function to disable token transfers .", "title": "", "metadata": ""}
{"_id": "603dc3ca385972614b8cce8ed1f64d00", "text": "Validators : returns one proposal ( the first one ) greater than , STRICTLY GREATER THAN the given _timestampFrom timestamp _timestampFrom .", "title": "", "metadata": ""}
{"_id": "a6639f63c10a8fdca6a346001a1162dc", "text": "destroy this contract to return ether to multiSigAddress stored in this contract .", "title": "", "metadata": ""}
{"_id": "14a405f1babc219f9c07b65584bf73e0", "text": "Check if presale is active .", "title": "", "metadata": ""}
{"_id": "893b83aa99e9c9db754fab0b20ce9cbb", "text": "prvent from the ERC20 short address attack .", "title": "", "metadata": ""}
{"_id": "254552582c8d9d54a34dd0bdf00c16a6", "text": "Modifier that will execute internal code block only if the sender is a parent of the forwarder contract .", "title": "", "metadata": ""}
{"_id": "e57ff90ece20dccd0685c1b0676ef295", "text": "gets the address of owner of the team .", "title": "", "metadata": ""}
{"_id": "556d19764af9b0a58931b2e03c25c467", "text": "Executes the contract if called by an authorized user and the balance of the escrow is greater than 0 .", "title": "", "metadata": ""}
{"_id": "8127a60c92ffa43c67b9677efb205085", "text": "Calculates how much of commission there is to be paid .", "title": "", "metadata": ""}
{"_id": "d2866898a00a2dfa27f61cfd082d550e", "text": "Checks if more tokens should be minted based on amount of sold tokens , required additional tokens and total supply .", "title": "", "metadata": ""}
{"_id": "a70fc77370a66cb5a4327401c519035b", "text": "Update ETH value in milieurs .", "title": "", "metadata": ""}
{"_id": "d8f9d9edf0b02b37bcf26f19a1a57f8f", "text": "Transfers tokens from one address to another .", "title": "", "metadata": ""}
{"_id": "ff0b43b8e7702bb13a1ecbdf05353f16", "text": "calculates the next token ID based on totalSupply .", "title": "", "metadata": ""}
{"_id": "15bdffb478b91c6391d8917620c5b2ff", "text": "Change exchange rate of ether to tokens .", "title": "", "metadata": ""}
{"_id": "3f3b3f381252b6a31a990968ffa56499", "text": "Halts or unhalts direct trades without the sell / buy functions below .", "title": "", "metadata": ""}
{"_id": "a5ad0d8756748193f37b8114cef79595", "text": "Add wallet address with existing check .", "title": "", "metadata": ""}
{"_id": "f0cecdb8c2843392d9ff80f48b9fd734", "text": "Function to contribute to the ICO .", "title": "", "metadata": ""}
{"_id": "2ac8bb9d22f6bf488b23abe93bfc3099", "text": "Create and deploy the target contract ( extension of Target contract ) , and sets the msg . sender .", "title": "", "metadata": ""}
{"_id": "094ad2d2121c6f7c41b8df56c4549aa5", "text": "makes sure weiSend of current tx is reset .", "title": "", "metadata": ""}
{"_id": "4ade084c8062411aab3ff92519921c54", "text": "lets the owner withdraw from the bankroll numTokens the number of tokens to withdraw ( 0 decimals ) .", "title": "", "metadata": ""}
{"_id": "cf880972039d05214c74a9d04470ca92", "text": "Sets new round ico .", "title": "", "metadata": ""}
{"_id": "8b875ac7a58ddd1859fff8dfb04cce89", "text": "notice Transfer _value HON Token tokens from sender's account msg . sender .", "title": "", "metadata": ""}
{"_id": "1ef24073f850bf32474210732a1b2233", "text": "endCrowdfund function used to end the crowdfund called only by the founder and remiaining tokens get burned .", "title": "", "metadata": ""}
{"_id": "822d6e0048ef4ad625ab3c387e1724c0", "text": "Disables ICO .", "title": "", "metadata": ""}
{"_id": "cd5afb7a9bd633b5de53498558770431", "text": "sender withdraw entire rewards / dividends .", "title": "", "metadata": ""}
{"_id": "18238c398db07a07a46e8f1255418bb2", "text": "Registers the player with the given referral code .", "title": "", "metadata": ""}
{"_id": "d7d38cd9ce796bae3bd3fd5d04924096", "text": "Unlocks tokens locked in unrevealed vote where poll has ended .", "title": "", "metadata": ""}
{"_id": "79f936e89b6cb38d359e793ffaece176", "text": "Owner can withdraw all the money at any time .", "title": "", "metadata": ""}
{"_id": "994bdb1bf14bfe6c9be66831788e3da1", "text": "Set new snapshot creator address .", "title": "", "metadata": ""}
{"_id": "d610e77ab487fee863a5c16a571858eb", "text": "allows contract owner to mint all community tokens per COMMUNITY_TOKENS and have the vested to the beneficiaryWallet .", "title": "", "metadata": ""}
{"_id": "0a953fe6d43963fdbb9c6528b65e2fe1", "text": "Set inflation based upon the current bonding rate and target bonding rate .", "title": "", "metadata": ""}
{"_id": "14574ff284f4a59710f59d7017528078", "text": "Change the address of the Ozreal contract address .", "title": "", "metadata": ""}
{"_id": "5852324a83f37e6f61fe6659b27c0108", "text": "view the ICO end date and time .", "title": "", "metadata": ""}
{"_id": "20986da8f26bfbaa1f0b0346465bcd2c", "text": "Mints tokens corresponding to the transaction value for a whitelisted user during the crowdsale .", "title": "", "metadata": ""}
{"_id": "cec5334461fe1c97af2b621a24b73bf4", "text": "Send tokens amount of tokens from address from to address to .", "title": "", "metadata": ""}
{"_id": "a35916840562acacf4661e81d8dab3ea", "text": "update wallet address .", "title": "", "metadata": ""}
{"_id": "61a38a834495add7ef764d9fd2df3107", "text": "set Abel Address .", "title": "", "metadata": ""}
{"_id": "8fd1fc6b099b73dbfcb7f3c8f1ce4341", "text": "Function that updates ETH / USD rate .", "title": "", "metadata": ""}
{"_id": "3f72fdb36a6dfdf235a19c403707e545", "text": "Prevents methods from perfoming any value transfer .", "title": "", "metadata": ""}
{"_id": "cb4226518e74284cf48d8a981f628c5e", "text": "Removes users from whitelist .", "title": "", "metadata": ""}
{"_id": "dec7ac7781be90d66050941496ce63b0", "text": "Sets new Mediator wallet .", "title": "", "metadata": ""}
{"_id": "bb6cdca2840f3b2d66fb9160cc3e7713", "text": "Withdraw balance from presale .", "title": "", "metadata": ""}
{"_id": "b23f7ac4dc91f935048309440ef1379f", "text": "TODO Commenti .", "title": "", "metadata": ""}
{"_id": "a2cd8c0ee0f478edddff6e3860288058", "text": "The sender is declaring themselves as a candidate for active transcoding .", "title": "", "metadata": ""}
{"_id": "9238e38f49339a91076336fe230047c8", "text": "project's owner withdraws ETH funds to the funding address upon successful crowdsale .", "title": "", "metadata": ""}
{"_id": "9eeea0ed21c80ce4369dde44a0b3ed83", "text": "Release releasedAmount tokens to contract .", "title": "", "metadata": ""}
{"_id": "a901daf3afa0748103ac6530d724493b", "text": "Mint a new hero , with _heroClassId .", "title": "", "metadata": ""}
{"_id": "a8ec02c809b6a30a3e5918183e5b03f4", "text": "Getter functions : .", "title": "", "metadata": ""}
{"_id": "ccbaf4bf7c32148abf994ebafb60dfc4", "text": "Proxy call for adding hodler stake .", "title": "", "metadata": ""}
{"_id": "08133d27266b13c702a29378dd4614d8", "text": "power function .", "title": "", "metadata": ""}
{"_id": "5e1abed5cb6454459537c355d93ea352", "text": "logs an hash value into the blockchain .", "title": "", "metadata": ""}
{"_id": "e29c71d2fd5d35c795f1d1e066345871", "text": "decrease approval to _spender .", "title": "", "metadata": ""}
{"_id": "2526d4843b413ed978d6e9bb1b265c7a", "text": "Release locked tokens to all beneficiaries if they are due .", "title": "", "metadata": ""}
{"_id": "e60637fee4b3e9dc471d58f19bbb6f13", "text": "Burns a specific amount of the sender's tokens .", "title": "", "metadata": ""}
{"_id": "c68215282b148db26f8a830f7c8d5fc2", "text": "Buy bear token normally .", "title": "", "metadata": ""}
{"_id": "2ea4da876818ea3d6fd983dfd159dac5", "text": "Throws if _dungeonId is not created yet .", "title": "", "metadata": ""}
{"_id": "3df8ad3e67fbb352e22e8425fbf1d10b", "text": "allows the manager to clear the quick buy path .", "title": "", "metadata": ""}
{"_id": "54387cd203ea1576dd867a817a29c777", "text": "Add whitelisted address to the presale .", "title": "", "metadata": ""}
{"_id": "fbaafb3bbeb84dd68bb9d8a0f75ad186", "text": "Called MiniMeToken approvesAndCall to this contract , calls deposit .", "title": "", "metadata": ""}
{"_id": "9fce4ce5278e81660c518f33e2bc4b67", "text": "internal function to update MLB player id .", "title": "", "metadata": ""}
{"_id": "56e3e959f7942cc53fccb78133672da8", "text": "when srcQty too small or 0 the expected rate will be calculated without quantity , will enable rate reference before committing to any quantity .", "title": "", "metadata": ""}
{"_id": "12048decec6ee8a7d2ec1815379e9234", "text": "Function to Increase tokens .", "title": "", "metadata": ""}
{"_id": "95bf27080339acfce1dfc787773a9365", "text": "burn tokens in the behalf of someone .", "title": "", "metadata": ""}
{"_id": "53b8272ce6f9392c1fb55f7597709351", "text": "Returns the current day .", "title": "", "metadata": ""}
{"_id": "4dca9b0e5c68731f1e2fd3d7846c8c4e", "text": "Allow changing of contract ownership ready for future upgrades changes in management structure .", "title": "", "metadata": ""}
{"_id": "0e1c5e37b60f3ea4c05ace13ed899a73", "text": "For previous contributors to hedgely v0 . 1 .", "title": "", "metadata": ""}
{"_id": "4f47936192b728cc1c69171b83955311", "text": "The transaction params are valid for buying in .", "title": "", "metadata": ""}
{"_id": "39fbf2df9aca1dae2d11fb0a74100b7e", "text": "buy ICS tokens .", "title": "", "metadata": ""}
{"_id": "ae655573cf07e9a35aa2122b0971b32d", "text": "deploys and initializes a new Registry contract that consumes a token at an address supplied by the user .", "title": "", "metadata": ""}
{"_id": "b9b6adf81b39a5c4e26db478d856c9df", "text": "Safe transfer of ownership in 2 steps .", "title": "", "metadata": ""}
{"_id": "6652244be097ab3a50ea29dd994a02a4", "text": "Allows the current admin to set the admin in one tx .", "title": "", "metadata": ""}
{"_id": "0d0c91d2a0ee2ffa2a8b989229b0d96e", "text": "current number of players still waiting for their payout .", "title": "", "metadata": ""}
{"_id": "49629816d12c363b8da1a9780a9435ee", "text": "Implements ERC20 allowance ( ) .", "title": "", "metadata": ""}
{"_id": "5661e977bf8487d2d0132d18ebf4e917", "text": "Limits execution to after unlock date .", "title": "", "metadata": ""}
{"_id": "88a1928c8bdf5253cacbd1370517f399", "text": "Change the goal .", "title": "", "metadata": ""}
{"_id": "5126ad5f9620ee6d672413d73efca2b0", "text": "Get list of wallet owners , will return fixed 50 until fork .", "title": "", "metadata": ""}
{"_id": "c7264f71febf94090f6532ac3b3b5d3d", "text": "transfer token from admin to users .", "title": "", "metadata": ""}
{"_id": "23eb1462413567f1b068d2792653c115", "text": "Allows the owner to burn his own tokens .", "title": "", "metadata": ""}
{"_id": "59d956c014c4916ce57cb68faf9a2ed1", "text": "Utility functions .", "title": "", "metadata": ""}
{"_id": "c5b1712f667def69cbd209530ac75bf4", "text": "Return the ether cost ( including fee ) of purchasing n nomins .", "title": "", "metadata": ""}
{"_id": "8f30cd69cc8e84f1f4a34200a33b1c29", "text": "Throws if called when crowdsale has closed .", "title": "", "metadata": ""}
{"_id": "4c1aee4553b6478394362f6bd9f31430", "text": "Withdraw tokens to owner wallet , works only after vesting period elapses .", "title": "", "metadata": ""}
{"_id": "8e5ae9ed8e792cb3b63c708a52c6bc6a", "text": "return if arb token exists .", "title": "", "metadata": ""}
{"_id": "4a16e6b8b5083a68e017d0597b2ce03c", "text": "For refunds only .", "title": "", "metadata": ""}
{"_id": "4bbe87674871be172d80a92705819332", "text": "Returns balance of the wallet .", "title": "", "metadata": ""}
{"_id": "53b9896fbfc6182e5b310a13c98dec49", "text": "the Min Cap USD function too chage the miin cap usd .", "title": "", "metadata": ""}
{"_id": "9f4b376af1ea66b07efc0eceaab887f1", "text": "Allows the current superuser to transfer his role to a newSuperuser .", "title": "", "metadata": ""}
{"_id": "1d3163fe083b15409f7eaf5c64a794d9", "text": "Function to check the amount of tokens that a spender can spend .", "title": "", "metadata": ""}
{"_id": "7094e680be8166ffabc8a7c36d67b998", "text": "freeze ? Prevent Allow target from sending receiving INVE preconditions .", "title": "", "metadata": ""}
{"_id": "00e8ad87df7757ffe2287e1c6f144efc", "text": "1000 Centurions will ever exist .", "title": "", "metadata": ""}
{"_id": "d63c623165f2dfcfcd00898b3d486c99", "text": "Returns the total amount of capital allocated .", "title": "", "metadata": ""}
{"_id": "4647b8df8ceec5612c1ee9f65faae84f", "text": "Only owner can set zlotsJackpot address .", "title": "", "metadata": ""}
{"_id": "5621a2f8eae4967cb39f9a12a5997e23", "text": "A contract attempts to get tokens .", "title": "", "metadata": ""}
{"_id": "d212984677ef502141fa0dae48019384", "text": "Mint is allowed while TotalSupply totalTokens .", "title": "", "metadata": ""}
{"_id": "22ae1d6fd7d2f2eae350b0e368d6f279", "text": "This function transfers tokens to the contributor's account .", "title": "", "metadata": ""}
{"_id": "0470a5cc2e2eccbbfa1151d30000e291", "text": "Returns default register fee .", "title": "", "metadata": ""}
{"_id": "9eb47126c0ea8940a59ca85021d02670", "text": "Set minter .", "title": "", "metadata": ""}
{"_id": "45ea18d3a3a3c372df3f12321f49cb88", "text": "Burns a specified amount of tokens from messager sender's account .", "title": "", "metadata": ""}
{"_id": "1b7d0379b4e43e395e7e7ed63999e800", "text": "Function to stop sale before the sale period ends .", "title": "", "metadata": ""}
{"_id": "9055ab2e57eb3b64a75cbe3e89c4694e", "text": "Check if token ID is valid .", "title": "", "metadata": ""}
{"_id": "5560e6ddd54a08fbca87bc5693cd6dcf", "text": "The address of the implementation .", "title": "", "metadata": ""}
{"_id": "355ac621159a6ebba0ffe097f20917bd", "text": "installation of a lockup for safe , fixing free amount on balance , token installation ( run once ) .", "title": "", "metadata": ""}
{"_id": "0da9e1016f1cff8af6a183ed06158657", "text": "End the offering .", "title": "", "metadata": ""}
{"_id": "7de41271c48beaa5281d0bdcc49f7ee1", "text": "Returns True if self contains needle .", "title": "", "metadata": ""}
{"_id": "48db3ebb68e35931be15e4b2b22af7bb", "text": "Set the pauseMaster ( callable by the owner only ) .", "title": "", "metadata": ""}
{"_id": "35d1f99ba80fe6ebdb0de44e0dfe9371", "text": "Withdraw fee to owner .", "title": "", "metadata": ""}
{"_id": "8c3cae2c5b1d4aa7dcc8f13e0d6e74f5", "text": "Returns true if we can bet ( in betting window ) .", "title": "", "metadata": ""}
{"_id": "e5bc8a6283354bc846470887abb32303", "text": "Enable returns of investments .", "title": "", "metadata": ""}
{"_id": "e1955a817196b3b57b21fe8c56df595d", "text": "_isNotOnSale : whether a skin is not on sale .", "title": "", "metadata": ""}
{"_id": "07137b8498658297f78cfa925fb6cc76", "text": "transfers the token specified from sneder address to receiver address .", "title": "", "metadata": ""}
{"_id": "7f187c3df9e43fa2efa67d6a42426c58", "text": "batch vote ( delegated to chairperson ) .", "title": "", "metadata": ""}
{"_id": "19da36dc37946c3ff20324707c4a0670", "text": "Called by the owner of the contract to start the sale .", "title": "", "metadata": ""}
{"_id": "f521c5bd53e24ffd3ad89a6c9570b01f", "text": "Gets the current stage id .", "title": "", "metadata": ""}
{"_id": "0bb4857bb15e7fce4c6aa3d06e029b03", "text": "We might vary this at some point .", "title": "", "metadata": ""}
{"_id": "7b9da69188b2398c70fb68485c3e9a2a", "text": "Burn particular HQX amount already sent to this contract .", "title": "", "metadata": ""}
{"_id": "cc33042c86ec63d2636b9dffeb44dd16", "text": "function to spin .", "title": "", "metadata": ""}
{"_id": "4c7297d94f5c837025639ff97c76ec8b", "text": "transfer token ownership after allocation .", "title": "", "metadata": ""}
{"_id": "4fd7c8284c8cb2146e7537ffa365bfa4", "text": "returns the redemptionPaused status from contract storage .", "title": "", "metadata": ""}
{"_id": "c340cd07f45637f37ff86386f8d85baa", "text": "method to calculate reward ( called internally by callback ) .", "title": "", "metadata": ""}
{"_id": "0c4d0651d0d238f2b6dd77f83637ef37", "text": "Special Function can only be called by pre-buy and only during the pre-crowdsale period .", "title": "", "metadata": ""}
{"_id": "b63a71f4a81edd9f79e0579f3f1ec3bd", "text": "If the user sends 0 ether , he receives 1000tokens .", "title": "", "metadata": ""}
{"_id": "711713867099831a655cd3b72026f90b", "text": "Set property data updates flag .", "title": "", "metadata": ""}
{"_id": "a6ef332084a59dabf4dd843747edd769", "text": "Calculate which day into the sale are we .", "title": "", "metadata": ""}
{"_id": "abea735882cb81de71cfa7619325ec65", "text": "Sends the contract funds to the researcher that proved the contract is broken .", "title": "", "metadata": ""}
{"_id": "14db93cbd9e4c4814a8a236945cc2cd8", "text": "modifier for Admin functions .", "title": "", "metadata": ""}
{"_id": "ce3111ef05e1c12e1bee1e582b7ba4c2", "text": "Forward funds directly to beneficiary .", "title": "", "metadata": ""}
{"_id": "8908a59a857481c2a333be8802f10c76", "text": "Transfer Token from Previous Owner to New Owner .", "title": "", "metadata": ""}
{"_id": "d3e0700647bf8ac9afde0c79d771190a", "text": "Record _contributors .", "title": "", "metadata": ""}
{"_id": "6901e3314aaaf369ff02060e7f9f6519", "text": "used to verify ownership .", "title": "", "metadata": ""}
{"_id": "90b28eb0f15b8d429791d1c75ba0af49", "text": "Updates the fee contribution multiplier required for calling challenge ( ) .", "title": "", "metadata": ""}
{"_id": "f36377851900d56d7f8b5977c28894a3", "text": "Internal Order Placement - credit funds received when taking liquidity from book .", "title": "", "metadata": ""}
{"_id": "0c128ae41050a47b9421329355fbdc41", "text": "Finalizes contract .", "title": "", "metadata": ""}
{"_id": "0d29659666414d5ebb8235f5ea1fc511", "text": "Storage location of the crowdsale's start time .", "title": "", "metadata": ""}
{"_id": "a703ec6bbd282785312405b4ebd46d91", "text": "Check address is valid owner ( owner or coOwner ) .", "title": "", "metadata": ""}
{"_id": "6a1133d8fa31682e541b6d14ac8c4814", "text": "prevents contracts from interacting with FoMo4D .", "title": "", "metadata": ""}
{"_id": "53151a8c7e4dc76587c28653fb47899a", "text": "Can be used before insert to build an ordered list .", "title": "", "metadata": ""}
{"_id": "d39fbb552797b92e7e906eeda6be7386", "text": "changePrice function .", "title": "", "metadata": ""}
{"_id": "fb4a54b2e4d441481ba62f3b1ec91c98", "text": "Creates a crowdsale with initial conditions .", "title": "", "metadata": ""}
{"_id": "196284d49718d7b6209131f77840cc59", "text": "Transfer ETH amount from contract to owner's address .", "title": "", "metadata": ""}
{"_id": "9ee403e9c3c9fe3f17df229e934a6398", "text": "Call this method to let the contract to go into next period of sales .", "title": "", "metadata": ""}
{"_id": "1921db70519e7bc06b6ea285604adb61", "text": "Checks unprefixed signatures .", "title": "", "metadata": ""}
{"_id": "2c411eb092e4dd94ae45f999999c19a5", "text": "Modifier to make a function callable only when the contract is not terminated .", "title": "", "metadata": ""}
{"_id": "19f85172f5e7b64e0b5e987ea63ad3cc", "text": "Returns all relevant info about a specific player .", "title": "", "metadata": ""}
{"_id": "c8a4ebab1539c781d3cecc48c00c0aec", "text": "use _id 0 to create a new item , otherwise modify existing .", "title": "", "metadata": ""}
{"_id": "42254d99c6e0a7826b0475caadbe44fe", "text": "logic runs whenever a reload order is executed .", "title": "", "metadata": ""}
{"_id": "9e3e955d12dc833c145ffd585b68b8e7", "text": "consume digital artwork tokens for changing physical artwork .", "title": "", "metadata": ""}
{"_id": "9ad46aa94dff93bb72f3a897c9f825fb", "text": "in case lottery tickets weren't sold due some time anybody who bought a ticket can ask to refund money ( - comission to send them ) .", "title": "", "metadata": ""}
{"_id": "6ac2f6961fee19ca4a3355cdf9baf377", "text": "Gets current bonus system .", "title": "", "metadata": ""}
{"_id": "cfe632488464c339ed19c8e041d82ec2", "text": "function to check percentage of goal achieved .", "title": "", "metadata": ""}
{"_id": "94bf0cf0ad55de54055ad8e05c9d0c90", "text": "Add holder addr into arrays .", "title": "", "metadata": ""}
{"_id": "6e73929fe21c9d2a42598b668e252fba", "text": "May only be called by the owner address .", "title": "", "metadata": ""}
{"_id": "2ea2654627f0d627f6a12c2b3b932c29", "text": "Removes the address from the swap balances for a swap , and moves the last address in the swap into their place .", "title": "", "metadata": ""}
{"_id": "7212de7f0f27e42d35823487a22189fe", "text": "Transfers the balance of the sale auction contract to the DopeRaiderCore contract .", "title": "", "metadata": ""}
{"_id": "5f6d40ce446c3d32836cb48767f12a34", "text": "Add extra owner .", "title": "", "metadata": ""}
{"_id": "501da1e4a2743f70cf516f57f28a8c09", "text": "function used in Reward contract to know address of token holder .", "title": "", "metadata": ""}
{"_id": "a6b0c509709833c7b471cbb6bc1c9273", "text": "Get posible dividends value .", "title": "", "metadata": ""}
{"_id": "484c3d1444171766d71bb74228d75161", "text": "Handle wallet debit if necessary , pay out fees , pay out seller profit , cancel sale , transfer card .", "title": "", "metadata": ""}
{"_id": "43352a0a60ed12be13ab49ae489e8df4", "text": "Function to mint tokens .", "title": "", "metadata": ""}
{"_id": "c8df3d95a834a6081a43e2cd3aaf8561", "text": "Returns the address currently assigned ownership of a given deed .", "title": "", "metadata": ""}
{"_id": "f2eccd5001a2be6f3c89decece48253b", "text": "Get the address and balance of both partners in a channel .", "title": "", "metadata": ""}
{"_id": "e5bb57a802b6dbc815ebcda23807f8d6", "text": "Get the price for a GNR token at any given block number .", "title": "", "metadata": ""}
{"_id": "e2bd3aacbda97fad2325c416953ed1c1", "text": "called by the contract to pause , triggers stopped state .", "title": "", "metadata": ""}
{"_id": "bb2fc9d77c2cd5616093b43e39b99fe6", "text": "Release all the bets back to the bettors if , for any reason , payouts cannot be completed .", "title": "", "metadata": ""}
{"_id": "5ddefe555013cebe1991a3ee8ad5435e", "text": "Ensures the promiseId as actually in use .", "title": "", "metadata": ""}
{"_id": "fd0860d7cde00ea52ee3aa97efd94c24", "text": "change ICO starting date if more time needed for preparation .", "title": "", "metadata": ""}
{"_id": "7c88fcebd900c81df8d7755eabfd12a6", "text": "used by a new owner to accept a token ownership transfer can only be called by the contract owner .", "title": "", "metadata": ""}
{"_id": "b701165da5f2334c4161728160a4de27", "text": "called to seal the DO .", "title": "", "metadata": ""}
{"_id": "128d44a25cc8b67f3b08b087b5aaf7d1", "text": "Allows the current owner to change admin of the contract .", "title": "", "metadata": ""}
{"_id": "d808d304fd52f10ccb5684a0b1364d07", "text": "Internal send , only can be called by this contract .", "title": "", "metadata": ""}
{"_id": "adfbc6a86600d88184c892dfb93c1e46", "text": "Handles the registration of a player to a board .", "title": "", "metadata": ""}
{"_id": "e0a7ac042c905bb7825359e16d406a87", "text": "allows the creator to set minimum balance a user must have in order to create MarketContracts .", "title": "", "metadata": ""}
{"_id": "78150ed17a786d2e996a249ad8d0c53c", "text": "Transfer tokens to multiple address .", "title": "", "metadata": ""}
{"_id": "007cd28ebd88cedb56bc00be6b673bdd", "text": "withdraw ether from etherdelta .", "title": "", "metadata": ""}
{"_id": "3b021bad4c14122682e0c6784980a44f", "text": "Only central mint can burn from their own supply .", "title": "", "metadata": ""}
{"_id": "ef2a87e67c8d0f7bf4633372dc5f93bf", "text": "adds stage to sale .", "title": "", "metadata": ""}
{"_id": "fabbb819d6a35ba73110b105bf77e084", "text": "allows the C4F system to change the status of an Escrow contract .", "title": "", "metadata": ""}
{"_id": "5ece192a5f0224c3315268f5ae2c190f", "text": "Send _value from msg . sender .", "title": "", "metadata": ""}
{"_id": "8fd7f1c5b0bf7d4c667cd8dbee26c5a4", "text": "Withdraw traded tokens 10M at a time .", "title": "", "metadata": ""}
{"_id": "6855406ba2473b4860727fcc3bcaf269", "text": "Grant tokens to a specified address .", "title": "", "metadata": ""}
{"_id": "5b875d869c4f729343c86bf58e774b84", "text": "This function is called when crowdsale is unsuccessfully finalized and refund is required .", "title": "", "metadata": ""}
{"_id": "e495cd19e92e79ff245070201e6b8430", "text": "Set Goal .", "title": "", "metadata": ""}
{"_id": "357d4fc5ae57ee796b12fccb0b9aea0c", "text": "Change founder address ( where crowdsale ETH is being forwarded ) .", "title": "", "metadata": ""}
{"_id": "d9964b472dd58bf1c3a906d59e0b325c", "text": "What is the length of a particular ioucoin ? .", "title": "", "metadata": ""}
{"_id": "b05b7cb88e5063fe6c588a61f3ed7480", "text": "Returns the total token supply .", "title": "", "metadata": ""}
{"_id": "8945cf0229c888d4d48634e171255530", "text": "Get the state of the token transform .", "title": "", "metadata": ""}
{"_id": "e52b65022c7dbfdbe72188d38ec61139", "text": "Execute all the token repartition .", "title": "", "metadata": ""}
{"_id": "b62198f042d75e5bc871829dd1724e6a", "text": "Set new PreIco HardCap .", "title": "", "metadata": ""}
{"_id": "1cbd87d7413441e1c6d548578b09586e", "text": "from DSValue : bool has ; bytes32 val ; .", "title": "", "metadata": ""}
{"_id": "dd2570b92e3d9da072a9e2df89a9c9b8", "text": "Callback function that receives the results of transcoding verification .", "title": "", "metadata": ""}
{"_id": "b4558fd7dffaef5af56ad63a1832f2be", "text": "Change owner of the smart contract .", "title": "", "metadata": ""}
{"_id": "b9401203bb3777339eb73a7d3050be20", "text": "send ERC20 Token to multi address .", "title": "", "metadata": ""}
{"_id": "e9026d11febfee74e313170e22299a42", "text": "requires the address to be non null .", "title": "", "metadata": ""}
{"_id": "77de65ca3895ce3dc608444d47e76026", "text": "Calculate the fee for a given price .", "title": "", "metadata": ""}
{"_id": "0114a8055868a2a4468a4e12e18ab55b", "text": "Purchases multiple new InterfaceToken tokens .", "title": "", "metadata": ""}
{"_id": "dd56200092e63ae1099313b0d6235bcf", "text": "Sets either custom public or private sale events .", "title": "", "metadata": ""}
{"_id": "2713bf8b42f2091ab0ffb880d4a54bf0", "text": "Log withdraw info when first receice request .", "title": "", "metadata": ""}
{"_id": "d08eb239af9f6d9426bc340265642e8a", "text": "Cancel ship exploration in case it get stuck .", "title": "", "metadata": ""}
{"_id": "e890e82c6971aaeced56b49d17f86531", "text": "Updates the Generation Season Controller .", "title": "", "metadata": ""}
{"_id": "916cfec5a6b7679bfc394058f19fc773", "text": "convinient function for read is address authed .", "title": "", "metadata": ""}
{"_id": "56d13fea3a5aa73bdebd6b4906a43fbb", "text": "Submit a transcoding job .", "title": "", "metadata": ""}
{"_id": "91b4791d9e5c6bcb85bc52b62e4eb3e6", "text": "This will need to be triggered externally every x days .", "title": "", "metadata": ""}
{"_id": "303f946ca1c9ba8add0b1cd31d5e0948", "text": "Gets the information for a specific plot based on its index .", "title": "", "metadata": ""}
{"_id": "816bfd72ccc3f6c98cb3c0313ee06cbb", "text": "Returns the amount of POLY allocated .", "title": "", "metadata": ""}
{"_id": "9561456d9e9152b33b9d7efe2a4a5b82", "text": "pays the advisor part of the incoming ether .", "title": "", "metadata": ""}
{"_id": "ab7677d0b0c1be68c885e779c684f43c", "text": "Change current state of transfer allowence to opposite .", "title": "", "metadata": ""}
{"_id": "12b940fe61a807bc15f07fb5450065ce", "text": "Calculate the PRYZ allocation for the given contributor .", "title": "", "metadata": ""}
{"_id": "90be24071b1ad0d96f5846a0c7892798", "text": "Checks if a transcode receipt hash was included in a committed merkle root .", "title": "", "metadata": ""}
{"_id": "65126c8a19533d16eb3f33286030fae6", "text": "transfer tokens to a specified address .", "title": "", "metadata": ""}
{"_id": "a4de2d836183497e4d702ec36c5c370e", "text": "Additional api for contracts to use as well .", "title": "", "metadata": ""}
{"_id": "b03074596451375702c2e8dfa9114cc7", "text": "Distribute jackpot .", "title": "", "metadata": ""}
{"_id": "d746cc8938a7876504aafb2bf3091571", "text": "standard ERC20 compatible balance accessor .", "title": "", "metadata": ""}
{"_id": "4782d208184b487a206ee916a6da2fb3", "text": "Burn tokens which are not sold on previous stage .", "title": "", "metadata": ""}
{"_id": "0c20b39703781c7716e9747df77a0b1f", "text": "Is msg . sender .", "title": "", "metadata": ""}
{"_id": "3e71725c51d15ab7393458fd91343707", "text": "Executes a number of call scripts .", "title": "", "metadata": ""}
{"_id": "f04376fe752f36ab65d36aede2ea2d3e", "text": "Accepts new ownership on behalf of the LeadcoinCrowdsale contract .", "title": "", "metadata": ""}
{"_id": "56e37288e9dac910d266a8ecd685f6a1", "text": "Pay redemption .", "title": "", "metadata": ""}
{"_id": "86e168e3ad82d7e225153a73fbe44270", "text": "Updates the wallet to which all payments are sent .", "title": "", "metadata": ""}
{"_id": "b292dc0291b9661dd2eb2f02cf1ed436", "text": "delegate your wallet to someone .", "title": "", "metadata": ""}
{"_id": "747488734d7ae2c232954a01e0a6f8b3", "text": "Unlocked total supply .", "title": "", "metadata": ""}
{"_id": "faf84d7931157f14a7f6573ae1cce2fc", "text": "Retrievings all gift template ids .", "title": "", "metadata": ""}
{"_id": "1987d6abb42f8584e325ef5254243ede", "text": "Refund tokens from the investor balance .", "title": "", "metadata": ""}
{"_id": "37e7bb8f6a5f6fb2710beb875d3cf827", "text": "This will create new series .", "title": "", "metadata": ""}
{"_id": "df1a110dfabd63f511f796d0f8b49b58", "text": "Un-Bans an Address .", "title": "", "metadata": ""}
{"_id": "3f2db54c092725efe2628ed1b293206c", "text": "Returns a list of all Monster IDs assigned to an address .", "title": "", "metadata": ""}
{"_id": "c390a19ed579557c711ca8a50fe5fa3d", "text": "Allows general users to register their handle .", "title": "", "metadata": ""}
{"_id": "e776cb09fcd234d20d4f1993dc9d9e66", "text": "Function to distribute tokens to the msg . sender .", "title": "", "metadata": ""}
{"_id": "cf84cd859c2629797d2d61d58be7068a", "text": "Manager can set minimum donation price to purchase an alias .", "title": "", "metadata": ""}
{"_id": "2797c142f9062e9fa90517de73bf7fed", "text": "approve allowances .", "title": "", "metadata": ""}
{"_id": "cf732158dfa0ee7a0f578e2255ea6265", "text": "Contract authorization - only allow the official KYC provider to perform certain actions .", "title": "", "metadata": ""}
{"_id": "af220b3e0dee8456ce2246ea793d8d8d", "text": "destination MET token contract calls claimReceivables to record burned tokens have been minted in new chain .", "title": "", "metadata": ""}
{"_id": "726a41bbd22769b1f6891619c07263dc", "text": "Private function .", "title": "", "metadata": ""}
{"_id": "a0d5e29d7689bd0a7632e33c8a6750fa", "text": "Initialises addresses of founders , bountyOwner .", "title": "", "metadata": ""}
{"_id": "317e31a728b33d767bbf030ff23bc885", "text": "Creator / Owner change name and symbol .", "title": "", "metadata": ""}
{"_id": "442dec291885f25405474915b1b5fd46", "text": "Allows the owner to freeze the contract .", "title": "", "metadata": ""}
{"_id": "fcece07e8845b773a246b91a21459d2d", "text": "Function for transfer ethereum from contract to any address .", "title": "", "metadata": ""}
{"_id": "3b5ad9eb78383945aa977d162cc0dae7", "text": "get winning ticket number basing on block hasg ( block number is being calculated basing on specified displacement ) .", "title": "", "metadata": ""}
{"_id": "dfaf8738fcaca13acb689f64b8ce8553", "text": "0 : found exchangeId 0 : not found .", "title": "", "metadata": ""}
{"_id": "0c975eb0eaf3551d6f15b18f6e6d3a87", "text": "Checks if all pre-tde contributors have received their tokens .", "title": "", "metadata": ""}
{"_id": "1b54e221bde00f36e8245cf28a6540ef", "text": "Token allocations have not been set .", "title": "", "metadata": ""}
{"_id": "ce4d4ae050ed7b5f6481261fad3417c3", "text": "We implement ERC721Metadata ( optional ) and ERC721Enumerable ( optional ) .", "title": "", "metadata": ""}
{"_id": "d7fbcda8be0dd7273cbf9f506586da1f", "text": "Bootstrap the contract and make the tokens transferrable .", "title": "", "metadata": ""}
{"_id": "1627d6452dd6e10b8f5d44e3a423deab", "text": "owner - owner's info .", "title": "", "metadata": ""}
{"_id": "05f5b2e027a57f1ca993bcc05d1978cb", "text": "Start the crowdsale .", "title": "", "metadata": ""}
{"_id": "3350f99d07e02d438f5236fc126d870e", "text": "get Oscar Address .", "title": "", "metadata": ""}
{"_id": "9d26885e4218278ae59153a84c4218bb", "text": "Human readable period Name .", "title": "", "metadata": ""}
{"_id": "b8f944188dfb7b1b98c12762947c1eec", "text": "Override transferFrom for optionally paying fee to Custom token owner .", "title": "", "metadata": ""}
{"_id": "b5da7e91ce69b578c2e317567ecb82a6", "text": "get account info .", "title": "", "metadata": ""}
{"_id": "56bece7c989cff0fe534b560668f7d59", "text": "Returns total number of Tulips created so far .", "title": "", "metadata": ""}
{"_id": "2368781e50da653c08492266f7eb44f4", "text": "Returns whether or not a bytes32 array is empty ( all null-bytes ) .", "title": "", "metadata": ""}
{"_id": "357919bb4bb146a64460c152f1bcd4e4", "text": "Withdraws ARP .", "title": "", "metadata": ""}
{"_id": "67901b6e2acb00979f5c7504fbdc7792", "text": "Send tokens to users from the exel file .", "title": "", "metadata": ""}
{"_id": "4f4db697c9efe500d9e49164ddfe715e", "text": "Returns the amount of coins approved by the owner that can be transferred by spender .", "title": "", "metadata": ""}
{"_id": "c3fdacf6e4baa161cc84c9c1d1070f89", "text": "Initialize Application and it's assets .", "title": "", "metadata": ""}
{"_id": "1e21a0710d1a685462438183b9d71907", "text": "send eth to contract .", "title": "", "metadata": ""}
{"_id": "38aeda6365948791f95fbe594a8b03f7", "text": "Start Pre-Sale .", "title": "", "metadata": ""}
{"_id": "1497cf6e6aa284d615ccf6883d7f9bd5", "text": "public onlyOwner .", "title": "", "metadata": ""}
{"_id": "dd3e6c543afa2cdb81719d03e3232853", "text": "allow owner to collect balance of contract during donation period .", "title": "", "metadata": ""}
{"_id": "57f6dbc3078c74053789875346ec3002", "text": "This is the constructor whose code is run only when the contract is created .", "title": "", "metadata": ""}
{"_id": "e862fa642c4ccb585ddc6f288a963546", "text": "ERC 20 Standard Token interface transfer function .", "title": "", "metadata": ""}
{"_id": "a477a846386626571836c6e8e1740171", "text": "Allows a sender to withdraw any amount in the contrat .", "title": "", "metadata": ""}
{"_id": "feac1f351d119879be062aa48fa72c90", "text": "Throws if called when the period or tokens are over .", "title": "", "metadata": ""}
{"_id": "ec9ed709246acb322e035516af3028d8", "text": "withdraw reward .", "title": "", "metadata": ""}
{"_id": "ab8dcd3c673c70dd5f668d5bac10f843", "text": "Gets list of txs ( paginated ) .", "title": "", "metadata": ""}
{"_id": "6838f87da3ba68d72f51e455b5fd62ce", "text": "deploys and initializes a new PLCRVoting contract that consumes a token at an address supplied by the user .", "title": "", "metadata": ""}
{"_id": "1dadedd3a153a4e936383f08aa1d40ac", "text": "calc totalSoldToken .", "title": "", "metadata": ""}
{"_id": "46f8446fa01f0318612d126ab3779e01", "text": "Perform the inevitable actions which cause release of that which each ioucoin is built to deliver .", "title": "", "metadata": ""}
{"_id": "e4d1adc4e3fd605d891511009f9e413e", "text": "change the Phase from phase2 to phase3 sale .", "title": "", "metadata": ""}
{"_id": "432eb8ce40e635bc5a4d114a8fc9a2c3", "text": "approve implements ERC20 , but is forbidden .", "title": "", "metadata": ""}
{"_id": "165f63ee31aa14d2fcd7c93d94e6a755", "text": "Always call this before calling dailyHash and submitting a steak .", "title": "", "metadata": ""}
{"_id": "9a177ff87af78d318d59b7ae2fe0a933", "text": "Chnage block reward according to GDP .", "title": "", "metadata": ""}
{"_id": "b3f9c041880db21eb084238212351ce7", "text": "Set state migrated .", "title": "", "metadata": ""}
{"_id": "535403da1db6c723e2437d1828b7fd54", "text": "Function to mint tokens _to The address that will receive the minted tokens .", "title": "", "metadata": ""}
{"_id": "71d6750be4f491e8e8dbb9369900a6f8", "text": "returns a value as a accurate to 20 decimal points .", "title": "", "metadata": ""}
{"_id": "2491d4fef4626951b59574db89f3e98d", "text": "Cancels all previous offers by msg . sender .", "title": "", "metadata": ""}
{"_id": "f96072c2f149ecbc99266f6db472bb6d", "text": "default function , map admin .", "title": "", "metadata": ""}
{"_id": "f0adba01f8bc58fb2fb65c6b02c98bdb", "text": "Transfer ETH to Vega Round A address , as soon as minimum goal is reached .", "title": "", "metadata": ""}
{"_id": "cde0d1ad07882e1f6122f1a5e4c982f4", "text": "manager use this function to revoke a confirm of the operation revoke will not be call inside other functions , so it can be external to save some gas .", "title": "", "metadata": ""}
{"_id": "28239bbaa76c7df6153d0d1d5bc1e45d", "text": "To reset gvtAccount when taxRateNumerator is not zero , must reset taxRateNumerator first .", "title": "", "metadata": ""}
{"_id": "5f8cc3d297adbf0428cde722d54505b3", "text": "Transfer locked tokens to Decent . bet's .", "title": "", "metadata": ""}
{"_id": "ca5481144b76cfade7754307bda840d5", "text": "bet on Number .", "title": "", "metadata": ""}
{"_id": "8fb9d513d002ba1c7d0682f866e84ab5", "text": "TESTNET only .", "title": "", "metadata": ""}
{"_id": "95393233ee3e6c02881416ab6d505597", "text": "result stored HKG amount .", "title": "", "metadata": ""}
{"_id": "6d54c7079ed65aa19dbba7371ecb9375", "text": "Returns the total locked tokens .", "title": "", "metadata": ""}
{"_id": "a8185d3375170a89a39453a3888a14b0", "text": "Access modifier for Bank-only functionality .", "title": "", "metadata": ""}
{"_id": "13bfe8713c4a06123f761274725ea9db", "text": "True if a ring's hash has ever been submitted ; false otherwise .", "title": "", "metadata": ""}
{"_id": "8f5462b205d1510a1b6d9ff74e9b72af", "text": "Distribute more token of contract and transfer to owner .", "title": "", "metadata": ""}
{"_id": "6ea7cd9d919c990d6e4f519a2763a537", "text": "Calculates the amount that has already vested .", "title": "", "metadata": ""}
{"_id": "aca25e473f3d97e94bb3db74819a509f", "text": "Withdraw winned pot .", "title": "", "metadata": ""}
{"_id": "b9b6804ac386c2df9ceac95dc9b01fea", "text": "Get the last time a DIN was updated with a new owner or resolver .", "title": "", "metadata": ""}
{"_id": "881a352d8dd88ecc3d7ca5b0a9ad110b", "text": "Returns the contribution to be used for a sender that had previously been whitelisted , and any refund value if expected .", "title": "", "metadata": ""}
{"_id": "e9523de0d602c0cceff0be453f2f0fca", "text": "standard ERC20 transfer .", "title": "", "metadata": ""}
{"_id": "d2f58bd3f8ded830f42aed45bbb2df6f", "text": "Finalizes the public sale .", "title": "", "metadata": ""}
{"_id": "f4cebdbec59b52f852acc2081809de95", "text": "Increases approved amount of tokens for spender .", "title": "", "metadata": ""}
{"_id": "dc6608c44d434bdea5e9170c1be01a94", "text": "Usage : using IxLib for IxIface .", "title": "", "metadata": ""}
{"_id": "978a7b88d5c2f61bcde26c08d0eebc15", "text": "we don't know the exact interfaces yet so use the lockedMonsterStats value to determine if the game is ready see WhitePaper for explaination for our upgrade and development roadmap .", "title": "", "metadata": ""}
{"_id": "ba910fc3ea7ddc51e221c0b90ce40a1b", "text": "utility , returns the expected return for selling the token for one of its connector tokens , given a total supply override .", "title": "", "metadata": ""}
{"_id": "f618dae963d7267f7e745ed8fac27c91", "text": "Allow the owner to add new games with different winning chances .", "title": "", "metadata": ""}
{"_id": "f21387d64781a32d090371907f8aceba", "text": "Decode an RLPItem into bytes .", "title": "", "metadata": ""}
{"_id": "1e3e8ee35a6eba5d55b5ac4b9ed78e95", "text": "Internal function used for calculating ICO discount percentage depending on phases .", "title": "", "metadata": ""}
{"_id": "ffadb167cb370d2811bcc887c6041709", "text": "Gets the RED balance of any address .", "title": "", "metadata": ""}
{"_id": "e3ebeff16d6b2b39df1b39da356b3357", "text": "distributes eth based on fees to com , aff , and poh .", "title": "", "metadata": ""}
{"_id": "c123c26ca051c9379aa3013ded2a8adf", "text": "Perform the inevitable actions which cause release of that which each Penis is built to deliver .", "title": "", "metadata": ""}
{"_id": "a782d496ea282b7d806204b8646f651c", "text": "Allows a token holder to vote on a proposal .", "title": "", "metadata": ""}
{"_id": "d16c05c9bff1f51152af4677b89807f3", "text": "Request a payment in tokens to a user FROM the appropriate tokenBankroll .", "title": "", "metadata": ""}
{"_id": "4da1b0cee87b42279a2b1e0b4a93e9f9", "text": "Spender of tokens transfer an amount of tokens from the token owner's balance to another account , with KYC verification check for the crowdsale participant's first transfer .", "title": "", "metadata": ""}
{"_id": "4f2ec2599294f708cbef28c667f7b3fe", "text": "Show balance of wallet .", "title": "", "metadata": ""}
{"_id": "a2f6508c529ef3585300cade1ba3e2ac", "text": "Change acceptable address .", "title": "", "metadata": ""}
{"_id": "3066cbf7b80c1cf0597320c13c012b3a", "text": "Returns number of tokens which can be issued according to the inflation rules .", "title": "", "metadata": ""}
{"_id": "05e9af95a5c258d4ef015d44ca03ff49", "text": "Sets the threshold .", "title": "", "metadata": ""}
{"_id": "9ccaa89f043d1059edf8cac71f5a046a", "text": "Set allowance for other address and notify .", "title": "", "metadata": ""}
{"_id": "e7b7641758b3975d089af1c98b6ee968", "text": "Implements ERC20 transfer ( ) .", "title": "", "metadata": ""}
{"_id": "9d630faab9dc8b3e2594995e3b35b6aa", "text": "Refund Step 1 : this function will return the deposits paid first ( this step is separate to avoid issues in case the claim refund amounts haven't been loaded yet , so at least the deposits won't get stuck ) .", "title": "", "metadata": ""}
{"_id": "67227d3a30460fad81dc0a049cd91574", "text": "Next redemption request ID .", "title": "", "metadata": ""}
{"_id": "1268926f4adc0636422bed13980b433e", "text": "Function to configure contract addresses .", "title": "", "metadata": ""}
{"_id": "627511d2613ed1d910730fb90f2db6b9", "text": "Transfer value BP tokens from sender's account msg . sender .", "title": "", "metadata": ""}
{"_id": "f2a186944d8678159f5358d4e9456c09", "text": "Close ICO crowdsale .", "title": "", "metadata": ""}
{"_id": "d2aaff0d9cee25827df4be427d6aaad7", "text": "The owner can use this function to force the exit of an investor from the contract during an emergency withdrawal in the following situations : .", "title": "", "metadata": ""}
{"_id": "939cb56c48b42b28a83bc4dc7ecfb9e3", "text": "Sets the Note for an Account Address .", "title": "", "metadata": ""}
{"_id": "bf57296d452247d3a21691309d7d4884", "text": "This function should be used to manually reserve some tokens for big sharks or bug-bounty program participants .", "title": "", "metadata": ""}
{"_id": "8dcc76e92a02981f0cb252e1e6acd6b9", "text": "Anyone can call this .", "title": "", "metadata": ""}
{"_id": "826a420499f398e180b2532aa0f3bbcc", "text": "Throws if called in any state other than requiredState .", "title": "", "metadata": ""}
{"_id": "35abcdd252a2db30c19e1c52a669ead9", "text": "Both of the below are checked on the overridden validPurchase ( ) function .", "title": "", "metadata": ""}
{"_id": "603f95de762c995f94c12c3c52cf35ec", "text": "escrow API vote YES - immediately sends funds to the peer .", "title": "", "metadata": ""}
{"_id": "6ed70e17218321f6fffa4504c503fd54", "text": "Apply our fixed buy rate and verify we are not sold out .", "title": "", "metadata": ""}
{"_id": "52d62b87f7aed355bf291fa81de23510", "text": "Check Crowdsale Goal and Dead Line .", "title": "", "metadata": ""}
{"_id": "c8768eb15f7e50e2144f3f6fe54adb97", "text": "Transfers tokens to a specific address .", "title": "", "metadata": ""}
{"_id": "c9fcf489f97154a5107a2f6b7d487f2f", "text": "Allows the developer to set the crowdsale address .", "title": "", "metadata": ""}
{"_id": "7d453968dbccb6d50292084349670f47", "text": "withdraw CZR .", "title": "", "metadata": ""}
{"_id": "eaf26be0683df1727aef26a647eefad0", "text": "Function to change the founders multi sign address .", "title": "", "metadata": ""}
{"_id": "1cdaeea1d87345e24d7d1db32d6e858c", "text": "Sets the external contract address of the Token Contract .", "title": "", "metadata": ""}
{"_id": "5ade27de6b4a30546f7e9ccc94aee566", "text": "Ether swap , activated by the fallback function after receiving ethers .", "title": "", "metadata": ""}
{"_id": "00c70eb6c82490d75f0569b2478e005c", "text": "burn warrior .", "title": "", "metadata": ""}
{"_id": "b32913686098663328e25973806d3d51", "text": "Fired by the releaseTokensTo function after minting tokens , to forward the raised wei to the address that collects funds .", "title": "", "metadata": ""}
{"_id": "0e5f85ce5c73c29b4d68a8939beabb71", "text": "Allows a sender to transfer vested tokens to the beneficiary's address .", "title": "", "metadata": ""}
{"_id": "c339476c85f03ceff65b78b87e830f5e", "text": "transfer _value token for a specified address .", "title": "", "metadata": ""}
{"_id": "634a2da1789a3abed35db08f60090694", "text": "Withdraw balance from own account .", "title": "", "metadata": ""}
{"_id": "502eab17d836ce95458384cfd9361ac1", "text": "gas used by ganache simulation run : 96451 .", "title": "", "metadata": ""}
{"_id": "d2ccd72ca7f9157b09418749ee7b218b", "text": "this is the main battle function of the contract , it takes the card address you wish to claim as well as your card choices as input .", "title": "", "metadata": ""}
{"_id": "f963a3b6ab8d64de3ddf8e949729391b", "text": "Set round length .", "title": "", "metadata": ""}
{"_id": "4c37b895df0f644b4b09338120bbe7e4", "text": "Change money wallet owner .", "title": "", "metadata": ""}
{"_id": "2189072c1fc2f5e578998e50592443ed", "text": "rewrote transfer method .", "title": "", "metadata": ""}
{"_id": "65960d2b68d767d07c3a9350c27fc5f9", "text": "creates all tokens 99 B this address will hold all tokens all community contrubutions coins will be taken from this address .", "title": "", "metadata": ""}
{"_id": "6d01f619e4424342118dd7dd6580ddeb", "text": "sum of a and b .", "title": "", "metadata": ""}
{"_id": "984f7e8f4e096ad54a4e3c4e3c07ee18", "text": "Returns the number of deeds owned by a specific address .", "title": "", "metadata": ""}
{"_id": "0f5cc446f7cb5bb2e7f988886d70e36c", "text": "Owner can claim teams tokens when crowdsale has successfully ended .", "title": "", "metadata": ""}
{"_id": "31c62aebf4e8e7ed943f7310019cef36", "text": "Returns current game metrics .", "title": "", "metadata": ""}
{"_id": "90cd1c77c879b0258b41960062e14f65", "text": "set even distribution threshold .", "title": "", "metadata": ""}
{"_id": "b1fe7fe3ae0ce500786800842b263b10", "text": "Update minVotedTokensPerc value after tap poll .", "title": "", "metadata": ""}
{"_id": "3ec9c8be64dd1fe07f0b2f7394dec767", "text": "only owner address can set minBet .", "title": "", "metadata": ""}
{"_id": "1233945c826be7e0d90d6b59afc9d4ef", "text": "Method is needed for recovering tokens accedentaly sent to token address .", "title": "", "metadata": ""}
{"_id": "e9877239f3745f78bc2402544ca43f0b", "text": "only the crowdsale can call it .", "title": "", "metadata": ""}
{"_id": "fa2935b09630ec1640ae89b7a300c83c", "text": "Burns a specific amount of tokens , only can holder's own token .", "title": "", "metadata": ""}
{"_id": "5217a0ed2241acc40e48f9a00405d2f4", "text": "Return tokens and weights .", "title": "", "metadata": ""}
{"_id": "f193e2167edd84c3269e5991a819d18d", "text": "gets the user balance , requires that the user be the msg . sender , .", "title": "", "metadata": ""}
{"_id": "445561e286e760daa1c26a9fdfc13994", "text": "unlock token for trading .", "title": "", "metadata": ""}
{"_id": "3f6b23bb9e5c932efc5ad67ffa005621", "text": "Queries what address owns an asset .", "title": "", "metadata": ""}
{"_id": "9423414501abb1de08569594765eb9f8", "text": "withdraw from a specific account .", "title": "", "metadata": ""}
{"_id": "5df09251831592f2dbb5d4ef12e8f555", "text": "Locks tokens for a given beneficiary .", "title": "", "metadata": ""}
{"_id": "bec9fa56a4646578d885a739a7e59b26", "text": "The sale contract variables are defined in EtherLambosBase to allow us to refer to them in EtherLambosOwnership to prevent accidental transfers .", "title": "", "metadata": ""}
{"_id": "bea2bbdbaf14cd8d8c7ade937d74caa0", "text": "Calculates current time bonus .", "title": "", "metadata": ""}
{"_id": "318b96f72e667249d656626bd4a40fbe", "text": "Accept a new owner .", "title": "", "metadata": ""}
{"_id": "bd35206a6fb07e65e3b029bb64292cfe", "text": "remove from sale rabbit .", "title": "", "metadata": ""}
{"_id": "86e22e8e91d9b75dfd85dc6f50913332", "text": "Returns array of all the owners of all of pixels .", "title": "", "metadata": ""}
{"_id": "9af37f71f53620dcea2411c6d8283979", "text": "Use to get the allowance provided to the spender .", "title": "", "metadata": ""}
{"_id": "c8689c7959f05910a3ed9f33953e5e1d", "text": "transfer for unlocked accounts .", "title": "", "metadata": ""}
{"_id": "8f55f11aff8db8ef1e3fecfc3f7088b8", "text": "buyinAs function .", "title": "", "metadata": ""}
{"_id": "0e570ab4a0a78dda978417a4cffd3714", "text": "how many shares ? .", "title": "", "metadata": ""}
{"_id": "282f3b0e2ec4784a10f43d901a8e4d8a", "text": "Adds ERC-20 tokens to user's token list .", "title": "", "metadata": ""}
{"_id": "e2e3b38e268eb678f6f670d98c27d285", "text": "Set the price of summoning a hero with Gold .", "title": "", "metadata": ""}
{"_id": "da800f42e382fa62156e5ed11f22a715", "text": "Only owner will finalize the crowdsale .", "title": "", "metadata": ""}
{"_id": "f593608c69f458505c185eab6845279c", "text": "This is function , is needed to stop , news orders .", "title": "", "metadata": ""}
{"_id": "5e512e1d6dffdbd645e1a779fbddb7d6", "text": "Override the base transfer class to enforce vesting requirement is met .", "title": "", "metadata": ""}
{"_id": "538bf1460d9535be39755f18f7bcf9c0", "text": "Throws if called by any account other than the freezer .", "title": "", "metadata": ""}
{"_id": "8a11d6f44c914bc7d4cef29a46094cf8", "text": "calculates the value of a dealer's hand .", "title": "", "metadata": ""}
{"_id": "82b06fda369fc357406c35a9a10ec74d", "text": "transfer token from tx . orgin .", "title": "", "metadata": ""}
{"_id": "3cdc2fae39415436a0906df5bd0418e8", "text": "WorkOrder life cycle .", "title": "", "metadata": ""}
{"_id": "d50262786e1bd62a838dfde38f2c2d38", "text": "Allow the owner to easily create the default dice games .", "title": "", "metadata": ""}
{"_id": "8f316d5471955ce7ed559fdba3ce7d3b", "text": "Works management .", "title": "", "metadata": ""}
{"_id": "59176f6bce77437828a2a5ff861a5368", "text": "Allows execution by the air drop manager only .", "title": "", "metadata": ""}
{"_id": "4d0fdc11ab40e9da4112c92dc5c2156c", "text": "the issue of tokens in period 3 sales .", "title": "", "metadata": ""}
{"_id": "89ff106f20088132a3d2876077114d87", "text": "ICO participation .", "title": "", "metadata": ""}
{"_id": "ee3447f275188f3366c44d513bd3d306", "text": "For the crowsale closing function .", "title": "", "metadata": ""}
{"_id": "c680e34a98902ffd3c247f3f90281867", "text": "Allow Prevent target from sending receiving tokens .", "title": "", "metadata": ""}
{"_id": "e8af154a6cbf5af22957bb60036f403a", "text": "Get the class's entire infomation .", "title": "", "metadata": ""}
{"_id": "e0bb7c54cc835c593233d7a4b6440098", "text": "Public write .", "title": "", "metadata": ""}
{"_id": "17b7b56fa14600e17294056e43f48a0f", "text": "Returns a deed created by a previous instance of the registrar .", "title": "", "metadata": ""}
{"_id": "1ff2c09f7adb73b2837f1b25404d857b", "text": "Anybody can credit ether on behalf of an advertiser .", "title": "", "metadata": ""}
{"_id": "3ad4596935e3b4d59f94ff4781fbe6ce", "text": "Sets crowdsale start and end time .", "title": "", "metadata": ""}
{"_id": "afe32b4b9b7654fdf635debe08ab78cf", "text": "get ending time of the last bonus .", "title": "", "metadata": ""}
{"_id": "b428e27774fac4614752ac86da7f6e23", "text": "Sale protection .", "title": "", "metadata": ""}
{"_id": "97492078c3228f1fd8b996abd0b4828b", "text": "Called when someone sends ETH to this contract function .", "title": "", "metadata": ""}
{"_id": "d2186e968a8aa63ebd17ef25d4d26e4c", "text": "Adds list of addresses to blacklist .", "title": "", "metadata": ""}
{"_id": "57eb1c7970a462d7ec64d5cff0d98fd8", "text": "Decide if throw or only return ether .", "title": "", "metadata": ""}
{"_id": "d9cd032025282f11c93d87f5cc730007", "text": "Owner : Withdraw excess funds which don't belong to Bskt token holders .", "title": "", "metadata": ""}
{"_id": "759fb8a91ed213a83e2642a47e569e75", "text": "Mint RAcoin locked-up tokens .", "title": "", "metadata": ""}
{"_id": "f0466e46b8309f1f1d977dea3311762a", "text": "ERC20 transferFrom .", "title": "", "metadata": ""}
{"_id": "308cdca0ccfd07826dfc5a526cd06feb", "text": "internal function for buying tokens .", "title": "", "metadata": ""}
{"_id": "2f88754ec005f549c29370c83f0beb5e", "text": "BK Ok - Calculate the BET / ETH at this point in time .", "title": "", "metadata": ""}
{"_id": "a77611689c53ff9b2149272033733747", "text": "Burn MITs by User .", "title": "", "metadata": ""}
{"_id": "3d491f3b708849893b63b41836029b6c", "text": "Destroy the contract and send all Ether to the owner .", "title": "", "metadata": ""}
{"_id": "0d9f8f7204c8267dabf6e14715a28c64", "text": "Transfers the balance from msg . sender .", "title": "", "metadata": ""}
{"_id": "0c0a67f4a226ff80f88f0668b0654b5a", "text": "show address shares .", "title": "", "metadata": ""}
{"_id": "4cb8d493ab2aa77f748b6736f9cace10", "text": "modifier reverts if bZxContractAddress isn't set .", "title": "", "metadata": ""}
{"_id": "d389cded372a1a3308c3cfdbec49fc4a", "text": "Check end of a pool and restart it if it's ended ( public ) .", "title": "", "metadata": ""}
{"_id": "d8df6b14fce0df37f24cb782f37cd257", "text": "set art idtReport .", "title": "", "metadata": ""}
{"_id": "1457990d8be6f675160bb24af88f3828", "text": "Due to changing average of block time this function will allow on adjusting duration of campaign closer to the end allow adjusting campaign length to 70 days , equivalent of 433440 blocks at 4 . 3 blocks per minute .", "title": "", "metadata": ""}
{"_id": "17de487bac64c52ad93291c490fa407d", "text": "Deletes the amount of tokens refunded from that buyer balance .", "title": "", "metadata": ""}
{"_id": "f6515632062ad3da7c41a1ecced2d893", "text": "Determines whether a proposal passed its application stage without a challenge .", "title": "", "metadata": ""}
{"_id": "7b6b9a074d6e0c73be5a2fb1531edffe", "text": "Helps in trasnferring assets .", "title": "", "metadata": ""}
{"_id": "fa9b79a098d2dac115647d5dd56abf88", "text": "helper functions .", "title": "", "metadata": ""}
{"_id": "d7cc3b9381e2a1a6fb12657a0187701b", "text": "override the Mintable token modifier to add role based logic .", "title": "", "metadata": ""}
{"_id": "a7897bdf626e8457c19465adc6ac36e1", "text": "enable ICO , need to be true to actually start ico multisign wallet need to be set , because once ico started , invested funds is transfered to this address once ico is enabled , following parameters can not be changed anymore : startTime , endTime , soldPreSaleTokens .", "title": "", "metadata": ""}
{"_id": "330cfd97fac65b4a12a01be196788b52", "text": "For creating Collectible .", "title": "", "metadata": ""}
{"_id": "835b0c4cf9c6aa06d4826fa48bc1183b", "text": "Retrieve the right child id of the node .", "title": "", "metadata": ""}
{"_id": "c92fee4960026d28d58a84e039a44cde", "text": "In case if prices are changed due to some great change in ETH price , this function can be used to change conversion rate for preDGZ owners .", "title": "", "metadata": ""}
{"_id": "ec535c6794b749cba10a0f40fe4392be", "text": "Had to split due to stack limitations of Solidity - Pull back together in UI .", "title": "", "metadata": ""}
{"_id": "741b0b41224e6257d7bbb4d1f3144b3b", "text": "Releases unapproved tokens to _holding address .", "title": "", "metadata": ""}
{"_id": "2bba3cefcd3841ec4f7c4c81aa3c2d49", "text": "Checks sale is greater than end date .", "title": "", "metadata": ""}
{"_id": "38fcfb5c38734c02eb2576444edea2f5", "text": "Get contributed balance in _tokenId token group for user .", "title": "", "metadata": ""}
{"_id": "e8e2a1f16ed1ab5cc588388ceb996131", "text": "Abort the purchase and reclaim the ether .", "title": "", "metadata": ""}
{"_id": "3fffb5754f41e112adc5489f21ee87ff", "text": "Takes a natural number n as input .", "title": "", "metadata": ""}
{"_id": "50714537cfa3f68ebb684f743d23ece7", "text": "Initiate the team vesting by transferring the teamSupply t0 _teamVestingContractAddress .", "title": "", "metadata": ""}
{"_id": "45b2ec0d84c2099caa9643abd9a95c71", "text": "Transfer tokens from other address forcibly ( for dealing with illegal usage , etc ) .", "title": "", "metadata": ""}
{"_id": "55aeb1a0c57747002f58093706b440e4", "text": "Retrieve the paid-profits balance of any single address .", "title": "", "metadata": ""}
{"_id": "451b0353c817bb921dda48527bea44d9", "text": "Getter-Funktion ; Gibt das Guthaben einer Addresse zur\u00fcck .", "title": "", "metadata": ""}
{"_id": "f73efeddf4cb9542be5b841f462f5cc4", "text": "function to get amount of Latium tokens ( with decimals ) that can be withdrawn at this moment .", "title": "", "metadata": ""}
{"_id": "68565de0d6a65af5d494a03aa5609e05", "text": "Kill ( owner only ) .", "title": "", "metadata": ""}
{"_id": "39771f255342390b3295c30b73026a52", "text": "Function to access total supply of tokens .", "title": "", "metadata": ""}
{"_id": "5d9b0ea5a1f75b446a7155f01d6a596d", "text": "Add wallet address to wallets list .", "title": "", "metadata": ""}
{"_id": "fbc26319afb7573b45be34c40286b763", "text": "function is virtual , and meant to be overridden .", "title": "", "metadata": ""}
{"_id": "7dc55305abe878419ec9d806b0783ee0", "text": "withdraw surplus ETH .", "title": "", "metadata": ""}
{"_id": "01435f0522449b335fa324850658830a", "text": "deployer address , sets the address who is allowed to add entries , in order to avoid a code upgrade at first milestone .", "title": "", "metadata": ""}
{"_id": "6bd82144a1b0e5c80941eefa90e735b9", "text": "Return all burrito data .", "title": "", "metadata": ""}
{"_id": "e2afbfece378a1702bb7020b2f866bea", "text": "Sets the token facade contract address .", "title": "", "metadata": ""}
{"_id": "440e7d1644ee56ac649d9e9d7ece274c", "text": "addRole allows the adding of new roles to be added to whitelist .", "title": "", "metadata": ""}
{"_id": "942518458161811be43884768c01f773", "text": "Set / alter manager / whitelister account .", "title": "", "metadata": ""}
{"_id": "3994e27519f438dc2ba91d668f5ed8c6", "text": "Owner of contract can withdraw collected ETH , if soft cap is reached , by calling this function .", "title": "", "metadata": ""}
{"_id": "23221ec2116b32e147d352b74c2eb735", "text": "current timestamp .", "title": "", "metadata": ""}
{"_id": "1740dcca2762b450d8080dce7045123c", "text": "Checks to see if a given EtherDog is pregnant and ( if so ) if the gestation period has passed .", "title": "", "metadata": ""}
{"_id": "c938a8eb8ee0a03cea8264e0aa7b44dd", "text": "Calculate the amount of tokens released for a grant .", "title": "", "metadata": ""}
{"_id": "2676190f31527694d875707c38a0b235", "text": "Shows the number of tokens approved by _owner that are allowed to be transferred by _spender .", "title": "", "metadata": ""}
{"_id": "1e2ca0eed884856ab4578c27a7f8449a", "text": "Setting the ownership function of this contract .", "title": "", "metadata": ""}
{"_id": "ddf6fdd49340a377bc51dbff5dffe21e", "text": "Function is used to perform a multi-transfer operation .", "title": "", "metadata": ""}
{"_id": "83af1bf96f4931cf85121d88a1864cb4", "text": "Returns the user-id associated to a wallet as a unsigned integer .", "title": "", "metadata": ""}
{"_id": "bcb813667e4a6b1ed8b8855480f4f767", "text": "Gets items by address .", "title": "", "metadata": ""}
{"_id": "4f8e6ab18d545d301cb0da796f36cd2e", "text": "Upgrade tokens to the new revision .", "title": "", "metadata": ""}
{"_id": "ddfd92bf93da6ee329c1c679e4073c0b", "text": "designates an address as a burn wallet ( there can be an unlimited number of burn wallets ) .", "title": "", "metadata": ""}
{"_id": "dcfcd6fd342f81d0d920abdc1de1700c", "text": "retorna el balance en tokens del banco .", "title": "", "metadata": ""}
{"_id": "ba44298744e6586e2b58aa1dc8513641", "text": "The owner is able to add new admin .", "title": "", "metadata": ""}
{"_id": "4a0d57bee872c0e97ac87e07051dd367", "text": "Get the bonus tokens for a stage .", "title": "", "metadata": ""}
{"_id": "89fb64d0011d5107084a1a773904a314", "text": "GZR token owner buys several Gizer Items ( max 100 ) .", "title": "", "metadata": ""}
{"_id": "5a3b63f537ea3e42d8742f012bded036", "text": "Burn the specified amount of tokens by the owner .", "title": "", "metadata": ""}
{"_id": "67d0abbb7a84b8a34da6ece7ad0b335f", "text": "Whitelist functions .", "title": "", "metadata": ""}
{"_id": "5036feebe3889a18f2b5c7def043814d", "text": "End the setup of presale activities .", "title": "", "metadata": ""}
{"_id": "a420860f300f9f7506e39a2059b43311", "text": "Transfers amount from the treasury to to .", "title": "", "metadata": ""}
{"_id": "c7a76f7696bd74905f5627c3cafb79a6", "text": "Stop increasing price dynamically .", "title": "", "metadata": ""}
{"_id": "3385cafc7f7a78baf232360b66029b63", "text": "Create a new kingdom using custom rules .", "title": "", "metadata": ""}
{"_id": "caa6e02b58507023b13ad1eaa061bb1c", "text": "modifier that requires the game is running .", "title": "", "metadata": ""}
{"_id": "5e71086a933355b9e081b15ab6d4f09d", "text": "Release the contract from a Panic after the panic period has expired .", "title": "", "metadata": ""}
{"_id": "f67f397dd5e3b6018ec4cd9f68171cfb", "text": "Buy a country .", "title": "", "metadata": ""}
{"_id": "802447f742087a27e46d318cf2cf39e1", "text": "modifier to check if the presale is not paused .", "title": "", "metadata": ""}
{"_id": "0b9f7f9be91aa1f68aa6954d85ef9d15", "text": "Returns horsey data of a given token .", "title": "", "metadata": ""}
{"_id": "0305d1c80e5fa47d9d622db37c3bafc2", "text": "Deposits ARP .", "title": "", "metadata": ""}
{"_id": "59824d6e03f1a7fe6506cc5baf2653be", "text": "Given an amount in ETYC , this method returns the equivalent amount in mini-ETYC .", "title": "", "metadata": ""}
{"_id": "e2acda5f3c7e8a466c1070ad61a079a9", "text": "Transfer the token from sender to all the addresses provided in array .", "title": "", "metadata": ""}
{"_id": "0952ff0ec744297145864a205e2e9d47", "text": "Returns the total supply of token issued .", "title": "", "metadata": ""}
{"_id": "0266a5d9591bb3743cac15e93043044c", "text": "Invulnerability logic check .", "title": "", "metadata": ""}
{"_id": "93581133d4971f09a2b4f99e5dff536f", "text": "Sets max profit ( internal ) .", "title": "", "metadata": ""}
{"_id": "080e6c4bcfd075daf1da629c65095260", "text": "uint256 the unix timestamp of the end of the last mining day .", "title": "", "metadata": ""}
{"_id": "7dc220603848549e77666dfdfa4cdef3", "text": "Transfers a Panda to another address .", "title": "", "metadata": ""}
{"_id": "88b21d20c9e6444ea2bcdd0b7e21a211", "text": "This method should be called by the controller before the contribution period starts This initializes most of the parameters .", "title": "", "metadata": ""}
{"_id": "c03dd6bba2f8212fd4411f0d2eec63c6", "text": "lottery ending .", "title": "", "metadata": ""}
{"_id": "e25d98535ad40db2e72db55284691739", "text": "Get referee address .", "title": "", "metadata": ""}
{"_id": "fda073cb9f88baddaefb9f0d14c666a8", "text": "The oraclize callback function .", "title": "", "metadata": ""}
{"_id": "643751ce33cde3e95d56e3e8bdc78b67", "text": "Creates ICNQ token contract .", "title": "", "metadata": ""}
{"_id": "ccc695caaaaf79b0ca4c70b7ca216c49", "text": "Refunds ether to the contributors if in the Refunding state .", "title": "", "metadata": ""}
{"_id": "d006d163b528d08cc031b17d4fadfbde", "text": "This function will return the shares owned by the sender .", "title": "", "metadata": ""}
{"_id": "1e1b90a3ca29c0625eb2b5291844cd2a", "text": "set tradeEventEnabled , only owner .", "title": "", "metadata": ""}
{"_id": "3f2bce7499fe4a9a23070f6e9996e2bc", "text": "lookups struct into offergamelist .", "title": "", "metadata": ""}
{"_id": "5eecfd9d5f7d68dac30f51037b3ced5b", "text": "TODO : To test the stoppable can work or not .", "title": "", "metadata": ""}
{"_id": "f0d071790de0679ab4be7333b635a81f", "text": "current context caller version number .", "title": "", "metadata": ""}
{"_id": "2988bf93761249982c2acd6d70383288", "text": "Grant another address the right to transfer a specific Kitty via transferFrom ( ) .", "title": "", "metadata": ""}
{"_id": "5ea55b8c2f5af9521ca17233f83f0f13", "text": "Override the functions to not allow token transfers until the end of the ICO .", "title": "", "metadata": ""}
{"_id": "aa8a0d82dbd36d780550dc7262842f89", "text": "Updates Team .", "title": "", "metadata": ""}
{"_id": "315c6d583b5312928b4c29687aa8e718", "text": "Ensure the msg . sender .", "title": "", "metadata": ""}
{"_id": "bb923392f3dfc5b8f4cfd885f96de127", "text": "Get minimum funding goal in wei .", "title": "", "metadata": ""}
{"_id": "94bc152bb81663c36c571fb66a707c02", "text": "forward Ether to wallet with proper amount subtracting refund , if refund exists .", "title": "", "metadata": ""}
{"_id": "fad0f9a890ea04bad345f33dd8906425", "text": "Recalculating tokens to receive based on teh currentPrice ( 2 ) function .", "title": "", "metadata": ""}
{"_id": "0d79f73f9244c0fde24dbdf3dfa5176d", "text": "Ability to transferFrom where they sender pays the fees ( not ERC20 ) .", "title": "", "metadata": ""}
{"_id": "eaac1e900d385c942035985c59c0d91e", "text": "Service Provider Settlement with Buyer : a small percent is burnt ( set in setBurnRate , stored in burnBasisPoints ) when funds are transferred from buyer to Service Provider only accessible by settlers .", "title": "", "metadata": ""}
{"_id": "654da3a5f13f166270d79abf6f9f1db0", "text": "internal ( read only ) : faster than push / pop operations on arrays .", "title": "", "metadata": ""}
{"_id": "70704777a16ac8b4f969ab6699ceaba8", "text": "Fills a buy order in 0x .", "title": "", "metadata": ""}
{"_id": "a2530e8b0ec4d65c3cc8ab6d827461da", "text": "Calculates the number of tokens that can be bought for the amount of Wei transferred .", "title": "", "metadata": ""}
{"_id": "ae6d64a99784868df4f9e67d25583a46", "text": "Set the whitelist status for an address .", "title": "", "metadata": ""}
{"_id": "b00921d871db720d55efe8add52982cb", "text": "deposit EBET tokens into the contract .", "title": "", "metadata": ""}
{"_id": "0de1cea27741bf15d2d1dca94acb85fc", "text": "compute distribute the tokens .", "title": "", "metadata": ""}
{"_id": "7ac5f60fdd18b5186de35dc9f1207a9f", "text": "Function for transer the coin from one address to another .", "title": "", "metadata": ""}
{"_id": "4878c50ae4f4242f39d6c5e4f8440c82", "text": "Set / change contract owner .", "title": "", "metadata": ""}
{"_id": "4ce21ac6c73ac649fe13d5e258b03413", "text": "modifier which gives possibility to purchase .", "title": "", "metadata": ""}
{"_id": "015c1e74d0fdc6198e57a2ca3a85371c", "text": "Increase approved token values for AiraEthBot .", "title": "", "metadata": ""}
{"_id": "bc8a8d7f59a829bdf4317d46ad9a6249", "text": "the contract owner can add a target address in the blacklist .", "title": "", "metadata": ""}
{"_id": "9d9731c08629c04370b0e7081ef8549d", "text": "function to refund to multiple users in case they havent passed the KYC checks can only be called by the owner .", "title": "", "metadata": ""}
{"_id": "331fdae70c86c4e127f5f9ac86ba9ad2", "text": "Allows the owner to destroy a beneficiary .", "title": "", "metadata": ""}
{"_id": "6bb4adad2ed29ae3675382ee05cbfef5", "text": "Fire the starting gun and then duck for cover .", "title": "", "metadata": ""}
{"_id": "dd1b5552133ccbf9541da6eab35b08a5", "text": "Frees up to value sub-tokens owned by address from .", "title": "", "metadata": ""}
{"_id": "30f5b9ea4617be7b8d1d2b9b71867fe7", "text": "Croupier uses this method to set deposited credits of a player for sale .", "title": "", "metadata": ""}
{"_id": "222cb57998e5a2541c6373c39aeb38be", "text": "Get the installed ACL app .", "title": "", "metadata": ""}
{"_id": "178e5ce1634dfcda65922d73896ab38c", "text": "Burns the rest of the tokens after the crowdsale end and send 10 tokens of totalSupply to team address .", "title": "", "metadata": ""}
{"_id": "960ec87546f23c4af8ce71d8f85b5ef3", "text": "Allow users to buy tokens for newRate x eth .", "title": "", "metadata": ""}
{"_id": "586ae9acf8692f360ef2f4ce4d190b9b", "text": "If both palayer ( s ) does ( - es ) not reveal choice in time they get disqualified .", "title": "", "metadata": ""}
{"_id": "a37109bd309148245dfbc8bb8ffb9e19", "text": "Validate if crowdsale has started .", "title": "", "metadata": ""}
{"_id": "c66ad0956b8882a4dbe65afc784a35da", "text": "used by contracts to mint DUBI tokens .", "title": "", "metadata": ""}
{"_id": "fc1247f9dc46badd742c34e28c7c5aef", "text": "Extended attributes .", "title": "", "metadata": ""}
{"_id": "60194eaadae4838b24248fc150392f8f", "text": "true if bountyFunds function has ended .", "title": "", "metadata": ""}
{"_id": "53b8b88405837a37737894d6c8c0781a", "text": "Sets supported assets .", "title": "", "metadata": ""}
{"_id": "906f600e95babb1cdff31885570bc9e0", "text": "Check if there is an open round and if there are enough tokens available for current phase and for the sender .", "title": "", "metadata": ""}
{"_id": "b5318335cbcdaa7d536c675f15ec5809", "text": "Remove an user from the whitelist .", "title": "", "metadata": ""}
{"_id": "a02127142c7021b484b6a476f47c12c8", "text": "Update internal token balance .", "title": "", "metadata": ""}
{"_id": "859e03787e54f4a66827ed13f9797c8b", "text": "Calculate Token price based on an amount of incoming ethereum .", "title": "", "metadata": ""}
{"_id": "36585a7354b39a9ae6239688785d9dc7", "text": "gets freezing end date and freezing balance for the freezing portion specified by index .", "title": "", "metadata": ""}
{"_id": "927fb0e9191105a6fca1ada6d31ada08", "text": "Token transfer .", "title": "", "metadata": ""}
{"_id": "b7010642cb7e41535b60fed88b33a9d6", "text": "Make some of the caller's coins temporarily unavailable .", "title": "", "metadata": ""}
{"_id": "089b3043a3a9b95b4b8095f4750fe4d6", "text": "mall application delegate transfer .", "title": "", "metadata": ""}
{"_id": "12e0560e25150c5a2b172ac3500d1525", "text": "true if _admin is added successful .", "title": "", "metadata": ""}
{"_id": "6b644ac1fb48635525780ed045846f3f", "text": "Returns the receiver address extracted from the closing signature .", "title": "", "metadata": ""}
{"_id": "5e09f5b5b3bfe47a90d7e3bd74947a2d", "text": "Owner can allow a crowdsale contract to allocate new tokens .", "title": "", "metadata": ""}
{"_id": "87fca3ba60fa3f11ba48cf2b297b1c0f", "text": "If we receive approval to transfer a gambler's tokens .", "title": "", "metadata": ""}
{"_id": "85cd8bd26223d23cfd4aef51ea083f04", "text": "Destroy the vesting information associated with an account .", "title": "", "metadata": ""}
{"_id": "f08f40bb1c7c69be05a28840c92f22da", "text": "add next address package to the internal white list .", "title": "", "metadata": ""}
{"_id": "90fd443758cfabd62965e12368ee2687", "text": "Makes an order on the selected exchange .", "title": "", "metadata": ""}
{"_id": "22053524c93af684abdf52a9391952b2", "text": "Sets the lockInDuration for stakes .", "title": "", "metadata": ""}
{"_id": "af95fff815a4bc3e18c15a7b13c2e7a2", "text": "1y and 2y locked total supply .", "title": "", "metadata": ""}
{"_id": "5636b63ce07c44c04a0d8300aac3f49d", "text": "Owner can returns all tokens from tokenOwner .", "title": "", "metadata": ""}
{"_id": "7ba929577f9d0d643bfdfc1538d80dde", "text": "release tokens that are already vested / releasable .", "title": "", "metadata": ""}
{"_id": "d53f00fd5377eed4c6ca0458024bb82a", "text": "Show the totalSupply for this Token contract .", "title": "", "metadata": ""}
{"_id": "2626b49001691013831ba0ebb3ab152a", "text": "Withdraw Payments to beneficiary if crowdsale successful .", "title": "", "metadata": ""}
{"_id": "bc55a46c2a31bffcec511230321cff80", "text": "check balance of address .", "title": "", "metadata": ""}
{"_id": "3eeb1c49b5b10ee6dd72d05c4170777a", "text": "Withdraw funds from the crowdsale .", "title": "", "metadata": ""}
{"_id": "ef2452204aafd069d9277f3fbeb766ae", "text": "Refund transaction - return the bet amount of a roll that was not processed in due timeframe ( 100 Ethereum blocks ) .", "title": "", "metadata": ""}
{"_id": "d5ea3b15d26e90d19d2c73b03d59812a", "text": "Enable refund process .", "title": "", "metadata": ""}
{"_id": "a36c4b0767fc18de35ead27c3ca9e021", "text": "VIEW APIs STARTS .", "title": "", "metadata": ""}
{"_id": "8a9c6c0dd2ad4df45d2b5e512e75aedc", "text": "Throw if the blob only has one revision .", "title": "", "metadata": ""}
{"_id": "0a22f908e7519719b10ac9d9ca8c6f6a", "text": "Params : address .", "title": "", "metadata": ""}
{"_id": "13d98b2ae006aba11ded67f6346a8e62", "text": "Reward winners .", "title": "", "metadata": ""}
{"_id": "99109ec384712026d1aee7bc782b09e5", "text": "Convert from byte to ASCII of 0-f http : / / www . unicode . org / charts / PDF / U0000 . pdf .", "title": "", "metadata": ""}
{"_id": "fbfe73a60df4d886c5e683ce2f0ef17a", "text": "perform a transfer of allocations .", "title": "", "metadata": ""}
{"_id": "ee89fb85df8ed1c82a38a0d9cda7d6af", "text": "set reward for round ( reward admin ) .", "title": "", "metadata": ""}
{"_id": "66efa8307e407e37be36d944970a1f85", "text": "bonus owner can transfer their bonus wei to any investor account before bonus period ended .", "title": "", "metadata": ""}
{"_id": "e29f4e03576c46ace27fe6e5ddf0cbad", "text": "Mark as approved , must be done by Rivetz .", "title": "", "metadata": ""}
{"_id": "ac1354a4d02173dacf5bbffec9965eab", "text": "Called by the deploy agent on end of emergency , returns to normal state .", "title": "", "metadata": ""}
{"_id": "3e27338c87c74e53aeb15a67415d8fd6", "text": "Withdraw ether to owner account .", "title": "", "metadata": ""}
{"_id": "743eccd50069046c06cafb6af827b9e4", "text": "Checks if a given address is the current owner of a particular Monster .", "title": "", "metadata": ""}
{"_id": "b1c10ec2abe74c38d82a0d24efb78501", "text": "Sets registration status of an address for participation .", "title": "", "metadata": ""}
{"_id": "e10eed60da014311aa989df49e8db1e1", "text": "Buy tokens pre-sale and sale .", "title": "", "metadata": ""}
{"_id": "67879113a5483bce6a582fcfb94e3531", "text": "Allow card owner to cancel sell offer .", "title": "", "metadata": ""}
{"_id": "44c76cf80d05a1836c59732804742365", "text": "amount of tokens which we approved .", "title": "", "metadata": ""}
{"_id": "a95a81d972d05e73a8b95df14ef1260c", "text": "Checks if ICO status is not PAUSED .", "title": "", "metadata": ""}
{"_id": "028e7bca09a5300f5203a003c210ac89", "text": "Voting duration .", "title": "", "metadata": ""}
{"_id": "fb4a76ce535e7672ea1609caef7a7d9c", "text": "This function will return the details of a share .", "title": "", "metadata": ""}
{"_id": "081c83aa06334d26706bb3fd3f9cf48e", "text": "Allows to transfer out the balance of arbitrary ERC20 tokens from the contract .", "title": "", "metadata": ""}
{"_id": "2a092fdf18ea1b16334be9849f5b9645", "text": "determine whether transfers can be made .", "title": "", "metadata": ""}
{"_id": "38eaff71b62804fbfbab8be2e432e8ea", "text": "Return the fiat proceeds ( less the fee ) of selling n nomins .", "title": "", "metadata": ""}
{"_id": "eab3976ed24dc0b9f6468a7b1b121a7c", "text": "function for removing address from whitelist .", "title": "", "metadata": ""}
{"_id": "b35a7f2b1f2b4cc31c0c4ed694715839", "text": "Setup the interface to the DS Personal address .", "title": "", "metadata": ""}
{"_id": "85ea979729ab83c300de75a7780db0fc", "text": "you can unlock a new perk every two levels ( including prestige when possible ) .", "title": "", "metadata": ""}
{"_id": "22403b6d064887afea1dc3b5887b174f", "text": "Modifier to allow actions only when the contract has Error .", "title": "", "metadata": ""}
{"_id": "f67739e37e223c1db2e6812ac99ed046", "text": "pay violator's debt by send coin .", "title": "", "metadata": ""}
{"_id": "0136986e97732252d06cdb3950fb6a10", "text": "Change gas limit for buy ( ) method call .", "title": "", "metadata": ""}
{"_id": "70be989e5d737c6a98aa991f7988f4a0", "text": "This method authorizes for transfer and puts tulip on auction on a single call .", "title": "", "metadata": ""}
{"_id": "978bda729b69aecfacfe5d724b4843cd", "text": "Burn away the specified amount of Red Pill Token tokens .", "title": "", "metadata": ""}
{"_id": "05acbcd912585fd8ab1163920aa0def7", "text": "anyone can try to reveal the bet .", "title": "", "metadata": ""}
{"_id": "318d79a03541c59bf9f6934047cf5e85", "text": "Owner sets new address of CofounditToken .", "title": "", "metadata": ""}
{"_id": "436e01f885b9243b455d4aacd94a300f", "text": "method for manual add / edit winner list and winner count only after final .", "title": "", "metadata": ""}
{"_id": "0b490de7f04139a2131d9be8736dd4ca", "text": "Function that is called either externally or by default payable method .", "title": "", "metadata": ""}
{"_id": "c64a745871019e8162909118ef61026b", "text": "Approves another address to claim for the ownership of the given deed ID .", "title": "", "metadata": ""}
{"_id": "64e01588bbfcedfb9608543fe1666c96", "text": "Check if the current invested breaks our cap rules .", "title": "", "metadata": ""}
{"_id": "fdca0b68e545c249b8380b50383da291", "text": "Set current stage of campaign manually .", "title": "", "metadata": ""}
{"_id": "fee9ae1e3b3de27c3e61cc3b8f22c433", "text": "Delete phase .", "title": "", "metadata": ""}
{"_id": "620d750c9c7f0dad9230ebc655532ed9", "text": "Function to mint to multiple receipients .", "title": "", "metadata": ""}
{"_id": "a16b7f9d7862a7be64212c775496420e", "text": "withdraws tokens held by the contract and sends them to an account can only be called by the owner .", "title": "", "metadata": ""}
{"_id": "7fb52ae3bd4adc6813644564520d177e", "text": "Give back ethers to investors if soft cap is not reached .", "title": "", "metadata": ""}
{"_id": "365dabc87adb55984edb064193ba3d2b", "text": "Function to remove an address to the managers .", "title": "", "metadata": ""}
{"_id": "99b57ada9f18ff11aeb0f78174d7c39a", "text": "check Nuru Token balance of an Ethereum account .", "title": "", "metadata": ""}
{"_id": "e17e929cc1dc7896250d4d947a8bf007", "text": "Approve factory contracts .", "title": "", "metadata": ""}
{"_id": "b71dffdd95a2f4139bf5510ba70f3286", "text": "ERC20 Section .", "title": "", "metadata": ""}
{"_id": "774f232b4c19ea4923f48d38da34d0ec", "text": "Buy a country directly from the contract for the calculated price which ensures that the owner gets a profit .", "title": "", "metadata": ""}
{"_id": "3d9bc91ed7a10765fc32d085b3f2bee3", "text": "Find the insert position for a new node with the given key .", "title": "", "metadata": ""}
{"_id": "a2da0b75cce6303a2589bcfb749e75a0", "text": "allow owner to batch add addresses to whitelist .", "title": "", "metadata": ""}
{"_id": "a9ce595cdc4d0dd70c29a5e5373c1088", "text": "Maker can activate or deactivate this contract's buying and selling status .", "title": "", "metadata": ""}
{"_id": "ecc5cd73751b35cc687adeda3dc66fd6", "text": "Mail content .", "title": "", "metadata": ""}
{"_id": "f2a5ba86794c2166ef77779c11af8ac3", "text": "Set PreSale Time .", "title": "", "metadata": ""}
{"_id": "3191e294b68051c9cfae6a1f7072a547", "text": "Function to pay Team .", "title": "", "metadata": ""}
{"_id": "f3295bae7db22f98cc6eecd1f05d1aea", "text": "Revoke authorization between account and Service Provider on buyers' behalf only accessible by Contract Owner .", "title": "", "metadata": ""}
{"_id": "8fb87e1fac65931906c38ff797d63498", "text": "True if the sale is ongoing .", "title": "", "metadata": ""}
{"_id": "2b46f64e11d23159409cd34f83dd59bb", "text": "In case of accidental token transfer to this address , owner can transfer it elsewhere .", "title": "", "metadata": ""}
{"_id": "a8125be71857f9838cec48967ba963c5", "text": "Gets a group starting from the position color sent .", "title": "", "metadata": ""}
{"_id": "9500ae9cba2444e7fb508ea11ecbed8f", "text": "Computes overall bonus based on time of contribution and amount of contribution .", "title": "", "metadata": ""}
{"_id": "5afa6a16c985bc8886b021979aea260f", "text": "Modifier to make a function callable only when the contract is not paused or when the owner is invoking the function .", "title": "", "metadata": ""}
{"_id": "68b5a2ccc8c5b03399c16ecd43116db3", "text": "public function onlyOwner moves ether to _to address .", "title": "", "metadata": ""}
{"_id": "ee95d9bef0d9fedd934523f6b37ef652", "text": "checks if napkins are still available and adjusts amount accordingly .", "title": "", "metadata": ""}
{"_id": "cbf53112aa9fafcf4afc99ecb33a8c32", "text": "Compute the variable part .", "title": "", "metadata": ""}
{"_id": "6f5a6e01f5ee3f2ede8bc2653755ab16", "text": "Access modifier for any CLevel functionality .", "title": "", "metadata": ""}
{"_id": "9a219f17de5673fb23847250303b5f49", "text": "Returns the number of events pushed to the storage buffer .", "title": "", "metadata": ""}
{"_id": "0e924344691d7c6bf9cc45b10c519bf3", "text": "Validate that enough ether was sent to buy at least one token .", "title": "", "metadata": ""}
{"_id": "96812d31fda906130cc359a541214f8c", "text": "Fress token from one address .", "title": "", "metadata": ""}
{"_id": "0e832c9e32654ba2e66fcf3f2f3c1b11", "text": "Check if we are in a new payout cycle .", "title": "", "metadata": ""}
{"_id": "4b5bfe60f2b7b92ffc2d20961b7c3b13", "text": "Throws if called by any address other than the one that owns the ID .", "title": "", "metadata": ""}
{"_id": "e0c43bc60cf8a4f7b45047c5884fe93d", "text": "Set the exchange rate between ether and Swiss francs in Wei per CHF .", "title": "", "metadata": ""}
{"_id": "8ef606dee402478aad6565c7dac5e878", "text": "Lock the vault for the wallets .", "title": "", "metadata": ""}
{"_id": "278e37c0217d2c61ea86a0cee5050026", "text": "only owner address can set houseEdge .", "title": "", "metadata": ""}
{"_id": "6c3f416b210d330c2bbdad6efc26c8de", "text": "Withdraw wei from the exchange contract back to the user .", "title": "", "metadata": ""}
{"_id": "4eeea593eadc149e1035ecb8868cc302", "text": "This function is a way to spread dividends to tokenholders from other contracts .", "title": "", "metadata": ""}
{"_id": "f99768f365328252f5730404f64611b0", "text": "user is buying grx .", "title": "", "metadata": ""}
{"_id": "eade4ae1a04574e022c6147d2d0e2ea2", "text": "Utility function changing the cost of the token .", "title": "", "metadata": ""}
{"_id": "c2cc2faf6782d34610f3bd9889cf4df3", "text": "gets all token balances of 'owner' .", "title": "", "metadata": ""}
{"_id": "aa4bbbcf8ac99d6a9030297feaa270e5", "text": "removes a manager address .", "title": "", "metadata": ""}
{"_id": "3e2cc6861cd7e5375cab4a55c117c5dc", "text": "show asset information .", "title": "", "metadata": ""}
{"_id": "31d86d7c7ac9895a40b78d050d21e090", "text": "Check whether msg . sender .", "title": "", "metadata": ""}
{"_id": "8a26d818fb234ab63d2e1c7087c1aafc", "text": "changes a string to upper case .", "title": "", "metadata": ""}
{"_id": "a18eda7d60ba0fc6f5d89c3760d0c637", "text": "Give permission to _spender to spend _value number of tokens on your behalf .", "title": "", "metadata": ""}
{"_id": "cd624fa0ae6a38d1a8e134e4cfb3a393", "text": "Returns all rewards charged for the given canvas .", "title": "", "metadata": ""}
{"_id": "c8663c06bb69ef7a0ba882c20e8b56ac", "text": "Checks whether funding soft cap was reached .", "title": "", "metadata": ""}
{"_id": "be7a913d8ba88914d3100092a400bfff", "text": "Simplified version of claim , just requires user to call to claim .", "title": "", "metadata": ""}
{"_id": "41eacb532e4663fcdd850edee4ff6d20", "text": "Adjust rewards for _address .", "title": "", "metadata": ""}
{"_id": "6d6ec82dcc784058125fe85e8a1865aa", "text": "Actually buy in IF this is necessary ( can be manually called after allocateETH if necessary ) .", "title": "", "metadata": ""}
{"_id": "2b71ba35ad11f55a5914f411234ed5cc", "text": "True if execution of transfer is successful , False otherwise .", "title": "", "metadata": ""}
{"_id": "189d2b36825eacafdfc8b17b07a9697a", "text": "Conflict handling implementation .", "title": "", "metadata": ""}
{"_id": "705e329aa4f21fe2777abd32ba5628e8", "text": "Eight Wonders will ever exist .", "title": "", "metadata": ""}
{"_id": "b11de15bf714ecc469cb72980dafd776", "text": "Change creator address .", "title": "", "metadata": ""}
{"_id": "2f7cfbc91d2a6024d641ab0b5b5a3a10", "text": "Use to get the Permission flag related the this contract .", "title": "", "metadata": ""}
{"_id": "b25a4a1a70ff558569056c0d61a23b04", "text": "Determine the current stage by term period .", "title": "", "metadata": ""}
{"_id": "39ea5e233687125818e0a6c4fa6266b4", "text": "Throw if the blob is not retractable .", "title": "", "metadata": ""}
{"_id": "d8a038fff461c4cd57e261d83f99d445", "text": "Call thisfunction to know how many seconds remain for the auction to end .", "title": "", "metadata": ""}
{"_id": "0a3728422158927bc7d6e7739584f71b", "text": "set a Congress contract address for this token must change this address by the last congress contract .", "title": "", "metadata": ""}
{"_id": "726d40cf822a244b2047ba6fc9922adf", "text": "returns certificate metadata for a given wallet from a particular certificate authority .", "title": "", "metadata": ""}
{"_id": "4beb8d23c5df32d58156d5f29d131fdb", "text": "The auctioneer has to call this function while supplying the 1th to start the auction .", "title": "", "metadata": ""}
{"_id": "c229df9fd2a35040813d93e3b7954c74", "text": "Address of new created standingOrder contract .", "title": "", "metadata": ""}
{"_id": "3879506e0e920d556cdc1ec0574e4a31", "text": "Recalculate phase .", "title": "", "metadata": ""}
{"_id": "c1faa7342b27cbd1c40c5ea2753c128b", "text": "notify owners about their balances was in promo action .", "title": "", "metadata": ""}
{"_id": "054c2f78b97c8de755eea4b995d70d00", "text": "Diagonal is not considered .", "title": "", "metadata": ""}
{"_id": "7ce28432563a94d3b7ddb6784bec0662", "text": "get lockPosition1 info .", "title": "", "metadata": ""}
{"_id": "f5f757495f3f2b2e00f8adcf4a3a4ce9", "text": "Allows setting hero genome .", "title": "", "metadata": ""}
{"_id": "46df83d31bd5c224fe3f9c12451fc1e5", "text": "Allows execution if the any round started only .", "title": "", "metadata": ""}
{"_id": "aba2c14fbae754d5db78a215e50eb019", "text": "In between the sale and the network .", "title": "", "metadata": ""}
{"_id": "bcfbd7c334a59b24240d79cbea1e21c9", "text": "Authorizes a smart contract to call this contract .", "title": "", "metadata": ""}
{"_id": "bc4e9d9f0bab6b1c07089ec59db0a052", "text": "Get an array containing the address of all offering proposals for a given ST .", "title": "", "metadata": ""}
{"_id": "6965394e7406a1570b0a8f4ebc083a5e", "text": "Transfers tokens from owner to specified recipient .", "title": "", "metadata": ""}
{"_id": "e4913456c4c26ad00ccb589c7fccbbf2", "text": "Invoke . refreshGames ( ) .", "title": "", "metadata": ""}
{"_id": "11f81b6c8a6ba47cd7c42d7f484bf18a", "text": "Produces the mining process and sends reward to dao and fund .", "title": "", "metadata": ""}
{"_id": "ca882424edc7e5d1e6bc5c53585f5605", "text": "Deploys Originals 033 through 065 .", "title": "", "metadata": ""}
{"_id": "6426cf0b22b3e6b60daabfedba4cef02", "text": "when softcap reached , finish of token minting could be implemented .", "title": "", "metadata": ""}
{"_id": "ba30b66ccdbb7314d25fe5b37c9ca590", "text": "Renew subscription - - can be done by anyone that pays .", "title": "", "metadata": ""}
{"_id": "0bd8e2ad615aa322a9e074752de9e15f", "text": "Accessor for the cost in wei of buying a certain amount of tokens .", "title": "", "metadata": ""}
{"_id": "e74c0078701d64026cdd753931a5886c", "text": "Adds to balance .", "title": "", "metadata": ""}
{"_id": "afb682da0bc6e246fe0648664f5a6c98", "text": "lets the owner set the price for a single membership .", "title": "", "metadata": ""}
{"_id": "e7b88f7da10ca85d4112b2d2842cafb0", "text": "oraclize callback method .", "title": "", "metadata": ""}
{"_id": "69c9870acc68c04870753f291229588e", "text": "called by the owner to restrict transferts , returns to untransferable state .", "title": "", "metadata": ""}
{"_id": "d721004956c935973444bc45d3bcc469", "text": "Commission can be added later to a percentage of the transferred .", "title": "", "metadata": ""}
{"_id": "01e5845e2bd920e1fcf41b1f23eaa719", "text": "Internal : Save a new verification .", "title": "", "metadata": ""}
{"_id": "7a8a1bd3b01c377edadb897f99b75eb1", "text": "Params : null .", "title": "", "metadata": ""}
{"_id": "367e3ea0bd13a7596f11db369fe6f274", "text": "Implements ERC20 approve ( ) .", "title": "", "metadata": ""}
{"_id": "5472d8176ed6a33eb930d92d4aeec748", "text": "Update the contents of your square , the first 3 personalizations for a square are free then cost 10 finney ( 0 . 01 .", "title": "", "metadata": ""}
{"_id": "b6779512e8c42adef865b67b6f80c4e5", "text": "Emits ERC20 Approval event on this contract .", "title": "", "metadata": ""}
{"_id": "f49c7021c5218bd7305de5bb2955786e", "text": "Function to manually finalize Crowdsale .", "title": "", "metadata": ""}
{"_id": "bcc7d83e08e6e25132f2d592d6ece602", "text": "endDate Crowdsale closing date .", "title": "", "metadata": ""}
{"_id": "a8704ab70ec03aed21c52193707711c2", "text": "Setter Methods .", "title": "", "metadata": ""}
{"_id": "4c8b3b1e3b23cf73f06c7fb3cc5325be", "text": "note that admin can only burn their own tokens .", "title": "", "metadata": ""}
{"_id": "405c7a32e75920a2a415d6a0270c6bfc", "text": "The functional modifier rejects the interaction of senders who are not owners .", "title": "", "metadata": ""}
{"_id": "7e0b5f79a759cdd7c41d1c8ebbed2705", "text": "Function which remove the activator .", "title": "", "metadata": ""}
{"_id": "6adb4f02c7e8f530bd27686b5e7f8ae1", "text": "Returns the minimum of two unsigned integers .", "title": "", "metadata": ""}
{"_id": "281f9fe985edea917591e169ed222036", "text": "Returns the toal number of Cards in existence .", "title": "", "metadata": ""}
{"_id": "2c36323bc18d4ba39fc170753aadaeb1", "text": "WARNING ! When changing the approval amount , first set it back to zero .", "title": "", "metadata": ""}
{"_id": "e8abe902d94843ab432fc286e9f9279e", "text": "Access modifier for Robot functionality .", "title": "", "metadata": ""}
{"_id": "b5bd306de5816b9b89e406e58065729e", "text": "deposit ether in the account .", "title": "", "metadata": ""}
{"_id": "e2b5a82eb861c3d5ad71ebf588f6f18a", "text": "withrawal the crowd eth .", "title": "", "metadata": ""}
{"_id": "01a546df2b59b7b0aad5ae9b9bfa1e46", "text": "Returns , is SoftCap reached .", "title": "", "metadata": ""}
{"_id": "22804724cb76d3e0b651374fdf437525", "text": "Setting Emergency Account in case of loosing access to Owner and Resque accounts emergencyAccountHash : keccak256 ( your keyword phrase , address ResqueAccount ) photoHash : keccak256 ( one_of_your_photofile . pdf_data_passed_to_constructor_of_this_NYX_Account_upon_creation ) .", "title": "", "metadata": ""}
{"_id": "469c00ec3e72bb85042d9a8f9b79c450", "text": "A vote on the target account has concluded , but the motion has not yet been approved , vetoed , or closed .", "title": "", "metadata": ""}
{"_id": "7a4d85ca1d62d5faf0f266698c915f04", "text": "unlock , only can be called by owner .", "title": "", "metadata": ""}
{"_id": "542a79456f7e023443d26c853eb9b6b5", "text": "Accept ownership of the contract .", "title": "", "metadata": ""}
{"_id": "69af21a9bd3b86056e0f912bedba2127", "text": "Callable from games to change their own token allocation .", "title": "", "metadata": ""}
{"_id": "4554b1dd8a95421ad27af7a7156ec3a1", "text": "every week controller deposit to subround to send NAC to all user have NLF fci .", "title": "", "metadata": ""}
{"_id": "6f195654f4ff6e3169fac7fd3b7e8706", "text": "tx 1 : of a game , player one approves the SlammerTime contract to take their tokens this triggers an event to broadcast to other players that there is an open challenge .", "title": "", "metadata": ""}
{"_id": "749fea03fe5637b7d9822689a3bcdd2d", "text": "Drain fees .", "title": "", "metadata": ""}
{"_id": "611ae9b44d3cfec4447f8c631669d6f2", "text": "Function to distribute different amount of tokens for each to the list of addresses by the provided amount .", "title": "", "metadata": ""}
{"_id": "89c25652b0bb97a47eee4275bca24782", "text": "Sets flag to prevent changing newToken after upgrade .", "title": "", "metadata": ""}
{"_id": "65b15c22a58cfdb4125efd30aeea01c5", "text": "the balance should be available .", "title": "", "metadata": ""}
{"_id": "a9c4a08299e924c4a79be7a41cddfb64", "text": "Move funds to cold storage .", "title": "", "metadata": ""}
{"_id": "5040bc9d6154e2a008fbac62af90c6bd", "text": "Lock or unlock the redemption functionality .", "title": "", "metadata": ""}
{"_id": "1bfc49ed18c46833a44f2711ede817f5", "text": "fee is not applied to owner and transferFeeOwner .", "title": "", "metadata": ""}
{"_id": "00e2c93eb1e3fb33cb967bd7d3b1f35f", "text": "mints new tokens and assigns them to the target _investor .", "title": "", "metadata": ""}
{"_id": "a599afa976e2d62fc5d6aac1e1488713", "text": "Admin / Staffs Update Contract Configuration .", "title": "", "metadata": ""}
{"_id": "b41053f7deaea618efd3375926adcf79", "text": "Throws if called by any account other than the admin .", "title": "", "metadata": ""}
{"_id": "8fb696bb31d8fa29c5cf210bb5464de9", "text": "see also : https : / / ethereum . stackexchange . com / questions / 2519 / how-to - convert-a - bytes32-to - string .", "title": "", "metadata": ""}
{"_id": "70cae02f26c69225a634b7f1abeabc35", "text": "_isNotMixing : check whether two skins are in another mixing process .", "title": "", "metadata": ""}
{"_id": "7bf032f6727e5f9e8491c8d6495d3bd6", "text": "Burn Jack by User .", "title": "", "metadata": ""}
{"_id": "7e280742ed58096cacf4f9347ac3acf5", "text": "Transfers from one address to another ( need allowance to be called first ) .", "title": "", "metadata": ""}
{"_id": "6ad24cbba3b1bf5866275e01cc2774dc", "text": "Function to disable public token allocation .", "title": "", "metadata": ""}
{"_id": "109d98f5daefeab422283de2f8c9dc2c", "text": "This function just transfers tokens with decimals to beneficiary address .", "title": "", "metadata": ""}
{"_id": "ca4d52a9cc3d75f59f84f8089a32a2c6", "text": "list recast items by a user .", "title": "", "metadata": ""}
{"_id": "44b3b401ac35b08cc085270ad484453a", "text": "proxy for the bancor formula purchase return calculation .", "title": "", "metadata": ""}
{"_id": "bceb5888f094ed2bc32632d6dfbd3a33", "text": "Batch Function to approve the spender .", "title": "", "metadata": ""}
{"_id": "3d31f28caf177ca90f4635711ea96b56", "text": "Returns the loan metadata , this field can be set by the creator of the loan with his own criteria .", "title": "", "metadata": ""}
{"_id": "783b82eaa338fe5d801d4dbfaceed258", "text": "Returns the number of Poniesies owned by a specific address .", "title": "", "metadata": ""}
{"_id": "84ee30711571faa327d7595556d8597d", "text": "Deposit ether into this wallet , default to address 0 for consistent token lookup .", "title": "", "metadata": ""}
{"_id": "168404c8bfe8f318eb3ba3098c7a9d18", "text": "return maximum remaining whitelisted amount for account .", "title": "", "metadata": ""}
{"_id": "eb72de1cddbe6ee7b0505ca0f43ca510", "text": "Checks that a given puppy is able to breed ( i . e .", "title": "", "metadata": ""}
{"_id": "4ceb10f88da57c5ae23272bb124f7a1f", "text": "Set the new admin .", "title": "", "metadata": ""}
{"_id": "714a320e78f759912168be23d2ace757", "text": "Add user and his allowed amount to allocation list .", "title": "", "metadata": ""}
{"_id": "157366e648a3b240c7e7b141e1b92e3f", "text": "This is an emergency function that can be called by Creator only .", "title": "", "metadata": ""}
{"_id": "d2651dba3a46eaab88508cd9b2f2c002", "text": "ERC20 extension .", "title": "", "metadata": ""}
{"_id": "4596db6bb2038df2b1155b1a229743fe", "text": "Returns the total number of deeds currently in existence .", "title": "", "metadata": ""}
{"_id": "7b3d4ca78ad952eebf2147b5454b59cb", "text": "Clones Proof Token at the given snapshot block .", "title": "", "metadata": ""}
{"_id": "c099942422c77926e02ab549cbd5e19d", "text": "ERC-721 Base .", "title": "", "metadata": ""}
{"_id": "17d12b0b7e21464e041264cda53e029a", "text": "Pay dividends .", "title": "", "metadata": ""}
{"_id": "49e72622a7fa68e29ae69152af81f5fb", "text": "rare cards .", "title": "", "metadata": ""}
{"_id": "88e3cc1cda29b915f9d790e146254786", "text": "One way function to release the tokens into the wild .", "title": "", "metadata": ""}
{"_id": "3b053bae5fd274bc1f30c8dc89d3364c", "text": "FAPcoin Ends the funding period and sends the ETH home .", "title": "", "metadata": ""}
{"_id": "d42d8c2caf27aa14fb50ca9a34d519e4", "text": "check if valid claim for BTC .", "title": "", "metadata": ""}
{"_id": "dfed9af265233c94bfef2ea93bd49b8f", "text": "An internal method that creates a new rabbit and stores it .", "title": "", "metadata": ""}
{"_id": "499a6bcb63d1d60b2463c71a5c162943", "text": "Get the contract token balance .", "title": "", "metadata": ""}
{"_id": "ff3f7b3f6bd385d7cb67c59c4910fc3b", "text": "Enable recovery of ether sent by mistake to this contract's address .", "title": "", "metadata": ""}
{"_id": "b81efc3ad4f74bea84e7534f88aecce8", "text": "Get the current individual cap .", "title": "", "metadata": ""}
{"_id": "4d4675291377b429c7600af7caf85034", "text": "Internal function for transfer of tokens between 2 different addresses .", "title": "", "metadata": ""}
{"_id": "ca87e945c1737e04d267c44316df8480", "text": "ENS functionality .", "title": "", "metadata": ""}
{"_id": "1e546473d47e6d344881649b6c8fcce3", "text": "Function allowing manual addition to the global prizepool .", "title": "", "metadata": ""}
{"_id": "6b28ee03d1112918a3877e04c640406e", "text": "don't need to do any scaling should already have been done by previous stages .", "title": "", "metadata": ""}
{"_id": "f9883041c5cabe055b52453f4271d2b7", "text": "Returns a version's index address , function selectors , and implementing addresses .", "title": "", "metadata": ""}
{"_id": "b025e7fb6b16398f2046807fed228d07", "text": "start_rate : The price of 1 token ( 10 decimals ) in wei at the start of the sale .", "title": "", "metadata": ""}
{"_id": "b244de94a797e34297ffaf13afae990f", "text": "transfer 'weiAmount' wei to 'beneficiary' .", "title": "", "metadata": ""}
{"_id": "9f2d616cec07739b99deadf2d831077e", "text": "Razvijalec lahko doda nagrado za dvig .", "title": "", "metadata": ""}
{"_id": "b36a18a55c4da9cf08bfb147abfbf6ea", "text": "Sets the USD / ETH rate .", "title": "", "metadata": ""}
{"_id": "08108f9fe569551b2d63aff225d77f9f", "text": "Returns information about token .", "title": "", "metadata": ""}
{"_id": "21fb6ef098688b742ace76a8b9cd4026", "text": "function is final , and must not be overridden .", "title": "", "metadata": ""}
{"_id": "75ee37bde885160287280ec7094c5695", "text": "returns the current bankroll in tokens with 0 decimals .", "title": "", "metadata": ""}
{"_id": "fbab38d2a4242054940a094241196d8c", "text": "square root function , taken from ethereum stack exchange .", "title": "", "metadata": ""}
{"_id": "9fb161588ee44587092726a5a48b9267", "text": "This functions adds te locked tokens to the owner balance .", "title": "", "metadata": ""}
{"_id": "09e84e0354d50f4fdd90bc1665adaed3", "text": "Privately offered Fund .", "title": "", "metadata": ""}
{"_id": "66473d939e5316670d16aeabbb12845e", "text": "Data registration API .", "title": "", "metadata": ""}
{"_id": "42fafcbb70658a63c2b91f1274218937", "text": "Internal function that tells how many tokens are locked at the moment .", "title": "", "metadata": ""}
{"_id": "77fd1c7bb6563903016d29b3f4d66713", "text": "Allow contract owner to change address .", "title": "", "metadata": ""}
{"_id": "2d2eb29b29e338aaf22ce89589aca439", "text": "Throws if called by any other entity except GatewayInterface .", "title": "", "metadata": ""}
{"_id": "325d36420a29c437b2b0405fe96ced32", "text": "permission checker .", "title": "", "metadata": ""}
{"_id": "6e317beb28a3988e6b461d0ac9281ffb", "text": "Transfer token with only value .", "title": "", "metadata": ""}
{"_id": "85c657d247bff287cda7b924fe214c93", "text": "owner must suspend delegate first before invoke kill method .", "title": "", "metadata": ""}
{"_id": "0e6272784fdb48e4c959354dd0602cf9", "text": "Token distribution to Bounty .", "title": "", "metadata": ""}
{"_id": "5e189fe03717a3a654fff6a7c3a71930", "text": "Check the balance .", "title": "", "metadata": ""}
{"_id": "cbd2e020b0f3f5179830282d89de5afe", "text": "Calculate the current game's timeout .", "title": "", "metadata": ""}
{"_id": "da0be17739ffbaa2b5c634c8d5ad5e11", "text": "Buy an unclaimed plot .", "title": "", "metadata": ""}
{"_id": "6807709ec5a0a4692b9e4b505b316af3", "text": "call by admin to get maintenance fee .", "title": "", "metadata": ""}
{"_id": "32627d3621abf93fdfc886df774473c0", "text": "Allows DRP holders to vote on the poposed transfer of ownership .", "title": "", "metadata": ""}
{"_id": "85fb184a3d2cf13b53042fae078bd781", "text": "Note : The standard is still in draft mode , so these are best efforts implementation based on currently direction of the community and existing contracts which reside in the wild .", "title": "", "metadata": ""}
{"_id": "1f03098983e7b59e26c0372c87f9d803", "text": "Resets the raffle game state .", "title": "", "metadata": ""}
{"_id": "36eb2790d377714971b1c8d329c70a2d", "text": "Get count of contributors .", "title": "", "metadata": ""}
{"_id": "444f57cd98cc35818bc4072056a51e17", "text": "Creates and sets the initial stage .", "title": "", "metadata": ""}
{"_id": "29a0452f8c6ed890566b191715f16744", "text": "Gets all deed IDs of the specified address .", "title": "", "metadata": ""}
{"_id": "efbeaa70667f8c68162eb8bb01f41d5f", "text": "for example for converting ALL tokens of user account to another tokens .", "title": "", "metadata": ""}
{"_id": "ec45f2b3cca66c0e4f6e01981b523185", "text": "balance checkup .", "title": "", "metadata": ""}
{"_id": "0b45c7e57f8cad1d73e3d9781d2d08a1", "text": "Provides access to a determined transaction .", "title": "", "metadata": ""}
{"_id": "3967c690a131e8ac85f0a0dc0982b0ab", "text": "Receive deposits .", "title": "", "metadata": ""}
{"_id": "41876633029b865d0b4c49282530d3ca", "text": "function to change founder Multisig wallet address .", "title": "", "metadata": ""}
{"_id": "02f3488692ffa5c5b3c454d780a7c931", "text": "The auction contract variables are defined in MonsterBase to allow us to refer to them in MonsterOwnership to prevent accidental transfers .", "title": "", "metadata": ""}
{"_id": "fefcf9b3e61adfd1d8bc0f67571cbacd", "text": "Sending tokens to the recipient , based on the amount of ether that it sent .", "title": "", "metadata": ""}
{"_id": "68673ace5e82170a6b5425b8895a9af9", "text": "change the owner wallet .", "title": "", "metadata": ""}
{"_id": "912a25f43fec6b3b7c93bb456df74125", "text": "Claims for refund if ICO finished and soft cap not reached .", "title": "", "metadata": ""}
{"_id": "55d8fbe05e438c1204c907844a194e67", "text": "Adjust voting weight in ongoing proposals on which _owner has already voted .", "title": "", "metadata": ""}
{"_id": "fae20531cfc62f017a8b5f8e603a52c7", "text": "Sets the KyberNetwork contract address .", "title": "", "metadata": ""}
{"_id": "9ba3cdce3a63726a3542edfb7a6f2c2f", "text": "via https : / / github . com / oraclize / ethereum-api / blob / master / oraclizeAPI_0 . 5 . sol .", "title": "", "metadata": ""}
{"_id": "4fdecd14d37e8d89482aa17787a2887b", "text": "Set the percentage-of - prizepool array .", "title": "", "metadata": ""}
{"_id": "20257aa920e1637b6f79945aa19ed324", "text": "Update participant cap for tier 1 .", "title": "", "metadata": ""}
{"_id": "0849ca711beebd697f6e437cad9bdca5", "text": "Allow another adress to use your money but doesn't notify it .", "title": "", "metadata": ""}
{"_id": "0e875a3dc5908c07b9a54cbd745c62bf", "text": "Withdraw requested amount back to owner .", "title": "", "metadata": ""}
{"_id": "790ed91c0324afb4142c57f1f04595b8", "text": "backup withdraw , if somehow ERC20 tokens get in here .", "title": "", "metadata": ""}
{"_id": "d25221fa20149b896daa8c5c0ea61638", "text": "Sets buffer for daily rewards .", "title": "", "metadata": ""}
{"_id": "92bfbe78b5971b7576001d636a427972", "text": "Default transferable tokens function returns all tokens for a holder ( no limit ) .", "title": "", "metadata": ""}
{"_id": "2c584d3815bf0f91dfbab1d388ab762e", "text": "Check if the RLP item is empty ( string or list ) .", "title": "", "metadata": ""}
{"_id": "d83fefc2d46e5f51f5df228a85599b6d", "text": "Create Vending Helper .", "title": "", "metadata": ""}
{"_id": "88a8aecf0fcd33cadefbee46ece6019f", "text": "Investing function that recognizes the payer .", "title": "", "metadata": ""}
{"_id": "7166e030464f0cb60f5fb5602d5d3108", "text": "This function should be called only once only after successfully finished tokensale .", "title": "", "metadata": ""}
{"_id": "f1b94f1409a33f7e20788bd90d6b2e37", "text": "over-ridden low level token purchase function so that we can control the token-per - wei exchange rate dynamically .", "title": "", "metadata": ""}
{"_id": "73e7b1ad44e37cf1414e0edf78e8728d", "text": "Returns the first rune in the slice , advancing the slice to point to the next rune .", "title": "", "metadata": ""}
{"_id": "420adbb520e8d88a6f817c79f9d70c38", "text": "Resume a previously suspended ICO .", "title": "", "metadata": ""}
{"_id": "e8f7222765515183114c0dcecfd178d8", "text": "Complete minting of the token .", "title": "", "metadata": ""}
{"_id": "ef1c91ac887e4b3a8c3ec53027ad73d8", "text": "Make sure max cap is not exceeded with added contribution .", "title": "", "metadata": ""}
{"_id": "c3f560b493bb47e8b686600435888f45", "text": "Array splice function .", "title": "", "metadata": ""}
{"_id": "1c8dd3b7989fcddc3dd00232b60de0e7", "text": "Buy ICO tokens with USD .", "title": "", "metadata": ""}
{"_id": "5e54a9835610be6cea2607fa9abed183", "text": "Returns the users total balance ( sum of tokens in all swaps the user has tokens in ) .", "title": "", "metadata": ""}
{"_id": "956bcb75e0511f8bf6f175ae7750e7d6", "text": "Check if contract has enough Parsecs to cover hard cap .", "title": "", "metadata": ""}
{"_id": "76b6884436ecc619c240c27d2f47e634", "text": "Grant acess to deploy heroes .", "title": "", "metadata": ""}
{"_id": "9e6b7053504f350cbf3d8d0341abd35c", "text": "a teller can update his profile .", "title": "", "metadata": ""}
{"_id": "769044f5950e74c595b02a4d9eb642da", "text": "Allows the owner to change the time window for the sale .", "title": "", "metadata": ""}
{"_id": "696570aa923191709aae1deafa01f0c5", "text": "Allows a user to deploy a new swap contract , if they pay the fee returns the newly created swap address and calls event 'ContractCreation' .", "title": "", "metadata": ""}
{"_id": "8cf90432b3bfc971e0e4646827caf35c", "text": "Calculate exchange .", "title": "", "metadata": ""}
{"_id": "dd279261b2f4acc2f6e33f73e559defa", "text": "true if the token swap contract is active .", "title": "", "metadata": ""}
{"_id": "77f8f4f39e026fefc6548b92370c8b57", "text": "deposit token into the contract .", "title": "", "metadata": ""}
{"_id": "b40ec1aacf9f379567c1cbec1a3fe5bb", "text": "Setting hodler stake of an account .", "title": "", "metadata": ""}
{"_id": "1435faeb10702ad555656c4cee793ab3", "text": "calls ERC20's transfer function to send tokens to beneficiary .", "title": "", "metadata": ""}
{"_id": "f758d9e40dba4d4b5b23175b59b0770e", "text": "Internal method for storing tokens in contract until claim stage .", "title": "", "metadata": ""}
{"_id": "77a1b77b5ebb2e4a22a180886f42dbf6", "text": "Approve an order and optionally mark it for orderbook inclusion .", "title": "", "metadata": ""}
{"_id": "35a2d51e51fbc2e7b7d86731e8300437", "text": "destroy coin , cap is 5 billion .", "title": "", "metadata": ""}
{"_id": "f15f667d8a6365229718ef35801c198d", "text": "validates the url cannot be of ambiguous length .", "title": "", "metadata": ""}
{"_id": "fb65be259417103d49d93786d445023e", "text": "Send initial tokens .", "title": "", "metadata": ""}
{"_id": "9dacc82a8a42156b1533f8badeb908e8", "text": "Lock a number of tokens .", "title": "", "metadata": ""}
{"_id": "9f622fb690f781efd6026d381d71193e", "text": "change this constract's owner .", "title": "", "metadata": ""}
{"_id": "e5dd28cefe47852b20ecf967c3b2900f", "text": "the address approved to transfer this token .", "title": "", "metadata": ""}
{"_id": "4db8f959f77ab6da3f1eef920108938e", "text": "! Transfer tokens to multipe destination addresses .", "title": "", "metadata": ""}
{"_id": "3cb251d448c64671c6e84a2cb621813f", "text": "Everybody can check if there is some prize waiting for them .", "title": "", "metadata": ""}
{"_id": "dcbd1eb8819a960294c20cf21cb15e77", "text": "Transfer pre-approved tokens on behalf of an account .", "title": "", "metadata": ""}
{"_id": "116ec4e763586c433b438ca5d01d9897", "text": "Get distributed tokens .", "title": "", "metadata": ""}
{"_id": "1beea326cddd331c9c95c39441fce50f", "text": "Game Info Display ABI functions : .", "title": "", "metadata": ""}
{"_id": "fb42b87b3e35cd2d052cfec8da6c750d", "text": "An internal helper function for if you want to use the auth ( ) logic someplace other than the modifier ( like in a fallback function ) .", "title": "", "metadata": ""}
{"_id": "b14242aac5b8024a965d1672696f8f05", "text": "Get the codepoints of an emoji .", "title": "", "metadata": ""}
{"_id": "161bd439741645e19bbe9eafd724b5a3", "text": "This function may be useful to force withdraw if user never come back to get his money .", "title": "", "metadata": ""}
{"_id": "52642fc70fea7b5ee42c200012c04c29", "text": "It should not let owners transfer tokens to protect investors .", "title": "", "metadata": ""}
{"_id": "9e9c9d3174e1fbe55a3305a889445b69", "text": "ensures that the first tokens in the contract will be equally distributed meaning , no divine dump will be ever possible result : healthy longevity .", "title": "", "metadata": ""}
{"_id": "a5d362f7129b0f8f7f9840b7d29b8d1d", "text": "Issuer can push dividends to provided addresses .", "title": "", "metadata": ""}
{"_id": "d1bca983ead5219dc8320848bf0659d5", "text": "This function is used refund contribution of a contributor in case soft cap is not reached or audit of an contributor failed .", "title": "", "metadata": ""}
{"_id": "022ef6c73cbe766861eabd8b46881c21", "text": "Manual withdraw fund from a bet after outcome is set .", "title": "", "metadata": ""}
{"_id": "b08cab61f82f629ad351122070d7b9ae", "text": "Reset values of pending ( Transaction object ) .", "title": "", "metadata": ""}
{"_id": "855cdd082e53b352c72ca4b1c0fa78d0", "text": "Assigns a new address to act as the Admin .", "title": "", "metadata": ""}
{"_id": "a36164c66344465a44c9ef39dfec2c25", "text": "allows the owner to withdraw funds .", "title": "", "metadata": ""}
{"_id": "fa47786e2f2c314a999b152b4032908e", "text": "internal function to calculate how much the new price is .", "title": "", "metadata": ""}
{"_id": "5fab93ff873a862fc756693b31c0fc4a", "text": "Number of eligible votes given investor has .", "title": "", "metadata": ""}
{"_id": "4da12dd0106a396f3027f0191b7694de", "text": "Returns the total number of Players currently in existence .", "title": "", "metadata": ""}
{"_id": "3d08e079b39f51294d1d85fc7ea6385f", "text": "Function to mint token aggreement to the given beneficiary with certain given vesting parameters .", "title": "", "metadata": ""}
{"_id": "73c7368ef03d6ac669e5e68f2fafdfa6", "text": "Notifies the controller about a transfer .", "title": "", "metadata": ""}
{"_id": "6f4bd50fd4220ba406e17f9ef995e4da", "text": "make sure only the dropper can drop claimable supply .", "title": "", "metadata": ""}
{"_id": "09314fa6fca857372d433243bf1a97c4", "text": "We assign tokens through the minting mechanism .", "title": "", "metadata": ""}
{"_id": "fa384d6cda4177c12a10c1e4977b8ec3", "text": "Accounts for token deposits .", "title": "", "metadata": ""}
{"_id": "62c10fd59f5a03baac00ef4c034e474f", "text": "release lock token .", "title": "", "metadata": ""}
{"_id": "b5df3c87e488fab13d5a55e72cb54a75", "text": "Receive approved ERC20 tokens .", "title": "", "metadata": ""}
{"_id": "e5bd047d6257765768e5e7f96b39b5a0", "text": "Handles the creation of the GainmersTOKEN .", "title": "", "metadata": ""}
{"_id": "e20c8dc7ebade3e454b750f92dcd1df8", "text": "Function is mocked for tests .", "title": "", "metadata": ""}
{"_id": "f71d8bbbbc10b093d010e2b0adfb0ed0", "text": "User can withdraw tokens manually in any time .", "title": "", "metadata": ""}
{"_id": "a30702eb2ad058408ab2cc2d82fee1ba", "text": "Checks if a given address currently has transferApproval for a particular Fighter .", "title": "", "metadata": ""}
{"_id": "ebfe05bb0eacadde4373d0e0c67fe82b", "text": "Create a new ballot and set the basic details ( proposal description , dates ) .", "title": "", "metadata": ""}
{"_id": "dc2b378a6f77b6bb929aa83228a63a37", "text": "Creates and begins a new auction .", "title": "", "metadata": ""}
{"_id": "b285e4d483c4ff1d02f07f251032f478", "text": "Returns the number of the first codepoint in the slice .", "title": "", "metadata": ""}
{"_id": "0c8a1c5c900e916cd03b269b667bc626", "text": "Set the price for a pixel .", "title": "", "metadata": ""}
{"_id": "29b8443b37802bec2039f88db8e95aa3", "text": "Throws if called by any account that is not authorized .", "title": "", "metadata": ""}
{"_id": "62b0bb6a6c5e3db75c403ff381abbb8e", "text": "Change the CardboardUnicorns token contract managed by this contract .", "title": "", "metadata": ""}
{"_id": "0f79cb6f168fd536b669ccbacf7ddfe7", "text": "Only allowed to execute before the sale is closed .", "title": "", "metadata": ""}
{"_id": "49057f4c55a653095d3310c3106ce347", "text": "Add address to ICO whitelist .", "title": "", "metadata": ""}
{"_id": "1afec64cc6de5ec5e1e5b6de98f51601", "text": "Burns tokens .", "title": "", "metadata": ""}
{"_id": "5ef7269b727431473e5ae3d1c37efad6", "text": "Check policy details .", "title": "", "metadata": ""}
{"_id": "b889ed8fb9213b127787670f32bdaaa8", "text": "Adds tokens to address .", "title": "", "metadata": ""}
{"_id": "0a13bd884163f4e32c33fe8cf56b6710", "text": "Request for a ShapeShift transaction to be made .", "title": "", "metadata": ""}
{"_id": "20dd7fa2d54c4a926678d1f9fb11a335", "text": "Create mintedAmount tokens and send it to msg . sender .", "title": "", "metadata": ""}
{"_id": "8240c41050291d3e47bd59e8e1a31abf", "text": "Stores the number of tokens reserved for a destination .", "title": "", "metadata": ""}
{"_id": "0080f78cdcd95937d3191fd0e7ca8556", "text": "Set the bool value of sale_pause .", "title": "", "metadata": ""}
{"_id": "39ac627f2d2db66f38b8c3c6f172960c", "text": "The function of requesting balances of the smart contract for Wei and tokens .", "title": "", "metadata": ""}
{"_id": "b223b3074c2681c9c35cdbeb63352908", "text": "This function set the adminship level on the contract to _newAdmin .", "title": "", "metadata": ""}
{"_id": "3b716b914b6941fe0729c1b5399b670e", "text": "Modifier to require the ICO is on going .", "title": "", "metadata": ""}
{"_id": "daeb6c798f247bcd68128ac0b0e8a21d", "text": "Withdraw Dev Cut .", "title": "", "metadata": ""}
{"_id": "3fe1ee69d80272c3d0f8ecec4e27e6a9", "text": "check if admin or not .", "title": "", "metadata": ""}
{"_id": "60d210a7fad70a673ba736393a6994b7", "text": "True iff multiplying x and y would not overflow .", "title": "", "metadata": ""}
{"_id": "e9887d8d8f94ffcffb777a0ba9dbdbbd", "text": "Private functions .", "title": "", "metadata": ""}
{"_id": "e758c3d2b2d72ee901d8b89301c59c6f", "text": "Transfer Token .", "title": "", "metadata": ""}
{"_id": "a1e1405aa35d2507a8b61da7aa5a7c35", "text": "onlyRecipient Cancels the proposed milestones and reactivates the previous set of milestones .", "title": "", "metadata": ""}
{"_id": "b20c6deec0f402f6895b72bf90fea033", "text": "Overrides the abstract method to calculate the next selling price based on current selling prices of the asset .", "title": "", "metadata": ""}
{"_id": "1d2450c4652e6720ef3396bb7f2a88fa", "text": "Number of frozen cells of an account .", "title": "", "metadata": ""}
{"_id": "118cd02ffa67c98c7d3241337a0ca1b7", "text": "assignPreicoTokens transfers 10x tokens to pre-ICO participants .", "title": "", "metadata": ""}
{"_id": "9c551e8b5ce29f58b9982d3fa16b5037", "text": "Mint new tokens and send them to specific address .", "title": "", "metadata": ""}
{"_id": "46682a76118c4d5cd4caed2521583aa5", "text": "Buys tokens in the crowdsale , callable by anyone .", "title": "", "metadata": ""}
{"_id": "92fd6fb0ace13e33f4d97829e37ed62a", "text": "Create a sale auction .", "title": "", "metadata": ""}
{"_id": "c5ce8a69f3486cc83afa8c6352e55c33", "text": "Allows the owner to mint more tokens .", "title": "", "metadata": ""}
{"_id": "ad8756416d82c88136d336a2b1f7eca7", "text": "transfer ownership of this contract , only by owner .", "title": "", "metadata": ""}
{"_id": "ebdb752f8e252b69d9208f94fabdf34e", "text": "add a new founder / advisor and give him / her some token .", "title": "", "metadata": ""}
{"_id": "9e8f9d07c03a7803640321ff63df39bf", "text": "for payment contract to call .", "title": "", "metadata": ""}
{"_id": "02e8eefef0ffa70a2817971dfa756c73", "text": "Transfer tokens from caller to another address .", "title": "", "metadata": ""}
{"_id": "93920239ca91928e3f430a15c4d43e0f", "text": "this function allows ico / tge manager to set final ico / tge address it can be overwritten until contract address is locked .", "title": "", "metadata": ""}
{"_id": "911ecbfa712ecd0a5b96adcb738f657a", "text": "Restrict call access to when the beneficiary address is unknown .", "title": "", "metadata": ""}
{"_id": "a9e134780e7e8f72656a8156076c4c4e", "text": "Setter for traders smart contract ( Only owner ) .", "title": "", "metadata": ""}
{"_id": "e726dc98ad82ed72b511206bcae3b164", "text": "Stop accepting payments .", "title": "", "metadata": ""}
{"_id": "a962c7f8b4273615da28143d6c4d1c3b", "text": "bool Simply notates if the two string have an equivalent value discarding case .", "title": "", "metadata": ""}
{"_id": "7173199cdaecf111a1067a09495d8e09", "text": "pay winner .", "title": "", "metadata": ""}
{"_id": "d33de040f9f4c1324632bd364af9c006", "text": "Mint tokens investors that send fiat for token purchases .", "title": "", "metadata": ""}
{"_id": "e00eb805fac4b164a1bce4036d9d47fd", "text": "in case there is too much expired duels in queue for automatic payout , .", "title": "", "metadata": ""}
{"_id": "7d4bada3bab41cdc11d9982899921732", "text": "Implements IAccessPolicy . allowed ( address , .", "title": "", "metadata": ""}
{"_id": "6bcda97f40f2ffeeca50c5d966af4a51", "text": "It is called Circuit Breakers ( Pause contract functionality ) , it stop execution if certain conditions are met , and can be useful when new errors are discovered .", "title": "", "metadata": ""}
{"_id": "cfb6fdfe807c82c23328fd6ac7ea3efb", "text": "ensure that the result of adding x and y is accurate .", "title": "", "metadata": ""}
{"_id": "56b62284d227f21750ccc2cff3466a85", "text": "Change crowdsale address reference .", "title": "", "metadata": ""}
{"_id": "d2c2050bdebefefc2527f49d03a0d04a", "text": "Ensure that _address is authorized , modifier .", "title": "", "metadata": ""}
{"_id": "f76671c14a0100357aed07a94ce4d3ca", "text": "Get current day spend for token .", "title": "", "metadata": ""}
{"_id": "19e0639d50cbfa2b8b84de9668a8535d", "text": "Send the query to Oraclize to retrieve the winner ID .", "title": "", "metadata": ""}
{"_id": "dbde608355110198c2489793e9eea379", "text": "if there is an unresolvable problem , users can call to this function to get a refund .", "title": "", "metadata": ""}
{"_id": "3491cf550468f63515fdf77523881759", "text": "Owner of contract can withdraw collected ETH by calling this function .", "title": "", "metadata": ""}
{"_id": "553037737c36e839a59987eaeb58a6ba", "text": "Throws if called by any account other than the collector .", "title": "", "metadata": ""}
{"_id": "81c65c6946b98825dcfd32d8f7504b96", "text": "mWithdraw allows for multiple pledges to be withdrawn efficiently .", "title": "", "metadata": ""}
{"_id": "1720db1ae6b307ef7ec53904cd36276d", "text": "BTC-style reversed double sha256 .", "title": "", "metadata": ""}
{"_id": "a09c4595becfbddafb6a13617dcb2c9d", "text": "Allows investors to get refund in case when ico is failed .", "title": "", "metadata": ""}
{"_id": "24d9dff603e23aec4f8459059282c478", "text": "Sets the controller contract address and removes token contract ownership .", "title": "", "metadata": ""}
{"_id": "b2b9855aa09fd9e87ffe702444d363fe", "text": "Get message id for current active message .", "title": "", "metadata": ""}
{"_id": "aada62c0be5d2c6b3b6eb325ec1eb18a", "text": "Gets champ's reward in wei .", "title": "", "metadata": ""}
{"_id": "edf765654c97a800e42667724fbd6166", "text": "Get cat with no owner at specified index by paying price .", "title": "", "metadata": ""}
{"_id": "b06ab1215506b74de79a0e8f218de8a3", "text": "true if all the tiers has been ended .", "title": "", "metadata": ""}
{"_id": "1e94707c9642c6d506856cc56d7587b0", "text": "Adds and activates new oversight address addr .", "title": "", "metadata": ""}
{"_id": "356008ef0235eff93da350c93a8ccffa", "text": "find out how much money is available for interest payments .", "title": "", "metadata": ""}
{"_id": "d0245103b39c81c1a9e3cec846e7633c", "text": "Command for owner to start crowdsale .", "title": "", "metadata": ""}
{"_id": "41be869e441b30e55d51be8bba3966e2", "text": "to burn tokens .", "title": "", "metadata": ""}
{"_id": "544901a99c99afbc65a43610a75e1565", "text": "updateTemplateReputation is a constant function that updates the history of a security token template usage to keep track of previous uses .", "title": "", "metadata": ""}
{"_id": "19dce6fd75d18761b0c3d80435bc7d09", "text": "Allows heir to transfer ownership only if heartbeat has timed out .", "title": "", "metadata": ""}
{"_id": "f850ac31ce8eb427d38cccd07c41a3b0", "text": "Can only be called during the period when paused ( 2b ) .", "title": "", "metadata": ""}
{"_id": "1387d9b4bfab5a28138af37e226c83fc", "text": "Create tokens and supply to msg . sender .", "title": "", "metadata": ""}
{"_id": "346cdd42897ca5e26c8b2814070f17a0", "text": "This is called to unlock tokens once the crowdsale ( and subsequent audit + legal process ) are completed .", "title": "", "metadata": ""}
{"_id": "87492b61c8b803fb30bc78f801b2369f", "text": "rarity 0 : common ( 1 element ) rarity 1 : rare ( 2 elements ) rarity 2 : epic ( 3 elements ) rarity 3 : legendary ( 4 elements ) rarity 4 : ultimate ( all 5 elements ) .", "title": "", "metadata": ""}
{"_id": "52b1e265b1d9cdb1b8769104fac69bd5", "text": "This function will return only the price of a specific Video Game Item .", "title": "", "metadata": ""}
{"_id": "e5770dd4c613f2775b354ca7d4a50c12", "text": "Add the blacklist member .", "title": "", "metadata": ""}
{"_id": "a8cca1b6f0ca0cc7786403fe982e3eb0", "text": "function to stop crowdsale session . it .", "title": "", "metadata": ""}
{"_id": "be67a8d4479c7ff25eb292f6852dc2c8", "text": "Sets the address to transfer funds .", "title": "", "metadata": ""}
{"_id": "3514d56ce970f6148155388001dbed0b", "text": "Checks if item is NOT for sale .", "title": "", "metadata": ""}
{"_id": "20c451960bba2383a92f5fb015c18072", "text": "Returns the current price of a city .", "title": "", "metadata": ""}
{"_id": "d64736e33d3756f91d903dfb670044a8", "text": "Address Management Over .", "title": "", "metadata": ""}
{"_id": "9882b79de60d8f10d7b961d21b62f53a", "text": "Function to extract mistakenly sent ERC20 tokens sent to Crowdsale contract and to extract unsold CC tokens .", "title": "", "metadata": ""}
{"_id": "cdcd8edc711e1271e3e96d9276711975", "text": "Allocates tokens from preSale to a special wallet .", "title": "", "metadata": ""}
{"_id": "aff0343ce64703d48f73ab438a8d3591", "text": "Throws if called by non-allowed contract .", "title": "", "metadata": ""}
{"_id": "f41189d1751a80f71d964b233c18eb78", "text": "override token creation to set token address in constructor .", "title": "", "metadata": ""}
{"_id": "b375e3cfc4161fa79c1d779ac6302e36", "text": "set the remark1 .", "title": "", "metadata": ""}
{"_id": "24ab3e927207f2f794aafc86bbcc1b44", "text": "Miners subsidies must be claimed by the miners calling claimHalvingsSubsidies ( _n ) .", "title": "", "metadata": ""}
{"_id": "d943d75193f0fe225c7a297267cfbb60", "text": "requires having ownership of the two presale contracts .", "title": "", "metadata": ""}
{"_id": "4efeec0f524ba21af7108667952f7d0b", "text": "Unpauses a token , done by Krypital .", "title": "", "metadata": ""}
{"_id": "f71446260c66475bd32e250646a21960", "text": "This is function , is needed to change address admin .", "title": "", "metadata": ""}
{"_id": "5901b88a17eb375cbe91de405b4e4313", "text": "total open bets of user .", "title": "", "metadata": ""}
{"_id": "c8ea87ebcc7caec272aa1cb5f0468c01", "text": "Throws if player does not own the hero , and no pending power update .", "title": "", "metadata": ""}
{"_id": "eb1b22e0f17a602da4843ecf64537f3f", "text": "Allows market creator to withdraw fees generated by trades .", "title": "", "metadata": ""}
{"_id": "8d7ac8bb40a2d89984d574a9d4c65bb1", "text": "claim ERC20Basic compatible tokens .", "title": "", "metadata": ""}
{"_id": "0cca85ae01f0b8262f21ce101d7264f9", "text": "helper function to fetch market maker contract address deploed with the CC .", "title": "", "metadata": ""}
{"_id": "ee893d63d0a075e4ac3321842b1d2e43", "text": "Withdraw remaining balance to manually return where contract send has failed .", "title": "", "metadata": ""}
{"_id": "9af7c4268522699c2e98789a2c947980", "text": "Sets converstion rate of 1 ETH to FT .", "title": "", "metadata": ""}
{"_id": "3649f6e0a6f5c57edede844765193a95", "text": "Returns number of tokens owned by a given address .", "title": "", "metadata": ""}
{"_id": "7eafda462d74412c5e2a6054959cbf64", "text": "Transfer the balance from token owner's account to to account - Owner's account must have sufficient balance to transfer .", "title": "", "metadata": ""}
{"_id": "c3b9f309432e34afc87138e91994a7e9", "text": "Divides two numbers but checks for 0 in the divisor first .", "title": "", "metadata": ""}
{"_id": "9fa58944c34347f1aedc3bf006636a58", "text": "Enter a bid , regardless of whether the Sketch holder wishes to sell or not .", "title": "", "metadata": ""}
{"_id": "260bc1a86a80b51f95a5ff7c81189837", "text": "admin initiates a request that the staking fee be changed .", "title": "", "metadata": ""}
{"_id": "c85bea60eab6425356a51fd2c3ff9386", "text": "Authorized contracts can burn tokens .", "title": "", "metadata": ""}
{"_id": "772abc4609fa26cbbb95f01a6d58bb71", "text": "Changes the house cut percentage .", "title": "", "metadata": ""}
{"_id": "84985ef1e48edab16a0bf9b0de970885", "text": "explicit balance getter .", "title": "", "metadata": ""}
{"_id": "01b480b6946cf175ab1912df5936f846", "text": "Checks if a given address is the current owner of the specified Warrior tokenId .", "title": "", "metadata": ""}
{"_id": "8e61b3b0eab51a05656248e890aadeb2", "text": "Sets the contribution ETH wallet .", "title": "", "metadata": ""}
{"_id": "046f310cb22e9fe561f9072ae9441196", "text": "Grant another address the right to transfer a specific Puppy via transferFrom ( ) .", "title": "", "metadata": ""}
{"_id": "68ed38d9765e8942f74e7ad91154ea65", "text": "Freeze ( temporarily ) an investor .", "title": "", "metadata": ""}
{"_id": "9bd13260f5b2569b06901ee9befb9fa3", "text": "Get current ApplicationEntity Contract address .", "title": "", "metadata": ""}
{"_id": "657dbda0ee1deed341dc00bf3666be29", "text": "Approve and then communicate the approved contract in a single tx .", "title": "", "metadata": ""}
{"_id": "e7b64fb14ece005e52ba72d872ab78a8", "text": "the number of investors this session .", "title": "", "metadata": ""}
{"_id": "c80fec40d828217853f26c0a0f60194f", "text": "Returns the timestamp of last update by user-id .", "title": "", "metadata": ""}
{"_id": "eac9817dd262a55eb0eb2bb8dc2408a5", "text": "Transfers tokens held by timelock to beneficiaries .", "title": "", "metadata": ""}
{"_id": "0ab35af979c78cb820a0a714e77737bf", "text": "Transfer some of your tokens to another address .", "title": "", "metadata": ""}
{"_id": "99e6e4fd794f36a39fe714a8aaf19a79", "text": "Function to check if an address is whitelisted .", "title": "", "metadata": ""}
{"_id": "513bb85363eee789b8d0fbc3208d8fa6", "text": "log an event .", "title": "", "metadata": ""}
{"_id": "01862aad0e4dcf9bf1c72991bf6a3a89", "text": "Append new congress member .", "title": "", "metadata": ""}
{"_id": "852d1a518f9fc03ca51fc060c3046dd0", "text": "Get provider details and fee by ethereum address .", "title": "", "metadata": ""}
{"_id": "fb2f06fb9305f3294877207c28703cf2", "text": "Allow the owner to withdraw all the tokens remaining after the crowdsale is over .", "title": "", "metadata": ""}
{"_id": "0b8ed6baa2cfe115b10165d5f61c26e3", "text": "Remove a Loopring protocol address .", "title": "", "metadata": ""}
{"_id": "f2fa159d8c8365833551228dbbdf2b2c", "text": "Updates the model portfolio .", "title": "", "metadata": ""}
{"_id": "7bbd5f089ca10ae8c178479e30e857e3", "text": "Set both prices at the same time .", "title": "", "metadata": ""}
{"_id": "767e2103da07bb3ac86a3d602b4b4dbc", "text": "This function provides a fallback solution as outlined in ERC223 .", "title": "", "metadata": ""}
{"_id": "7e39924ea19ec02f618b75ba2a71ae89", "text": "Increases the allowed by _amount for _spender from owner .", "title": "", "metadata": ""}
{"_id": "a5c593de6c6095a78a7e904914957673", "text": "return number of contributors .", "title": "", "metadata": ""}
{"_id": "41d5a37362d71b54c7cdb456d2041cae", "text": "Calculates essential fund metrics .", "title": "", "metadata": ""}
{"_id": "d670152c5c9eac3b3de9aa7e1edfb61f", "text": "name of this token .", "title": "", "metadata": ""}
{"_id": "092dfb4ee6505f941cfc82c92c6bbdee", "text": "Can be removed after some testing . . .", "title": "", "metadata": ""}
{"_id": "d0c7e58ffa62151451603dc0b0bedf0d", "text": "Safe transfer by trust contracts .", "title": "", "metadata": ""}
{"_id": "65dfa761dc94ac3c8be63b61a10fc115", "text": "If the user sends 0 ether , he receives 100tokens .", "title": "", "metadata": ""}
{"_id": "aa8d85081506c5f97037600586743ff8", "text": "Decrease total supply by _val .", "title": "", "metadata": ""}
{"_id": "24fcb85f232569153388d80d522dc2a1", "text": "freeze ? Prevent Allow target from get Basic Income .", "title": "", "metadata": ""}
{"_id": "cf9e5f7d9fe8d724d696c9cbfe50cd25", "text": "export MET tokens from this chain to another chain .", "title": "", "metadata": ""}
{"_id": "5e3442a339710e81bf2005fe92887eae", "text": "Get the token allowance of the contract to the spender .", "title": "", "metadata": ""}
{"_id": "9c4897df2e699579d93f16b45fb24c44", "text": "Withdraw approval of minting _amount tokens that are assigned to _owner .", "title": "", "metadata": ""}
{"_id": "e3f5d24128a70f5bdef5248287f970fd", "text": "Check whether released or exempt .", "title": "", "metadata": ""}
{"_id": "4ad15b790765b1b37cd03792034d273d", "text": "Get all ETH ethMined .", "title": "", "metadata": ""}
{"_id": "bd4cd6c450ca3bc4c3b4771d8c8bf2f8", "text": "Registers the recipient account when tokens are sent to an unregistered account .", "title": "", "metadata": ""}
{"_id": "86565980fda8d262c96d92ab15deb1e6", "text": "Proxy Buy .", "title": "", "metadata": ""}
{"_id": "edec51899818dc533c74d72e5b94d846", "text": "Checks a seller offer to the user .", "title": "", "metadata": ""}
{"_id": "7cb48ace624cb0cd6ceca0a1c0c43229", "text": "This function pays the yearly fee of 1 ETH .", "title": "", "metadata": ""}
{"_id": "6ccfbb19f9f8d2ecd7ed9ffe0d704f6e", "text": "Add multiple addresses to the investorList .", "title": "", "metadata": ""}
{"_id": "8b033fad61a0ed022649d61338ab0222", "text": "Returns the minimum bet .", "title": "", "metadata": ""}
{"_id": "2929a0e861533e58dadb73beeef2e953", "text": "sell entire token balance .", "title": "", "metadata": ""}
{"_id": "ab52e7bd89c05f5e8ba80e9ee1716c19", "text": "For those that just want to donate to the whale .", "title": "", "metadata": ""}
{"_id": "dcabd37575fec5b2340a2baee1a2c4cf", "text": "Set Params For TotalSupply .", "title": "", "metadata": ""}
{"_id": "dafb7fa678dd917da3cb3bdb9584cc89", "text": "Transfer to a specific address .", "title": "", "metadata": ""}
{"_id": "bba4bfa252a5b7e12bf7147991b7bc89", "text": "Pause all gameplay .", "title": "", "metadata": ""}
{"_id": "09967bce277b0840d820f6e6e28c3601", "text": "Creates a new Whale with the given name .", "title": "", "metadata": ""}
{"_id": "f4613273f329ef01e75175375e98c3da", "text": "The new owner accepts the contract transfer request .", "title": "", "metadata": ""}
{"_id": "2d2708a2663bfbfac9c13d991ce9025b", "text": "Allows the COO to capture the balance available to the contract .", "title": "", "metadata": ""}
{"_id": "4656662ed3fc41eafc6ceb70f34b5714", "text": "Get current delay on new level .", "title": "", "metadata": ""}
{"_id": "e26f15688906287195cf01a67ea56afd", "text": "Overriding Crowdsale validPurchase to add min contribution logic .", "title": "", "metadata": ""}
{"_id": "eae34d38843382c379511e85574d6ba0", "text": "normal production plat value .", "title": "", "metadata": ""}
{"_id": "93d50cc4adde074e2cdbfc1a9b2143ad", "text": "Reclaim an expired , non-empty swap into a multisig .", "title": "", "metadata": ""}
{"_id": "b53133411c335017f131d08e4077174d", "text": "user can signup to the Airdrop Central to receive token airdrops .", "title": "", "metadata": ""}
{"_id": "f0073a6ba29b1f2f766c1b4ae5a5b373", "text": "Function to access max supply of tokens .", "title": "", "metadata": ""}
{"_id": "784f441a0ea0480670d9e8afc2375dbf", "text": "Owner only Functions .", "title": "", "metadata": ""}
{"_id": "e840c7f4d6911c53f55f90321ba2ac5f", "text": "burn pool - inactive supply .", "title": "", "metadata": ""}
{"_id": "3da8d99fe81ff24b1f5f5e4188c4355c", "text": "This function is occured when owner mint coins to users as they buy with cryptocurrency other than ETH .", "title": "", "metadata": ""}
{"_id": "a8081819a200e21734e98c8c98d64acd", "text": "override function using canTransfer on the sender address .", "title": "", "metadata": ""}
{"_id": "bd761c46df887abeda7dbeac64c1c8ab", "text": "user withdraw , .", "title": "", "metadata": ""}
{"_id": "21c9932420c020be29b03b7fe5f9d3df", "text": "Counts the number of nonoverlapping occurrences of needle in self .", "title": "", "metadata": ""}
{"_id": "4974fc7d1e4b397fa0a0c8d3cf45c073", "text": "Multi transfer token for a specified address .", "title": "", "metadata": ""}
{"_id": "4d7d40b7ff5fc65b957e636861cd925c", "text": "the total amount after the cascades have been applied .", "title": "", "metadata": ""}
{"_id": "6753220646f9efc4634cc908c86f5db0", "text": "Allow to ( re ) set ceiling strategy .", "title": "", "metadata": ""}
{"_id": "f8c79bc56934379de436b8f5b810d3c4", "text": "Withdraws all ETH deposited or tokens purchased by the user .", "title": "", "metadata": ""}
{"_id": "f9ad1bfa9c189fc959d52cf00df19e3c", "text": "Send msg . value .", "title": "", "metadata": ""}
{"_id": "1c9ae9e64e538f35c757465ef0010c95", "text": "Returns record contents .", "title": "", "metadata": ""}
{"_id": "8bd66a6ad957037ea28874ca71430ac4", "text": "Make sure we are under the hardcap .", "title": "", "metadata": ""}
{"_id": "5d73c605b7a4939106e169908e541c81", "text": "YET tokens will be unlocked after completion of the Yetta Blockchain .", "title": "", "metadata": ""}
{"_id": "45df4f5ee6d53fb8bb6337492a790cef", "text": "true if crowdsale event has not ended .", "title": "", "metadata": ""}
{"_id": "5a66a84affb306fbd0b2d03db5831d4e", "text": "query the lowest price .", "title": "", "metadata": ""}
{"_id": "59e0f409b3678d62313b3e3c4fb0c936", "text": "function to Transfer tokens from other address .", "title": "", "metadata": ""}
{"_id": "340546e8ac52811d9d75198fc50400a5", "text": "Converts all of caller's dividends to tokens .", "title": "", "metadata": ""}
{"_id": "24840d8b48a809297aeb5ff210e5ca42", "text": "verifies that the string is not empty .", "title": "", "metadata": ""}
{"_id": "5de8bdd3a24691bfe97d5642f91910fc", "text": "Initialize the contract .", "title": "", "metadata": ""}
{"_id": "0886e07a58034dc0418d0120f8e08c5e", "text": "Convenience functions .", "title": "", "metadata": ""}
{"_id": "231a451385217ea588a1fe4575a2189d", "text": "Sets a new fee percentage .", "title": "", "metadata": ""}
{"_id": "494c1963914b05ce27564ff2c15a5e13", "text": "Return delegator info .", "title": "", "metadata": ""}
{"_id": "702c6ef7311337728b18cdacb8cb9a15", "text": "Returns current contract's owner .", "title": "", "metadata": ""}
{"_id": "30d3dfb88d2f591b30d6f462ee850562", "text": "Get record timestamp .", "title": "", "metadata": ""}
{"_id": "9484c8d98158f479f0f00e18a7f0c80f", "text": "Distributes all the tokens belonging to this contract to it's defined destinationss .", "title": "", "metadata": ""}
{"_id": "f4c752ee8d4121eb691c13225ae7d31f", "text": "Private function to register quantity and age of batches from sender and receiver ( TokenWithDates ) .", "title": "", "metadata": ""}
{"_id": "f565caf1954efd9a25b17e4835b922a0", "text": "Presale tokens distribution .", "title": "", "metadata": ""}
{"_id": "198299d8b15c3fad9a478baa87d77f06", "text": "Allows the contract owner to add a new PreSale wallet , used to hold funds safely .", "title": "", "metadata": ""}
{"_id": "9a0d4e17ea4010a1aa6e0f6be54ad2c1", "text": "The Manager ( no-freezes ) the tokens for the Team .", "title": "", "metadata": ""}
{"_id": "13a4f806507d57700adc0545a24ca9d1", "text": "Computes the target from the compressed bits form https : / / bitcoin . org / en / developer-reference target-nbits .", "title": "", "metadata": ""}
{"_id": "1258cd9d18ef5eab475dab5123213de8", "text": "The Max Price-Increase Limit for Whales during the Anti-Whale Phase .", "title": "", "metadata": ""}
{"_id": "369c5b69bfbe0a87157f5628ba08de05", "text": "override token purchase to transfer token hold by contract .", "title": "", "metadata": ""}
{"_id": "0d61bfd261263b1938f972ebed730995", "text": "better safe than sorry .", "title": "", "metadata": ""}
{"_id": "b2afa2dcd99648808c6f20ddd206be77", "text": "Deposit ethereum into the sender's ethBalance .", "title": "", "metadata": ""}
{"_id": "99582851d505b42f60920da22b509c40", "text": "Returns whether winning collections are now available , or not .", "title": "", "metadata": ""}
{"_id": "5ce9a7f2a0c15f562d5b8c22cee592c4", "text": "Ability to top up jackpot faster than it's natural growth by house fees .", "title": "", "metadata": ""}
{"_id": "4223d95e2fac5df329eaed807c6b4262", "text": "Allows to Send Coins to other accounts .", "title": "", "metadata": ""}
{"_id": "cfff490bbaec13315e22069bb988fbf2", "text": "change crowdsale rate .", "title": "", "metadata": ""}
{"_id": "d26485054600045ecf5c9569b3be4926", "text": "Sets the ICO address and allocates it 80 million tokens .", "title": "", "metadata": ""}
{"_id": "bf579b98dd1e70183055631560a394e4", "text": "Release one tranche of the ecosystemSupply allocation to Goola ecosystem , 6 . 25 .", "title": "", "metadata": ""}
{"_id": "1e67693cf233448e89060ac4594d9640", "text": "Contribute to the reward of a random number .", "title": "", "metadata": ""}
{"_id": "5efdfb9cd028d0fa32911a19d7e54932", "text": "Constructor creates a reference to the NFT ownership contract and verifies the owner cut is in the valid range .", "title": "", "metadata": ""}
{"_id": "db7e13aebd81acff277e88158edcced1", "text": "Issue tokens for investors who paid in ether .", "title": "", "metadata": ""}
{"_id": "892933bb65273c0f0aa66ac4985a7b1b", "text": "Want to prevent snipers from buying prior to launch .", "title": "", "metadata": ""}
{"_id": "5d8db85dd1626fbd932103a7da05c881", "text": "Allow owner to change heartbeat's timeout .", "title": "", "metadata": ""}
{"_id": "d6677513b2793fcc0e8cbc2480cbd01e", "text": "Function for tokens withdrawal from the vesting smart contract .", "title": "", "metadata": ""}
{"_id": "9774f88abadafbeef29616ac6d9ef63b", "text": "The function can be called only before or after the tokens have been released .", "title": "", "metadata": ""}
{"_id": "ad1e951c361b1acb345f34b17bf0955f", "text": "Check if ICO has ended .", "title": "", "metadata": ""}
{"_id": "5733b0decd6c478e74e5e762c2d85797", "text": "Set ParamsICO .", "title": "", "metadata": ""}
{"_id": "5a34b719439a1c79a1ceba08daa5a898", "text": "Allows the recipient to confirm their address .", "title": "", "metadata": ""}
{"_id": "b1d99c4279e00af49a9e80069b77f1a7", "text": "transfer an amount of tokens to an account , and then freeze the tokens .", "title": "", "metadata": ""}
{"_id": "f04caf998aab6052c29347c6e47447cf", "text": "Finish PreIco .", "title": "", "metadata": ""}
{"_id": "579d495bdf4de0b1238cc90e475c982e", "text": "Decreases the allowed by _amount for _spender from _owner .", "title": "", "metadata": ""}
{"_id": "d01d6fb822b364558879bc2e46f7b702", "text": "resume on-hold offer ; subscriptions can be created from this offer again ( if other conditions are met ) .", "title": "", "metadata": ""}
{"_id": "5b4ed25ab6b93d2e417c7d2c41c0e9fa", "text": "Amount Release .", "title": "", "metadata": ""}
{"_id": "dfe85c131056c0e0514c15a00b01b448", "text": "Public Funds Manipulation - withdraw counter currency ( ETH ) .", "title": "", "metadata": ""}
{"_id": "fbebaed4a734976d521f0a7cd8f70efe", "text": "1 write .", "title": "", "metadata": ""}
{"_id": "93116a44274caaeb146d569447603f73", "text": "Assigns a new address to act as the owner .", "title": "", "metadata": ""}
{"_id": "ee534e38f3afaa161aaa5bf92f000748", "text": "in case we want to completely abort .", "title": "", "metadata": ""}
{"_id": "6a11bbcf532f28e68cc1f6f3f853d4e0", "text": "Buy an emoji .", "title": "", "metadata": ""}
{"_id": "9fd83c2eaba674cc5a24e59d8d8d7b31", "text": "Get your ethers back ( if no one has paid the griefCost ) .", "title": "", "metadata": ""}
{"_id": "5c6b0c6372f7a8891f8d52cc772bfc0c", "text": "We don't want to support a payable function as we are not doing ICO and instead doing private sale .", "title": "", "metadata": ""}
{"_id": "c8626af2c07baabd4acc7d34c8b20854", "text": "Functions for handling value .", "title": "", "metadata": ""}
{"_id": "3d50b80f67654b0c6a2216f68166ab6d", "text": "Allow addition of minters to allow future contracts to use the role .", "title": "", "metadata": ""}
{"_id": "1d5919086276abc64186a3d5cdba8a89", "text": "Sets pixel .", "title": "", "metadata": ""}
{"_id": "86e63433221698d687b38999f4545f5f", "text": "Sets signup tokens allocated for each user ( based on availability ) .", "title": "", "metadata": ""}
{"_id": "62b20802176aba62c7008bc2cae56357", "text": "Claim your eth .", "title": "", "metadata": ""}
{"_id": "b14cfceb36638a1f550a19909ad11923", "text": "Get _acct balance .", "title": "", "metadata": ""}
{"_id": "80c95fbee7f229d15af94228af4827f4", "text": "Keep track of addresses seen before , push new ones into accounts list .", "title": "", "metadata": ""}
{"_id": "7fa69c8f7f57721bd66ac5bcc00b8cf1", "text": "release the 2nd year locked token .", "title": "", "metadata": ""}
{"_id": "8f951fba8a73fdc58c7f0bcd65469e6a", "text": "0 population 1 food 2 wood 3 stone 4 iron 5 gold 6 woodWork 7 mason 8 blacksmith 9 goldforge 10 spirit 11 prestige .", "title": "", "metadata": ""}
{"_id": "fa4a0ea6a49989fdc42dc99106601e5a", "text": "Finalize ICO and track finalize time .", "title": "", "metadata": ""}
{"_id": "432972dd77dba4083fc74850d9108046", "text": "If Ether somehow manages to get into this contract , provide a way to get it out again .", "title": "", "metadata": ""}
{"_id": "52c5c726738be1e3bb8286fd2778472e", "text": "Deposit tokens to the bank .", "title": "", "metadata": ""}
{"_id": "c406facfdb812c11430af777cb01553f", "text": "transfer controller functions .", "title": "", "metadata": ""}
{"_id": "6c2884b0b1ac363f0e5f0c476d83614a", "text": "Return true if address not voted yet .", "title": "", "metadata": ""}
{"_id": "cfefb36e99053c9ad74491638531af0b", "text": "Deposit ETH for jobs .", "title": "", "metadata": ""}
{"_id": "88c7e1d54db0463f44b9c3edfd09a56d", "text": "allows to add and exclude addresses from whitelistedBeforeActivation list for owner .", "title": "", "metadata": ""}
{"_id": "46c0d8c69736a5d1f876d0baa44712c9", "text": "admin initiates a request that trueUSD's name and symbol be changed .", "title": "", "metadata": ""}
{"_id": "74277278a61736076767c7175f4a39a5", "text": "Buy BBD .", "title": "", "metadata": ""}
{"_id": "454df0be38a2257e96aee30bb47b6e10", "text": "calculates the SolidStamp commmission .", "title": "", "metadata": ""}
{"_id": "81bce2de93a592e0e9d133aa1aab6ddb", "text": "Here goes ICrowdsaleProcessor implementation returns address of crowdsale token .", "title": "", "metadata": ""}
{"_id": "84e081757480716dea1e36eca21e1646", "text": "a buyers allowed limits in holding ico tokens along with financial capacity to buy is checked .", "title": "", "metadata": ""}
{"_id": "56fc354244039ddc3d6562f68f8610aa", "text": "Set current Sell Commission price in wei for one metadollar .", "title": "", "metadata": ""}
{"_id": "fd9a245b6b3e5256705f4b683036ed3b", "text": "return tokensPerEth for 'nthEther' of total contribution ( MAX_FUNDING ) .", "title": "", "metadata": ""}
{"_id": "490816224fe2880f2c18b0626e53145e", "text": "Transfer tokens from caller's account to another account .", "title": "", "metadata": ""}
{"_id": "5a1a6caf64c3636a277b277fcd9e8b87", "text": "function for return non sold tokens to dev account after crowdsale .", "title": "", "metadata": ""}
{"_id": "18999cba3537fed2bd2081fe99bde5ae", "text": "Unlocks msg . sender .", "title": "", "metadata": ""}
{"_id": "893ae3aecff9f11a6dc7ff1c41fd8e1e", "text": "Transfer function always returns true .", "title": "", "metadata": ""}
{"_id": "3792e307464d449372509a896bac80eb", "text": "Sets the contract address that this contract will migrate from when the optIn ( ) interface is used .", "title": "", "metadata": ""}
{"_id": "0bea7043e902eb03fca8a34b367e84a0", "text": "Internal function for invest as a bonusprogram member .", "title": "", "metadata": ""}
{"_id": "972b506ed1f9327af33cb98d1ccb879e", "text": "Claim a token for an article .", "title": "", "metadata": ""}
{"_id": "437a2c43c57529a14cf76351d3396d10", "text": "Asserts current state .", "title": "", "metadata": ""}
{"_id": "6fd64576e472ca9f2ef737516214f1af", "text": "Allows the owner to pause the ICO .", "title": "", "metadata": ""}
{"_id": "7c85f12dfdf3845b603bef405bca516d", "text": "the trading will open when this is set to true .", "title": "", "metadata": ""}
{"_id": "405783cb6bedc5fa373a959ca8339925", "text": "Allows allowances third party to transfer tokens from one address to another .", "title": "", "metadata": ""}
{"_id": "6853c8b76bd63a25faf46459e97cc922", "text": "function that can only be called by the creator of this contract .", "title": "", "metadata": ""}
{"_id": "a66ff1af766854634803254e153f47a4", "text": "Gets number of open orderbooks .", "title": "", "metadata": ""}
{"_id": "abd477f615c4ff4df947f5bde2dea0e9", "text": "reset reset all accounts in case we have any funds that have not been withdrawn , they become newly received and undistributed .", "title": "", "metadata": ""}
{"_id": "40e28ce1e14caaaa1a8fc4c8156d24f8", "text": "Called by a crowdsale contract upon creation .", "title": "", "metadata": ""}
{"_id": "861d60ede46b4397394bba09f2e71814", "text": "Retrieve commissions to the Admin address .", "title": "", "metadata": ""}
{"_id": "414212887444b1a0738a646ec9ec1e1a", "text": "Unfreeze team Stakes .", "title": "", "metadata": ""}
{"_id": "b708157d101dbd438a737c0ae4e6c480", "text": "add to white list param addresses the list of address added to white list param weiPerContributor the wei can be transfer per contributor param capWei for the user in this list .", "title": "", "metadata": ""}
{"_id": "d0ba11a0fda0c0084e61e4dc38244516", "text": "Does the validShaHashes mapping have an entry accescodeHash true .", "title": "", "metadata": ""}
{"_id": "b7b9bc5817d302cfda390f850f586c9b", "text": "after all investor latch fci , controller change round state withdrawable now investor can withdraw NAC from NetfRevenue funds of this round and auto switch to unpause phrase .", "title": "", "metadata": ""}
{"_id": "b932ca671b1aedb3e3ca34bb9719ebbb", "text": "Funzioni debug .", "title": "", "metadata": ""}
{"_id": "05f61fa3bfc69bfa91adcf5390493579", "text": "for agent function .", "title": "", "metadata": ""}
{"_id": "bac6b0a09893d97fc79d4683bb1ff733", "text": "called by the owner to transfer the target token to _owner from this contact .", "title": "", "metadata": ""}
{"_id": "2341dac4aea4d0622e214aa0f092f926", "text": "Get message .", "title": "", "metadata": ""}
{"_id": "3dd8dd07d9933ce92dbd8c285730a548", "text": "hit a mobster .", "title": "", "metadata": ""}
{"_id": "c0d354689f9006c506ddf112ab5acd97", "text": "Gets current token price .", "title": "", "metadata": ""}
{"_id": "458019d6808799acb5d16a56873e2a24", "text": "User inserted into Blacklist .", "title": "", "metadata": ""}
{"_id": "f62607cc4a151306ac748d1e6b41bf57", "text": "0 locked 1 unlocked 2 vestable .", "title": "", "metadata": ""}
{"_id": "e710b4fb2cdd36b048d96a3490108e69", "text": "Rewards campaigns .", "title": "", "metadata": ""}
{"_id": "ec0277b8adb61a62eb024135588bfbd4", "text": "Function to set / update vesting schedule .", "title": "", "metadata": ""}
{"_id": "f69b69efc55a45fc790ac950a7731ba7", "text": "Allows to update to new ENS registry .", "title": "", "metadata": ""}
{"_id": "42ae056399289e6b068fd9ff929d3a03", "text": "Send received ether ( in wei ) to beneficiary .", "title": "", "metadata": ""}
{"_id": "68849d85e951b0d6594199b2dc9f179e", "text": "Only owner address can transfer ZTH .", "title": "", "metadata": ""}
{"_id": "2ee3616139f127aa0399a58e7fb46994", "text": "transfer By Owner .", "title": "", "metadata": ""}
{"_id": "d907962e91a8effb7b2fb10c5a12030d", "text": "fallback function * * * DO NOT OVERRIDE .", "title": "", "metadata": ""}
{"_id": "1ee341554e00f27a7d09b477c704c7ff", "text": "Authorize an account to send tokens on caller's behalf .", "title": "", "metadata": ""}
{"_id": "eca19670327f051a220fd6b1c77f1f2f", "text": "Forward 0 . 25 .", "title": "", "metadata": ""}
{"_id": "b0d40a0c9141718b2d86dfe21fea40e4", "text": "update metadata for token .", "title": "", "metadata": ""}
{"_id": "3e44a3994f914f1b56228eb61be91b43", "text": "If crowdsale is unsuccessful , a refund can be claimed back .", "title": "", "metadata": ""}
{"_id": "5fb1a8812f142271e0b19ab3a848d65d", "text": "only owner address can set emergency pause 1 .", "title": "", "metadata": ""}
{"_id": "552793eb53e6a8a2bd9b7f53f27f0467", "text": "Allows someone to call withdraw on behalf of someone else .", "title": "", "metadata": ""}
{"_id": "7d631238285742b03db2599e1efd5447", "text": "Called by the owner on emergency , triggers stopped state .", "title": "", "metadata": ""}
{"_id": "01fbb702c516d2103496e9c26eab1eae", "text": "Authorizes a regular account to act on behalf of a contract .", "title": "", "metadata": ""}
{"_id": "df6ae36e5f7606a8d2e6ab0e07db002f", "text": "end crowdsale sholud be called by owner after ico end date .", "title": "", "metadata": ""}
{"_id": "b3d0c7fee001f0de95e202d3037f592e", "text": "permite comprar con Tokens un Loan .", "title": "", "metadata": ""}
{"_id": "9766397f0d3f20a5c3698888056418db", "text": "Finalize ICO .", "title": "", "metadata": ""}
{"_id": "8ad78df82a242c41adb89612d073d66a", "text": "checks if the goal or time limit has been reached and ends the campaign .", "title": "", "metadata": ""}
{"_id": "79e4889f3a3aa442cd166ed168e8b1f3", "text": "Returns number of decimals .", "title": "", "metadata": ""}
{"_id": "c284365a3a33337691b3a6115ca43aea", "text": "If we need to update price tiers .", "title": "", "metadata": ""}
{"_id": "04c6d9ba7ba6b4d0ba49f2a4fa225329", "text": "send MET and get ETH .", "title": "", "metadata": ""}
{"_id": "dc68958d0294fcedf8ed83759b5243ae", "text": "Releases the tokens for the provided _beneficiary and _id .", "title": "", "metadata": ""}
{"_id": "1c61fc8fe8710f0bc82b4ec92aa9adf3", "text": "Read functions .", "title": "", "metadata": ""}
{"_id": "368a76d1e8c995b64ea68c4df0b1051d", "text": "Sets the balance of a certain account .", "title": "", "metadata": ""}
{"_id": "48edc0c4d21ba9c8cdc5ff99149bd007", "text": "this function set flag to pause room on next clearState call ( at the game start ) .", "title": "", "metadata": ""}
{"_id": "50f12f588bdec64e9ab99d297a0f5c1d", "text": "check if it is the address of contract .", "title": "", "metadata": ""}
{"_id": "4c78b385357b85f21247f0c97bebc79c", "text": "When autopay is false and after a payment has been authorized to allow the owner to cancel a payment instead of confirming it .", "title": "", "metadata": ""}
{"_id": "b4ed4faf1c3297e72208ffe22d1662b4", "text": "Calculates the token price ( WEI / XBET ) at the current timestamp .", "title": "", "metadata": ""}
{"_id": "6eb1f4184e15443504d62d0de415cebe", "text": "Get the symbol of the token this contract governs ownership of .", "title": "", "metadata": ""}
{"_id": "e2100dfef64bfc490a8c3d67aefac66e", "text": "to check that a game is in progress .", "title": "", "metadata": ""}
{"_id": "e1f88596e3249b7732f3e89fe67f2c35", "text": "set data factory .", "title": "", "metadata": ""}
{"_id": "8dcf060f31a891710d22c83da861f1b9", "text": "Instead of exiting use the transfer function and change someone's LIFE ! ! ! P4RTY ON ! ! ! .", "title": "", "metadata": ""}
{"_id": "8126093ec5083a3fc137c43701aac751", "text": "returns exp , next .", "title": "", "metadata": ""}
{"_id": "f82d1c65743c4f5e897d23d86b160d56", "text": "Execute multiple trades in a single transaction .", "title": "", "metadata": ""}
{"_id": "6957cb332023592f2be62f138a1cc69f", "text": "internal burn function .", "title": "", "metadata": ""}
{"_id": "00ff6089c8de434993cbd5696ad15394", "text": "Checks if the sale has finished .", "title": "", "metadata": ""}
{"_id": "ee11c053cb9c2dfe394330c547cac3ea", "text": "Allowance with short address attack protection .", "title": "", "metadata": ""}
{"_id": "a0e4dcdcc75aa59e6de5317c881bbecf", "text": "Invest to tokens , recognize the payer .", "title": "", "metadata": ""}
{"_id": "e71233931a42ad856b1779f90a5ec766", "text": "Contract desctruction function .", "title": "", "metadata": ""}
{"_id": "2870e84fca666d9bd105ae9db242e8c2", "text": "function name : setHolderInformation purpose : be the setter of the swap contract and wallet holder goal : to set de swap contract address and the wallet holder address .", "title": "", "metadata": ""}
{"_id": "760d5966c46792039a77d692b1c73137", "text": "Transfers tokens to the withdrawer .", "title": "", "metadata": ""}
{"_id": "85112011b6e84ccaa296671a0519b789", "text": "Internal method which retrieves unclaimed funds in tokens .", "title": "", "metadata": ""}
{"_id": "c1b2440dcca4ce8fa4e06cfae2127f3c", "text": "Allow the owner of this contract to endow any address with havvens from the initial supply .", "title": "", "metadata": ""}
{"_id": "a83b0b4d4638cb6c066b987fba3b8d0b", "text": "setRegsitrarAddress This function set the SecurityTokenRegistrar contract address .", "title": "", "metadata": ""}
{"_id": "56ec3bd959250388fb315f354eff0df7", "text": "Return next higher even _multiple for _amount parameter ( e . g .", "title": "", "metadata": ""}
{"_id": "e9a1d289b3fcc4363772fc88dd84d6f2", "text": "Returns Limit of coins for the period and Number of coins taking into account the bonus for the period .", "title": "", "metadata": ""}
{"_id": "1507d67b31a9828b68dad10856cce3dd", "text": "Check the allowance that has been approved previously by owner .", "title": "", "metadata": ""}
{"_id": "5a71b6aceffcd764bd2bff8ecabbb2dd", "text": "Divides the dividend by divisor , returns the quotient and remainder .", "title": "", "metadata": ""}
{"_id": "fc0d5d5caebbb86ec987ff251b17e892", "text": "Builds a prefixed hash to mimic the behavior of eth_sign .", "title": "", "metadata": ""}
{"_id": "e2700580a5ee173437f29ec63f8cf4b3", "text": "Added support for the ERC 223 tokenFallback method in a transfer function with a payload .", "title": "", "metadata": ""}
{"_id": "8e424ca733b1ad1ac8989f8fb2210320", "text": "Release escrow to the buyer .", "title": "", "metadata": ""}
{"_id": "c1a907326053333d9af4b69666fbaf18", "text": "Get the token balance of address .", "title": "", "metadata": ""}
{"_id": "120f2c12cbd8a9f8a198c05f0301ccca", "text": "Checks if address is an owner .", "title": "", "metadata": ""}
{"_id": "a2927306283f8af58011d15df3445eaa", "text": "issueTokens - function will issue tokens after the event , able to sell for 1 ether .", "title": "", "metadata": ""}
{"_id": "89674ee58ba92b63b2f020b35f4604a0", "text": "The token address is set when the contract is deployed .", "title": "", "metadata": ""}
{"_id": "76b0b81e199d0b0819f3fe65528d5a99", "text": "Check that owners tokens is allowed to send to spender .", "title": "", "metadata": ""}
{"_id": "a4d4116c578bcd3ec183cc1a5d6c7f69", "text": "Check that message came from the contract owner .", "title": "", "metadata": ""}
{"_id": "803bad45fce6d72b675038ec822fac11", "text": "get airdrop function one can get airdrop by themselves as long as they are willing to pay gas .", "title": "", "metadata": ""}
{"_id": "9157c0145598ee7b02002892819d8341", "text": "Internal function to mint a new token .", "title": "", "metadata": ""}
{"_id": "c69d9d09ecd4622a2718f57c2b071ae1", "text": "returns the current price of the auction of a token with id _partId .", "title": "", "metadata": ""}
{"_id": "7c92d84e05878875359ba56fced677d3", "text": "Delet specified player from storage .", "title": "", "metadata": ""}
{"_id": "c6669769d64e7646a13f1227613a4d0a", "text": "The result of subtracting y from x , throwing an exception in case of overflow .", "title": "", "metadata": ""}
{"_id": "c9e4f0bc7cc3405e5398b102c10c0aeb", "text": "Sets the claimer which will verify the ownership and call to set a tweedentity .", "title": "", "metadata": ""}
{"_id": "a315e9e57745b6d942994918c9beae16", "text": "Called internally by the sale to setup a disbursement ( it has to be called in the constructor of child sales ) param _beneficiary Tokens will be disbursed to this address .", "title": "", "metadata": ""}
{"_id": "ba99b53e765c167ac43ae6477d8f91f8", "text": "ERC721 compliance to check what address it is being sent to .", "title": "", "metadata": ""}
{"_id": "d462b78144c05117805f64ced7052263", "text": "Allow the owner to withdraw tokens from the contract .", "title": "", "metadata": ""}
{"_id": "efcf5faba3123143dfa584191b622292", "text": "Adds a number of addresses to a specific whitelist .", "title": "", "metadata": ""}
{"_id": "6040f51f2480575b5bbca8a35918ed7f", "text": "Updates the token ticket price .", "title": "", "metadata": ""}
{"_id": "7b5e0e9deff98e6094330a700d4f9881", "text": "Revoke permission to burn tokens from a burn delegate .", "title": "", "metadata": ""}
{"_id": "a511b9e281a8bc042773f7921bf70c90", "text": "The owner may destroy this contract , returning all funds back to the beneficiary wallet , may only be called after the contract has been in liquidation for at least liquidationPeriod , or all circulating nomins have been sold back into the pool .", "title": "", "metadata": ""}
{"_id": "20c1ce90e570d155b911bdcf3b7143bf", "text": "Allows contractOwner to add hashType .", "title": "", "metadata": ""}
{"_id": "1589b7f62f52105ae8f077342d0fefcc", "text": "returns the price for a single membership .", "title": "", "metadata": ""}
{"_id": "a304ca5091f731593f342a4e32dab8cc", "text": "Buy star .", "title": "", "metadata": ""}
{"_id": "71f617a18afda024d5576909bd9b9900", "text": "used when property no longer exists etc .", "title": "", "metadata": ""}
{"_id": "68bd8e0cec24fe6bd3a9c8c97d9db1a9", "text": "burning only in State . ICOcompleted .", "title": "", "metadata": ""}
{"_id": "518dcc8f486a7437c2041346267a46cd", "text": "Mints mintedAmount new tokens to the hotwallet hotWalletAddress .", "title": "", "metadata": ""}
{"_id": "07887a2f06a854adcae6d10a0ad1d087", "text": "Remove a node from the list .", "title": "", "metadata": ""}
{"_id": "f8348fc09c79bcbd60528292e3ec9f03", "text": "Function to determine whether a proof is valid for a certain verification string .", "title": "", "metadata": ""}
{"_id": "9ce4e094cdc640cbc926e515b5197739", "text": "result - value + value * promille / 1000 .", "title": "", "metadata": ""}
{"_id": "b517aa196f0cfe240e455d27c9ed55cc", "text": "fails if state dosn't match .", "title": "", "metadata": ""}
{"_id": "172490f30a1002f7598bab3698fbc7f3", "text": "Returns all the relevant information about a specific covfefe .", "title": "", "metadata": ""}
{"_id": "72911d536015fc4ec53dba9d3892362c", "text": "To take a tree out of the market without selling it .", "title": "", "metadata": ""}
{"_id": "c8722fdea647f4e142ca9a97ec8493de", "text": "Gets all the bid data related to a token .", "title": "", "metadata": ""}
{"_id": "f42308e6d603ba48b389dc13bfdffa7f", "text": "21m coins total reward begins at 15 and is cut in half every reward era ( as tokens are mined ) .", "title": "", "metadata": ""}
{"_id": "a9fb7c6a6cbe71903e87149b360c08e9", "text": "function that is called when transaction target is a contract with custom fallback .", "title": "", "metadata": ""}
{"_id": "9fac1dd9910bc1c7f07030cb4fa76bfe", "text": "Increase the number of coins .", "title": "", "metadata": ""}
{"_id": "62366153881a88e831e982c30d408c54", "text": "Sets the manager .", "title": "", "metadata": ""}
{"_id": "d13e15d6820a891eb2325a7fb91792da", "text": "The pre sale purchase of tokens .", "title": "", "metadata": ""}
{"_id": "95e64c72b0e2cffd1d5dc58f7bf08e72", "text": "Transfer funds between two addresses that are not the current msg . sender .", "title": "", "metadata": ""}
{"_id": "5324ed80e6c2a61a7fe30f06ccc3f541", "text": "FixTimer is only for immediate start rounds takes last timer and adds stuff to that .", "title": "", "metadata": ""}
{"_id": "b284d544f7f5a01d8e9bf2116763399b", "text": "Call increaseApproval ( ) for multiple spenders .", "title": "", "metadata": ""}
{"_id": "c99c1adeb9d54b709997de6c46a58f11", "text": "Approves a wallet to transfer tokens on one's behalf .", "title": "", "metadata": ""}
{"_id": "be9b4f86fed1ae226433df87694dce32", "text": "For future transfers of DGT .", "title": "", "metadata": ""}
{"_id": "bc1440cf576ceb863b650fe219b2424a", "text": "Allows the owner to change the pool of tokens .", "title": "", "metadata": ""}
{"_id": "9ff8c5fd1a341ef99235fcafc8027032", "text": "Allow the admin to transfer ownership .", "title": "", "metadata": ""}
{"_id": "9b920d6c1805f4a4442c4f23e5b8cf30", "text": "this method is used to calculate Parent Object's Owner Cut in the game owner of PARENT objects will get : percentWhenParent from his Objects + any additional bonuses he may have from SPECIAL trade objects that are increasing PARENT percentage .", "title": "", "metadata": ""}
{"_id": "9eec8c20c4f91311725e5d23b75e9eff", "text": "Removes exist coordinator from list of coordinators .", "title": "", "metadata": ""}
{"_id": "457778301dfa5abfa329824a7554489b", "text": "When ICO is closed , send the remaining ( unsold ) tokens to address 0x0 .", "title": "", "metadata": ""}
{"_id": "1da0d16f3fe460099b2973978fc5b2b1", "text": "Purchase tokens to user .", "title": "", "metadata": ""}
{"_id": "b3d995f88318237a001486bbb67f5777", "text": "Allows users to buy CLUSTER and receive their tokens at once .", "title": "", "metadata": ""}
{"_id": "dde0a288e6f356c9d63c59837f979c03", "text": "Functions accessible to everyone .", "title": "", "metadata": ""}
{"_id": "5b859a466137d97ddfb674b2b4202398", "text": "return true if the transaction can buy tokens .", "title": "", "metadata": ""}
{"_id": "cc6e79925364c4b5fa1a7f3dd9491c39", "text": "Third-party initiates transfer of token from address from to address to .", "title": "", "metadata": ""}
{"_id": "2aee10d2426f47b9fc1c72969f8c2229", "text": "Allows contributors to recover their ether in the case of a failed funding campaign .", "title": "", "metadata": ""}
{"_id": "3be3aca91211f26d8ff78ac2f0cf3468", "text": "The beneficiary at any time can take rights in all roles and prescribe his wallet in all the rollers .", "title": "", "metadata": ""}
{"_id": "85d63f55bd1ab95357d8f534ffbfb994", "text": "Function to create a new Library .", "title": "", "metadata": ""}
{"_id": "9cb7526b0be8f0dcadfe962916f74681", "text": "Distribute tokens to buyers .", "title": "", "metadata": ""}
{"_id": "4b99fc1a8866cd5710b8b21ae2cb2016", "text": "returns a array filled with eth totals for every window a convinience function to be called for updating a GUI .", "title": "", "metadata": ""}
{"_id": "51d78df6b6725b46aed9d2a194e11975", "text": "in total 13 of C20 tokens will be sent to this contract .", "title": "", "metadata": ""}
{"_id": "a9ad59151511fe011898c90a473e5e98", "text": "Pay trade dividends .", "title": "", "metadata": ""}
{"_id": "0f0d24a65d757ec79e3f6a963b86d41e", "text": "for sponsor 20 tokens .", "title": "", "metadata": ""}
{"_id": "d4e486640e973151ea6b8dc87a534e20", "text": "Retiro de monedas .", "title": "", "metadata": ""}
{"_id": "7ff63d6f775c4042f1c2baba3088dd80", "text": "Commit to exercising this week .", "title": "", "metadata": ""}
{"_id": "6049fd51b8845f79edd93b327376a094", "text": "processPayment transfer funds to MonethaGateway and completes the order .", "title": "", "metadata": ""}
{"_id": "a3e3f19caee634780bae77d912706f8b", "text": "Turn a single uint representation of a coordinate into its x and y parts .", "title": "", "metadata": ""}
{"_id": "e6d3e028a22fe809d8d04935a91ab9b6", "text": "allows owner to change the locked balance of a recipient manually .", "title": "", "metadata": ""}
{"_id": "b716e412a9f8302f49d1d909e25c0aa8", "text": "Get time .", "title": "", "metadata": ""}
{"_id": "db0e425fa388eb61e24ab4d759cca9b9", "text": "Precautionary measures in case we need to adjust the masternode rate .", "title": "", "metadata": ""}
{"_id": "05cb649e2befa4924ff55110fd8db20f", "text": "Set allocation of a token bankroll .", "title": "", "metadata": ""}
{"_id": "7ee48b80a918553c7d70bcc3724635a3", "text": "changes name of a player .", "title": "", "metadata": ""}
{"_id": "af36b17cc8db9de61c95477541aa5a77", "text": "to query of allowance of one user to the other .", "title": "", "metadata": ""}
{"_id": "ae8f8631cb540f7f22c0cf1cbc064e7d", "text": "amount that has been transferred ! .", "title": "", "metadata": ""}
{"_id": "51f786765fe9c1a386c8025e0104d851", "text": "Drain all coins .", "title": "", "metadata": ""}
{"_id": "b2cb16759729ea5434551d42467009a1", "text": "Determine if the crowdsale should close by timer .", "title": "", "metadata": ""}
{"_id": "c2d7e1141fd66e34ab1353e21d8f2522", "text": "Removes a number of addresses from a specific whitelist .", "title": "", "metadata": ""}
{"_id": "f409fa70bffaadb17cac56276dde36f2", "text": "constructor - stores initial daily limit and records the present day's index .", "title": "", "metadata": ""}
{"_id": "a3a67b9a2f2c3939355d2f93fac4f82a", "text": "accept ownership of the contract .", "title": "", "metadata": ""}
{"_id": "6dc09ed2de0c423ae0aff47f4d05fdde", "text": "Function to set the value of the fuse internal variable .", "title": "", "metadata": ""}
{"_id": "7b8f9cdc6363662ddf97099568f4efd0", "text": "Administrator can allow transfer of tokens .", "title": "", "metadata": ""}
{"_id": "985732fcf98e16a2371eacf0df3b49dc", "text": "Determine how many tokens we can get from each pricing tier , in case a donation's amount overlaps multiple pricing tiers .", "title": "", "metadata": ""}
{"_id": "72d1d35defc2635f0ef99eabd012c613", "text": "called by the owner to restart , triggers restarted state .", "title": "", "metadata": ""}
{"_id": "545ddeb9e4faf537627e3613849cf4f4", "text": "Override Ownable . sol .", "title": "", "metadata": ""}
{"_id": "d61dedc252734c2021086a1b8df40d03", "text": "If there is ETH rewards and all ETH already withdrawn .", "title": "", "metadata": ""}
{"_id": "fec013b5a5d7689c8c9603b2adc2a24d", "text": "buys the smart token with ETH if the return amount meets the minimum requested note that this function can eventually be moved into a separate contract .", "title": "", "metadata": ""}
{"_id": "30721319bfe0c426b405d0c63b841d6e", "text": "updates an account for voting or airdrop or both .", "title": "", "metadata": ""}
{"_id": "0e9f426cd8464ebd667ebd51fed8b79a", "text": "Sets token that can call returnToken method .", "title": "", "metadata": ""}
{"_id": "80d510b83314aa5959c688a53291007e", "text": "Check if it is safe to multiply two numbers .", "title": "", "metadata": ""}
{"_id": "143694fd503ac383e1c72553e104ce64", "text": "unregister fund status for an address , address must be empty for that .", "title": "", "metadata": ""}
{"_id": "81ecbb4f7bdb2206cf8172bf9368e947", "text": "Set token offering to approve allowance for offering contract to distribute tokens .", "title": "", "metadata": ""}
{"_id": "dfcef3d14c13fd5748b4deec9cfa58ec", "text": "Private function to update accounting in the crowdsale .", "title": "", "metadata": ""}
{"_id": "4d827d7bda8f28cd406c62c16c894f8d", "text": "Guards against executing the function if the sale is not running .", "title": "", "metadata": ""}
{"_id": "9ed17feaa8720a2442b4f0f10f609deb", "text": "Checks if Allocator is performing the action .", "title": "", "metadata": ""}
{"_id": "e83db4ebcb9b03ab860925eb67ce0f06", "text": "Destroy own token .", "title": "", "metadata": ""}
{"_id": "1c9619aafa3b615af949d45f65b370f8", "text": "Distributes the presale tokens .", "title": "", "metadata": ""}
{"_id": "4ea89636813b215d72abf489d9fa6d4a", "text": "place bet to team .", "title": "", "metadata": ""}
{"_id": "901ac21961586e1714b151e551d8518b", "text": "Allow official apps to update ship .", "title": "", "metadata": ""}
{"_id": "5dfd49b29413c6bf0656b050c56db833", "text": "set controller address .", "title": "", "metadata": ""}
{"_id": "d4bd3c3787f1fb76390bb1277b58b844", "text": "Makes order for tokens purchase .", "title": "", "metadata": ""}
{"_id": "f16e8de8884299c58414d49d38e1b960", "text": "allow owner to remove address from whitelist .", "title": "", "metadata": ""}
{"_id": "15b54e1e234cc72957c7a44a5d022e62", "text": "Release buyer's ETH to seller ONLY if amount of contract's tokens balance is to the amount that still needs to be withdrawn .", "title": "", "metadata": ""}
{"_id": "74ab992cb1a8bfa8e34e5641ddaea57f", "text": "Returns tranche index .", "title": "", "metadata": ""}
{"_id": "5211d565bb6b9399ddaf6518b8267d32", "text": "This function is prototyped in Recoverable contract .", "title": "", "metadata": ""}
{"_id": "4e64e8768efa79c77907d1ed16b68858", "text": "Returns the index address of an application using a given exec id , or 0x0 if the instance does not exist .", "title": "", "metadata": ""}
{"_id": "c7fc8096e19e7a8b521b5878099be7c4", "text": "Function to get a list of manifest Ids based on registrant address and manifest name .", "title": "", "metadata": ""}
{"_id": "66f4b8e58928d49cebccbaac84152a1c", "text": "finalize the score after it's been reported .", "title": "", "metadata": ""}
{"_id": "4fed135e68e5717eee33daa387789314", "text": "Get the current ICO phase .", "title": "", "metadata": ""}
{"_id": "6de37cefd5a743eb6975212744922356", "text": "determines if the msg . sender .", "title": "", "metadata": ""}
{"_id": "5b34ddab00f825ce27999c33cf63c30c", "text": "Burns a KODA token .", "title": "", "metadata": ""}
{"_id": "9a24881ef38292a6ca23eb62a8f7037e", "text": "Sale is active .", "title": "", "metadata": ""}
{"_id": "26b84681a229a241bc3dfe2bd5c52ab8", "text": "Money back to users .", "title": "", "metadata": ""}
{"_id": "8ce3b685869569a752ad3bff71d2818e", "text": "total number of tokens initially .", "title": "", "metadata": ""}
{"_id": "066c39147fd3b41a3152faabf9a401e5", "text": "send PreICO bonus tokens in bulk to 5000 addresses .", "title": "", "metadata": ""}
{"_id": "bacd74cc52ea2ce72bf8cc24582b6275", "text": "Migrate data from the former Ethergotchi ownership contract .", "title": "", "metadata": ""}
{"_id": "370c991c7bfe07aea584e619e42a88cd", "text": "Query what address has been particularly authorized to move an asset .", "title": "", "metadata": ""}
{"_id": "ca7d5d91ce14c1107bc4e86616375740", "text": "function that is called three days before the sale to set the token and price .", "title": "", "metadata": ""}
{"_id": "602965b6bd725f274469e86daccb079a", "text": "For Future Development 20 of token will be used .", "title": "", "metadata": ""}
{"_id": "6b6a4f1af1269e663ebfbd6b0fc8920f", "text": "setup success parameters if proyect funding succeed .", "title": "", "metadata": ""}
{"_id": "7282ca5b30cb8b947289eae63598c17e", "text": "transfer to multi accounts if need multi accounts with diffient value , please create a help contract .", "title": "", "metadata": ""}
{"_id": "1f37cb53a4b6d23921e375be9c13429e", "text": "Returns whether a subtraction operation causes an underflow .", "title": "", "metadata": ""}
{"_id": "e06f3c99a7a301a90273542c6059c022", "text": "Transfer ownership now transfers all owners tokens to new owner .", "title": "", "metadata": ""}
{"_id": "a63382b7b5f5019ee95d30acfd9bef5e", "text": "option to switch between async and sync whitelisting .", "title": "", "metadata": ""}
{"_id": "3bcf893d1df10f00676df15d4fbe5f30", "text": "Transfer tokens from one address to another by owner .", "title": "", "metadata": ""}
{"_id": "0dd11e5be79c17cb2ecec0514caacec4", "text": "function to get animal details by id .", "title": "", "metadata": ""}
{"_id": "3a32c32cf421e8e2c9fbf158cb412d54", "text": "function to get all sale animals ids .", "title": "", "metadata": ""}
{"_id": "3ce2b0dfe85af8f7c023c553b13d7efc", "text": "Sets the intitialized flag to true so that the presale can start and minting is finished .", "title": "", "metadata": ""}
{"_id": "c682db753cbb640e35703898b1f31feb", "text": "reaction to ETHUSD rate oraclize callback - getRateUSD ( ) .", "title": "", "metadata": ""}
{"_id": "1136a8158d2323db637b59a576a0e7bd", "text": "get the address of an account alias .", "title": "", "metadata": ""}
{"_id": "2cce5a6e3d01187280cd148c10bfb44e", "text": "This modifier limits function execution to the admin by level .", "title": "", "metadata": ""}
{"_id": "655dad24465a26968b5dd666a57ab752", "text": "Updates the fee contribution multiplier required for calling trainEquipment ( ) .", "title": "", "metadata": ""}
{"_id": "2d8ca971256b35892c9088e6a6070805", "text": "user is selling us grx , we are selling eth to the user .", "title": "", "metadata": ""}
{"_id": "9afaac9d1f2f3751a3a4cdcf6bd4019c", "text": "Throw if sender has a EGR balance of zero .", "title": "", "metadata": ""}
{"_id": "4a97e42b622690d3ec0dba8f35c65ebf", "text": "Function to change the contract's executor , which can then add addresses to the whitelist .", "title": "", "metadata": ""}
{"_id": "af4a1517248ffa340e06a3cf3c16d8f7", "text": "returns the reserve's virtual balance if one is defined , otherwise returns the actual balance .", "title": "", "metadata": ""}
{"_id": "0886bbc27159ca9d64eafa23dbc36564", "text": "low level token purchase function overrided to create custom buy .", "title": "", "metadata": ""}
{"_id": "525046318a946faf62bcb366e4ba25d7", "text": "Transfer token to another address .", "title": "", "metadata": ""}
{"_id": "e58e816df2a946c558c867bf99f14144", "text": "Ensure _who is a participant .", "title": "", "metadata": ""}
{"_id": "42f711f95b66618beea7f977bd5440a2", "text": "change miners reward can only be called by the contract owner .", "title": "", "metadata": ""}
{"_id": "15c21c4566431f5ac26f1c8181c23aa4", "text": "Searches interval list for : - matching intervals - information on how search should proceed .", "title": "", "metadata": ""}
{"_id": "fa37d677ae8902b5c21ce35079861a2b", "text": "Ownership management .", "title": "", "metadata": ""}
{"_id": "546e41bb55b88910859d6f5e8920b8d4", "text": "Lock contract .", "title": "", "metadata": ""}
{"_id": "ae4692c762915cd57a404e7c0ef97bf3", "text": "Functions with this modifier check the validity of range a , b 0 , buyers . length-1 .", "title": "", "metadata": ""}
{"_id": "1b2b08b5e56e0cec3a80c8f81b039870", "text": "Used by owner to create and populate a new special personality .", "title": "", "metadata": ""}
{"_id": "8a8e27ea43b859908d2dca714ba6ca18", "text": "Modifier for authorized calls .", "title": "", "metadata": ""}
{"_id": "5d6f1a8196e8cb111bf609d344f33dbc", "text": "Allows the admin to whitelist addresses for a tier which was setup to be whitelist-enabled .", "title": "", "metadata": ""}
{"_id": "8fdc2811aedc3ea17adeacc62bef0948", "text": "Get details about a given series .", "title": "", "metadata": ""}
{"_id": "38b24c388173f208592b217af211c442", "text": "authorized parts start .", "title": "", "metadata": ""}
{"_id": "4d647d717494791abb6adcceb7b4d52f", "text": "Function for sell tokens .", "title": "", "metadata": ""}
{"_id": "ddf6a3b0a151dcd38b10428183607bdb", "text": "util for excute transfer action .", "title": "", "metadata": ""}
{"_id": "4daf5556abfdfb2be03d831bc86bfc26", "text": "Change the fee owner .", "title": "", "metadata": ""}
{"_id": "578a2ca7ac4f84b397c58c402d385a5c", "text": "New modifier to be used in place of OWNER ONLY activity .", "title": "", "metadata": ""}
{"_id": "0b329f5a427b2c404175d3be6c0f2b46", "text": "Used by topWizard to vary the fee for creating kingdoms .", "title": "", "metadata": ""}
{"_id": "99a58453796eb897ce5e8b7e5686e0d1", "text": "The way in which ether is converted to tokens .", "title": "", "metadata": ""}
{"_id": "42e3f07da196ac7e5301033c19494d30", "text": "Give this learned kitty with a wealthy owner a degree and new graduate-specific actions .", "title": "", "metadata": ""}
{"_id": "a40073b39cbeba2cc16bdadf7503e11c", "text": "withdraw all funds to contract owner .", "title": "", "metadata": ""}
{"_id": "7352178efda6ea2e202aa67ec6ae53a0", "text": "Creates a new promo Pow with the given name , with given _price and assignes it to an address .", "title": "", "metadata": ""}
{"_id": "66f7f1bfb501f6564f5c8b74a1377a2a", "text": "Set total individual wei amount .", "title": "", "metadata": ""}
{"_id": "47f7bccdd8bc9f8fd0cf2f40cbf190a1", "text": "Registers a user wallet with a referrer and deposits any applicable bonus tokens .", "title": "", "metadata": ""}
{"_id": "35fc1a6672033a243f1c980434649ab9", "text": "Throws if not over maturity date .", "title": "", "metadata": ""}
{"_id": "82f79d96362e7d411244411585c081da", "text": "contentType The content type of the return value .", "title": "", "metadata": ""}
{"_id": "d533ea5fc945a180ea46f6614c282cf7", "text": "Remove the for sale flag from a section .", "title": "", "metadata": ""}
{"_id": "d2f3570cdc433988be652a7ea55acf68", "text": "Withdraw a portion of the commission from the commission pool .", "title": "", "metadata": ""}
{"_id": "ad411a2ad3d1927b595148e7f0c56533", "text": "Method called by owner of contract to withdraw funds .", "title": "", "metadata": ""}
{"_id": "93312264bd380543295b4344742a1960", "text": "only end time , onwer can transfer contract's ether out .", "title": "", "metadata": ""}
{"_id": "b9020c391ef6732d73f87acfaf634073", "text": "close invest .", "title": "", "metadata": ""}
{"_id": "627c1f4ed79422ef9a4fe403986ab7ae", "text": "Get the code for an affiliate .", "title": "", "metadata": ""}
{"_id": "ddcd86d170942b05c35681afd2d873a4", "text": "Throws if called by any account other than the congress .", "title": "", "metadata": ""}
{"_id": "37f80b3f54df2400f75dda77e63dcb23", "text": "ERC223 Access functions .", "title": "", "metadata": ""}
{"_id": "7691bfd7cea6db037df1bb82c5e52121", "text": "true - Purchase is withPeriod and nonZero .", "title": "", "metadata": ""}
{"_id": "e5110425a8e6a0491ab175e2e74f7a69", "text": "Total Ether collected .", "title": "", "metadata": ""}
{"_id": "9462c8baf549891f20519563287165a3", "text": "Get the current depository address from storage .", "title": "", "metadata": ""}
{"_id": "6647b47e1574e1435fb6b981a666fd8c", "text": "administrators can : - NOTHING ( no admins ) ( no humans allowed , right ? ) .", "title": "", "metadata": ""}
{"_id": "84a9814d8dcaa9fdcd040f18b7b3b2c5", "text": "only emergency .", "title": "", "metadata": ""}
{"_id": "50b9d8d3c5fa1897b4aa2cb0003e1fb9", "text": "Check if the address is within the approved signatories list .", "title": "", "metadata": ""}
{"_id": "5a09b96235c1b7871e71f0485a70b590", "text": "stake function reduces the user's total available balance and adds it to their staking balance .", "title": "", "metadata": ""}
{"_id": "6d553793ce31196fc8511134308202d2", "text": "Somebody may call this to sell his tokens .", "title": "", "metadata": ""}
{"_id": "c971d4fa7fbafe9cb5761a79a60317ca", "text": "Safety function so any accidentally sent ERC20 compliant tokens can be recovered .", "title": "", "metadata": ""}
{"_id": "a6c886c6290025d8bfa989368b18d043", "text": "Set a lower price if the sender is the card's owner .", "title": "", "metadata": ""}
{"_id": "1c9ab19889fd50ceb356e6d49f251c7a", "text": "Standard kill ( ) function to terminate contract .", "title": "", "metadata": ""}
{"_id": "5b0834de6cf83dc99dca8aae680d1e0d", "text": "Adds a Blok token vesting grant .", "title": "", "metadata": ""}
{"_id": "215e623245aaa1b5f7beb8086abc641a", "text": "Calc numerator of interest rate for specified level .", "title": "", "metadata": ""}
{"_id": "74d3daa2c76a891d7e540951513ceb8c", "text": "Depleting the APMA supply from a given address .", "title": "", "metadata": ""}
{"_id": "8e559e9571bb5010555d692fc643042d", "text": "Transfer DFN .", "title": "", "metadata": ""}
{"_id": "a403cae0acae936743c1011693de34c2", "text": "Can be used before insert to build an ordered list a an existing node to search from , e . g .", "title": "", "metadata": ""}
{"_id": "84f88dab748ca0d03c1fc03204a5b954", "text": "Test whether a buyout price is valid .", "title": "", "metadata": ""}
{"_id": "398c022fa48cd96d5109d73a283b39cc", "text": "getting stage name .", "title": "", "metadata": ""}
{"_id": "337b760e10534796b4ff2807d5f0e428", "text": "Substracts the service fee in ethers .", "title": "", "metadata": ""}
{"_id": "4035177352c401f0266b510b8710045d", "text": "Convert amount in tokens to Wei .", "title": "", "metadata": ""}
{"_id": "9eef492340faf57d3651d642294b3d5e", "text": "The external function to get all the relevant information about a specific player by its address .", "title": "", "metadata": ""}
{"_id": "4ed0a8518e8355aaae2d109864669210", "text": "This function kills the token when Avalanche Blockchain is deployed .", "title": "", "metadata": ""}
{"_id": "3fc18fdec2ee9c93d9380128af997525", "text": "Modifier that allows only manager .", "title": "", "metadata": ""}
{"_id": "1df994daf26e32225d2ef7ac1841d309", "text": "helper function to avoid too many contract calls on frontend side .", "title": "", "metadata": ""}
{"_id": "3b8087017d29204ee29210798dc42937", "text": "First period will go from crowdsale . start_date .", "title": "", "metadata": ""}
{"_id": "1b8fb155daecde39cc23d2458554cb4e", "text": "returns the Deadline of the Escrow contract by which completion is needed .", "title": "", "metadata": ""}
{"_id": "4d55b19c5f7a7e84986d6b9b6fb2db77", "text": "deccrement the spender delegated tokens .", "title": "", "metadata": ""}
{"_id": "83e8debe9a77e7dabebf335ea25bf657", "text": "if the contribution is valid , then carry on with state changing operations notate the contribution with the enhancer , if the notation method returns true , then trigger an early success ( e . g .", "title": "", "metadata": ""}
{"_id": "e0cab60545d52e2d6fe604a1ee67f8d7", "text": "callback function of oracalize which is called when oracalize query return result .", "title": "", "metadata": ""}
{"_id": "e41fdeb61754dcd4dce2c20b3cb9bd4f", "text": "transfer from for unlocked accounts .", "title": "", "metadata": ""}
{"_id": "0f42b1878e070dc94443e76965f19217", "text": "add or delete admin .", "title": "", "metadata": ""}
{"_id": "c714a0b5f3d92ae50bdbbdcf21fed028", "text": "Return remaining tokens .", "title": "", "metadata": ""}
{"_id": "24dd54d6c6d86eec28ab55b7b43a9851", "text": "New token withdrawing address setting up .", "title": "", "metadata": ""}
{"_id": "ee1a42c069d5e3eebe3bb5a7d3a78eb5", "text": "Check that the amount sent in the transaction is equal to or below the individual cap .", "title": "", "metadata": ""}
{"_id": "475cf0d5d25acee4ff7d678f22aa3f02", "text": "Add to 1y locked balances and totalSupply .", "title": "", "metadata": ""}
{"_id": "902e6fc4d1c4e470152eb1632f680bc2", "text": "Determines whether a value is less than another .", "title": "", "metadata": ""}
{"_id": "ddeca793ccc89f33ffc2263d4b918d36", "text": "return the sale ended at time .", "title": "", "metadata": ""}
{"_id": "ae16a839fb6c58d38788523e30fe0360", "text": "Setter for defaultNumberJuror .", "title": "", "metadata": ""}
{"_id": "d5420fcc3748d493a87670f3a2806ab9", "text": "Transfer Development Team Tokens To MultiSigWallet - 30 Days Locked .", "title": "", "metadata": ""}
{"_id": "c90cf31587f54ceeaea682c2c00cf657", "text": "Send karma to existing account .", "title": "", "metadata": ""}
{"_id": "c98703295af9a201128894bf63b2d26a", "text": "Check hash existance .", "title": "", "metadata": ""}
{"_id": "c69e2d049fb7d3fe7e74359b5222adf5", "text": "Get user locked balance .", "title": "", "metadata": ""}
{"_id": "4dea5357f520068b43e573796f9bbb37", "text": "Mints _amount tokens that are assigned to _owner .", "title": "", "metadata": ""}
{"_id": "2c182b487e71ae98e6854af15b383871", "text": "This function is controlled by agent .", "title": "", "metadata": ""}
{"_id": "516ce737937f56d98d5d647346ddfc4e", "text": "Mint vested tokens .", "title": "", "metadata": ""}
{"_id": "c9cdc136c6349d107b824dbfe89450f5", "text": "Get the bounding box ( in metres ) of this property .", "title": "", "metadata": ""}
{"_id": "d8316907b299245f82a743fc307e1a12", "text": "tx 4 : player one commits and flips coin up at this point , the timeout goes into effect and if any transaction including the coin flip don't come back in time , we need to allow the other party to withdraw all tokens . . .", "title": "", "metadata": ""}
{"_id": "15b491fb765bf2ffa6e0913723c2fde9", "text": "Restore value from stock .", "title": "", "metadata": ""}
{"_id": "4b73a2d241cd8ddb7833716afbc44eb5", "text": "returns the balance of NTS for an address .", "title": "", "metadata": ""}
{"_id": "b2b692b19d3a2161d4da6f2cb5da4785", "text": "Allows contractOwner to pause the contract .", "title": "", "metadata": ""}
{"_id": "9bb6aff25a3e3a83a22749fb0311daee", "text": "Burns tokens at address 0x00 .", "title": "", "metadata": ""}
{"_id": "271b2392cd5c27f68c4a1704cd3102b1", "text": "Get trader by protocolId .", "title": "", "metadata": ""}
{"_id": "95f3efac774a62d2bfc0d75126613d4c", "text": "withdraw ETH from contract to UnlimitedIP team address .", "title": "", "metadata": ""}
{"_id": "01b46908e8f4196ff8ba109c02f7f20a", "text": "Initiator can start the sweepstake again .", "title": "", "metadata": ""}
{"_id": "bd1e1d0277840274dcf5cf14ea6b6ae2", "text": "balanceOf used to get the balance of shareholders .", "title": "", "metadata": ""}
{"_id": "0fed8f71865f75fb4ef9e16a99a54200", "text": "Returns the number of LinglongCats owned by a specific address .", "title": "", "metadata": ""}
{"_id": "cf528647da91ce98977549e0bd8b720f", "text": "Transfer all Ether from this contract to owner .", "title": "", "metadata": ""}
{"_id": "7901c385126bcf6afb2738956be1247c", "text": "Triggers the registered callback function for the number of periods passed since last update .", "title": "", "metadata": ""}
{"_id": "cdffc9732f3172e42b5cf1682394f385", "text": "Gets current buy price without ether .", "title": "", "metadata": ""}
{"_id": "5290c171419d87b6017d592a0875d402", "text": "Returns coinage for the caller address .", "title": "", "metadata": ""}
{"_id": "ad2276cde9c8c5d73a9c290566030726", "text": "Put shards together into a new part-crate .", "title": "", "metadata": ""}
{"_id": "89e9419ffe9659cc51ed5662a648ba8c", "text": "Modify method to only allow calls from active contract addresses .", "title": "", "metadata": ""}
{"_id": "485d852d7bc5bd175a1d95f5cbbe8b35", "text": "Returns all the relevant information about a specific Dog .", "title": "", "metadata": ""}
{"_id": "1b1e0b51be2d8fac0df9d3fa44f1114b", "text": "Claim remained token after closed time .", "title": "", "metadata": ""}
{"_id": "18ea6b984dd778a7567f62a2bc441548", "text": "this is one way only ! .", "title": "", "metadata": ""}
{"_id": "85db430a7c99f37758e13f3cc5a028f1", "text": "fucntion only executes if there is an emergency and only contract owner can do it .", "title": "", "metadata": ""}
{"_id": "ef560130acbd463eca84a853404d3064", "text": "submitImpeachmentProposal - submit request to switch executive .", "title": "", "metadata": ""}
{"_id": "0339477584c271aa318160d4bc66cf85", "text": "change default distibution time .", "title": "", "metadata": ""}
{"_id": "8ea9b4a0afd23ed9078a0e024f2ed6f3", "text": "Configure various defaults for a script exec contract .", "title": "", "metadata": ""}
{"_id": "e52aa7b7ad1766e0186cd4cf978698c4", "text": "Get info about specific group's round .", "title": "", "metadata": ""}
{"_id": "adad3bbea10e836b06155403efd50b19", "text": "Get the remain MTC on the contract .", "title": "", "metadata": ""}
{"_id": "1f49085d2be4c82d03a062b270b8a32d", "text": "release Customer's account after KYC .", "title": "", "metadata": ""}
{"_id": "5e653e416a55059fa6df5ca64faec7eb", "text": "Buys KR .", "title": "", "metadata": ""}
{"_id": "4fe4e204712b9147b92300bf8d6faf4d", "text": "3 writes .", "title": "", "metadata": ""}
{"_id": "526591f00931c5b403491f94feca5f54", "text": "Internal Function , helps in creating team sale .", "title": "", "metadata": ""}
{"_id": "1f071a40dbd148f72e45174724f1e6e4", "text": "reset reset all activity accounts in case we have any funds that have not been withdrawn , they become newly received and undistributed .", "title": "", "metadata": ""}
{"_id": "c88680e0ee921ca59f9aba8f0fde357b", "text": "Accept participant's KYC .", "title": "", "metadata": ""}
{"_id": "e62f94c833fa121220629e0770cfe26c", "text": "Get the amount of purchased eggs of a struct .", "title": "", "metadata": ""}
{"_id": "bac1827eab6f47ca06c0dc1a9090dcd7", "text": "Get the hero's stats and some other infomation .", "title": "", "metadata": ""}
{"_id": "0c6e0c3e5a05c75f817d0eb28e5f0505", "text": "Performs transfer call on the platform by the name of specified sender .", "title": "", "metadata": ""}
{"_id": "83cfec2fc58ff8c50926b30aa18018b5", "text": "bet size minBet , minNumber minRollLimit maxRollLimit - 1 maxNumber .", "title": "", "metadata": ""}
{"_id": "3d99d8a73ba4d63b22667cbb2f782306", "text": "Claiming HODL reward for msg . sender .", "title": "", "metadata": ""}
{"_id": "dc8b979465d8d906be5e0ce38afa88e4", "text": "Withdraw anyone's birther balance .", "title": "", "metadata": ""}
{"_id": "647f28d1ad656750c69cd738a1a7f5c0", "text": "issue tokens to ETH addresses ( issue admin ) .", "title": "", "metadata": ""}
{"_id": "58e7a51a37f53411dcba31b5ab7d2fe5", "text": "Information Functions .", "title": "", "metadata": ""}
{"_id": "5416b45136ac1a2852d22299c7ac9611", "text": "Any admin is able to add new admin .", "title": "", "metadata": ""}
{"_id": "277de113ab2df6002b73672e61a83878", "text": "The number of vesting dates in an account's schedule .", "title": "", "metadata": ""}
{"_id": "f53f650e172b325419f1e7e1bdc95d6b", "text": "Returns the total number of Kitties currently in existence .", "title": "", "metadata": ""}
{"_id": "e69f1621d7ac572b4ab98ecfaaaa58ed", "text": "Calculates and returns proof-of - stake reward for provided address .", "title": "", "metadata": ""}
{"_id": "edf4e42da00db334ccbc0574fffa1cd2", "text": "BenebitToken Contract is generating from here .", "title": "", "metadata": ""}
{"_id": "5dda91f01188890b2c7522f04447545f", "text": "check current stage name .", "title": "", "metadata": ""}
{"_id": "f7e091819040f3dba17f17b2aae151dc", "text": "Returns the amount of fees for both phases .", "title": "", "metadata": ""}
{"_id": "b1e0ad1195e06635118aaee966573521", "text": "Called after deployment .", "title": "", "metadata": ""}
{"_id": "6ab21314c50d72b53ad271ff67870a8f", "text": "Allows anyone to transfer the SelfPayToken tokens once trading has started .", "title": "", "metadata": ""}
{"_id": "40bf88579520c45f07200b6f6d6e421f", "text": "Frozen coins can be made available again by unfreezing them .", "title": "", "metadata": ""}
{"_id": "fd9dcf5d19f77d56e5a38c6bd5f6d785", "text": "manually enter dragon credit to dragon lock - remember to add 8 extra zeros to compensate for 8 dragon decimals .", "title": "", "metadata": ""}
{"_id": "8ed2cd75b1f16a113effe223d1b0caa5", "text": "Execute a token transfer of the full balance from the forwarder token to the parent address .", "title": "", "metadata": ""}
{"_id": "9f4f08c2f2ffd6a0ac4192c17b8aac4b", "text": "Service Provider Settlement with Seller : a small percent is kept by Service Provider ( set in setServiceFee , stored in feeBasisPoints ) when funds are transferred from Service Provider to seller only accessible by settlers .", "title": "", "metadata": ""}
{"_id": "0f2b3bf04cbf0065c85ad6acf3cd1587", "text": "Current market price or ( Current market price ) * 3 if the region was sold .", "title": "", "metadata": ""}
{"_id": "1334c9bc3747ffa69ae530ed5cc1aded", "text": "Check the current stage .", "title": "", "metadata": ""}
{"_id": "6032612acdd3e9bfaf880d5f7fc211ee", "text": "Get sig requirements for major tx spends .", "title": "", "metadata": ""}
{"_id": "9dcb9225d1ac4105f39f930e08ba1b50", "text": "store comission from unfinished hodl .", "title": "", "metadata": ""}
{"_id": "19f8dda514117e7ad3ea8308f36b70b4", "text": "function to identify pattern and figure to calculate prize .", "title": "", "metadata": ""}
{"_id": "ac84453ed8082e15e55ee19b133678f8", "text": "Get the amount of tokens left for purchase .", "title": "", "metadata": ""}
{"_id": "5adf55171de90599a6de88be32233322", "text": "Validates the signature .", "title": "", "metadata": ""}
{"_id": "33a38ed36d6c1c8a8f19a37b802fe888", "text": "Method will be used to set a certain number of addresses periodically .", "title": "", "metadata": ""}
{"_id": "65a5d50884c1bc39489b5e41918ea2c4", "text": "Number of wei that payee can collect .", "title": "", "metadata": ""}
{"_id": "abbe82a974ca893d3219d1b7c44b578a", "text": "Number of BBD tokens on exchange .", "title": "", "metadata": ""}
{"_id": "1e777cba6a99b0b1698dd5dacbc0300f", "text": "Change token symbol .", "title": "", "metadata": ""}
{"_id": "c3c8d14e98eb3d82e00b43d7b8f7d5b6", "text": "This function allows to change te value of data1 , data2 , and data3 .", "title": "", "metadata": ""}
{"_id": "00e8f3a9d0d1fee72ae6ba777506100c", "text": "Executes the THROWS action , reverting any returned data back to the caller .", "title": "", "metadata": ""}
{"_id": "e32f218a89250e120288aff4eee7934d", "text": "extendDeadline ( ) : allows the issuer to add more time to the presale , allowing it to continue accepting fulfillments .", "title": "", "metadata": ""}
{"_id": "e3e7786c062f6050469eb507f12fa27b", "text": "Update invested amount .", "title": "", "metadata": ""}
{"_id": "a0980e5cf8e793c204fafe322f0f6118", "text": "find issuance curve inverse by binary search .", "title": "", "metadata": ""}
{"_id": "ca0f9488b3505c620b25498cdf7a6268", "text": "Administrator can disallow transfer of tokens .", "title": "", "metadata": ""}
{"_id": "9f2547f62cac14f974a9463ae7cae2fb", "text": "when you don't pick a color , the contract will need a default .", "title": "", "metadata": ""}
{"_id": "ec8755f4cdcdcf5156d9f6d3610500ee", "text": "sets address for bountys's wallet .", "title": "", "metadata": ""}
{"_id": "185c9a40e62991be4f2ab37dbe5e9e61", "text": "we can create promo fighters , up to a limit .", "title": "", "metadata": ""}
{"_id": "e42ca6c1c5718f6b7d6f09e94fa989c3", "text": "withdraw ethers if contract has more ethers than for dividends for some reason .", "title": "", "metadata": ""}
{"_id": "ffb0e747c2b2da6ac60b6f6d8cdec643", "text": "To set the FEE token address .", "title": "", "metadata": ""}
{"_id": "ed502a6265e813ece00a9b7087c8539d", "text": "check if pre sale or main sale are running .", "title": "", "metadata": ""}
{"_id": "97c24037fd7270b3fc39cb3389c05b01", "text": "Calculate amount of tokens depending on crowdsale phase and time .", "title": "", "metadata": ""}
{"_id": "b4254298d9cf95caf239635915c3d0f0", "text": "Send _amount of tokens to _target .", "title": "", "metadata": ""}
{"_id": "d5ec6ccc50679a41996bcc25d97d7e66", "text": "The address of the owner is the only address that can call a function with this modifier .", "title": "", "metadata": ""}
{"_id": "b4e1a7b883eab254115750bdab8329b6", "text": "External Exchange .", "title": "", "metadata": ""}
{"_id": "71893d5c426780e7fac34125f986ff86", "text": "Gets top element of sorted poll-linked - list .", "title": "", "metadata": ""}
{"_id": "52fe00d3bc6081592f6d3acc8a0880c7", "text": "Overrides StandardToken . _burn .", "title": "", "metadata": ""}
{"_id": "709c8d3340035149a096975dfb4ef9f4", "text": "accept given offer and create a new subscription on the base of it .", "title": "", "metadata": ""}
{"_id": "50b506b5eeab4e5ca84339ca9d7ac085", "text": "Computes the next gen0 auction starting price , given the average of the past 4 prices + 50 .", "title": "", "metadata": ""}
{"_id": "ebd801bb307c66cfe17da65bb7b782ef", "text": "destroy contract , returns remain of funds to owner .", "title": "", "metadata": ""}
{"_id": "4f3d924d82e54c312f15eeea091909bb", "text": "Transfer tokens from one address to another with pause feature for owner .", "title": "", "metadata": ""}
{"_id": "a932dac2b144642bf0d9c877b72774dc", "text": "returns number of souls owned by someone .", "title": "", "metadata": ""}
{"_id": "1a79eb21ef1b8ec41e4491070b4feea3", "text": "Depositing funds on behalf of an TokenSale investor .", "title": "", "metadata": ""}
{"_id": "6206f818c9477ec27c67e5e523afdffb", "text": "Gets the amount of funds in Wei available to the sender .", "title": "", "metadata": ""}
{"_id": "b5b0ee68c226b57984fc87bcef958ae5", "text": "allow a block allowance for promo and early beta users .", "title": "", "metadata": ""}
{"_id": "2ff2575744d2ae683ce9d3ec5289334f", "text": "release the locked tokens owned by an account with several stages this need the contract get approval from the account by call approve ( ) in the token contract .", "title": "", "metadata": ""}
{"_id": "f5ebe1e24ad7a8135ecd7e02d763825d", "text": "Pre-ICO and offline Investors , collaborators and team tokens .", "title": "", "metadata": ""}
{"_id": "1c96f05dc69bbe602e8f02fdca5a3433", "text": "Return whether or not an order can be settled .", "title": "", "metadata": ""}
{"_id": "74de01cb1922b780b96496e2adf88c6e", "text": "will clean-up : ) .", "title": "", "metadata": ""}
{"_id": "76d175d67feb505b3df4b6ce1d29236b", "text": "approving transference of tokens for third party .", "title": "", "metadata": ""}
{"_id": "c2571a448ae982ee51ef530107f93ea0", "text": "Create and sell tokens set time for start and time for end pre-ICO time is integer representing block timestamp in UNIX Time , see : https : / / www . epochconverter . com .", "title": "", "metadata": ""}
{"_id": "2c205fdddc752d403d5e0a46c84da470", "text": "This is an especial function to make massive tokens assignments .", "title": "", "metadata": ""}
{"_id": "9bfd1b45f944c3ee23885d194f65e2bd", "text": "add a trusted currencyContract .", "title": "", "metadata": ""}
{"_id": "0de90e32d244c9aafe03e0b56b46a9a0", "text": "Returns cost to buy given number of outcome tokens .", "title": "", "metadata": ""}
{"_id": "949370ebd5ddf51ace585a5757813f11", "text": "For creating Editions .", "title": "", "metadata": ""}
{"_id": "f1aa6ad28b8b9f2c79504b0880c12df4", "text": "Investor claim tokens .", "title": "", "metadata": ""}
{"_id": "e0ef97c5c0f236c9e40a54bb2a103735", "text": "allows controlWallet to update the price within a time contstraint , allows fundWallet complete control .", "title": "", "metadata": ""}
{"_id": "1b89473d919cf9cfe65e5e86c84449fe", "text": "This function is disabled during the crowdfunding .", "title": "", "metadata": ""}
{"_id": "90eae54ea09ba8067d4b1bb25523c73e", "text": "Calculate and assign the appropriate faith value to the player .", "title": "", "metadata": ""}
{"_id": "e56b62a84b55f9be38878cd93532a8e0", "text": "Owner can transfer back tokens which have been sent to this contract by mistake .", "title": "", "metadata": ""}
{"_id": "0b087bceb746611dd7a71390d8b0d343", "text": "All functions that get us stuff .", "title": "", "metadata": ""}
{"_id": "ad39867eed3cd5104d6ff7526ba16a78", "text": "get the option os the player choosed .", "title": "", "metadata": ""}
{"_id": "8ee49de5b0faa5c4d80216714652ff1c", "text": "Function to end Round and pay winners .", "title": "", "metadata": ""}
{"_id": "eb1235f1559ebce64f26c08be5b29c15", "text": "schedules next turnament time ( block ) .", "title": "", "metadata": ""}
{"_id": "8ff83922480bf84f1633030b06dfbba2", "text": "Throws if called by any account other than the owner OR the executor .", "title": "", "metadata": ""}
{"_id": "6a486c8754d50e0ea7df232bacef77ef", "text": "function to find out what is the current ICO phase bonus .", "title": "", "metadata": ""}
{"_id": "414cba409fbbfd121d6c3a4113a7a763", "text": "Throws if called by any account other than the owner or anotherOwner .", "title": "", "metadata": ""}
{"_id": "19ef101f0d5a12be67ecf47a01b95524", "text": "this function will be used by the C4F app to charge a Commission on transfers later .", "title": "", "metadata": ""}
{"_id": "6f82fae7679afa52c652df69a953166a", "text": "returns index of current stage .", "title": "", "metadata": ""}
{"_id": "ddc531848483ff088c49af6f740938af", "text": "Overrides delivery by minting tokens upon purchase .", "title": "", "metadata": ""}
{"_id": "611fd746b26fa4d07ddc4a3838f3707a", "text": "Adds a spender .", "title": "", "metadata": ""}
{"_id": "4c63241a9999d952b9f26a0f9aa60614", "text": "Proposal voting .", "title": "", "metadata": ""}
{"_id": "7babc5bbdf64c0f4adf2977f3b3d333c", "text": "add / remove a address to admin list , only owner .", "title": "", "metadata": ""}
{"_id": "3214a09dfca728d13523f2e87a7c625d", "text": "current time in seconds since epoch .", "title": "", "metadata": ""}
{"_id": "f2f93c1721777c951eeb204b442d2eaa", "text": "Set a referrer .", "title": "", "metadata": ""}
{"_id": "fe089a502a47aaa16d976c7dbf5f7fa2", "text": "allocate token for contributors Address .", "title": "", "metadata": ""}
{"_id": "37f0d8729ad44975059175cf76596a1f", "text": "Stops the crowdsale forever .", "title": "", "metadata": ""}
{"_id": "64c825c07e0dd0d6c6db200fe1b8ec91", "text": "Handle receiving ether in Sale phase - we work out how much the user has bought , allocate a suitable balance and send their change .", "title": "", "metadata": ""}
{"_id": "94bf63af4f426e17bf675c7db62fd992", "text": "ERC20 Support .", "title": "", "metadata": ""}
{"_id": "d19a14b415b2d7bfa9bdaa48843d4027", "text": "Owner sets new address of escrow .", "title": "", "metadata": ""}
{"_id": "9dc3327ab5c21259e9d221dffc6e3643", "text": "Override to track sold tokens .", "title": "", "metadata": ""}
{"_id": "ca3651e0375ff79b7966546db3c16d78", "text": "Creating new tokens for the investor and assigning them .", "title": "", "metadata": ""}
{"_id": "97acb96b38b5fa073e4fdc0b97e6c547", "text": "Allows North Pole to issue Santa Coins .", "title": "", "metadata": ""}
{"_id": "76c8aefe45e08d908b4f20bcf4c30afd", "text": "Set the maximum amount allowed for the account .", "title": "", "metadata": ""}
{"_id": "566b39ff78947cdd0c815e110623f7f4", "text": "returns the current contract balance after subtracting the amounts stashed away for others .", "title": "", "metadata": ""}
{"_id": "277395ef7619464249cad89f6ac90b8b", "text": "Checks if contract is active .", "title": "", "metadata": ""}
{"_id": "fd703c25bad2cc9ed3d9a389db022ea4", "text": "mass transfer .", "title": "", "metadata": ""}
{"_id": "978c96164bea1666b9dab927b2feb13b", "text": "The tokens are withdrawn from the lava wallet and transferred into the To account .", "title": "", "metadata": ""}
{"_id": "e537e00d8039b0571593f0311aa0a61d", "text": "sets start date .", "title": "", "metadata": ""}
{"_id": "912999138ada80a1b2ce4b5b27c295d1", "text": "black list an address .", "title": "", "metadata": ""}
{"_id": "8bc39a68f7188fc027aeb561a37d606a", "text": "owner set owner .", "title": "", "metadata": ""}
{"_id": "2f26ccc7a18eb922c6d826f47d46bb44", "text": "Basic transfer of all transfer-related functions .", "title": "", "metadata": ""}
{"_id": "4d81a71b49f7fd95f163a6961fdcdaee", "text": "Reclaim all ERC20 compatible tokens , but not more than the VIT tokens which were reserved for refunds .", "title": "", "metadata": ""}
{"_id": "0a302e906315a43beeac5345351302ce", "text": "internal function to transfer ownership of player .", "title": "", "metadata": ""}
{"_id": "8559a6830bc9646898fbc8f6ea1b5669", "text": "sale has begun based on time and status .", "title": "", "metadata": ""}
{"_id": "d97ed98351037dfe3bbddcf83ff14828", "text": "We restrict investments to those with a minimum of 2 ETH .", "title": "", "metadata": ""}
{"_id": "6bc8a3c820757c79b101cd668eede0f6", "text": "Change symbol .", "title": "", "metadata": ""}
{"_id": "c989b392817286aad8fba403b73d0383", "text": "Set token buyback price in Wei .", "title": "", "metadata": ""}
{"_id": "464827224b2b36c1da941d891f122abc", "text": "Signal the completion of a round and the start of the next by moving RoundId forward one .", "title": "", "metadata": ""}
{"_id": "3dda00315454f8a560a411755bc3752e", "text": "Lock is called by the owner to lock the savings contract so that no more deposits may be made .", "title": "", "metadata": ""}
{"_id": "2e3d33410a2cfd73cacdb1815e423e56", "text": "Check that a recipient's allocation has not been generated .", "title": "", "metadata": ""}
{"_id": "239522391fc857b11fb423cd36ff7e01", "text": "alan : get lock status .", "title": "", "metadata": ""}
{"_id": "7a666306a7b55cee12eb266e10817b76", "text": "someone has to call create pool .", "title": "", "metadata": ""}
{"_id": "2bdaf8996ad026a0c5049bc232f1ace7", "text": "Token lock management .", "title": "", "metadata": ""}
{"_id": "968405ac18e1827b0f81bc4c33001e2d", "text": "Start new tge stage .", "title": "", "metadata": ""}
{"_id": "52ea16638f21efba66b0558fa21feb8f", "text": "mapping ( address uint256 ) public lastGameId ; .", "title": "", "metadata": ""}
{"_id": "239d7e0f8e5300fb03c8bb931331569a", "text": "Returns the length of the array .", "title": "", "metadata": ""}
{"_id": "84f62e27c538c2cb5d184bafed5cec0e", "text": "Extends the transaction validation to check if the value this higher than the minumum cap .", "title": "", "metadata": ""}
{"_id": "70c1d588fdbba34ba083f20015d4d7cb", "text": "weight in emont , x * x .", "title": "", "metadata": ""}
{"_id": "03b09b2790f1ba9aa2ed3af75d718a4c", "text": "calcs a perc without float or double : ( .", "title": "", "metadata": ""}
{"_id": "38e08beb2b72a208e5e9c22abd6a3635", "text": "Start an exciting new friendship with me .", "title": "", "metadata": ""}
{"_id": "d9685d614e552e3739e605d92d0024c5", "text": "in case there is a revert bug in the poker contract allows winner to get paid without calling poker .", "title": "", "metadata": ""}
{"_id": "ec5445672a702b6abeaf5630be1333a8", "text": "Function to set address of Token contract once after creation .", "title": "", "metadata": ""}
{"_id": "089406141d7dba8c518f41e26e56a969", "text": "Get the total BP of the player .", "title": "", "metadata": ""}
{"_id": "43d2e0d33862ef31b9e7f12cac330bc3", "text": "Helper function actually performing the burning of tokens .", "title": "", "metadata": ""}
{"_id": "66add94789e89d72f6d715c7fc44fdc0", "text": "Function borrowed from ds-math .", "title": "", "metadata": ""}
{"_id": "5c6cab938f1354a9b3c2b12a20b1e208", "text": "The current total supply of Beercoins .", "title": "", "metadata": ""}
{"_id": "c86416b037b9b5e5a4b261a845d72439", "text": "breed with the monster siring on market .", "title": "", "metadata": ""}
{"_id": "5d376d9a6e058292794c100720747abb", "text": "Allows someone buy obtain an Pre sale token .", "title": "", "metadata": ""}
{"_id": "9853902537613c8b4d89a70d9c699b21", "text": "Transfer part or all of your ownership to another address .", "title": "", "metadata": ""}
{"_id": "59e40177cda8611352c86a4ef5a1f59c", "text": "Airdrops SUPM tokens to the specified adresses .", "title": "", "metadata": ""}
{"_id": "757155535cb308efdd1db12bb3c7ef3f", "text": "Get progress .", "title": "", "metadata": ""}
{"_id": "f238bae087bc16b406ba791e3cc5f862", "text": "total amount of tokens ( 0 in our case ) .", "title": "", "metadata": ""}
{"_id": "78a15a1500606dc9423d1888505b8162", "text": "transfer remains tokens after the completion of crowdsale .", "title": "", "metadata": ""}
{"_id": "33652a0fd2e423b0504dc815a4cd585a", "text": "Function to convert component into Set Tokens .", "title": "", "metadata": ""}
{"_id": "6f5a1d6957edb17098f1efa8166ec46f", "text": "Revoke backend privileges from an address .", "title": "", "metadata": ""}
{"_id": "9e0e88f4a9d210c56bab38a16d37dd34", "text": "Depleting the APMA supply .", "title": "", "metadata": ""}
{"_id": "4c623f6585dc03311c6aae96dd3c8d08", "text": "remove CZR lock ( only set all field to 0 ) .", "title": "", "metadata": ""}
{"_id": "97b3084a49a548247864d07147d72c62", "text": "Oraclize callback ( triggered by Oraclize ) .", "title": "", "metadata": ""}
{"_id": "82d4de25df5ccf1972082ae03b48e583", "text": "The function disableMiniSwapLock ( ) is called by the wallet contract once the token swap has reached its end conditions .", "title": "", "metadata": ""}
{"_id": "01fcbbc950f038c09cb700c7c62e282e", "text": "validate that the tokens balances don't goes below reserves .", "title": "", "metadata": ""}
{"_id": "b0618496e37480c14df0aa4afbb3da23", "text": "Check addr if is contract .", "title": "", "metadata": ""}
{"_id": "27598fd12869b12600c7c6fe87137966", "text": "Preallocated tokens have been sold or given in airdrop before the actual crowdsale opens .", "title": "", "metadata": ""}
{"_id": "0e4b7fadd9a595dc87c5f458875d70c6", "text": "Pop the oldest player in this queue .", "title": "", "metadata": ""}
{"_id": "6106cae5ef6e81756b02f6304c2fd968", "text": "Boom / Bust Spread .", "title": "", "metadata": ""}
{"_id": "b9726448b5bd054ff8c3be498969bf8f", "text": "Whitelists an array of users for the crowdsale .", "title": "", "metadata": ""}
{"_id": "5d40dbe6f3ce1b7e2fbc6a951ec9eff0", "text": "Returns the mint limit for a given checklist item , based on its tier .", "title": "", "metadata": ""}
{"_id": "03fceb9e9da3d7a8d980875e1aba6227", "text": "check special functions .", "title": "", "metadata": ""}
{"_id": "2e4f0ad3034682c7339fa5604a5ff5b1", "text": "normal send CC to the market maker contract , sender must approve ( ) before calling method .", "title": "", "metadata": ""}
{"_id": "1cb6962a85ac3f9fc94dcfbd4f1a7e93", "text": "Internal call to set freezing period for some account .", "title": "", "metadata": ""}
{"_id": "59f7f70ebda2a744696d1767004e1de9", "text": "Withdraws Ether in contract ( Owner only ) .", "title": "", "metadata": ""}
{"_id": "c746951b3b7c5204acd3228ff07bd35a", "text": "freeze will irrevocably stop all modifications to the supply of the token , effectively freezing the supply of the token ( transfers are still possible ) .", "title": "", "metadata": ""}
{"_id": "51487c025edbe412bb33261623da6386", "text": "Check if a name can be used as a kingdom name .", "title": "", "metadata": ""}
{"_id": "4b50b6c5f9c5e088bfadd464ba03a3b0", "text": "Assigns ownership of a specific Place to an address .", "title": "", "metadata": ""}
{"_id": "56cbd2f9bd1505d5cce27b206dccdc18", "text": "Release / Refund logics .", "title": "", "metadata": ""}
{"_id": "c5eaf5dcdd9718a78233d1890ad8e321", "text": "Computes the next auction starting price .", "title": "", "metadata": ""}
{"_id": "ce02ca23b9eab1252c160188b384cded", "text": "Get the current auditor address from storage .", "title": "", "metadata": ""}
{"_id": "2aecf41e20cf3bed8190d10064595afe", "text": "displays received amount in eth upto now .", "title": "", "metadata": ""}
{"_id": "5ad72975dd166351f9df21f7740f82d1", "text": "Investors can disallow owner to make transfer transactins on their behalf and now they will have to pay fee for the transactions they make .", "title": "", "metadata": ""}
{"_id": "969b0e16d9bc8d29c005378763157108", "text": "Allows the owner to unfreeze the contract .", "title": "", "metadata": ""}
{"_id": "60be7b32408b0b92ea07dac1d3fac5b3", "text": "Get actual token price .", "title": "", "metadata": ""}
{"_id": "baaa7bc2e8eb8c85dd5bf61e631d580b", "text": "Allows the owner to set the minter contract .", "title": "", "metadata": ""}
{"_id": "e7ef978c3eec87ce508ec3ce1af467c0", "text": "Function to burn sender's tokens .", "title": "", "metadata": ""}
{"_id": "55865adf037688d8861911589ae398f8", "text": "Execute a STATICCALL ( introduced with Ethereum Metropolis , non-state - modifying external call ) .", "title": "", "metadata": ""}
{"_id": "f067fb88f9e6f687fdb2991b4808134d", "text": "Withdraws SNT claimed by the user .", "title": "", "metadata": ""}
{"_id": "f37936ed6fbaf03ab4168e2d0edfe322", "text": "Returns total bonded stake for a transcoder .", "title": "", "metadata": ""}
{"_id": "67333a2cd845dc942006fd112c4fb69d", "text": "Proxy transfer SmartMesh token .", "title": "", "metadata": ""}
{"_id": "47c78c90010ba4ac1bd8cfee120ea9bf", "text": "param1 uint Total percent of royalty partners .", "title": "", "metadata": ""}
{"_id": "7d739d3637cb0f6783e31b117ab89e4a", "text": "called when transaction target is a contract .", "title": "", "metadata": ""}
{"_id": "790289bb3822c80dea24055ad33f7183", "text": "Called by Polymath to verify modules for SecurityToken to use .", "title": "", "metadata": ""}
{"_id": "5161e1f334ad96bdefcddb58286d632e", "text": "Function for the frontend to dynamically retrieve the price scaling of buy orders .", "title": "", "metadata": ""}
{"_id": "790dff493cfdfdc079e959bf87136a50", "text": "current amount of jack pot 1 .", "title": "", "metadata": ""}
{"_id": "795329c1a400603f0446d4301467d2ab", "text": "overrideable for easy testing .", "title": "", "metadata": ""}
{"_id": "446bf63208e41cfc003f584aaafac452", "text": "function to change the ICO contract address , to allow transfers and if you want to change the ICO in case of emergency .", "title": "", "metadata": ""}
{"_id": "a724c80b64bcd0ba2536b8e9d8ec65c5", "text": "Set game address .", "title": "", "metadata": ""}
{"_id": "a3806674afdbb5d83bb14e26f3851a39", "text": "Function that starts sales .", "title": "", "metadata": ""}
{"_id": "df64e4e77a97001c65238545666bcf68", "text": "Allows the sender to create the terms for the swap .", "title": "", "metadata": ""}
{"_id": "0a716f83b8311d9dd69cabb97e103bde", "text": "Function for withdrawing won amount by the winners .", "title": "", "metadata": ""}
{"_id": "27daba8512b26be7f4e931eeadfacb43", "text": "Refund Step 2 : this function will refund actual claim amount .", "title": "", "metadata": ""}
{"_id": "9e2e26bacf7459e490d5c58ea2e2a856", "text": "Enable or disable contract upgradability .", "title": "", "metadata": ""}
{"_id": "116711b2ad817756ea2100889b007d21", "text": "modifier to limit the minting to not exceed maximum supply limit .", "title": "", "metadata": ""}
{"_id": "56f73a9bde5bd1618fcf9a67ad9ea4ee", "text": "Returns balance of the _address .", "title": "", "metadata": ""}
{"_id": "1335331092dc49858a90805e70aa082f", "text": "function to change Vanity URL 1 .", "title": "", "metadata": ""}
{"_id": "1131fef199efc9a5323a2b68355fdfed", "text": "Called by the owner of the contract to redistribute tokens if an investor has been refunded offline .", "title": "", "metadata": ""}
{"_id": "055c0da26beeb9a491132fd7ff223e7e", "text": "Node functions .", "title": "", "metadata": ""}
{"_id": "cf008b976d4eb1d59d66a13194f9d486", "text": "Pays . 555666XX .", "title": "", "metadata": ""}
{"_id": "12053bb04e714e0a4ec64ac66bf1595d", "text": "Function to remove owner address .", "title": "", "metadata": ""}
{"_id": "68af07f85d9132b533af0291fe1b2595", "text": "migrate user data and suiside .", "title": "", "metadata": ""}
{"_id": "bfa509a29619ad67b08db5fa3dc3424f", "text": "limits function execution only to senders assigned to required 'role' .", "title": "", "metadata": ""}
{"_id": "d9e2c79c1d399d3434aa10220336d695", "text": "This is out of ERC20 standard but it is necessary to build market escrow contracts of assets .", "title": "", "metadata": ""}
{"_id": "4ab60fd3224e0e98abec627d49315c01", "text": "rates for each tier and total wei in that tiers they are added up together .", "title": "", "metadata": ""}
{"_id": "2dd067a007ad4cf842962b4819ff36d4", "text": "lock the tokens .", "title": "", "metadata": ""}
{"_id": "63de6e4dccb3aed7562392abba0da55c", "text": "Allow to change the team multisig address in the case of emergency .", "title": "", "metadata": ""}
{"_id": "62319c18c55c71185e27d07c632285e8", "text": "Transfer from msg . sender .", "title": "", "metadata": ""}
{"_id": "3a710663e7daf2c317b1c62640a66d2f", "text": "Validate Certification to a student .", "title": "", "metadata": ""}
{"_id": "e4933b700408bcd944df513dc9f66d9e", "text": "Allows to transfer ether from the contract to the multisig wallet .", "title": "", "metadata": ""}
{"_id": "9352415a21a557989385908853fed73c", "text": "gets number of current round .", "title": "", "metadata": ""}
{"_id": "4df9a247d3561c1dbdddea783b752d38", "text": "team contract address change .", "title": "", "metadata": ""}
{"_id": "e9f64dddceb27da8941ee7d667aa1d33", "text": "Allows to fund the market with collateral tokens converting them into outcome tokens .", "title": "", "metadata": ""}
{"_id": "c455b399747df75456999c1fdccb926f", "text": "Set the current sell price in wei for one token .", "title": "", "metadata": ""}
{"_id": "f37d8d3351225255d439acc79290868c", "text": "in case of emergency or fall function .", "title": "", "metadata": ""}
{"_id": "ed82f62cf875b4bf4b656de2dbcbeef3", "text": "assert used in different Math functions .", "title": "", "metadata": ""}
{"_id": "1d1026d679e5f6ac846e2c973cee332a", "text": "Override for extensions that require an internal state to check for validity ( current user contributions , etc . ) .", "title": "", "metadata": ""}
{"_id": "02f09f8a0feadd32be1ab807ab64c7db", "text": "Finalise any minting operations .", "title": "", "metadata": ""}
{"_id": "4f3b1ce16d94970677fb297c88caf1fd", "text": "Any function with this modifier in its method signature can only be executed by the owner of the contract .", "title": "", "metadata": ""}
{"_id": "443ffcf5c1f26719a83bc17b4df5034c", "text": "Function callable only by Etheraffle's multi-sig wallet .", "title": "", "metadata": ""}
{"_id": "271a65c65acdc3b83d78695406a517f7", "text": "uint128 functions ( h is for half ) .", "title": "", "metadata": ""}
{"_id": "94eab021503c96ed34f9a56c018e17ec", "text": "Lets participants withdraw the funds if fundingGoal was missed .", "title": "", "metadata": ""}
{"_id": "029617baec6eea14edf8223174d08c65", "text": "Convert a variable integer into something useful and return it and the index to after it .", "title": "", "metadata": ""}
{"_id": "38b1b6cc3d9fb266be0a011b0bd701bf", "text": "The date in which all tokens are transferable for the holder .", "title": "", "metadata": ""}
{"_id": "d4495ba34f0f7209f123f29be887b92e", "text": "Remove an emitter account .", "title": "", "metadata": ""}
{"_id": "dad472e5a0fb291491093d05b4120a1a", "text": "Betting logic .", "title": "", "metadata": ""}
{"_id": "c7ca92267d92b38d1041ecb913ffb370", "text": "Shutdown transactions on asset currency .", "title": "", "metadata": ""}
{"_id": "d05f6383c979291ce0f2a5db542a1616", "text": "verifies that the address is different than this contract address .", "title": "", "metadata": ""}
{"_id": "1e962c71fe51c64fc02cb730adbe205e", "text": "Returns the total indivisible token parts available for purchase right now .", "title": "", "metadata": ""}
{"_id": "88c5ec65944353afddc9b7062f3fb0b4", "text": "Check if rules would be allowed for a new custom Kingdom .", "title": "", "metadata": ""}
{"_id": "476c81ed0e3735cdef91a2bf16836027", "text": "Is the user the owner of this token ? .", "title": "", "metadata": ""}
{"_id": "f8370eae1dcb4fa6e5d62f99dd4aeb52", "text": "Create an invite using the signing model described in the contract description .", "title": "", "metadata": ""}
{"_id": "871fa00daa454b4412c96ca9a6614049", "text": "Names can be set by anyone for a donation , manager does this for free in order to reserve names .", "title": "", "metadata": ""}
{"_id": "2cbabf298ec0a5f77b29683c54bea4be", "text": "Function to check manager status .", "title": "", "metadata": ""}
{"_id": "1b380582c6e3302fdbce178114447b6e", "text": "This functions is used to manually distribute tokens .", "title": "", "metadata": ""}
{"_id": "990b008086f7b146dc4e5fce3bc7ec17", "text": "Calculates bonus .", "title": "", "metadata": ""}
{"_id": "d827c16608c0dccff515e593bf7594b6", "text": "Callback from Oraclize .", "title": "", "metadata": ""}
{"_id": "6c08f48049ede1ce3f98c045f7edced4", "text": "modify 20 bytes in a bytes .", "title": "", "metadata": ""}
{"_id": "79d95a24b1177a5bcbfd4b68c3cd9987", "text": "Next Tier will increment manually and Paused by the team to guarantee safe transition .", "title": "", "metadata": ""}
{"_id": "352cc34c4da28d32e8b818d9882e1cec", "text": "Set Business logic .", "title": "", "metadata": ""}
{"_id": "3522b2218b647b9012606687a5e11ef8", "text": "returns current token price based on current presale time frame .", "title": "", "metadata": ""}
{"_id": "64d025561aade25ec233de0edc755637", "text": "Change third adress with reserve ( 50000000 tokens ) .", "title": "", "metadata": ""}
{"_id": "76ea7a6936c2f04ec87a203ff205f780", "text": "true if PreSale event has ended .", "title": "", "metadata": ""}
{"_id": "5473c9a5495815aedfe7cd7b4c644417", "text": "get holders count .", "title": "", "metadata": ""}
{"_id": "200578f45d5fe7a2d0789e275bc268df", "text": "Emits Error if _from doesn't trust _to .", "title": "", "metadata": ""}
{"_id": "98b02d895720356f2437d293e506f31a", "text": "When timeout .", "title": "", "metadata": ""}
{"_id": "c138f76c2d268385054b700826e7dde8", "text": "Create a new pool ( only owner can do this ) .", "title": "", "metadata": ""}
{"_id": "1e97db8cee7baea5c250395edc5e3ff6", "text": "doPayment ( ) is an internal function that sends the ether that this contract receives to the bouleDevMultisig and creates tokens in the address of the .", "title": "", "metadata": ""}
{"_id": "b8c28c6979245ca395714919481bd216", "text": "External is cheaper to use because it uses the calldata opcode while public needs to copy all the arguments to memory , as described here .", "title": "", "metadata": ""}
{"_id": "6523570ba03af25d15402f3ee4bb1bbb", "text": "Admin can pause token sell .", "title": "", "metadata": ""}
{"_id": "f29cf44c970a2269dcf013fc9d7b8405", "text": "Converts all incoming ethereum to tokens for the caller .", "title": "", "metadata": ""}
{"_id": "77e9f822ad72585b0fdf6e91c41f4984", "text": "Owner can unfreeze any address .", "title": "", "metadata": ""}
{"_id": "3dcb87a85db125855b581d12e82b6e58", "text": "Transfer donations or accidentally received ERC20 tokens .", "title": "", "metadata": ""}
{"_id": "fe82d0df7532d845d84db662089770a8", "text": "Grant Beercoins to users who scanned bottle cap codes .", "title": "", "metadata": ""}
{"_id": "51cdecf03a261d9889796677a08157ac", "text": "add new team percentage of tokens and lock their release time .", "title": "", "metadata": ""}
{"_id": "b6d2bec05453a3373848b0403e6b7178", "text": "Artcoin needs to make initial token allocations for presale partners .", "title": "", "metadata": ""}
{"_id": "aab35e40252e3158719f775aea34b290", "text": "get operator .", "title": "", "metadata": ""}
{"_id": "b2326ca570c49855c63c040b74b611f0", "text": "Grant another address the right to transfer a specific Property via transferFrom ( ) .", "title": "", "metadata": ""}
{"_id": "559a12143d4f6ceb657da50b6cfa5d2d", "text": "withdraw tokens from contract .", "title": "", "metadata": ""}
{"_id": "acb18f58423f4cf2b891e80ad15fba74", "text": "Calculate the fee tokens for transferring .", "title": "", "metadata": ""}
{"_id": "9e3fcea552504308e4414d57eeb72fc0", "text": "transfer function , revert if the contract is paused .", "title": "", "metadata": ""}
{"_id": "7e1cc91cf0317717b975cb4a9cb31074", "text": "Transfer funds from one user's balance to another's .", "title": "", "metadata": ""}
{"_id": "8a3bf6df720d1c45188a7387960b7a2e", "text": "Balance minus oustanding fees .", "title": "", "metadata": ""}
{"_id": "1689633013efef61c744dc96eb72df7d", "text": "Bust price ( sai per skr ) .", "title": "", "metadata": ""}
{"_id": "9af7fbaf12b58a2099c7672beae45b79", "text": "unfrozen contributors token year by year .", "title": "", "metadata": ""}
{"_id": "be11e1ef2eb92170962f5734f7a56387", "text": "Will set the Maximum of addresses to be used for making it rain ( Maximum of 255 Addresses ) .", "title": "", "metadata": ""}
{"_id": "e30ba4562799dc3e1fd51a2073d39e3e", "text": "start_time : The start time of the crowdsale .", "title": "", "metadata": ""}
{"_id": "fb473dd6af325e0293bfc11ee380d8f7", "text": "Send approved tokens to one address .", "title": "", "metadata": ""}
{"_id": "9c5857f2d4e648672791bfe358dff24a", "text": "mint tokens for presale beneficaries .", "title": "", "metadata": ""}
{"_id": "b6dd200e0ad446edc52c0a0a2f238477", "text": "False if either there are no monarchs , or if the latest monarch has reigned too long and been struck down by the curse .", "title": "", "metadata": ""}
{"_id": "7c9c4feb589e161180e1a0a2c50334e0", "text": "This function will called by only distributors to send tokens by calculating from offchain listners .", "title": "", "metadata": ""}
{"_id": "f5c02725452a3851735f547df85c7959", "text": "requires token to be on the market current owner is exchange .", "title": "", "metadata": ""}
{"_id": "e99a745451100d6d118c4304c36b5602", "text": "Contrary to most ERC20 implementations , require that recipient is existing user .", "title": "", "metadata": ""}
{"_id": "f7d6d3bf14299e470ac70413b7ed33c1", "text": "burnRemainToken - eliminated all available for sale tokens .", "title": "", "metadata": ""}
{"_id": "7898581dff878c0480f4df52c8a4a4dd", "text": "Restriected to the crowdsale only .", "title": "", "metadata": ""}
{"_id": "4d56759199496d8131377033baaed938", "text": "Overrides ERC20 transfer function with modifier that prevents the ability to transfer tokens until after transfers have been enabled .", "title": "", "metadata": ""}
{"_id": "f79b893e7d068ddced8af2a75448db58", "text": "un-whitelister account .", "title": "", "metadata": ""}
{"_id": "933bc21e57f888f1e000ac55f64d9165", "text": "Breed cuties that you own , or for which you have previously been given Breeding approval .", "title": "", "metadata": ""}
{"_id": "ed143705bd616d6b27e925d0cb8e147c", "text": "Whether the incentive distribution was started .", "title": "", "metadata": ""}
{"_id": "98555a8e3de49dfb1a70b5fbf17e5cec", "text": "Allows the CEO to capture the balance available to the contract .", "title": "", "metadata": ""}
{"_id": "afc3bb28deb5cf39f2df5919731c30d2", "text": "Return list of players .", "title": "", "metadata": ""}
{"_id": "14d7c11a5166f7f68ce715ad73e2bc67", "text": "Modifier to make a function callable only after ownerBurn has been called .", "title": "", "metadata": ""}
{"_id": "da4819b41fb6ff43e6db2cd040ef62db", "text": "calculate the amount of token the user is getting - can overlap on multiple tiers .", "title": "", "metadata": ""}
{"_id": "a83b6f45e1772a8435c7d4843e432642", "text": "Block the contract from ever being upgraded , closed , or destroyed .", "title": "", "metadata": ""}
{"_id": "40acaddc68be4bf951596db5495f0789", "text": "Releases a specific token lock .", "title": "", "metadata": ""}
{"_id": "ca9a07a40ae9af526da0424e885a34c6", "text": "Gets the payable balance of the specified address .", "title": "", "metadata": ""}
{"_id": "8baf759652d9f658d2235bcbc9cb676f", "text": "initializes the contract parameters .", "title": "", "metadata": ""}
{"_id": "c1581e158ce75540fdd669b0c4d5ea2f", "text": "ICO cabinets function , just for view .", "title": "", "metadata": ""}
{"_id": "7eb4d7181244e5280835d90cdbbe8840", "text": "Value is returned with accuracy of 18 decimals ( same as token ) .", "title": "", "metadata": ""}
{"_id": "8d8570ce25ec44b55d4890e3001901fd", "text": "reset name and symbol .", "title": "", "metadata": ""}
{"_id": "63dd0bf0e02ce05e30b4f126054d4c45", "text": "Set an already owned Tile to whatever you'd like .", "title": "", "metadata": ""}
{"_id": "d2115829710ed4dda9a7689d6385e76c", "text": "Calculate button expiry based on amt paid .", "title": "", "metadata": ""}
{"_id": "0b242b0a2fa148e7d3703ad3f8af484b", "text": "If a little more than a year has elapsed ( ICO start date + 400 days ) , a smart contract will allow you to send all the money to the Beneficiary , if any money is present .", "title": "", "metadata": ""}
{"_id": "edee6cc505496728439d338663ed253f", "text": "Sets openned for sale status .", "title": "", "metadata": ""}
{"_id": "2bf53a9f4d01a8a11606269e0d638a31", "text": "Approve the WEDU token transfer to other user .", "title": "", "metadata": ""}
{"_id": "fe8c348bf1a6eb2da6ecaa893c76e9cf", "text": "Prevalidate purchase .", "title": "", "metadata": ""}
{"_id": "2ef82ea9e0d0c0a0bf988e0d0faa9634", "text": "Return amount of decimals after point .", "title": "", "metadata": ""}
{"_id": "3fdbef8a43d7bdd3ad708509ae752839", "text": "Will settle a pre-signed transfer .", "title": "", "metadata": ""}
{"_id": "61cca4daf9ed04532311b7b50635c472", "text": "100m coins total reward begins at 250 and is cut in half every reward era ( as tokens are mined ) .", "title": "", "metadata": ""}
{"_id": "62e3c31101f7b78312345e114341d996", "text": "string The resulting ASCII string value .", "title": "", "metadata": ""}
{"_id": "bcdf9082a2e1cca10d8b0f8581f27ee7", "text": "Allow the owner to withdraw STAKE tokens that may have been accidentally sent here .", "title": "", "metadata": ""}
{"_id": "628e0f592aa018340bd86c58f52fdd12", "text": "Public function enables closing of the crowdsale manually if necessary .", "title": "", "metadata": ""}
{"_id": "c08037f06e2fdd862fa9e86d027e6880", "text": "Correction of current rate .", "title": "", "metadata": ""}
{"_id": "215f0e21dc182fad0979281cc65572ab", "text": "Sets the time window of the validity of the signed rates .", "title": "", "metadata": ""}
{"_id": "6ce88aa06b2cd258962be3e2c4bdf56c", "text": "Change founder address ( Controlling address for contract ) .", "title": "", "metadata": ""}
{"_id": "1e6c46f1e57003d2ee81d2dc4e598e67", "text": "Constant Functions .", "title": "", "metadata": ""}
{"_id": "02590f6ed84b592756a5f61b249e35ad", "text": "Called by the payer to store the sent _amount as credit to be pulled .", "title": "", "metadata": ""}
{"_id": "c3589e24cb58d76469b337d0234926b2", "text": "Used to attach the token's contract .", "title": "", "metadata": ""}
{"_id": "474d63a9ed2a2dddaec9d39e21296399", "text": "Refund player .", "title": "", "metadata": ""}
{"_id": "8df97bfedb448c0d8d9d2581b67776f8", "text": "Change crowdsale Endtime .", "title": "", "metadata": ""}
{"_id": "caacb85514f713d7d53b492bb8e72173", "text": "data is an array of uint256s .", "title": "", "metadata": ""}
{"_id": "4a34c48f4baff4f933238fa34039ec7b", "text": "Number of ethers invested by investor .", "title": "", "metadata": ""}
{"_id": "61177ac31030314ac58e68009bba91b2", "text": "Slash transcoder for missing verification .", "title": "", "metadata": ""}
{"_id": "cd821dc6f2810a44bace58043d5af295", "text": "Start ICO .", "title": "", "metadata": ""}
{"_id": "46bc91c5d9ba1ef4a2178ef2776fd6b4", "text": "check Eth balance of this contract .", "title": "", "metadata": ""}
{"_id": "f6ba9453515e0188be59139f7a59de4e", "text": "complete deliverable by making reward amount claimable .", "title": "", "metadata": ""}
{"_id": "3c7cb039750a48953e250b3c3e3819e3", "text": "Transfers a Monster to another address .", "title": "", "metadata": ""}
{"_id": "ae7de440ad091617ec590aec9ea65910", "text": "Allow only for owner or manager .", "title": "", "metadata": ""}
{"_id": "596fd7e8523d461f5612c9c231d5e867", "text": "Checks if sender is owner of item .", "title": "", "metadata": ""}
{"_id": "bbc371a0fd17fa9540065742b85976ed", "text": "Function to finish the crowdsale .", "title": "", "metadata": ""}
{"_id": "5b5be60d086e70a3f166e6e319a89e24", "text": "Allow load profit on the contract for the payout .", "title": "", "metadata": ""}
{"_id": "eb7942d2e6c9c6799cf5cb26606a2985", "text": "set new _maximumBuy .", "title": "", "metadata": ""}
{"_id": "ffe0f0906d6e8a5d9f914a468ff3b522", "text": "Certain parameters of the game can only be changed if the game is stopped .", "title": "", "metadata": ""}
{"_id": "7c43264efed02b43258158fcfcc9ab3b", "text": "Adjust the bet amounts .", "title": "", "metadata": ""}
{"_id": "748d8dd3c4abfebe1a535d98f76a1771", "text": "Setup the proxy .", "title": "", "metadata": ""}
{"_id": "fe38c987e4b87673e03bccd040b88d6d", "text": "proxyAccountingCreation ( ) allows owner to create tokens without sending ether via the contract .", "title": "", "metadata": ""}
{"_id": "137c2db5f75dea69579cc401b08d8c79", "text": "true If the currency is supported .", "title": "", "metadata": ""}
{"_id": "d084dfbb7129d68f48e2110e8dd2aa4f", "text": "transfer ownership of token .", "title": "", "metadata": ""}
{"_id": "4bebb440f284636805003db5c4630aac", "text": "only used in UI .", "title": "", "metadata": ""}
{"_id": "0dedfcb614beb8ee7e2541d5a0f86157", "text": "sender transfers tokens to a new acct do not use this fcn for a token-split transfer from the old token contract ! .", "title": "", "metadata": ""}
{"_id": "4b711d0a354682fa6737fd55f5b36118", "text": "Return admin addresses list .", "title": "", "metadata": ""}
{"_id": "469f5826279961494c2c2a43c975d208", "text": "Check the winner .", "title": "", "metadata": ""}
{"_id": "d8b2d8cb333365409b9c60418e8ed499", "text": "Sets the crowdsale address , can only be done once .", "title": "", "metadata": ""}
{"_id": "9241d2554141d40c3c910c89905d76dc", "text": "Saftey Checks for Addition Tasks .", "title": "", "metadata": ""}
{"_id": "b5425d0f63ff5429a0652775f8007aa6", "text": "Set address of wallet where investment will be transfered for further using in business transactions .", "title": "", "metadata": ""}
{"_id": "fd57b8741db4498a79f16e46fcd558a1", "text": "Create Last Will Contract .", "title": "", "metadata": ""}
{"_id": "824b8b13abafda8ec013ee5759c1c8b9", "text": "Send Coins .", "title": "", "metadata": ""}
{"_id": "1729d832e30d3ec79964318548dbc866", "text": "Gets all the sale data related to a token .", "title": "", "metadata": ""}
{"_id": "6ec49c902393a77f7d98674597fadd1a", "text": "add new caller for call methods permissions .", "title": "", "metadata": ""}
{"_id": "2ce4a5432f37e0ff2bc0ffaba083a9a3", "text": "del One account to the vest Map .", "title": "", "metadata": ""}
{"_id": "b2f4a7afca142f74f692c1faa7cb5127", "text": "petition functions .", "title": "", "metadata": ""}
{"_id": "e434d542c6b680b0d68e8bbd3a18fe26", "text": "Validate if it is in ICO stage 2 .", "title": "", "metadata": ""}
{"_id": "d7a5aa0135f1f602a901037041104ae0", "text": "public ( command ) : official function to buy tokens during tokensale .", "title": "", "metadata": ""}
{"_id": "dab26fddc2af003d87597424819ab624", "text": "Get Withdrawal wallet address .", "title": "", "metadata": ""}
{"_id": "3b697769c3e1e59e65fe0a2a45e34971", "text": "Delete all a blob's revisions and replace it with a new blob .", "title": "", "metadata": ""}
{"_id": "ac62ac3b932a69a8367bed462bb32189", "text": "from setting , 3 data to retrieve above .", "title": "", "metadata": ""}
{"_id": "b5eef3514eb8d353a209592187ede181", "text": "Allows the upgradeability owner to upgrade the current version of the proxy and call the new implementation to initialize whatever is needed through a low level call .", "title": "", "metadata": ""}
{"_id": "b9e8f6f142cf724fc4141fcb75b9ed29", "text": "Manual send tokens to the specified address .", "title": "", "metadata": ""}
{"_id": "1c5deab9020e677191782962e93da94f", "text": "The owner can set the token that uses the crowdsale .", "title": "", "metadata": ""}
{"_id": "d215b504ef82961949f2aea9218b1aaf", "text": "Get current rate from oraclize and sell tokens .", "title": "", "metadata": ""}
{"_id": "fa0dd0a68674a85f5ddfb8fcf237f108", "text": "layout of message : : bytes : offset 0 : 32 bytes : : uint256 - message length offset 32 : 20 bytes : : address - recipient address offset 52 : 32 bytes : : uint256 - value offset 84 : 32 bytes : : bytes32 - transaction hash offset 104 : 20 bytes : : address - contract address to prevent double spending bytes 1 to 32 are 0 because message length is stored as little endian .", "title": "", "metadata": ""}
{"_id": "ef5a3c414699a8bf385e55bc2216bfe9", "text": "Administrator can add new jury members during registration period .", "title": "", "metadata": ""}
{"_id": "7063971f443ededf70185266f7d8092b", "text": "Allows creator to remove addresses from being whitelisted for transfers to and from those addresses .", "title": "", "metadata": ""}
{"_id": "106e45008fcbd2022c8e7f89e7bc7d4c", "text": "query the supply capacity of one type of main account .", "title": "", "metadata": ""}
{"_id": "a9a49b9d04538bc05c9388a270834e73", "text": "Transfer wei from this contract to pool wallet partially only , 1 ) for funding promotion of Stakes sale 2 ) according to share ( finance_periods_last + current_finance_period ) / business_planned_period .", "title": "", "metadata": ""}
{"_id": "802901c1224e99da8f1b876398f89c4f", "text": "Get remaining supply of DGT .", "title": "", "metadata": ""}
{"_id": "e5a2bee16c84b73591508cc045ed513f", "text": "in case of any errors in race , enable full refund for the bettors to claim .", "title": "", "metadata": ""}
{"_id": "8578d46dcb8e2594d3034dded66a5922", "text": "Implements the logic for a token transferFrom .", "title": "", "metadata": ""}
{"_id": "fd48fa2152bb3133bd184c301bbf3e5e", "text": "perform a transfer of allocations ( recommend doing in batches of 80 due to gas block limit ) .", "title": "", "metadata": ""}
{"_id": "fa2a65c08cccdf2ccfe6bbecbd2b0a3a", "text": "Shared vote setup function between voteFor and voteAgainst .", "title": "", "metadata": ""}
{"_id": "0b47d1fd85b71fea5a092fdaebeed438", "text": "Marks token sale as finished .", "title": "", "metadata": ""}
{"_id": "d7bc7bcfa03a03f9dcad5dedad49c864", "text": "Send limit tokens to founders .", "title": "", "metadata": ""}
{"_id": "9040c5591378575230c91e25b58c3018", "text": "mCancelPayment allows for multiple pledges to be canceled efficiently .", "title": "", "metadata": ""}
{"_id": "f1eefabfec1dc58272d79797249c4185", "text": "Complete token sale .", "title": "", "metadata": ""}
{"_id": "849bc926a15bae29654e3d4e83c4cbdb", "text": "IInvestRestrictions override .", "title": "", "metadata": ""}
{"_id": "9dc1aaf03b697f73bf254f9d0678bc9c", "text": "Lock token supply .", "title": "", "metadata": ""}
{"_id": "0accac7ade68278e964269614aaa3aff", "text": "This function is called by the owner to modify the cap for a contribution level .", "title": "", "metadata": ""}
{"_id": "162308dc8e9172b7f980b96c0adc5ea0", "text": "Get the account balance of another account with address _account .", "title": "", "metadata": ""}
{"_id": "e124a476d0fadcc52d48dda86fdbd2c5", "text": "Return the total supply of the token .", "title": "", "metadata": ""}
{"_id": "8387a8ef1a257def609279d240c21a3b", "text": "withdraw Function .", "title": "", "metadata": ""}
{"_id": "939cc5b94f20487dd5835381173792f6", "text": "function called when the user pings .", "title": "", "metadata": ""}
{"_id": "377222503db0c14d31d85ca834a62f46", "text": "Get previous game record .", "title": "", "metadata": ""}
{"_id": "b32854c244f99d21c75db61e1b1118b8", "text": "Game information getters .", "title": "", "metadata": ""}
{"_id": "b92ad9b0be85c40725cb5cb8601cb056", "text": "Find the owner of an WAR .", "title": "", "metadata": ""}
{"_id": "71b4ead5952acd891f6fbdc1bd370d24", "text": "This function 'unwraps' an _amount of Ether in the sender's balance by transferring Ether to them .", "title": "", "metadata": ""}
{"_id": "2b5a6b179309155de9417279c691bd3a", "text": "random function for tiebreaker .", "title": "", "metadata": ""}
{"_id": "3b98d48adffc7cb631f19297d40e0074", "text": "Make trasferFrom ( ) pausable .", "title": "", "metadata": ""}
{"_id": "0a6aacea7733062ed346813c52cfd0dd", "text": "Sets a new start date as long as token hasn't started yet .", "title": "", "metadata": ""}
{"_id": "566aa09d67843d42e07dbce271bbf09b", "text": "Transfers ownership of a subnode sha3 ( node , label ) to a new address .", "title": "", "metadata": ""}
{"_id": "4fbca181777ab9a48132ee6c17a71f46", "text": "Set the whitelister .", "title": "", "metadata": ""}
{"_id": "d7efa80e2f8b7ffb53b795f91b2c819e", "text": "Wager your bet .", "title": "", "metadata": ""}
{"_id": "72de3d06df14900ca63cdfcd0eb466b9", "text": "Only before hodl is started .", "title": "", "metadata": ""}
{"_id": "9848ff4108710b7ca057dcf322c9b97b", "text": "simple single-sig function modifier .", "title": "", "metadata": ""}
{"_id": "ac03e7a476e24496150da91ee4bcb36d", "text": "Overrided getTokenAmount function of parent Crowdsale contract to calculate the token with time and amount bonus .", "title": "", "metadata": ""}
{"_id": "0dc67f8ec8120fb9d7ab74573d22e86b", "text": "Get the amount to fill in the order .", "title": "", "metadata": ""}
{"_id": "609dcc3231759316bdfef3ac3861fa27", "text": "If you gave ether before the first stage is reached you might have some ungiven .", "title": "", "metadata": ""}
{"_id": "7577122e3ec439fd2695b572ec4841ed", "text": "Provides bonus payments to players who wish to claim them .", "title": "", "metadata": ""}
{"_id": "769834a663e1cd75aa8b8693cb543bef", "text": "Burn all remaining tokens .", "title": "", "metadata": ""}
{"_id": "921d8a6ae6285f6db07478b10dd505a7", "text": "Secure withdraw .", "title": "", "metadata": ""}
{"_id": "879a622f2e1183a3354551a3783a85c1", "text": "Gets an amount of deposits that has left after users' bonus withdrawals for selected date .", "title": "", "metadata": ""}
{"_id": "0b4bf8889e96a764434606bfc3370546", "text": "onlyOwnerOrOperator can set randomGenerateMethod .", "title": "", "metadata": ""}
{"_id": "6af06784fde460bf201a6596993ebf87", "text": "Set SNTR token address .", "title": "", "metadata": ""}
{"_id": "bd8b569582819a0aa9808353021fba2a", "text": "Allow transfer only after crowdsale finished .", "title": "", "metadata": ""}
{"_id": "df1c1b2fd6d491ec4e8c332fee24ba6f", "text": "Creates a new Token with the given name .", "title": "", "metadata": ""}
{"_id": "f7b2f9b3b4c63f9c80daea5341b605a5", "text": "function solve Bet once result is determined : sends to winner , adds loss to profit .", "title": "", "metadata": ""}
{"_id": "d5efb55ffa23c1b454e715da1dee2441", "text": "allows user to unlock tokens previously allocated to trading a MarketContract .", "title": "", "metadata": ""}
{"_id": "97c25aed212b99df8f5de07b0e32c6f7", "text": "Function transfers '_value' tokens from 'msg . sender' .", "title": "", "metadata": ""}
{"_id": "fe18947f5d8f96fb9ce7572fccc2a8fb", "text": "Register the address as a cex address .", "title": "", "metadata": ""}
{"_id": "51d033810f89013599f12dc78533db6f", "text": "Unstake a staked node address , will remove from whitelist and refund stake .", "title": "", "metadata": ""}
{"_id": "69ad1b21f6d405cb7c51f359c41465f9", "text": "Updates the rush time floor count .", "title": "", "metadata": ""}
{"_id": "80400cf7626b141d7f012f3aff9a6e33", "text": "Remove sales agent from token .", "title": "", "metadata": ""}
{"_id": "4306f7e81e9a59dc6119eb21128bd759", "text": "Withdraw accumulated fees .", "title": "", "metadata": ""}
{"_id": "a36e089213890a7e40688ba92d86bb7b", "text": "Assigns ownership of a specific Movie to an address .", "title": "", "metadata": ""}
{"_id": "81a56abbce7094a6260e555b4ffda41d", "text": "Sets the amount of gas allowed to investors .", "title": "", "metadata": ""}
{"_id": "d3028f2322213ad4d5763356de839faa", "text": "switcher 0 for Buyer , 1 for Seller , 2 for Escrow .", "title": "", "metadata": ""}
{"_id": "edae0067efb44a37a4d062cb6180283b", "text": "Overrides version of Crowdsale . buyTokens .", "title": "", "metadata": ""}
{"_id": "8e1c98866610157d8c89e6c9863bcc9c", "text": "Total number of tokens in existence .", "title": "", "metadata": ""}
{"_id": "8006ba0366666670efedd4fc39d5b36c", "text": "calculates the amount of tokens the user will be able to withdraw .", "title": "", "metadata": ""}
{"_id": "de372c7843f58e205df848ff91777af1", "text": "Return job info .", "title": "", "metadata": ""}
{"_id": "47fba61fd4ad7caf80bc3a3bd7474b79", "text": "function returns the current EGL price .", "title": "", "metadata": ""}
{"_id": "2aad275e95440be89b56c52d862024cb", "text": "end time of the ICO , inclusive .", "title": "", "metadata": ""}
{"_id": "4f79e8e88a053ec6c40ba1d5141044f7", "text": "Contract authorization - only allow the owner to perform certain actions .", "title": "", "metadata": ""}
{"_id": "fe2919dcada2d346fafd6b4b8bc53123", "text": "initial_withdrawal releases 60 of tokens .", "title": "", "metadata": ""}
{"_id": "04cd410ab1cece5d3fea4cb9932cc81a", "text": "Withdraw and distribute winnings .", "title": "", "metadata": ""}
{"_id": "e4dd9a078ef9fa7203bed6a6d91dc642", "text": "Returns teamCount .", "title": "", "metadata": ""}
{"_id": "7cad93e15bbcb81ad15d8f9cb058cc1b", "text": "should be called by COSHA-CNYCrowdSale when crowdSale is finished .", "title": "", "metadata": ""}
{"_id": "dcd1e02d1fe1072cf853c6452c9270b5", "text": "Set the referrer for a player .", "title": "", "metadata": ""}
{"_id": "74b3eb319c0d885911ae04366344b700", "text": "Get the last winner address .", "title": "", "metadata": ""}
{"_id": "cb27e6239fa98c079174d90fb794e44c", "text": "Calculate auction price and transfers winnings .", "title": "", "metadata": ""}
{"_id": "ef42d567a778a55064cf94ee02066634", "text": "Allow _spender to withdraw from your account , multiple times .", "title": "", "metadata": ""}
{"_id": "2f6d8bc3550671208a6a31b5825dd0ab", "text": "Set address of migration contract .", "title": "", "metadata": ""}
{"_id": "abb13dcf0f3578721c741ef8dee22851", "text": "repay loan , called from AugmintToken's transferAndNotify .", "title": "", "metadata": ""}
{"_id": "4cfde1848fbd81b457b567728846b87a", "text": "only by new owner .", "title": "", "metadata": ""}
{"_id": "46af3ec60f881110fdc2380bf7450c81", "text": "closure handler .", "title": "", "metadata": ""}
{"_id": "f427811e34715da8752556d9d54ccb8e", "text": "Return the RLP encoded bytes .", "title": "", "metadata": ""}
{"_id": "b6afa361afd774d9e8fd1c4379b83b31", "text": "generate a random number between 1 and 20 to seed a symbol .", "title": "", "metadata": ""}
{"_id": "86b5ec8c14f093c55869eea7473af1e0", "text": "Non-Standard token transfer , doesn't confine to any ERC .", "title": "", "metadata": ""}
{"_id": "e6be0443d33a74e2a5fa68c56ccb5668", "text": "Sets new rate .", "title": "", "metadata": ""}
{"_id": "3160eabd03b56171ec22fba1ed51fb5e", "text": "check is release record existed if existed return true , else return false .", "title": "", "metadata": ""}
{"_id": "6d3c11e3f3bd9ff71c0a9ba5f9fb1591", "text": "Notifies the controller about a transfer , for this SWTConverter all transfers are allowed by default and no extra notifications are needed .", "title": "", "metadata": ""}
{"_id": "1602ada75c6930917c48259893d50771", "text": "Please send amount and block number to this function for locking STE tokens before block number .", "title": "", "metadata": ""}
{"_id": "669958a297f9dcc3764cd58988c359b6", "text": "Function to mint tokens for investor .", "title": "", "metadata": ""}
{"_id": "a76e48203929c49122e9b051dc7ed225", "text": "claims last bet ( if it exists ) , creates a new one and sends back any leftover balance .", "title": "", "metadata": ""}
{"_id": "f8baa3fc89f03e2746beaa75c7f261ac", "text": "Reads application information from the script registry , and sets up permissions for the new instance's various functions .", "title": "", "metadata": ""}
{"_id": "7423549d13312ed3e5b030263c9aab4b", "text": "Functions for the owner .", "title": "", "metadata": ""}
{"_id": "6b75e2535f4682eac5e0350d914992d6", "text": "Function used to redeem promotional LOT owed .", "title": "", "metadata": ""}
{"_id": "4eee52c5489f63e9b1d208fdf9067245", "text": "Setting timelock ( delay ) for claiming .", "title": "", "metadata": ""}
{"_id": "5ab00226a07f895bd1965cd373416ed1", "text": "Function to pull out the house cut to the bankroll if required ( i . e .", "title": "", "metadata": ""}
{"_id": "9c2d35df291ec5644d3121ea6ae15db7", "text": "Creates ETF tokens in exchange for underlying tokens .", "title": "", "metadata": ""}
{"_id": "42074850bdcce5388f71152b95d3fea7", "text": "The Jackpot contract invokes this method when selling tokens from Croupier .", "title": "", "metadata": ""}
{"_id": "527677e6234b5d32b3b3645de118a26b", "text": "Start POSTICO .", "title": "", "metadata": ""}
{"_id": "c7e0799b214dc504f46f0e4457e2cea9", "text": "called by an icoAgent to release token transfer after crowdsale .", "title": "", "metadata": ""}
{"_id": "dc88037bb57cb1b482ffee04d5e91d34", "text": "Sale functions .", "title": "", "metadata": ""}
{"_id": "00912fa07ae90f96d24916a40d6ba2cd", "text": "Allows to refund the ETH to destination address .", "title": "", "metadata": ""}
{"_id": "edc6ff9c788a1370298ed1acb3cd80b6", "text": "ERC223 transfer CWCs with data .", "title": "", "metadata": ""}
{"_id": "4c00e45e82b723fb1e8005a7813c2d1a", "text": "Modifier , which only allows to execute if house stake is high enough .", "title": "", "metadata": ""}
{"_id": "d18c03541d385a62fafdfea3a83a2b33", "text": "inc Supply tokens .", "title": "", "metadata": ""}
{"_id": "6b52b577b0c954b13e6ae9905ed09e24", "text": "Decrease permission for transfer .", "title": "", "metadata": ""}
{"_id": "155c46fe147ad5ad8a6c5e8bc68b610e", "text": "Determine if the hero training is successful or not , and the resulting genes and power .", "title": "", "metadata": ""}
{"_id": "53c6a22e929f2ba788d21b38fedee8db", "text": "New owner has to accept transfer of contract .", "title": "", "metadata": ""}
{"_id": "87680ad08bb817f4a2078331437203f8", "text": "Function to allow investors to withdraw ETH .", "title": "", "metadata": ""}
{"_id": "08fe934ca1e1959cc95889034b75b6c3", "text": "Updates the board status according to the players score .", "title": "", "metadata": ""}
{"_id": "67b6d8af9b49131f88415cb4bc86d430", "text": "Create new tokens and allocate them to an address .", "title": "", "metadata": ""}
{"_id": "ea8aa4aa5a89e28b52bbc45b8a8c7ea7", "text": "Purchase tokens for the amount of ether sent to this contract .", "title": "", "metadata": ""}
{"_id": "184873619d4d299420ca524c4e2d7141", "text": "buy en empty pixel .", "title": "", "metadata": ""}
{"_id": "875ee611de1d25af8b0779e248a8a7cc", "text": "withdraw owner fee when winner is announced .", "title": "", "metadata": ""}
{"_id": "6a889928e883fa6bb010dc07d01ce5f3", "text": "Refund ether to the investors in case of unsuccessful end of CrowdSale .", "title": "", "metadata": ""}
{"_id": "ba1af67127289e8ab9e889c77b7dd952", "text": "Set Studio Fee .", "title": "", "metadata": ""}
{"_id": "68d24b68982a7c2f5a92018230c6ea92", "text": "This function will return all of the details of our teams .", "title": "", "metadata": ""}
{"_id": "1e2d73154e7b8d8f18f37de10a7ce5df", "text": "check if certified partner can create new building in factory .", "title": "", "metadata": ""}
{"_id": "cb886033ffe0d526c3ddc95c389efbc0", "text": "For those claimed but not refund payment .", "title": "", "metadata": ""}
{"_id": "68ca9aaf72bbcdcbefd0bdc9a534e14e", "text": "calc ATM by eth per user .", "title": "", "metadata": ""}
{"_id": "5f0c1805acfece34c9a5cbc794370405", "text": "Compute the personal segment hash of a segment .", "title": "", "metadata": ""}
{"_id": "54ab005773cc7a14d09555babd5929a0", "text": "Copyright Owner will update price of license when someone issue it , it must be completed in 30 days from issue date .", "title": "", "metadata": ""}
{"_id": "b5afaa4052ed1ccee9c744aa5596c979", "text": "helps in fetching the wallet resouce balance .", "title": "", "metadata": ""}
{"_id": "e0b6b616793dd0e9f7aa02ca66174e74", "text": "Returns the storage location of crowdsale's starting sale rate .", "title": "", "metadata": ""}
{"_id": "a3327e0d44c02fed8fec029cfb36473e", "text": "Sets current ETH price in cents .", "title": "", "metadata": ""}
{"_id": "96f74cb47fea80b605a34bd901f02646", "text": "Returns a bitmap to represent the set of cards in _hand .", "title": "", "metadata": ""}
{"_id": "8b4bb51a3bff50391d141817ece11acd", "text": "counts current sale's stages .", "title": "", "metadata": ""}
{"_id": "463baffdd852464e976aa523e5b80f6d", "text": "Admin function to set attribute type descriptor text ( callable by owner only ) .", "title": "", "metadata": ""}
{"_id": "bedf7138400fc0eb78cb4a4e5fdc46c5", "text": "Closes the period in which the crowdsale is open .", "title": "", "metadata": ""}
{"_id": "65beedd00d4bf4ef5ff110c5b8b10b5f", "text": "Sets bank address .", "title": "", "metadata": ""}
{"_id": "323ae4b2bd92fd2ee27f7587e1fa3fa2", "text": "Will generate a new Narco and generate the event .", "title": "", "metadata": ""}
{"_id": "c71bc2fb3c4b5adb768dd9fe58093545", "text": "maxContribution maximum allowed amount in wei .", "title": "", "metadata": ""}
{"_id": "a41e20a4475762f4e57f87265e0bbb32", "text": "Compute the DARFtoken bonus according to the BUYment period .", "title": "", "metadata": ""}
{"_id": "85d8c558cca6279eec960475ea3f1198", "text": "deprecated , backward compatibility .", "title": "", "metadata": ""}
{"_id": "265fc32eaf6855d3ddc4f7568a299c88", "text": "allocate a new account by setting alloc to true add holder index , bump the num accounts .", "title": "", "metadata": ""}
{"_id": "ec7eedd1e2e51985453433dd819c3d40", "text": "Transfer the balance between two accounts within the fund .", "title": "", "metadata": ""}
{"_id": "d43167282045878d83aae3e8f4907613", "text": "change address of payment contract .", "title": "", "metadata": ""}
{"_id": "35767faf75ff99330ed7e714146e2f0a", "text": "Failsafe drain in case finalize failes , we need guaranteed way to transfer Ether out of this contract .", "title": "", "metadata": ""}
{"_id": "9430d6cafb1031097c2382c5e2af3e09", "text": "function to check whether the sent amount is within contribution range or not .", "title": "", "metadata": ""}
{"_id": "340866d4da60395b8c795ecf115dc181", "text": "Getter for ruling in Vote .", "title": "", "metadata": ""}
{"_id": "92d10ac305433d950f141d9ef43ad659", "text": "Sets the ICO phase 1 duration .", "title": "", "metadata": ""}
{"_id": "8e35e7b050b5ec972451647ef128e29c", "text": "compute amount of token based on 1 ETH 2400 CJT .", "title": "", "metadata": ""}
{"_id": "35f455953a60ebb8765d915a8b7efbbb", "text": "Returns the link of a node _node in direction _direction .", "title": "", "metadata": ""}
{"_id": "9805c4545aabb9d0b02bbcc4483a9888", "text": "Retrieve interest earned since last interest collection .", "title": "", "metadata": ""}
{"_id": "e5358c6fad6166bfb30c5143286e653d", "text": "Assigns ownership of a specific Game to an address .", "title": "", "metadata": ""}
{"_id": "d7c59d0a43651f771c3e46b508efb269", "text": "Returns the amount of ETH raised in wei .", "title": "", "metadata": ""}
{"_id": "f133a614a246184fcec21258e651de79", "text": "Cancel exploration in case it get stuck .", "title": "", "metadata": ""}
{"_id": "b090991fedfce9675b578346ba584509", "text": "Get a license's issueTime .", "title": "", "metadata": ""}
{"_id": "892d06b4ded191dbc69d6a8877acd32f", "text": "Revokes a prior confirmation of the given operation .", "title": "", "metadata": ""}
{"_id": "e4dc338c568c5c40712db098865c3fff", "text": "Returns a bool indicating whether a given userName has been claimed ( either exactly or as any case-variant ) .", "title": "", "metadata": ""}
{"_id": "451e491f61c667596fa41b34b2d40e73", "text": "Get the smart contract's balance out of the contract and transfers it to every related account .", "title": "", "metadata": ""}
{"_id": "bdfc8941dca64c4b6643fee0492229bd", "text": "Set the marriage status if it changes .", "title": "", "metadata": ""}
{"_id": "dc3e2b7a2dc1234e517d2f9fd220a681", "text": "Whether the transfer was successful or not .", "title": "", "metadata": ""}
{"_id": "39f6b2d732b4b4863cdfb49798db2308", "text": "Withdrawal eth to owner .", "title": "", "metadata": ""}
{"_id": "aef898747c4121746fffb55f0b1ef485", "text": "Give a single vote to proposal ( toProposal ) .", "title": "", "metadata": ""}
{"_id": "7122d8b161af6a120083e3adf0106628", "text": "Claim previously purchased tokens for an account .", "title": "", "metadata": ""}
{"_id": "30ede250b77e6c14cdd1880ad8491e8c", "text": "Sets minimal participation threshold .", "title": "", "metadata": ""}
{"_id": "09bc46b1ab6e5b9a82686380c9a553eb", "text": "Set start date .", "title": "", "metadata": ""}
{"_id": "cd0d18c9dd43c67e0a60c3f8746a11d7", "text": "calculate the tokenExchangeRate .", "title": "", "metadata": ""}
{"_id": "dbdb8a0b7b669fbf71e42fc68367d9ff", "text": "Determines the winner in a challenge .", "title": "", "metadata": ""}
{"_id": "766b4362146f66c1c8dd054f2e9585a3", "text": "Updates token name .", "title": "", "metadata": ""}
{"_id": "83bac959b0b28433169bbd4211e6e04d", "text": "Practicing Safe Math ( Division sucks ) . . . . . .", "title": "", "metadata": ""}
{"_id": "19d5b6dfaaebf4c4607c84031e23ddc4", "text": "bool Return true if the contract is in ICO .", "title": "", "metadata": ""}
{"_id": "3ced067ea79dc6f773e018b0aa9bcd9d", "text": "Update LAND .", "title": "", "metadata": ""}
{"_id": "fb2946dcf7598b19053b24671268bcb8", "text": "functions below this line are onlyLedger .", "title": "", "metadata": ""}
{"_id": "7b242848be32bd38da3773142eb297e3", "text": "Check if sender is controller owner .", "title": "", "metadata": ""}
{"_id": "b826713530c98a1d7ec2d9f4e2b9b28d", "text": "Check which player acts next .", "title": "", "metadata": ""}
{"_id": "2f4037a6cb08e5b32556b0f6c8d30f4f", "text": "Log big events ( pre-set - choice ) in relationship , time stamp is required .", "title": "", "metadata": ""}
{"_id": "a5ca00ff0e4377e25154cfb1ccc3279e", "text": "for owner to withdraw ETH from donators if there is any .", "title": "", "metadata": ""}
{"_id": "7916ed209660ea965da8958b53657f85", "text": "Sets soft cap and max cap .", "title": "", "metadata": ""}
{"_id": "4d7a70d01a76d95bb993470cbcd632ff", "text": "Propose shutdown of Melon version .", "title": "", "metadata": ""}
{"_id": "fa881653a1df8b9045deacc38c5b0e07", "text": "Adds two numbers , reverts on overflow .", "title": "", "metadata": ""}
{"_id": "1d9e6036a44d762756e1f9c355f7322c", "text": "Allows the Hydro API to delete official users iff they've signed keccak256 ( Delete ) with their private key .", "title": "", "metadata": ""}
{"_id": "88a790e33f8c288947b83576323e1b30", "text": "Returns the balance of _address .", "title": "", "metadata": ""}
{"_id": "bae954cf4e235c4d6dbc9b9713a56f30", "text": "Buys tokens .", "title": "", "metadata": ""}
{"_id": "5890ba7a74a356791c6f51e7a146759b", "text": "Get star by id .", "title": "", "metadata": ""}
{"_id": "15ab90bb4a70a05f6072762a6fc3a80e", "text": "Admin Tool .", "title": "", "metadata": ""}
{"_id": "4f77813491bc94b0e9ced39119de37a1", "text": "To display on website .", "title": "", "metadata": ""}
{"_id": "0b09f18bf797db34112d5e73ade7defc", "text": "Mint a new amount of tokens .", "title": "", "metadata": ""}
{"_id": "acde15f8c674e47a7e29ab728b7f7aa8", "text": "Revoke the transaction confirmation .", "title": "", "metadata": ""}
{"_id": "20249981534b6e58acd3a22822a87c2c", "text": "Computes the current price of an auction .", "title": "", "metadata": ""}
{"_id": "628fd1207822b8e98730b76e1f2deaf0", "text": "Gets the length of locked values for an account .", "title": "", "metadata": ""}
{"_id": "54a85cba5526e1e54a798590cb9b2ca8", "text": "set meta information .", "title": "", "metadata": ""}
{"_id": "58f65d3fd65650f524c9b8373db93873", "text": "create a pixel .", "title": "", "metadata": ""}
{"_id": "77835fec7f21ab7fbd389d4fb2509d04", "text": "true if the reservation has raised enough money to be a successful .", "title": "", "metadata": ""}
{"_id": "d3346e91b4156a5b4885e7bbe4e7c8c8", "text": "Provides a registered token's metadata , looked up by address .", "title": "", "metadata": ""}
{"_id": "d94cb90ac1ad771d4a1ee6c0ac60dabe", "text": "Internal interface ( extensible ) .", "title": "", "metadata": ""}
{"_id": "66d6422f6ca43cdd0fd92ab0ed7aa63e", "text": "Deletes the animals of a given player .", "title": "", "metadata": ""}
{"_id": "289f7298abec518c8463e43988845bc9", "text": "Extract 16-bit worth of data from the bytes stream .", "title": "", "metadata": ""}
{"_id": "b4b1d428ebced35bade50e8c4eab5107", "text": "Manually send tokens to this .", "title": "", "metadata": ""}
{"_id": "b4a6c8bb7c9ff62793239c5f51caf58f", "text": "Determines whether the provided proposal ID has a challenge which can be resolved .", "title": "", "metadata": ""}
{"_id": "cddfda90f59344d2f851e1f6f41e645b", "text": "donate to dev .", "title": "", "metadata": ""}
{"_id": "4c16b07800674043a4d8307fb4486b76", "text": "Duplicate Solidity's ecrecover , but catching the CALL return value .", "title": "", "metadata": ""}
{"_id": "7f9dc9a836c901dfd2cd70c17c7b6543", "text": "Checks if a handle is valid : a-z , 0-9 , _ .", "title": "", "metadata": ""}
{"_id": "01b9fd9b31d4019e7e1f4c236ac42008", "text": "Allows to create a subdomain ( e . g .", "title": "", "metadata": ""}
{"_id": "f134c6c907567dfd0311e01920adaa97", "text": "Withdraw any accumulated question fees from the specified address into this contract .", "title": "", "metadata": ""}
{"_id": "bea7f12071ff4307c68aa4b589e3f0eb", "text": "Assigns ownership of a particular Cutie to an address .", "title": "", "metadata": ""}
{"_id": "6675c9f41b6a1f5c9ef122917a5a53f5", "text": "Gives admin the ability to update the address of reciever contract .", "title": "", "metadata": ""}
{"_id": "b05f953e857e7e54a6eb6fa4d5bc3608", "text": "private function .", "title": "", "metadata": ""}
{"_id": "30689f00cd7cbc68062f7efe15efc467", "text": "disapprove an investor .", "title": "", "metadata": ""}
{"_id": "2c42211b730e08c1180d448040b23c81", "text": "Function to add new owner in mapping 'owners' , can be call only by owner .", "title": "", "metadata": ""}
{"_id": "a25a155a3ff840e179bb0a6b0797ccc5", "text": "Withdraw a bid .", "title": "", "metadata": ""}
{"_id": "d019007d9f1ff8f0d62f6bcc7d193d53", "text": "Admin management .", "title": "", "metadata": ""}
{"_id": "24e4e14705e6ffaf0d67b27f85d8ee6d", "text": "Only allow access from the latest version of an 0racle contract within the Zer0net after deployment .", "title": "", "metadata": ""}
{"_id": "3ed1ef033aaff35327654ec6ab97e3d8", "text": "data model 0 - identity 1 - cooldownEndBlock 2 - level 3 - rating 4 - index .", "title": "", "metadata": ""}
{"_id": "6dd6b870b49210b136d3332bd0326608", "text": "Calculates how much BOB tokens this contract can buy ( during current buyback round ) .", "title": "", "metadata": ""}
{"_id": "37bbed3912e6ced2a8cbc44df3b039a3", "text": "Calculates amount of weis needed to buy more than one metadollar .", "title": "", "metadata": ""}
{"_id": "2698c16e71638fbba3d14707c8b96a54", "text": "withdraw funds ( no external calls for safety ) .", "title": "", "metadata": ""}
{"_id": "2ca66af929ca86c615447a0de79cc183", "text": "Emission cap setting up .", "title": "", "metadata": ""}
{"_id": "b3e87c0779d0c4a5ce2b4c1214cdcc25", "text": "external addresses ( wallets ) will have codesize 0 .", "title": "", "metadata": ""}
{"_id": "1bc1dcca37bc0e808c45d4c5b8540c5f", "text": "smallest divisible token units ( token wei ) in one token .", "title": "", "metadata": ""}
{"_id": "96f2b03f2d6f5adb0a972d2fd56fcd31", "text": "Checks if a given address currently has transferApproval for a particular Dog .", "title": "", "metadata": ""}
{"_id": "d5e07a55da7f6f396076b0f3de6328d6", "text": "solhint-disable - next-line no-simple - event-func - name .", "title": "", "metadata": ""}
{"_id": "a77377822a7751eebf36d2369e5c7dcd", "text": "Withdraw all Ether ( fee ) from auction contract to token contract .", "title": "", "metadata": ""}
{"_id": "0a434a9a1a6c8a5dd9022126c3b1c2df", "text": "Transfer a Asset owned by another address , for which the calling address has previously been granted transfer approval by the owner .", "title": "", "metadata": ""}
{"_id": "d51ab255e98bcc25123c3efe118aaae4", "text": "asset implementation contract address .", "title": "", "metadata": ""}
{"_id": "75af337845e02afdf5bd9e1c7f9d4bbc", "text": "Update how much the owners can withdraw based on how much time has passed since the end of the ICO .", "title": "", "metadata": ""}
{"_id": "26d61e47d030984cd944089279dcfc73", "text": "Change the commission fee for the contract .", "title": "", "metadata": ""}
{"_id": "b0380b15ff94f7850e2834276bc8f990", "text": "Checks if amount was sent .", "title": "", "metadata": ""}
{"_id": "d62d5ee16130f53b055ec894b9e01f68", "text": "set RNG callback gas .", "title": "", "metadata": ""}
{"_id": "8e56865cb94dfd186be54d730a61578c", "text": "allow people to buy Gift .", "title": "", "metadata": ""}
{"_id": "aaa38f2abb28f58374907e8bdb3cd74d", "text": "ETH Owner refund money .", "title": "", "metadata": ""}
{"_id": "5d7618444b055b4160aaed8cc8276aa4", "text": "Returns the game completed at the given index .", "title": "", "metadata": ""}
{"_id": "2bac47e17fbc2e975c63cc5f9ba47e09", "text": "Pay with Gold .", "title": "", "metadata": ""}
{"_id": "9e88b17ee729cdd7b9473fe15db3311a", "text": "Counts the number of 1s in a bitstring .", "title": "", "metadata": ""}
{"_id": "11278a0fe238e9688251abbea17deceb", "text": "Approve mint request , can be call only by owner which don't call this mint request before .", "title": "", "metadata": ""}
{"_id": "266151eef1ffd4407bbb3a2762ad310a", "text": "Updates the minimum payment required for calling startPVE ( ) .", "title": "", "metadata": ""}
{"_id": "9b5b9b4779fdf906bd48c6aaabd6564a", "text": "Assign tokens to investor with locking period .", "title": "", "metadata": ""}
{"_id": "4a834dfc071b018d384009cd470e3d0f", "text": "Get price at which token group purchased _tokenId token .", "title": "", "metadata": ""}
{"_id": "69edc0c7d2ee44f27dc69dcc0260b447", "text": "this is called when NTZ are deposited into the power pool .", "title": "", "metadata": ""}
{"_id": "a3c5e29c66f24c5bc1bd88d64cbcf0b2", "text": "Get bonus percent by time .", "title": "", "metadata": ""}
{"_id": "19141a3368c20b97ea05232db8af4631", "text": "ETH-AIX exchange rate .", "title": "", "metadata": ""}
{"_id": "d92769080afeb153f872ab9e77d0116c", "text": "Transfer From .", "title": "", "metadata": ""}
{"_id": "7b08b76b42b673fd91a309e0be22d51d", "text": "called by the owner to set a new vendor .", "title": "", "metadata": ""}
{"_id": "6a8f291172e891bb7202ce1ba4d7ee6f", "text": "Users want to know theirs or someones current bid .", "title": "", "metadata": ""}
{"_id": "cd8d64f8e907227378c258628ff0c09f", "text": "modifier to allow actions only for whitelisted users .", "title": "", "metadata": ""}
{"_id": "9415c17676de76335db36d8412cd89cd", "text": "Function of disactivation of verification address .", "title": "", "metadata": ""}
{"_id": "fada023db752c00adea923c893e0b304", "text": "Setup redemption fee value .", "title": "", "metadata": ""}
{"_id": "c097e9cd329c13b60a0a3d16f58262eb", "text": "addresses Underlying token addresses .", "title": "", "metadata": ""}
{"_id": "af6a662178cf16b551031ed776e3bd1d", "text": "Tokens are sold by sending them to this contract with ApproveAndCall .", "title": "", "metadata": ""}
{"_id": "db0c27cd0db4dc7fcc8a135ca6ddd33c", "text": "allow for all who want stand client .", "title": "", "metadata": ""}
{"_id": "260d6025d20bc0e9be4768e2517aec9b", "text": "owner of token .", "title": "", "metadata": ""}
{"_id": "46a6c254332dc63734e720eee9646ffa", "text": "revert operation if caller is not owner of wallet specified in constructor .", "title": "", "metadata": ""}
{"_id": "d9b826d461ee1a206caa604983e309f4", "text": "Modifier that restricts function caller .", "title": "", "metadata": ""}
{"_id": "e72903d50a56417304345a2b61e7ad0c", "text": "A version of auth ( ) which implicitly returns garbage instead of throwing .", "title": "", "metadata": ""}
{"_id": "7286f7fe8109fe7295c9e712484c8324", "text": "Remove address from the black list .", "title": "", "metadata": ""}
{"_id": "36be465437c602997940ab848f35c0bd", "text": "Withdraws all remaining ( not sold ) tokens from the crowdsale contract .", "title": "", "metadata": ""}
{"_id": "05505e5628b53530baf7d819e8bc7a74", "text": "Marks a token as an ERC777 token .", "title": "", "metadata": ""}
{"_id": "b00508b46d350c8a4b297e83a1632e58", "text": "Manual claim .", "title": "", "metadata": ""}
{"_id": "650e19a78a58b2f77a2fd04fd74af874", "text": "onlyReviewer Approves a specific milestone .", "title": "", "metadata": ""}
{"_id": "dea78c414d36ad6c7b89035722938ffc", "text": "calculate the keys that the user can buy with specified amount of eth return the eth left .", "title": "", "metadata": ""}
{"_id": "1c935bf21de4aab76f9e19d13ae260d8", "text": "Function will transfer the tokens to investor's address .", "title": "", "metadata": ""}
{"_id": "6d764cfa58458319e83617a00419e329", "text": "insert n after prev .", "title": "", "metadata": ""}
{"_id": "a53aea1809867a210f1284b403e82932", "text": "in the event ether is accidentally sent to our contract , we can retrieve it .", "title": "", "metadata": ""}
{"_id": "b0d09f34df9db2be123f3e1eb8a85334", "text": "Owner can transfer out any ERC20 tokens sent in by mistake .", "title": "", "metadata": ""}
{"_id": "738d830d9f2675dea8e340f5a92c749f", "text": "Adds a sale to the list of open sales .", "title": "", "metadata": ""}
{"_id": "1fd8cbd3c499c392877ded536dcb7223", "text": "Manipulators' end .", "title": "", "metadata": ""}
{"_id": "d518e170079ab5eda3219efa13184873", "text": "Checks a status if and returns if it's an end game .", "title": "", "metadata": ""}
{"_id": "5c1dc90c5c3c20ba59e19cb77c10f6db", "text": "Finish PreICO stage and start ICO ( after time comes ) .", "title": "", "metadata": ""}
{"_id": "f47a2a3ba38639ffabd4c32bc2873a88", "text": "Total hash rate of a miner .", "title": "", "metadata": ""}
{"_id": "886e66bff334dabff427c143dd35e7e2", "text": "Create or update a claim .", "title": "", "metadata": ""}
{"_id": "8dfc6690129c889063ecfb3fa3dd545e", "text": "deleteAccount deletes user's claimed token .", "title": "", "metadata": ""}
{"_id": "64482d9cd28295839ed7b167f0d46350", "text": "true if the transaction can buy tokens overriding Crowdsale validPurchase to add extra cap logic .", "title": "", "metadata": ""}
{"_id": "d96508344e2545ae239b6c63c5135453", "text": "This function can only be called by the onwers of the ICO contract .", "title": "", "metadata": ""}
{"_id": "acefe9efd340bed965f26c94b2aed85d", "text": "Gets whether or not the specified address is currently an account minter .", "title": "", "metadata": ""}
{"_id": "4791826d64b091048e88aa4b6c170408", "text": "Function that sets the accounts that can do transfers .", "title": "", "metadata": ""}
{"_id": "d16e473078393110852e43c6486a08e3", "text": "An internal function to calculate the power of player , or difficulty of a dungeon floor , if the total heroes power is larger than the current dungeon floor difficulty , the heroes win the challenge .", "title": "", "metadata": ""}
{"_id": "aa5933fea2fe8cdad73379abeda05613", "text": "Exchange specific functions .", "title": "", "metadata": ""}
{"_id": "d48307859e80e53f2d9043d3f1855a65", "text": "transfer tokens if you have a delegated wallet .", "title": "", "metadata": ""}
{"_id": "943b5e48b4bff3bd3c46b9e5535fbe3d", "text": "Returns the absolute value of _val .", "title": "", "metadata": ""}
{"_id": "6671e91a712a9be43e946f0cf09e1cce", "text": "standing order address .", "title": "", "metadata": ""}
{"_id": "e65b303e49eb9b44d583c158437f8647", "text": "Assigns ownership of a specific Girl to an address .", "title": "", "metadata": ""}
{"_id": "b5661ade0e95065645bcacacab3c5671", "text": "Tier calculation function .", "title": "", "metadata": ""}
{"_id": "f78bd9e6237a1d3296cc0b320058720e", "text": "Admin panel .", "title": "", "metadata": ""}
{"_id": "ecf58d44b31ddd24bdabe89355cd121a", "text": "Cancel an offer .", "title": "", "metadata": ""}
{"_id": "e6d3d3a2205dcb456224e2cf62f65c87", "text": "Amount of fida you would get for any amount in wei .", "title": "", "metadata": ""}
{"_id": "362c12fddad9906f60ad7d620a24178d", "text": "Maintenance functions .", "title": "", "metadata": ""}
{"_id": "9160c8ca36dcddc6a449755b6f189967", "text": "returns whether or not the provided _account is an authorizer .", "title": "", "metadata": ""}
{"_id": "3f35d587690adca3bacc1d71b6c37e55", "text": "Converts the input to the opposite endianness .", "title": "", "metadata": ""}
{"_id": "11fb77b8da22df0062f50f003be6b182", "text": "Function that returns the ( dynamic ) price of buying a finney worth of tokens .", "title": "", "metadata": ""}
{"_id": "6b75d8884f77675e82461bb620a44a92", "text": "ico status ( based only on time ) .", "title": "", "metadata": ""}
{"_id": "aaa58eaffe81fee9beb2910136cae12a", "text": "The observers address .", "title": "", "metadata": ""}
{"_id": "ead43ec6ff7005cd85ae6bb8a4feadc4", "text": "Calcurate to BonusRate by Date .", "title": "", "metadata": ""}
{"_id": "44a762aab49156e3178abcecb224ecd4", "text": "Return the current ruling of a dispute .", "title": "", "metadata": ""}
{"_id": "bd426e359903d996d63bb69b1bb06ab8", "text": "Sets exhange rate , ie amount of tokens ( 10 18 CDT ) for 1 wei .", "title": "", "metadata": ""}
{"_id": "6ac688fa2c185a5fce5fc258842ffcc6", "text": "Handles transfer of tokens for vesting grants .", "title": "", "metadata": ""}
{"_id": "7f498b1577fe9d80360b0629bdd9912f", "text": "bidder withdraw excess funds ( or all funds if bid was too low ) .", "title": "", "metadata": ""}
{"_id": "66661fcfbe6e3ceebf1e699250f8482c", "text": "release token by token contract address .", "title": "", "metadata": ""}
{"_id": "6ef19ff14cac46567bff5273f75e6f6e", "text": "Called after crowdsale finishes .", "title": "", "metadata": ""}
{"_id": "69d0cb0fb011943e77bd6d5fc13f9721", "text": "Private function to manage GrapheneTech purchases by calculating the right number of tokens based on the value sent .", "title": "", "metadata": ""}
{"_id": "3feadee6791710b5c0fed5274392bd8e", "text": "Modify the contract .", "title": "", "metadata": ""}
{"_id": "a60d4cc7cb6ca901d6b7a72ff28df9e2", "text": "Compute the cost of appeal .", "title": "", "metadata": ""}
{"_id": "acae31a6c5fe0b531a5866a3577b88a0", "text": "Credits dividends , burns tokens .", "title": "", "metadata": ""}
{"_id": "b32dd402ddb334de1d9c1a9297b183a4", "text": "called by allocated address to release the token .", "title": "", "metadata": ""}
{"_id": "a6d1c3c1974b682dea67fbf4a462b026", "text": "Helper internal functions .", "title": "", "metadata": ""}
{"_id": "7485e248f659bef073e9f1427fbe65f9", "text": "Sets the casino contract address .", "title": "", "metadata": ""}
{"_id": "ba4d992ea87a8addc4215b2d43dc56b3", "text": "Returns true if any of the token sale stages are currently running .", "title": "", "metadata": ""}
{"_id": "7155ef01a23e7085ee8121856a103243", "text": "Tokens multisend from owner only by owner .", "title": "", "metadata": ""}
{"_id": "f2af19f3c943c46578a97a6548a01731", "text": "the first step when upgrading a converter is to transfer the ownership to the local contract .", "title": "", "metadata": ""}
{"_id": "795e44b12479dba94125c5a82a1d30e1", "text": "freeze ? Prevent Allow from from sending receiving tokens .", "title": "", "metadata": ""}
{"_id": "8c164bd07de33660b9d6e20e65c276ef", "text": "Mint tokens for Airdrops ( only external ) by Alber Erre .", "title": "", "metadata": ""}
{"_id": "2358d6a17c074b32082e78195f0bdbf6", "text": "Modifier to make a function only callable by the COO .", "title": "", "metadata": ""}
{"_id": "77d777b682a072741536c1ef6654d71b", "text": "Function to mint tokens , it can not exceed the maxSupply value .", "title": "", "metadata": ""}
{"_id": "27a7ef4f4c07c1107e8aad9e298de3b6", "text": "Return how much tokens will be minted as per algorithm .", "title": "", "metadata": ""}
{"_id": "552663a33334e78a3a622f4f90be4b60", "text": "dealer can withdraw the remain ether after refund or closed .", "title": "", "metadata": ""}
{"_id": "4501e2a510091be8d4e6eccedb50e3ca", "text": "overriding transferFrom method to include the onlyPayloadSize check modifier .", "title": "", "metadata": ""}
{"_id": "d938ce509b0d20c7f991207f7a98fcb2", "text": "Allows transfer of the tokens ( with additional _data ) after locking conditions checking .", "title": "", "metadata": ""}
{"_id": "1d83b8f2bf9fb0d5ea4a11f189c3ed9b", "text": "Core fonction .", "title": "", "metadata": ""}
{"_id": "03ad2f686e1e8d321fa91b8cce4fc8e7", "text": "deposit 'amount' of EUR-T to address 'to' .", "title": "", "metadata": ""}
{"_id": "27a6bb7353039f5bbf6d41586dc6dd49", "text": "Owner can allow a crowdsale contract to revoke tokens .", "title": "", "metadata": ""}
{"_id": "c0157f23f7bc0664861dbc0116eb7300", "text": "override transfer token for a specified address to add validDestination .", "title": "", "metadata": ""}
{"_id": "a70025db71843f76b5ccb75b9d4d2e4b", "text": "transfers ETH held by the contract to the owner .", "title": "", "metadata": ""}
{"_id": "4f886b61bc02168a94f063fe5154927d", "text": "Helper routine to move 'processed' bets into 'clean' state .", "title": "", "metadata": ""}
{"_id": "8f367fc652b141ad57b3847f2e47bcc0", "text": "Allow POLY allocations to be withdrawn by owner , delegate , and the STO auditor at appropriate times .", "title": "", "metadata": ""}
{"_id": "1f65c8178ef8934ecab9fd1e477b9934", "text": "Allow admins to change token contract address , in case the wrong token ends up in this contract .", "title": "", "metadata": ""}
{"_id": "5711a821acc76476fa76f883438bf89e", "text": "The owner can update the rate ( GGC to ETH ) .", "title": "", "metadata": ""}
{"_id": "a6a37183268a36d380fa8612d9be0371", "text": "Locks msg . sender .", "title": "", "metadata": ""}
{"_id": "e4f62e0c039c944b44b0bb28b36d34c3", "text": "return the next worse offer in the sorted list the worse offer is the higher one if its an ask , and lower one if its a bid offer .", "title": "", "metadata": ""}
{"_id": "852adedbe3f75ac9fed626805c2becbc", "text": "When new game is created it needs to be approved here before it starts .", "title": "", "metadata": ""}
{"_id": "f49ae8d386ea99b8f231d650fc22fcc1", "text": "Alternatively to airdrop ( ) ; tokens can be directly sent to beneficiaries by this function .", "title": "", "metadata": ""}
{"_id": "a42ab13d514dcb7132af83dea364eba0", "text": "called by CrowdsaleController to transfer reward part of ETH collected by successful crowdsale to Forecasting contract .", "title": "", "metadata": ""}
{"_id": "b5c361177bb4dffeb0909850f8c32ce8", "text": "Overrides default ERC20 .", "title": "", "metadata": ""}
{"_id": "b5ae216d63952939f357a90ff70be438", "text": "Volumes and corresponding release dates .", "title": "", "metadata": ""}
{"_id": "c9596574c70a30e42ece686c58fdb3de", "text": "unlocks investors funds , see unlockInvestor for details .", "title": "", "metadata": ""}
{"_id": "c11840c159f41d733de5223b5ec81989", "text": "Complete the transaction by remitting the exact amount of PRVD tokens due .", "title": "", "metadata": ""}
{"_id": "7f52e5b1dc5411f60e89369a0d7e2255", "text": "Function to give tokens to Airdrop participants .", "title": "", "metadata": ""}
{"_id": "fd80b3a2398326b5f6307e89d43f54e6", "text": "Public Funds Manipulation - deposit previously-approved base tokens .", "title": "", "metadata": ""}
{"_id": "eacff6606a6554b84fab798999ddf416", "text": "Transfer LCD tokens .", "title": "", "metadata": ""}
{"_id": "4683ae7c7ef42cf9f91d03a1615d88f0", "text": "we want to be able to check all bonuses in already deployed contract that's why we pass currentTime as a parameter instead of using now .", "title": "", "metadata": ""}
{"_id": "c666a759bbde5a260cd938fcfd3a69b2", "text": "Adds two addends together , returns the sum .", "title": "", "metadata": ""}
{"_id": "7d665afb462d7877918ec218c061639f", "text": "Ensure the sale has not begun .", "title": "", "metadata": ""}
{"_id": "9760b9b445373c78557722e773ba2746", "text": "add an address to a pixel's approved list .", "title": "", "metadata": ""}
{"_id": "b0a57c6c566ac46cb97f422dd6048643", "text": "Shorthand access to definedGames .", "title": "", "metadata": ""}
{"_id": "1b3f147941fff689b7b2555e8b68c830", "text": "Retrieve all contracts that msg . sender .", "title": "", "metadata": ""}
{"_id": "12612a57323761c706414827e532859f", "text": "Approve an address to send tokenAmount tokens to msg . sender .", "title": "", "metadata": ""}
{"_id": "3fe2d59335dce02ae4a32516f8cb868f", "text": "Change info hash , must be admin , registrant or Rivetz .", "title": "", "metadata": ""}
{"_id": "4abdf6b1064d486a0e54faeba03150f6", "text": "Withdraw tokens or other users .", "title": "", "metadata": ""}
{"_id": "bfc74febae139befa4e058e1e0502a15", "text": "calculate number of tokens buyer get when sending 'ethSent' ethers after 'ethDepostiedSoFar already reeived in the sale .", "title": "", "metadata": ""}
{"_id": "6e412739db13602d898468c8f866a5e2", "text": "Set the quantity of tokens necessary for vault access creation .", "title": "", "metadata": ""}
{"_id": "25718bec06182e49e77188d9015ffdb5", "text": "Determine the lowest rate to acquire tokens given an amount of donated ethers .", "title": "", "metadata": ""}
{"_id": "a6037fdd6eeb91021b2c1574c9879b76", "text": "throws if person sending is not authorised or sends nothing .", "title": "", "metadata": ""}
{"_id": "ab7c9cbed69733c54fcd607a66d11957", "text": "called by crowdsale contract .", "title": "", "metadata": ""}
{"_id": "2706eefb7387b2965b64b110cff2206a", "text": "The address of the proxy admin .", "title": "", "metadata": ""}
{"_id": "4fe3cb9c9e297ba84c27add72341e153", "text": "Admin can call the payWinner ( ends lottery round starts a new one ) if it takes too long to reach the threshold .", "title": "", "metadata": ""}
{"_id": "8c1172a095a4834a3b1b8c201eb7379f", "text": "Retrieving the adopters .", "title": "", "metadata": ""}
{"_id": "c06928de7a62d92c466aeb9a8f283832", "text": "Clears the number of tokens bought by an investor .", "title": "", "metadata": ""}
{"_id": "493c72dd0d5b19a93a9b8075de706caf", "text": "Pseudorandomly elect a currently active transcoder that charges a price per segment less than or equal to the max price per segment for a job .", "title": "", "metadata": ""}
{"_id": "5302b4567f84c4f74308b7a74bc95552", "text": "Updates current perriod : looking for a period with a minimmum date ( timestamp ) that is greater than now .", "title": "", "metadata": ""}
{"_id": "96316ba6496faad7bc2d4af1f9b0651d", "text": "Transfer tokens from another address .", "title": "", "metadata": ""}
{"_id": "b68f37c7628cabd31fa2e78d86135efe", "text": "change ICO State .", "title": "", "metadata": ""}
{"_id": "a3b738b39c83d0381ae2246dc0ef8046", "text": "changes Charon's boat , i . e .", "title": "", "metadata": ""}
{"_id": "db488e3d217cb131f5f6a3c4258510a5", "text": "Restrict minting by the MAXIMUM_SUPPLY allowed .", "title": "", "metadata": ""}
{"_id": "9ec39d782cec2162ae67e66bf245ba31", "text": "updates the priceFeedSource .", "title": "", "metadata": ""}
{"_id": "c74ed0533d284ccde4c3d80720496b37", "text": "Increases the approval of the spender .", "title": "", "metadata": ""}
{"_id": "1cf7e603862f73ee4774c54a24af3680", "text": "recordDealRefundReason creates an event of not paid deal that was cancelled .", "title": "", "metadata": ""}
{"_id": "39b77dfef3672308ba9bf313685a6176", "text": "withdraw available funds from contract .", "title": "", "metadata": ""}
{"_id": "d678edd06abd2cb233d844d3ae0fb200", "text": "Send Tokens tokens to a buyer : and KYC is approved .", "title": "", "metadata": ""}
{"_id": "b708228e287171649782832a2a14554e", "text": "Liquidate your tokens for ETH , if this contract has sufficient ETH .", "title": "", "metadata": ""}
{"_id": "09209977971f167df3377838854bd170", "text": "Removes authorizion of an address .", "title": "", "metadata": ""}
{"_id": "599fc8227714c67969705ed7b3197cab", "text": "Add a metadata of an object .", "title": "", "metadata": ""}
{"_id": "fb9775b819b28096331b1131d48e77b2", "text": "Throws if preICO hard cap will be exceeded after minting .", "title": "", "metadata": ""}
{"_id": "c794dbd41e3659fb67163052aff89b97", "text": "match orders with admins involved , only admin .", "title": "", "metadata": ""}
{"_id": "f58e5bf88a17e66cee4401dfb60b2a67", "text": "Create _amount tokens and send it to _to .", "title": "", "metadata": ""}
{"_id": "093f104ee24d8894fadefd94f13322a6", "text": "Returns the length in runes of the slice .", "title": "", "metadata": ""}
{"_id": "dffa07ca118d6a7be3618b9130207ce7", "text": "Function to estimate airdrop amount .", "title": "", "metadata": ""}
{"_id": "76a060b7a7875a83e55f1d8b54945981", "text": "Trust _sender and spend _value tokens from your account .", "title": "", "metadata": ""}
{"_id": "9a5a4618ea74eb56606fdbdf2a464e3b", "text": "submitHKGProposal - submit proposal to request for partial HKG funds collected .", "title": "", "metadata": ""}
{"_id": "48fb550e2f183f17fd63edb08fe1a346", "text": "Converts all 10MTI tokens approve ( ) 'd by msg . sender .", "title": "", "metadata": ""}
{"_id": "27d775f3828f70ac1a6131ad8f02ad19", "text": "Check whether exist Unit with same x any y coordinates and it was sold already in order to prevent over writing .", "title": "", "metadata": ""}
{"_id": "bc5d28837e8a8955aa4a681ab0ff7054", "text": "param1 uint Percent of royalty partners .", "title": "", "metadata": ""}
{"_id": "79eb041150293c3a45f136cfaa4c0bca", "text": "Transfers tokens held by lock .", "title": "", "metadata": ""}
{"_id": "ff11c80e6e844b3b88996914c50a3571", "text": "Transfer a Warrior owned by another address , for which the calling address has previously been granted transfer approval by the owner .", "title": "", "metadata": ""}
{"_id": "c04a55254f3b1275c98777d38cc95ca6", "text": "To enable transferring tokens from company inventory .", "title": "", "metadata": ""}
{"_id": "1b8a745ad9b8b90c09dac6286ed663c3", "text": "Allow to change the current stage .", "title": "", "metadata": ""}
{"_id": "867a76fd85ac692d87e77f7d0ffc6a3e", "text": "Allows owner to check the paused status .", "title": "", "metadata": ""}
{"_id": "f2a12137a96e909a6c0e0bc40a824a9b", "text": "Unauthorize external contract to transfer .", "title": "", "metadata": ""}
{"_id": "0b2af71abe48361e74d90891ef814ed0", "text": "First calculate the auction which contains the given tick and then calculate auction start time of given tick .", "title": "", "metadata": ""}
{"_id": "f0ac50bb2b37bb17a9b4d45f3310a4ce", "text": "AnimatedProject : End Getting Token .", "title": "", "metadata": ""}
{"_id": "160d1cacf19cbb42ed0ede4bcd33f755", "text": "makes transfer possible if tokens are unfrozen OR if the caller is a sale account .", "title": "", "metadata": ""}
{"_id": "a80a3127f4e82db33ee7450b184ef1a2", "text": "This modifier stops anyone else from using this contract .", "title": "", "metadata": ""}
{"_id": "6caa58322043db91468b1f6eb138fd8e", "text": "Burn event possibly called by the controller on a burn .", "title": "", "metadata": ""}
{"_id": "7a5aa7f24a9fe23c7ce9734e9bbe08a8", "text": "The external function to get the dungeon run details in one call .", "title": "", "metadata": ""}
{"_id": "2e4b8fc3d59917152b26b96dae157ea3", "text": "constant function returns the current GUP price .", "title": "", "metadata": ""}
{"_id": "21ebe26ea247e12db35c794a9c6591ad", "text": "Replaces an owner _from with another _to .", "title": "", "metadata": ""}
{"_id": "25b145a7f3153a7cc2d9f68f57cab013", "text": "update the ETH / XAIT rate .", "title": "", "metadata": ""}
{"_id": "7073be9c891c909e44017c42284fd4bb", "text": "Finds Ethreum Address if given an existing socket address .", "title": "", "metadata": ""}
{"_id": "423e3534710c4a121f8c9235d2775d69", "text": "Only owner is allowed to do this .", "title": "", "metadata": ""}
{"_id": "49f150de3965d44fe28c4dfe8e7cdccc", "text": "Checks to see if we are allowed to change the crowdfund contract .", "title": "", "metadata": ""}
{"_id": "928a27832d40a6903273f73ae247011f", "text": "Add pre-sale purchased tokens only owner .", "title": "", "metadata": ""}
{"_id": "76f83eef399d0d3013b253a519b64229", "text": "use token address ETH_TOKEN_ADDRESS for ether .", "title": "", "metadata": ""}
{"_id": "467d99478f7c4747f9d8585dee08aa27", "text": "Finalize sale and perform cleanup actions .", "title": "", "metadata": ""}
{"_id": "e60fab089256ec1f44502cdce24fb535", "text": "read the balances of the fees collectors addresses .", "title": "", "metadata": ""}
{"_id": "a86299833238698701949cbfce1c09c2", "text": "Function to receive transaction from oracle with new ETH rate .", "title": "", "metadata": ""}
{"_id": "b43514d19ce45051d40329f32fd50bb2", "text": "Method to fetch processed ore details .", "title": "", "metadata": ""}
{"_id": "02823db5176864226596d2be1c8eac5b", "text": "Token related operations .", "title": "", "metadata": ""}
{"_id": "eb16682e2d8d3c79435870005e040523", "text": "Call validateOrderParameters - Solidity ABI encoding limitation workaround , hopefully temporary .", "title": "", "metadata": ""}
{"_id": "4e869a8346bed3a9623192ccf484d2da", "text": "Check internall balance of this .", "title": "", "metadata": ""}
{"_id": "cf4fa906862c75122a9cc1bbb2a89731", "text": "Returns all the relevant information about a specific place .", "title": "", "metadata": ""}
{"_id": "93e2f4a5c8335db3d8ba8b510c3ad130", "text": "Generate a sequence of bottle cap values to be used for production and send the respective total Beercoin value to the contract for keeping until a scan is recognized .", "title": "", "metadata": ""}
{"_id": "af55cb6b6b2b792d987a38d7c9c7aa10", "text": "Start-stop contract functions : transfer , approve , transferFrom , approveAndCall .", "title": "", "metadata": ""}
{"_id": "9b08017f199e20b1a885c9218e16e74a", "text": "Contract Specific functions .", "title": "", "metadata": ""}
{"_id": "2692e6819487affa002e799741a2aa9e", "text": "Allows the owner to set a new owner address .", "title": "", "metadata": ""}
{"_id": "a92748634eb62a8d4568c2f7e643de55", "text": "Get allowance .", "title": "", "metadata": ""}
{"_id": "c7c358edc4ea4aab447c51e463b0e4f1", "text": "Minting can only happen when minting is not finished .", "title": "", "metadata": ""}
{"_id": "1427b8cde1aada12a4ae89febf23be4f", "text": "change freezing time for megacandy .", "title": "", "metadata": ""}
{"_id": "494d3798cf980366b25770aa8692f664", "text": "self : a storage pointer members : an array of addresses ppms : an array of integers that should sum to 1 million .", "title": "", "metadata": ""}
{"_id": "99aae91d5c5f4abd0a3c67a6962d752f", "text": "Change Name .", "title": "", "metadata": ""}
{"_id": "f1c623fc4a9f4a182b39a68ad22db584", "text": "Execute a transaction using money from this wallet .", "title": "", "metadata": ""}
{"_id": "55ff8ad1caba8a84e284b002bde5c84e", "text": "withdraw funds directly from contract .", "title": "", "metadata": ""}
{"_id": "51f8b62252822acaf87af9f5615dde79", "text": "Add transaction .", "title": "", "metadata": ""}
{"_id": "1627bffe40649088cfedd0612f937ae9", "text": "Allows the owner of a listingHash to decrease their unstaked deposit .", "title": "", "metadata": ""}
{"_id": "609f97ec01d780b9a6ac235a81509bf2", "text": "Marks an address as being approved for transferFrom ( ) .", "title": "", "metadata": ""}
{"_id": "0efda83f5fdc572a229acf68e964c928", "text": "given an array of ids , returns whether or not this composition is valid and unique for when only base layers are allowed does not assume the layers array is flattened .", "title": "", "metadata": ""}
{"_id": "b015a8b0675fbd61c9d182802ea3462e", "text": "Multiple token transfers from one address to save gas and time .", "title": "", "metadata": ""}
{"_id": "72570d5992414126fbe3e410f47243ba", "text": "Remaining amount of tokens available for purchase during mainsale ( excluding bonus tokens ) .", "title": "", "metadata": ""}
{"_id": "849a1405290ac92e7aa192b08575f805", "text": "Extra function .", "title": "", "metadata": ""}
{"_id": "3e2b019762e780e038085850fb9fd822", "text": "Actions Payable .", "title": "", "metadata": ""}
{"_id": "934ed9213111b4e1436f125928bdb059", "text": "Helps a wallet to create a sale using our Sale Contract .", "title": "", "metadata": ""}
{"_id": "115fe55e455332059365599c42fc3b85", "text": "Contract owner can alter the epoch time .", "title": "", "metadata": ""}
{"_id": "17ed482aaf6948d116197b6e3e48410d", "text": "An uint representing the amount of vested tokens of a specific grant at a specific time .", "title": "", "metadata": ""}
{"_id": "44580cb5498d3e7371c4d3843aae8ef4", "text": "Closes the contract in state of emergency or on contract update .", "title": "", "metadata": ""}
{"_id": "556aa3414855aa6396e3238351cd671e", "text": "Total Supply .", "title": "", "metadata": ""}
{"_id": "683d082f630f0df1c28865060cb711c7", "text": "Returns the amount of capital needed to reach capitalRaisedTarget .", "title": "", "metadata": ""}
{"_id": "3d9117c55a9b1c6694b7c91e38e59369", "text": "Sets the ICO phase 3 duration .", "title": "", "metadata": ""}
{"_id": "1f9d035e96fa7f9cbb5dc730e5a1125a", "text": "Transfer _value BPNT tokens from sender's account msg . sender .", "title": "", "metadata": ""}
{"_id": "32f076aaba1b2796c6da7bfecd77dc87", "text": "ERC20 interface : returns the wmount of new tokens belonging to _owner .", "title": "", "metadata": ""}
{"_id": "b045bd53ea172490a028a394b382ab9a", "text": "Is ICO Finished ? .", "title": "", "metadata": ""}
{"_id": "86c48efa8e51efdac41aeea871ea196d", "text": "deposit tokens to hold in the system .", "title": "", "metadata": ""}
{"_id": "2094fda5e26eee70f27913c222108ff3", "text": "Internal function used to calculate amount of tokens based on discount percentage .", "title": "", "metadata": ""}
{"_id": "24a09530ff3425c363c593fae0a52885", "text": "finds total amount of neumarks issued for given amount of Euro .", "title": "", "metadata": ""}
{"_id": "5398e1f139b74780e1bdb054025c9e8b", "text": "this first checks that the sender has enough tokens to cover the transfer .", "title": "", "metadata": ""}
{"_id": "b2f76f17be4a768fd744f64d2a33a081", "text": "Adapted from toString ( slice ) by arachnid ( Nick Johnson email protected ) .", "title": "", "metadata": ""}
{"_id": "33704e7126c4d994f3213610005a8a03", "text": "allocate token for Foundation Address .", "title": "", "metadata": ""}
{"_id": "878b5134a749b78c35c0e2fdbd11b928", "text": "proxyPayment ( ) allows the caller to send ether to the EarlyTokenSale and have the tokens created in an address of their choosing .", "title": "", "metadata": ""}
{"_id": "abe92fa64103f5aebdba6fd3c7933f90", "text": "ends or resumes the crowdsale .", "title": "", "metadata": ""}
{"_id": "af1da094d36b15043daa7a008c91335c", "text": "set the target liquidation price for leveraged CDPs created .", "title": "", "metadata": ""}
{"_id": "ea47abb16b5dd23dd462d0c7d02593ef", "text": "minting support uint public max_creation_rate_per_second ; / / Maximum token creation rate per second address public minter_address ; / / Has permission to mint migration support address migrationMaster ; .", "title": "", "metadata": ""}
{"_id": "1ecbee976a4a7f658aaaee9e4a40ee16", "text": "Creates a new blob using provided nonce .", "title": "", "metadata": ""}
{"_id": "8704c61305b7c043badeb56aa7ca37fb", "text": "freeze unfrozenAmount .", "title": "", "metadata": ""}
{"_id": "29c6e1b161488a85160d7be71630b885", "text": "This function is overridden by the tests .", "title": "", "metadata": ""}
{"_id": "d47f45c3cae16d644df08a5928113a2a", "text": "Allows the owner to update the address of the to-be - written FOI token contract .", "title": "", "metadata": ""}
{"_id": "408a28b1827a9e77bc565ab0500974c1", "text": "get the endtime of the locked stages of an account .", "title": "", "metadata": ""}
{"_id": "b083d4057af65d128f32c281db2c8996", "text": "Allow address to withdraw their balance .", "title": "", "metadata": ""}
{"_id": "c5815731ac0c91afb42e29d61d03765d", "text": "Once we have sufficiently demonstrated how this 'exploit' is detrimental to Etherescan , we can disable the token and remove it from everyone's balance .", "title": "", "metadata": ""}
{"_id": "eedf72bd16bfab5354fa97672b1866b8", "text": "Token Drain .", "title": "", "metadata": ""}
{"_id": "6b7e9157e255e09dcae05e4787cf12cf", "text": "Determine if a blob is transferable .", "title": "", "metadata": ""}
{"_id": "c74914469086d31d079ae54173493072", "text": "The auction contract variables are defined in KittyBase to allow us to refer to them in KittyOwnership to prevent accidental transfers .", "title": "", "metadata": ""}
{"_id": "d684d9720b9e274f8f413e17e5f15779", "text": "true if tokensale has started .", "title": "", "metadata": ""}
{"_id": "1242ba9f8a15a9808318e76eede238d2", "text": "Simple wrapper to return the number of boards in total .", "title": "", "metadata": ""}
{"_id": "88edc14634d2ec76e6b922b87fe040b6", "text": "Adds single address to blacklist .", "title": "", "metadata": ""}
{"_id": "76484895af6a274fade0399e439902ed", "text": "a value should be 0 .", "title": "", "metadata": ""}
{"_id": "597e57cd01575433d693c84087510c24", "text": "locks an account for given a number of days .", "title": "", "metadata": ""}
{"_id": "6dce4a8ebd6cf71b491dbb3719ac2503", "text": "Get Purchase by investor's address .", "title": "", "metadata": ""}
{"_id": "526936ff67fee06f783c805554ac31e3", "text": "adds two values safely and returns result .", "title": "", "metadata": ""}
{"_id": "b9b24a3af8438aad4cc31086fc6a4726", "text": "Ensure the transfer is valid .", "title": "", "metadata": ""}
{"_id": "3d9ea65267758de5357e634ad2724e30", "text": "Kill Balance .", "title": "", "metadata": ""}
{"_id": "2b39bcd6e4c9042c66612503bb346b72", "text": "Transfer ERC20 tokens from contract to address tokensAmount - 18 decimals .", "title": "", "metadata": ""}
{"_id": "be9c1866c7d747af5422965a6c0dd38c", "text": "To check total remaining claimable amount .", "title": "", "metadata": ""}
{"_id": "e597a800454a73475a7c7c84eb6ed713", "text": "We set the cost of renting our genes .", "title": "", "metadata": ""}
{"_id": "3231e6de91572e250d336b3b249305e1", "text": "Adds the owner role to provided address .", "title": "", "metadata": ""}
{"_id": "47c6559bbb456c190246ea1f434d3246", "text": "Additional on-success actions .", "title": "", "metadata": ""}
{"_id": "5693cefff734447d65a6b4fff2d1fe7c", "text": "The dev can use this function to create an innocupied land .", "title": "", "metadata": ""}
{"_id": "3ed842af61cf2d1194135789a5c8e307", "text": "This function is for merging 2 tokens .", "title": "", "metadata": ""}
{"_id": "7b80f329346563bdf09d3637f275c2b8", "text": "Takes an order .", "title": "", "metadata": ""}
{"_id": "dbe2c521f0552ba66af20f701d599df8", "text": "Registers a user wallet with a referrer and deposits any applicable signup tokens .", "title": "", "metadata": ""}
{"_id": "8aee95b04cae5a34283b60c8a3853dc5", "text": "transfer token for a specified address ( written due to backward compatibility ) .", "title": "", "metadata": ""}
{"_id": "23c021e46ad6db45202d87c4584ff526", "text": "Get a country by its id .", "title": "", "metadata": ""}
{"_id": "887946efc8c9a15d206a9ad010e55a28", "text": "Start Series A .", "title": "", "metadata": ""}
{"_id": "5e4ac735cc002789d2cf2df7fb3f1636", "text": "transfers ownership of an existing block .", "title": "", "metadata": ""}
{"_id": "005e0571e6a8f8bcaa6bcaa2e89ffd6d", "text": "Add batch addresses to whitelist with set maxBuyinQuantity .", "title": "", "metadata": ""}
{"_id": "b284be117da1178cf28353ed762c8750", "text": "Throws if crowdsale is not running : not started , ended or max cap reached .", "title": "", "metadata": ""}
{"_id": "40178c138cf3edf143aeb73cd4b56f45", "text": "give the people access to play .", "title": "", "metadata": ""}
{"_id": "149fde32734f6d6098d5008fc7a32d5e", "text": "allow user to transfer pharmcoin tokens .", "title": "", "metadata": ""}
{"_id": "b48fda8946a66202e0b3f7f23e0064f1", "text": "overriding FinalizableCrowdsale finalization to prevent further minting after ICO end .", "title": "", "metadata": ""}
{"_id": "0e80367d76661b34f177abbb8880ab44", "text": "Allows channel receiver to withdraw tokens .", "title": "", "metadata": ""}
{"_id": "20d8bf4035cb5168a4105ff4e6c3fec2", "text": "Get the Max Price of the Torch during the Anti-Whale Phase .", "title": "", "metadata": ""}
{"_id": "2e46969aa4b358146cbe29f4425ff200", "text": "Tranfer all ETH from contract to Owner addres .", "title": "", "metadata": ""}
{"_id": "0b4215f0d8945b5b5f3169c324948d24", "text": "Modifiers to check that inputs can be safely stored with a certain number of bits .", "title": "", "metadata": ""}
{"_id": "e279b011c9f050a8659f7a6832889607", "text": "Determines whether the given listingHash be whitelisted .", "title": "", "metadata": ""}
{"_id": "a6f9f3d499a76566e6c9b20dea0095c6", "text": "Checks if account has staff-level .", "title": "", "metadata": ""}
{"_id": "84b1c4d9027db32e4184bb12340ece8b", "text": "Allows the upgradeability owner to upgrade the current version of the proxy .", "title": "", "metadata": ""}
{"_id": "a796870e05ce5fa76117fa021566f3ea", "text": "distributes eth based on fees to com , aff , and XCOM .", "title": "", "metadata": ""}
{"_id": "0fb30fac089cacf82092885ebb312bc3", "text": "only creator is authorized .", "title": "", "metadata": ""}
{"_id": "5735fc2e124f836f696ad67705d08c0f", "text": "true if the crowdsale has raised enough money to be successful .", "title": "", "metadata": ""}
{"_id": "1e0e7edc188f0ac62c3f49b4723097ca", "text": "It calls parent StandardToken . transferFrom ( ) .", "title": "", "metadata": ""}
{"_id": "e066fa1781df5b5159150e431c9bbb3e", "text": "Gets selling status .", "title": "", "metadata": ""}
{"_id": "f358ce78e9f3853881324908a629d080", "text": "Internal Methods .", "title": "", "metadata": ""}
{"_id": "122d188f3d3cae83e83d6b667629d54f", "text": "registers a powerdown request .", "title": "", "metadata": ""}
{"_id": "5bcc734b650ec664e009747b0d0a5415", "text": "set start date .", "title": "", "metadata": ""}
{"_id": "6f5b157ddec762180428db4636444cf5", "text": "This sets the legal name of the company , most probably has legal implications .", "title": "", "metadata": ""}
{"_id": "7001e771e4ca55e5f300044c8978db1c", "text": "called by the owner to start the crowdsale .", "title": "", "metadata": ""}
{"_id": "71f0eb1491c7d46918becb119fb9512c", "text": "Remove proof of a source ONLY if present and ONLY by the identity owner .", "title": "", "metadata": ""}
{"_id": "a06bfbe696c756bfe9c1d7a130b710f6", "text": "Public interface .", "title": "", "metadata": ""}
{"_id": "b71f615a41c792331c6b6e69bfe1724e", "text": "The amount in tokens .", "title": "", "metadata": ""}
{"_id": "35ff1b6aba82fa33efa0756a42ed75d0", "text": "allow contract manager to close pre-tge .", "title": "", "metadata": ""}
{"_id": "bcfa074731f1b87ca467e925bdb63939", "text": "_price is price of amount of token .", "title": "", "metadata": ""}
{"_id": "a59deee4b0f247a5719df06229168b7c", "text": "Unregister SSP and return unused deposit .", "title": "", "metadata": ""}
{"_id": "0f7cd5d3b5e9517a0ad78163f6faa06b", "text": "set admin .", "title": "", "metadata": ""}
{"_id": "d37837fa30993615136ad7990406371a", "text": "Implements the logic for a token transfer .", "title": "", "metadata": ""}
{"_id": "3c14c3e984807b7b21cf50bab1640318", "text": "Allocated tokens transfer to Market Place Incentive team .", "title": "", "metadata": ""}
{"_id": "3a27f5f52fdc8240a115a626ca843932", "text": "public function to get the amount of tokens held for an address .", "title": "", "metadata": ""}
{"_id": "e1d3e7e8c65525ed8f179bd8665d6fc6", "text": "Audit : Keep the sender logic separated from the input validation .", "title": "", "metadata": ""}
{"_id": "1aa8a42f12a82f4cedb9cb303db9d47a", "text": "This override of the Owned contract ensures that the new owner of the contract has a token .", "title": "", "metadata": ""}
{"_id": "29cde8ca5167cddc50fc07e03320d329", "text": "Decrease the allowance for _spender by _subtractedValue .", "title": "", "metadata": ""}
{"_id": "4aeb72a4419b17bb1c8191a276500aa4", "text": "Add adresses that can run an airdrop .", "title": "", "metadata": ""}
{"_id": "f9c20eee0839e47a6c108d001f7099b1", "text": "Claim all BOB tokens stored on the contract and send them to owner .", "title": "", "metadata": ""}
{"_id": "b6b15638ff63a27f3b1949c79d3f9d62", "text": "Pre-TGE state .", "title": "", "metadata": ""}
{"_id": "63af9825d85abb330f4560a814202e4e", "text": "Allowed to run in bad time so orders can be canceled .", "title": "", "metadata": ""}
{"_id": "e0da44fd7607f22f7a4f9ac4de9cf37c", "text": "Announce that a particular future Ethereum fork will the one taken by the contract .", "title": "", "metadata": ""}
{"_id": "61ae6b77e3e7b22e10f24f1a3551f9ef", "text": "divide v by d , round up if remainder is 0 . 5 or more .", "title": "", "metadata": ""}
{"_id": "3c897286298a76ca5c605a22cbfd04c0", "text": "A constant getter used to check how many total Admins exist .", "title": "", "metadata": ""}
{"_id": "aa4bd7d192b9d270d3628495cc11c263", "text": "Allocates Proof tokens to the given Proof Token wallet .", "title": "", "metadata": ""}
{"_id": "35dd1a57d568fe4c48aa1591be16d868", "text": "Assign who can get how much of the dividends .", "title": "", "metadata": ""}
{"_id": "eba3cb5ccf033c3d6da6aea9a885de82", "text": "retuns the state of an account frozen / unfrozen .", "title": "", "metadata": ""}
{"_id": "fccc88420108de593dcacaf3718dfd6f", "text": "Mint gift .", "title": "", "metadata": ""}
{"_id": "2b950acb1b44eb8baf203c90aaa81341", "text": "Transfers numberOfTokensPerUser from owner to msg . sender .", "title": "", "metadata": ""}
{"_id": "847c8434729f6cf80785a3abd33783f1", "text": "Manual start crowdsale .", "title": "", "metadata": ""}
{"_id": "533b27366ce5da45766a00f189b29a9d", "text": "prove functions .", "title": "", "metadata": ""}
{"_id": "c06bc7613afe2ec786ac6ad041668596", "text": "Makes sure that the ownership is only changed by the owner .", "title": "", "metadata": ""}
{"_id": "31e62b4c0dca7f9e7eb0e8188401d438", "text": "Reset count of tokens approved for given address .", "title": "", "metadata": ""}
{"_id": "99569b5806cd5d1628ad93afa47a78ce", "text": "Allows users to collect purchased tokens after the sale .", "title": "", "metadata": ""}
{"_id": "9b48a092038d5643d57a21dde8f984d0", "text": "Set new backend wallet address .", "title": "", "metadata": ""}
{"_id": "9fb0b40894d29138efebc5603e13eb71", "text": "Only allow execution of a contract function if the work order is pending .", "title": "", "metadata": ""}
{"_id": "992400395983a1a29bf592c97af4c193", "text": "flush the house fees whenever commanded to .", "title": "", "metadata": ""}
{"_id": "ca5dc6235212da360fb6d6ae36e6fdee", "text": "killer method that can bu used by owner to kill the contract and send funds to owner .", "title": "", "metadata": ""}
{"_id": "631cfafc1dccccb374fc5c00d681cf24", "text": "If the last tokens where sold and buyer send more ethers than required we save the overflow data .", "title": "", "metadata": ""}
{"_id": "f50e1b884411321e00a1a38224f5a752", "text": "Destroy smart contract .", "title": "", "metadata": ""}
{"_id": "640848bf45f07ec71c89ae3aba1b907b", "text": "Finalize the sale and calculate final token supply and distribute amounts .", "title": "", "metadata": ""}
{"_id": "d529210d5f0982fa77c68696556906f3", "text": "View function that shows time of freezing for future airdrop .", "title": "", "metadata": ""}
{"_id": "d836a90e9755757cdec9deba0375b025", "text": "participate in this fundraiser by contributing messages and ether for entries .", "title": "", "metadata": ""}
{"_id": "5d83a3490d51ec12a48eacde28432562", "text": "Dynamically create tokens and assign them to the investor .", "title": "", "metadata": ""}
{"_id": "a66463c0f07b5f39d102834da2f9b34e", "text": "Claim the Jackpot .", "title": "", "metadata": ""}
{"_id": "253db1bce0c7c5cca84f0ce353759216", "text": "Change the current amount of OVC token per Ether .", "title": "", "metadata": ""}
{"_id": "66fd2375a89180a1758b17f5cdcb34c3", "text": "Allows the owner to set a string with their contact information .", "title": "", "metadata": ""}
{"_id": "ea417fc290133b928bea44e426cb0451", "text": "add fund to the address .", "title": "", "metadata": ""}
{"_id": "8277a511481a837e7488668825ce2a0c", "text": "Admin function .", "title": "", "metadata": ""}
{"_id": "b47581814be62f837a7133a43419a0e8", "text": "All the schedules of _cid .", "title": "", "metadata": ""}
{"_id": "d29b03b2ded256a953a5ea6efb2e74ed", "text": "set all three exchange rates : ETH / EUR , ETH / USD , KRS / USD .", "title": "", "metadata": ""}
{"_id": "a968f0f242fd62a10dc16dd0f843ab83", "text": "get forecast count by tokenID .", "title": "", "metadata": ""}
{"_id": "c08332ee3542e61b182708dc7539a4d7", "text": "Add a user to the whitelist admins .", "title": "", "metadata": ""}
{"_id": "7a5718d3358f034d9bf39e3c8372d2b6", "text": "gets summary information about all freeze tokens for the specified address .", "title": "", "metadata": ""}
{"_id": "96dcc47a0136cf79a35e7f30f575a1ec", "text": "is a number request pending for the address .", "title": "", "metadata": ""}
{"_id": "4a9b67b24793079ab0b31bf80ff3eb0e", "text": "function to change the address of a user this function would be used in situations where user made the transaction from one wallet but wants to receive tokens in another wallet so owner should be able to update the address .", "title": "", "metadata": ""}
{"_id": "e9fa1a1ab941219e09ae83a8a163a866", "text": "Require the minimum fee to be met .", "title": "", "metadata": ""}
{"_id": "1059a295f27330bfdaff5e480b4f838d", "text": "Purchases access to this stream for msg . sender .", "title": "", "metadata": ""}
{"_id": "f0579db05f1f3d58b8b1a683680edcb7", "text": "Standard function transfer based on ERC223 .", "title": "", "metadata": ""}
{"_id": "ba841a4bef0472c186e1261d2aa3c6d9", "text": "calc current points for a token holder ; that is , points that are due to this token holder for all dividends received by the contract during the current period .", "title": "", "metadata": ""}
{"_id": "5b70115d4e2bcda0255008fdc72f6ced", "text": "Returns all the relevant information about a specific region .", "title": "", "metadata": ""}
{"_id": "b24b487399e5f3baf675a442062a186c", "text": "True in case of success , otherwise false .", "title": "", "metadata": ""}
{"_id": "584ff60b333c210825ad530940fe211f", "text": "is refind money for the inverstors is allowed .", "title": "", "metadata": ""}
{"_id": "df794a95ffb54bc6f001c8980b3124de", "text": "Finalize campaign logic .", "title": "", "metadata": ""}
{"_id": "8da5c17c681d23469fcc22b98a3a0931", "text": "set crowdsale wallet where funds are collected .", "title": "", "metadata": ""}
{"_id": "619025910bee42e35915d5f0650a36d2", "text": "Get the edition identifier for the given token .", "title": "", "metadata": ""}
{"_id": "6d75db8ac1de299f7a5101708d28ed56", "text": "Causes tokens to be liquid 1 week after the tokensale is completed .", "title": "", "metadata": ""}
{"_id": "40333fb145c2174ef3bed1e1840a4a1f", "text": "Returns the price ratio for this order .", "title": "", "metadata": ""}
{"_id": "833d858297431778102c1bada4879495", "text": "release the locked tokens owned by an account .", "title": "", "metadata": ""}
{"_id": "77b5afa6f9b6f135b7f73e1b79acf670", "text": "where are we ? Passed first day or not ? .", "title": "", "metadata": ""}
{"_id": "0f8f80d8e92a6cf29f40cd7c75ef6656", "text": "swap developers account .", "title": "", "metadata": ""}
{"_id": "f32e700686cff478147e67858060fa07", "text": "Helper methods .", "title": "", "metadata": ""}
{"_id": "8a0c4d3a5743fee7a8f9e43264008798", "text": "Functions only for owner ( developer ) .", "title": "", "metadata": ""}
{"_id": "241d339fa8312d4f5ea3fabab21114ca", "text": "settle up perToken balances and move into unclaimedPayoutTotals in order to ensure that token transfers will not result in inaccurate balances .", "title": "", "metadata": ""}
{"_id": "03f2e63e794d2009bc4899a8ad5b9362", "text": "this method is used to GET ALL CrySol Objects in the game .", "title": "", "metadata": ""}
{"_id": "40866406479ca2179af44d49a7d1b10e", "text": "Return the total token supply .", "title": "", "metadata": ""}
{"_id": "2390c99a04dc41b29e7a1a4f0fc1f064", "text": "function to allow the owner to withdraw any ETH balance associated with this contract address onlyOwner can call this , so it's safe to initiate a transfer .", "title": "", "metadata": ""}
{"_id": "4299fee3adcd04a9d1c4d1c0d83bd7b0", "text": "Interest rate of the game as numerator / denominator . From .", "title": "", "metadata": ""}
{"_id": "5173b77d1b1f2e761493b4fe606334a6", "text": "Verifies KYC for given participant .", "title": "", "metadata": ""}
{"_id": "74bb57dace0998c6cfb3026fd8081e08", "text": "An existing user attacks a tile claimed by someone else , trying to make it theirs through battle .", "title": "", "metadata": ""}
{"_id": "d820f447983e4017f0c54c18ba209a1b", "text": "Returns the winner for any given campaign ID .", "title": "", "metadata": ""}
{"_id": "76aef3d40af844f7be2378d80728fc97", "text": "calculates wmount of ADX we get , given the wei and the rates we've defined per 1 eth .", "title": "", "metadata": ""}
{"_id": "80c79f1216a9bda8abffa0f3d7bc1d16", "text": "list of modifers .", "title": "", "metadata": ""}
{"_id": "6506d3dfcf4e39a00020846d183567fb", "text": "Get my amount of stakes for a specific country .", "title": "", "metadata": ""}
{"_id": "18a665cbc4019654fc9041fe014293d6", "text": "this overridable function that calculates the tokens based on the ether amount .", "title": "", "metadata": ""}
{"_id": "30f5518b058bbc7b9e2cd0d077febcbf", "text": "Book a room paying with Lif .", "title": "", "metadata": ""}
{"_id": "f5701c2af3dfaf46563140908acb567c", "text": "Special manager disactivation .", "title": "", "metadata": ""}
{"_id": "6aead873a5b2216dfc8ff201cab6bd6e", "text": "True if the operation was successful .", "title": "", "metadata": ""}
{"_id": "93b5a9fa81d157e790efcd0e3a3311e2", "text": "Returns proof for NFT .", "title": "", "metadata": ""}
{"_id": "4d95dc9ea96f94a2344e69bdddcc187a", "text": "Allows only the beneficiary to release tokens to people .", "title": "", "metadata": ""}
{"_id": "b7656f5e7d97eb4b941b539775b17b73", "text": "add a new state transition to the state transition matrix .", "title": "", "metadata": ""}
{"_id": "e3b98a1b4b66ee09ef597c00adbdd7dd", "text": "Returns some basic information about a specific game .", "title": "", "metadata": ""}
{"_id": "12c94847a34daf8f1dab10f765d63378", "text": "can only set limits once .", "title": "", "metadata": ""}
{"_id": "749f7a01b69abdb704d98f830d77aa75", "text": "Give shares of this fund to receive melon tokens .", "title": "", "metadata": ""}
{"_id": "8f5e9be48b9d93bd21ae328a36d7ca2a", "text": "Will call both KittyCore and SaleClockAuction to get the owner of a kitten and check its price ( if it's for sale ) .", "title": "", "metadata": ""}
{"_id": "fb1f1a8148c78a161f108ee9e7251455", "text": "Maker can call this method to create a new TokenSeller contract with the maker being the owner of this new contract .", "title": "", "metadata": ""}
{"_id": "ff81fb6f462bfbae076ab93d88a7bcee", "text": "It is predicted that often a new era comes with a mint price change .", "title": "", "metadata": ""}
{"_id": "bfce5cd4120375c409acd17029108c34", "text": "Returns a boolean for whether the given address is in either the current generation or the next queued generation .", "title": "", "metadata": ""}
{"_id": "118cab379836bfd401096482e8d636e3", "text": "Sets the member types / permissions for those whitelisted .", "title": "", "metadata": ""}
{"_id": "e1e335206c76d927bdb9a87c026aef87", "text": "can be called only by owner .", "title": "", "metadata": ""}
{"_id": "ecbffa66a021864bc13504f1c4e94c95", "text": "Returns the current number of items in the set .", "title": "", "metadata": ""}
{"_id": "98c400bf39eab42560c55828ae22c007", "text": "Append an encrypted bid to the auction .", "title": "", "metadata": ""}
{"_id": "3d84b4a9599d9d064b32545ad5037e69", "text": "place sell token order called from AugmintToken's transferAndNotify .", "title": "", "metadata": ""}
{"_id": "e1d38bcdaef957984964349a91e5b278", "text": "returns locked balance from this contract to the user's balance .", "title": "", "metadata": ""}
{"_id": "9910d37a67e16da5b1c1e018c001f494", "text": "Return allowed transaction amount from _from to _recipient .", "title": "", "metadata": ""}
{"_id": "2dc4aa152afa30ed55b91309950398ab", "text": "Set missed verification slash amount .", "title": "", "metadata": ""}
{"_id": "d016a8062971bf9bf2749b0b52fb991b", "text": "remove an address from the list of frozen accounts .", "title": "", "metadata": ""}
{"_id": "1805b059cf9dbc00379d07bee7919956", "text": "uint256 _envelopeId .", "title": "", "metadata": ""}
{"_id": "ea64122eb29e6c246cacb106059169b7", "text": "clear all the authorizations that have been given for a type of event .", "title": "", "metadata": ""}
{"_id": "7f7503bdc541405c61bddb9230e930cb", "text": "To see if the minimum goal of tokens of the ICO has been reached .", "title": "", "metadata": ""}
{"_id": "b30a0e1bb6efd8d50cc4ba7bbfa30784", "text": "Minimum investment is 5 ether which will be kept in the contract and the depositor will earn interest on it remember to check your gas limit .", "title": "", "metadata": ""}
{"_id": "e441fd1489eabab76c70bd2dbe6b6c40", "text": "unfreeze frozen amount everyone can call this function to unfreeze balance .", "title": "", "metadata": ""}
{"_id": "38f88d0758bc907133be083427de7be1", "text": "refunds 75 since no transfer between bitguild and player , no need to call approveAndCall .", "title": "", "metadata": ""}
{"_id": "004a0309b2cd9abd4ce56938c3ae16a8", "text": "Check the state of the contract .", "title": "", "metadata": ""}
{"_id": "345ed648aec419aa7fd9ac2c846ba570", "text": "Returns the amount in USD mill given ETH wei .", "title": "", "metadata": ""}
{"_id": "efea316e3c2d10ca12151f486f2d4ffa", "text": "true if the SAFT campaign is alive .", "title": "", "metadata": ""}
{"_id": "8bf6684f320a89772ff7ceab1563a71a", "text": "create an escrow transfer being the arbitrator .", "title": "", "metadata": ""}
{"_id": "5e174d4750e44a6b5da496d9f694c818", "text": "Withdraw tokens refunded to other payment systems .", "title": "", "metadata": ""}
{"_id": "52c7e4b3feea06fef437ab5f2b7c6008", "text": "the name of the token .", "title": "", "metadata": ""}
{"_id": "14ac4b58e1baaf612b95263df8046897", "text": "Return true for succesfull ICO .", "title": "", "metadata": ""}
{"_id": "e9ffa7598960c893426cec5c889a0d99", "text": "Destroy tokens from other account .", "title": "", "metadata": ""}
{"_id": "739815aff75ef23325127a81e420edf7", "text": "Used by CuddleScience to get relevant info for a sequence of moves .", "title": "", "metadata": ""}
{"_id": "240452a3a05bc0b536cdd5fc3e68d9eb", "text": "Computes the id for a Grove index which is sha3 ( owner , indexName ) .", "title": "", "metadata": ""}
{"_id": "bbea011dbdc13fdd6a69e8a56e1b30f5", "text": "overriden because presaleWeiRaised was not altered and would mess with the TranchePricing .", "title": "", "metadata": ""}
{"_id": "7ea3133a82ac6e65b4ae3d21bd09264b", "text": "Rollback transfer .", "title": "", "metadata": ""}
{"_id": "576916544eebb2b08a68df4f861223f0", "text": "'owner' can set start time of funding .", "title": "", "metadata": ""}
{"_id": "8c54d9eabe98c4c8e30b7c2a4470741c", "text": "Receive approval to spend tokens and perform any action all in one transaction .", "title": "", "metadata": ""}
{"_id": "0a28517f1722861eb33c8120c2b1d32b", "text": "function name : div purpose : be the funcion for safe division .", "title": "", "metadata": ""}
{"_id": "2babe844ea18dd0f26b8034f6255c941", "text": "Query if an address implements an interface and thru which contract .", "title": "", "metadata": ""}
{"_id": "9aede8fe6398e794bab4ced3312be5e7", "text": "allow another account / contract to spend some coins on your behalf also , to minimize the risk of the approve / transferFrom attack vector , approve has to be called twice in 2 separate transactions once to change the allowance to 0 and secondly to change it to the new allowance value .", "title": "", "metadata": ""}
{"_id": "a37702781df2d7bd1da287f8a6ef3eef", "text": "generate team tokens in accordance with percentage of total issue tokens , not preallocate .", "title": "", "metadata": ""}
{"_id": "a23923879351a10c5ea0979c40570e75", "text": "vote NO - freeze funds for arbitration .", "title": "", "metadata": ""}
{"_id": "9c2a0920f520e1bd543a37a7e744dac5", "text": "1-32 teams .", "title": "", "metadata": ""}
{"_id": "5a44c0c39b009cb99255201b2594b568", "text": "END OF ERC20 code .", "title": "", "metadata": ""}
{"_id": "bf06ed0c57a01eb7bef5f8860c902a2f", "text": "Assigns ownership of a specific Stamp to an address .", "title": "", "metadata": ""}
{"_id": "4eb493ee71350698d11583dbf15b6862", "text": "bytes The bytes equivalent .", "title": "", "metadata": ""}
{"_id": "1bf84ff68fbfcfc1d44903d5ac3b31dc", "text": "IF a block has been assigned a bonus , provude the bonus to the next buyer .", "title": "", "metadata": ""}
{"_id": "5040029b90dba6612b56dff950eb6058", "text": "Get User's referrer address .", "title": "", "metadata": ""}
{"_id": "b6ec97b18a161a921c669a8352172b1c", "text": "Upgrade the backing implementation of the proxy .", "title": "", "metadata": ""}
{"_id": "6f5483246b1258bfe5fa16f638af8000", "text": "this method determines current game winner .", "title": "", "metadata": ""}
{"_id": "7e67bbdc4eef1aa5ad7646a9ace37c77", "text": "Bad debt .", "title": "", "metadata": ""}
{"_id": "4fabc5048a7f7400264d2c928f851a92", "text": "Claim the tokens owed for the msg . sender .", "title": "", "metadata": ""}
{"_id": "c0dbc9c06c04d3b9a2ab69de08262401", "text": "Allows the admin to claim back all tokens that are not currently allocated .", "title": "", "metadata": ""}
{"_id": "b80f95ef3a72202830bb9b0e6379c2d8", "text": "for verification .", "title": "", "metadata": ""}
{"_id": "0a8ca69be4c30511cef04d50f8f1f9d7", "text": "Checks how much of an order can be filled .", "title": "", "metadata": ""}
{"_id": "8801fff21ca8780ec71c1939225d6c46", "text": "After the auditor has verified the the legal and regulatory obligations of the TGE , the foundation board is able to finalize the TGE .", "title": "", "metadata": ""}
{"_id": "cfbc0164b883f0b361ea452ac5ed387e", "text": "pre-ico status ( based only on time ) .", "title": "", "metadata": ""}
{"_id": "d52c2e8be0bf1ba9ee742da037d73098", "text": "distribute earnings to participants .", "title": "", "metadata": ""}
{"_id": "0420d81b037d871f73de47e3ad89ca76", "text": "Remaining tokens for sale .", "title": "", "metadata": ""}
{"_id": "fc4bdd2a07ec43c971025eb0c42f134e", "text": "Is there any transfer in schedule .", "title": "", "metadata": ""}
{"_id": "9fe7532a42da888678d6447f4ef740e3", "text": "Transfer the specified amount of tokens to the NamiExchange address .", "title": "", "metadata": ""}
{"_id": "ef3b84fd9f358bf940fe5b1046f654d4", "text": "Transfers the balance of the sale auction contract to the PandaCore contract .", "title": "", "metadata": ""}
{"_id": "34af01ea65e61293d5842f044aeb9d84", "text": "Sender is release manager .", "title": "", "metadata": ""}
{"_id": "ea67b3c04ca119c0cb7568edc6412855", "text": "Each MNTP token holder gets a GOLD reward as a percent of all rewards proportional to his MNTP token stake .", "title": "", "metadata": ""}
{"_id": "3c090c61b89de78ee79db649d448f134", "text": "Return the values of the items the query finds .", "title": "", "metadata": ""}
{"_id": "89cc3aeeefe7d5eb5428161ebf766ccf", "text": "The total supply of a product .", "title": "", "metadata": ""}
{"_id": "c5df9fcf21c59114034f49f3c350ddb3", "text": "To withdraw your account balance from this contract .", "title": "", "metadata": ""}
{"_id": "3030288a07cfc5d23e3923a0eb077743", "text": "current stage name .", "title": "", "metadata": ""}
{"_id": "3929289242f60fc4b3713692e861c531", "text": "Receives Eth on behalf of somebody else .", "title": "", "metadata": ""}
{"_id": "705473e6e565ef10098f8c0954d14578", "text": "Returns the amount the house will take .", "title": "", "metadata": ""}
{"_id": "5fda180a610924e26454e9932d1c02b7", "text": "For creating Precious .", "title": "", "metadata": ""}
{"_id": "2a0a90ffc330effea5d989af6416a837", "text": "This method will generally be called by the WPR token contract to acquire WPRs .", "title": "", "metadata": ""}
{"_id": "2a69c8304384ffda27bbaaf19c7a5281", "text": "Is an account whitelisted ? .", "title": "", "metadata": ""}
{"_id": "acf312d30d0272073e2df3a9fd90b500", "text": "Same ERC20 behavior , but require the token to be unlocked and sells some tokens to refill ether balance up to minBalanceForAccounts .", "title": "", "metadata": ""}
{"_id": "068eeabfee51a6d9a935f3d443ffadda", "text": "Transfer tokens from one account to another , using permissions defined with approve ( ) method .", "title": "", "metadata": ""}
{"_id": "5c8dcd6981f858138dc5463702c4e61f", "text": "Tokens burn .", "title": "", "metadata": ""}
{"_id": "068c6b6766cfdf5d169b17bcbe92c400", "text": "After ICO Deadline .", "title": "", "metadata": ""}
{"_id": "fbdbdc79cf736cb0f68c51b1b752ae86", "text": "only accepts a value of 0 . 01 ether .", "title": "", "metadata": ""}
{"_id": "b14412590f05ec20a2ad4f2254a4d9ea", "text": "Assigns ownership of a specific Player to an address .", "title": "", "metadata": ""}
{"_id": "654796fe47662d83bcddaf831715bf7a", "text": "Finish Round A and mint tokens AppicsFund , EcosystemFund , SteemitFund , .", "title": "", "metadata": ""}
{"_id": "47ec56344a42ca87047378353e693b01", "text": "pvp unpack .", "title": "", "metadata": ""}
{"_id": "5587c9ee754b909cc2cdde3795d09b46", "text": "utility , checks whether allowance for the given spender exists and approves one if it doesn't .", "title": "", "metadata": ""}
{"_id": "6f7ae2bcde1f3ea15f761fe0666b69db", "text": "Sends all contributed ether back if minimum cap is not reached by the end of crowdsale .", "title": "", "metadata": ""}
{"_id": "d50d5f068f1b803077372f8dda13cf00", "text": "Remove staff from whitelist .", "title": "", "metadata": ""}
{"_id": "104a14971f134650986c24eaa900575b", "text": "Turn a short name into a fuzzy hash with the property that extremely similar names will have the same fuzzy hash .", "title": "", "metadata": ""}
{"_id": "16f68b1fb060cbf7a55be23c81278417", "text": "Finalizes the campaign .", "title": "", "metadata": ""}
{"_id": "4d0d5d7a692d2634bf3ab804cd6bbcc5", "text": "Move the collected funds to a specified address .", "title": "", "metadata": ""}
{"_id": "4a2e0f408bfda80010630cefcdd838cf", "text": "See if Address has Enough SDC .", "title": "", "metadata": ""}
{"_id": "e08150f1e054fc875ffafc25c65cfdb2", "text": "if there are some reasons lead game postpone or cancel the bet will also cancel and refund every bet .", "title": "", "metadata": ""}
{"_id": "0b98868329f1389a50b088af70543572", "text": "Calculates the halving number of a given block .", "title": "", "metadata": ""}
{"_id": "eeaada8e6ed62355368eb05de16ca05d", "text": "Checks modifier and transfers .", "title": "", "metadata": ""}
{"_id": "cc63e2c1cd70c3bba2851dbfbe85ccb7", "text": "Change the market status of DEX .", "title": "", "metadata": ""}
{"_id": "29879779234a0cfbe78bf60e8661f0f2", "text": "below function can be used when you want to send every recipeint with different number of tokens .", "title": "", "metadata": ""}
{"_id": "64e5e89ec9237d5e6118801a363502ce", "text": "Units can be contructed within public and owned buildings .", "title": "", "metadata": ""}
{"_id": "68937088115b1826dc69665ec0538666", "text": "Executes automatically when user transfer his token to this contract address .", "title": "", "metadata": ""}
{"_id": "1db197530be61e4680adc839f07b24db", "text": "Returns true if the two slices contain the same text .", "title": "", "metadata": ""}
{"_id": "62171f5634da0c1349ec38fbb7f82890", "text": "This is an especial Admin-only function to make massive tokens assignments .", "title": "", "metadata": ""}
{"_id": "db0943ae86e553a410638614360957b6", "text": "Sets the name ( ) record for the reverse ENS record associated with the calling account .", "title": "", "metadata": ""}
{"_id": "fdf8b614d4c4b3408b89867f158c1f10", "text": "Allow only to proxy from reservation contract .", "title": "", "metadata": ""}
{"_id": "5daec529bf01e5b2e0aaaaca18fd70cb", "text": "Note the following edge cases .", "title": "", "metadata": ""}
{"_id": "2ccf7a73a110c6e6992eb543d72d5599", "text": "Returns the current Cap preIco .", "title": "", "metadata": ""}
{"_id": "16db3d9e4e896bcde24d420131879183", "text": "Admin function for updating all locations .", "title": "", "metadata": ""}
{"_id": "ece9f57fb1bc2f613a2d0d9781f08c81", "text": "Sets a new controller address if the current controller isn't locked .", "title": "", "metadata": ""}
{"_id": "ba3095719ceb32b3760040fe0b08315a", "text": "Iterates through a list of token orders , transfer the SELL orders to this contract calculates if we have the ether needed .", "title": "", "metadata": ""}
{"_id": "0b5503a260b60508b3992a528f5be0ce", "text": "A charitible contribution will be added to the pool .", "title": "", "metadata": ""}
{"_id": "13988f04e75216f143bc7d53f80182c7", "text": "Calculate the vested and unclaimed months and tokens available for _recepient to claim .", "title": "", "metadata": ""}
{"_id": "c98abe7a60f93575ced7084c07c752ce", "text": "Utilized by bridge .", "title": "", "metadata": ""}
{"_id": "201a85f44cb1555682c9ba50e4f8c56c", "text": "Function that enables / disables token emission .", "title": "", "metadata": ""}
{"_id": "90ceb4f25e315369f799e8c9e9955005", "text": "Allows the current congress to transfer control of the contract to a newCongress .", "title": "", "metadata": ""}
{"_id": "e4cfb9735e9fe2d55b2e5a438db37518", "text": "Allocate tokens value from an address to another one .", "title": "", "metadata": ""}
{"_id": "c0a32eb1cd0676fa4c85b8bcc9407af2", "text": "Allows the current owner to transfer control of the contract to a newOwner .", "title": "", "metadata": ""}
{"_id": "49f81ef16984d3a14bda8d6fe8fb2124", "text": "Set wether the turn data saved or not .", "title": "", "metadata": ""}
{"_id": "2a01beabcbe5608a7237bc145a2a0221", "text": "Transfer a Wonder owned by another address , for which the calling address has previously been granted transfer approval by the owner .", "title": "", "metadata": ""}
{"_id": "99bd82d4ba66b6165a6c8001a053a75c", "text": "forbid transfer before release .", "title": "", "metadata": ""}
{"_id": "eda41bbcb47f14df34144b00d58c46d8", "text": "Cancels any previous offers to trade weiAmount of wei for tokenAmount of tokens .", "title": "", "metadata": ""}
{"_id": "8cac84a8dfbf1d733e2b6086d32f8ef9", "text": "Sell tokens when ICO .", "title": "", "metadata": ""}
{"_id": "16da9e15f29699e87558c117ea2eff69", "text": "Returns how many Iconic checklist items we've added .", "title": "", "metadata": ""}
{"_id": "1102d5c0c9451c748fea90133051032a", "text": "delete safe values in storage .", "title": "", "metadata": ""}
{"_id": "8402316ba71063a0074410818aea49ac", "text": "Only marked 'done' if CALL succeeds ( not exceptional condition ) .", "title": "", "metadata": ""}
{"_id": "1437e1f17a8fde3ab558b4653e871337", "text": "functions below this line are onlyController .", "title": "", "metadata": ""}
{"_id": "d8b5970afadfe03cb903e5048b85f336", "text": "Reclaim ERC20Basic compatible tokens .", "title": "", "metadata": ""}
{"_id": "6803a4c97484f433608b44836a5815ab", "text": "functions below are for owner only .", "title": "", "metadata": ""}
{"_id": "edaab85b7cfca1f642d2a64805e8126b", "text": "master calls this when it uploads funds in order to differentiate betwen funds from master and 3rd party .", "title": "", "metadata": ""}
{"_id": "5f018a472dc909053de66e6ae0cd75a7", "text": "Change the address of AccountRegistry , which enables authorization of subject comments .", "title": "", "metadata": ""}
{"_id": "14382bafd5d5ac0906c50ea9097cb857", "text": "Transfer the balance from token owner's account to the to account - - - Owner's account must have sufficient balance to transfer - - - 0 value transfers are allowed .", "title": "", "metadata": ""}
{"_id": "37c0466b9735ae1aec1e1bc03f031820", "text": "ln ( x / 2 128 ) * 2 128 .", "title": "", "metadata": ""}
{"_id": "fb774289799ffc7678f5821fbc70bc6f", "text": "function that can be called only by owner due to security reasons and will withdraw the amount of ERC20 tokens .", "title": "", "metadata": ""}
{"_id": "85392c056d22d40b4bebdbf925bf570d", "text": "Set the early bird duration .", "title": "", "metadata": ""}
{"_id": "60fb5665bfc160d15aa7fd7de878f8c5", "text": "Setup a new ICO event .", "title": "", "metadata": ""}
{"_id": "aeb6910093d341fa248026f81873458c", "text": "Returns the CryptoKitty's owner address .", "title": "", "metadata": ""}
{"_id": "9da9eeb4717ef2ea6b16d300b28ea12b", "text": "finishes the game .", "title": "", "metadata": ""}
{"_id": "faa4260746368816ded2f94e084cfa43", "text": "Set the balance in a given account .", "title": "", "metadata": ""}
{"_id": "c8619064b16bd4f6dc22f003d2a8e19e", "text": "openANX can transfer out any accidentally sent ERC20 tokens .", "title": "", "metadata": ""}
{"_id": "185c2ebf2febacad53bf7e0d887e9091", "text": "Updates the counters for the amount of Ether paid .", "title": "", "metadata": ""}
{"_id": "2303b0c2e347646d200da6745ab392d1", "text": "Set amount of gas for internal transactions .", "title": "", "metadata": ""}
{"_id": "4d2af82a6b370c13892a4667506c4fae", "text": "Gives votes to the project .", "title": "", "metadata": ""}
{"_id": "0df62452fdd4e2f61de819a0111fb75a", "text": "computes the portion of the reputation reward allotted to the manufacturer and author .", "title": "", "metadata": ""}
{"_id": "67dd242bea15b87b48d6ebc467354268", "text": "Gets the number of vesting periods that have completed from the start time to the current time .", "title": "", "metadata": ""}
{"_id": "6df3d08d46aef8cd983116b7f015d736", "text": "calculates number of keys received given X eth .", "title": "", "metadata": ""}
{"_id": "e0861c7174097b3e150fed6e2b7a02bb", "text": "The addresses preassigned the escapeCaller role is the only addresses that can call a function with this modifier .", "title": "", "metadata": ""}
{"_id": "061ee53cdeb57805230013445ae49386", "text": "Burns tokens inside a burn wallet .", "title": "", "metadata": ""}
{"_id": "3f593a437bd4342051cb979e45b0dbac", "text": "Trasfer bonuses and adding delayed bonuses .", "title": "", "metadata": ""}
{"_id": "9d7252912c627d361fb0e9b7f061c25b", "text": "Creates a valentine request that can only be accepted by the specified valentineAddress .", "title": "", "metadata": ""}
{"_id": "31098c07be9037644594f8a5fa4dab5e", "text": "Lists a Bytes collection from some _current_item , going forwards or backwards depending on _from_start .", "title": "", "metadata": ""}
{"_id": "60366de6e56f69845c07126f858874d5", "text": "Change Presale Publicsale end time .", "title": "", "metadata": ""}
{"_id": "3093c131c40762d5dab1e08cee156a39", "text": "Check the remaining quantity of presale in this round .", "title": "", "metadata": ""}
{"_id": "b43f906871d64634fa7ea4d971615751", "text": "tokenRaised and tokenIssued control functions main functions .", "title": "", "metadata": ""}
{"_id": "b4ba9eda33ca4763b2d44060bc675f0f", "text": "Validate a ring .", "title": "", "metadata": ""}
{"_id": "8b7cb76ac171d2b61b2b9fd48671f2ba", "text": "Allow _spender to withdraw from your account up to _value .", "title": "", "metadata": ""}
{"_id": "be0683b95ab9f6d168e6e2e1f21a6a5f", "text": "Allows someone to send ether and obtain the meme .", "title": "", "metadata": ""}
{"_id": "f832249452ceb1dcdb8df6bfbb414ab9", "text": "current auction .", "title": "", "metadata": ""}
{"_id": "bfe50df6d50d5bf01be91c7795fcde17", "text": "Seals milestone making them no longer changeable .", "title": "", "metadata": ""}
{"_id": "801f463196753ede32a25040ccd24650", "text": "Deposits foreign token and exchange them to tokens .", "title": "", "metadata": ""}
{"_id": "9967e39adca909784f4cdfbc34e37006", "text": "This modifier checks and , if needed , updates the value of current token contract epoch , before executing a token transfer of any kind .", "title": "", "metadata": ""}
{"_id": "114e71604618d087bd2f4df59163ec0c", "text": "Transfer amount of tokens from own wallet to someone else .", "title": "", "metadata": ""}
{"_id": "ff6103de3ee2368cc6f8e1c9028e68fc", "text": "set addresses for ether and token storage performed once by deployer .", "title": "", "metadata": ""}
{"_id": "62675541cd2ae43740e0fb533943aaba", "text": "Remove offer from the sorted list ( does not cancel offer ) .", "title": "", "metadata": ""}
{"_id": "0d2f10375032d09ff8ed525e6552ad07", "text": "price of one token ( 1e18 wei-tokens ) in euro cents .", "title": "", "metadata": ""}
{"_id": "834b599a4b12c064bac08ae56c322ca8", "text": "Allows the anyone to read the current hardcap .", "title": "", "metadata": ""}
{"_id": "b794262ffdf0169191f14dad50ea4cdf", "text": "Returns asset owner address .", "title": "", "metadata": ""}
{"_id": "732be86e94ce8483ca3f9b03e9bc33ce", "text": "Retrieving Gifto contract adress .", "title": "", "metadata": ""}
{"_id": "bbb7dfe8abc4e2060c9f4e0781819447", "text": "Pay for a preimage .", "title": "", "metadata": ""}
{"_id": "69af75ba017271fd729c37d7c8180da2", "text": "Add an emitter account .", "title": "", "metadata": ""}
{"_id": "60990b599453305fc2cccc260e0f3425", "text": "Start time ( as required by Eidoo's ICOEngineInterface ) .", "title": "", "metadata": ""}
{"_id": "ef71b463e680215b4898da929cbe6c44", "text": "Backing collateral .", "title": "", "metadata": ""}
{"_id": "20d6997845c215895a56a91f3087bfb3", "text": "Returns the total number of Pandas currently in existence .", "title": "", "metadata": ""}
{"_id": "faac2608594962072f7802bdbb435177", "text": "Send _amount of tokens from address _from to address _to .", "title": "", "metadata": ""}
{"_id": "eb395a9046da6e2e42d3907cd9020eda", "text": "Starts the presale .", "title": "", "metadata": ""}
{"_id": "026e25e120dee36c64d9df931676458a", "text": "Get the current price .", "title": "", "metadata": ""}
{"_id": "ea191588c44bd1320101266d60496287", "text": "Return information about the selected window .", "title": "", "metadata": ""}
{"_id": "84fa29747a80b85023b3c65eb9723075", "text": "Checks if an address is ops , owner or admin .", "title": "", "metadata": ""}
{"_id": "e393c0a94ed7f8aa8fd8d0f372a6874a", "text": "Returns the number of payment destinations and amounts pushed to the storage buffer .", "title": "", "metadata": ""}
{"_id": "82361924f2175e106381ffbd6b6f5300", "text": "lock some amount token .", "title": "", "metadata": ""}
{"_id": "c648f5be6f67854173b4ead3aef151fe", "text": "Batch SafeTransferFrom with multiple From and to Addresses .", "title": "", "metadata": ""}
{"_id": "c4811c6b8c8a6c6d5f93d7d984b06b2d", "text": "balance tokens of investor address .", "title": "", "metadata": ""}
{"_id": "7075fc1252f09f5e99790970bbb12bc0", "text": "function transferAirdropTokens - Transfer private tokens via AirDrop .", "title": "", "metadata": ""}
{"_id": "826f127e897ef480b041daca53b8c761", "text": "Return if the specified account has voted on the specified motion .", "title": "", "metadata": ""}
{"_id": "299be239a5544b40e8788dc007bdbe56", "text": "time in minutes .", "title": "", "metadata": ""}
{"_id": "6d030a1ab4ff1ff932c77bfae6115b4f", "text": "Accept ethers and other currencies to buy tokens during the token sale .", "title": "", "metadata": ""}
{"_id": "64cf7525285a169d855385f31c28fd67", "text": "Transfer tokens from one address to another according to off exchange agreements .", "title": "", "metadata": ""}
{"_id": "985f2879ec3b83297f322779b9000ec3", "text": "only by Goldmint contract .", "title": "", "metadata": ""}
{"_id": "637c9ead1495e27facf14a5e202d1846", "text": "Buy now .", "title": "", "metadata": ""}
{"_id": "af1955783931898dedf177a30d0151cf", "text": "Throws when sender is not owner of contract manager .", "title": "", "metadata": ""}
{"_id": "dc8a6743649979bd190ea42dff629509", "text": "Kill method should not really be needed , but just in case .", "title": "", "metadata": ""}
{"_id": "6287ef2a7271d349d69bec872be5294f", "text": "Below function will convert string to integer removing decimal .", "title": "", "metadata": ""}
{"_id": "c25ef7d7101301aa9e912ac712865295", "text": "token assignation .", "title": "", "metadata": ""}
{"_id": "07888e60c2c216044fd53304cb3dcab3", "text": "Owner can add the team member / advisor address .", "title": "", "metadata": ""}
{"_id": "34ef80aaa2f5475f07ccc3d05cf4e474", "text": "Set the Golds given to the player for fighting in this arena .", "title": "", "metadata": ""}
{"_id": "33cdd9aa05ed0dec8a3e0107fd8f374c", "text": "Test whether an identifier is valid .", "title": "", "metadata": ""}
{"_id": "4c0136abb1a98059365c64085e55ca9a", "text": "Issuer Reserve .", "title": "", "metadata": ""}
{"_id": "e181bc2f78e5950b5a75a0208d6f449b", "text": "Raffle for rare units .", "title": "", "metadata": ""}
{"_id": "bbe8819c914060dcbef07f177615f248", "text": "Checks whether an address is in a specified swap .", "title": "", "metadata": ""}
{"_id": "c8cd5f3020bb8c142b30b706d044c4ce", "text": "How many tokens can a holder transfer at a point in time .", "title": "", "metadata": ""}
{"_id": "595d739ca5b4a16c4814bcf73125f660", "text": "transfer dari akun ke akun tapi yang berhak melakukannya adalah akun itu saja .", "title": "", "metadata": ""}
{"_id": "da89e34364e327f66ed6e8b3f7da4ac5", "text": "false if the ico is not started , false if the ico is started and running , true if the ico is completed .", "title": "", "metadata": ""}
{"_id": "5264d24eb35ef22410baeb2c7c5c7b11", "text": "Director can alter the upper and lower bounds of SHL locking capacity .", "title": "", "metadata": ""}
{"_id": "c0d914804f5a9c87ad57cf506f96460e", "text": "Only the owner of a locked wallet can unlock the tokens .", "title": "", "metadata": ""}
{"_id": "10d021e83250d76792c361dd0657642e", "text": "pinch a villain .", "title": "", "metadata": ""}
{"_id": "6adb855d9115de7afd609708a685b5c2", "text": "checkbet on dozen bet type : dozen input : 0 first , 1 second , 2 third .", "title": "", "metadata": ""}
{"_id": "acb7faf8c2a3c5cd27f66a2b0dfc813e", "text": "Add a new user to the exchange , create a wallet for them .", "title": "", "metadata": ""}
{"_id": "17f7c3f6b20f809c27e946a9f84d99e4", "text": "to resume paused sale .", "title": "", "metadata": ""}
{"_id": "6951c685ef11553798ea58ba1c021cbf", "text": "ICO is finished successfully .", "title": "", "metadata": ""}
{"_id": "7e88d0e810f75cf171e28f9f48cc5977", "text": "Handles the bonus logic conversion from Ether's 18 decimal places to 5 decimals for the KISSES token .", "title": "", "metadata": ""}
{"_id": "e282924bfa14f30bd8cdfd205da53734", "text": "God has more priviledges than other admins .", "title": "", "metadata": ""}
{"_id": "052deb7aab5368f7f5b3ccae20bd9c68", "text": "doPayment ( ) is an internal function that sends the ether that this contract receives to the aragonDevMultisig and creates tokens in the address of the .", "title": "", "metadata": ""}
{"_id": "cb5c9492cfd57ab5d87f884c1a6d3000", "text": "returns true if token is successfully removed from whitelist .", "title": "", "metadata": ""}
{"_id": "4a89af9c779bcc2f4a1355eaece3fd8a", "text": "Transfer and call function for calling functions in other contracts while sending this token .", "title": "", "metadata": ""}
{"_id": "3b30a4af111626624151916ee41f4ad2", "text": "function to remove an animal from egg phase can be called from anyone in the member addresses list .", "title": "", "metadata": ""}
{"_id": "3e6544a23ecc69ccfef03874d5cab636", "text": "Limit token transfer until the sale is over .", "title": "", "metadata": ""}
{"_id": "fb08a134e4d2281912af9cdf9df0062e", "text": "Register the calling BlobStore contract .", "title": "", "metadata": ""}
{"_id": "29d0190c29339e1fb7b00e1a10b650a2", "text": "Change publisher fee of SSP .", "title": "", "metadata": ""}
{"_id": "e92ffef304bcd73e366168a3b838ce8f", "text": "set lockup for strategic simu .", "title": "", "metadata": ""}
{"_id": "e7d6799a649a1ae65384c7369a13c072", "text": "Sauvegarder un document ou un ensemble de documents identifi\u00e9 ( s ) par le hash de la racine de l'arbre de Merkle associ\u00e9 .", "title": "", "metadata": ""}
{"_id": "2b35f4140ff79438bff9306b8655d1f3", "text": "Return the price of using Oracalize .", "title": "", "metadata": ""}
{"_id": "bd626de5aad08fe0acbe0eb0e52221a0", "text": "Returns affiliate info for an affiliate code .", "title": "", "metadata": ""}
{"_id": "2d72eb00de0af0412361b3383a5d2b50", "text": "safely multiply .", "title": "", "metadata": ""}
{"_id": "dff748d0d40a58ee7982ce0207c1bdb1", "text": "Contructor that gives msg . sender .", "title": "", "metadata": ""}
{"_id": "729fd332131faa8ca71cd6e60221260f", "text": "Internal method shared by mint ( ) and airdropMinting ( ) .", "title": "", "metadata": ""}
{"_id": "6c7d82beab7bf57caaa7f054ba22d0ae", "text": "simple methods .", "title": "", "metadata": ""}
{"_id": "e97e0396e6f98419cc1637aac1930cfa", "text": "Private helper functions .", "title": "", "metadata": ""}
{"_id": "f8288fa7b1e5d290426a9888fc6c3f36", "text": "Finalizes sale generating the tokens for Aragon Dev .", "title": "", "metadata": ""}
{"_id": "0e7d060dfa4ed0d23bf93213a253f3d3", "text": "Extract a name from bytes _data ( presumably from msg . data ) , .", "title": "", "metadata": ""}
{"_id": "ede2af3ef2fc1062bf9e37c9564c97e2", "text": "Returns the current network block .", "title": "", "metadata": ""}
{"_id": "ae23b4196aec6214d919fc01fead4293", "text": "Function to redeem tokens that can be vested at this moment .", "title": "", "metadata": ""}
{"_id": "154624c8e934d2ac0ec768e2571f6809", "text": "Participate to a presale .", "title": "", "metadata": ""}
{"_id": "a22fbe2e1492c719e96627fabf35b380", "text": "Called when an address wants to purchase tokens .", "title": "", "metadata": ""}
{"_id": "d9b17f9aeb53fd1b556ccab424ca85d5", "text": "Burn a specific amount of tokens of other token holders if refund process enable .", "title": "", "metadata": ""}
{"_id": "9b9ff9c58b4837f3f196c09a10e6c854", "text": "calculates amount of tokens given weiAmount .", "title": "", "metadata": ""}
{"_id": "d28702100b76b931740ecf1a7ec9c6a9", "text": "Returns the topics for a Transfer event .", "title": "", "metadata": ""}
{"_id": "59ef3153ac15ccf078e72458760c240e", "text": "Gets the historic Btc Euro rate .", "title": "", "metadata": ""}
{"_id": "87f4568de7f3d8aa227337c0d9237042", "text": "modifiers mitigate short address attack thanks to https : / / github . com / numerai / contract / blob / c182465f82e50ced8dacb3977ec374a892f5fa8c / contracts / Safe . sol L30-L34 .", "title": "", "metadata": ""}
{"_id": "22f7ea3e9490d68f1f20f46bc178fc95", "text": "creates the genesis word .", "title": "", "metadata": ""}
{"_id": "d1eee15fbdb3cf59661520cbda6e37a9", "text": "currently only permit NovaContract to consume .", "title": "", "metadata": ""}
{"_id": "a672c6207db217a5b2312b5c04a97702", "text": "Check that an invite has already been created with this signer .", "title": "", "metadata": ""}
{"_id": "f7cb6390cf04f5c4eb203b5825b293ee", "text": "Get balance of plain address .", "title": "", "metadata": ""}
{"_id": "fc251bab9058db3aa6635da2029c7c28", "text": "hatchCoins produce coins .", "title": "", "metadata": ""}
{"_id": "60c87ce7cc8b663de38908d96b3aa56b", "text": "Execute the ruling of a dispute which is in the state executable .", "title": "", "metadata": ""}
{"_id": "005bb43c78a4270d4fc68864134abd0c", "text": "The effective share manager .", "title": "", "metadata": ""}
{"_id": "be75fbe6987013ab8ffbea4b9b99acf3", "text": "send / withdraw _amount to _payee .", "title": "", "metadata": ""}
{"_id": "b2ee5e1510c374654ed7f6f33e95e44e", "text": "Financial Calculations .", "title": "", "metadata": ""}
{"_id": "9b6d820821fba4b63dc0572d11bb9331", "text": "First 90 days 50 yearly .", "title": "", "metadata": ""}
{"_id": "ccf406f68d5758dabcac78853b9374eb", "text": "Function that is called when a user or another contract wants to transfer funds using default fallback .", "title": "", "metadata": ""}
{"_id": "93472d87b041d0ee00885c03e603c4d8", "text": "jump in line , moving entries back towards the end one at a time presumes the line length has already been increased to accomodate the newcomer return the the number of positions skipped and the index of the vacant position in line .", "title": "", "metadata": ""}
{"_id": "df87c83a9250f98780fc8f7afb4181d3", "text": "Transfers token for a specified address .", "title": "", "metadata": ""}
{"_id": "7e238ba47937d73e4e9a83eb2e001d3a", "text": "Use admin powers to send from a users account .", "title": "", "metadata": ""}
{"_id": "e653561bde5380d8388dfbcb57a1c3fe", "text": "asset reissuability .", "title": "", "metadata": ""}
{"_id": "fd16494c541b58602045dbaf36a0ba3f", "text": "Access is restricted to owners only .", "title": "", "metadata": ""}
{"_id": "6ee56f9b10e21f5a0afa99b9b5941ef2", "text": "Fixing low level call for providing signature information : create proper padding for bytes information .", "title": "", "metadata": ""}
{"_id": "58bc38ab975bc4728d3a3fcffbe17d2a", "text": "Get assetsOnDeposit .", "title": "", "metadata": ""}
{"_id": "a5a2429619c452bd12e23e694eb79cb5", "text": "Modifier to not allow transfers to 0x0 and to this contract .", "title": "", "metadata": ""}
{"_id": "ebf9a8a68dafa94489451a580ee8ba1c", "text": "finalizeCrowdsale issues tokens for the Team .", "title": "", "metadata": ""}
{"_id": "2eb21bee8535f01fb2f8778911de7b49", "text": "Only allowed to execute after the first stage is closed .", "title": "", "metadata": ""}
{"_id": "4ae4038184b64d942b5b4cf4424f74a0", "text": "Allows the current owner to transfer control of the contract to a newContract .", "title": "", "metadata": ""}
{"_id": "1fafd7b790700b950635f966cf181214", "text": "Calculates from Bonus Scheme how many tokens can be added to purchased _tokenAmount .", "title": "", "metadata": ""}
{"_id": "3d3aadb434cfb5a12f741044f0685f53", "text": "function to resume the crowdsale if it is paused can only be called from owner wallet if the crowdsale has been stopped , this function would not resume it .", "title": "", "metadata": ""}
{"_id": "5627cf27a0da03135343a85637e80e08", "text": "Adds vested token allocation .", "title": "", "metadata": ""}
{"_id": "612dfd44b690d78cf3185abd3e2e25fb", "text": "ERC20 Token Decimals .", "title": "", "metadata": ""}
{"_id": "f967dbe189a5ab9fa6c576fea37bb8f4", "text": "Create a random number .", "title": "", "metadata": ""}
{"_id": "ed46cfc8cebf90a95c6eb193c7fc2764", "text": "for our token , the balance will always be zero if we're still minting them once we're done minting , the tokens will be effectively released to their owners .", "title": "", "metadata": ""}
{"_id": "1bb59a7cdbf218288954bee1257c337f", "text": "Returns asset balance for a particular holder .", "title": "", "metadata": ""}
{"_id": "c00229d4f92b545d08296cd5968406ef", "text": "add DTH when shop register .", "title": "", "metadata": ""}
{"_id": "95e01e2d280c2822b76f3e314b99954d", "text": "Allows for refunds to take place , rejecting further deposits .", "title": "", "metadata": ""}
{"_id": "683b9eae9f60694895bb1ef491a0a410", "text": "Assigns a new address to act as the COO2 .", "title": "", "metadata": ""}
{"_id": "8d603fc967fd2f1148495633c40ff109", "text": "Make sure we are over the soft cap .", "title": "", "metadata": ""}
{"_id": "2c636d266fb1cad9067d1e11372c0950", "text": "Call this before the startTime to avoid delays .", "title": "", "metadata": ""}
{"_id": "99c2a370b5682d21920e41e6ab3dfb6d", "text": "condition for method to be executed only by bonus owner .", "title": "", "metadata": ""}
{"_id": "461b3101a045036438d25690bb9edd1c", "text": "EnableSale Function .", "title": "", "metadata": ""}
{"_id": "045ef77ccd185b95f2d5b3e6959de256", "text": "sets the default reputation reward for new manufacturers .", "title": "", "metadata": ""}
{"_id": "9c634c2020da022e7636e175787268f4", "text": "Private Functions https : / / github . com / OpenZeppelin / zeppelin-solidity / blob / master / contracts / ECRecovery . sol .", "title": "", "metadata": ""}
{"_id": "2be5a535cbf98bc172b5a6cc5a90cdcd", "text": "This function will return only the DBZ owner address of a specific hero .", "title": "", "metadata": ""}
{"_id": "aff8e5a3777262b49110d439d387820b", "text": "Activation of the token allows all tokenholders to operate with the token .", "title": "", "metadata": ""}
{"_id": "dd9b9f6a9e0b3bf28abca133e5718c13", "text": "Calculates how many tokens one can buy for specified value .", "title": "", "metadata": ""}
{"_id": "12f65a7b723c28d90e0911c71213cb67", "text": "Count 1 bits in the bet bit mask to find the total number of bet options .", "title": "", "metadata": ""}
{"_id": "fbfebeffde0c191d622297b408b616d0", "text": "Utility function for buy token .", "title": "", "metadata": ""}
{"_id": "96e9d38c8947f704324b187983d21428", "text": "Perform a sell order at the exchange .", "title": "", "metadata": ""}
{"_id": "1713f193323322d26ad27e66c789202b", "text": "Start taking donations .", "title": "", "metadata": ""}
{"_id": "40876d4f3b62fb6df57a699f99d1a712", "text": "A check to see if a specific address has anything to collect .", "title": "", "metadata": ""}
{"_id": "42a0ee0ce8bb3305d3f1a0a9dc2b9bae", "text": "Admin functions only called by owner : .", "title": "", "metadata": ""}
{"_id": "fbaed6da1905a98019f06e10c6ee4717", "text": "this function allows to destroy current contract in case all rooms are paused or not used .", "title": "", "metadata": ""}
{"_id": "be039707bbe23c6f7b9fae855bc8e4e9", "text": "Setup function sets external crowdsale contract's address .", "title": "", "metadata": ""}
{"_id": "fa1bf4aacf990582a46d28f7323cf083", "text": "Smartcontract halt .", "title": "", "metadata": ""}
{"_id": "eaf51d07f627dd2231b7ef6f6a0d647c", "text": "Updates the current ICO price according to the rules .", "title": "", "metadata": ""}
{"_id": "c0046e3c5d39e39b975d052072e61004", "text": "Update the status of a flight .", "title": "", "metadata": ""}
{"_id": "95e3a7b8dbe407d9fa2cd80f08c0eb8e", "text": "In case an investor wants to retrieve his or her funds he or she can call this function .", "title": "", "metadata": ""}
{"_id": "71e6d15bd8215ed93fda89737c5b5948", "text": "set gas for operations .", "title": "", "metadata": ""}
{"_id": "749364992a474f7411395c0d8d8dbf96", "text": "Count number of tokens with bonuses .", "title": "", "metadata": ""}
{"_id": "326b4b103a9ab603d4319a8ef1756a8f", "text": "Approve and then communicate the approved contract in a single transaction .", "title": "", "metadata": ""}
{"_id": "fa6318e1772128cb0f009e084ba28ba2", "text": "Escrows the CCToken , assigning ownership to this contract .", "title": "", "metadata": ""}
{"_id": "b8e65f1ea965867d16c6d70da7840cf1", "text": "Withdraw Tip .", "title": "", "metadata": ""}
{"_id": "6f94b83eb33bde10c7844ee807e680ca", "text": "Delete an administrator .", "title": "", "metadata": ""}
{"_id": "b82a547afda366fa759ef8d22771ffee", "text": "Get the name of the Asset type .", "title": "", "metadata": ""}
{"_id": "e5f1dea1dcf2c520ec071408c8bb6bdf", "text": "utility function to allow the owner to allocate tokens .", "title": "", "metadata": ""}
{"_id": "79200a4189c3c42f7c6725e6608ddd71", "text": "get the amount of unsold tokens allocated to this contract ; .", "title": "", "metadata": ""}
{"_id": "26199e46c9910ec8f06095f55934deb9", "text": "Destroy tokens on specified address ( Called by owner or token holder ) .", "title": "", "metadata": ""}
{"_id": "43b057762a432cf74c04b1e94ad8c1f3", "text": "Calculates the quantity of Melon asset that's currently withdrawable .", "title": "", "metadata": ""}
{"_id": "606d7c1238f2132ed5ff58a39290b54b", "text": "Get number of bets .", "title": "", "metadata": ""}
{"_id": "91c9c126be70e111753d75ad1636efa8", "text": "Modifying counter or target are internal functions .", "title": "", "metadata": ""}
{"_id": "df1600c8fa21d98bb03dbf64a423d44c", "text": "function to check if user is whitelisted .", "title": "", "metadata": ""}
{"_id": "7da75236dad738e88da3f78cfbb3305b", "text": "Protects users by preventing the execution of method calls that inadvertently also transferred ether .", "title": "", "metadata": ""}
{"_id": "b050e42a02a1d83cb1f46b070177887b", "text": "Addition with safety check .", "title": "", "metadata": ""}
{"_id": "c74930a4455812d71356340b47e62332", "text": "The amount of all caps scanned so far .", "title": "", "metadata": ""}
{"_id": "468578ef94b754d5f6588f78a02f4ae2", "text": "Allows a user to forward a call through their proxy .", "title": "", "metadata": ""}
{"_id": "ab606ea46c11b97494a138833860d904", "text": "Returns auction info for an FT ( ERC-20 ) on auction .", "title": "", "metadata": ""}
{"_id": "13c6ed27b064c5318d42643d1a8330cf", "text": "Functions with this modifier can only be called when the ICO is not paused .", "title": "", "metadata": ""}
{"_id": "ca99932f82916294dbf4819868054323", "text": "Allow anyone to sell tokens for ether , depending on the sellPrice set by the contract owner .", "title": "", "metadata": ""}
{"_id": "46fe66f2b2f01aafd75885476d756f46", "text": "claimable returns how much a given address can claim from the airdrop .", "title": "", "metadata": ""}
{"_id": "cde8723cc0d08f246d4895ddb1357555", "text": "Change ownership of the Ranch .", "title": "", "metadata": ""}
{"_id": "4ede06f23b485f67d48a0cc8225035a7", "text": "transfers remaining unsold token amount to reward pool .", "title": "", "metadata": ""}
{"_id": "26cc6a79ccd81746e5e1e8a8d4db5ea7", "text": "Function to start ICO .", "title": "", "metadata": ""}
{"_id": "524db904c77ae1a2171c2593a6d54591", "text": "Get the price for the given tile .", "title": "", "metadata": ""}
{"_id": "580f0e681b342218db3701ce1aad8415", "text": "Notifies the controller about a transfer , for this TokenSale all transfers are allowed by default and no extra notifications are needed .", "title": "", "metadata": ""}
{"_id": "6c4c64b490773368bb1f02608b141ae5", "text": "Updates the crowdsale contract property with the new _crowdsaleContract value .", "title": "", "metadata": ""}
{"_id": "0ee0d39ef91f5d102ff1ba31b7ee8d77", "text": "Reward tokens - tokens go to .", "title": "", "metadata": ""}
{"_id": "6b24cd548a4f02ebedb00f6ac2c89fac", "text": "Sets the presale contribution for a contributor .", "title": "", "metadata": ""}
{"_id": "c3bc090934f6405b5e40f7268d03054e", "text": "Remove a minter should they no longer require or need the the privilege .", "title": "", "metadata": ""}
{"_id": "ef945e2ee0a2d6f9fa912a949d67b3f8", "text": "Checks if a given address is the current owner of a particular Pony .", "title": "", "metadata": ""}
{"_id": "ae8a50a069dbf33c33e3911e2732b2db", "text": "Calculates buy and sell rates after oracles have received it .", "title": "", "metadata": ""}
{"_id": "cc651605b88b60231d5bb3e252dd923b", "text": "sell token , soldSupply , lockAccount .", "title": "", "metadata": ""}
{"_id": "b9170a809e347686ff89e34bd527e46c", "text": "Bet on Color .", "title": "", "metadata": ""}
{"_id": "79fb26b8f79f9acc154a322bace5afd5", "text": "use this when extending asset state processor .", "title": "", "metadata": ""}
{"_id": "5864a840b82a03408d4d507d2553500d", "text": "Allows a function to be called only by the minter .", "title": "", "metadata": ""}
{"_id": "b5c58491946f93ab9b71efd84c38b830", "text": "This function acts like a withdraw function , since an outside party can call it in order to take tokens out of another user s account .", "title": "", "metadata": ""}
{"_id": "c69e6ba783180a1cc354d2741536a1f5", "text": "Refund 'value' wei to sender .", "title": "", "metadata": ""}
{"_id": "0cca32b30502c6a1ad0dc9e75c8b0e7d", "text": "Number of dividends owed to the contract .", "title": "", "metadata": ""}
{"_id": "a4095bef528cc10b41eaad29a2835831", "text": "arise warrior .", "title": "", "metadata": ""}
{"_id": "01c1c6ef4955dcbd84410a1b3337cdfa", "text": "after the withdrawal , policy will transfer back the token to the ex-holder , the policy balance ledger will be updated either .", "title": "", "metadata": ""}
{"_id": "fbe4fa4e590a2227b36bb6dc4b58f839", "text": "Set price cutoff when determining phoenix price after explosion .", "title": "", "metadata": ""}
{"_id": "c753fa355ea5d58634dd2604d5184965", "text": "check is it possiable to buy .", "title": "", "metadata": ""}
{"_id": "bbac4f4f9b959ca4798543ba2faada62", "text": "WARNING ! ! ! ! ! Can only set this function once ! .", "title": "", "metadata": ""}
{"_id": "34a265d56bc3fda1340b51a3aa98a483", "text": "Approve another address a certain amount of TTT .", "title": "", "metadata": ""}
{"_id": "47327c002dd604cd79937cc6da7712e2", "text": "Preallocate tokens to handelion platform owners .", "title": "", "metadata": ""}
{"_id": "29f141c1d260930b345eb232f790804a", "text": "Since the DungeonToken contract is re-deployed due to optimization .", "title": "", "metadata": ""}
{"_id": "54550f4b2f5640c98b60fd49192384e5", "text": "Close the second stage and overall sale .", "title": "", "metadata": ""}
{"_id": "81c889c485e3cbdd6cbe7873f91e5089", "text": "Get Smart Contract of the address approved .", "title": "", "metadata": ""}
{"_id": "200dc0997d34b7297e4bd1f3d5e8abc9", "text": "Update historical balances for given token owner .", "title": "", "metadata": ""}
{"_id": "c12b41e9e7683cf2956483e2e19b770a", "text": "Send approved tokens to two addresses .", "title": "", "metadata": ""}
{"_id": "4d30d5b2805520371801dca5a0e3031c", "text": "falback for EXY deposits .", "title": "", "metadata": ""}
{"_id": "733d2e1292d1906d9fd439e4f3ef8f53", "text": "allows changing of the booking fee , note obol and token price are fixed and cannot change .", "title": "", "metadata": ""}
{"_id": "969bbba6bfc0ee8d7709ca4449f3fce9", "text": "set the amount of tokens that an owner allowed to a spender .", "title": "", "metadata": ""}
{"_id": "93ab005b7aded2639c149ae83dee5539", "text": "tokens debe ser el n\u00famero de tokens seguido del n\u00famero de decimales .", "title": "", "metadata": ""}
{"_id": "dc23f5547b2efe735c049100f1cf0b9b", "text": "function pay dividends to investors .", "title": "", "metadata": ""}
{"_id": "6453aa1bcde945488ff83b436a628dae", "text": "calculate released Tokens by the owner .", "title": "", "metadata": ""}
{"_id": "813b8fae588fbcde9fd221d03364ce19", "text": "Withdraws all ETH deposited or tokens purchased by the given user and rewards the caller .", "title": "", "metadata": ""}
{"_id": "434c50bafedd81920a8737ff4f6102f9", "text": "Return card by id .", "title": "", "metadata": ""}
{"_id": "da48e2f1de9d2949b9494fd89fff999a", "text": "an optimasition in case of network congestion .", "title": "", "metadata": ""}
{"_id": "88ef7ee2a47aab47f20e3a88e3f949d2", "text": "Throws if operator is not whitelisted .", "title": "", "metadata": ""}
{"_id": "8cc7bf43a609fc1066be15265d8cae60", "text": "admin moderators .", "title": "", "metadata": ""}
{"_id": "956ad89e1e295166a1b9c43cefee45ea", "text": "Stakes tokens from the caller for a given user duration , and rewards that user with credits .", "title": "", "metadata": ""}
{"_id": "5828bb04b981a1a1d9b0820fae9a8940", "text": "overflow check .", "title": "", "metadata": ""}
{"_id": "e96ca9f19e53b43ce7d073ea18aceaca", "text": "adjust the ante , player number and percentage for the winner .", "title": "", "metadata": ""}
{"_id": "8530d14e48157265a4f881bad437e804", "text": "Insert node b beside and existing node a in direction d .", "title": "", "metadata": ""}
{"_id": "55cd08ac9f35161ea6c00fa0d7f35d19", "text": "Distribute unlockable tokens to three addresses , proportion 3 : 1 : 1 .", "title": "", "metadata": ""}
{"_id": "cee41043406929daf53cf323eece1f05", "text": "get name for specified namespace and msg . sender , .", "title": "", "metadata": ""}
{"_id": "bdbe848758c905f1880cb4ae3b1c20e5", "text": "Must be called to end the sale , to do some extra finalization work .", "title": "", "metadata": ""}
{"_id": "f3bea061b6eef2c6f748da6be9ff97d9", "text": "Assigns a new address to act as the Issuer .", "title": "", "metadata": ""}
{"_id": "94d797031e04b8dc4315ad73e9364899", "text": "Amount of tokens that could be sent .", "title": "", "metadata": ""}
{"_id": "826e1a07939d3f0ffec5ffbb52dc99f5", "text": "Update a profiterole address .", "title": "", "metadata": ""}
{"_id": "c8d7b90548f20fa0dd44e360bcde643f", "text": "Use with caution - use this withdraw function if you do not trust the contract's token setting .", "title": "", "metadata": ""}
{"_id": "0bea7f28027951ef3d2cfa4e1a628607", "text": "Registers node with rate .", "title": "", "metadata": ""}
{"_id": "08b795f376c78d17d1d2209a12e5d907", "text": "adds an address that will have the right to add investors .", "title": "", "metadata": ""}
{"_id": "136bd93331ac503938099855b01bd226", "text": "Users can withdraw their accumulated dividends .", "title": "", "metadata": ""}
{"_id": "98a0d98807c3f191cb3a960b384ef177", "text": "Claim collected ether without closing crowdsale .", "title": "", "metadata": ""}
{"_id": "67887a88f07d6897fdae4c491d026219", "text": "Checks whether the tokenCap has been reached .", "title": "", "metadata": ""}
{"_id": "dd761d493cf7249b95c20dcc5fe07238", "text": "This function will return only the bets id of a certain address .", "title": "", "metadata": ""}
{"_id": "c49ca0982c493f2e55dfe2f7308fe8de", "text": "buy Copper with ether .", "title": "", "metadata": ""}
{"_id": "a9f4ad58aa7ccb36cfca90611861305c", "text": "Transfer _value etheres to _to .", "title": "", "metadata": ""}
{"_id": "86fae1514a323ef1064f9ad3db52e5f0", "text": "function createTokenContract - Mintable Token Created .", "title": "", "metadata": ""}
{"_id": "8985a195a2e4b742c24cf71fd31ebc88", "text": "helpers for events with counter .", "title": "", "metadata": ""}
{"_id": "dbeabd2522c3e9b78f0726d105450bd8", "text": "Sets calculated proposalIdx as voting winner .", "title": "", "metadata": ""}
{"_id": "dc17054ac3849cacc0490be086452163", "text": "Allows someone to send Ether and obtain a card .", "title": "", "metadata": ""}
{"_id": "4654fd049f8baa1072b26c565f60683e", "text": "Allows only the contract owner to transfer ownership to someone else .", "title": "", "metadata": ""}
{"_id": "12e467907f16a8e28f9ede94b18edff7", "text": "_durationSecs - A duration of race in seconds .", "title": "", "metadata": ""}
{"_id": "d70abc8d3a188715e6f00ef9d074e499", "text": "Optional for ERC-20 compliance .", "title": "", "metadata": ""}
{"_id": "22c7c4e7b51c3ae2cc668b225598ac63", "text": "Add canTransfer modifier before allowing transfer and transferFrom to go through .", "title": "", "metadata": ""}
{"_id": "98fa89c22913a1f216ac1501ecf62a98", "text": "Called by the owner of the contract to open the WhitelistApplicant / Public periods .", "title": "", "metadata": ""}
{"_id": "94d040c8023c636c046ce5c5f7b5fac7", "text": "Set / Unset address as permissioned .", "title": "", "metadata": ""}
{"_id": "7a673b2a3f0fe6b3ef6b230557cb8ed4", "text": "Remove element from list .", "title": "", "metadata": ""}
{"_id": "7564d7de7f01d1e9a64bddf04610d036", "text": "Add a historically significant event ( i . e .", "title": "", "metadata": ""}
{"_id": "5e25c595e711d4d6e9e8f1e664d4c020", "text": "Withdraws all ether from this contract to wallet .", "title": "", "metadata": ""}
{"_id": "1d9eb88c0e19fe8e27431d12aabf5500", "text": "Extend parent behavior requiring contract to not be paused .", "title": "", "metadata": ""}
{"_id": "b9f59a997e65c55280127796c3af1a2c", "text": "Buy agreed amount of tokens from the specific seller at the agreed price .", "title": "", "metadata": ""}
{"_id": "d3449df798f9eb557d1e2bf19a511065", "text": "To get price for EXH Token .", "title": "", "metadata": ""}
{"_id": "171a0595b4c68427d320375b33251503", "text": "We use this function to affect an army to an address ( when someone purchase an army ) .", "title": "", "metadata": ""}
{"_id": "88552f603995746d38a4bbd2c7f996d6", "text": "Initiate ICO purchase .", "title": "", "metadata": ""}
{"_id": "9b8702855d3f85211f00b1c815b55825", "text": "allows the owner to update the registry contract address .", "title": "", "metadata": ""}
{"_id": "43519a1f10028f8dce93c02d24461194", "text": "Allow the owner of the contract to withdraw the bounty after the release time has passed .", "title": "", "metadata": ""}
{"_id": "0102be8622fe9c214c0096b3a6185349", "text": "Allows to create a subdomain , set its resolver and set its target address .", "title": "", "metadata": ""}
{"_id": "11dfedf0275551386c0a51bcc7f1a9ae", "text": "Transfer specified amount of tokens to the specified address .", "title": "", "metadata": ""}
{"_id": "85e254776eb0d5c529abb069362104cf", "text": "Current mintable MET in auction .", "title": "", "metadata": ""}
{"_id": "210b304db9a873d80aa1131c272eec42", "text": "Locked tokens , in the locked token reward calculation and distribution .", "title": "", "metadata": ""}
{"_id": "461e379cbcc1c9a878d615d150661e37", "text": "Gets the deed ID of the specified address at the specified index .", "title": "", "metadata": ""}
{"_id": "d3c69f47ba5b78703a514f0198f063b5", "text": "ERC20 Standard : Returns the amount which spender is still allowed to withdraw from tokenOwner .", "title": "", "metadata": ""}
{"_id": "e472d40997ad2e248b7ab19f1e476478", "text": "Set the forwarding address for donated ether .", "title": "", "metadata": ""}
{"_id": "a2b1f7191161091551032152c2380bb3", "text": "Investors can move their tokens only after ico has successfully finished .", "title": "", "metadata": ""}
{"_id": "18b8b3c4266819c1585462ca9c7d4334", "text": "Investing function that recognizes the payer and verifies that he is allowed to invest .", "title": "", "metadata": ""}
{"_id": "1b808a2676f2686eb29f4d16f6962f30", "text": "Whether the tokens where sucessfully burned or not .", "title": "", "metadata": ""}
{"_id": "63b272dd90978a275a051e67a8edf7d4", "text": "Freezes transfers untill the specified block .", "title": "", "metadata": ""}
{"_id": "097ef97015692ae3d60c68fc495eb5fb", "text": "Global MET supply .", "title": "", "metadata": ""}
{"_id": "bb2548e0c67620bff9f50ad6eefe2650", "text": "Note that not ether . . . its .", "title": "", "metadata": ""}
{"_id": "26275deff95b637cee444d9cb143c8cf", "text": "Once activated , a new token contract will need to be created , mirroring the current token holdings .", "title": "", "metadata": ""}
{"_id": "a94b88efe2473fbd6f7e4ac5a7c8f07f", "text": "refund Tokens of a single address .", "title": "", "metadata": ""}
{"_id": "8500038e82b3413bb55042cb95a44c30", "text": "returns the number of tokens for an user .", "title": "", "metadata": ""}
{"_id": "cd74692499346d672737b831b3116e55", "text": "approve and notify .", "title": "", "metadata": ""}
{"_id": "76108454a4cdb6dc350f6602ac22dd7e", "text": "only the owner .", "title": "", "metadata": ""}
{"_id": "cbda33c8faf535c0a8ece677499ea1df", "text": "result - the hash of the string .", "title": "", "metadata": ""}
{"_id": "9418deba6e89467a1c1312fb7f5ff531", "text": "Define how many wonderful Kitten Coins will be issued for participating the selfdrop : basic and holder reward .", "title": "", "metadata": ""}
{"_id": "5bc9a654f35c84df37890277be974193", "text": "1y locked balances for an account .", "title": "", "metadata": ""}
{"_id": "6165a612c8bf177f3823c8b9b39b89de", "text": "Function to transfer the funds to founders account .", "title": "", "metadata": ""}
{"_id": "831c6a0e69e350c7bf89e8ce74789b0c", "text": "it will remove whitelisted user .", "title": "", "metadata": ""}
{"_id": "fdd9ec212533ac50c41940dffd8a35fb", "text": "Governance fee .", "title": "", "metadata": ""}
{"_id": "b786a46ae9fc9abed346a49540d2ca31", "text": "0 . 1 ether is a pretty good bet amount but if price changes , this will be useful .", "title": "", "metadata": ""}
{"_id": "22119cebb35e5bf4b4aed1808fc79aa2", "text": "get balance of a specific address .", "title": "", "metadata": ""}
{"_id": "d8cf4b241022ffcd722d475bd5d37a5b", "text": "Ensures that the sender is the admin address .", "title": "", "metadata": ""}
{"_id": "317bb6f7d698d9ec2e7136f7684d3628", "text": "insures the caller payed the required amount .", "title": "", "metadata": ""}
{"_id": "abe6ed16ebcd7cc1a4dd151353497258", "text": "Approve user's KYC and sets referrer .", "title": "", "metadata": ""}
{"_id": "5023eb38a3ddaac023d4abe35e86cb2d", "text": "This function allows the owner to update the gas price limit public onlyOwner .", "title": "", "metadata": ""}
{"_id": "81550253cb454ad532597aa1311de82a", "text": "View function to check whether the game should be terminated .", "title": "", "metadata": ""}
{"_id": "ce8f3b2ae1fb1db97e45a501c7f6064d", "text": "Allocates bonus tokens to advisors , founders and company .", "title": "", "metadata": ""}
{"_id": "cbd9cf82482604d8da6718febc53781c", "text": "Set an upgrade agent that handles .", "title": "", "metadata": ""}
{"_id": "8916d9af09cb79445cadf2fb6348b0c6", "text": "the total amount of tokens payed out .", "title": "", "metadata": ""}
{"_id": "48c823e112960b4b56de634ef436b4b8", "text": "Frees value sub-tokens owned by address from .", "title": "", "metadata": ""}
{"_id": "ecfb926da81eeac0b9e5f3ecf2628e1f", "text": "Same ERC20 behavior , but reverts if not yet active .", "title": "", "metadata": ""}
{"_id": "15f81f53e8eaf3f7025ffd62db9e9b6e", "text": "note : constant fcn does not need safe math .", "title": "", "metadata": ""}
{"_id": "276449741d3db83d915921ba9d2cba8e", "text": "Creates the next generation for the given pool .", "title": "", "metadata": ""}
{"_id": "9e62c4039e74f61e6515e9b7e30530d4", "text": "getter for contractIsAlive .", "title": "", "metadata": ""}
{"_id": "8f14dcb1bf7b7412df70babc44d58236", "text": "Used by owner to distribute bonus token .", "title": "", "metadata": ""}
{"_id": "0cd82649832fa4e908ed35a35917eabd", "text": "This function is used to lock a user's token , tokens once locked cannot be transferred only admin can invoke this function .", "title": "", "metadata": ""}
{"_id": "d884724e9fc9561970f65d03ef041496", "text": "refill contract with funds .", "title": "", "metadata": ""}
{"_id": "4cd46d7bd5cc619b38b86350a9479df6", "text": "check current block is inside closed interval startBlock , endBlock .", "title": "", "metadata": ""}
{"_id": "78557afd7ea546b0da4ee32d28ed08fb", "text": "Recording of verification details .", "title": "", "metadata": ""}
{"_id": "43ac414742f0d46a5118c1fb33c98ee7", "text": "We do not want big difference with our contract's balance and actual prize pool .", "title": "", "metadata": ""}
{"_id": "c48e1e8ae049ef5a870b00e05d22af94", "text": "For querying totalSupply of token .", "title": "", "metadata": ""}
{"_id": "55c80445a7ece40e4e46679f883c3489", "text": "Function for getting the block revenue per ticket .", "title": "", "metadata": ""}
{"_id": "516b19ba81133c3fab04c777fbb54af3", "text": "low level function used to do a sanity check of input data for CMA token transfers .", "title": "", "metadata": ""}
{"_id": "15cb7decbb9f03577e3f1120fe14c6cf", "text": "Function for checking if the given address participated in given block .", "title": "", "metadata": ""}
{"_id": "7055ca53c8fc7047218215e33e10a65b", "text": "Assigns ownership of a specific Gem to an address .", "title": "", "metadata": ""}
{"_id": "80253afa5e1ee686bcb9ec57c372bc40", "text": "killer method that can be used by owner to kill the contract and send funds to owner .", "title": "", "metadata": ""}
{"_id": "ef3585d450598180ac7f4b2bd1c18703", "text": "withdraw excessive reserve - i . e .", "title": "", "metadata": ""}
{"_id": "fa517479d296bb80f0cd5bad9820916d", "text": "public ( read only ) : calc the active sale stage as a function of any amount .", "title": "", "metadata": ""}
{"_id": "86a99bc80166b88ea6c0896a2e06b780", "text": "gas usage 100000 .", "title": "", "metadata": ""}
{"_id": "a7bf47a1d49c24065994cf5ed94ddd7f", "text": "Reverts if beneficiary is not whitelisted and isFreeTransferAllowed is false .", "title": "", "metadata": ""}
{"_id": "495fc07592b561b1c42e65007aedd3e9", "text": "allows the owner to change who the owner is .", "title": "", "metadata": ""}
{"_id": "245654196a7d9a75987c797832f3c210", "text": "An internal method that creates a new kitty and stores it .", "title": "", "metadata": ""}
{"_id": "9cd20eba6193a4de17082d445d925ace", "text": "returns the actual completion date of the job of the requested job .", "title": "", "metadata": ""}
{"_id": "cc211cda98378d051edd8964e9b3c51c", "text": "minimum of 0 . 001 ether for purchase in the public , pre-ico , and private sale .", "title": "", "metadata": ""}
{"_id": "d83127923a152448ce07169d01f6011b", "text": "only to be used by the ICO .", "title": "", "metadata": ""}
{"_id": "7c03e840f79bb75b0ad48285568c393d", "text": "Get the amount of this order we are able to fill .", "title": "", "metadata": ""}
{"_id": "2b200f5219f53ce12cea9599f37ebacd", "text": "end lifecycle functions start payout related functions get current payout for perTokenPayout and unclaimed .", "title": "", "metadata": ""}
{"_id": "c3c46fc77bc58836f37d993c18eb6659", "text": "convenience function to turn Delegations into a returnable structure .", "title": "", "metadata": ""}
{"_id": "eb9264befb9560d3230a2f5a1fdda887", "text": "Get customer attestation data by KYC provider and customer ethereum address .", "title": "", "metadata": ""}
{"_id": "7945e43e2ae89302d5323ec6e63c344d", "text": "used to change the fee of the usage cost .", "title": "", "metadata": ""}
{"_id": "6589747d012a404957d1d09b514e4788", "text": "callPluginsPledge is used to apply plugin calls to the delegate chain and the intended project if there is one .", "title": "", "metadata": ""}
{"_id": "5bbaddfdcb71d47f734dbfc8f847e617", "text": "Adds a proposition of a partner token split to companyTokensAllocation .", "title": "", "metadata": ""}
{"_id": "168a11aec57d96c6f9b6b9d11f5c9fd3", "text": "returns the expected return for converting a specific amount of _fromToken to _toToken .", "title": "", "metadata": ""}
{"_id": "ea3751721d240f76e39d6102f17ba268", "text": "Returns amount of tokens _spender is allowed to transfer or burn .", "title": "", "metadata": ""}
{"_id": "2d106ac31291b9ea100ec55ac29f8a6a", "text": "Destroys the contract as well as the little sister .", "title": "", "metadata": ""}
{"_id": "24280a713d807fecc90b81a8a5dc864e", "text": "To limit functions usage to contract owner .", "title": "", "metadata": ""}
{"_id": "a714fd04064926c2ef7caae089af2123", "text": "true if the public ICO is in progress .", "title": "", "metadata": ""}
{"_id": "43f503431be5faaf6113d5e519264483", "text": "Withdraw an amount of ether .", "title": "", "metadata": ""}
{"_id": "8fd195bc0921f9c4d84effe3fa480b45", "text": "Returns the amount od tokens that can be sent from this addres by spender .", "title": "", "metadata": ""}
{"_id": "7924d94c5275cf5c025b6beda06affea", "text": "Get the current state of the Lottery .", "title": "", "metadata": ""}
{"_id": "03003a648aa5eaf4d05d5650574a5de0", "text": "Returns all the relevant information about a specific panda .", "title": "", "metadata": ""}
{"_id": "f11d287f6a5be445683afa7484cf2499", "text": "checks only owner address is calling .", "title": "", "metadata": ""}
{"_id": "6ac804b019838b863146512ee26b1cee", "text": "charge fee .", "title": "", "metadata": ""}
{"_id": "9a3355b74e0d9655124eece7766d2df7", "text": "withdrawBalance from the contract address .", "title": "", "metadata": ""}
{"_id": "c316d296116e3d8712a033dd1377ff2e", "text": "There shouldn't be any funds trapped in this contract but as a failsafe if there are any funds whatsoever , this function exists .", "title": "", "metadata": ""}
{"_id": "a12ea875d34255375444e84e5277abd2", "text": "bool Simply notates if the two string have an equivalent .", "title": "", "metadata": ""}
{"_id": "eeeb0e79cbed045360929541398a0e42", "text": "End token minting period permanently for Issuer .", "title": "", "metadata": ""}
{"_id": "d8737e1f548aa1b4913b161514c95cc6", "text": "returns block when price was updated last .", "title": "", "metadata": ""}
{"_id": "397dc7aaf988fbc2f61000d4b3c72906", "text": "Retrieve token balance for an account .", "title": "", "metadata": ""}
{"_id": "9abbb24560b002620f76494cdf3bf420", "text": "token's name .", "title": "", "metadata": ""}
{"_id": "c0ece38bfa4669db6ad75210b40d40bb", "text": "true if a ring's hash can be submitted ; false otherwise .", "title": "", "metadata": ""}
{"_id": "ab771cf8efabb2b2b69fee994b0b231f", "text": "Modifier that requires a provided plaintext match a previously stored hash .", "title": "", "metadata": ""}
{"_id": "cfcc1dbae55cfb6829044e0f5c660428", "text": "Calculates and returns the bonus percentage based on how early an investment is made .", "title": "", "metadata": ""}
{"_id": "3a0207d682d87a07db1982cd3e62f505", "text": "Distribute tokens to multiple addresses in a single transaction .", "title": "", "metadata": ""}
{"_id": "679fa663b2540639fa4a5acaeb59729a", "text": "retrieve number of all TMX Global Tokens in existence .", "title": "", "metadata": ""}
{"_id": "49da9a9b8cf1721c41b8703fb624e7f5", "text": "If Transaction number i has correct numbers of confirmations and .", "title": "", "metadata": ""}
{"_id": "8bc93bb18ea0559a5b082dadc4a48b6f", "text": "Adjust the cap according to the white paper terms ( See STT Whitepaper Version 1 . 0 from 23 .", "title": "", "metadata": ""}
{"_id": "2c0d6a33bc82951f0e3b190b37baccd8", "text": "useful for contributor to check before sending ether .", "title": "", "metadata": ""}
{"_id": "4e93efff7d52c2c406249d78a5ff4e71", "text": "EOSclassic developer's note : the registration function is identical to the original EOS crowdsale registration function with only the freeze function removed , and 'emit' added to the LogRegister event , per updated Solidity standards .", "title": "", "metadata": ""}
{"_id": "c3478cb381ed70fad956f0b8848ea6ae", "text": "routine 40 - allows for sale of intermediate product made from certified ingredients along with the respective IGR token transfer ( with url ) i . e . : .", "title": "", "metadata": ""}
{"_id": "c590de8ee5c724869dbd96a99ac2527a", "text": "For creating Collectibles .", "title": "", "metadata": ""}
{"_id": "f07721cb3985656f5d6ca08e280c9fc8", "text": "Throws if called when ICO is completed .", "title": "", "metadata": ""}
{"_id": "a9616c139dd3c6eee2d71e1e87509dfc", "text": "returns the rate the user will be paying at , based on the amount of wei sent to the contract .", "title": "", "metadata": ""}
{"_id": "f4fa84204cd94e17c4434db2d9041465", "text": "Check whether an address is an authorized operator of another address .", "title": "", "metadata": ""}
{"_id": "b4504a0454b721652bbf384f70e3b8aa", "text": "bans prevent accounts from voting through this proposal this should only be used to stop a proposal that is abusing the VOTE token the burn is to penalize bans , so that they cannot suppress ideas .", "title": "", "metadata": ""}
{"_id": "c65574c0c68b176b8a5b7cfbb2f159be", "text": "buy HICS tokens .", "title": "", "metadata": ""}
{"_id": "a3548e766c1910e71a2a26e0c00741c9", "text": "Destroys the contract and returns and Ether to the owner .", "title": "", "metadata": ""}
{"_id": "28058ceaf64e5f3dd201da5be2361b80", "text": "Check that an invite hasn't already been created with this signer .", "title": "", "metadata": ""}
{"_id": "db09c13ccf13cd589c703bb182753c9f", "text": "Returns true if all tokens for the period has been sold .", "title": "", "metadata": ""}
{"_id": "f23d52ca8a04fdc3698ecaf5f0274213", "text": "let the owner execute with data .", "title": "", "metadata": ""}
{"_id": "f391ce3370abd3b382d75e13f643f102", "text": "Throws if called by any non-operator account .", "title": "", "metadata": ""}
{"_id": "90f93f36b33dc369dcde1da66556f375", "text": "only Admin can mint from SaleClosed to Closed _tokens given by client ( limit if we reach the maxTokens ) multiSig was given by client .", "title": "", "metadata": ""}
{"_id": "70e48d57893b790486ffd0c189e78bdd", "text": "function for create deal by agency owner only .", "title": "", "metadata": ""}
{"_id": "949d2ecf01fd24e255d6b28cba19a623", "text": "App account can add Brand account .", "title": "", "metadata": ""}
{"_id": "6cf9fd83430dc1007123b924d7eb23df", "text": "Retrieves the rate corresponding of the loan oracle .", "title": "", "metadata": ""}
{"_id": "58e0ae852fa8831fc767a0e1454b97d7", "text": "in case of long idling .", "title": "", "metadata": ""}
{"_id": "f1151a39539fc495b0fe1ef2b24c3832", "text": "Do not send 1 mil ether to this function it is strictly for testing purposes .", "title": "", "metadata": ""}
{"_id": "c0a3d0d5c4269c4508c35653240832cf", "text": "Get the latest token contract address .", "title": "", "metadata": ""}
{"_id": "83404243c9743b229cfd7b605e117679", "text": "Check if genesis is at a particular stage .", "title": "", "metadata": ""}
{"_id": "8c2c609a084fc9cf9da42f1d16d11eaa", "text": "Hash ( keccak256 ) of the payload used by approvePreSigned .", "title": "", "metadata": ""}
{"_id": "07867ae7f7ee1c3dc7a044a84e2fdef7", "text": "Returns module list for a module type .", "title": "", "metadata": ""}
{"_id": "ba18aa5464c1521172d9bd46a0a85aa3", "text": "Modifier to make a function callable only when the contract is not paused or when sender is whitelisted .", "title": "", "metadata": ""}
{"_id": "2c4737bf8c89b6d78e94a3939f9ab11c", "text": "manual transfer tokens by owner ( e . g . : .", "title": "", "metadata": ""}
{"_id": "d31d4575042f114ee138315ddf029549", "text": "Seal a ballot - after this the ballot is official and no changes can be made .", "title": "", "metadata": ""}
{"_id": "98726eaaf0e7209b17ea143a46b95728", "text": "Owner can send ETH to the Index , to perform some task , this eth belongs to him .", "title": "", "metadata": ""}
{"_id": "13b0c9ad717c7078b70149ca11b6b5a8", "text": "Set the beneficiary ETH address .", "title": "", "metadata": ""}
{"_id": "d02e501299bb64460e4c3c0e745fa26e", "text": "prefix a bytes32 value with x19Ethereum Signed Message : .", "title": "", "metadata": ""}
{"_id": "cfeb2ace0b165047ced080317095ddb7", "text": "initial funding .", "title": "", "metadata": ""}
{"_id": "07865d434ffc3d3b28fd981442220167", "text": "Property owner lists their Property for sale at their preferred price .", "title": "", "metadata": ""}
{"_id": "aa723887b40ee4cd2cc473fc26c48bc8", "text": "Add Record .", "title": "", "metadata": ""}
{"_id": "e34259adc3719b1e605985db9af63570", "text": "Ensures sender is the contract owner .", "title": "", "metadata": ""}
{"_id": "2039c10ea73d242aa1b615b0db13b80c", "text": "check is account blocked .", "title": "", "metadata": ""}
{"_id": "6d4d567247933db41c21d076fdbceb43", "text": "Returns the development fund balance .", "title": "", "metadata": ""}
{"_id": "f72fd5d37ce272786c287a82daeb2519", "text": "The amount locked for _address .", "title": "", "metadata": ""}
{"_id": "8c421de8c14ca649b3a56fb5faf77c15", "text": "Finalize a crowdsale .", "title": "", "metadata": ""}
{"_id": "8633f4b4f2acb410623df6dd8c330a8e", "text": "Sets the contract that will handle a specific interface ; only a manager defined for that address can set it .", "title": "", "metadata": ""}
{"_id": "44e599c22aacbb492f0461a3b05e0713", "text": "Adds a new stakeholder to the list .", "title": "", "metadata": ""}
{"_id": "2bdaca38a0423a30d4220393713a6058", "text": "Function to distribute tokens to the list of addresses by the provided uniform amount .", "title": "", "metadata": ""}
{"_id": "723eef1ab43a249ae9f2ec753549f679", "text": "withdraw directly when withdrawEnabled true .", "title": "", "metadata": ""}
{"_id": "9b3021be3b020d9a9e69f7513d26a04a", "text": "rescue function .", "title": "", "metadata": ""}
{"_id": "12eec97843b7384dc671924801a5c36a", "text": "Sets the app .", "title": "", "metadata": ""}
{"_id": "b6e4cce5aea477dea83150d266023f90", "text": "owner may add or remove admins .", "title": "", "metadata": ""}
{"_id": "76d8045ca923b7da48f2f645415a8dab", "text": "returns the address associated with the given contract name .", "title": "", "metadata": ""}
{"_id": "956d593e54815bcb77d7d77448e6240e", "text": "Change ETH / Token exchange rate .", "title": "", "metadata": ""}
{"_id": "f4533095dea8311e23563dbbbdbe7c1b", "text": "Allows owner to add addresses to the whitelisted .", "title": "", "metadata": ""}
{"_id": "27755110aa7c5109ea79f846ea298ee0", "text": "Update an existing contract ( changing the address ) .", "title": "", "metadata": ""}
{"_id": "18e367905b0c812f723e9d1c782f12f8", "text": "Helper functions .", "title": "", "metadata": ""}
{"_id": "8bf904f89cd05458fa7f6c87bbb8ffb4", "text": "function to update an animal can only be called from owner wallet .", "title": "", "metadata": ""}
{"_id": "5a4e05d6f24ccd745a95fb50a901a1f6", "text": "Internal Send vote to Voting-Contract .", "title": "", "metadata": ""}
{"_id": "92dcc4a4f68e4f4f102a4c854d52c607", "text": "Refund the tokens to buyers of presale if soft cap not reached .", "title": "", "metadata": ""}
{"_id": "a10a790ced37b0426c2a2bd898f05b76", "text": "Returns the unique channel identifier used in the contract .", "title": "", "metadata": ""}
{"_id": "5d34019cf6f9c29f51339a01f788bb50", "text": "Release funds to contractor in the event that the Hirer is unresponsive after job has been flagged as complete .", "title": "", "metadata": ""}
{"_id": "7c643f33734930ed5025dde5e8f70c24", "text": "read the purchase details by a user at an index from all the user's purchases .", "title": "", "metadata": ""}
{"_id": "11e503cc10056c06077ae13c5923d499", "text": "Declare that the current fork ( as identified by a blockhash ) is the valid fork .", "title": "", "metadata": ""}
{"_id": "ede7536257e547580b6c6d6747c7bb8e", "text": "Check if the address is frozen .", "title": "", "metadata": ""}
{"_id": "d8f029843898159c9ed1c4a469407e49", "text": "Check if ICO is open .", "title": "", "metadata": ""}
{"_id": "b52f961b10ff96f9cf4e1e97a75a561c", "text": "token sale participants call this to claim their tokens after the sale is completed and tokens are scheduled for release .", "title": "", "metadata": ""}
{"_id": "7ce360271f211cc253f2fdb80e98534a", "text": "Call this function to get the refund of investment done during Crowdsale .", "title": "", "metadata": ""}
{"_id": "64cf1c9f1d48278bc2d957e3034c9312", "text": "Allows user to create tokens if token creation is still going and cap not reached .", "title": "", "metadata": ""}
{"_id": "21e67fb17790981d14382f01749cf35c", "text": "transfer ownership of this contract .", "title": "", "metadata": ""}
{"_id": "e9228481d6155b4caf0d5be9d9d36187", "text": "Checks if the address ia a contract or not .", "title": "", "metadata": ""}
{"_id": "850f71f7e7c47eebb4644d3af759f6db", "text": "view functions .", "title": "", "metadata": ""}
{"_id": "6f8b35a127d3f46673f849aa28895532", "text": "Check if a specific sha256 hash has been used by another artwork before .", "title": "", "metadata": ""}
{"_id": "f6ca5ba208c57fc20136cae12606fcb9", "text": "Function to check if the contract has been compromised .", "title": "", "metadata": ""}
{"_id": "1e59a69cccc77454e982327a927cf0dc", "text": "our crowdsale can stop at anytime , and then the totally crowsale contract is disappear .", "title": "", "metadata": ""}
{"_id": "c8a6f7f13dc2eb4e170ccc7df2a9d84f", "text": "Allows the owner to transfer any accidentally sent ERC20 Tokens , excluding 0xBitcoin .", "title": "", "metadata": ""}
{"_id": "c57bd813191a50303721edeb016e0df2", "text": "Internal function for transferring a specific type of token .", "title": "", "metadata": ""}
{"_id": "af4073c634faa3b7fc71db43dd586127", "text": "ICO status functions .", "title": "", "metadata": ""}
{"_id": "6a9d156a7aaeda7e6c840a5710e394e0", "text": "calculte exchange rate according to current stage .", "title": "", "metadata": ""}
{"_id": "17e6e3cc7f66e69601e12e015a195876", "text": "Attempts to confirm the action .", "title": "", "metadata": ""}
{"_id": "43e7a012be620d643f3a7d1de281c333", "text": "Function used in Reward contract to get to know the address array length .", "title": "", "metadata": ""}
{"_id": "4098b4e38c8e5f96065aecb858402545", "text": "Update start method .", "title": "", "metadata": ""}
{"_id": "c82da07a14c388e07ebe05c4a3d57738", "text": "send ether to the fund collection wallets override to create custom fund forwarding mechanisms taken from OpenZeppelin , added 11 / 7 / 2017 10AM .", "title": "", "metadata": ""}
{"_id": "fef7528ed476a38a47c0d689008a24be", "text": "create player ; .", "title": "", "metadata": ""}
{"_id": "10304102cb88af8954df3b5a6b51dbae", "text": "handles contribution logic note that the Contribution event is triggered using the sender as the contributor , regardless of the actual contributor .", "title": "", "metadata": ""}
{"_id": "007dc21c3fb0ea9fd19597366953d7f0", "text": "Get the customer's Tx of payment for MCW by Tx payment for KWh .", "title": "", "metadata": ""}
{"_id": "5b77024eef7bfd2084d1111005c95dfa", "text": "Simple function to deposit more ETH to match future donations .", "title": "", "metadata": ""}
{"_id": "7161bfbf094a3fa903f5a15d8c971523", "text": "Internal function to remove a unicorn ID from the list of a given address .", "title": "", "metadata": ""}
{"_id": "cc64d25b1a47fb6e13678f45eacf285c", "text": "this function will determine status of crowdsale .", "title": "", "metadata": ""}
{"_id": "51f16af88059618e4496d6abcd300734", "text": "when sale isn't ended , issue tokens to investors paid with fiat currency .", "title": "", "metadata": ""}
{"_id": "64f9f0446d064d4554d9f65225a45ba9", "text": "Helper function to caclulate how much time a player used since now .", "title": "", "metadata": ""}
{"_id": "20b23f89b5af7163a165771d7cbedc43", "text": "Allow commission funds to build up in contract for the wizards to withdraw ( carefully ring-fenced ) .", "title": "", "metadata": ""}
{"_id": "78e332606ccc195a68c7071bb05d20a5", "text": "Frees up to value sub-tokens .", "title": "", "metadata": ""}
{"_id": "f838b3c832ff993740471671fac83cd5", "text": "Sets the backend contract to _backendContract .", "title": "", "metadata": ""}
{"_id": "b6520beec75e8de2218e7875dc892380", "text": "Checks whether presale funding goal was reached .", "title": "", "metadata": ""}
{"_id": "85e60ee768891eb9c64e2ec3b487f2ff", "text": "Bids on an open auction , completing the auction and transferring ownership of the token if enough Ether is supplied .", "title": "", "metadata": ""}
{"_id": "5a1ab7e053fe2b4112bd1819dae23cd0", "text": "return total number of token .", "title": "", "metadata": ""}
{"_id": "62b94d7f6e3a68f761d2b5a03b6840e8", "text": "Settle the transfers and balances of the channel and pay out to each participant .", "title": "", "metadata": ""}
{"_id": "c965c61eac5296dd64e2aeed768c005b", "text": "Disqualify and participant .", "title": "", "metadata": ""}
{"_id": "c239b37cf1f9968d05c7d7e1facd1b04", "text": "Allows transfer of tokens to a recipient who has purchased offline , during the Sale .", "title": "", "metadata": ""}
{"_id": "b001ef262cbee26a93da08d6ae7c31dc", "text": "make sure the contract is not in process of being closed .", "title": "", "metadata": ""}
{"_id": "09ce43f0722f31d2c291b6ad4df0649d", "text": "Returns the certificate lookup API for the certificate authority .", "title": "", "metadata": ""}
{"_id": "35484058189be55541f96a1ca492533c", "text": "Used in frontend and contract to get hashed data of any given pre-signed transaction .", "title": "", "metadata": ""}
{"_id": "067de1e8d117c37517030f51a5afbecd", "text": "Alters the amount of tokens allocated to a game contract on a daily basis .", "title": "", "metadata": ""}
{"_id": "0603c2afa3d35a40cf139c555b9a6874", "text": "moves Eth to the foundation wallet .", "title": "", "metadata": ""}
{"_id": "8a0dc7e819c5da15d1f7ae39147f4def", "text": "Function to check the current Tokens affected to bounty .", "title": "", "metadata": ""}
{"_id": "f51f5282b7d4ffc05c08e0fff497c5cd", "text": "change state .", "title": "", "metadata": ""}
{"_id": "284639474a4c409256cda6e5f2ee0cac", "text": "Internal function to update the credit balance of a user when staking tokens .", "title": "", "metadata": ""}
{"_id": "0d5cad8466c5805e9181c0fcbede52ff", "text": "Each Ethereum account may assign a 'ChecksumPair' to a resource exactly once .", "title": "", "metadata": ""}
{"_id": "a5d52ce622c04c14a7b9beba917afb98", "text": "Allows transfer of tokens to a recipient who has purchased offline , during the PreSale .", "title": "", "metadata": ""}
{"_id": "b87a59eb681fbcc35e70ee561b95b71c", "text": "Sets the lock state of the specified address .", "title": "", "metadata": ""}
{"_id": "84b8a4aa6e157ac3887c205660694742", "text": "Returns true iff the value is contained in the set .", "title": "", "metadata": ""}
{"_id": "24864cc111e2669bd1d2efc547f26960", "text": "USD raised value .", "title": "", "metadata": ""}
{"_id": "05adf7da03a20e26b92f693cb1719da4", "text": "send _value token to _to from _from on the condition it is approved by _from .", "title": "", "metadata": ""}
{"_id": "43eecdc3569764ee5163af50c225024e", "text": "Returns for the given address the number of times it was paid for , and an array of addresses who actually paid for the fee ( as one might pay the fee for another address ) .", "title": "", "metadata": ""}
{"_id": "49244319e59a04ff2c59fe2bd3c547b2", "text": "Burn token of own address .", "title": "", "metadata": ""}
{"_id": "e01769e6d7c1f2d2337efaa827bc9a46", "text": "ServiceAllowance interface implementation .", "title": "", "metadata": ""}
{"_id": "85543b711424462d7f1a2c5673bad861", "text": "internal function to pay out the winner .", "title": "", "metadata": ""}
{"_id": "d5ef78dd939f26629f468942e07b183f", "text": "Sets the reference to the siring auction .", "title": "", "metadata": ""}
{"_id": "d9ab98529df51a5b6c9dd978e90a79ad", "text": "Returns the current price .", "title": "", "metadata": ""}
{"_id": "8fc1ad288b97d1741adb2430bff61eb7", "text": "Returns the current total of tokens staked for an address .", "title": "", "metadata": ""}
{"_id": "60692eb8341a9e6fc545830b71a54bc8", "text": "You're about to purchase the equivalent of msg . value .", "title": "", "metadata": ""}
{"_id": "21fecf4498ee6e9b42718e826afe3cac", "text": "returns the number of bnty per some amount in wei .", "title": "", "metadata": ""}
{"_id": "60fb3afb17aa768e2d0afd049f9397b5", "text": "Allow upgrade agent functionality to kick in only if the crowdsale was a success .", "title": "", "metadata": ""}
{"_id": "b9cd3e57f7aa71294f92c80343137d9a", "text": "The owner can withdraw ethers after the presale has completed , only if the minimum funding level has been reached .", "title": "", "metadata": ""}
{"_id": "758c7c6398cb814ba6857caf5bad7f66", "text": "Creates a new Pow with the given name .", "title": "", "metadata": ""}
{"_id": "2be501b9e59c1b28e188d596c1fc8157", "text": "Release one tranche of the teamSupply allocation to Goola team , 6 . 25 .", "title": "", "metadata": ""}
{"_id": "e6d05f7aae9f80ab0cae2e3ebcab7526", "text": "ERC23 start Here .", "title": "", "metadata": ""}
{"_id": "5f9a451e1a62324de6f3b1d110ac574f", "text": "Lists a Bytes collection from start or end .", "title": "", "metadata": ""}
{"_id": "f8b11b68eb71ca6044501a5d5d341d21", "text": "This modifier allows only whitelist suppliers call a function .", "title": "", "metadata": ""}
{"_id": "16591b1bda35c989f9a0d1aab507930d", "text": "Generates a shortlink code .", "title": "", "metadata": ""}
{"_id": "3db016714fab4adecad89bcb9bb0e014", "text": "Make a donation and acknowledge our development efforts .", "title": "", "metadata": ""}
{"_id": "ce155f479c6f659afe277e27421b95a7", "text": "Calculates how the initial bidding money will be split .", "title": "", "metadata": ""}
{"_id": "c6919413a8cadc1001bbf41e46fa2ade", "text": "global Admin update tier data .", "title": "", "metadata": ""}
{"_id": "f747d86aa8545de2a3187697841c2fe8", "text": "( received , ETH received , CST sold ) .", "title": "", "metadata": ""}
{"_id": "8acdb688811649c8c51ccf5aef691e07", "text": "Returns whether collections are now available , or not .", "title": "", "metadata": ""}
{"_id": "49ae367907bce73c29985900d70d1e04", "text": "Determines whether the conditions for transitioning to the given stage are met .", "title": "", "metadata": ""}
{"_id": "d309cc5e5339b71a0e893d3342893fb5", "text": "Unlocks ERC721 behaviour , allowing for trading on third party platforms .", "title": "", "metadata": ""}
{"_id": "607cc07b978147ee4f5ae33041f3910e", "text": "Returns the amount of dataRequests currently present .", "title": "", "metadata": ""}
{"_id": "820225e0621c41b11e067d8b90a13b94", "text": "Gives refs tokens through payment on site .", "title": "", "metadata": ""}
{"_id": "f03326a6b0b8dab7e20482a87704b49d", "text": "Make sure symbol has 3-8 chars in A-Za - z . _ .", "title": "", "metadata": ""}
{"_id": "cc5b0be4574cc17a6586e218901b7409", "text": "Refund function when minimum cap isnt reached , this is step is step 2 , THIS FUNCTION ONLY AVAILABLE AFTER BEING ENABLED .", "title": "", "metadata": ""}
{"_id": "66a18827f22a4c6de6889f7f271df8dc", "text": "start function to start crowdsale for contribution .", "title": "", "metadata": ""}
{"_id": "34929fdb80c2a77d695e1f5fc8922dbd", "text": "Unfreeze tokens ( enable token transfers ) .", "title": "", "metadata": ""}
{"_id": "e5f200ed76229c57dd9300cb18ae3f7d", "text": "Current Vesting stage for Libra team .", "title": "", "metadata": ""}
{"_id": "83a922403131360ee5246f31192fc4fd", "text": "This function is used to handle the purchase of a share .", "title": "", "metadata": ""}
{"_id": "f30b0180218f8eb93aa05133c0b5054a", "text": "returns the currently running tier index as per time .", "title": "", "metadata": ""}
{"_id": "8f811db6dbb60eacbea15e20cd233487", "text": "Different coins purchase .", "title": "", "metadata": ""}
{"_id": "4d93a50bd96900f2b8f168d89e2a37d4", "text": "find lowest option sets currentLowestCount 1 if there are more than 1 lowest .", "title": "", "metadata": ""}
{"_id": "21a01073eaabda83118854bff5a673a9", "text": "Setting the minAllowedReservingPercentage value , allowed only for owner .", "title": "", "metadata": ""}
{"_id": "f473e5f8c758950a2fbcee46d8d2012d", "text": "Addresses without Bloom accounts already are not allowed .", "title": "", "metadata": ""}
{"_id": "94286815344e0b6314f478500d9653c8", "text": "Retrieves a associated with an _address .", "title": "", "metadata": ""}
{"_id": "ac77172c4c18e179a018d27193360f31", "text": "Inicializa el contrato con los tokens de suministro inicial al creador del contrato .", "title": "", "metadata": ""}
{"_id": "e21563ee32de5b6053912c6db3f00e85", "text": "This is to change the address of the claimant .", "title": "", "metadata": ""}
{"_id": "2b5351782bd762c9443b78718fe707bb", "text": "used by wallet during token buying procedure .", "title": "", "metadata": ""}
{"_id": "3bb004d56ae1197abd6c5f021aadbf48", "text": "Trading methods .", "title": "", "metadata": ""}
{"_id": "bf8b1fd567c9a31bb5c25e42a628cb62", "text": "Initializes the Sale .", "title": "", "metadata": ""}
{"_id": "8354d1314e1ef31d8df4ee3599d2e3bb", "text": "Check claimant address as token owner .", "title": "", "metadata": ""}
{"_id": "fd8922c8ae062764fb7f5855f50d4e36", "text": "This modifier checks that only the creator of the contract can call this smart contract .", "title": "", "metadata": ""}
{"_id": "0a9e579834c634ece949868e05a3b50a", "text": "Migrate the owner of this contract .", "title": "", "metadata": ""}
{"_id": "b802f070d53bc81fec5f00805a2741e9", "text": "Refund everyone's money , start a new raffle , then pause it .", "title": "", "metadata": ""}
{"_id": "bf17b656a911bd74a2d6a5c90d04dcca", "text": "returns the product of multiplying _x by _y , asserts if the calculation overflows .", "title": "", "metadata": ""}
{"_id": "22f946abb75fdeb8e03c65bdb1d53359", "text": "caculate total amount betted on winner .", "title": "", "metadata": ""}
{"_id": "cf9ea1042ae32e47a0d148a0b2968b4a", "text": "This function makes it easy to read the allowances map .", "title": "", "metadata": ""}
{"_id": "0f501becbbf745a5702104edb961d142", "text": "Add exploration in case contract needs to be add trxs from previous contract .", "title": "", "metadata": ""}
{"_id": "3b5e45b0a0677225d9e6e0196a7df1e0", "text": "add new pool address to pools .", "title": "", "metadata": ""}
{"_id": "ac301f249d69d44ee245d0e5db8ce253", "text": "rule enforcement and book-keeping for incoming deposits .", "title": "", "metadata": ""}
{"_id": "c7e975390635de1d4c765e5754f5005a", "text": "Mint a new InterfaceToken token ( with recipient ) .", "title": "", "metadata": ""}
{"_id": "23170260a8768ce75c7b2d332bf7e0b7", "text": "ERC20 interface .", "title": "", "metadata": ""}
{"_id": "04d07a0f14b8842030d0d3b6886053c2", "text": "Imports from provided token .", "title": "", "metadata": ""}
{"_id": "75c56dc4a02da365e1dfc48c4b101fe9", "text": "Get allowance of token given to TokenTransferProxy by an address .", "title": "", "metadata": ""}
{"_id": "f15221ed1a4a6408f3edd6391fb56af3", "text": "This function moves a proposal to a final state of RejectedByResourceSetCreator' and returns tokens to the sources described by the proposal's transfers .", "title": "", "metadata": ""}
{"_id": "d7aa38991060a030c392579d9079ed12", "text": "function to calculate transaction fees for given value and token .", "title": "", "metadata": ""}
{"_id": "2a5d7c376d016592bd15f06ab1bd0511", "text": "Lets a tile owner offer a tile for sale .", "title": "", "metadata": ""}
{"_id": "fec733598f003597bb5d6360ed47fa8c", "text": "Success of this transaction .", "title": "", "metadata": ""}
{"_id": "eaf66bed7af0a3dbf2cb31b3634892a9", "text": "Pile robbery function of pantry owner contract .", "title": "", "metadata": ""}
{"_id": "04b491e6ec2b3afe9a4e2f93166c9637", "text": "Private function to set the weekly rate it called only once in the constructor .", "title": "", "metadata": ""}
{"_id": "90cb008bd99a0992d59f97a42eb2c409", "text": "Check the total supply of the token ERC-20 Standard .", "title": "", "metadata": ""}
{"_id": "afaf8efc2e5cac4cc6ad71aed26924a3", "text": "Provides current time .", "title": "", "metadata": ""}
{"_id": "0366228359e4fecae107d1cfbd9b84cb", "text": "Checks if the specified address is whitelisted .", "title": "", "metadata": ""}
{"_id": "ace5adec6a8ce0befb01fbc61466b66a", "text": "Allows us to set the daily Token Limit .", "title": "", "metadata": ""}
{"_id": "71892426b799aabdfebb2c1a8bdd11fc", "text": "Batch Function to Create Assets .", "title": "", "metadata": ""}
{"_id": "79c1aac44a927589f3ceb63ac7ed3592", "text": "Function to revert reservation for some address .", "title": "", "metadata": ""}
{"_id": "7a0234daf5b343049ed0ee57d84650e1", "text": "Functions for creditor .", "title": "", "metadata": ""}
{"_id": "0d31d6564f1e54e1f3e30ab29504bb38", "text": "addJurisdiction allows the adding of new jurisdictions to a template .", "title": "", "metadata": ""}
{"_id": "0e3d6df07dacbf5684b695c45d9eca7b", "text": "Submit and confirm a transaction .", "title": "", "metadata": ""}
{"_id": "7c13f945ece2118741abd9f257e112ba", "text": "sets the maximum number of characters allowed in the game .", "title": "", "metadata": ""}
{"_id": "f67c491ce7f28c88232c33fe05552ed8", "text": "Finish ICO .", "title": "", "metadata": ""}
{"_id": "361cded5ec30a88a3038692201d72af0", "text": "rate How many tokens will be issued for one ETH .", "title": "", "metadata": ""}
{"_id": "2814f39449236fb0fc859bbf849a9f4b", "text": "get payee count .", "title": "", "metadata": ""}
{"_id": "27440bdbbc6437424be804b75b9ca4cc", "text": "Withdraw lender funds in batch , it walks by all the loans passed to the function and withdraws all the funds stored on that loans .", "title": "", "metadata": ""}
{"_id": "8a70fce5fbb90bd801226d2e65d9095d", "text": "withdrawalInitiate initiates the withdrawal by going into a waiting period .", "title": "", "metadata": ""}
{"_id": "83290c3f4f061d8c93f00add52bb2946", "text": "burn tokens , but also include a Transfer ( sender , 0x0 , value ) event .", "title": "", "metadata": ""}
{"_id": "73a9af17b8ab3f1bdefb628378ba8869", "text": "Returns a list of all Pixel IDs assigned to an address .", "title": "", "metadata": ""}
{"_id": "40f1e2f7ea0a78e3e1bf4dde1fb3bdf4", "text": "Freeze of a premine .", "title": "", "metadata": ""}
{"_id": "d25cf1fda74412e08f396c44e6a8c1d4", "text": "Internal payout function .", "title": "", "metadata": ""}
{"_id": "8ed02003a0fce0372fd3f30211b7930d", "text": "Function to start transfering tokens .", "title": "", "metadata": ""}
{"_id": "c0e257b94cf5b131c2238ee52a52c5b7", "text": "Vote for proj .", "title": "", "metadata": ""}
{"_id": "4581121c94b7b6f491018816766c8cf2", "text": "Get a uncorrelated random number .", "title": "", "metadata": ""}
{"_id": "b8fd9ecb4524d6c11969a24da299e1fd", "text": "failsafe drain .", "title": "", "metadata": ""}
{"_id": "7d11ac09946d67b3aa4b27b76582cf0f", "text": "Checks that a rate is valid .", "title": "", "metadata": ""}
{"_id": "1729ec2615de89362301c0f213f3fa4d", "text": "Adds single address to the management whitelist .", "title": "", "metadata": ""}
{"_id": "bc51b5a958108830575669e12ed1ccc7", "text": "Overload to require ICO success .", "title": "", "metadata": ""}
{"_id": "3987e0c1f34dc3c78ee7f19aefe9bfbf", "text": "function through which owner can whitelist an address .", "title": "", "metadata": ""}
{"_id": "ceec6bdcd21fa3ddffe6523bed986109", "text": "Trade balancing algorithm .", "title": "", "metadata": ""}
{"_id": "ebffa22f141ded686fdf4be11ae5917b", "text": "Modifier to make a function callable only when the contract is dropable .", "title": "", "metadata": ""}
{"_id": "48f91c8e0479890075a0faf669f0d0fa", "text": "This function is used to bump up the jackpot fund .", "title": "", "metadata": ""}
{"_id": "ac042f23d288711312ae8697a4b1b91e", "text": "Allows the current owner to transfer escrowship of the contract to a escrow account .", "title": "", "metadata": ""}
{"_id": "4809e3ea3f12b66368b71263aaa4bd8b", "text": "Debt ceiling .", "title": "", "metadata": ""}
{"_id": "432843c37def26cfab749e5a6fcd7ba6", "text": "Distribute Token Sale Jackpot by minting token sale jackpot directly to 0x0 address and calling distributeJackpot function .", "title": "", "metadata": ""}
{"_id": "85343c8c394d9f7abe757cde0fa0f90d", "text": "Transfer tokens from one address to another .", "title": "", "metadata": ""}
{"_id": "706f64817aac7cec3d5a24a07dd760bd", "text": "set new minumum amount of Wei to participate in ICO .", "title": "", "metadata": ""}
{"_id": "0179ab0706851f31a8b6074fb849d1d2", "text": "Queues a pending transaction .", "title": "", "metadata": ""}
{"_id": "33f9d3fdce8cae3ee2b0bc76066e96e3", "text": "Freeze an account ( Owner only ) .", "title": "", "metadata": ""}
{"_id": "ea0121e626a9c0c56b74251efb8ed62f", "text": "Updates token symbol .", "title": "", "metadata": ""}
{"_id": "fe8e59c1ff592aee191ad23cde230480", "text": "get total count tokens ( to calculate profit for one token ) .", "title": "", "metadata": ""}
{"_id": "65dfbe702f0dafbcec1a131709512053", "text": "Locks given allocation address .", "title": "", "metadata": ""}
{"_id": "e41ccbba4ff100e0a8cf980c91ba0c5a", "text": "Using from SO : https : / / stackoverflow . com / questions / 42738640 / division-in - ethereum-solidity / 42739843 42739843 .", "title": "", "metadata": ""}
{"_id": "4d83351f4c1e5cfe7fc4d1ec3c642de7", "text": "Has the minimum threshold been reached ? .", "title": "", "metadata": ""}
{"_id": "e4fb19cc3646b54f4f046e147b800408", "text": "Lock Address .", "title": "", "metadata": ""}
{"_id": "0dc6f09abb49b486824f7d859fd79183", "text": "Allows the current owner to set the new end time if crowdsale is not finalized .", "title": "", "metadata": ""}
{"_id": "924661e5ceb71247a86d8617640c4c0e", "text": "Check if the player won .", "title": "", "metadata": ""}
{"_id": "b60c89f6480e61218d6f400655d221f6", "text": "Calculates bonus of a purchase .", "title": "", "metadata": ""}
{"_id": "4c105b0cdeefaf719caf3081b803fdf6", "text": "Approves a hash .", "title": "", "metadata": ""}
{"_id": "327288e4232e0af63ebf0d8857f388ef", "text": "buy token by sending at least 'minimumWeiAmount' wei .", "title": "", "metadata": ""}
{"_id": "331b6da6b0257e9e28f3cc13518b3292", "text": "Use this function to set membershipType for the member .", "title": "", "metadata": ""}
{"_id": "9bfe4a36325ca56b99c8a201ac42771a", "text": "Add single address to the investorList .", "title": "", "metadata": ""}
{"_id": "21c9a81d0a87805c23f69bbaa6ff48a6", "text": "Compares previous and next poll's committed tokens for sorting purposes .", "title": "", "metadata": ""}
{"_id": "1bbebad9e81eaf3523743ebb6d4a2556", "text": "Access is restricted to the current owner .", "title": "", "metadata": ""}
{"_id": "fb2fe10f76466e6094d1a7b91aa5c316", "text": "Get deployed forwarders .", "title": "", "metadata": ""}
{"_id": "cf7402e484bd91a25fc6fa2baa9444fd", "text": "Fill the buy order ! .", "title": "", "metadata": ""}
{"_id": "9093c9c1e97cda5db44ff80c745d0075", "text": "Returns all the relevant information about a specific emoji .", "title": "", "metadata": ""}
{"_id": "069103bfabb543663ba5a8c58f938c3e", "text": "public methods .", "title": "", "metadata": ""}
{"_id": "1e133193790e99b819e55922ceda72de", "text": "give an address access to this role .", "title": "", "metadata": ""}
{"_id": "116d4a32e1d50b9e89292ee2b5d34c89", "text": "Scheduling Authorization API .", "title": "", "metadata": ""}
{"_id": "b2c4ed559f8695a7ad8757b419d805d6", "text": "Change the feeAccount address .", "title": "", "metadata": ""}
{"_id": "2f7903dc4a9889478e9719fa19d487ec", "text": "allows a minter to burn some of its own tokens .", "title": "", "metadata": ""}
{"_id": "5084505e9b3f3afa030aaac5a2205b0a", "text": "set the fees rate ( per 10 000 ) .", "title": "", "metadata": ""}
{"_id": "9c6bc0be2e0d90a64a8740f14bc4f507", "text": "This modifier checkes if reward payment is over .", "title": "", "metadata": ""}
{"_id": "902d9f2135dd6fdb182197f337ffe629", "text": "This method sends the Ether received to the Ether escrow address and generates the calculated number of SHP tokens , sending them to the caller's address .", "title": "", "metadata": ""}
{"_id": "82d289e9c011023d0bbe6628c72a6945", "text": "Allows owner to later update token name if needed .", "title": "", "metadata": ""}
{"_id": "64d189eace33b3e14897ccdea14282f7", "text": "Use all available balance to buy in .", "title": "", "metadata": ""}
{"_id": "9fc4e8e289150d8946a6a15a384ba106", "text": "By security issues deny to kill this by owner .", "title": "", "metadata": ""}
{"_id": "cf08a83daff4295309b7508198c06ea1", "text": "Dump ETH balance to main bankroll .", "title": "", "metadata": ""}
{"_id": "8fd9174393419f6e85f0631444d62560", "text": "transitionToState ( ) : transitions the contract to the state passed in the parameter _newStage given the conditions stated in the body of the function .", "title": "", "metadata": ""}
{"_id": "8febdf6ee5287086a737dcb8e5445f1a", "text": "Removes an owner .", "title": "", "metadata": ""}
{"_id": "a8d538bf353971731319e0d3ea3d6aa2", "text": "Contract's token balance .", "title": "", "metadata": ""}
{"_id": "8c7d2d725396544df88a810c27317b5b", "text": "Get collected funds ( internally from FundsRegistry ) .", "title": "", "metadata": ""}
{"_id": "b57fe9e8f291cbfa4f6713d1b72e9592", "text": "maximum investments to be accepted during the sale ( in euro-cents ) .", "title": "", "metadata": ""}
{"_id": "1fd66c6eb33efb3a6b29dbe738da25a5", "text": "Recovery of remaining tokens .", "title": "", "metadata": ""}
{"_id": "f54edecd1763a61e74870ea9ef3384ee", "text": "Minter can pass it's role to another address .", "title": "", "metadata": ""}
{"_id": "df4f366231f60b296164f17292846c10", "text": "Extend parent behavior requiring purchase to respect the minimum of the current phase .", "title": "", "metadata": ""}
{"_id": "f074b14212758291e56f4a5b3a6255bf", "text": "Assigns a new address to act as the Covmanager .", "title": "", "metadata": ""}
{"_id": "ba14b8ef0eee6cc8dbd4b7399fb70ebd", "text": "query detail of one GreedyCoin .", "title": "", "metadata": ""}
{"_id": "163f1161e67d62137e900bce25dea931", "text": "If investmend was made in bitcoins etc .", "title": "", "metadata": ""}
{"_id": "fb40cf24f0935fe07493a0257c1b6780", "text": "Send wei for user allocated in contract .", "title": "", "metadata": ""}
{"_id": "d0f6c213333ba9d843930a9bfcfcbe3d", "text": "Amount of tokens that players of CoinRace bet during the games and haven't claimed yet .", "title": "", "metadata": ""}
{"_id": "cb114e8df3c84cce540593d1a8f6b1eb", "text": "This function allows both parties to exit .", "title": "", "metadata": ""}
{"_id": "998d7333d6168db910cf4ed036b766c1", "text": "An Attack Vector on Approve / TransferFrom Methods : https : / / github . com / ethereum / EIPs / issues / 20 issuecomment-263524729 .", "title": "", "metadata": ""}
{"_id": "7994f6b969a37bb4c8c7f1eb3ea924d4", "text": "Override transferFrom function and adds a check whether transfer is allwed .", "title": "", "metadata": ""}
{"_id": "a826d6d87b2e4a5c87ae428cd027e85c", "text": "In case of inaccurate sale block .", "title": "", "metadata": ""}
{"_id": "b958c0596d9de30e848f116b06e3aa66", "text": "Self-register a new DIN .", "title": "", "metadata": ""}
{"_id": "a94c3d76a1527e553df99f124801237e", "text": "This function is only used if Twitter changes it's design .", "title": "", "metadata": ""}
{"_id": "c999af6641193265c445cc988547a774", "text": "true if now is within the bounds of the open whitelist period .", "title": "", "metadata": ""}
{"_id": "d9ed26f9c0997814cce6c1c11eca3df3", "text": "funciones basicas para aprobaciones .", "title": "", "metadata": ""}
{"_id": "7c562823bbc7c0c9be2930c8ab1ccf90", "text": "Standard interface .", "title": "", "metadata": ""}
{"_id": "7f1ff207671910ecb2249842b53dcdb4", "text": "Used to deploy children contracts as a one shot call .", "title": "", "metadata": ""}
{"_id": "e10e84e76ab18be5d0e55d1b9cdee7d0", "text": "Set the delegate address for a specified number of tokens belonging to the sending address , locking the tokens .", "title": "", "metadata": ""}
{"_id": "333ef7d835674bd709429a12bd0a1164", "text": "claimTokensInBulk calls updateUserClaim function of MonethaUsersClaimStorage contract to update multiple users token claim status and assign tokens to user .", "title": "", "metadata": ""}
{"_id": "1f408ac7e456b885d328be58d6ebfcef", "text": "To unlock and recover your LEV and FEE tokens after staking and fee to any user .", "title": "", "metadata": ""}
{"_id": "18affa0cc8f7394ed7d884d2ea055814", "text": "Check if token offering address is set or not .", "title": "", "metadata": ""}
{"_id": "50c38196f9e3b94c173fb805b5907ee7", "text": "get the status of a trusted currencyContract .", "title": "", "metadata": ""}
{"_id": "8ef9da78b74c0d65b84a7d9298a56350", "text": "Okay , we changed the process flow a bit where the actual SSD to ETH mapping shall be calculated , and pushed to the contract once the crowdsale is over .", "title": "", "metadata": ""}
{"_id": "8dbc482a2ac0f1e4e95c91aea6a872b9", "text": "get google maps url of property location .", "title": "", "metadata": ""}
{"_id": "fb3fe9484816ddf74a4db0d717751f2b", "text": "verifies that the gas price is lower than maxGasPrice .", "title": "", "metadata": ""}
{"_id": "81a11a013ff949421dd8ece487456a6c", "text": "checks if a game with the given id already exists .", "title": "", "metadata": ""}
{"_id": "75034e761a9323e6ae2d06f1b1c4e1b6", "text": "Cancel an order , preventing it from being matched .", "title": "", "metadata": ""}
{"_id": "b86cf3c46dbfcaee808127dd45232fb6", "text": "Get the balance for a specific token .", "title": "", "metadata": ""}
{"_id": "166f2f5247d9c6e5b94fb0aeccdd944d", "text": "tokens are locked during the ICO .", "title": "", "metadata": ""}
{"_id": "d1164b7985e1be40066eb467820efbe2", "text": "Price ( as required by Eidoo's ICOEngineInterface ) ; actually the inverse of a price .", "title": "", "metadata": ""}
{"_id": "71050447e930243feea143625605b4a5", "text": "Function to set address of Jackpot contract once after creation .", "title": "", "metadata": ""}
{"_id": "7be39a9d666fffd58a4e50177ff8a510", "text": "Request dividends be paid out and added to the pool .", "title": "", "metadata": ""}
{"_id": "2cf41a362e83fd9c8ec832db6e2ac1e5", "text": "Add an address to the whitelist .", "title": "", "metadata": ""}
{"_id": "39fad006fc743d2692b1740181729ec4", "text": "allows owner to grant / revoke admin privileges to other accounts .", "title": "", "metadata": ""}
{"_id": "2fbe80672c626f36794c6809e0c7bcec", "text": "Get CurrentTS .", "title": "", "metadata": ""}
{"_id": "4f8775a485195d7353219e3047f156d6", "text": "Internal function to increment or create frozen cell .", "title": "", "metadata": ""}
{"_id": "1b3467d80109852cd71390e4cbe93d3e", "text": "insert offer into the sorted list keepers need to use this function .", "title": "", "metadata": ""}
{"_id": "6405292466cb5fdb0444fba3da9f65b6", "text": "lock tokens for a single whole period .", "title": "", "metadata": ""}
{"_id": "9b0c9b08be10026f1b80a5f69e3c41db", "text": "show unlocked balance of an account .", "title": "", "metadata": ""}
{"_id": "697bcc1c676e2899e7b2186e061c5680", "text": "only allow the owner to modify the current SaleState .", "title": "", "metadata": ""}
{"_id": "2a785bbfa973fe24e0a01b28faa6a5d2", "text": "Return true for succesfull Pre-ICO .", "title": "", "metadata": ""}
{"_id": "4202c75fa6d802efd1f026fb4940a3a5", "text": "Lists an indexed Bytes collection from some _current_item , going forwards or backwards depending on _from_start .", "title": "", "metadata": ""}
{"_id": "19f284de4ef35452577f29dda703e93b", "text": "Gets the ticket holder count .", "title": "", "metadata": ""}
{"_id": "74b817c71c5d9ed234945797c5ff0f10", "text": "Users can redeem their cash and sell their tokens back to the contract .", "title": "", "metadata": ""}
{"_id": "25aa1303d84888f974691a8c23d05685", "text": "function to transfer out all ethers present in the contract after calling this function all refunds would need to be done manually would use this function as a last resort can only be called by owner wallet .", "title": "", "metadata": ""}
{"_id": "fd7513f4c22c7ff42b7e58571ce7a068", "text": "The external function to add additional dungeon rewards by its ID , only contract owners can alter dungeon state .", "title": "", "metadata": ""}
{"_id": "b28e6909c05eb223b47885ba97b5a637", "text": "Retrieve locked tokens ( for when this contract is not needed anymore ) .", "title": "", "metadata": ""}
{"_id": "a93566980e2f349f246b1d6bbc3dbd64", "text": "The modifer to regulate a KT's decomposability .", "title": "", "metadata": ""}
{"_id": "6edf8c63c1c90b93c852de184409548b", "text": "Add a verified address to the Security Token blacklist .", "title": "", "metadata": ""}
{"_id": "26918eb7afc14bce0488e1162f68b2b6", "text": "Mints a composition emoji .", "title": "", "metadata": ""}
{"_id": "a699ca4b22a4a0218895f0c2595ff74f", "text": "Change pre_ico_start date .", "title": "", "metadata": ""}
{"_id": "a2de96a8bd507c6b4c59831a2d832171", "text": "Add admin role to an address .", "title": "", "metadata": ""}
{"_id": "92cae3f6fe1ed458527099eadd84b353", "text": "Add property for sender .", "title": "", "metadata": ""}
{"_id": "d0cc75f0c80b2bbb1d6b5f496e656db7", "text": "Obtaining a new ETH / USD quote price from oraclizer .", "title": "", "metadata": ""}
{"_id": "ed962fe22bb7a732f85df048db3d1502", "text": "getValueAt retrieves the number of tokens at a given block number .", "title": "", "metadata": ""}
{"_id": "e6af00e8c605e4f967962f6d405f107b", "text": "Transfer function used to send tokens to an address .", "title": "", "metadata": ""}
{"_id": "42bbcec523d48b9635f613446456261b", "text": "after the call token is available for exchange .", "title": "", "metadata": ""}
{"_id": "ecccc0e1ddd7e78b6b3b3f6d711eadc7", "text": "Allows the revoke key to revoke allocations , if revoke is allowed .", "title": "", "metadata": ""}
{"_id": "be19231d15d86281693e25d09ec04fd2", "text": "NOTE : Set to less than total balance so contract balance can't ever be drained .", "title": "", "metadata": ""}
{"_id": "7fce758df8fc6070e7a374eec33d6b59", "text": "createListing Adds new ERC721 Token .", "title": "", "metadata": ""}
{"_id": "d550482c1a1cff0697484bfccb265552", "text": "The amount of silver caps scanned so far .", "title": "", "metadata": ""}
{"_id": "13449dbcd415961f6ffcb30a63771ade", "text": "The latest revenue fraction .", "title": "", "metadata": ""}
{"_id": "dbb99180eee1e196cca20e82811327ab", "text": "Loops through holders to find the holder with most votes and declares them to be the Executive ; .", "title": "", "metadata": ""}
{"_id": "44a3680a3e980d72257e807cd05e32a2", "text": "count tokens that can be sold with amount of money .", "title": "", "metadata": ""}
{"_id": "e7c92c032aef28295417b6dc4f54c390", "text": "Functions Getters .", "title": "", "metadata": ""}
{"_id": "0ad61cd9f2331abafe7e9f4761e20ca5", "text": "Adds a user to the wallet .", "title": "", "metadata": ""}
{"_id": "ff7e088838f3231e3a105001d9538773", "text": "Add _account to the whitelist .", "title": "", "metadata": ""}
{"_id": "e1704b3ba9ced5a59b9c25f0bb0c48f4", "text": "total number of tokens initially simplified from wei .", "title": "", "metadata": ""}
{"_id": "3bb861ddb97f38b834f551638cec070f", "text": "Helps to toggle batch supported flag .", "title": "", "metadata": ""}
{"_id": "e06df5041a4f4bae19389a22e99b8e29", "text": "Allows the owner to finish the minting .", "title": "", "metadata": ""}
{"_id": "878fcc36d4358f164508baa5a8fc3de5", "text": "only the owner is allowed to burn tokens .", "title": "", "metadata": ""}
{"_id": "340a7b1cd8754816a81ceac345d964bf", "text": "If the time of freezing expired will return the funds to the owner .", "title": "", "metadata": ""}
{"_id": "9a7808875d635c2f1655105846890aff", "text": "Anyone can check if the crowdsale is over .", "title": "", "metadata": ""}
{"_id": "b326fed084a81f681d05888e58de0bf6", "text": "withdraw method that can be used by crowdsale contract's owner for the withdrawal funds to the owner .", "title": "", "metadata": ""}
{"_id": "5f63c2a7d4a4f44e63b6595d1bbb9dda", "text": "set matching enabled / disabled .", "title": "", "metadata": ""}
{"_id": "209b4cf991384c21cafd3ec2348cebbc", "text": "End lockup periods .", "title": "", "metadata": ""}
{"_id": "8e02d2085ff3e42ec5688d69cfb5e6ab", "text": "Other methods .", "title": "", "metadata": ""}
{"_id": "ea158cef5bfe1f6fd2c2b13237cffdfb", "text": "Breed a Monster you own ( as matron ) with a sire that you own , or for which you have previously been given Siring approval .", "title": "", "metadata": ""}
{"_id": "4f3d9c129f7bdf209f617ba33cec58a9", "text": "Returns true if the transaction can buy tokens .", "title": "", "metadata": ""}
{"_id": "6a1e1beb3a08d7a1a2252bbf6e0f25ca", "text": "Get the bounding box ( in metres ) of this parcel .", "title": "", "metadata": ""}
{"_id": "54f6b1abdc997a46386993f9383922d1", "text": "Calculates the interest of a given amount , interest rate and delta time .", "title": "", "metadata": ""}
{"_id": "3fa9ada752c9ec3a018966609cc10d4a", "text": "amountTokens is not supplied in subunits .", "title": "", "metadata": ""}
{"_id": "1fee469354430504daa75c0534367913", "text": "Requires sender to be certified .", "title": "", "metadata": ""}
{"_id": "0d99e0a8cc9cd24163dc0cf91f5e9d1a", "text": "supportImpeachment - vote for impeachment proposal that is currently in progress .", "title": "", "metadata": ""}
{"_id": "b3c217c2c853bf537b3e9c70c3c3ae97", "text": "teams owner .", "title": "", "metadata": ""}
{"_id": "2b2005014f3b8e351261e1d946cc8561", "text": "Function to start PreICO .", "title": "", "metadata": ""}
{"_id": "1db989e233a45cc706ae87de72aeeb66", "text": "Sends all remaining Lemon Tokens to owner , just in case of emergency .", "title": "", "metadata": ""}
{"_id": "5349df1e3de892e0d04480f935d1b443", "text": "Transfer dividend ( fraction ) to new token holder .", "title": "", "metadata": ""}
{"_id": "db4d996595195d170c21509643d13f08", "text": "Convert 256-bit unsigned integer into a 32 bytes structure .", "title": "", "metadata": ""}
{"_id": "8110a0ce61116f65f2f5ac69af845bda", "text": "Updates the Generation Season Dict .", "title": "", "metadata": ""}
{"_id": "c5f00bc58a8d1f150d7b5cff4f9add8c", "text": "In case of success funds will be transferred to beneficiary otherwise contributors can safely withdraw their funds .", "title": "", "metadata": ""}
{"_id": "7b379ac19e8f0d801e907d8281559a52", "text": "Function for the frontend to show ether waiting to be sent to Bankroll in contract .", "title": "", "metadata": ""}
{"_id": "46bdd3c1c9ef56d5ae16e10e8e18b648", "text": "Set address of promo token .", "title": "", "metadata": ""}
{"_id": "7b804b2b8cdfcd86854942d65289cc9b", "text": "withdraw with pull payee patern .", "title": "", "metadata": ""}
{"_id": "0b80f66dd2bf38e15f8456e622ae4d73", "text": "to be called by owner on 15th jan to start PreICO till 31st january .", "title": "", "metadata": ""}
{"_id": "15a3dcfd8f015741da9e62e96e13343c", "text": "Set an upgrade targget that handles the process of letting users opt-in to the new token contract .", "title": "", "metadata": ""}
{"_id": "779061e4e13f708bc3115d64edc3761a", "text": "Subscribes user to trade hooks .", "title": "", "metadata": ""}
{"_id": "ed17141dcf4724c3c443630b93453a6b", "text": "A token purchase with anti-money laundering .", "title": "", "metadata": ""}
{"_id": "99126fbb43719697df55d47902bd63ba", "text": "Set new sale manage contract .", "title": "", "metadata": ""}
{"_id": "6647f0490267cd0a11ab0786fd5f2c0f", "text": "check for exting charger and create new if , mapping hasn't it .", "title": "", "metadata": ""}
{"_id": "7a6ca4d5c53b7089929c52744be92cc3", "text": "This function is called to modify the maximum balance of the contract .", "title": "", "metadata": ""}
{"_id": "4dd4b80781c5d22b9890ee3696f1ea9f", "text": "Allows execution by the contract owner only .", "title": "", "metadata": ""}
{"_id": "768977da719a5b6adb3a0d7c41b08050", "text": "onlyReviewer Rejects a specific milestone's completion and reverts the milestone . status .", "title": "", "metadata": ""}
{"_id": "cfc461468ecdd3d47ea50155da12aae1", "text": "sets tokenURI for the given currency , can be used during the sell only .", "title": "", "metadata": ""}
{"_id": "563f87f3515dfe559ad7fee888bf41c8", "text": "Investors can claim ether refund if total raised fund doesn't reach our softcap .", "title": "", "metadata": ""}
{"_id": "a56ef199b86b2823a977ae1429a4861d", "text": "Transferring a beauty to another owner will entitle the new owner the profits from buy .", "title": "", "metadata": ""}
{"_id": "892ce77ed98de6c5d40aadf2d3ac4f26", "text": "Allow a new user to claim one or more previously unclaimed tiles by paying Ether .", "title": "", "metadata": ""}
{"_id": "1eebd742a16b36543625a76ed722dba4", "text": "Finishes the current period and starts a new one .", "title": "", "metadata": ""}
{"_id": "80914854d49745310520d12b18c529e6", "text": "users sending ether to this contract will be reverted .", "title": "", "metadata": ""}
{"_id": "edbd4ad3085a50d85c2e3debfcf750db", "text": "A safe way to handle subtraction .", "title": "", "metadata": ""}
{"_id": "bd615408d85c9f77d1a91a75d3f6bea8", "text": "allows user to buy a player from the old owner .", "title": "", "metadata": ""}
{"_id": "d0d1c7db6b4fa0a4955bda9bee7f5f14", "text": "Have a pregnant Zodiac give birth ! .", "title": "", "metadata": ""}
{"_id": "d57be98795c1fc1f396013c15203a95f", "text": "close Window and transfer Eth to wallet address .", "title": "", "metadata": ""}
{"_id": "fb93c3294b29a8442a9417da1665a60b", "text": "For the trustee to revoke an earlier Issue Offer .", "title": "", "metadata": ""}
{"_id": "d647119e362a61e5d26f461f7feb75ed", "text": "Shows how much tokens _spender can spend from _owner address .", "title": "", "metadata": ""}
{"_id": "3e6a896ea8c575888314ad9103511a80", "text": "white list contract address .", "title": "", "metadata": ""}
{"_id": "e1d5f08ced1c75dbf794ed3a75aa510c", "text": "Set address of Peony contract .", "title": "", "metadata": ""}
{"_id": "41f422fdabde5bbcd7b8d1c835486085", "text": "sets period of sale .", "title": "", "metadata": ""}
{"_id": "7d12c80ffc17424d05ca790b55377239", "text": "Gets a player's information .", "title": "", "metadata": ""}
{"_id": "1c746e3289909cb9d2969a461a53cb07", "text": "totalSupply gives the number of tokens currently in existence .", "title": "", "metadata": ""}
{"_id": "ca9e0a64e29c36b0be8725f87cac4cef", "text": "remove a time records from the time records list of one account .", "title": "", "metadata": ""}
{"_id": "5ca416e1caab4b3c532d85d75ca3e8b8", "text": "_sellCrowd checks CST purchases during crowdsale .", "title": "", "metadata": ""}
{"_id": "3fc7eba8f7ab84b745291947278d9468", "text": "Presale state machine management .", "title": "", "metadata": ""}
{"_id": "a8e3ca38c4584b961923cc3490cc523b", "text": "allow only the contract creator or one of the authorizers to do this .", "title": "", "metadata": ""}
{"_id": "211eb7e1696084a6c6d7c5c0657ca6cf", "text": "returns the agreed completion date of the requested job .", "title": "", "metadata": ""}
{"_id": "e15461cd31ac6ad8ce123a2b495a6d11", "text": "Decrease amount of RHEM tokens that can be minted .", "title": "", "metadata": ""}
{"_id": "955fb9a023d99222bde4099bd76975df", "text": "public view functions .", "title": "", "metadata": ""}
{"_id": "f0c962ccc58bd307571e17d748b7d2cb", "text": "Finalizes voting .", "title": "", "metadata": ""}
{"_id": "7934d32e04dcdf93a007dfcf1e58e988", "text": "Anybody can reveal the next ceiling if he knows it .", "title": "", "metadata": ""}
{"_id": "0ef8503fc150e83635758b8fa0d2f86a", "text": "Return a list of applications registered by the address given .", "title": "", "metadata": ""}
{"_id": "4ea386b9d73ce403f5141cda87c624cc", "text": "Guarantees that msg . sender .", "title": "", "metadata": ""}
{"_id": "721eacbf811f540ec1789b1158975a10", "text": "Change the outside contracts used by this contract .", "title": "", "metadata": ""}
{"_id": "51335222752fb5e2adb56faa430b24cc", "text": "sell fci and receive NAC back .", "title": "", "metadata": ""}
{"_id": "c7b79acea5f82212f74c8866ee68ee59", "text": "Sets updateAddress address .", "title": "", "metadata": ""}
{"_id": "2bc285fd5c5847af5164c56d60b6a8b5", "text": "Gets the balance of the specified address - overrriden from previous to save gas .", "title": "", "metadata": ""}
{"_id": "1a36db6cc64d97eaa88ed9c5b431e676", "text": "function to get total amount of Latium tokens ( with decimals ) that can be locked with this contract .", "title": "", "metadata": ""}
{"_id": "fd7ee73d6aa72e8aee63165e26f76e59", "text": "These two setters are present only to correct timestamps if they are off from their target date by more than , say , a day .", "title": "", "metadata": ""}
{"_id": "7957a903699b6072422303814a9a99c7", "text": "Transfer tokens to a specified address , works only after vesting period elapses .", "title": "", "metadata": ""}
{"_id": "93d0e50d644af86c80115872ae750ed2", "text": "NOTE : _newValue should be in ETH .", "title": "", "metadata": ""}
{"_id": "6f0fc5e5d10935206dd83722d81ce2b8", "text": "Update the address of the generator contract , can only be called by the Admin .", "title": "", "metadata": ""}
{"_id": "c85aabbe09abda1eb2d94d7509c049ff", "text": "check how many TMX Global Tokens a spender is allowed to spend from an owner .", "title": "", "metadata": ""}
{"_id": "7a1c8581836b5b42b4669f5efe60d142", "text": "Utility function ( because string comparison doesn't exist natively in Solidity yet ) .", "title": "", "metadata": ""}
{"_id": "ded32c3ca56e94011188d5176b1de5ba", "text": "cancels sales - sales can only be canceled 24 hours after it has been offered for sale .", "title": "", "metadata": ""}
{"_id": "46fc47a32ee812061e04cb0f34c4c744", "text": "Jury members can vote during voting period .", "title": "", "metadata": ""}
{"_id": "303820644e8b06c7568bb0ad53950900", "text": "Returns the current price for 1 ether .", "title": "", "metadata": ""}
{"_id": "21f93eef7ffaa57673dc5d192897faf1", "text": "Slash transcoder for claiming a segment twice .", "title": "", "metadata": ""}
{"_id": "588d6dd9cbae6c99930a427482019a4b", "text": "Function to calculates bonuses .", "title": "", "metadata": ""}
{"_id": "788831b793b36f7227af78e072ccfe3e", "text": "Checks if the provided address is a contract .", "title": "", "metadata": ""}
{"_id": "3bce049398acd696e504aab9a85ca947", "text": "Set current mtdPreAmount price in wei for one token .", "title": "", "metadata": ""}
{"_id": "820a679998f9404606b9bf3c112de993", "text": "New owner accept control of the contract .", "title": "", "metadata": ""}
{"_id": "dc77e75bac82dd7575af2a72e984589f", "text": "override buytokens so all minting comes from Golix .", "title": "", "metadata": ""}
{"_id": "e5d8ba1eb3e98231727515247a7d11b5", "text": "Purchase estate from previous owner .", "title": "", "metadata": ""}
{"_id": "875be1c979bd3a569b19b5ff3a4cae8e", "text": "Transfers control of the contract to a newOwner .", "title": "", "metadata": ""}
{"_id": "0cdef4fc9ba09aefe5b23d29e648f13b", "text": "Allows the owner to change the token limit by airdrop .", "title": "", "metadata": ""}
{"_id": "86506a3ebbb6c2b20db42818a9574a38", "text": "Manually back GamePlayerCoins owner address .", "title": "", "metadata": ""}
{"_id": "823bf8f4fffe16132ef07c1f80a99eec", "text": "Accept only round ETH purchase .", "title": "", "metadata": ""}
{"_id": "aa441fd79395566a14e902dde0dc7ae9", "text": "propose a reparamaterization of the key _name's value to _value .", "title": "", "metadata": ""}
{"_id": "6ab753205724e6655a074f758b437f79", "text": "Finish the current spin of a player , if they have one .", "title": "", "metadata": ""}
{"_id": "75cab231eeb7eeadea0f1a1c1e7cceab", "text": "Register a new SPID .", "title": "", "metadata": ""}
{"_id": "5bfd265618c4c974ac51d51960f3288b", "text": "Function to configure contract parameters .", "title": "", "metadata": ""}
{"_id": "919e262927f2e7b0ea1973b77a4bf762", "text": "Pauses the balancer , if the Balancer is paused all ETH / tokens will be realyed to the coldwallet .", "title": "", "metadata": ""}
{"_id": "e2210eb151aacfcf20174dd4eae9f28a", "text": "This function can only be executed by the owner , it adds an address to the whitelist .", "title": "", "metadata": ""}
{"_id": "8148da86d17e216676c9f35ddf775420", "text": "id and officialNote merged to the previous one level up ! ! ! gene ( gene1 + gene2 ) / 2 .", "title": "", "metadata": ""}
{"_id": "345298efe687e08aab13eceeafe8703c", "text": "If the new target cap has not been reached yet , it's fine as it is .", "title": "", "metadata": ""}
{"_id": "4f4db4e9607c1328af9db9557b3cb297", "text": "Function updates prices .", "title": "", "metadata": ""}
{"_id": "96669861b13fb100dec3f19244b43be4", "text": "Function which tranforms CHF softcap to weis .", "title": "", "metadata": ""}
{"_id": "475dd1ec2252eb04a8d0506f06cb74b8", "text": "transfer token for a specified address internally .", "title": "", "metadata": ""}
{"_id": "871b3fb61b61abd6031103af96680df8", "text": "Return the status of a dispute .", "title": "", "metadata": ""}
{"_id": "e25c78fb200cc811315ba3e90ee4ad2b", "text": "calculate next price .", "title": "", "metadata": ""}
{"_id": "5ec9550611ad9dd758c07a74c7ddb1ba", "text": "get interest count .", "title": "", "metadata": ""}
{"_id": "6d210ac60a004525549496a3e11d60a0", "text": "unfreeze token transfer .", "title": "", "metadata": ""}
{"_id": "4c89a7b40f69fc6eb889b43251a4be0c", "text": "send coins throws on any error rather then return a false flag to minimize user errors .", "title": "", "metadata": ""}
{"_id": "dc57f27ef98cfb1398b62d94d349c71b", "text": "Throws if called by any account other than the distributor .", "title": "", "metadata": ""}
{"_id": "f8803ad59f42805869e37f983a1dc153", "text": "Sets the Wei to WHEN exchange rate .", "title": "", "metadata": ""}
{"_id": "7c93070d144e77a63fb1de6a4c847ae0", "text": "Purchase a unowned system-Property in a combination of PXL and ETH .", "title": "", "metadata": ""}
{"_id": "952a0504c1d68c0e3735f6a80dec0d12", "text": "Change the owner wallet address .", "title": "", "metadata": ""}
{"_id": "0c377be3de54bcc0d660c2d757aa2723", "text": "Report whether the answer to the specified question is finalized .", "title": "", "metadata": ""}
{"_id": "85c60d0b783bb9cb8e54e8b72cc64033", "text": "check sender has sent some ethers .", "title": "", "metadata": ""}
{"_id": "40c120acfbbf9e0beff79c0c36bd635c", "text": "Get the resolver of a specified DIN .", "title": "", "metadata": ""}
{"_id": "33bd1f78e47431dba55144ca03a9cec9", "text": "Withdraws all the money from the contract .", "title": "", "metadata": ""}
{"_id": "5ebc13b0c7e33cde18e4cc1eea96375a", "text": "Assembly function .", "title": "", "metadata": ""}
{"_id": "d0484c7a266d88009314c7512589f3f5", "text": "What is the current totalSupply ? .", "title": "", "metadata": ""}
{"_id": "50a150830dfe30932f9f3391914147e6", "text": "Functions that can only be called before the end of the lock-up period .", "title": "", "metadata": ""}
{"_id": "34742b5ad31b988306868e0e0243d481", "text": "Calculates and returns event hash .", "title": "", "metadata": ""}
{"_id": "c7d842cde84ad40272309775e1903d65", "text": "proxyPayment ( ) allows the caller to send ether to the Campaign but does not create tokens .", "title": "", "metadata": ""}
{"_id": "578b957dd58ffe1e675dffc89b83641b", "text": "Burnes _value number of tokens .", "title": "", "metadata": ""}
{"_id": "5c2ecc3c9c6037e8c02f56e8076a2722", "text": "function for saving bets information .", "title": "", "metadata": ""}
{"_id": "a402da6e6e4987d0db83fabce75e854b", "text": "Get what the stage is for a given blockNumber .", "title": "", "metadata": ""}
{"_id": "7490229e395d55d880c8127c15e71030", "text": "Gets the gift ratio of the specified address .", "title": "", "metadata": ""}
{"_id": "81bf2525acd5105274e01ff099869f1f", "text": "Join a game .", "title": "", "metadata": ""}
{"_id": "775f283c95478e6068700b796377296f", "text": "shifts tokens from the contract balance to the player or the other way round .", "title": "", "metadata": ""}
{"_id": "2a3946eb42e466fd5e3d1c356debb20e", "text": "Retract a blob's latest revision .", "title": "", "metadata": ""}
{"_id": "bc0130065d4d49db1fca6de23af2c7bb", "text": "Checks the size of the message to avoid attacks .", "title": "", "metadata": ""}
{"_id": "d894b9252cc5c0039034a33ae01086b3", "text": "Returns the full capital allocation table .", "title": "", "metadata": ""}
{"_id": "ad1d1ba522ec49b6a1adab1d6db56962", "text": "Credits reward to owed balance .", "title": "", "metadata": ""}
{"_id": "344a3a4761379724248a406494d2be0c", "text": "add and delete cource certificate .", "title": "", "metadata": ""}
{"_id": "3337c1215a67f42de869387773dc7d11", "text": "create new Token .", "title": "", "metadata": ""}
{"_id": "408831a27f390f8100deabfbbbe5b35d", "text": "minimum of two values .", "title": "", "metadata": ""}
{"_id": "ebb21c0c6ca93c4ff6708d69c91fa9f2", "text": "Authorizes a payment be made from the vault can be used by the .", "title": "", "metadata": ""}
{"_id": "8a227c90e8c151b7c4c22743a5c43bbb", "text": "Getter function for token payouts mapping .", "title": "", "metadata": ""}
{"_id": "9a708b61f027a493d120589180d9170c", "text": "Function for getting the bets for ODD and EVEN .", "title": "", "metadata": ""}
{"_id": "8d48584fc4c3f09ffab20715c80222ae", "text": "internal version of withdrawFundsAdvanced ( ) , also used by withdrawFundsRP ( ) .", "title": "", "metadata": ""}
{"_id": "dff7a0ef8c5f70dd3932448b45ff0bb9", "text": "change owner for child contract .", "title": "", "metadata": ""}
{"_id": "c649877533df2fae40e75718dd6954b2", "text": "Puts an offer on the market to a specific user ( if an offer from the same seller to the same consumer already exists , the latest offer will replace it ) .", "title": "", "metadata": ""}
{"_id": "0ad17788771835c7623c0275f239ac4f", "text": "math function used to calculate vesting curve .", "title": "", "metadata": ""}
{"_id": "4b5108b79e9a22f5155676e11ddd11dd", "text": "Transferfrom function .", "title": "", "metadata": ""}
{"_id": "287aa368289f79256970914deea35f42", "text": "withdraw dividends owed to an address .", "title": "", "metadata": ""}
{"_id": "d45c22a8fc1374a0a6892d38cd08c370", "text": "Is your password still working ? .", "title": "", "metadata": ""}
{"_id": "3b530eeb4ea2556819fbf2aa62980b1d", "text": "buy tokens , only being called from robinhood .", "title": "", "metadata": ""}
{"_id": "6a499f277e505819ce678c44c7df0091", "text": "Team tokens accrual .", "title": "", "metadata": ""}
{"_id": "b6f4e3e7196de4a3f5ae32b8cff728c5", "text": "Allows the multisigwallet to transfer control of the Identify Token to a newOwner .", "title": "", "metadata": ""}
{"_id": "587b26aef7b99e1ca1be58258ea1c1d7", "text": "Assigns ownership of a specific State to an address .", "title": "", "metadata": ""}
{"_id": "759448b019a9b1cdd350edb58e96b97b", "text": "Set the token contract address .", "title": "", "metadata": ""}
{"_id": "72e002186fa436b46e5f446c0d9c823a", "text": "extended 777 approveAndCall and erc20 approve functionality that gives an allowance and calls the new operator .", "title": "", "metadata": ""}
{"_id": "6241e8ebc70a37f82533dbd8f32b8b70", "text": "transfer an amount of ACE Equity Tokens to an Ethereum address .", "title": "", "metadata": ""}
{"_id": "868012cedf272762a33bfae07f258675", "text": "Burns a specific amount of tokens if msg . sender .", "title": "", "metadata": ""}
{"_id": "b2847498036e7c896a2c298049bffc32", "text": "Claim all bought HQX for specific approved address .", "title": "", "metadata": ""}
{"_id": "d6ee420e282fbc8403a5d23ee56f5e17", "text": "Checks if the dump is complete and we can flush the whole stash ! .", "title": "", "metadata": ""}
{"_id": "a916313d12f1bbbe1648794d3e630c49", "text": "Called after setMigrationAgent function to make sure that a new contract address is valid .", "title": "", "metadata": ""}
{"_id": "f2e239bed400fe0fd4077b1360fdbda4", "text": "Check if jury member voted .", "title": "", "metadata": ""}
{"_id": "2db3d0ec2a787022c42c453285410e13", "text": "makes sure that 'snapshotId' between current snapshot id ( mCurrentSnapshotId ) and first snapshot id .", "title": "", "metadata": ""}
{"_id": "2290fd7c6c4462f007d05345f0d05f8c", "text": "changing the price if needed .", "title": "", "metadata": ""}
{"_id": "eac09d1c4d48f386a7e87fb92f7910ad", "text": "This method is for decomposing ( or split ) a token .", "title": "", "metadata": ""}
{"_id": "b4440727be797e96ef2b5b43d256c5cb", "text": "Registers an investor .", "title": "", "metadata": ""}
{"_id": "506ba1f4d88ef0eec9793ae130002454", "text": "public function .", "title": "", "metadata": ""}
{"_id": "2484928dd4f63f897a84d9ecf05ade52", "text": "Percent of tokens allowed to be sent .", "title": "", "metadata": ""}
{"_id": "943c533df4c6885aedccefe0cfd8e021", "text": "Internal function to invoke onERC721Received on a target address .", "title": "", "metadata": ""}
{"_id": "0a610f97d79df432a96b4815ebcc0609", "text": "set rate for gray so we can handle time based sales rates .", "title": "", "metadata": ""}
{"_id": "aa8814a8cf63ebbdc34401463cc34e2b", "text": "Extinguish this certificate .", "title": "", "metadata": ""}
{"_id": "ae90e432a711ab0b22982b02b3fa8b7d", "text": "Call oraclize_query with a delay in seconds .", "title": "", "metadata": ""}
{"_id": "b02cb5eff414be3dda5e55662657cc1c", "text": "consider paused ICO as failed .", "title": "", "metadata": ""}
{"_id": "3b74da0bb85fa3e98cc0da6b40edfd0f", "text": "Returns a boolean as to whether the provided address is allowed to enter the pool at this time .", "title": "", "metadata": ""}
{"_id": "0a931a288a17a31a50b8c98c6b5a4211", "text": "Called to do an airdrop .", "title": "", "metadata": ""}
{"_id": "7650eb05667d13c18e201c4fe0b4a276", "text": "Transfer Founders Team Tokens To MultiSigWallet - 365 Days Locked .", "title": "", "metadata": ""}
{"_id": "df00f225f2fc679181a84c2db37d8b09", "text": "Purchases an open auction .", "title": "", "metadata": ""}
{"_id": "2f3e048af1fbb8150b5bcd37f61092dd", "text": "Transfers a narco to another address .", "title": "", "metadata": ""}
{"_id": "57c96e8ce00dc4492429a899caadf601", "text": "Allows another contract to spend some tokens on your behalf .", "title": "", "metadata": ""}
{"_id": "cb0f532e92ae57504ca01cc46bebe26d", "text": "Allows the Hydro API to sign up official users with their app-generated address .", "title": "", "metadata": ""}
{"_id": "d670b852bbdcd3c77928d12feebb744f", "text": "Allows a user to create a game from Credits .", "title": "", "metadata": ""}
{"_id": "10adc3a6f38efae9df93011159067f51", "text": "Perform a buy order at the exchange .", "title": "", "metadata": ""}
{"_id": "a9702273656ac6f00f0e5dd2df9fc643", "text": "Returns name of tokens .", "title": "", "metadata": ""}
{"_id": "d46055d29ba505425c440af2b590c8af", "text": "Returns balance of given address .", "title": "", "metadata": ""}
{"_id": "5f8d0faf6ec4ab938af9e6308eae7b87", "text": "access the globalDelegation map .", "title": "", "metadata": ""}
{"_id": "d6df5ee3b040df0a3d9dcdefc2979941", "text": "Revokes editor rights of the passed address .", "title": "", "metadata": ""}
{"_id": "10efd7080e56f29fb4961da930abab55", "text": "Unban a user .", "title": "", "metadata": ""}
{"_id": "a1665f8fe7eef3d5236d81b8250b7d75", "text": "Execute all ERC20 token transfers associated with an order match ( fees and buyer seller transfer ) .", "title": "", "metadata": ""}
{"_id": "e336d84aa36fe29e4419cf67dd413738", "text": "Called by any Authorized role to pause the contract .", "title": "", "metadata": ""}
{"_id": "e2544695a238979eccce65084af9441a", "text": "Return the balance of an account .", "title": "", "metadata": ""}
{"_id": "e525e6c5fb569a91cd406c9506126b68", "text": "Transfer Updates .", "title": "", "metadata": ""}
{"_id": "5004c826e88bbc95d976f556aa5755ab", "text": "Removes a pending request as transactor or transactee .", "title": "", "metadata": ""}
{"_id": "45a0428ed174fde05f26f5e3d517a15a", "text": "Only Croupier .", "title": "", "metadata": ""}
{"_id": "48c8f6b8d9d86196767e3246ffee7646", "text": "gets total number of players .", "title": "", "metadata": ""}
{"_id": "386aaaed00c3daf950ae391e18de0d41", "text": "Adding new owners .", "title": "", "metadata": ""}
{"_id": "6149f2559d6ab1d1eb51ef1d752145fd", "text": "sets the burn address to the new value .", "title": "", "metadata": ""}
{"_id": "89b9ebb0d4d70adec220eda3973889bd", "text": "Mint Function .", "title": "", "metadata": ""}
{"_id": "47743c5c9d22d99de62efad5baa04779", "text": "Sends accumulated devFee to ceoAddress .", "title": "", "metadata": ""}
{"_id": "45a7ea7ed9656387775519914481afa9", "text": "Burn RSPRs from Users .", "title": "", "metadata": ""}
{"_id": "5f27e9db155846b2dd964159d5e89fc8", "text": "Number of tokens .", "title": "", "metadata": ""}
{"_id": "7f8dd1782a3cb5cfd571cb846173a73b", "text": "Allows owner to set new gas limit on Oraclize queries .", "title": "", "metadata": ""}
{"_id": "d0cce9f66f0df6012c0b90c14a960109", "text": "true if the approval was successful .", "title": "", "metadata": ""}
{"_id": "2e40df599dc56464946c67768314ff7b", "text": "Maker can deposit ethers to this contract so this contract can buy asset tokens .", "title": "", "metadata": ""}
{"_id": "2e170a4977d77edbae1479c59e378710", "text": "Set the raffle end time , in number of seconds passed the start time of 00 : 00am Monday .", "title": "", "metadata": ""}
{"_id": "fffcffa0cde8534403db3d2d00b0356b", "text": "Can also be used in airdrops , etc .", "title": "", "metadata": ""}
{"_id": "f831db42169a9f2998a8904edc908b5e", "text": "pays out the players .", "title": "", "metadata": ""}
{"_id": "bb8db95d9951f511a50754c25f4a269c", "text": "Permanently lock out the director to decentralize Oyster .", "title": "", "metadata": ""}
{"_id": "d2ba8a0677bc6bb3d0e083f53d82716f", "text": "Cancels a sale when the contract is paused .", "title": "", "metadata": ""}
{"_id": "7f24526a211311b59385ec0398875b11", "text": "Helper to transfer underlying tokens during creation .", "title": "", "metadata": ""}
{"_id": "2bb3fd09d2c51156c6c40b63a383ad00", "text": "This function is used to process a batch of net bbd flows , two arrays .", "title": "", "metadata": ""}
{"_id": "06136bab10f88df9c0b81f18670858b1", "text": "allow all users to transfer tokens .", "title": "", "metadata": ""}
{"_id": "e82d65e468bfcb70c8836f6c24515193", "text": "Set verification rate .", "title": "", "metadata": ""}
{"_id": "5c1ac1eb7a63793492cb42dd75ae03be", "text": "Function to start the first stage of human token allocation and to issue human token for team fund .", "title": "", "metadata": ""}
{"_id": "8bb528b77368177921c3dedee862f442", "text": "Retrieve all asset information for the provided token .", "title": "", "metadata": ""}
{"_id": "662159557aef7da5594fb423ad602cd1", "text": "This function is called by the owner to modify the cap .", "title": "", "metadata": ""}
{"_id": "08d73050082946d5d9855d9930ac4552", "text": "Only allow access from the latest version of a contract in the Rocket Pool network after deployment .", "title": "", "metadata": ""}
{"_id": "3d0184d3dc6203c5db5ba5c8536412fc", "text": "check if soft cap goal is reached in USD .", "title": "", "metadata": ""}
{"_id": "3b57377586eeb2613af89e2c03a1d992", "text": "Modify portal .", "title": "", "metadata": ""}
{"_id": "8b6e0e365803f91ba96095b23861fa8c", "text": "Returns the remaining allowance of tokens granted to the _spender from the _owner .", "title": "", "metadata": ""}
{"_id": "5bd03ffd06370d514048cb1860b82b36", "text": "Checks input and then creates storage buffer to update a tier's minimum cap .", "title": "", "metadata": ""}
{"_id": "aaaf2017d528436037f0ff1b4d962b39", "text": "Buy metadollars from contract by sending ether .", "title": "", "metadata": ""}
{"_id": "0e5bc86a4e72f2101fb98ed6d4393bb0", "text": "Implementation for transferring IAC Token to provided address .", "title": "", "metadata": ""}
{"_id": "682009cf1e0aa3e68838989a849af21f", "text": "Add owners .", "title": "", "metadata": ""}
{"_id": "c1bf23d48bfcf77ae14f6c0833eb1917", "text": "called by the admin to unpause , returns to normal state .", "title": "", "metadata": ""}
{"_id": "f2068dce9f6f368e53fbb18b99eb43f2", "text": "automaticWithdrawLoop ( ) can be called once the FairAuction is finalized to automatically allocate a batch of auctioned tokens .", "title": "", "metadata": ""}
{"_id": "56a670a1cedaef30e6e4cb048172c99a", "text": "function to transfer ownership for Vanity URL by Owner .", "title": "", "metadata": ""}
{"_id": "227ba12240dc4d2054dcf6e733ef5fa7", "text": "deal offing statue .", "title": "", "metadata": ""}
{"_id": "84f00228a1e9a302c3e4aa83e2773765", "text": "assigns ownership of the token with id _partId to this contract must have already been approved .", "title": "", "metadata": ""}
{"_id": "1bbf6e296ed3169315593e7af404d4f5", "text": "Function to distribute tokens to the list of addresses by the provided various amount .", "title": "", "metadata": ""}
{"_id": "cb7cbdad26bd801c795a9f8b7e23ef0a", "text": "Approve Approves spender _spender to transfer _amount .", "title": "", "metadata": ""}
{"_id": "b346732ff5987111364bad50c5e201b9", "text": "Transfer actions .", "title": "", "metadata": ""}
{"_id": "4267965b2b7d19bcaf17e0e3b5654687", "text": "Dev Functions .", "title": "", "metadata": ""}
{"_id": "2c8e043ce0ab472354235cfe4706c92e", "text": "Get the whitelist status for an address .", "title": "", "metadata": ""}
{"_id": "a40e3b95b88761b11229b3da569e49b0", "text": "This function can be used by owner in emergency to update any parameter .", "title": "", "metadata": ""}
{"_id": "79cc1a714329ad26a28ba89eee03362c", "text": "Calculates referrer bonus .", "title": "", "metadata": ""}
{"_id": "840080e0be72b9054dd7648413fc438a", "text": "Safe addition .", "title": "", "metadata": ""}
{"_id": "76d2e8e76be46e4432a8e3c16473f038", "text": "Transfer a narco owned by another address , for which the calling address has previously been granted transfer approval by the owner .", "title": "", "metadata": ""}
{"_id": "844c587f146a33c0f4d42ab88b5e3292", "text": "Modifier to prevent execution if ico has ended .", "title": "", "metadata": ""}
{"_id": "a4eb3fa7bf26911e3e429da3c74a4c65", "text": "tell the receivers that the sale is over .", "title": "", "metadata": ""}
{"_id": "8e595b5d007e0a2fba8264c72214cb0d", "text": "Callable any time after the initial hand .", "title": "", "metadata": ""}
{"_id": "5fe045be304f89b4cd0a34c620832c26", "text": "Continue paused contract .", "title": "", "metadata": ""}
{"_id": "ae243ee93a3e8eabb6483b4fbba8ffe7", "text": "Get locked contract address .", "title": "", "metadata": ""}
{"_id": "5653baa64ea638d5f8d9f895c3ffc5c7", "text": "disables / enables token transfers can only be called by the contract owner .", "title": "", "metadata": ""}
{"_id": "1f2bcf31f020f1bfceb916bd963c85db", "text": "Sets the state of the internal monthly locked vault contract and mints tokens .", "title": "", "metadata": ""}
{"_id": "ac822cb094b14ecac605b30ea10e9959", "text": "Get the pending buildings ( by type ) owned by a specific city .", "title": "", "metadata": ""}
{"_id": "71f08a1ebc6cfdbefc13f7c59929c41c", "text": "Define an asset ID to a factory .", "title": "", "metadata": ""}
{"_id": "dcba4981ba255ef9fbc92d8cb756eea1", "text": "Allow minting during the PRE SALE ico phase .", "title": "", "metadata": ""}
{"_id": "1e5668fc644e5c4d866eff5e64f687dc", "text": "implements ERC223 interface .", "title": "", "metadata": ""}
{"_id": "35d6494505e55840a1db0b3d1ed081d8", "text": "View methods .", "title": "", "metadata": ""}
{"_id": "f09d8c99188726a96412e661b92febf4", "text": "Checks if caller is RoundsManager .", "title": "", "metadata": ""}
{"_id": "e58bb6054bfb08942ab2237bdafc6f15", "text": "Sets the address of the PentacoreRedemption contract .", "title": "", "metadata": ""}
{"_id": "7ebe3b3678fe885f5a8d9fffe21c9624", "text": "Burns the coins held by the sender .", "title": "", "metadata": ""}
{"_id": "9977646141d53734d4d06044a89ab414", "text": "Register organisation as Auditor .", "title": "", "metadata": ""}
{"_id": "1f9f78e242ac2956d9c00a0d663d5c93", "text": "returns the total amount of tokens that are eligible to be collected .", "title": "", "metadata": ""}
{"_id": "47b12cd585ee12f19126603dfd194ea6", "text": "this contract has to be approved first by _erc20Contract .", "title": "", "metadata": ""}
{"_id": "be1e788ee82344a400f3fa5c4fb7de3d", "text": "Register Investment Guide .", "title": "", "metadata": ""}
{"_id": "893272fb5933831ece5584b0a67594cc", "text": "Get CHF / ETH pair as an integer .", "title": "", "metadata": ""}
{"_id": "a2626026a36ef6346e400150e533274d", "text": "Administrative function for adding a new token-time pair , should there be demand .", "title": "", "metadata": ""}
{"_id": "93d523458bcb02f5c82ac56c9fa40968", "text": "VIP Batch with lock .", "title": "", "metadata": ""}
{"_id": "87c7c70bdd13c08aead0522184b8abb6", "text": "after market lifetime has elapsed , no new offers are allowed .", "title": "", "metadata": ""}
{"_id": "0d1a82adf8aa7d11dd97062cc6ef18ad", "text": "creates all tokens 5 million this address will hold all tokens all community contrubutions coins will be taken from this address .", "title": "", "metadata": ""}
{"_id": "7bf6e32dcd8ae1d951c376c9259641b8", "text": "Team functions .", "title": "", "metadata": ""}
{"_id": "072cf1c3f1679b8162ac11f7a13dcc3e", "text": "dev Aprove the passed address to spend the specified amount of tokens on beahlf of msg . sender .", "title": "", "metadata": ""}
{"_id": "f764a1fdc902468eb4dc3c0541940004", "text": "Game ownership functions .", "title": "", "metadata": ""}
{"_id": "41ed101c359323ed3a229fd2be31b6c8", "text": "Create sell offer for cat only to a particular buyer address with certain minimum sale price in wei ( by cat owner only ) .", "title": "", "metadata": ""}
{"_id": "fe3caaf38fcdfbc15ce0454edbd36a36", "text": "Sets a centurion as approved for transfer to another address .", "title": "", "metadata": ""}
{"_id": "aa81a698b06c917da5792cfb4d968d21", "text": "Calculates the amount of bonus coins the buyer gets .", "title": "", "metadata": ""}
{"_id": "d4f78bb9e822de132a4cab3d84c1c2d4", "text": "start the next day's auction .", "title": "", "metadata": ""}
{"_id": "c0369a7baab4842bd89cb14f9376a2bf", "text": "Reenables the operation before the specified block was reached .", "title": "", "metadata": ""}
{"_id": "24b8ac0f2a79e0cc43fd099780760887", "text": "Gets total amount of bmc-day accumulated due provided date .", "title": "", "metadata": ""}
{"_id": "c7270d611f9f95cbd169893834dbb4e3", "text": "Modifier to make a function callable only when the contract is not finalized .", "title": "", "metadata": ""}
{"_id": "b836c79461554cac9904bb7bd3e64029", "text": "Ends the funding period and sends the ETH home .", "title": "", "metadata": ""}
{"_id": "3f44c7724588a1382a23da6931daeea9", "text": "Burns a specific amount of tokens .", "title": "", "metadata": ""}
{"_id": "2bfec85122638fe6ea3f279b062a6473", "text": "Set buy and sell price of 1 token in eth .", "title": "", "metadata": ""}
{"_id": "9928b7925daa0148a965c446d838511d", "text": "Modifier to only allow the execution of certain functions restricted to the creator .", "title": "", "metadata": ""}
{"_id": "de2305ae67f82966667b793e90e855ac", "text": "Allows the new owner toaccept ownership .", "title": "", "metadata": ""}
{"_id": "f7915a9bab962628f58bf3e06bc5e4d0", "text": "Revoke oracle role from an address .", "title": "", "metadata": ""}
{"_id": "46821554c43121311c24cf0bc51fd9a4", "text": "Owner can wipe all the data from the contract and disable all the methods .", "title": "", "metadata": ""}
{"_id": "58326e91692fbd3cfc0e3f4b68fc8689", "text": "Getters to allow the same blacklist to be used also by other contracts ( including upgraded EUROQUINNToken ) .", "title": "", "metadata": ""}
{"_id": "cb718b2b3a15a6e34f02ba6bd5192394", "text": "This can be changed ! .", "title": "", "metadata": ""}
{"_id": "74328a1605dda7f35bf44c1e494e52cf", "text": "sets the Ether to Dollar exhchange rate .", "title": "", "metadata": ""}
{"_id": "4e2197c8e99e1c57b34fa229e8a2c767", "text": "evacuateToVault - This is only used to evacuate remaining to ether from this contract to the vault address .", "title": "", "metadata": ""}
{"_id": "25d69542af6eae72302cc2ee9805b104", "text": "Get publicAllocation .", "title": "", "metadata": ""}
{"_id": "07572af68ea4906316af4fd29bf0c828", "text": "Returns number of traded tokens .", "title": "", "metadata": ""}
{"_id": "9ecf32f31d0dc8ce12de6734bf6de5e0", "text": "Checks if a given address is the current owner of a particular Puppy .", "title": "", "metadata": ""}
{"_id": "ea0a47a1dad3af7d973d7edd3bd0421b", "text": "transfer token for a user or another contract address for ERC20 and ERC223 .", "title": "", "metadata": ""}
{"_id": "4bb8684532b573a5bd1035abd6435072", "text": "Can only be called by prior to the period .", "title": "", "metadata": ""}
{"_id": "caa10027123227fbd8411a7aadd6c5c8", "text": "End locking state for team member / advisor .", "title": "", "metadata": ""}
{"_id": "380b47a6fb0eecba86a2557bdd1b5472", "text": "Cancels an auction when the contract is paused .", "title": "", "metadata": ""}
{"_id": "4fdeea14b50c26340c379eb344d495db", "text": "logs and pays charon fees .", "title": "", "metadata": ""}
{"_id": "2a85ac2bea84e0a7e022e37eb3eb7de8", "text": "Checks how much a certain user allowed to a different one .", "title": "", "metadata": ""}
{"_id": "89ba4172f0364b8e2ab5d42d5be43e32", "text": "Appoint an agent or a new agent .", "title": "", "metadata": ""}
{"_id": "d472dd1a33d2235aef598a870e073890", "text": "Allows admin to resume the sale .", "title": "", "metadata": ""}
{"_id": "811bc3aea139cd52ff50116e5ba41906", "text": "To get price of a stamp .", "title": "", "metadata": ""}
{"_id": "9fd4619c5690a38292a6cbf78761303d", "text": "Get ether and transfer tokens .", "title": "", "metadata": ""}
{"_id": "a2d2dbaa1815adb4732fa9f35e3759da", "text": "the policy balance ledger will be updated either onlyOwner might be changed to onlyManager later .", "title": "", "metadata": ""}
{"_id": "88809687b706048d968c72aec292a3a0", "text": "Access to the C-level in general .", "title": "", "metadata": ""}
{"_id": "8ec79da8eaa80f5e66cf2aa3f2302353", "text": "calculating 2nd level bonus .", "title": "", "metadata": ""}
{"_id": "9ef40d155457479559158f0adc011b02", "text": "With this function , the token ownership will be transferred to token creator .", "title": "", "metadata": ""}
{"_id": "a3827cfb13ddadce5eadf144bb122f3e", "text": "Modifier for address whith whitelisting rights .", "title": "", "metadata": ""}
{"_id": "ab12282e56009482d1d64b63e8cc9784", "text": "Checks if rounding error 0 . 1 .", "title": "", "metadata": ""}
{"_id": "030eb3870bea47e4a2ccb63f40200588", "text": "Authorize a group of participants for a tier .", "title": "", "metadata": ""}
{"_id": "289c5dfb995c11b9019ad3ed37b0aeeb", "text": "Finalize the token sale ( can only be called by owner ) .", "title": "", "metadata": ""}
{"_id": "e9d0a354c8495a5c43e11db71f16853e", "text": "Owner only write .", "title": "", "metadata": ""}
{"_id": "23a33f4610fdfae37cd8693c2ea8f59f", "text": "Acquisition of a rabbit from another user .", "title": "", "metadata": ""}
{"_id": "33da6eeac6f25708ca76799fac138cc9", "text": "Claims the ownership of a given deed ID .", "title": "", "metadata": ""}
{"_id": "05b617f69971d06134bc09a7f02aa705", "text": "Throws if called by any account that's not whitelisted .", "title": "", "metadata": ""}
{"_id": "bc11353ff71e9e59762be06938f010d0", "text": "Claim auction tokens for receiverAddress after the auction has ended .", "title": "", "metadata": ""}
{"_id": "40e8fe17568ed4a9713ef6d7f18d8370", "text": "Getter for winningChoice in VoteCounter .", "title": "", "metadata": ""}
{"_id": "852101328b285da8baf5a88f37db43e4", "text": "Throws if called by any account other than the burner .", "title": "", "metadata": ""}
{"_id": "ecf7d3566585091fc1627bad170f1663", "text": "approve _value tokens for _spender address to send from 'msg . sender' .", "title": "", "metadata": ""}
{"_id": "3be7211a5f1462f6f6bfb38b68c5f5bc", "text": "Allows VuePay to withdraw funds .", "title": "", "metadata": ""}
{"_id": "6b328a8593ac487746601416a4007141", "text": "Returns winner address .", "title": "", "metadata": ""}
{"_id": "116edcf6d0ab4cdc15107c1b25da5ce6", "text": "Deposit function for users to send tokens to Bunz Application .", "title": "", "metadata": ""}
{"_id": "1b18d339b087d36eed68935a37e67643", "text": "returns total number of pieces .", "title": "", "metadata": ""}
{"_id": "e312ce90bc0f936c9821a599c71f394a", "text": "Remaining tokens withdrawal .", "title": "", "metadata": ""}
{"_id": "0d5c1c1c0494d6782f308abda95e94d5", "text": "Destroy tokens from another account .", "title": "", "metadata": ""}
{"_id": "251a7e265b8e11b832d39b61ef239861", "text": "Function set new Ico start time .", "title": "", "metadata": ""}
{"_id": "93a7b211de8b70df9d9edac1f929eb77", "text": "one never knows if this will come in handy .", "title": "", "metadata": ""}
{"_id": "51409f03b318ffc46f8168d7e6876196", "text": "Allows the owner to change the funds wallet address .", "title": "", "metadata": ""}
{"_id": "2fb6fa803fc3cfe32cb25bf979db1567", "text": "For user to get their own secret note .", "title": "", "metadata": ""}
{"_id": "5882181ded0915e2a3c4f1c39ee579fe", "text": "Checks if a given address currently has transferApproval for a particular .", "title": "", "metadata": ""}
{"_id": "f4815bac30066b8cf2a93755b4158ba7", "text": "Account linking functions .", "title": "", "metadata": ""}
{"_id": "95f015c9072ec019b73c71781951932a", "text": "functions with this modifier can only be executed by the owner .", "title": "", "metadata": ""}
{"_id": "1ceacab1d587842a1bafc6b77e06cf50", "text": "Change minContribution amountAmount .", "title": "", "metadata": ""}
{"_id": "30d1ff8e5a84da630a07ba36a9f35dd1", "text": "to be used when certain account is required to access the function .", "title": "", "metadata": ""}
{"_id": "e2ad434c43453513fa62ed4485ef7192", "text": "true if the block number is over the block internal .", "title": "", "metadata": ""}
{"_id": "9170b97c4dad57ee4a2678c389bb03ca", "text": "Function to remove all stages .", "title": "", "metadata": ""}
{"_id": "bb74af62ced3d7598ad31c00055dd8a9", "text": "Returns an avatar owner address by avatar's hash .", "title": "", "metadata": ""}
{"_id": "5a832dac08a8abc66b77b47061fb3c5d", "text": "In case of chat messages with extremely rude or inappropriate content , the administrator can censor a chat message .", "title": "", "metadata": ""}
{"_id": "f1d41f0e993ec0451370a389bd3d9c7f", "text": "Creates a new promo city with the given name , with given _price and assignes it to an address .", "title": "", "metadata": ""}
{"_id": "3bab8efbeb95f8455b562a11ddba119c", "text": "normal user can get back their funds if in emergency .", "title": "", "metadata": ""}
{"_id": "000147da43e872223247501e74960286", "text": "standart ERC-20 function get ERC-20 token balance from _address .", "title": "", "metadata": ""}
{"_id": "fa586801707f4d549832d41777fab73b", "text": "Contract functions .", "title": "", "metadata": ""}
{"_id": "64d1f0f6570750088d62b4d3739475a1", "text": "Return the maximum of two uints .", "title": "", "metadata": ""}
{"_id": "899f94c12a09bb8aad198007c1628ffc", "text": "Sets the address of the ERC20 token used for fees in the contract .", "title": "", "metadata": ""}
{"_id": "0b1bd857956988e790d6237e690f64e1", "text": "overriding Crowdsale successfulWithdraw to add cap logic only allow beneficiary to withdraw if softcap has been reached .", "title": "", "metadata": ""}
{"_id": "b5a7b251b48b74295b56856130d0c3c1", "text": "Get the last non published pull-request from the queue .", "title": "", "metadata": ""}
{"_id": "828f3868f9f162be86b8cf03f086ba91", "text": "Owner should call this on 1st of every month .", "title": "", "metadata": ""}
{"_id": "fa21be5a78dee178cbcba7b55db958b9", "text": "increase the token's supply .", "title": "", "metadata": ""}
{"_id": "38ab01080769a6754497b663e7542f41", "text": "Withdraw the remaining Beercoins in this contract .", "title": "", "metadata": ""}
{"_id": "7cc7e4ba5899a209bd83a8b1d3205735", "text": "People can claim shares from the company ! .", "title": "", "metadata": ""}
{"_id": "bb333208f5a6e0837ccb7e12a36fd9ec", "text": "Owner can transfer out any accidentally sent ERC20 tokens .", "title": "", "metadata": ""}
{"_id": "217848a64ca1c580b61ddfa76e66a2a9", "text": "Allows only to refund the contributed amount that passed the validation and reached the softcap .", "title": "", "metadata": ""}
{"_id": "392ca0d2f7af6455214eae8e85197557", "text": "Calculates the bid price in wei per aToken based on the current reserve amount .", "title": "", "metadata": ""}
{"_id": "bbaebe1f4ebf3ed516cfb37cf3490a54", "text": "for debug purposes only ! .", "title": "", "metadata": ""}
{"_id": "eaa9f0c5df35f7ac84c84762a3fe4c1d", "text": "import MET tokens from another chain to this chain .", "title": "", "metadata": ""}
{"_id": "b0185473fb2bb0681c5b65345fc62ff1", "text": "ERC20 transferFrom ( ) .", "title": "", "metadata": ""}
{"_id": "d7c2ec605e80c970378eb77018d41bba", "text": "kill the contract from the blockchain and retrieve the tokens and balance to the owner .", "title": "", "metadata": ""}
{"_id": "8f33cf65d0c47ca218a30e67b0664570", "text": "Allows to take back a dispute on the Escrow if conflict has been resolved .", "title": "", "metadata": ""}
{"_id": "e0645ba61b532ea27d23c6065c703b4e", "text": "Empties the contract of the remaining tokens .", "title": "", "metadata": ""}
{"_id": "c4359a20570e7edd5fcdb4b2cf960aeb", "text": "How many tokens are remaining to be airdropped .", "title": "", "metadata": ""}
{"_id": "e624a65042b8bcd450718228aa445e45", "text": "public functions for adding and deleting entries .", "title": "", "metadata": ""}
{"_id": "85b4d8ab796b012bc4070d65f46441db", "text": "Modifier to make a function callable only when the contract is private fund end .", "title": "", "metadata": ""}
{"_id": "30d3577fd9a8d521900bc56bee89c67e", "text": "sets the token contract if the crowdsale hasn't started .", "title": "", "metadata": ""}
{"_id": "4fef70c2aa0e774b89a33aacb003686f", "text": "Transfer ETH amount from contract to bank's address .", "title": "", "metadata": ""}
{"_id": "c36eeb32d8459f5c3a58db1cfab4bab3", "text": "Check if contract has ended .", "title": "", "metadata": ""}
{"_id": "86285257e54b9d62944d6752b4f403d8", "text": "returns the number of wei some amount of usd .", "title": "", "metadata": ""}
{"_id": "1c457358325505d609aae6870a7ddb78", "text": "set token owner to an address .", "title": "", "metadata": ""}
{"_id": "38745de57ce8c7937b504ce127518af8", "text": "Pause contract .", "title": "", "metadata": ""}
{"_id": "a0a058bd1151fe0dffe4408c1c6279a3", "text": "return game info .", "title": "", "metadata": ""}
{"_id": "c333237169f60e342f91b5ea4e4a3428", "text": "returns if a pixel has already been purchased .", "title": "", "metadata": ""}
{"_id": "5be11187efa8e727167242802afba453", "text": "Ensure that only a certificate administrator is able to perform .", "title": "", "metadata": ""}
{"_id": "6dcfbff58c77a7433eafe1c5908c473b", "text": "This is independent of Stock and Altar .", "title": "", "metadata": ""}
{"_id": "56ea54407390f50462ab761ffb18d000", "text": "get transaction index of last transaction that First buyer claimed .", "title": "", "metadata": ""}
{"_id": "fcab1880c70b4ab1dd998f551f865ccb", "text": "Prevent the token from ever being paused again .", "title": "", "metadata": ""}
{"_id": "8cdccf0e628d718af2571a0df2ce06ea", "text": "PoS must be manually triggered by the contract creator using a UNIX timestamp .", "title": "", "metadata": ""}
{"_id": "f7bf6d0945614b75737778949dd72e1c", "text": "Issue tickets for the specified address .", "title": "", "metadata": ""}
{"_id": "88582d5ed6cf3ae0d6429f4cea3bbe68", "text": "Tells the proxy type ( EIP 897 ) .", "title": "", "metadata": ""}
{"_id": "4a7d99dbae3db35f444c92170eb9dfb1", "text": "Calculates the total number of tokens that can be unlocked based on time .", "title": "", "metadata": ""}
{"_id": "62031aada1f67e03e98b4a5029bf42b4", "text": "Transfering Contract Ownership .", "title": "", "metadata": ""}
{"_id": "35a5a2528d9e543993a817d98072b9b5", "text": "keeps track of the number of non-zero token holders .", "title": "", "metadata": ""}
{"_id": "8e2da3c508e3e139a004393fd17d8f50", "text": "Populate the whitelist , only executed by whiteListingAdmin .", "title": "", "metadata": ""}
{"_id": "40a695e831428a5ebba48acb9165b341", "text": "Initialize the Token Contract .", "title": "", "metadata": ""}
{"_id": "73808ad979134a7d175d1795bf22db02", "text": "first checks if deck and the player's number of cards are correct , then checks if the player won and if so , sends the win .", "title": "", "metadata": ""}
{"_id": "3b5d31f70c80c5e6364e3f3f24519f1c", "text": "This is a setter for rewardGenerationComplete .", "title": "", "metadata": ""}
{"_id": "f4fd7fbacd81642c11488942cda1dfad", "text": "Modifier to make a function callable only by owner or freezing agent .", "title": "", "metadata": ""}
{"_id": "da57499ae333daf88ad43e6b34ef55ab", "text": "setup contract addresses .", "title": "", "metadata": ""}
{"_id": "33fa54a775895439715bdf3659dc7d17", "text": "Change champ's name .", "title": "", "metadata": ""}
{"_id": "f8976d6e7e98397e6fe7c909da4935ba", "text": "You must set the allowance to zero before changing to a non-zero value .", "title": "", "metadata": ""}
{"_id": "29c88b053eb69121523ca7af7b5886bd", "text": "The initialization method .", "title": "", "metadata": ""}
{"_id": "8a5f6bb592121e5eb04c79f757c939fe", "text": "Indicates whether a given application name has been claimed for official and unofficial applications .", "title": "", "metadata": ""}
{"_id": "321f460059307188157357e00abe8278", "text": "Returns the amount of oversight addresses .", "title": "", "metadata": ""}
{"_id": "d31849ceb1ce81ab94b57e7099341c5a", "text": "modifier to enforce any of 3 specified roles to access function .", "title": "", "metadata": ""}
{"_id": "e81134fc5530cc48a7089c9f1ad69c35", "text": "Returns true if amount + plus fuel bought today already is not above the maximum share one could buy today .", "title": "", "metadata": ""}
{"_id": "669b9c8c651a202c9162c0d549b25954", "text": "Only the owner of the token can transfer .", "title": "", "metadata": ""}
{"_id": "2b0cd22e598b0723c855e70fcf219422", "text": "get GDPOracle .", "title": "", "metadata": ""}
{"_id": "41a6243be86c92a8607075fd49eb090b", "text": "Any address can buy a day for the specified minimum price .", "title": "", "metadata": ""}
{"_id": "d5fc727e4444281520fe84bf3130aa56", "text": "before controller buy fci for user user nead to place sell order .", "title": "", "metadata": ""}
{"_id": "455381df9e0e6dde241f2af2e6a4e20d", "text": "Issue a new amount of tokens .", "title": "", "metadata": ""}
{"_id": "39afa6188f9d20d32a547a87539750c7", "text": "Override crowdsale finalizeSale function to log balance change plus tokens sold in that stage .", "title": "", "metadata": ""}
{"_id": "609b09d85a8aac624501a761c70aa70a", "text": "Transfer the fees collected thus far to the contract owner .", "title": "", "metadata": ""}
{"_id": "79a6d5ccc0da6f77aa3471b58bd1a065", "text": "access the tokenDelegation map .", "title": "", "metadata": ""}
{"_id": "c5e369095e14180661698aeb137ca7bf", "text": "how many safes has the user .", "title": "", "metadata": ""}
{"_id": "2e02c5932e287cef277dbeefdf5bb421", "text": "returns module list for a module name - will return first match .", "title": "", "metadata": ""}
{"_id": "ee26552cb93ba9f9ec6b7040988e1415", "text": "Mask must be the size of the byte array .", "title": "", "metadata": ""}
{"_id": "23fbcec47325a303b5846ae7aed14733", "text": "set eth : tpc rate .", "title": "", "metadata": ""}
{"_id": "af975e729b57b4315cfadddcedbe0c95", "text": "Close the current request in queue and move the queue to its next element .", "title": "", "metadata": ""}
{"_id": "f67891c8bfb54843fdb42b8ab2284d6e", "text": "The function that is used to claim the bounty .", "title": "", "metadata": ""}
{"_id": "81d2506df9531be9e4f9104b699384d2", "text": "Compute all second losers of all first round losers .", "title": "", "metadata": ""}
{"_id": "065be30f82832f0af096b249c73309aa", "text": "Function wrapper to check for allocation lock .", "title": "", "metadata": ""}
{"_id": "952d370d1c82f511389fb04e1b62765d", "text": "Allows the new owner to accept ownership of the contract .", "title": "", "metadata": ""}
{"_id": "81de559d83349c5fb66e63f3d230747c", "text": "Accessor for the value in wei of selling a certain amount of tokens .", "title": "", "metadata": ""}
{"_id": "43a219e6a8464dd1e54a058d49d2f5da", "text": "ERC998ERC20 Top Down Composable .", "title": "", "metadata": ""}
{"_id": "eb3ecdc0bfd921223b1f4eb4592b4549", "text": "What is the length of a particular Penis ? .", "title": "", "metadata": ""}
{"_id": "f4a0f8567c3efe53a25c913a438a7075", "text": "internal ( no gas ) : calc interest as a function of interval-index ( loop from-interval to to-interval ) .", "title": "", "metadata": ""}
{"_id": "96755a4a82c13bb741d05b2e3f5803aa", "text": "Modifier to make a function callable only if user is in whitelist A , or in whitelist B and openingTimeB has passed .", "title": "", "metadata": ""}
{"_id": "bf9e7fe8476745dae552fc11c78a1373", "text": "internal function .", "title": "", "metadata": ""}
{"_id": "6162cda84fee07c2e49ac6223c995676", "text": "Make sure we will send back excess if user sends more then 2 ether before 100 ETH in contract .", "title": "", "metadata": ""}
{"_id": "ae64e4eb0a2d9959e7d61520e9344ce6", "text": "token purchase .", "title": "", "metadata": ""}
{"_id": "e1c9c15e709ecbabc10b03c6f2031bb7", "text": "transfer shares .", "title": "", "metadata": ""}
{"_id": "44e80504c2d3e4cca5769d4736a3354a", "text": "Returns new lottery created at .", "title": "", "metadata": ""}
{"_id": "29e0419025e9e65b04d711d29fd9afde", "text": "Only root functions .", "title": "", "metadata": ""}
{"_id": "31f7880574b3c6570aeaf6164f68aaa4", "text": "Send tokens to founders .", "title": "", "metadata": ""}
{"_id": "ff7e0e6a035bbcaa4426c4e3aef6a494", "text": "Allow owner to set whiteListOwner .", "title": "", "metadata": ""}
{"_id": "153548575cfbdcd7dab8252c8b69ec13", "text": "Returns the ability of an asset / collectible / token from attributes .", "title": "", "metadata": ""}
{"_id": "a4df36add833a9a093e54c8c68aa4b1f", "text": "Only final token reserve wallet .", "title": "", "metadata": ""}
{"_id": "69e161e1f4595729182945074ce9c8f7", "text": "Modifier to make sure the owner's functions are only called by the owner .", "title": "", "metadata": ""}
{"_id": "6efd4c0b71f9b422dbbc3767c4779af9", "text": "Change founder address .", "title": "", "metadata": ""}
{"_id": "7d981ae53ffc3f001125d8521fcc43c9", "text": "For creating CSC Collectible .", "title": "", "metadata": ""}
{"_id": "6dae0d92dd0c51c20e5929153acbc7d7", "text": "External function to transfers a token to another address .", "title": "", "metadata": ""}
{"_id": "dfd7f981772c618869d06143d6ac7d85", "text": "Sum vector .", "title": "", "metadata": ""}
{"_id": "45f5b8ae0e29a7d993544041c7656a02", "text": "Withdraw tokens only after the deliveryTime .", "title": "", "metadata": ""}
{"_id": "8d229f110b7fd0bca411444d951867e2", "text": "Allows the owner to set the minimum purchase .", "title": "", "metadata": ""}
{"_id": "7f686333f8eb0b4d6ac203d9b59900a9", "text": "ensure that the result of dividing x and y is accurate note : Solidity now throws on division by zero , so a check is not needed .", "title": "", "metadata": ""}
{"_id": "7cefd6b92ccc2557e48083a676569517", "text": "Get balance of a token owner .", "title": "", "metadata": ""}
{"_id": "2455e72d73613ad0d6ab1d3bc06c2a83", "text": "allow transfer tokens or not .", "title": "", "metadata": ""}
{"_id": "cbc7707cb37655304669acda92c1242e", "text": "Gets the token ID at a given index of the tokens list of the requested owner .", "title": "", "metadata": ""}
{"_id": "98468454b02e69e74251a83bae228b32", "text": "Assign tokens to player .", "title": "", "metadata": ""}
{"_id": "0a9ef9dd3f4c4e3fe888300ef00f3177", "text": "Internal helper functions to query and set a value in a snapshot array .", "title": "", "metadata": ""}
{"_id": "ff6ad07dd50fab4b1709505538a88e91", "text": "set oldE4 Addresses .", "title": "", "metadata": ""}
{"_id": "fbbe5a297724831335cc0ef0f8e26eb7", "text": "Upgrade your tokens to the new , Penis Token , Black Edition .", "title": "", "metadata": ""}
{"_id": "43a83147bc54f4fa6f24ca9af6b81dd5", "text": "This method should be called by the SIT holders to collect their corresponding MSPs .", "title": "", "metadata": ""}
{"_id": "c18c24aae963e65493920772611d7bf6", "text": "Internal check to see if a given dad and mom are a valid mating pair for breeding via market ( this method doesn't check ownership and if mating is allowed ) .", "title": "", "metadata": ""}
{"_id": "99901871583e3103b2814fd56b9ab6ab", "text": "Withdraw - Sell user's tokens and withdraw the eth value , sends divs as donation - User doesn't get any of the excess divs .", "title": "", "metadata": ""}
{"_id": "27d6dbb24166abeb042c148c2c8109c9", "text": "Internal function , Helps in updating the Creation Stop Time .", "title": "", "metadata": ""}
{"_id": "1b1051bb0c9720e41d1e4fbc8e70bf51", "text": "Allows the CFO to capture the balance .", "title": "", "metadata": ""}
{"_id": "01a6d3128485e5794aead5c4f3b7ddef", "text": "returns the idx deposit for beneficiar .", "title": "", "metadata": ""}
{"_id": "8416d0e56b874d37f9d2767c4415ecfb", "text": "return active flag time .", "title": "", "metadata": ""}
{"_id": "817b526b6d5705173786b36ce47adbf0", "text": "end whitelist related functions start fee handling functions public utility function to allow checking of required fee for a given amount .", "title": "", "metadata": ""}
{"_id": "aa1b63c42417020a5656df8ff036276c", "text": "The owner of this contract is the owner of token's contract .", "title": "", "metadata": ""}
{"_id": "2f4b3d0e3150745cdd0e458729cbeb98", "text": "If we want to change slowDump Sell limit , we can .", "title": "", "metadata": ""}
{"_id": "1334a2475671c11b93cd31038ddf28df", "text": "Reissue your tokens .", "title": "", "metadata": ""}
{"_id": "d6709a5b1dfbe91e3ef334b4dc6babb2", "text": "Load funds to the crowdsale for a single investor .", "title": "", "metadata": ""}
{"_id": "0c53088d3a9e432e79c82ef456c9c067", "text": "Claiming HODL reward for an address .", "title": "", "metadata": ""}
{"_id": "789d8bfe9f17fc3bc14159dcf3e8d707", "text": "Set possible mobs in this dungeon .", "title": "", "metadata": ""}
{"_id": "31cf6b18b273b26a5f1f5a4f4c986ff4", "text": "Set the price of summong a hero with Mileage Points .", "title": "", "metadata": ""}
{"_id": "f6481f20ac19c0dbc7373bc53884e808", "text": "Used to approve a third-party to send funds on your behalf .", "title": "", "metadata": ""}
{"_id": "516f81b5053c8e0904e45d11059d3b16", "text": "100 winners of 1 , 500 tokens or . 0375 .", "title": "", "metadata": ""}
{"_id": "ae0c804f5b27cd92a6f1ddbdd45523f9", "text": "allows the owner to collect the accumulated losses .", "title": "", "metadata": ""}
{"_id": "4d913849c2ad8d3fea3864536af076f7", "text": "Checks whether or not it is valid to create a STORES action request .", "title": "", "metadata": ""}
{"_id": "3323aeaa49e363c354859018acca07a0", "text": "used to charge for a single time period , in case client doesnt have enough dosh to pay all fees .", "title": "", "metadata": ""}
{"_id": "8efb2c0c7cf708d5af92415c7a9789ea", "text": "Releases Marketing strategic supply .", "title": "", "metadata": ""}
{"_id": "609e282d38d247f38a33bc7d356f52f7", "text": "This will selfdestruct the contract on the condittion all have been processed .", "title": "", "metadata": ""}
{"_id": "332bc5f4df9b3f0834f0c1920a49d979", "text": "Constructs the Token contract and gives all of the supply to the address that deployed it .", "title": "", "metadata": ""}
{"_id": "027300bb276500259f382b51446206e9", "text": "Get amount of eggs of current user .", "title": "", "metadata": ""}
{"_id": "71d145f9e7406e6b7060f78aeca9fb57", "text": "Create hash data swap space .", "title": "", "metadata": ""}
{"_id": "6bb2b278aab722095f6ff6df5af23887", "text": "Returns the amount of outcome tokens held by owner .", "title": "", "metadata": ""}
{"_id": "340534b8d8e5cfcde2ceb3a46bd10850", "text": "In case we need to attach to existent funds .", "title": "", "metadata": ""}
{"_id": "6d99cf61c71dd25d9a64668c3fd73f3b", "text": "return the amount of token that user can purchase .", "title": "", "metadata": ""}
{"_id": "c0a9f4dd5c97882e128c0800007577ce", "text": "Minting extra ( team and community ) tokens .", "title": "", "metadata": ""}
{"_id": "c9161a2c533760fb581bfe5ae85f4ed8", "text": "Returns the timestamp for the given state id .", "title": "", "metadata": ""}
{"_id": "ccacc7ec46eedf78760d0b66162b868c", "text": "Razvijalec s klicom te funkcije nastavi naslov crowdsale-a .", "title": "", "metadata": ""}
{"_id": "618e5492114ce15107566b0e91a8b1ba", "text": "challenge the provided proposal ID , and put tokens at stake to do so .", "title": "", "metadata": ""}
{"_id": "e9502c740d7bd29ce6ebb5abbe368c88", "text": "returns the information of a particular asset event of an asset item .", "title": "", "metadata": ""}
{"_id": "a89cb158eacc1cb219437ef2f591d14e", "text": "_oracle_adress : The address of the oracle .", "title": "", "metadata": ""}
{"_id": "33d5987efd4668a9d3244bc84e74dda7", "text": "Whitelist participant address .", "title": "", "metadata": ""}
{"_id": "67462f299a9b0f39635d59e529dd07b1", "text": "Make sure we are not done yet .", "title": "", "metadata": ""}
{"_id": "bb55615765874c25efce0b08a939935b", "text": "Priviledged function to propose and deploy an oracle with one transaction .", "title": "", "metadata": ""}
{"_id": "ee2488be2797d4a14b4d7e03aac615ee", "text": "Initialize new contract .", "title": "", "metadata": ""}
{"_id": "c014c109d3c862f80d62a6fcee12b7f1", "text": "Returns the address currently assigned ownership of a given Artwork .", "title": "", "metadata": ""}
{"_id": "14b08fbd0fa927caf46a528427dae559", "text": "Modifier for functions that can only be executed by adminstrator .", "title": "", "metadata": ""}
{"_id": "3eb3215fd4121a3bc8400e055b112670", "text": "returns the status of the player note if the player share cycle ! shareCycle , then the playCount is stale - so return zero without setting it .", "title": "", "metadata": ""}
{"_id": "d6bd4b35d509d94b59ad68f2179e99c1", "text": "Note a prepurchase that has already happened .", "title": "", "metadata": ""}
{"_id": "2efcaae50f6e240872b823566ca1d109", "text": "Returns the information on a certain Avatar .", "title": "", "metadata": ""}
{"_id": "73a8a7f14ebbcc11430ad1fc5561988d", "text": "token name .", "title": "", "metadata": ""}
{"_id": "d710c26d8eb6e9b4fac67ffe604ed53b", "text": "the function to get the balance .", "title": "", "metadata": ""}
{"_id": "b49e09ebbaec47cdb5960de8d281f7a3", "text": "token balance .", "title": "", "metadata": ""}
{"_id": "0e1584045b0399665c34d5965628d761", "text": "Check whether an address is a contract address .", "title": "", "metadata": ""}
{"_id": "1c41610ff72c15a10b77a576757b2bf6", "text": "overridden price lifetime logic .", "title": "", "metadata": ""}
{"_id": "05696aa92cdf4b0b08bae6ff8933e149", "text": "Exploration is complete and at most 10 Objects will return during one exploration .", "title": "", "metadata": ""}
{"_id": "866742d0bea92298f298baaf3a6722f8", "text": "Updates in-contract price upon external bot request .", "title": "", "metadata": ""}
{"_id": "2021da43b27fe677168b8fd75dab6a8e", "text": "Allows users to check their current deposit bonus amount .", "title": "", "metadata": ""}
{"_id": "443679d85301e2046aa411803f4446d4", "text": "Allows withdrawal of funds to beneficiary address .", "title": "", "metadata": ""}
{"_id": "6d92a983b11440300ed48f42a46062e7", "text": "Mark contract as having left an external function .", "title": "", "metadata": ""}
{"_id": "97b883fed558e317130ed52e85e3ca23", "text": "Reverts if not in betting time range .", "title": "", "metadata": ""}
{"_id": "c52fe0739ee211f375ef4730ea6a63d6", "text": "Returns the amount of tokens approved by the owner that can be transferred .", "title": "", "metadata": ""}
{"_id": "61da70387cb367ad6a8fe53c93686db5", "text": "total number of votes eligible for choosing new K1 address .", "title": "", "metadata": ""}
{"_id": "f3db2e5b28392d7843add4bf405ce0a2", "text": "In case the ownership needs to be transferred .", "title": "", "metadata": ""}
{"_id": "1ce5c2515cf9bc4d45718841d175de91", "text": "freeze-time start .", "title": "", "metadata": ""}
{"_id": "b872a1286ed52a5b45577f1d815d5711", "text": "only owner address can set treasury address .", "title": "", "metadata": ""}
{"_id": "aea09324df12cd71a763caae20aed73a", "text": "wait for game to start .", "title": "", "metadata": ""}
{"_id": "6c63067e29a3d4492e5f1e87d0e01939", "text": "function buy Tokens .", "title": "", "metadata": ""}
{"_id": "042d4450394abbe5f19c5740f45e2c6a", "text": "Reject a contribution if KYC failed .", "title": "", "metadata": ""}
{"_id": "ea36e46c66417306987c0487c16e8337", "text": "Withdraw tap amount .", "title": "", "metadata": ""}
{"_id": "97efd02541f64a3978cb6909a8b4f28a", "text": "Allows control of the contract to a newAllowed .", "title": "", "metadata": ""}
{"_id": "cd9169f0dfa779e047734f1644ff323a", "text": "Function to change withdrawal address .", "title": "", "metadata": ""}
{"_id": "0d364c0317abc2f265ecb51882e87447", "text": "Gets the reward rate inclusive of bonus .", "title": "", "metadata": ""}
{"_id": "66c2c7f32c257ae0e55c5a4d7fd3b1c5", "text": "Register to participate in the competition .", "title": "", "metadata": ""}
{"_id": "470fa5e2be3dd4f6530dfc596e01f941", "text": "Reset currentDay to 0 and other housekeeping functions .", "title": "", "metadata": ""}
{"_id": "2ced2685144985538c77cfdd5cd3ac01", "text": "Transfers FXX tokens to another address .", "title": "", "metadata": ""}
{"_id": "8e5223cb516b4cb766333b6dc81fc72e", "text": "Makes execution of the tokens transfer method from super class .", "title": "", "metadata": ""}
{"_id": "0840439eb23e5bcd390d6ceedd7b6632", "text": "Token holders withdraw Ether in exchange of their tokens .", "title": "", "metadata": ""}
{"_id": "7244a5b10a812cea65d12b74cb8d8c18", "text": "Gets a position .", "title": "", "metadata": ""}
{"_id": "d5505dccb604a0ac4eb8e63ab1bef98a", "text": "get timestamp when ad ends .", "title": "", "metadata": ""}
{"_id": "f49de85125d10af35ea44a977cbd83d6", "text": "Restricts transfers only for : 1 ) oracle and only ATx tokens ; 2 ) from itself to holder .", "title": "", "metadata": ""}
{"_id": "f46942b3cd7a125efad91f90a5039065", "text": "num_whitelisted : The length of the sale's whitelist .", "title": "", "metadata": ""}
{"_id": "1355b4f060d8e752349fb41959eff6d0", "text": "authorise a lot of accounts in one go .", "title": "", "metadata": ""}
{"_id": "0bfa898144599da2bb0653960cdfe7d3", "text": "onlyOwnerOrOperator set minBet .", "title": "", "metadata": ""}
{"_id": "6261c8b8d844dd2ef60b37c5116150ab", "text": "Low level method for removing funds from an account .", "title": "", "metadata": ""}
{"_id": "530b485fcab8f477e70201c7acdc53b9", "text": "Permits locking funds for longer than the default duration ; useful if you will not have access to your recovery key for a while .", "title": "", "metadata": ""}
{"_id": "d66d51a00cb3effa49a765b98b1d60d8", "text": "common logic for enroll funds .", "title": "", "metadata": ""}
{"_id": "a43283a3f3bc7e82a05612d20656f4f6", "text": "If a Property is private which has expired , make it public .", "title": "", "metadata": ""}
{"_id": "f2c07440ac13fb3c056e052c4227149d", "text": "every level , you need 1000 more exp to go up a level .", "title": "", "metadata": ""}
{"_id": "ddee2694ae8442b4dfe44a7bf3bee11a", "text": "Before transfers are enabled for everyone , only this and the crowdsale contract is allowed to distribute HEAL .", "title": "", "metadata": ""}
{"_id": "3e5bd68a72675a0fa06c13f44b863abe", "text": "esta funcion es llamada por el cliente para pedir un prestamo .", "title": "", "metadata": ""}
{"_id": "8e73009b18b054c62410c48407b1b581", "text": "Sets the content hash associated with an ENS node .", "title": "", "metadata": ""}
{"_id": "be5833d869f60ca8709f9dd9751f5e94", "text": "withdrawalComplete is called after the waiting period .", "title": "", "metadata": ""}
{"_id": "44d0bab014eca615b08269b25a3bf5e0", "text": "Child contract can override to condition enable upgrade path .", "title": "", "metadata": ""}
{"_id": "15ab120d394b8dedff2e4425b4303b92", "text": "Transfer the balance from owner's account to another account , with a check that the crowdsale is finalised .", "title": "", "metadata": ""}
{"_id": "6ef7a1d6130bf2dbc38d1f111a85658c", "text": "Allows developer to add ETH to the buy execution bounty .", "title": "", "metadata": ""}
{"_id": "8160bf8b98a9aa8703c6a2558002ca6e", "text": "credit an affiliate for a purchase .", "title": "", "metadata": ""}
{"_id": "1fd55ed1ff503e7fdbe8419a52e40439", "text": "called by the owner to set the minimum ether amount to buy some token .", "title": "", "metadata": ""}
{"_id": "82441928400604dbdea7368b3d07ee48", "text": "owner can change the seller .", "title": "", "metadata": ""}
{"_id": "584d071768b2c9d9cfa7ade5fbf8e423", "text": "Updates counter party transfer after closing .", "title": "", "metadata": ""}
{"_id": "14535d6f0a99ef289b1d5af728abb9b4", "text": "Allows the pendingGDPOracle_ address to finalize the transfer .", "title": "", "metadata": ""}
{"_id": "2a83afba18ff78d9938b28bc022a23d4", "text": "Return the equivalent ether value of the given quantity of fiat at the current price .", "title": "", "metadata": ""}
{"_id": "63988295520a83102de55b68fef36fd2", "text": "Claim your share of the balance .", "title": "", "metadata": ""}
{"_id": "3ce745b5b1b1134c8edb37090255c8ec", "text": "Set min / max prices .", "title": "", "metadata": ""}
{"_id": "b49281a430d2e950f4fb89d7bce4fe7d", "text": "Allows buyer to be refunded their ETH if the minimum presale raise amount hasn't been met .", "title": "", "metadata": ""}
{"_id": "8da4fa06cd12c38f0fa718be9527b90b", "text": "early_whitelist and main whitelist to buy token with their quota + extra quota .", "title": "", "metadata": ""}
{"_id": "de58f32b3a2c8e2a0a804061d09dbdb0", "text": "Frees value sub-tokens ( e . g .", "title": "", "metadata": ""}
{"_id": "97439ef48b1afb8113e05b32ad92ce3d", "text": "allow authorized wallets to withdraw funds from the bonkroll to this address .", "title": "", "metadata": ""}
{"_id": "3d9d63ba229129275bde4182673c3b99", "text": "override to add 30 bonus NTS tokens on each purchase .", "title": "", "metadata": ""}
{"_id": "e4ac6eef25d525252a1ec90b94c50282", "text": "Notifies the controller about a transfer , for this EarlyTokenSale all transfers are allowed by default and no extra notifications are needed .", "title": "", "metadata": ""}
{"_id": "f3318818dfe2bc477bf10cc257f17f94", "text": "Returns the number of players owned by a specific address .", "title": "", "metadata": ""}
{"_id": "cad40249d70ae0aee1bdf264c1810645", "text": "Transfer tokens to a specified address .", "title": "", "metadata": ""}
{"_id": "44bb4e2b255e2b9a1967a023dd9a7eef", "text": "Transfer out any accidentally sent ERC20 tokens .", "title": "", "metadata": ""}
{"_id": "dbda180d3993b15e50b261bfd49997f9", "text": "Withdraws all pending withdrawals .", "title": "", "metadata": ""}
{"_id": "b37ae0c7320d78e0d1537100bda06bb5", "text": "Emergency transfer tokens to contract owner .", "title": "", "metadata": ""}
{"_id": "b08d5e3e5f42dda05a2b8684ed5abd30", "text": "This modifier will be used to disable ERC20 transfer functionalities during the minting process .", "title": "", "metadata": ""}
{"_id": "1625f158e43daa8dcca34015a007215a", "text": "Modifier requiring function caller to be the Etheraffle multisig wallet address .", "title": "", "metadata": ""}
{"_id": "d01a84971a1a9fcdf89c0fbab1331a25", "text": "Returns the number of active loans that a lender possess ; active loans are the loans with lent status .", "title": "", "metadata": ""}
{"_id": "deba680b11330264229b2840ebe3c983", "text": "This function adds the bid to a map of bids for the oracle to bid on .", "title": "", "metadata": ""}
{"_id": "2e22acebdfdf1ff3e5d6e9f15a404ce3", "text": "only non-founders .", "title": "", "metadata": ""}
{"_id": "4ba15e2c1b0028a5f811605df44bb04c", "text": "release first available freezing tokens .", "title": "", "metadata": ""}
{"_id": "3ef4b86f459227ff2910a3736f47c79e", "text": "Assigns a new address to act as the authority .", "title": "", "metadata": ""}
{"_id": "d461415c871edda46d70dae8cbf56353", "text": "returns , for one proposal identified by a rootHash , the timestamp UNIX epoch time associated with it .", "title": "", "metadata": ""}
{"_id": "b839916364852966d135e69773616c35", "text": "Transfer the ETH in contract balance .", "title": "", "metadata": ""}
{"_id": "55730ccab06749e68fc134222c9c87bb", "text": "Overriden method to update tokens allocated to a beneficiary .", "title": "", "metadata": ""}
{"_id": "d4980b10402e148fe9c9c44546edf3a7", "text": "Pause PreIco .", "title": "", "metadata": ""}
{"_id": "51167069a5ce75a69eb292ceaeb42807", "text": "Throws if player does not own the hero , or it is still in cooldown .", "title": "", "metadata": ""}
{"_id": "fc37cb908f005ff7892a48fbf3a59da7", "text": "Payout to taker .", "title": "", "metadata": ""}
{"_id": "78389bfb2a54cde82748ece143ae14a1", "text": "ERC20 standard functions .", "title": "", "metadata": ""}
{"_id": "e7aa779ba7cfea5db2aa39089f990157", "text": "admin ( immediately ) updates a whitelist / blacklist .", "title": "", "metadata": ""}
{"_id": "0b87e8201a2ff4735602065d39f399fb", "text": "Returns the colors of the pixels in an area , left to right and then top to bottom .", "title": "", "metadata": ""}
{"_id": "8681ea8a20754ef9b45efab12a5e49f8", "text": "change the owner of the contract from this contract to another .", "title": "", "metadata": ""}
{"_id": "f52841c43e78fb929d640836f03c77d1", "text": "Total supply of tokens .", "title": "", "metadata": ""}
{"_id": "7ce4e1fc83b52d90a6bac7110904f000", "text": "Throws if called by any account other than the bot .", "title": "", "metadata": ""}
{"_id": "4c26d6bb0f8b015d52a9ec3b13d9ec93", "text": "Allocates tokens for investors that contributed from website .", "title": "", "metadata": ""}
{"_id": "7870affbbaa11ddd60e480d6ba53fc19", "text": "Add a new tier at the end of the list .", "title": "", "metadata": ""}
{"_id": "2adc4d2fda3c9e7ca473749769c4ff6f", "text": "transfer an amount of TMX Global Tokens to an Ethereum address .", "title": "", "metadata": ""}
{"_id": "66a5bcc9b26f2b333fd563d2e1d06b67", "text": "If crowdsale is unsuccessful , investors can claim refunds here .", "title": "", "metadata": ""}
{"_id": "7148317158a1ce4ceee1803d327daf6a", "text": "Exchanges the HLT tokens to HLPMT tokens .", "title": "", "metadata": ""}
{"_id": "2fb52fb1c9f2427b6911639c0b3098c9", "text": "Start sale in current round .", "title": "", "metadata": ""}
{"_id": "e83df5a1476651c89c9b054b82c6e21d", "text": "ptr : An updated pointer , pointing to the end of the STORES action request in memory .", "title": "", "metadata": ""}
{"_id": "d7fb5323a20a1260ebecfb5bbcd9b185", "text": "use this function to allow C4F System to adjust providerLock .", "title": "", "metadata": ""}
{"_id": "853ffbd925e26f8581c631295a86a57d", "text": "Descend the list ( larger keys to smaller keys ) to find a valid insert position .", "title": "", "metadata": ""}
{"_id": "e433bc0215a1050890de6a2414190a72", "text": "function to find out what is the current ICO phase minimum .", "title": "", "metadata": ""}
{"_id": "1cbd061cbf72a2cca5fd340540ba49ce", "text": "must return true if crowdsale completed successfully .", "title": "", "metadata": ""}
{"_id": "91af6c7ed1353f76c1d1bf5018133c22", "text": "Buys equal number of tokens of all outcomes , exchanging collateral tokens and sets of outcome tokens 1 : 1 .", "title": "", "metadata": ""}
{"_id": "24c6bcae0a2cbddc6cb5cc19169e7134", "text": "Gets absolute issued hardcap volume which means it will be greater than softcap value .", "title": "", "metadata": ""}
{"_id": "a52967729fff6d93376bfc11a6b29117", "text": "Owner can recover anything .", "title": "", "metadata": ""}
{"_id": "7abf7d90f8ea55710c8144a6e32b39bd", "text": "Calculate how many tokens can be distributed for the given contribution .", "title": "", "metadata": ""}
{"_id": "df96d5c5779cb53a92f97f1aa6b2f71a", "text": "Determines if poll is over .", "title": "", "metadata": ""}
{"_id": "53b39d94d51293c667615e53e345b124", "text": "Anybody can reveal the next curve if he knows it .", "title": "", "metadata": ""}
{"_id": "503987b9e4f7bc039d228d907f2ad9f3", "text": "Transfers the jackpot to the winner triggering the event .", "title": "", "metadata": ""}
{"_id": "41c7c62b6d7fc39c24f33444a187d92f", "text": "transfer the token owner ship to the crowdsale contract token . transferOwnership ( currentIco ) ; .", "title": "", "metadata": ""}
{"_id": "48c73743d9f3766f4a8f11c3659896ff", "text": "given a token supply , connector balance , weight and a sell amount ( in the main token ) , calculates the return for a given conversion ( in the connector token ) .", "title": "", "metadata": ""}
{"_id": "ef9f48b94e1727e5df6c76735724acaa", "text": "Transfer a Cutie owned by another address , for which the calling address has been granted transfer approval by the owner .", "title": "", "metadata": ""}
{"_id": "9fc6052d8b70efec1eb4faa86a519c58", "text": "public view Functions .", "title": "", "metadata": ""}
{"_id": "fff1bbf45b5ac567c9c891ae272611f2", "text": "Accepts new ownership on behalf of the SirinCrowdsale contract .", "title": "", "metadata": ""}
{"_id": "8e8ac41e8975684f896bce61fd2fd21d", "text": "Returns the current bonus percentage .", "title": "", "metadata": ""}
{"_id": "36d64b1e0db61efb9b22c2d4c5639ea9", "text": "Finalize the auction - sets the final XBET token price and changes the auction stage after no bids are allowed anymore .", "title": "", "metadata": ""}
{"_id": "4dfdc5a06ad5388a9729ee53f4063265", "text": "maybe event for mint .", "title": "", "metadata": ""}
{"_id": "6cedbd0e19ed37e12d50ac61e75039de", "text": "global total shares .", "title": "", "metadata": ""}
{"_id": "84b9ba6e8a71e2e2ab08838f2114756f", "text": "Investors can get refund if ETH_MIN_LIMIT is not reached .", "title": "", "metadata": ""}
{"_id": "82d9108245436d50c4c96b4009929083", "text": "This function can be used by the owner of a video game item to modify the price of its video game item .", "title": "", "metadata": ""}
{"_id": "f19e8f217e97e66566dfb563d28c7c14", "text": "buy tokens request .", "title": "", "metadata": ""}
{"_id": "afa3a39162ed1e15cc0e3878b6342a24", "text": "change perferfer for uncomplited task if he is fail .", "title": "", "metadata": ""}
{"_id": "53f29c3ba4a70629dea80f9ace7874e9", "text": "Parking off .", "title": "", "metadata": ""}
{"_id": "fe7b5ad6baed5a493b133197094b7aa5", "text": "Creates the initial day tokens available ( this is the minting process ) .", "title": "", "metadata": ""}
{"_id": "051343108476c5cc1bb98e6f0323c619", "text": "Claim ATM .", "title": "", "metadata": ""}
{"_id": "0f38a9f1a46d77628e402e489119d009", "text": "permanently disables generation of new tokens .", "title": "", "metadata": ""}
{"_id": "cec9411336b0823ef5cb60ae1bfc2207", "text": "Recursively distribute deposit fee between parents .", "title": "", "metadata": ""}
{"_id": "aa80d5cabdc4a2abf9b0d6dfccbb2e0d", "text": "Internal method called to current vesting period range .", "title": "", "metadata": ""}
{"_id": "3dffcf81524ef2a9bd91fe65a7247318", "text": "ensure a device is validated for activation .", "title": "", "metadata": ""}
{"_id": "d5141de73489ccba7fd993c6ebc7b33d", "text": "set address of chainLedger contract .", "title": "", "metadata": ""}
{"_id": "6fab22590cc9a64dfc3e6fd6ff559ee3", "text": "Setup the initial distribution addresses .", "title": "", "metadata": ""}
{"_id": "d96e5b40ecde36031e816693adc532f6", "text": "withdraw less or equals than available tokens .", "title": "", "metadata": ""}
{"_id": "fdf323ea4d56fcd7ba8f27eb3273bc62", "text": "Set Record Contract .", "title": "", "metadata": ""}
{"_id": "37a5d898c848914cd89f47687e8e951a", "text": "If you plan to use this contract for your projects be a man of honor and do not change or delete this function .", "title": "", "metadata": ""}
{"_id": "3c55360b4927d414af25d8b79c862d5d", "text": "gets address of owner of player .", "title": "", "metadata": ""}
{"_id": "146340fe78f61015f8e8c7c84ed56ce5", "text": "First checks the GT owner , then change the owner and fire an event about the ticket changing owner .", "title": "", "metadata": ""}
{"_id": "aff45953a8ef4a2115c61e6b22b068e0", "text": "Initialize the wallet with the operator and backupAccount address .", "title": "", "metadata": ""}
{"_id": "906677081e3959a4a9554e14e83ef2cd", "text": "Function for the frontend to dynamically retrieve the price of sell orders .", "title": "", "metadata": ""}
{"_id": "d87e044ddb59380cd3fbd6bcd4fc1377", "text": "Check balance of holding specific tokens .", "title": "", "metadata": ""}
{"_id": "659b1df3385e165a716195d0b9cd93a3", "text": "Tells the address of the proxy owner .", "title": "", "metadata": ""}
{"_id": "8eed8e8d70949ba0332e91fc37cd6b43", "text": "Returns the latest EOS key registered .", "title": "", "metadata": ""}
{"_id": "e2b0cac4a186538951efc626b041bfba", "text": "Overflow checked math .", "title": "", "metadata": ""}
{"_id": "9277257ebc3e7d7cc2615841b8e964fb", "text": "withdrawal or refund for investor and beneficiary .", "title": "", "metadata": ""}
{"_id": "3130a1a3b6a351a25b9f3da00138e467", "text": "Send approved tokens to seven addresses .", "title": "", "metadata": ""}
{"_id": "4c3095f632877519e771230ccd1a86d0", "text": "Pay the two beneficiaries .", "title": "", "metadata": ""}
{"_id": "161c9c2ae2dbe63b65931ad7cf8ac9cb", "text": "Retreive the total dividend token supply .", "title": "", "metadata": ""}
{"_id": "99347cb19af76a5457da336b67c70674", "text": "Lock the vault .", "title": "", "metadata": ""}
{"_id": "3408b7c0d32e7938ff4a1dddd556766b", "text": "Which game ID has a player last computed their score up to using the updateScore function ? .", "title": "", "metadata": ""}
{"_id": "f825838cb94f8b20fa1159b1a91bf05e", "text": "Expose all Settings .", "title": "", "metadata": ""}
{"_id": "24e370e037d1a05d10db3789e186532e", "text": "generates a number from 0 to 2 n based on the last n blocks .", "title": "", "metadata": ""}
{"_id": "c7d2868ab3c56965e015123f3c870413", "text": "Requiring num m_multiRequires owners , to approve the action .", "title": "", "metadata": ""}
{"_id": "9eb2cd5569720e082b34fa314ddc277e", "text": "remove an account's access to this role .", "title": "", "metadata": ""}
{"_id": "9e58f69db893cc90fad489e1f2343d49", "text": "Get CheckResult message .", "title": "", "metadata": ""}
{"_id": "cf8752c930463e70183a12ef32171149", "text": "Is it possible to spend the received amount .", "title": "", "metadata": ""}
{"_id": "f82b83e2b00a5eecb3e70a64f5338085", "text": "Checks if two coordinates are adjacent : xxx xox xxx .", "title": "", "metadata": ""}
{"_id": "d4984807f64e80e7b3c8a7c66d1e840d", "text": "Transfer tokens from the from account to the to account .", "title": "", "metadata": ""}
{"_id": "3c68bf46a03f8b6959534632c0cf97fc", "text": "Get bonus amount for token purchase .", "title": "", "metadata": ""}
{"_id": "2256a5820457cc44f2c8aef1738faf96", "text": "Finalize the auction - sets the final GoToken price and changes the auction stage after no bids are allowed .", "title": "", "metadata": ""}
{"_id": "2d00713181305c4ae37c63f495a2d57f", "text": "User can buy arbitrary amount of tokens .", "title": "", "metadata": ""}
{"_id": "88b2ba80a9f31a3d4ff4feaadbebbc4e", "text": "Allows transfer of the tokens after locking conditions checking .", "title": "", "metadata": ""}
{"_id": "f5e01211804fab988c372e4c62f7fb4e", "text": "return new deliverable struct if reward greater than 0 .", "title": "", "metadata": ""}
{"_id": "58a2c77b7be5b381f6169a1321a67c38", "text": "return a pseudo random number with an upper bound .", "title": "", "metadata": ""}
{"_id": "920a233e9ed86f7b922c1e60f9c3c3f0", "text": "Return existential state of a list .", "title": "", "metadata": ""}
{"_id": "488be358c0a7c5dd5592d056676cefe9", "text": "Function that converts wei into tokens .", "title": "", "metadata": ""}
{"_id": "bb9e8c0e6a91c1011c22b0f703fecea8", "text": "Generate a random using the block number and loop count as the seed of randomness .", "title": "", "metadata": ""}
{"_id": "a14ee3e3bf39483b114f88410a8780f2", "text": "allows contract owner to mint all team tokens per TEAM_TOKENS and have 50m immediately available , 60m 2 years vested , and 60m over 4 years vesting .", "title": "", "metadata": ""}
{"_id": "d735918ac7e65051229359b7edabb8f0", "text": "Dividents can be payed any time - even after PreSale and before Sale1 ethrate - actual ETH / USD rate .", "title": "", "metadata": ""}
{"_id": "21435010ea912fc0aa24cc556fedc07e", "text": "Replaces owner .", "title": "", "metadata": ""}
{"_id": "4a621e31d929eaa4fb50cb54dbe16074", "text": "function to be used in wallet to check whether a transfer transaction will be made by user or by zero fee transaction facility provided by owner .", "title": "", "metadata": ""}
{"_id": "afb467f6f38e72b593690916c39d268a", "text": "bytes4 ( keccak256 ( balanceOfFlower ( address ) ) ) bytes4 ( keccak256 ( approveFlower ( address , uint256 ) ) ) bytes4 ( keccak256 ( transferFlower ( address , uint256 ) ) ) bytes4 ( keccak256 ( transferFromFlower ( address , address , uint256 ) ) ) ; .", "title": "", "metadata": ""}
{"_id": "257fbd4384f6b9e626682662a1c7af02", "text": "reveal is responsable for unsealing the bid .", "title": "", "metadata": ""}
{"_id": "7b516c98ee5cb0a450c61515888102e5", "text": "number of preICO funders count .", "title": "", "metadata": ""}
{"_id": "658baca55143cabdf174003782ff2830", "text": "Creates a Project Admin with the msg . sender .", "title": "", "metadata": ""}
{"_id": "624394345f885e352f857c2bbd3a271c", "text": "actual function to burn tokens .", "title": "", "metadata": ""}
{"_id": "3f1a1d0d622092bb2139127bc77b908c", "text": "batch fishing from 1 to 10 times .", "title": "", "metadata": ""}
{"_id": "8b581794330c52b86f31703a5706a35b", "text": "Election part .", "title": "", "metadata": ""}
{"_id": "72664fb35892422097be3ad97b444a2f", "text": "True if all buyins have finalised .", "title": "", "metadata": ""}
{"_id": "9fec79812e388c9e7a9a851139ecbf36", "text": "unfreeze Balance of target .", "title": "", "metadata": ""}
{"_id": "2739fa813c62a9d78f2642d01aace87b", "text": "Used by lock and unlock functions .", "title": "", "metadata": ""}
{"_id": "d46faab811e283ce70754344ec03d23d", "text": "Get game info by index .", "title": "", "metadata": ""}
{"_id": "e505a84a8988a6e83e91642366b3a5e7", "text": "set signing address after deployment .", "title": "", "metadata": ""}
{"_id": "16da09cac1011178e846f4a7631cb9ba", "text": "set the acceptable price slippage for trades .", "title": "", "metadata": ""}
{"_id": "9107b94e0f11d59851d60c44edd20b39", "text": "Function for withdrawal tokens from Vault account to address .", "title": "", "metadata": ""}
{"_id": "f9be4adff18d664076db3c56b17af744", "text": "Allow users to buy and sell tokens for newPrice eth .", "title": "", "metadata": ""}
{"_id": "48c722eba8eac3fcba8aa2c40217ced9", "text": "Add new endorsement to product winery operation .", "title": "", "metadata": ""}
{"_id": "4b0f0ed8192e69d7aabab071cec69c0f", "text": "Enable minting .", "title": "", "metadata": ""}
{"_id": "e6f31812ab679c25cf6bac33909dd732", "text": "Returns the number of elements in the list .", "title": "", "metadata": ""}
{"_id": "03c5c2f23465e85859170f7e47c93b87", "text": "Private Functions .", "title": "", "metadata": ""}
{"_id": "2688b489681096b216bf20664a05a248", "text": "only once , the voter stakes can be set by the owner , to allow us to deploy a circular dependency .", "title": "", "metadata": ""}
{"_id": "ea815a7f546a7d5a1cfed1248f0abcd6", "text": "This function will return the details of a planet .", "title": "", "metadata": ""}
{"_id": "d70d341d8947d892e2f69f0e9adacc93", "text": "Buy tokens from contract by sending ether .", "title": "", "metadata": ""}
{"_id": "a2238fdaad8ba6caa8f1669bac497680", "text": "It is necessary for a correct change of status in the event of completion of the campaign .", "title": "", "metadata": ""}
{"_id": "5eab1c6f8f93bccbe7e6be78ab6d5e66", "text": "Add new endorsement to a vineyard .", "title": "", "metadata": ""}
{"_id": "b3bb62c8e89ae69dc1f37153ab11dad0", "text": "Transfer token to a contract address with additional data if the recipient is a contact .", "title": "", "metadata": ""}
{"_id": "b24ce9a6786be74feaae0fa5586fe432", "text": "Returns all the relevant information about a specific item .", "title": "", "metadata": ""}
{"_id": "8d4d8b3bdd0c4d06f29e509e7035d311", "text": "we need to get back our funds if we don't need this oracle anymore .", "title": "", "metadata": ""}
{"_id": "0f2d484cb30574ec839437bf834146f9", "text": "set one type of main account to another address .", "title": "", "metadata": ""}
{"_id": "4799a00c7fff293d2600bc2500a7620b", "text": "release dividends rights for a specified address .", "title": "", "metadata": ""}
{"_id": "eff41e3db7cc303b9f9993e4d466c6da", "text": "to verify if action is not performed out of the campaing range .", "title": "", "metadata": ""}
{"_id": "ebdd81d5e55c498aa029a99452874c63", "text": "Transfering the ownership is a two-step process , as we prepare for the transfer by setting newOwner and requiring newOwner to accept the transfer .", "title": "", "metadata": ""}
{"_id": "0908c7287cf7f7107421fd83671212ac", "text": "transfer owner to new address .", "title": "", "metadata": ""}
{"_id": "ee9fc06de7e9ab84ccac811c8949d44a", "text": "Stability fee .", "title": "", "metadata": ""}
{"_id": "2ca1cabb9ade37bf5edfc2f3cc07b42f", "text": "Return the sell price of 1 individual token .", "title": "", "metadata": ""}
{"_id": "6eb2f5beca22ddf2d4c4426488fc2591", "text": "decrementInventory removes inventory levels for a product .", "title": "", "metadata": ""}
{"_id": "0d505f44a37115feefd555e5fb42092d", "text": "Adds or subtracts from the spin of the spinner .", "title": "", "metadata": ""}
{"_id": "216f835c78c013e5536c5fe8a718b666", "text": "Return a list of promiseIds that match the given criteria .", "title": "", "metadata": ""}
{"_id": "d0e1aed3bfc4382f609cfa4ae49a54de", "text": "hook on standard ERC20 transferFrom to pay dividends .", "title": "", "metadata": ""}
{"_id": "f2ebfff42fbce3b3b24a16abb84e4b2d", "text": "For creating Game .", "title": "", "metadata": ""}
{"_id": "49a79e1c4547227b2808b46c92949da8", "text": "checkWinner checks if at the time of the call a winner exists for the currently earliest unwon round of the given group .", "title": "", "metadata": ""}
{"_id": "f43f1c40e88249ab780a4112fa068ddd", "text": "Transfer tokens from owner address .", "title": "", "metadata": ""}
{"_id": "6adec9e82092a473434b4de3657521de", "text": "The DAICO fund contract calls this function to burn the user's token to avoid over refund .", "title": "", "metadata": ""}
{"_id": "f4175f52cd534bf4d80aa6ab419472f9", "text": "Users can withdraw locked balances after the lock time has expired , for an account .", "title": "", "metadata": ""}
{"_id": "f5b23c19e055980b8ef91bbd5b2db275", "text": "proxyPayment ( ) returns false , meaning ether is not accepted at the token address , only the address of FiinuCrowdSale .", "title": "", "metadata": ""}
{"_id": "f9c44d2f1bdebf6f0235aa109a6bacf0", "text": "Set composite reputation value by string key .", "title": "", "metadata": ""}
{"_id": "b4f5e6e6067b55c5ff617bacefc8ef8b", "text": "Modifier for owner's functions of the contract .", "title": "", "metadata": ""}
{"_id": "0dff7445b49ef32084c0c7d7c515e145", "text": "Token Minting .", "title": "", "metadata": ""}
{"_id": "8651f826e5f9083ed1f318ee19d32dac", "text": "Owner function for adjusting prices ( might need to add ETH if raising sell price ) .", "title": "", "metadata": ""}
{"_id": "37e6b0536f06d9b99852ebb9b6b4dc95", "text": "Update number of Lemon Tokens remaining for drop , just in case it is needed .", "title": "", "metadata": ""}
{"_id": "379c7e7cd8eda14b7032cb1522f5b2f9", "text": "Standard ERC223 function that handles incoming token transfers .", "title": "", "metadata": ""}
{"_id": "d80ce2c5f1978f894b0d566ed168028f", "text": "Allows owner to modify an existing token's name .", "title": "", "metadata": ""}
{"_id": "78cb379c1c620c6899e916b4b6bb93ed", "text": "Gift star .", "title": "", "metadata": ""}
{"_id": "9e78aef5f5b8c03b2f6b527abf1239c7", "text": "returns bool isProfit , uint profitOrLoss the position's profit / loss denominated in positionToken .", "title": "", "metadata": ""}
{"_id": "7295330823552f670cf5743a72ceb411", "text": "Notifies the controller about a transfer , for this sale all transfers are allowed by default and no extra notifications are needed .", "title": "", "metadata": ""}
{"_id": "71e14543442c1e69cac0686cb1e0ded0", "text": "Returns the sale status .", "title": "", "metadata": ""}
{"_id": "ccaad8271dd147a5ddb32190956510a6", "text": "Sell all of metadollars for all ether of this smartcontract .", "title": "", "metadata": ""}
{"_id": "31edd269f49787031495cf6632fee842", "text": "increasePayout ( ) : allows the issuer to increase a given fulfillment amount in the active stage .", "title": "", "metadata": ""}
{"_id": "1be0c1d95ff4fe2a97d941d87d30367b", "text": "Internal Function deposit all allowance .", "title": "", "metadata": ""}
{"_id": "75e18fea1a5377d805459bbfb2af6ec2", "text": "Permission check - admin or greater .", "title": "", "metadata": ""}
{"_id": "66430c585b9802ce07c3fd22f25477df", "text": "Contract admin related functions .", "title": "", "metadata": ""}
{"_id": "b42129a1168f6db48f7073e363e019aa", "text": "Get the price for a BOU token at current time ( how many tokens for 1 ETH ) .", "title": "", "metadata": ""}
{"_id": "be9fa7187ac54fd6fd72f6ad955e5475", "text": "Fills a buy order .", "title": "", "metadata": ""}
{"_id": "984d63a7af3bea14ae44df0d8c71c1ed", "text": "Returns actual ( base + bonus ) rate ( BUL / ETH ) of current stage .", "title": "", "metadata": ""}
{"_id": "ca1d2fa9e88e5ae209c7e43ca76940c9", "text": "The following functions are in case a different contract wants to pull this data , which requires a function returning it ( even if the variables are public ) since solidity contracts can't directly pull storage of another contract .", "title": "", "metadata": ""}
{"_id": "29e094bc90dfb4463ea7352417fb6e8c", "text": "function to show the equity percentage of an owner - major or minor can only be called from the owner wallet .", "title": "", "metadata": ""}
{"_id": "05142ba18276da2a3ea20b2e7cbca02e", "text": "Lock the contract owner forever .", "title": "", "metadata": ""}
{"_id": "28eb37193f0135594d1159fe5741850f", "text": "get current price in token millis / ETH .", "title": "", "metadata": ""}
{"_id": "415926bf1e06cb702d00a71c002b3ac0", "text": "Transfers coins from one address to another .", "title": "", "metadata": ""}
{"_id": "f5c7f9284db6dae2e426cb748fc8fd39", "text": "Security functions .", "title": "", "metadata": ""}
{"_id": "ef154e35020e7a0d1f24efe134f530fc", "text": "allows owners of tokens to decrease the price of them or if there is no owner the coo can do it .", "title": "", "metadata": ""}
{"_id": "c5123f672f5e7b3d589c2dba15c58326", "text": "Creates a new promo Region with the given name , with given _price and assignes it to an address .", "title": "", "metadata": ""}
{"_id": "91f4387ed516a959c48aa6887d99e270", "text": "finalizeFunding ( ) ends the Campaign by calling removing himself as a controller .", "title": "", "metadata": ""}
{"_id": "91951a1d83148ed65c85fb9a5d71e2ca", "text": "Modifier to check current stage is same as expected stage .", "title": "", "metadata": ""}
{"_id": "e9c03906cc98774fa285e08541593cc8", "text": "Approve the indicated address to spend the specified amount of tokens on the sender's behalf .", "title": "", "metadata": ""}
{"_id": "853c3fa17d0c4e5bf1bf3e6ef7ce6855", "text": "do a trade .", "title": "", "metadata": ""}
{"_id": "6098b105e7ead4296181cf702824371d", "text": "Creates a checkpoint that can be used to query historical balances / totalSuppy .", "title": "", "metadata": ""}
{"_id": "2d26a4b9895a3b17f9eb4ef39bc99304", "text": "to release tokens of the team according to vesting schedule .", "title": "", "metadata": ""}
{"_id": "2d20309db48b945828c3a9bb6510aadd", "text": "Checks modifier and allows transfer if tokens are not locked .", "title": "", "metadata": ""}
{"_id": "32f975846037df9c981446a93131aa3d", "text": "the value of the dealer's hand and a flag indicating if the dealer has got a blackjack .", "title": "", "metadata": ""}
{"_id": "4529c619b87d19ca76f0cf85a5421ac6", "text": "Returns amount of created canvases .", "title": "", "metadata": ""}
{"_id": "50ac68ff6b37e58aff6e7b61420c9dde", "text": "Creates the main BlockchainCuties smart contract instance .", "title": "", "metadata": ""}
{"_id": "0e085a39292abbebc1c889b78dd4c0ae", "text": "Buy the cup from previous owner .", "title": "", "metadata": ""}
{"_id": "76e2549d9f86ca82427e12bc331c5dc1", "text": "user , claim back a hodl safe .", "title": "", "metadata": ""}
{"_id": "836429eb2471df19f557220bf2805930", "text": "Send tokens from the recipient to the recipient .", "title": "", "metadata": ""}
{"_id": "a781fa48edf094d029195e1c119eadce", "text": "start public sale .", "title": "", "metadata": ""}
{"_id": "25e1ca769f848828fdce846dc74784d4", "text": "Checks whether funding goal was reached .", "title": "", "metadata": ""}
{"_id": "76b01703057a1ae2de6fdbddec7a95b3", "text": "Divides two numbers and returns the remainder ( unsigned integer modulo ) , reverts when dividing by zero .", "title": "", "metadata": ""}
{"_id": "fa9005d2c5033d0dad49fc16d430ae1c", "text": "Create a new channel from msg . sender .", "title": "", "metadata": ""}
{"_id": "2b73de8be9d78010954d720759e3e19e", "text": "Collect funds from this contract .", "title": "", "metadata": ""}
{"_id": "16cb7d9e480ac670d09634b71127fa72", "text": "Abort the current sale .", "title": "", "metadata": ""}
{"_id": "6e51f6be2f28046c6bb2e230f9a0b818", "text": "Feature and proxy checks done internally due to unknown symbol when the function is called .", "title": "", "metadata": ""}
{"_id": "ef987d75b25cf82e0eda769e9603ed7c", "text": "a modifier can be used on methods to inherit the require .", "title": "", "metadata": ""}
{"_id": "3c5e0d2954c063921da07f312c7f159f", "text": "set exchange rate in wei , 1 Token n ETH in wei .", "title": "", "metadata": ""}
{"_id": "59f00174990d6d6fe91649ff869d6d8e", "text": "Allow access only for oracle .", "title": "", "metadata": ""}
{"_id": "12ef2f9c109c87873e4d38bddb3b91cf", "text": "Indicate that cat is no longer for sale ( by cat owner only ) .", "title": "", "metadata": ""}
{"_id": "8d0cb2ba94932cdb7f56ca183ee889b0", "text": "This function allows users to purchase PokeMon .", "title": "", "metadata": ""}
{"_id": "ba6b0288504fee5bb5f4bd10d5973168", "text": "Returns the previous node ( with a larger key ) in the list for a given node .", "title": "", "metadata": ""}
{"_id": "9d3b658497f268b68028dcc6e3b5ec38", "text": "check wether target address is a contract or not .", "title": "", "metadata": ""}
{"_id": "a94088b6e340fd92ca7739ad60eca598", "text": "Get info about specific group member .", "title": "", "metadata": ""}
{"_id": "05da96970ef143da6cd86cd101ec669b", "text": "Check if asset has all attributes passed by parameter .", "title": "", "metadata": ""}
{"_id": "b9888f9a00837f9836373766c0d60c8f", "text": "function to redeem ETH from MTC .", "title": "", "metadata": ""}
{"_id": "297be35f500ebc65e94fee681d8c44d0", "text": "Assigns ownership of a specific Meme to an address .", "title": "", "metadata": ""}
{"_id": "3e3ed04c8563fe20fb7cb2e4151c4127", "text": "Gets totalSupply .", "title": "", "metadata": ""}
{"_id": "6b110c44f2b80b1ebfa6b85207e95b6b", "text": "Bulk mint function to save gas .", "title": "", "metadata": ""}
{"_id": "67232cbdd105a35f72a3b93b619ae5fa", "text": "Reviewed : - Integer overflow OK , checked .", "title": "", "metadata": ""}
{"_id": "a3c8b04cb51165d6a42272f0829a6607", "text": "Claim bonus from locked amount .", "title": "", "metadata": ""}
{"_id": "0b7909b4e9dd8649f3f8f27516f1540b", "text": "Modifier to make a function callable only by service provider i . e .", "title": "", "metadata": ""}
{"_id": "3bb6b57715aa7e7afee6560fc4002670", "text": "Allows owner to transfer ERC20 tokens to vault .", "title": "", "metadata": ""}
{"_id": "39f96635b80412a55003575e4a841a84", "text": "Allow the owner to make another address the owner .", "title": "", "metadata": ""}
{"_id": "e167c43bcdd45eb8a6d296c9eda40067", "text": "Owner can withdraw Parsecs only after contract is finished .", "title": "", "metadata": ""}
{"_id": "89c67210d9249b4729a36dff06029596", "text": "Complete pending Approval , can only be called by msg . sender .", "title": "", "metadata": ""}
{"_id": "8c51d4b3f2f4da48ab670b7d6d214f90", "text": "add a callback function for a state .", "title": "", "metadata": ""}
{"_id": "0371911df42ebd1808b8a0d9fb5b4e8a", "text": "Return whether or not two orders can be matched with each other by basic parameters ( does not check order signatures / calldata or perform static calls ) .", "title": "", "metadata": ""}
{"_id": "2dfbc8c68f9189db09ea86fd2d661908", "text": "Used by frontend to get data for a kitty .", "title": "", "metadata": ""}
{"_id": "4e3470b7d4bdf014a75181de0cb7414a", "text": "Overrides Owned . sol .", "title": "", "metadata": ""}
{"_id": "209e35863538da5df473ed21d01bbf43", "text": "Set the product creation fee .", "title": "", "metadata": ""}
{"_id": "de55b6518bfbe4983a35230ac6350fe8", "text": "Run this on every change of user balance .", "title": "", "metadata": ""}
{"_id": "5f814fcc7bc9b6f1d3ba6454e116ab7d", "text": "close invest for escrow .", "title": "", "metadata": ""}
{"_id": "a4542198079b7b0ebb72e49af34c0ab6", "text": "Release vested tokens to the beneficiary .", "title": "", "metadata": ""}
{"_id": "40a9e8a167ea51cb33bfd667e8597d73", "text": "Should promote registration of new affiliates .", "title": "", "metadata": ""}
{"_id": "fb11c49b56411a2efc24e58200500ff0", "text": "Here we calculate the amount of tokens that corresponds to each price point .", "title": "", "metadata": ""}
{"_id": "5856ddc3cc7106e74b9658e01944ceb4", "text": "Returns whether item is contained in dict .", "title": "", "metadata": ""}
{"_id": "b7f83fac1cabf670dc9b9466e4f7179f", "text": "function through which owner can transfer the tokens to any address use this which to properly display the tokens that have been sold via ether or other payments .", "title": "", "metadata": ""}
{"_id": "92c93557a19430ccb269fee65ac0c3aa", "text": "The total number of payments that have ever been authorized .", "title": "", "metadata": ""}
{"_id": "89e7f7daf585accd8e372208e8e5570e", "text": "Required Functions .", "title": "", "metadata": ""}
{"_id": "68dea745eed51544ae52905cabc81b3e", "text": "Function for the frontend to show ether waiting to be sent to Jackpot in contract .", "title": "", "metadata": ""}
{"_id": "1b54cd19356c11c626f537a96bb8b2a5", "text": "this allows us to use a different set of tiers can only be changed in between mining cycles by admin .", "title": "", "metadata": ""}
{"_id": "850f25060155815820ea874b9b4b3da4", "text": "true - ICO Ends .", "title": "", "metadata": ""}
{"_id": "14010f2b26a263308fa101634a800d5d", "text": "set a new Admin representative .", "title": "", "metadata": ""}
{"_id": "8ce82b8397b0ab34d0cc7291f10c9387", "text": "Amends / changes marks existing entry as amended and takes passed data to create a new Entry to which the amended pointer ( rowNumber ) will point .", "title": "", "metadata": ""}
{"_id": "7c0cfa2d6812027974171271716f6237", "text": "Allows owner to withdraw ether from the contract .", "title": "", "metadata": ""}
{"_id": "80d6831e9fa254dfd51468c83478183f", "text": "Stores the price of a token ( 1 * 10 decimals units ) , in wei .", "title": "", "metadata": ""}
{"_id": "f88277d2c80a286c158980283f0012a7", "text": "Allows presale investors to claim tokens .", "title": "", "metadata": ""}
{"_id": "da32c57d45b5d2c879275c705c88900c", "text": "Split the unsold WBC of the ICO .", "title": "", "metadata": ""}
{"_id": "c964dcad709d56474d31fe7d7a57eb37", "text": "onlyOwner is available and the amount of coins can be deposited in centerBanker .", "title": "", "metadata": ""}
{"_id": "e4a6792b17534b003c2aba3c44254114", "text": "owner can transfer tokens .", "title": "", "metadata": ""}
{"_id": "4395958c10e2cdded6b09f7f20347e13", "text": "Returns all the relevant information about a specific lambo .", "title": "", "metadata": ""}
{"_id": "25035bb76878a807b29ba9e0e6f414a7", "text": "Allows to increase totalSupply and get OptionTokens to their balance .", "title": "", "metadata": ""}
{"_id": "2b1a00224e337ef8a7e55ef9dac48e7b", "text": "Only asset implementation contract assigned to sender is allowed to call .", "title": "", "metadata": ""}
{"_id": "fdc750877bb6212b8db7429eb8d77c3d", "text": "Retrieves sig requirement for spending tx .", "title": "", "metadata": ""}
{"_id": "f19614780670813f7a2c7e9b52754db7", "text": "Function for arbitrator to set an optional per-question fee .", "title": "", "metadata": ""}
{"_id": "507b0217b10c514a436e8e1e474d4e94", "text": "allows users to reclaim any staked tokens .", "title": "", "metadata": ""}
{"_id": "ce4a576f5f3708dba05691e57a174034", "text": "Killing of contract only possible with password ( - - large number , give to nextofkin / solicitor ) .", "title": "", "metadata": ""}
{"_id": "81a8e9f04affeaa5b38134c57651f7f1", "text": "Distribute bonus Stakes to Investor according to bonusShare .", "title": "", "metadata": ""}
{"_id": "3864981c4982f493c816d3cc7993cdb5", "text": "Trade an EtherDelta order .", "title": "", "metadata": ""}
{"_id": "2fe79c966d578177280c25469bc78ad7", "text": "confirm if The Token Sale has finished .", "title": "", "metadata": ""}
{"_id": "b3bd60123590e3e90bbb7ac1f8a56162", "text": "Register organisation as DSP .", "title": "", "metadata": ""}
{"_id": "899fa6e1cf02482596ad809449265a2e", "text": "Token owner can approve for spender to transferFrom ( . . . ) .", "title": "", "metadata": ""}
{"_id": "65c18890efee520a6dd33cac2566e4c0", "text": "Withdrawing balance .", "title": "", "metadata": ""}
{"_id": "f89cd7a9439574a10f08de3a51dc2dea", "text": "Called by name sellers to make a new seller child contract .", "title": "", "metadata": ""}
{"_id": "49a73f1970b8c54265ae1138578b007a", "text": "function for safe multiply .", "title": "", "metadata": ""}
{"_id": "569cd99980832c15314747952bc01543", "text": "Deleting owners .", "title": "", "metadata": ""}
{"_id": "a94ee5b68ab01e8f3f3784cf0a4349ff", "text": "Used to calculate the bet hash given a wheel bet and a player secret .", "title": "", "metadata": ""}
{"_id": "00cc3d291c04f6bcbb1b41e5d4c3ac70", "text": "Get details for a block .", "title": "", "metadata": ""}
{"_id": "3b151864ce407831790ff7035748041e", "text": "bid is responsable for calling the newBid function .", "title": "", "metadata": ""}
{"_id": "2841f66cd06aa7257f90945924a3a206", "text": "partner withdraw , .", "title": "", "metadata": ""}
{"_id": "62ac509fb2470e7e9c51f7311968270b", "text": "Get the address of the owner of given token .", "title": "", "metadata": ""}
{"_id": "c539115ec41adac66fe26b3479152626", "text": "return the amount of token that msg . sender .", "title": "", "metadata": ""}
{"_id": "3b64d19d1ba6086116e650eb2f4a490c", "text": "user registration .", "title": "", "metadata": ""}
{"_id": "fceedcec120e3cd5ea767b3ea960604c", "text": "Allows owner to withdraw funds from the account .", "title": "", "metadata": ""}
{"_id": "c77f4d98b552f64ad798d4a90efb0ae4", "text": "Finalizes the preCrowdsale and sends funds .", "title": "", "metadata": ""}
{"_id": "dac805115fb3132bd85eb27a60477132", "text": "Boundaries for constructing the msg we'll validate the signature of .", "title": "", "metadata": ""}
{"_id": "3cd3be4b65983a4c5535a7734718d7f2", "text": "ERC20 return allowance for given owner spender pair .", "title": "", "metadata": ""}
{"_id": "14c387c032d15beedefaac269bd5d6bf", "text": "Check to see if Section is available for purchase .", "title": "", "metadata": ""}
{"_id": "5aaf30429f67d01fffcfd43fe3e85d21", "text": "For test only .", "title": "", "metadata": ""}
{"_id": "1ce87d94d35d54b87a5c534c9ae408bd", "text": "buy add .", "title": "", "metadata": ""}
{"_id": "e8a51a3440ab28fdf2c806fbd7852b6a", "text": "Specifies whether or not upgrading this contract is allowed .", "title": "", "metadata": ""}
{"_id": "1b6885f63f49b61c2c355703d06ed45c", "text": "activate token transfers .", "title": "", "metadata": ""}
{"_id": "8118b45a921cd90639d54ebae929a6d5", "text": "get acct info .", "title": "", "metadata": ""}
{"_id": "481864d9519837117022f3dbc390c217", "text": "Gets a fee history of a canvas .", "title": "", "metadata": ""}
{"_id": "0521f4bf693f6afc69cb167c15f527e5", "text": "Upgrade-related methods .", "title": "", "metadata": ""}
{"_id": "ec588bff6ed452059e65b27d6836ed6e", "text": "Returns latest entry of record intended to pull .", "title": "", "metadata": ""}
{"_id": "a70025eec202eb8ba7a596ab84df2c10", "text": "byte constant internal proofType_NONE 0x00 ; .", "title": "", "metadata": ""}
{"_id": "48c02bfa9bb7cd970cbf67a8ba2d0aae", "text": "Buy skin in market .", "title": "", "metadata": ""}
{"_id": "673c55cc7b955df9ef65b2d0afb4d9c5", "text": "don't allow zero address .", "title": "", "metadata": ""}
{"_id": "b88ce24ae63ec76688a743e2cb2c6ddd", "text": "Accepts a pending payment and forwards the payment amount to the sales wallet .", "title": "", "metadata": ""}
{"_id": "268e8ff55371065d8775eaac3a5ffbcf", "text": "Get remaining tokens for all types of option tokens .", "title": "", "metadata": ""}
{"_id": "9e1864424eb9e0ba8b1c95a54df47487", "text": "need to be called to set token Price , to be called during ICO to change price every 10 days .", "title": "", "metadata": ""}
{"_id": "841db423afbfe2d33742f750618614a6", "text": "/ / function betOnColumn / / bet type : column / / input : 0 for first column / / input : 1 for second column / / input : 2 for third column .", "title": "", "metadata": ""}
{"_id": "538931eb84d5fb6511a4a293ab704088", "text": "callback function called when we get USD price from oraclize query .", "title": "", "metadata": ""}
{"_id": "8a5cd471a286696b21ebad8bc513bd4f", "text": "Allows this contract to transfer control of token contract to a newOwner .", "title": "", "metadata": ""}
{"_id": "2b930c03fcce443f1d914d7b74369e17", "text": "Owner functions .", "title": "", "metadata": ""}
{"_id": "434897f9286cfacb29e3fef3b1e7bd2d", "text": "Buy some greedy heart .", "title": "", "metadata": ""}
{"_id": "e26cb5e772ae7f79929dd03ea454f44e", "text": "Function for getting the block result if it is ODD or EVEN .", "title": "", "metadata": ""}
{"_id": "00c3e17666555ba5aa24974f971d433e", "text": "Get max number of wallet owners .", "title": "", "metadata": ""}
{"_id": "e76c7948554152aef48e72e49bb3be34", "text": "mint required amount of token .", "title": "", "metadata": ""}
{"_id": "d89488e7b324bf7abe0d3cbdeafae962", "text": "user can join competition with this function .", "title": "", "metadata": ""}
{"_id": "c5646fdf873bbca645a07dedd9d0472b", "text": "Allows for a migration request to be created , all migrations requests are timelocked by 7 days .", "title": "", "metadata": ""}
{"_id": "914fd349a5abc763fad19e841ace1491", "text": "Count the Ico investors total ( not including third-party investors ) .", "title": "", "metadata": ""}
{"_id": "0ff12efd598e6daa9631b76e5138c3a4", "text": "Destroy tokens ( reduce total supply ) .", "title": "", "metadata": ""}
{"_id": "ab7337ba4274139f100154c86a408eee", "text": "stable params .", "title": "", "metadata": ""}
{"_id": "1191228713fd33b16588836f16f8ca38", "text": "convinient function for read token's erc20Address .", "title": "", "metadata": ""}
{"_id": "92aeef7197a404871113f8e654845c9c", "text": "function to compute the next reward of a player .", "title": "", "metadata": ""}
{"_id": "20e85b8e416ee9649aaf7643bd2b4b45", "text": "Allows owner to modify an existing token's symbol .", "title": "", "metadata": ""}
{"_id": "ea80252ca92ed2b722415059ae9f7b13", "text": "Claim unclaimed derivative tokens .", "title": "", "metadata": ""}
{"_id": "640fbcf43ad50ad2442eb39d643d43b3", "text": "Returns the block number for when the channel was opened .", "title": "", "metadata": ""}
{"_id": "17fc020fdc64b8fb414a74169904c9fb", "text": "user is selling us SVC , we are selling eth to the user .", "title": "", "metadata": ""}
{"_id": "4e99397cc4df4f32aeb11f754a102f85", "text": "ERC223 Token improvement to send tokens to smart-contracts .", "title": "", "metadata": ""}
{"_id": "eb16f405712e9b159cba91f74d804e95", "text": "the address of the owner of the card .", "title": "", "metadata": ""}
{"_id": "b2856f0312ac97267e464ba6a0c1ee6f", "text": "Total eth that still available for collection in weis .", "title": "", "metadata": ""}
{"_id": "df53936078696d8958230862995bd1ad", "text": "Method called by owner of contract to withdraw funds after timeout has reached .", "title": "", "metadata": ""}
{"_id": "1ed4569ce75f2b7449ac7feac6f76fbf", "text": "Public function that allows the owner to remove multiple entries from the whitelist ( i . e .", "title": "", "metadata": ""}
{"_id": "d32414436c5510546f8ba7f3f870ea7b", "text": "Allows the current owner to change the required minimum contribution .", "title": "", "metadata": ""}
{"_id": "93822b9e1a43ae183584a3092b624982", "text": "blacklist management .", "title": "", "metadata": ""}
{"_id": "f2d935de889256d081646b4564b4805a", "text": "Removes a signature from this contract .", "title": "", "metadata": ""}
{"_id": "b17f38e0ef8d3244540c280b237877f3", "text": "Authorizes an address .", "title": "", "metadata": ""}
{"_id": "4d5c2b0489b55d662c40931d028d12fd", "text": "index not out of bounds .", "title": "", "metadata": ""}
{"_id": "0a6d90bdeab13e2ef3d2688e59e6b85b", "text": "This function is used to check if an contribution is allowed or not .", "title": "", "metadata": ""}
{"_id": "eddfb9d634c717256cc305a8f0f6cbed", "text": "remove an address' access to this role .", "title": "", "metadata": ""}
{"_id": "8a5b104884aa5e0a0d8215a25f389c59", "text": "Get RegistrantId from registrant address .", "title": "", "metadata": ""}
{"_id": "44382a751b4c6aa534ab5e13fb3b6055", "text": "Escrows the ERC721 Token , assigning ownership to this contract .", "title": "", "metadata": ""}
{"_id": "59a590b2d547303b7ebf6e58f242242e", "text": "Determine the current sale tier .", "title": "", "metadata": ""}
{"_id": "9abfb96305a8e1dac232a65dd505e0a7", "text": "Pledges fees to the token holders , later to be claimed by burning .", "title": "", "metadata": ""}
{"_id": "de8d6638bd79776d3438e94f0c5affc3", "text": "Anyone can finalize campaigns in case the devs stop the contract .", "title": "", "metadata": ""}
{"_id": "f32c40768751d46821b6cef28068d00c", "text": "Change Start and Endtime for Testing Purpose .", "title": "", "metadata": ""}
{"_id": "089065eafd37840ad08b61831ec21594", "text": "Success finish of CrowdSale .", "title": "", "metadata": ""}
{"_id": "aa1ec115db899b48183691f7d8134def", "text": "Create new Forwarder .", "title": "", "metadata": ""}
{"_id": "7ec2a5b66dde24617c36a0110d32d623", "text": "Set approval for a third-party to manage all tokens of the caller .", "title": "", "metadata": ""}
{"_id": "16c3d8605ccdce5d4445770a6a24aeec", "text": "Calculate new price based on a new token left .", "title": "", "metadata": ""}
{"_id": "871b02b2a1da9e29e879a32a7ba1a313", "text": "for small src quantities dest qty might be 0 , then returned rate is zero .", "title": "", "metadata": ""}
{"_id": "65772a49c3ee45c7e2cb1c1d98f4d314", "text": "Counts the number of factories .", "title": "", "metadata": ""}
{"_id": "8f1f43a0728c47ae25fd241085e2629a", "text": "Check if next budget period plan has been made .", "title": "", "metadata": ""}
{"_id": "ee6e7ebeb89daf068ef1d373b0f7cf68", "text": "Get back unpaid dividends and redemption .", "title": "", "metadata": ""}
{"_id": "01f5433d725d749d0154c5ad25e11d68", "text": "Transfer value tokens to to address from the from account , using the previously set allowance .", "title": "", "metadata": ""}
{"_id": "45dcad22a9fb1e5077568dd67458b3bf", "text": "Get Royalty amount for given account .", "title": "", "metadata": ""}
{"_id": "386d15e4559be366e856dfb14dcc4d67", "text": "Start Round C .", "title": "", "metadata": ""}
{"_id": "f441cb4004e458981edb06430be113fb", "text": "Function that the owner can withdraw funds : .", "title": "", "metadata": ""}
{"_id": "71127b1e06fa6a2690b10705496d6a74", "text": "Enable token burning by users .", "title": "", "metadata": ""}
{"_id": "780b5dd7b718b57f2aa03899b8433963", "text": "To re-initialize the token symbol details if symbol validity expires .", "title": "", "metadata": ""}
{"_id": "fb5fbdf8b0f2f95f31db61089e7ad0d2", "text": "This function is used for taxation purposes and will be used after specific conditions .", "title": "", "metadata": ""}
{"_id": "c754b82a4c99802ccec34e7abc327ba5", "text": "withdraw Ether from contract .", "title": "", "metadata": ""}
{"_id": "559d80988a39333a7bfbcb2e8e4cfc00", "text": "Calculate amount of tokens for a given wei amount .", "title": "", "metadata": ""}
{"_id": "b1645ad618509be120d0b3a877d46bcb", "text": "Mint token in batches .", "title": "", "metadata": ""}
{"_id": "b4d17ca178938ea399abd94ff2aa5cae", "text": "Criar usu\u00e1rio ou adicionar wallet a usuario existente .", "title": "", "metadata": ""}
{"_id": "4faa323627379cf2a52d63f7e5cfadbe", "text": "Generate random winner .", "title": "", "metadata": ""}
{"_id": "d2845686b50676a3d4ed4fa05ca0074e", "text": "Finalize crowdfunding .", "title": "", "metadata": ""}
{"_id": "f247ff2ed851a6e0d8a6e8b99048a0c6", "text": "Burn function used to burn the securityToken .", "title": "", "metadata": ""}
{"_id": "c972c8a8af09363851c3e45e6c31498c", "text": "Owner can add a new administrator .", "title": "", "metadata": ""}
{"_id": "c91a50e224430684c172759f0678742b", "text": "The basic entry point to participate the TGE event process .", "title": "", "metadata": ""}
{"_id": "780272db15fd8f8c95a0cbf11aa462c6", "text": "Called by manager to pause the contract .", "title": "", "metadata": ""}
{"_id": "2790def878357f043af0431430ea795c", "text": "amount calculation , depends of current period .", "title": "", "metadata": ""}
{"_id": "ae6626733434a43e65700e8311e5f73a", "text": "Amount of token burn .", "title": "", "metadata": ""}
{"_id": "e4f326f41d56287f539cb339fe3a9f0d", "text": "Makes checkmark and deposits tokens on profiterole account to pay them later as bonuses for Treasury shares holders .", "title": "", "metadata": ""}
{"_id": "c1cfcad1ea663a48a3091745eba7668c", "text": "Suicides the entire smart contract .", "title": "", "metadata": ""}
{"_id": "6314f7752d97cb29c8569f434f3ea504", "text": "ERC-20 allowance .", "title": "", "metadata": ""}
{"_id": "29d8fa5a2f7592201111b609de7d4c0a", "text": "Revoke admin privileges from an address .", "title": "", "metadata": ""}
{"_id": "84a0f7f59a515c39be596c3d2c94b5a0", "text": "owner set etherwow contract address .", "title": "", "metadata": ""}
{"_id": "9cd94aa6e4396a3d1dd54342cb3f75f1", "text": "Returns an array containing the ids of the bets placed by a specific address .", "title": "", "metadata": ""}
{"_id": "f370afc1510f7114dd9b7f2b3b7e0e2c", "text": "Sends GFC from the owner to the smart-contract .", "title": "", "metadata": ""}
{"_id": "cbb08b72916dec369d919e45ed57c489", "text": "Modifier that requires certain stage before executing the main function body .", "title": "", "metadata": ""}
{"_id": "179675dd58d595057eb0ae4a7e986082", "text": "Calculates value of reward at given time .", "title": "", "metadata": ""}
{"_id": "e2f35aa8bb00f8360bd1b9f827c55981", "text": "addresses may not be longer than 256 .", "title": "", "metadata": ""}
{"_id": "e6bcba1bb02eb8d7114c62ebecac930d", "text": "set register cost .", "title": "", "metadata": ""}
{"_id": "2f34f75c669138730dc28176e5bf7a2c", "text": "called to mint tokens to founders .", "title": "", "metadata": ""}
{"_id": "4ec4eb679c4fc992e9a2ef2a65356403", "text": "Main sale configuration .", "title": "", "metadata": ""}
{"_id": "df25f045771576b78b83751d9ef4e9d0", "text": "Set whitelist contract address and minimum threshold .", "title": "", "metadata": ""}
{"_id": "350bc470a52416beaae0a39ee6751b55", "text": "unique _companyId .", "title": "", "metadata": ""}
{"_id": "248be04620ddc1b3cae8922aeca2baa8", "text": "Removes single address from whitelist .", "title": "", "metadata": ""}
{"_id": "7c80174ebab283b10423f6b38ef9b6d2", "text": "Flag for platform change processing .", "title": "", "metadata": ""}
{"_id": "7cad6ff95455ef93b6b60dc001c67251", "text": "only allowedSpenders Creates a new Payment .", "title": "", "metadata": ""}
{"_id": "d92b2f475e25de95c42239e60153a282", "text": "return value attributes 2 contains the following values in this order : canSubmit , isReserved .", "title": "", "metadata": ""}
{"_id": "468cb1442b9baf3382af22e411b17e84", "text": "Partners can sign the contract .", "title": "", "metadata": ""}
{"_id": "3f51ad6653df1c96ee14ab58ff47e3c9", "text": "for test only .", "title": "", "metadata": ""}
{"_id": "5c1521f2a17aee8662b64f8effb298be", "text": "ensures that it's earlier than the given time .", "title": "", "metadata": ""}
{"_id": "e22f202bfd9e49b9ea3f073e1ecf39db", "text": "Standard ERC20 transfer plus state check and token swap logic .", "title": "", "metadata": ""}
{"_id": "c1d5a278f77e4f98b38c6b85a286266d", "text": "Calculates owner's cut of a sale .", "title": "", "metadata": ""}
{"_id": "cf0ba05d114b69f1d902e68308526718", "text": "Wallet methods : Internal .", "title": "", "metadata": ""}
{"_id": "7d1e84ea8bbe2e394ac41164113406ba", "text": "Kill this smart contract .", "title": "", "metadata": ""}
{"_id": "6e94c4927ee92f04d60c08c2e1061775", "text": "Mints a base token to an address with a given composition price .", "title": "", "metadata": ""}
{"_id": "0fa820590138b7f94c08df2d7bb848b6", "text": "Check actual balance of all wallets .", "title": "", "metadata": ""}
{"_id": "593f5af7fede45f0a236c10a92bdf22b", "text": "Assigns a new address to act as the Verifier .", "title": "", "metadata": ""}
{"_id": "c4c4dcafc73ba7f5b3016f160fab3535", "text": "Returns the correct entity address resolved based on entityOfUser mapping .", "title": "", "metadata": ""}
{"_id": "b395cd93c875d88768e622b8e07dafad", "text": "Finalize presale .", "title": "", "metadata": ""}
{"_id": "9da4975ea6af3561034ca18347057d82", "text": "get number of first buyers .", "title": "", "metadata": ""}
{"_id": "7b05b18d781fc66537995d0665df9680", "text": "Modifier - The sender must be the contract administrator .", "title": "", "metadata": ""}
{"_id": "51b5d0b1e3be48e98b298a92c9f914ae", "text": "General Description : .", "title": "", "metadata": ""}
{"_id": "e4aba4fbb73e57f59f95797e4f5123f2", "text": "Returns a boolean indicating if the given address is in the list with the given role .", "title": "", "metadata": ""}
{"_id": "540c1544ae65eea24491826f50910817", "text": "Set the crowdsale address .", "title": "", "metadata": ""}
{"_id": "b61cf662293fead703d7a11c55a0dc7e", "text": "setter function for wallet .", "title": "", "metadata": ""}
{"_id": "28dac6102dcdbe6cf81f329a0e49e6e2", "text": "Increase the token reward .", "title": "", "metadata": ""}
{"_id": "eabf517c8a7559199cb8a2e5b799bec4", "text": "Set exchange rate .", "title": "", "metadata": ""}
{"_id": "220929aae4f09954fff27ab236a49efc", "text": "dev Check whether contain the element or not .", "title": "", "metadata": ""}
{"_id": "903e930140fe0022e95fd585e6765582", "text": "Accepts ether and creates new INDI tokens .", "title": "", "metadata": ""}
{"_id": "3a94808904b209285cc8fd6433a0a53a", "text": "When at risk , evacuate tokens .", "title": "", "metadata": ""}
{"_id": "41f7015b9ad08836fc030680e061a306", "text": "Burn away the specified amount of NewHope tokens .", "title": "", "metadata": ""}
{"_id": "b165ae09e226c99a12550f0cfca99da2", "text": "Save the random number for this blockhash and give the reward to the caller .", "title": "", "metadata": ""}
{"_id": "754150a8c23e0b2846ee2c6fdad41402", "text": "Modifier functions .", "title": "", "metadata": ""}
{"_id": "11b52fbf2c5885feb39f27f28ae32909", "text": "function to withdraw Latium tokens that are unlocked at this moment .", "title": "", "metadata": ""}
{"_id": "c40627412d176080429625957d906da8", "text": "Compute the hash of a segment .", "title": "", "metadata": ""}
{"_id": "7e0afe4e44b68c318c95e46ed270acbf", "text": "Function that can be used to burn unsold tokens after the ico has ended : .", "title": "", "metadata": ""}
{"_id": "1c8c536f186729e40a1898580e497cfb", "text": "Determines the number of tokens awarded to the winning party in a challenge .", "title": "", "metadata": ""}
{"_id": "9dfc2cd6b7b753f4e933c8ccdf0e9d8f", "text": "Specify the commission to be charged from every transfer .", "title": "", "metadata": ""}
{"_id": "360be8026f707999843d90d3fa8181d8", "text": "Returns the ASCII numeric or lower case character representation of a number .", "title": "", "metadata": ""}
{"_id": "3b3fdea9b02cb0acdbcf4eedc9a5d0ae", "text": "Refunds a participant in the fundraiser .", "title": "", "metadata": ""}
{"_id": "52260297596ec77bec6a8ab9d860345f", "text": "Internal function that ensures _amount is multiple of the granularity .", "title": "", "metadata": ""}
{"_id": "e3072e06390cf341bd95ee9e950c42d4", "text": "Upgrade tokens to the new token contract .", "title": "", "metadata": ""}
{"_id": "4803c3dc7b03ef422f91d64b32709bcf", "text": "Check if an address is a contract .", "title": "", "metadata": ""}
{"_id": "ae4d3fb1ebdd3d89ead1a5413aaabadd", "text": "Updates the checker for the store .", "title": "", "metadata": ""}
{"_id": "adefb714c4b08cd878ef50d638ad9cca", "text": "Checks if Contract was stopped or deadline is reached .", "title": "", "metadata": ""}
{"_id": "6f273ceb02bdf1408a5d8f82a21ad548", "text": "This is the function that actually inserts a record .", "title": "", "metadata": ""}
{"_id": "a8b6915bbc46657db326ab4fd99464ec", "text": "setting 1 USD equals X amount of tokens .", "title": "", "metadata": ""}
{"_id": "2017dbfe7e56a8f9f4dbcfdd272a6ee5", "text": "change bitsoAddress .", "title": "", "metadata": ""}
{"_id": "0c12c43c8b759f3bb557ee50bb942002", "text": "Add a team grant for tokens with a vesting schedule .", "title": "", "metadata": ""}
{"_id": "a8231ada29bb06d6dd99f0126ccab442", "text": "Get recently played players .", "title": "", "metadata": ""}
{"_id": "1226216e8bc7eab344b022cedba95b75", "text": "Schedule contract activation for given block range .", "title": "", "metadata": ""}
{"_id": "591c3a200d6b890c519e3d1050fa65d3", "text": "Backwards compatible transfer function to satisfy ERC20 .", "title": "", "metadata": ""}
{"_id": "b5a60d7bf8bbaa0cda14e7a119c62978", "text": "For creating Emoji .", "title": "", "metadata": ""}
{"_id": "02ea8b7a099b3a9bf9cffa5c140b3d33", "text": "Cancels the job and returns the ether to the hirer .", "title": "", "metadata": ""}
{"_id": "724f52db5473582d339cb6e772819274", "text": "lottery functions .", "title": "", "metadata": ""}
{"_id": "9886eb787c9153453a398afb61cd365f", "text": "Request a refund from the target crowdsale .", "title": "", "metadata": ""}
{"_id": "781180a295de4813db6d324ccdbd62ff", "text": "For creating a dividend card .", "title": "", "metadata": ""}
{"_id": "13c8dfe443397b638cda15b3a82d165e", "text": "BEGIN ERC-20 from StandardToken .", "title": "", "metadata": ""}
{"_id": "f20fce0680873bd7762696939925e751", "text": "Throws if called by any account other than the whitelist manager .", "title": "", "metadata": ""}
{"_id": "d94481b76d90cfb8e889eca4a9ba2724", "text": "set whether or not the game is running .", "title": "", "metadata": ""}
{"_id": "34b64e57bcb9b43ff4df61ce9ed116eb", "text": "Internal checks and requires for valid notes .", "title": "", "metadata": ""}
{"_id": "157615a31b7bfe6f34704162d806b7bc", "text": "Overrides addToWhitelist from WhitelistedCrowdsale to use a dedicated address instead of Owner .", "title": "", "metadata": ""}
{"_id": "2cefc567514259e5f2652b933478ca13", "text": "Spec : Get the account balance of another account with address owner .", "title": "", "metadata": ""}
{"_id": "a7b4fe97bd08d5f8bc088f40b1013326", "text": "transfer ERC20 standard transferFrom wrapped with activated modifier .", "title": "", "metadata": ""}
{"_id": "8da4a7916824fdc1ef6f9fdd4494dab9", "text": "Allows user to buy coins if we are under the hardcap also adds a bonus if under the bonus amount .", "title": "", "metadata": ""}
{"_id": "7af669bde70c68ede77cca3bbf7b6011", "text": "return amount of ZMN token derive from price band and current exchange rate .", "title": "", "metadata": ""}
{"_id": "577565c9ae3cad17b51cf63dd14571bf", "text": "To create a stamp .", "title": "", "metadata": ""}
{"_id": "cb0a9cdc1f1b6c550b3728698e1a070d", "text": "User actions .", "title": "", "metadata": ""}
{"_id": "bc4e8d4d8e2ed038f7c3d328a07803b5", "text": "Get current bid timer duration .", "title": "", "metadata": ""}
{"_id": "751af5fd100d3dbb62b8c5f2830eb304", "text": "Removes single address from the management whitelist .", "title": "", "metadata": ""}
{"_id": "45a5da4ec7559d65ebcaa8e329507777", "text": "Updates the minContribution propety with the new _newMinControbution value .", "title": "", "metadata": ""}
{"_id": "aa357ce89f9977917a96bac7e76974d6", "text": "return token scope counters .", "title": "", "metadata": ""}
{"_id": "b926c8e07efe87b55a334fc23ee6598c", "text": "Calculates how many tokens have not been sold in the pre-sale .", "title": "", "metadata": ""}
{"_id": "54e523cfe3e0108800fde28a422f76d7", "text": "override inherited update function to prevent manual update from authority .", "title": "", "metadata": ""}
{"_id": "0761cd16208ae1cba96a4f716fea1308", "text": "returns contract's LIGO balance .", "title": "", "metadata": ""}
{"_id": "76eb15e17c7c3fc8b0cfe6b02dc3d176", "text": "Allows the owner to send tokens to investors who paid with other currencies .", "title": "", "metadata": ""}
{"_id": "6b35ec95c79f53cf40ddf56c569459fe", "text": "Recover signer address from a message by using their signature .", "title": "", "metadata": ""}
{"_id": "709133b75b056825280552bc7c95dabc", "text": "Transfers _value amount of tokens from address _from to address _to , and MUST fire the Transfer event .", "title": "", "metadata": ""}
{"_id": "10cab3ea489b6a388b8b188fd9b49390", "text": "Lookup the currently published data for genesis .", "title": "", "metadata": ""}
{"_id": "08dd7e9e8b089e48559edf066843ccc7", "text": "This modifier makes sure that not more tokens as specified can be allocated .", "title": "", "metadata": ""}
{"_id": "069da0d7d9c28a20894b341dae6a5263", "text": "Called from invest ( ) to confirm if the curret investment does not break our cap rule .", "title": "", "metadata": ""}
{"_id": "998f23ec413fc6f9eea4f1cca39515e0", "text": "Returns row regardless of whether or not it has been amended .", "title": "", "metadata": ""}
{"_id": "f3db16dbb59794b4c4e044e32c37479c", "text": "web view item .", "title": "", "metadata": ""}
{"_id": "5404ef360cbd83cc66a41a16e770d86e", "text": "Change the owner to a new address .", "title": "", "metadata": ""}
{"_id": "f891202084ec945963f189e2b44ca644", "text": "Gets the balances of the specified address .", "title": "", "metadata": ""}
{"_id": "948b591807f66f272f8662dfcdb9c12f", "text": "Get the first player's current points .", "title": "", "metadata": ""}
{"_id": "bb35faff1f2e0761dbbc798066cae7fa", "text": "return voting remaining time ( hours , minutes ) .", "title": "", "metadata": ""}
{"_id": "dfec03db9114b1bf75cc2b1f8068ba61", "text": "Setup array with vesting stages dates and percentages .", "title": "", "metadata": ""}
{"_id": "5c2047fe9a93eaa32c2252d7726ac1cd", "text": "Add buyer to whitelist so it will possbile for him to buy a token .", "title": "", "metadata": ""}
{"_id": "b9d9054dd37151f6f9d1037e07df6222", "text": "Get number of locks currently associated with an address .", "title": "", "metadata": ""}
{"_id": "b097eed3c4d3c430774525f71a89b44d", "text": "Sets the ICO phase 2 duration .", "title": "", "metadata": ""}
{"_id": "f53d2b2f8ac3b465a06ca1e5a6727ba0", "text": "Authenticating owner .", "title": "", "metadata": ""}
{"_id": "d33133b90cb9c7acf4e591b619fc7bdb", "text": "set the time of a signature .", "title": "", "metadata": ""}
{"_id": "e891ab905c9b2201735f1a75b2209c43", "text": "Executes a purchase .", "title": "", "metadata": ""}
{"_id": "ad1346c45160fadd8807cd84c12dc5ee", "text": "kills the animal of the given type at the given index .", "title": "", "metadata": ""}
{"_id": "eb1fd9489b5a7fd8ca24d2a8682b41eb", "text": "Function to whitelist buyers .", "title": "", "metadata": ""}
{"_id": "c50c03af6605de41271c24a4b5dc4abe", "text": "Checks if a poll exists .", "title": "", "metadata": ""}
{"_id": "c82305de86d45f03f93702c69294cdcc", "text": "Function that returns the maximum token round by sending amount .", "title": "", "metadata": ""}
{"_id": "ea69a70ee78839175bbd4b7c294a8110", "text": "Called when ICO is closed .", "title": "", "metadata": ""}
{"_id": "2fecab66170e30909a8646f52b2d239e", "text": "checkTransfer ensures that from can send only unlocked tokens .", "title": "", "metadata": ""}
{"_id": "0758734dd377cea88f997292d23ab8de", "text": "Account balance .", "title": "", "metadata": ""}
{"_id": "9bb14baff06b10c48732f0849988cba5", "text": "transfers remaining OPS token amount to pool .", "title": "", "metadata": ""}
{"_id": "e7cfbcc7c5fdd3b24b86bc408743e6ff", "text": "note : testing only .", "title": "", "metadata": ""}
{"_id": "766859937e539b4597552b6c89490791", "text": "Withdraw remaining tokens after reward claim period is over ( for owner ) .", "title": "", "metadata": ""}
{"_id": "2f37774080e65cc5ef0f29059a51ad86", "text": "auto release .", "title": "", "metadata": ""}
{"_id": "a02efc11d6bd466fb0ea9aaea5e33539", "text": "Total raised Ether amount .", "title": "", "metadata": ""}
{"_id": "f7597ab7ae2b274c5dd294fb0fed99d9", "text": "Bid function .", "title": "", "metadata": ""}
{"_id": "ada9043a43d0f63f280dfabf7f60e3e4", "text": "owner can transfer token even stop , .", "title": "", "metadata": ""}
{"_id": "c8cda5dc9f3d6aa5b93a9eb8de23074f", "text": "Release tokens as per vesting schedule , called by anyone .", "title": "", "metadata": ""}
{"_id": "c01ebdb59d0b9ce044a1e9e6797e6bfc", "text": "Finalize crowdsale if we reached hard cap or current time SALE_END_TIME .", "title": "", "metadata": ""}
{"_id": "3d6626330a5602641673f03a545f03cd", "text": "setting the admin function of this contract .", "title": "", "metadata": ""}
{"_id": "f455d48559dec38ac4cd4ae0c3379d2b", "text": "Initialize the contract , only owner can call and only once .", "title": "", "metadata": ""}
{"_id": "4f7bc51502b010fd6d7d70ab914ac877", "text": "Lock the vault for the three wallets .", "title": "", "metadata": ""}
{"_id": "61039e6ff265ad8c0c887e33e944ad15", "text": "For querying owner of token .", "title": "", "metadata": ""}
{"_id": "2f4d5adbb5b40d09abb3f87f55a90606", "text": "Get smart contract's owner .", "title": "", "metadata": ""}
{"_id": "88f5c6a536e92e4fd6c9e38feb3adb39", "text": "Enter Amount in whole ether .", "title": "", "metadata": ""}
{"_id": "1ac2dbd765b2f1042b74938a8b0d18b9", "text": "Empty out funds that accidentally end up on this contract .", "title": "", "metadata": ""}
{"_id": "ec31a9b4b19f19e58c9a45bba7c92d40", "text": "Function to get a manifest registration based on registrant address , manifest name and version .", "title": "", "metadata": ""}
{"_id": "e27fea9adab20f29df561dd0dcb4262b", "text": "Update the ETH-to - LPC exchange rate .", "title": "", "metadata": ""}
{"_id": "cfe768980f3a390053cfeabae4a88dad", "text": "token metadata .", "title": "", "metadata": ""}
{"_id": "b4670cf52de8c3501eb4e54596cff836", "text": "deleteAccountsInBulk deletes user account in bulk .", "title": "", "metadata": ""}
{"_id": "b4ec3cbc904229b2c9e589cb8f6f700c", "text": "Whitelist the address .", "title": "", "metadata": ""}
{"_id": "c8a696ccc24667a05192ffd5182379d5", "text": "Convenience method - Get the vested balance of the address .", "title": "", "metadata": ""}
{"_id": "f5422fc975ca6fc9ea61d0769a03a634", "text": "winner can withdraw payout after winner is announced .", "title": "", "metadata": ""}
{"_id": "e8eb99bb96a2f41ea2a8468177ad9731", "text": "Number of veset token for _holder on _time .", "title": "", "metadata": ""}
{"_id": "33159f94db0b1e1b924ee92abf3d0298", "text": "Transfer tokens based on allowance .", "title": "", "metadata": ""}
{"_id": "19fb93f3b5f318a169f25d92bc485e3d", "text": "approve an investor .", "title": "", "metadata": ""}
{"_id": "38435df7c74aa8925b3fbb6868085fc3", "text": "Validates that the playerId is in the correct rarity range .", "title": "", "metadata": ""}
{"_id": "96b758443e19f43d88e34099bc7b0f8d", "text": "returns the sum of _x and _y , asserts if the calculation overflows .", "title": "", "metadata": ""}
{"_id": "4d4654cfb12920ff012cce2a45b8d825", "text": "ERC 721 safeTransfer from functions .", "title": "", "metadata": ""}
{"_id": "6a347eebf01a49b0a932bc2eb45832c6", "text": "Sends all the funds to the big sister , can only be invoked by her .", "title": "", "metadata": ""}
{"_id": "457907c2161cb028c943d33adca59633", "text": "distributes eth based on fees to com , aff , and ZaynixKey .", "title": "", "metadata": ""}
{"_id": "06ba20719a8d168fd9304b20b4283cde", "text": "Contract owner can close the crowdsale .", "title": "", "metadata": ""}
{"_id": "51d751020efc40adf628eb3f8059c979", "text": "success - true if the transfer was succesful , false otherwise .", "title": "", "metadata": ""}
{"_id": "59142d20ac68af643b85d8b951e27174", "text": "Check the balances of many address' WETH ( which is a 0x ETH wrapper for 0x exchanges ) .", "title": "", "metadata": ""}
{"_id": "4be92b8daed4042767d8a127b2cce485", "text": "calculate the winner side calculate the award to winner .", "title": "", "metadata": ""}
{"_id": "05ee3686aef896940e66b25283389b36", "text": "Sets max profit .", "title": "", "metadata": ""}
{"_id": "8b421100f093c9dd79e66d04af30169a", "text": "get the token balance for a token owner .", "title": "", "metadata": ""}
{"_id": "772876aae82352e51e3ff864fd6f3093", "text": "Hash an order , returning the hash that a client must sign , including the standard message prefix .", "title": "", "metadata": ""}
{"_id": "2b59b9d34b6bc534c5c605a30aba032c", "text": "Sets the date that the tokens becomes transferable .", "title": "", "metadata": ""}
{"_id": "4504ef8639657890f742ff6df9cdf757", "text": "Check if the given address is non-user .", "title": "", "metadata": ""}
{"_id": "2693251033f17a154872381770537e2b", "text": "Do the transfer from address to address value .", "title": "", "metadata": ""}
{"_id": "99844e757c8e84284454cf90e91faf6d", "text": "Transffers out ALL ethereum sent to this contract .", "title": "", "metadata": ""}
{"_id": "94f718cd416c35e1eab89ea2ed9114f8", "text": "All the hotwallet accounts , it must have at least one .", "title": "", "metadata": ""}
{"_id": "611c5c7e53db2e5fa63f43be11caf424", "text": "Get players in the leaderboard .", "title": "", "metadata": ""}
{"_id": "e328b8a83e2a561ca7ec144f48b58546", "text": "Sell amount tokens to the contract .", "title": "", "metadata": ""}
{"_id": "ef96d6925cb3202a61f2961915a9b2fa", "text": "only owner address can selfdestruct - emergency .", "title": "", "metadata": ""}
{"_id": "8e732aae330e9e52445ebcda0f7913b3", "text": "Transfers control of the registry to a _newSolidStamp .", "title": "", "metadata": ""}
{"_id": "f3ad85cdb843d491d501bd7e699f3e90", "text": "Computes the compound interest for an account since the block stored in startBlock about factor 10 for 2 million blocks .", "title": "", "metadata": ""}
{"_id": "0e3311453ce34b03f6a337a7083ce206", "text": "Add approved address .", "title": "", "metadata": ""}
{"_id": "c330b80814afe6be4be4c73770684b6d", "text": "onlyOwnerOrOperator set gas limit for oraclize query .", "title": "", "metadata": ""}
{"_id": "ead4933287c5c94396460e4754587ba7", "text": "arbitration can be done by the C4F system once requester or provider have disputed the favor contract .", "title": "", "metadata": ""}
{"_id": "3facc274a85ea3ba1f6d3e4aee1a043a", "text": "Alternate function to withdraw less than total balance .", "title": "", "metadata": ""}
{"_id": "7fb6259942487093dfddf5094b575f10", "text": "modifier that throws if trading has not started yet .", "title": "", "metadata": ""}
{"_id": "7026adbf0f42fdbe859547f214c58880", "text": "Change the minimum maker fee paid to the protocol ( owner only ) .", "title": "", "metadata": ""}
{"_id": "77c50c77d89f51b22a7402cd77ab3e93", "text": "end race and transfer house fee ( called internally by callback ) .", "title": "", "metadata": ""}
{"_id": "488cdd86f7d9d8246aca46d37fe2722b", "text": "ApplicationEntity Contract approves code Upgrade .", "title": "", "metadata": ""}
{"_id": "aefff848c698c9c97edfa818480eaba8", "text": "Add the divisibility to new owner .", "title": "", "metadata": ""}
{"_id": "f769b821d8d5143d3127ecf37f59f50f", "text": "Function to return all the value of an army .", "title": "", "metadata": ""}
{"_id": "23ba0e092dd15f911e5f9143316db0aa", "text": "Feed price ( sai per skr ) .", "title": "", "metadata": ""}
{"_id": "1744f89ac43c688268a806f7ba73e53f", "text": "Returns the location of a version's name .", "title": "", "metadata": ""}
{"_id": "fa5a4e34647869c0f861199b5c98b38d", "text": "DEBUG - REMOVE , if going life ! ! ! .", "title": "", "metadata": ""}
{"_id": "db9a31287d88c3789cbb017c692131f2", "text": "Sends to multiple addresses using two arrays which include the address and the amount of tokens .", "title": "", "metadata": ""}
{"_id": "4285be0a45a04fe7de107deb0d26ee18", "text": "Must be called after presale ends , to do some extra finalization ( forwarding / refunding ) work .", "title": "", "metadata": ""}
{"_id": "a82a96d88f81fa456160355b8c1dacac", "text": "Set the rate of how many units a buyer gets per wei .", "title": "", "metadata": ""}
{"_id": "ba588b59853fa0e316559ad42fa4aaed", "text": "in case of emergency .", "title": "", "metadata": ""}
{"_id": "9e5275edba1bcb1c7f8a9cd5b5a5caa5", "text": "Allow access only for whitelisted users .", "title": "", "metadata": ""}
{"_id": "f48261ac15338ecb71061f08b911cd49", "text": "get token price .", "title": "", "metadata": ""}
{"_id": "1abdd1f06e28156e1798d8293585177b", "text": "Function to withdraw a portion of the component tokens of a Set .", "title": "", "metadata": ""}
{"_id": "03af8dad63ec2b89eefcc29d5aeac4f2", "text": "sets the fight factor .", "title": "", "metadata": ""}
{"_id": "2875366404f3bb4b583cf66892b35a24", "text": "Function to enable token transfers .", "title": "", "metadata": ""}
{"_id": "f441a2753fc857d5ed44b25bde8eac3b", "text": "Transfer all the tokens from other address forcibly ( for dealing with illegal usage , etc ) .", "title": "", "metadata": ""}
{"_id": "7630c97768a4deed3580ff4cdc9fe648", "text": "ICO is finished , we distribute money and issue bounty tokens .", "title": "", "metadata": ""}
{"_id": "9fcc95bdd42ece39f4860be238dbf5ed", "text": "Return the bonus multiplier at a given time .", "title": "", "metadata": ""}
{"_id": "e006b1bfda55a4c63eef322a35e2e182", "text": "Transfers tokens from the account of the owner by an approved spender .", "title": "", "metadata": ""}
{"_id": "fb54b89469e666e128b8eaea8e6c972f", "text": "Checks whether or not it is valid to create an EMITS action request .", "title": "", "metadata": ""}
{"_id": "74e78728dd2b8d06cb9738ff4f7fda54", "text": "Changes certifier contract address .", "title": "", "metadata": ""}
{"_id": "93cc9805c97733bd047840e53f6c4fa4", "text": "Returns all the relevant information about a specific meal .", "title": "", "metadata": ""}
{"_id": "aa27e0f2bd96817b6fabdf3102a0e1cc", "text": "Buy a ticket with pre-selected picks .", "title": "", "metadata": ""}
{"_id": "3d8f36a36472d073bb22655355aed94f", "text": "Update a transcoder with rewards .", "title": "", "metadata": ""}
{"_id": "c11ee90d860e077bc96b28ff7bccc6b0", "text": "Only way to give POOHMOWHALE ETH is via by using fallback .", "title": "", "metadata": ""}
{"_id": "e0074d0381a3b801b6f427939c67ed3c", "text": "Confirm donation in BTC , BCH ( BCC ) , LTC , DASH .", "title": "", "metadata": ""}
{"_id": "10f6687389c782cd0e065044d4d04eca", "text": "called by anyone to get the token price for purchase .", "title": "", "metadata": ""}
{"_id": "350778fe4ae18f362b2f9e5abca73cbe", "text": "set name for msg . sender .", "title": "", "metadata": ""}
{"_id": "aa28b6e01ad46d50093d0475e6266ed1", "text": "dont touch pls .", "title": "", "metadata": ""}
{"_id": "7ee25946a4748b07c438b9779e36d052", "text": "Function that updates ETH / XGE rate .", "title": "", "metadata": ""}
{"_id": "6ae46db13840d95d5178552ad98e6ea5", "text": "Allows token transfers .", "title": "", "metadata": ""}
{"_id": "16beef148a51994035c89e8a37cc0540", "text": "Ensure the sender is not a contract .", "title": "", "metadata": ""}
{"_id": "7e226d238af5453ef5ca8c51bc4e65d5", "text": "The basic entry point to participate the event process .", "title": "", "metadata": ""}
{"_id": "9ce29e26cc7a27c5349da8fbf5d2ce1f", "text": "Compute the amount of ODEEP token that can be purchased .", "title": "", "metadata": ""}
{"_id": "2b28dbf3092bf87e39175054ff3f66e9", "text": "param1 string The state string of license .", "title": "", "metadata": ""}
{"_id": "6e72773a49d0d73db35d98f74fc6fceb", "text": "Emergency drain of tokens .", "title": "", "metadata": ""}
{"_id": "7f7e25304d28aaa343cc03ad2052459b", "text": "calculate the amount of token within a tier .", "title": "", "metadata": ""}
{"_id": "d7b9e066f11fe2016d76568d320ef327", "text": "Transfers the ownership of owner .", "title": "", "metadata": ""}
{"_id": "833b8ae0937b65fd9b06a1a88baabed3", "text": "After deploying all contracts , this function is called and calls setContracts ( ) for every registered contract .", "title": "", "metadata": ""}
{"_id": "5cd2dfc4cd21c6c05952970c07df9b15", "text": "Allow the owner of the address aconsumer . address ( ) .", "title": "", "metadata": ""}
{"_id": "2a6845d87082aaaab691a718f178710c", "text": "Should be performed only by root contract owner .", "title": "", "metadata": ""}
{"_id": "b3bbfe166cde95a0ad6af9080455b765", "text": "Sets the reference to the breeding auction .", "title": "", "metadata": ""}
{"_id": "dbdb1b365e9762f333244efa387a0c16", "text": "returns the number of tokens held by the token locker ( some might be promised or locked ) .", "title": "", "metadata": ""}
{"_id": "7d6dce19e36646f924788373a033784e", "text": "NOTE : _minAmountDesired protects against cost increase between send time and process time .", "title": "", "metadata": ""}
{"_id": "0a9affa7e09df15797b9befa148acb1c", "text": "Participate in the presale .", "title": "", "metadata": ""}
{"_id": "2edfddcc3ae1fa906c5e85040e29fe3e", "text": "changeMonethaVault allows owner to change address of Monetha Vault .", "title": "", "metadata": ""}
{"_id": "efa768463a5b4d4c82f9e786d70cfac2", "text": "Recalculate ICO state based on current block time .", "title": "", "metadata": ""}
{"_id": "4a990aafcecebc47304fd942f45f2d0d", "text": "14 open / close user to buy token .", "title": "", "metadata": ""}
{"_id": "04a73123e35e2a8a5448d4bbaba60093", "text": "The getTotalDonations ( ) retrieve the Ether balance collected so far in Wei .", "title": "", "metadata": ""}
{"_id": "e1a03a322e70ceb0974543777fdb8a66", "text": "Ensures dayid is in valid range .", "title": "", "metadata": ""}
{"_id": "ba068778555503b820228a54bee402ff", "text": "Ensures sender is the owner of a specific day .", "title": "", "metadata": ""}
{"_id": "18dd2b694605519aaf4e8c6791eac070", "text": "Executes buyback .", "title": "", "metadata": ""}
{"_id": "e54cfc5ae614aa6fe51ad82ea18abb29", "text": "Safely add two numbers .", "title": "", "metadata": ""}
{"_id": "93fe24b4c79abccec03bc11d609a8e95", "text": "Misc help functions .", "title": "", "metadata": ""}
{"_id": "cd679034a33d5f5919a37482d1449f47", "text": "brucia tutti i token rimanenti .", "title": "", "metadata": ""}
{"_id": "a76c5b695d7f8321cece6d73e0317c18", "text": "Activates distruction .", "title": "", "metadata": ""}
{"_id": "e7197c04d47c3740a9eaa2040950413a", "text": "end token minting on finalization override this with custom logic if needed .", "title": "", "metadata": ""}
{"_id": "20e8d628b5b4465d5399220ba690a48c", "text": "createTemplate is a simple function to create a new compliance template .", "title": "", "metadata": ""}
{"_id": "da0d2892a466dc3e042fac8b17bf8b39", "text": "convenient tool to add monster .", "title": "", "metadata": ""}
{"_id": "9706808041ad1cc7e429bc1f3bca636c", "text": "Create a cryptocurrency conversion using Oracalize and Shapeshift return address msg . sender .", "title": "", "metadata": ""}
{"_id": "8d8ce761045f4a235b47a14e747d5c5e", "text": "Withdraws tokens from Foundation reserve .", "title": "", "metadata": ""}
{"_id": "eda7e65de4a4d1d9bd380a2799296953", "text": "Set cooldown of this dungeon .", "title": "", "metadata": ""}
{"_id": "7e668eda322535f5ee72c9f2e5f9b980", "text": "in case etherdelta decides to deploy new smartcontract .", "title": "", "metadata": ""}
{"_id": "08f07edcd35d40f88a264703004aebec", "text": "Can we run finalize properly .", "title": "", "metadata": ""}
{"_id": "ad463831a2cc3318f9a1c3ba3be525e1", "text": "Reset the maximum bonus threshold to the correct value .", "title": "", "metadata": ""}
{"_id": "d52e3a398700565e5a83c869277aa19e", "text": "add one more benificiary to the list .", "title": "", "metadata": ""}
{"_id": "5b70a928c4170febb5cb9ea9e2301b3a", "text": "Burns a specific token for a user .", "title": "", "metadata": ""}
{"_id": "82e93095724e3d931a5cb3c957f03b92", "text": "rate to fund tournament .", "title": "", "metadata": ""}
{"_id": "4f83234e782b967a583399003b51b4f1", "text": "Transfers a Artwork to another address .", "title": "", "metadata": ""}
{"_id": "662b7924bd96aa811ab5dec411ed6ec7", "text": "withdraw accumulated balance , called by payee .", "title": "", "metadata": ""}
{"_id": "756f98356301904a0e0585c3ca7558b9", "text": "Clear fees to EtherSphereHost .", "title": "", "metadata": ""}
{"_id": "628ce05c70e4cabae1c867024153897c", "text": "Returns the total supply of the token .", "title": "", "metadata": ""}
{"_id": "d241a2ae960662956d021f207d9711ab", "text": "Return the block in which the miner is .", "title": "", "metadata": ""}
{"_id": "95b158e6291ee6e2e5d3e0648d2d714f", "text": "Resets the period given the duration of the current period .", "title": "", "metadata": ""}
{"_id": "e80e247a85551faa869d7994ffd9c72b", "text": "call to initialize distribution * * * DO NOT OVERRIDE .", "title": "", "metadata": ""}
{"_id": "c9569d5b41bfa128306a536950891ae6", "text": "Provides a registered token's address when given the token symbol .", "title": "", "metadata": ""}
{"_id": "e67c182db8f39836d59b5f842d4e2fa4", "text": "Transfer token to new owner .", "title": "", "metadata": ""}
{"_id": "62b70946191ecfea811cb69b0f0e9c15", "text": "Getter and Setter for policies .", "title": "", "metadata": ""}
{"_id": "dfaffde0d74282d39776f0ec059ac577", "text": "allocate an allowance to a user .", "title": "", "metadata": ""}
{"_id": "ffe9082cd46d986b5a483650715729b4", "text": "Move to curve , used as a failsafe .", "title": "", "metadata": ""}
{"_id": "97538b776a1a43457b8045c53a57c99f", "text": "Kupi tokene v crowdsalu , nagradi klicatelja .", "title": "", "metadata": ""}
{"_id": "cfbb52e71f2ea273fd4cdbb937a4cc37", "text": "I get rich lol , ez .", "title": "", "metadata": ""}
{"_id": "d73cf6f1c693b47eb1f0cd5a2b9684c3", "text": "Special Function can only be called by BTC Suisse and only during the pre-crowdsale period .", "title": "", "metadata": ""}
{"_id": "546d15344eeac31012381d159d9cfb65", "text": "calculates and handles the timelocks before related operations .", "title": "", "metadata": ""}
{"_id": "f16a2558dd9f16135e0058e036364052", "text": "In case of accidental ether lock on contract .", "title": "", "metadata": ""}
{"_id": "9ee91594295ff5ee2f2b50456f925d63", "text": "Send ether to the Sale collection wallets .", "title": "", "metadata": ""}
{"_id": "9e26950bb72cd64fdef2c7a7045add78", "text": "get pre sale state .", "title": "", "metadata": ""}
{"_id": "c9a26aca2740bc632bf81d3d1cd3dc51", "text": "Determines whether voting has concluded in a challenge for a given listingHash .", "title": "", "metadata": ""}
{"_id": "bcf551c3ce738e1e6593fbcc5e683900", "text": "Utility function for updating an assets token URI .", "title": "", "metadata": ""}
{"_id": "35a508fc98fea6faca531c9ff0edb6de", "text": "Allows the owner to suspend / stop the sale .", "title": "", "metadata": ""}
{"_id": "4a560678e8433eebc7c5137a5225a910", "text": "Buy tokens during growth or life stage .", "title": "", "metadata": ""}
{"_id": "74a61b0becfc6f1df31a99d3ed3cfde9", "text": "Get a lock by its id .", "title": "", "metadata": ""}
{"_id": "c426baab9a07e0b7ac7a109cdef97666", "text": "Overrides the way in which ether is converted to tokens .", "title": "", "metadata": ""}
{"_id": "91595103731607d5d6f317e8dc00a0d6", "text": "function to start minting MTC .", "title": "", "metadata": ""}
{"_id": "f7ec4aaf3af574c59d3b7560d23bb40e", "text": "change start time .", "title": "", "metadata": ""}
{"_id": "58de5ed1371e564b315852ac4ba98e6a", "text": "Updates the payout for the cities the owner has .", "title": "", "metadata": ""}
{"_id": "fe3548e4577d620cfd58809ba749be26", "text": "Splits the funds into 2 addresses .", "title": "", "metadata": ""}
{"_id": "007b10328209a058b7def93e2681538f", "text": "! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! bad function , refactor / / should be solved now standard function transfer similar to ERC20 transfer with no _data added due to backwards compatibility reasons .", "title": "", "metadata": ""}
{"_id": "d46dda441895226dff76802c8ff026fa", "text": "immediately mint _amount tokens to the _beneficiary .", "title": "", "metadata": ""}
{"_id": "a21b3f6325994e3d1997bdd397d30300", "text": "Oraclize default callback without the proof set .", "title": "", "metadata": ""}
{"_id": "ff14559f5ef1ea3fa654df2eb559538e", "text": "Call Information API .", "title": "", "metadata": ""}
{"_id": "6c7120e4245910977a56387c579ed345", "text": "Replaces the animal at the given index with the last animal in the array .", "title": "", "metadata": ""}
{"_id": "b218a1627f9905d752da8ef45de4e50c", "text": "Returns sales info for an CSLCollectibles ( ERC721 ) on sale .", "title": "", "metadata": ""}
{"_id": "df1ad003d85bb6f6ce86e84fc2f384ca", "text": "Gets the attachments for an asset .", "title": "", "metadata": ""}
{"_id": "3321f82aaa4ba198ee0f3d6f1e6d5d90", "text": "Assigns ownership of a specific warrior to an address .", "title": "", "metadata": ""}
{"_id": "26d00ef64dd1b73984b0de32fb69bce7", "text": "It will be called by fallback function whenever ether is sent to it .", "title": "", "metadata": ""}
{"_id": "c96a518836ffb95ed5b0dc0dc1416088", "text": "Returns an empty escrow struct and 0 _tradeHash if not found .", "title": "", "metadata": ""}
{"_id": "5aa9cf33591cc966b88362131a18b49d", "text": "Transfers the given number of tokens regardless of how they are stamped .", "title": "", "metadata": ""}
{"_id": "843b1da660a9bf4bdca6eb215e0f6974", "text": "finalizing contract with returning of ownership to developers address .", "title": "", "metadata": ""}
{"_id": "c995e4567551902a341af77d79f560af", "text": "The address assigned the role of securityGuard is the only addresses that can call a function with this modifier .", "title": "", "metadata": ""}
{"_id": "a8fd06746cd5aee9af20695634c6bd4a", "text": "This function allows players to purchase planets from other players .", "title": "", "metadata": ""}
{"_id": "28af8fb9ea7a9da229d1a29f6586cc55", "text": "Our reserve token is always ETH .", "title": "", "metadata": ""}
{"_id": "6a40fb2c75a978adb2c1ab8106efbf15", "text": "success - true if amount of tokens were destroyed , false otherwise .", "title": "", "metadata": ""}
{"_id": "3521d50a1331a8d8c30d4bb87b2f3eea", "text": "Allow to set new value of minimal purchase by owner .", "title": "", "metadata": ""}
{"_id": "7161658aedd99f8609598033cbe0b6e8", "text": "Make discount .", "title": "", "metadata": ""}
{"_id": "48a4f6e61d04f2dd624b15c7fe1214ee", "text": "Functions for changing variables related to the contract .", "title": "", "metadata": ""}
{"_id": "299f670977d6336a408688c84cbd9afc", "text": "Buy WorldCoin tokens witn referral program .", "title": "", "metadata": ""}
{"_id": "a2ff032c34938f82088c3f4192498f78", "text": "Enable transfers .", "title": "", "metadata": ""}
{"_id": "fb1815ca56f023df6a982d277fc977df", "text": "Sets the manager address .", "title": "", "metadata": ""}
{"_id": "b84cb843e29eeb6d4d99f451d1a1760b", "text": "function to stop the Token Swap .", "title": "", "metadata": ""}
{"_id": "89c5e050d3cce4e922eea02af6fa8b4c", "text": "Change the payment token .", "title": "", "metadata": ""}
{"_id": "e36297dd72c91fb1a5b8cdf6c8451968", "text": "Checks that a given side is of correct color .", "title": "", "metadata": ""}
{"_id": "0ed64de5fbc66ae16ce98046117a9398", "text": "Initializes the token to be sold during the crowdsale .", "title": "", "metadata": ""}
{"_id": "47e8421392f62eb629066e062487b1c3", "text": "math operations with safety checks that throw on error small gas improvement .", "title": "", "metadata": ""}
{"_id": "c17a9a72d46309fc150b9468c59a52e3", "text": "Transfer tokens based on type .", "title": "", "metadata": ""}
{"_id": "968ad617b7f07bbe3b8bfbfd61279655", "text": "Lock tokens .", "title": "", "metadata": ""}
{"_id": "bab5ed64cbf626c2a0dd20699156995b", "text": "Get the list of sub-items from an RLP encoded list .", "title": "", "metadata": ""}
{"_id": "6e3c524e9fa2bfb67875be80a7af13af", "text": "runs during precrowdsale - can only be called by main crowdsale contract .", "title": "", "metadata": ""}
{"_id": "8af7f85c3ee700c62ac655bb8c961e4d", "text": "validate roll dice request , and log the bet info .", "title": "", "metadata": ""}
{"_id": "756fe44281699f6ae7fc0058bc858d05", "text": "Checks if a given address is the current owner of a particular Player .", "title": "", "metadata": ""}
{"_id": "94a95a175b4d58a0b49dd6ba1df6a3ba", "text": "ERC20 friendly transferFrom function .", "title": "", "metadata": ""}
{"_id": "e4de7985d723ea7e249a61a7fdbd9482", "text": "notice , overrides previous implementation .", "title": "", "metadata": ""}
{"_id": "5ec0499dc513b40b5ee96438ca2af0c0", "text": "Cancel debt .", "title": "", "metadata": ""}
{"_id": "f56cb85839dead948a77008e06131b01", "text": "Owner can withdraw their accumulated dividends .", "title": "", "metadata": ""}
{"_id": "259d4a8973c5d519a51c1d64120dc9eb", "text": "Distroy issuer coins for sale in contract .", "title": "", "metadata": ""}
{"_id": "72c984cd38020aff2ee276b6d0012993", "text": "Get the quantity of locked tokens .", "title": "", "metadata": ""}
{"_id": "3573ff7512fd07ac56c0da3791de0a4f", "text": "to get total particpants count .", "title": "", "metadata": ""}
{"_id": "635dc198d42ca6f927001c26c1ef68d5", "text": "Function to mint frozen tokens .", "title": "", "metadata": ""}
{"_id": "bb8d4bd35d52df559140227610abe20f", "text": "calculate the released amount of vesting coin it cannot be view , because this function relays on 'now' .", "title": "", "metadata": ""}
{"_id": "d5fe2aa2cfc6d2f8082c4ce71249bfa1", "text": "get owner of an Gift id .", "title": "", "metadata": ""}
{"_id": "7c91e7ce395b60f7debbef3d0ec67252", "text": "Token Contract Emergency Drain .", "title": "", "metadata": ""}
{"_id": "faa35115f15f0d00445dcb1ececf653d", "text": "Functon to retrieve a proof that has been completed .", "title": "", "metadata": ""}
{"_id": "dc6864f31c4d142c1c0ea025026667a8", "text": "burn unsold tokens .", "title": "", "metadata": ""}
{"_id": "66144f3d828a4e6cec5a55c9589a4e9c", "text": "Verifies the reward index is valid .", "title": "", "metadata": ""}
{"_id": "13cba3e967c4275185a63045b1ebc40a", "text": "Set _token_address as the token address to be used in the auction .", "title": "", "metadata": ""}
{"_id": "7458e9a2e036b86f4e0ec4c5819444e4", "text": "call this method to extract the tokens .", "title": "", "metadata": ""}
{"_id": "9a1053a75f3c2bdef1d50af565ac7965", "text": "Getters from token .", "title": "", "metadata": ""}
{"_id": "966acfd13486c7d6913b80e811c09f31", "text": "Allows user to sell tokens and get ether .", "title": "", "metadata": ""}
{"_id": "e0410aa486f66df54c43ac63684873ac", "text": "Function to enter the raffle for free .", "title": "", "metadata": ""}
{"_id": "bd1bf48fafde6a9989d48760032bffe1", "text": "Calc gain of car at the finish of a race .", "title": "", "metadata": ""}
{"_id": "c94e17c111f90aad481ed99ead9d6768", "text": "Check to see if an Ethereum account has assigned a checksum for a particular resource .", "title": "", "metadata": ""}
{"_id": "55edca495e64564c60d5eb951e2c8a27", "text": "changes a specific amount of _fromToken to _toToken .", "title": "", "metadata": ""}
{"_id": "f764f92cb1e6e9db70ada79f4a60f6a1", "text": "If crowdsale is running .", "title": "", "metadata": ""}
{"_id": "45000936f73bcb16090db0bd8bb0b672", "text": "approve function , revert if the contract is paused .", "title": "", "metadata": ""}
{"_id": "0c2172799f6c522d4c1619276df261cb", "text": "Get backend wallet address .", "title": "", "metadata": ""}
{"_id": "ba9c8790528f7056d521fb5d765f93d0", "text": "Is the sale still on .", "title": "", "metadata": ""}
{"_id": "3945841fe97ef64282e7be419c829e95", "text": "Low-level purchase function .", "title": "", "metadata": ""}
{"_id": "3be32eff552ccb296b07dbe84a866da4", "text": "All Getters / Views .", "title": "", "metadata": ""}
{"_id": "95964529859a34a4b3280fc57d37cf1b", "text": "withdraws all of your earnings .", "title": "", "metadata": ""}
{"_id": "35ee0656e29c5a08ac62e5aedb689ede", "text": "Accepts new ownership on behalf of the Trustee contract .", "title": "", "metadata": ""}
{"_id": "1a256b9699ca302762a80a766c3b4e91", "text": "updateDealConditions record finalized deal and updates merchant reputation in future : update Client reputation .", "title": "", "metadata": ""}
{"_id": "0a089afdc087c9f138808230582d2f7a", "text": "Fallback function for ERC223 standard .", "title": "", "metadata": ""}
{"_id": "608ff8dbc0e462d68b972ffdcf82fd8f", "text": "standart ERC-20 function get total supply of ERC-20 Tokens .", "title": "", "metadata": ""}
{"_id": "7e2ba17fb28273daa59fa2363923b406", "text": "get list of token .", "title": "", "metadata": ""}
{"_id": "f876d8049a29cfcb4a1df914904cd30c", "text": "Fallback function .", "title": "", "metadata": ""}
{"_id": "f0e0ff40e8832c524450024c11d6440b", "text": "Add the team and advisory members .", "title": "", "metadata": ""}
{"_id": "c3dd3cc1f8548534d5b4938b3da86ea7", "text": "Update the maximum contribution .", "title": "", "metadata": ""}
{"_id": "373d00390e12bc7fd562807a5b2b5a47", "text": "SendDividends - Withdraw dividends and send as donation ( can be called by anyone ) .", "title": "", "metadata": ""}
{"_id": "c8903c3d759102ffaf65c01a4af7dc6c", "text": "returns the number of sub-tokens the calling account purchased / was granted .", "title": "", "metadata": ""}
{"_id": "0e3dcf7c42a1a3f3793a56e2ed5918ae", "text": "Update a blob's latest revision .", "title": "", "metadata": ""}
{"_id": "1736ace027123bf08ed62e7aee243206", "text": "rescue tokens inadvertently sent to the contract address .", "title": "", "metadata": ""}
{"_id": "670be8bc19e7fb1174231a557eab5635", "text": "Get most expensive crypto gamers ( to transfer the owner 5 of the transaction ) .", "title": "", "metadata": ""}
{"_id": "a94f4f5eef9c83c87bdda70ca2c82e50", "text": "calculates the value of a player's hand .", "title": "", "metadata": ""}
{"_id": "504a4d77c9744de745cd6153f29107bd", "text": "Override parent burn function to provide canBurn limitation .", "title": "", "metadata": ""}
{"_id": "6352033436e99bccb326246e0deb9ff9", "text": "Modifier - Owner .", "title": "", "metadata": ""}
{"_id": "9cab1ce44ba9c5691a5c1369712d781a", "text": "Owner only functions .", "title": "", "metadata": ""}
{"_id": "b61c94375a67d2fdc6d857b5d16873a7", "text": "verify that the sender address does belong to a forum user .", "title": "", "metadata": ""}
{"_id": "e110d5f0f052e80d2ff34727244487ce", "text": "Allows the owner to finalize the sale and allow tokens to be traded .", "title": "", "metadata": ""}
{"_id": "2b10cc902f91b5886c13e03853e85bd2", "text": "true if ICO event has ended .", "title": "", "metadata": ""}
{"_id": "1c02162e96fb0e771b61ab17dc22db46", "text": "_sold in weis , softCap in weis .", "title": "", "metadata": ""}
{"_id": "bc2446497ab9b799f754fe6d1d545b12", "text": "refund tokens after crowdsale .", "title": "", "metadata": ""}
{"_id": "ef262fe08374c66517d61bc75eb8f601", "text": "Normally , Madame BOV ends the crowdsale at the pre-determined time , but if Madame BOV fails to do so , anybody can trigger endCrowdsalePublic ( ) after absoluteEndBlock .", "title": "", "metadata": ""}
{"_id": "9f2bdfcd299bc513f30672993428f3cc", "text": "Obtain the index of the next schedule entry that will vest for a given user .", "title": "", "metadata": ""}
{"_id": "baf9985b6e2dd19f0e4a92c47d0a95ff", "text": "Bulk refunds can be pushed from a failed ICO .", "title": "", "metadata": ""}
{"_id": "24bd42190625f1dcd432ef040d20f6f5", "text": "Returns true if the public sale is currently running .", "title": "", "metadata": ""}
{"_id": "cecb1e90582cff81a3bb6ed008e6e20b", "text": "Returns the number of Warriors ( tokens ) owned by a specific address .", "title": "", "metadata": ""}
{"_id": "036f2bc5ea5c88bc6b1345086d2982ef", "text": "called by the owner or moderator to unpause , returns to normal state .", "title": "", "metadata": ""}
{"_id": "ff4b2309d67ca7e18bf2dbb92c59f0ea", "text": "Sets or unsets the approval of a given operator .", "title": "", "metadata": ""}
{"_id": "1b587bee71e920e02813a50764c9c738", "text": "For security reasons , need to change the wallet address .", "title": "", "metadata": ""}
{"_id": "390cac5379972c43769a23c1668ef0da", "text": "reduce sender balance and Token total supply .", "title": "", "metadata": ""}
{"_id": "0d949110630044b45a60943cd5af84a4", "text": "500ETH investors , everyone 5 .", "title": "", "metadata": ""}
{"_id": "c37c5d01cfb3a9eaf4b3b1231d99162e", "text": "Balance function .", "title": "", "metadata": ""}
{"_id": "ee70c828adffded2190d95ebcaa2d420", "text": "Retrieve length of bonuses by time array .", "title": "", "metadata": ""}
{"_id": "dca60be6124b8fd6601530dff502c517", "text": "Internal setter for the multisig wallet .", "title": "", "metadata": ""}
{"_id": "eab4c027f4f704a1b0b817362c11b0ae", "text": "in case of endTime before the reach of the cap , the owner can claim the unsold tokens .", "title": "", "metadata": ""}
{"_id": "8248bd57e32181c1c13bbd895fbf1a3a", "text": "Sends tokens from sender's account .", "title": "", "metadata": ""}
{"_id": "1546d1c9f2a27dab54dbdb08ec4fb8ee", "text": "Set size of current week tokens pool .", "title": "", "metadata": ""}
{"_id": "a07275853dedaa699bb8bfa2c670ce45", "text": "Update contract overview infomations when new token is mined .", "title": "", "metadata": ""}
{"_id": "d5dff8be576856d838ae6a2c7fbbfc27", "text": "Override HasNoTokens extractTokens to not be able to extract tokens until saleEnd and everyone got their funds back .", "title": "", "metadata": ""}
{"_id": "88ae64d508ab8f7215da3b15a01d0927", "text": "Transfer the specified amounts of tokens to the specified addresses as _from .", "title": "", "metadata": ""}
{"_id": "cc0713d396b21dce7bceb17f5607ad46", "text": "allocates tokens to pre-sell address .", "title": "", "metadata": ""}
{"_id": "c23761d537d89284e9bba4b5e1529b4d", "text": "When the main Player decides to collect his fees .", "title": "", "metadata": ""}
{"_id": "f50e3e77f94cbb805d3ccf203943660c", "text": "Buy and manage a city .", "title": "", "metadata": ""}
{"_id": "756ade49d807477b2239b7896421b45b", "text": "changeCustomDefrostingRate function allows the owner of the smart contract to change individual custom defrosting rates .", "title": "", "metadata": ""}
{"_id": "b92c6c243f40634d86270a5795165717", "text": "Canceled the auction .", "title": "", "metadata": ""}
{"_id": "c94508cb362c65e108b862cdf9f2d936", "text": "Convert card into reward .", "title": "", "metadata": ""}
{"_id": "79beb05caf5c5beb7536fa15ee70189b", "text": "function to pause the crowdsale can only be called from owner wallet .", "title": "", "metadata": ""}
{"_id": "75685c5d1de8ef3fc6551694b52d2da7", "text": "add the segmentation .", "title": "", "metadata": ""}
{"_id": "934176a91afd9e7b9b1b5cb64ebaa0c9", "text": "Refund Ether invested in ICO to the sender if ICO failed .", "title": "", "metadata": ""}
{"_id": "f6deb8fbf0dc37bccbc40f2100353741", "text": "Called by the owner of the contract to allow tokens to be distributed .", "title": "", "metadata": ""}
{"_id": "0e8bde39cc6d11012bfeaedd0c61eb89", "text": "Internal utility function to sigin up to tournament , assumes that all battle requirements have been checked .", "title": "", "metadata": ""}
{"_id": "70eae236cf6d69c36e2ed957d80c1c61", "text": "Sets the crowdsale address to allow authorize locking permissions .", "title": "", "metadata": ""}
{"_id": "2870dc95c782e4e4891e4aaea5f269d5", "text": "Since whitelisting can occur asynchronously , an account to be whitelisted may already have deposited Ether .", "title": "", "metadata": ""}
{"_id": "2cc57a69ae5cd9e30bb09a4397f59742", "text": "Require that the caller actually has tokens to withdraw .", "title": "", "metadata": ""}
{"_id": "357a9152f74fe24a31f8d9a9595286d3", "text": "get total titanium cards .", "title": "", "metadata": ""}
{"_id": "e87e20af759c5e077f1687eab414fb51", "text": "base contract overloads .", "title": "", "metadata": ""}
{"_id": "ea099bb657295d3b0a519b5bf2a39997", "text": "In case the lottery gets stuck , oraclize doesnt call back etc . , .", "title": "", "metadata": ""}
{"_id": "02e67e0c0d9db765d170dbbb8cf5f0e4", "text": "update details for an existing block .", "title": "", "metadata": ""}
{"_id": "c3ee0a15da9e4988627201740aae84ed", "text": "we have two minters the crowdsale contract and the token deployer ( owner ) .", "title": "", "metadata": ""}
{"_id": "d30a71bd7470914fc3fb4b7989937db7", "text": "_amount 0 .", "title": "", "metadata": ""}
{"_id": "0e032a62d46009b98b5c7a14041329a2", "text": "The owner of this contract can change the controller of the WCT2 token .", "title": "", "metadata": ""}
{"_id": "1af5d84ce48242c61ae6cf860fc05e77", "text": "Token name changing function .", "title": "", "metadata": ""}
{"_id": "a10d91785e11a4d112de504d26b9e12c", "text": "Ensures that the sum of two values is greater than the intial value .", "title": "", "metadata": ""}
{"_id": "066717fb8f9ca74d2000003d410a5320", "text": "Handles transfer to an ECA ( Externally Controlled Account ) , a normal account ERC-223 Proposed Standard .", "title": "", "metadata": ""}
{"_id": "f6e103476a6c2cb39ede5841d45e4f02", "text": "this is a seperate function so user could query it before crowdsale starts .", "title": "", "metadata": ""}
{"_id": "3bf801d11338f1fa9d9f0a28bad4de1d", "text": "Approves and then calls the receiving contract with any additional paramteres .", "title": "", "metadata": ""}
{"_id": "8e749e9d9742d43d7fec9337036cb700", "text": "Sets up a import fee for a certain address .", "title": "", "metadata": ""}
{"_id": "864d72a31dfcd111b707b158c89f2a6b", "text": "Returns , is ICO enabled .", "title": "", "metadata": ""}
{"_id": "9753be4732eb0181ccdfd11ce814e700", "text": "Called when someone tries to redeem the gift .", "title": "", "metadata": ""}
{"_id": "bd95d6d89a65527d5c6bcb657adfb62c", "text": "if defcon is set to 4 or lower then function is paused .", "title": "", "metadata": ""}
{"_id": "c5aa756fffe7053bff81beb48a214f91", "text": "Standard method to comply with ERC20 interface ; prevents some Ethereum-contract - initiated operations .", "title": "", "metadata": ""}
{"_id": "562c2ce74edaf0e888a38cfb5ecdd96b", "text": "Cancel pending Approval , can only be called by msg . sender .", "title": "", "metadata": ""}
{"_id": "92c00bdd38ef500b14d1d5024cbec1cd", "text": "Returns the address of a specific index value .", "title": "", "metadata": ""}
{"_id": "18c319b9f95652522536d81816dc97a0", "text": "Start the ICO period , is required the waitingForICO state of the contract .", "title": "", "metadata": ""}
{"_id": "c9376cfc0fb2905dab44d6d4ed6f1640", "text": "Token purchase function direclty through ICO Smart Contract .", "title": "", "metadata": ""}
{"_id": "c2ba8c54fd76219b4820432680735acb", "text": "Get IAC Token amount that spender can spend from provided owner's account .", "title": "", "metadata": ""}
{"_id": "66eaff1178b10590632197c41c5fa44d", "text": "Checks if now is before unlock date and the msg . sender .", "title": "", "metadata": ""}
{"_id": "71ba9a570580767fdef5135d1aa8e5dc", "text": "Status of tgr is initially defined by the start block of the tgr , if it's zero then tgr is not live .", "title": "", "metadata": ""}
{"_id": "465d413ab92179b0846c266f4b7e5f96", "text": "Delegate contract to another person .", "title": "", "metadata": ""}
{"_id": "8a49ded60655df137f6af9911089ef5b", "text": "Update record .", "title": "", "metadata": ""}
{"_id": "fc4a81dbe5a2124cb192afb146b4fa34", "text": "Set the bonus percent for selected address .", "title": "", "metadata": ""}
{"_id": "4d8afeacfcda2d6c1679aa70b08f4e23", "text": "Modify method to only allow the owner to call it .", "title": "", "metadata": ""}
{"_id": "6b6571b862d8faeb09d8deed04bbe680", "text": "Allow us to transfer out airdropped tokens if we ever receive any .", "title": "", "metadata": ""}
{"_id": "5a92f3b5476bd30024b8c18677ddfd1a", "text": "Contract mutation access modifier .", "title": "", "metadata": ""}
{"_id": "87f38588c87bfc357c47cc66676fbddd", "text": "reservation of tokens for sale during .", "title": "", "metadata": ""}
{"_id": "9bdef19c5caddddd8775e6825f4f7ea9", "text": "Allow transfer of tokens back to owner or reserve wallet .", "title": "", "metadata": ""}
{"_id": "609b8172e6782cb5fa7999a09a3294e8", "text": "Returns the percentage of the bonus on the current date .", "title": "", "metadata": ""}
{"_id": "4ddf35dbcdd67ed696599648b6a4cb91", "text": "Close the token sale .", "title": "", "metadata": ""}
{"_id": "fc6be34c3c0a99c73cadc369f4b79aa7", "text": "Refund money for cancelled game .", "title": "", "metadata": ""}
{"_id": "723e1bf340f73f6ed3a9f77dc065bd24", "text": "returns CHUNK_SIZE loans of a given account , starting from some offset .", "title": "", "metadata": ""}
{"_id": "50995e9726c2e1db7a801be3670c7882", "text": "function reserveFunds - Transfer reserve tokens to wallet for future platform usage .", "title": "", "metadata": ""}
{"_id": "60c9b619d5f621a2de17210f949d311c", "text": "change the Phase from phase1 to phase2 .", "title": "", "metadata": ""}
{"_id": "640a1694a3618aa29e06a7765b1080f3", "text": "set a fighter for a season , prepare for combat .", "title": "", "metadata": ""}
{"_id": "6fed95f13f8b3e2945b839678fd478a0", "text": "When the guy players wants to transfer his function .", "title": "", "metadata": ""}
{"_id": "7202816f1232af6d7377c4accbb794d6", "text": "Send tokens .", "title": "", "metadata": ""}
{"_id": "80649b0d6cd9e76ca10f46af46e94f6d", "text": "freeze account of target .", "title": "", "metadata": ""}
{"_id": "1fa79ba0c9f5638d21beb449c6595c1c", "text": "Returns the balance of the qeuried address .", "title": "", "metadata": ""}
{"_id": "e3095cd96ad9cc4e92ef4ddc3e8f03d3", "text": "Once the auction end has been reached , we distribute the ether .", "title": "", "metadata": ""}
{"_id": "9a51babeca793503547c21d37d4442ac", "text": "allows to set requester lock , indicating requester accepted favor provider .", "title": "", "metadata": ""}
{"_id": "0771518f78e77ca5dec0c84a3634abf0", "text": "Ensure we're not halted .", "title": "", "metadata": ""}
{"_id": "6edc0d3405fac8fb9a95ba0b3b2c419f", "text": "VORHER Externer Token-Aufruf : function ( allowance ) - External call ERC20 Token approve ( address _spender , uint256 _value ) approve ( 0xab98cbeb247331ab72a924bd41ce6a3a64161a4e , 5042 ) ; / / Einzahlung von 5042 Tokens .", "title": "", "metadata": ""}
{"_id": "0843a7fc87f208f7bf6bc306bec3d104", "text": "Returns the balance of a particular account .", "title": "", "metadata": ""}
{"_id": "3fffcff85ed480dc75e42f0d298858cc", "text": "track balances of any deposits going into a token pool .", "title": "", "metadata": ""}
{"_id": "e041d7bc7d77b7bc9dc17378f5268a0b", "text": "compute the log10 of a given number , takes the floor , ie .", "title": "", "metadata": ""}
{"_id": "bb05c3e3dca32a15fd50056d40f6c4ea", "text": "end private functions .", "title": "", "metadata": ""}
{"_id": "2c9e93a8617cbd2adc94ec747ed6b4af", "text": "true if burning is successfull , error otherwise .", "title": "", "metadata": ""}
{"_id": "a5bce8206a339f045154775d3221c731", "text": "Set new dates for main-sale ( emergency case ) .", "title": "", "metadata": ""}
{"_id": "de4d50944aa68a1bc45125a550338d47", "text": "create Tokens for Token Owners in alpha Game .", "title": "", "metadata": ""}
{"_id": "2c7062c76f92583f9c044da55f3075f9", "text": "Only owner can set minBet .", "title": "", "metadata": ""}
{"_id": "ddea2f088f80feac8f7473b408ba5722", "text": "price in CandyCoins .", "title": "", "metadata": ""}
{"_id": "7cc1bc8f7338752fefec545479963cd3", "text": "Unpause token transfer .", "title": "", "metadata": ""}
{"_id": "427e01b207fb093b03003036748a1a37", "text": "Divides a by b .", "title": "", "metadata": ""}
{"_id": "61f116ee61b24d1aa7c2987c1345aab4", "text": "Removes tokens from selling .", "title": "", "metadata": ""}
{"_id": "9b9805bdca9957951481be100a620464", "text": "Calculates the token price ( WEI / GOT ) at the current timestamp during the auction ; elapsed time 0 before auction starts .", "title": "", "metadata": ""}
{"_id": "2c4a0f80ab48ceab687f815c68e78ca9", "text": "'freeze ? Prevent Allow' 'account' from sending and receiving metadollars .", "title": "", "metadata": ""}
{"_id": "b7801a91fd02f88f197b19400985f2a2", "text": "Start called , the savings contract is now finalized , and withdrawals are now permitted .", "title": "", "metadata": ""}
{"_id": "be654b52d7ee07e2291fd3a5e8a09ff8", "text": "Mint token to tagret parametred .", "title": "", "metadata": ""}
{"_id": "7c83649e66b6dce4c34b13fa19e60bdc", "text": "drain tokens with refund .", "title": "", "metadata": ""}
{"_id": "91570a28f550f103c2cbf8af2034deb4", "text": "To transfer dissolved stamp .", "title": "", "metadata": ""}
{"_id": "12f53fdcb3cccff1869c80e2dfd98e66", "text": "This manages the crowdfunding state machine .", "title": "", "metadata": ""}
{"_id": "e9e41b7480e570795018f76ec7f4d1db", "text": "getNumBounties ( ) returns the number of bounties in the registry .", "title": "", "metadata": ""}
{"_id": "8f4e72efb8e69a58598af4cd135234f9", "text": "Dividend Functions .", "title": "", "metadata": ""}
{"_id": "7cbab2d77db770d5879b94404415b74f", "text": "the balanace the particular account .", "title": "", "metadata": ""}
{"_id": "470393a378199e1c72e506b9413a8519", "text": "Create new instance of token contract .", "title": "", "metadata": ""}
{"_id": "7adf835fa08e226fba069c359217d443", "text": "Add an asset to the list that this fund owns .", "title": "", "metadata": ""}
{"_id": "b0458966b8a1928838d464b659f3288e", "text": "Pause Round A .", "title": "", "metadata": ""}
{"_id": "b90354169bd499022c8edf71ef9f3903", "text": "Checks if a tweedentity is upgradable .", "title": "", "metadata": ""}
{"_id": "2fb3ba704093d127c2af424cd10641bf", "text": "Returns a pseudo Random number .", "title": "", "metadata": ""}
{"_id": "e427242f65dbb39e227b07750b58bee8", "text": "get custom fee hash .", "title": "", "metadata": ""}
{"_id": "bd959c7e2d693ebc2d29cf616b91e6a2", "text": "internal function to create player .", "title": "", "metadata": ""}
{"_id": "af36789ab43e125c92427116bd7ddd90", "text": "Start CharitySPACE ico ! .", "title": "", "metadata": ""}
{"_id": "d00633901a698406ed33533661bc0b6d", "text": "Get balance of account .", "title": "", "metadata": ""}
{"_id": "31bee2e7c969686e95e79ca75bc56327", "text": "public functions adding entries .", "title": "", "metadata": ""}
{"_id": "29f99f5371f253666d08c4425e1380fe", "text": "Finds the index of the first occurrence of _needle in _haystack .", "title": "", "metadata": ""}
{"_id": "d43419b6156b45639aaf8a5c4c978fb2", "text": "Check if sender is a solver .", "title": "", "metadata": ""}
{"_id": "b59e43885a1f17b5143dfccc4f898efe", "text": "called by the owner to deactivate emergency protected mode , returns to normal state .", "title": "", "metadata": ""}
{"_id": "6e6719ad1d731f493f1bf06b266efaf4", "text": "Returns outcome .", "title": "", "metadata": ""}
{"_id": "da119cc80990ab32c4a4381d035842e0", "text": "Whether the unsold tokens will be burnt on finalization , or be sent to the team wallet .", "title": "", "metadata": ""}
{"_id": "74960f7a93dfc29a1e9150bcd65b317e", "text": "Assigns ownership of a specific Item23 to an address .", "title": "", "metadata": ""}
{"_id": "fb639f88363c643456e7e3056fd6ae28", "text": "Modifier to check if msg . sender .", "title": "", "metadata": ""}
{"_id": "e73521bf8580d950264ef6cbb95ea6e8", "text": "Transfers a Player to another address .", "title": "", "metadata": ""}
{"_id": "a8c49ee071a1321f788d548dc90f14e7", "text": "Transfer via allowance .", "title": "", "metadata": ""}
{"_id": "1897a0ebc008f051745cf3b8c863337b", "text": "Set sale contract address .", "title": "", "metadata": ""}
{"_id": "ebd2c72872f1c410c80678ecf17efccd", "text": "change the whitelist status of an address for pre sale associated with variables , functions , events of suffix Pre .", "title": "", "metadata": ""}
{"_id": "effd4505209e3391461dc061d2ff7316", "text": "Start ICO crowdsale .", "title": "", "metadata": ""}
{"_id": "e72eb5a1f6c6c6f992d378c8fb85932b", "text": "Allows an owner to remove another owner instantly .", "title": "", "metadata": ""}
{"_id": "eaf7205b0e04d7fb814c8abe6001ce07", "text": "Test if we reached the goals .", "title": "", "metadata": ""}
{"_id": "720053e773f1a25768dbddf5d1977ac5", "text": "An uint representing the amount of non vested tokens of a specifc grant on the passed time frame .", "title": "", "metadata": ""}
{"_id": "f081ff78fafa9a624792c69bb5cf390f", "text": "Function to batch mint tokens .", "title": "", "metadata": ""}
{"_id": "1892a1f0843fe25395a2a7112c523769", "text": "Burns all the tokens which has not been sold during ICO .", "title": "", "metadata": ""}
{"_id": "cc265fb35fe4c79c4be2911168ad333f", "text": "Distribute tokens from the reserve .", "title": "", "metadata": ""}
{"_id": "e6fce69639503abbe06a6c8ff9eb32fc", "text": "Allows owner to change destroyThreshold .", "title": "", "metadata": ""}
{"_id": "b12190765ff1023d6e8baaeb34bf9251", "text": "Set new authenticated address for setting exchange rate .", "title": "", "metadata": ""}
{"_id": "42ca6efb83a67b5185aab302172a419e", "text": "Implements ISnapshotable .", "title": "", "metadata": ""}
{"_id": "ce52205f787829b287309f94731dbd07", "text": "The accepted ether amount .", "title": "", "metadata": ""}
{"_id": "36f475e6517d7cfc1ee0813ac43a6aac", "text": "Transfer a Kitty owned by another address , for which the calling address has previously been granted transfer approval by the owner .", "title": "", "metadata": ""}
{"_id": "c6bc1dd97cd3085dbb2e66965eab5747", "text": "Sends the funds to the wallet or to the refund vault smart contract if the minimum goal of tokens hasn't been reached yet .", "title": "", "metadata": ""}
{"_id": "a369d9844a233cd5ae4807a0b60b57be", "text": "Returns the next node ( with a smaller key ) in the list for a given node .", "title": "", "metadata": ""}
{"_id": "ede4bb726c11cd5c6d939f6f21da9898", "text": "buys token in behalf of the investors .", "title": "", "metadata": ""}
{"_id": "5af030c22c9d8f540b67b5466b6afd35", "text": "Sends a capped amount of _reward to the msg . sender , .", "title": "", "metadata": ""}
{"_id": "a7949eed2c8f8878f1702240c914ba28", "text": "return all erc721 ents unit .", "title": "", "metadata": ""}
{"_id": "96f9e3b79b82f582e46b4f6cc49d6d47", "text": "Withdraws all of the callers earnings .", "title": "", "metadata": ""}
{"_id": "b44cf0032789ae99e7f8306aa87481e4", "text": "This is a wrapper , which calls and return result from M5Logic the actual logic is found in the M5Logic contract .", "title": "", "metadata": ""}
{"_id": "34edec2dcc9821d7249ccf4c6a45fecb", "text": "register game arbiter , max players of 5 , pass in exact registration fee .", "title": "", "metadata": ""}
{"_id": "0969f52f402fbfff503d70262f9dbf4b", "text": "CHI selling function .", "title": "", "metadata": ""}
{"_id": "20a17527f4fcc707b33b5c4c88aba673", "text": "Failsafe drain only owner can call this function .", "title": "", "metadata": ""}
{"_id": "4295dc581122a85ef11db3c04104245c", "text": "Returns true if the claimant owns the token .", "title": "", "metadata": ""}
{"_id": "aaa676cf58f710eac3d08229205fc8c2", "text": "Makes a checkpoint to start counting a new period .", "title": "", "metadata": ""}
{"_id": "c0c2e632d3b93184c387931e26cd4b49", "text": "Function to add a single address to whitelist .", "title": "", "metadata": ""}
{"_id": "7c76de51220413cffaf325a8c7fd5236", "text": "Level of the game .", "title": "", "metadata": ""}
{"_id": "e5212abb83c2a70c3161511a4a6bb72e", "text": "only the owner have the ability to transfer it ownership .", "title": "", "metadata": ""}
{"_id": "72dd2d2b9b8d45e6eeee73c9613b9689", "text": "Mint RAcoin tokens for token sale participants and add them to Jackpot list .", "title": "", "metadata": ""}
{"_id": "33af9d53f82178bd355e10cdeb528b71", "text": "Implementation ERC721 .", "title": "", "metadata": ""}
{"_id": "fe1884bbeb3e1fd6c5bb209ac12062a4", "text": "called by the owner to lock , triggers stopped state .", "title": "", "metadata": ""}
{"_id": "e7f5cb7f01248f47e89f56d152f2592d", "text": "normal send cc to the market maker contract , sender must approve ( ) before calling method .", "title": "", "metadata": ""}
{"_id": "675d5a018922aff6d15e873f4575d385", "text": "check if an address is whitelisted .", "title": "", "metadata": ""}
{"_id": "38991d5113b061b6a5d004ea44e860bf", "text": "Low level method for adding funds to an account .", "title": "", "metadata": ""}
{"_id": "539e7cad68b53a0e8adac1ec27f9e0c9", "text": "get the Deposit records number .", "title": "", "metadata": ""}
{"_id": "310a9e0e28f8bcd039269217fbdea7ab", "text": "Unlock tokens , hereafter they will be tradable .", "title": "", "metadata": ""}
{"_id": "9a702af0e31fbed7ff253e2774063b1d", "text": "Allows Company withdraw investments .", "title": "", "metadata": ""}
{"_id": "2fc42432212dc5472118e8230d869301", "text": "Check cap and change the stage .", "title": "", "metadata": ""}
{"_id": "8a410c150034e41aae33674279abf4fa", "text": "Issue tokens .", "title": "", "metadata": ""}
{"_id": "5c10b01f83af307aa78c629f9d171a77", "text": "Adds list of new investors to the investors list and approve all .", "title": "", "metadata": ""}
{"_id": "4bc401dc7fec333cd2f525f4ede624fa", "text": "Get Tokens for the company .", "title": "", "metadata": ""}
{"_id": "221cb286cb83c74a270af9d0eef98516", "text": "Claim your reward if you guessed the winner correctly .", "title": "", "metadata": ""}
{"_id": "c78853ffae38ca127c0eb620fcf3c3a6", "text": "Allow adjustment of the closing time .", "title": "", "metadata": ""}
{"_id": "1aea50ffca2e814876bb60c51f8eb62b", "text": "Transfer tokens from investBalance to Balncec for trading .", "title": "", "metadata": ""}
{"_id": "ab0c456cec49e58363e5dbc2c5b7d612", "text": "Function which set the activator of the cycle .", "title": "", "metadata": ""}
{"_id": "202ac12d1a8e6f69a855996f42a7fb97", "text": "Opens the crowdfunding .", "title": "", "metadata": ""}
{"_id": "74adf4e96f42efc82c770cae567922a5", "text": "Buy tokens at this contract's divRate .", "title": "", "metadata": ""}
{"_id": "81af6b15892e37a950088b47fae322bd", "text": "Get the balance of a user .", "title": "", "metadata": ""}
{"_id": "219903f31e7e2e910774cdd0da26cc62", "text": "true if valid purchase .", "title": "", "metadata": ""}
{"_id": "778f4577b8e55e67f33c7a1fbb1736d5", "text": "highWater determines at what contract balance Ether is forwarded to wallet_address .", "title": "", "metadata": ""}
{"_id": "803bddf422cba5da32e99331fac585f6", "text": "returns false if auction start time is 0 , likely from uninitialised struct .", "title": "", "metadata": ""}
{"_id": "c42967266a516b97c8b2a45d5a5b8a1f", "text": "Allows a user to place Bet on the match .", "title": "", "metadata": ""}
{"_id": "7f009dd93c8bf9c7c98823a5abbe77d9", "text": "Function allows for external access to tokenHoler's Balance .", "title": "", "metadata": ""}
{"_id": "02152017eba2807e26ffae12e581755a", "text": "This sets the industry of the company .", "title": "", "metadata": ""}
{"_id": "15351e48c1e7d1015a5709c2c848dba4", "text": "Set both ethAmount and mtdAmount at the same time .", "title": "", "metadata": ""}
{"_id": "fc8df640e96033530b83d7b99ca9db39", "text": "returns correct stage , even if a function with timedTransitions modifier has not yet been called successfully .", "title": "", "metadata": ""}
{"_id": "5860ef8ee659d68f3f6813b45f3c3e7a", "text": "Transfer amount of tokens from a specified address to a recipient .", "title": "", "metadata": ""}
{"_id": "3ed5c64af079dbdcb231c5a4e61dc764", "text": "Used to change presale discount percentage .", "title": "", "metadata": ""}
{"_id": "993db27136510bfa3f0edd7f325ef6c1", "text": "Private functions , can only be called by this contract .", "title": "", "metadata": ""}
{"_id": "350a4cfbf9444698732094284898b9f5", "text": "Champ is no more for sale .", "title": "", "metadata": ""}
{"_id": "5e5354658fa002bbb12c1c6ea9bf94b9", "text": "Removes a user from the presale whitelist .", "title": "", "metadata": ""}
{"_id": "80ca9c4d84761ae5eeb04aab3b3c4d85", "text": "Returns true if the sender of this transaction is a basic account .", "title": "", "metadata": ""}
{"_id": "55aa10e14361d1ff86f8d1549cdaa900", "text": "Setting the setJackpotMinimumAmount value , allowed only for owner .", "title": "", "metadata": ""}
{"_id": "835625d55e55b36ea99ffa0be064a523", "text": "Minimum between two uint256 numbers .", "title": "", "metadata": ""}
{"_id": "816aa1cd67a8bdc7e68668086f00a16f", "text": "for quick overview of current sellerBalances for a user .", "title": "", "metadata": ""}
{"_id": "f4790671e4f7ca5a8041944a0a20bbff", "text": "Drain all the available ETH from the contract back to owner's wallet .", "title": "", "metadata": ""}
{"_id": "d52a0d2c5f7fcec69e62d0b3022b63c1", "text": "Simple function to track the token allocation for a week .", "title": "", "metadata": ""}
{"_id": "98096b011d9d8456722b60151eb55505", "text": "tier_start : The time when the given tier starts .", "title": "", "metadata": ""}
{"_id": "91de4b53df61de5f79874e399a4ffec8", "text": "Ability to tune dynamic price changing with time .", "title": "", "metadata": ""}
{"_id": "3597d4a575093694d3f3ed1a365c2584", "text": "modifier to restruct function use to the bot .", "title": "", "metadata": ""}
{"_id": "0a88cd471c2abe91697943d750c2033b", "text": "deploy a new contract .", "title": "", "metadata": ""}
{"_id": "0281f6f103cef92ee8c0e51eeb338f97", "text": "Put a cutie up for auction to be dad .", "title": "", "metadata": ""}
{"_id": "a18d33b47bcb0ead39d8b37edf800871", "text": "Admin actions .", "title": "", "metadata": ""}
{"_id": "bb5e61aef53dce09631ac77d51855012", "text": "Withdraw ETH for msg . sender .", "title": "", "metadata": ""}
{"_id": "0bd43c131d47450334610cb7cd55c47d", "text": "random function via blockhas and address addition , timestamp .", "title": "", "metadata": ""}
{"_id": "30020892994e9344ece846c05a9e2d59", "text": "Minimum goal is based on USD , not on ETH .", "title": "", "metadata": ""}
{"_id": "47996ab5939c033b2cff61a8c5ad1516", "text": "Return total individual wei amount .", "title": "", "metadata": ""}
{"_id": "03fed167d66a2e7705bb946791428f39", "text": "current time .", "title": "", "metadata": ""}
{"_id": "c55acce741b4dc6f2bc770c9811d5f3d", "text": "allow changing of loyalty wallet as these wallets might be used externally by web apps to dispense loyalty rewards and may get compromised .", "title": "", "metadata": ""}
{"_id": "7a6471bf872fe2050eaa3cd1e56f8c59", "text": "Wheter the DCORP member is accepted or not .", "title": "", "metadata": ""}
{"_id": "97106404283ea4bfb600d22075daa242", "text": "Set rate .", "title": "", "metadata": ""}
{"_id": "a22741e2a904c20e8f22a9abb7e0bab2", "text": "Set the active times .", "title": "", "metadata": ""}
{"_id": "27e62c07d7e14737c90c3d0da7d0dcc7", "text": "Returns the balance of any winner .", "title": "", "metadata": ""}
{"_id": "cb7493cfbf851147c611782186843c77", "text": "Function to change the exchange rate .", "title": "", "metadata": ""}
{"_id": "37c1a6a6b2265661ae7fee2e68efce09", "text": "are there parties which still have't received their SMR ? .", "title": "", "metadata": ""}
{"_id": "e1495d4ec81eeb1f4ceea6e622102eac", "text": "Remove _value tokens from the system irreversibly on behalf of _from .", "title": "", "metadata": ""}
{"_id": "262fbe8e656c942bf3e6dd281e0e1658", "text": "Ensures that canvas's saved state is STATE_OWNED .", "title": "", "metadata": ""}
{"_id": "ac982c6f1c5acefb6a875c75043da5f5", "text": "Whether the account is a registered observer .", "title": "", "metadata": ""}
{"_id": "3ca00c6ae96125c635ff1752a69fbbf7", "text": "modifier for owner .", "title": "", "metadata": ""}
{"_id": "e4b09093bc804d1f08940085da5cdc09", "text": "An internal function to calculate the top 5 heroes power of a player .", "title": "", "metadata": ""}
{"_id": "e583e89d1147ad6d7b5bd31806777ea5", "text": "Add one week to endBlockNumber .", "title": "", "metadata": ""}
{"_id": "6cf98f100de91a60175ac5ee85542641", "text": "Removes an existing worker , removed workers can't be added back .", "title": "", "metadata": ""}
{"_id": "c35166f86e4cff19a7ed8e02571a821e", "text": "For creating Car .", "title": "", "metadata": ""}
{"_id": "907e5eb8c05d181c9d09138d8a79b698", "text": "deauthorize a casino contract address to access the funds v , r , s the player's signature of the casino address , the number of times the address has already been locked and a bool stating if the signature is meant for authourization ( true ) or deauthorization ( false ) .", "title": "", "metadata": ""}
{"_id": "b8801228f1dd378fa1009dac7cf2aea0", "text": "send lockedTokens to devs address require State Success require tokens unlocked .", "title": "", "metadata": ""}
{"_id": "f9a8a2512a834e9ff904f404735dd45c", "text": "Transfer token to .", "title": "", "metadata": ""}
{"_id": "505b35a97cc722b1eb2c95fab3ca8304", "text": "Check account detail .", "title": "", "metadata": ""}
{"_id": "e803ad7e91668e6a70a3107d699a374f", "text": "tx7 player throws slammer .", "title": "", "metadata": ""}
{"_id": "61f43612dfc36176891fc62224f290e6", "text": "isAdmin - Is this address an admin ? .", "title": "", "metadata": ""}
{"_id": "db88b4d58bcd61b4a26952db4f76dc84", "text": "Transfer timelocked tokens ; ignores _releaseTime if a timelock exists already .", "title": "", "metadata": ""}
{"_id": "f4d6505ada044fe2a787d844c1bb91d7", "text": "Retrieve the total frontend token supply .", "title": "", "metadata": ""}
{"_id": "96ba9d92af5320587b75ff941ac8e36d", "text": "Set CourceSale .", "title": "", "metadata": ""}
{"_id": "97c12fe7fce9cafbdbbe095d5590aaac", "text": "Gets the total payment amount for the sender given the current period .", "title": "", "metadata": ""}
{"_id": "cdfc615f643ad2a255f4611e02d57c86", "text": "withdraw with admins involved , only admin .", "title": "", "metadata": ""}
{"_id": "74284bfc78554826720d8ba4434b8008", "text": "A helper routine to bulk clean the storage .", "title": "", "metadata": ""}
{"_id": "27e1314bf250682009692bf44d1af543", "text": "function to withdraw OperationalExpenses funds to the owner wallet can only be called from owner wallet .", "title": "", "metadata": ""}
{"_id": "0f210267bca8de9b95b29da649a55814", "text": "Enable Burning Only if Burning is Off .", "title": "", "metadata": ""}
{"_id": "5fc673385b1c330033d984eaec872e4a", "text": "allows to change the neighbour reward percentage .", "title": "", "metadata": ""}
{"_id": "43c0417e497e6194b087c9f4c6ce64a4", "text": "allow owner to modify address of wallet .", "title": "", "metadata": ""}
{"_id": "21ee35b64ddf37abc28827b63841233a", "text": "transfer to owner any tokens send by mistake on this contracts .", "title": "", "metadata": ""}
{"_id": "c0f21bd015752c4f9cb6c73428f3d0e4", "text": "Storage location for token name .", "title": "", "metadata": ""}
{"_id": "c896001036ff3666820c88b8365f1639", "text": "Function that everyone can call and burn for other tokens if they can be burned .", "title": "", "metadata": ""}
{"_id": "bcfda5f1e21ec1f9acd669547706b326", "text": "Audits and Rewards .", "title": "", "metadata": ""}
{"_id": "9e6aad0f84dbe0af6f2d7b0ceff12f47", "text": "valid only during sale or before sale if the sender is whitelisted .", "title": "", "metadata": ""}
{"_id": "8b0c4e1b2b924d31a9b28ee3dbe01d03", "text": "Dev : Mint ESG Tokens by controller .", "title": "", "metadata": ""}
{"_id": "70910a9db10b3a5b0ad876654aa6b195", "text": "Accepts new ownership on behalf of the Blok token contract .", "title": "", "metadata": ""}
{"_id": "cac3219a7372d9629d350b20b12d99fc", "text": "Burn away the specified amount of DARFtoken tokens .", "title": "", "metadata": ""}
{"_id": "ebf944767bd38b1cf741dff8a90c1a85", "text": "true if buyer is whitelisted .", "title": "", "metadata": ""}
{"_id": "9317d6366c411d785aa467d5f59be5cf", "text": "Creates a new channel between a sender and a receiver .", "title": "", "metadata": ""}
{"_id": "6f4659840c13ff8c4707e97e9b332724", "text": "Withdraws tokens accidentally sent to this contract .", "title": "", "metadata": ""}
{"_id": "ccda7f3e9b3418cb04baf30176a0bdf3", "text": "routine 10 - allows for sale of ingredients along with the respective IGR token transfer ( with url ) implementa\u00e7\u00e3o b\u00e1sica da rotina 10 do farmer requests Certicate .", "title": "", "metadata": ""}
{"_id": "493ad6eff4de296043273b7ad750aea8", "text": "String to bytes32 conversion helper .", "title": "", "metadata": ""}
{"_id": "3e46cfcf3919b85a146f45e9f399e12c", "text": "For offline donation , executed by signer only .", "title": "", "metadata": ""}
{"_id": "b4932cfc94915379f5ec8d3304e7fe22", "text": "Take a gift .", "title": "", "metadata": ""}
{"_id": "754537d8e40480fd3eef97353e2bcce3", "text": "Transfer function extended by check of eth balances and pay transaction costs with GR if not enough eth .", "title": "", "metadata": ""}
{"_id": "76c2866d054a56fdc09f58362eaf290e", "text": "transfers ownership of the token contract .", "title": "", "metadata": ""}
{"_id": "ab8cacc4848ef5509f0915d5e7bb9b91", "text": "allows transfer token .", "title": "", "metadata": ""}
{"_id": "92880040d0604d7b9fe749ffd44769d9", "text": "Member Functions .", "title": "", "metadata": ""}
{"_id": "2ab72e0597be23845655527b12faad74", "text": "Computes tournament bank cut .", "title": "", "metadata": ""}
{"_id": "f5cdfdaa81fd43374bdceada34451bc3", "text": "Allows one of the owners to remove other owner .", "title": "", "metadata": ""}
{"_id": "10e16ad79e44ed55a31a528dcc691233", "text": "Returns the current amount of CLUSTERS .", "title": "", "metadata": ""}
{"_id": "bebd4ba4ddb5ecda04c350b63447c2ce", "text": "Adds a document to the blockchain .", "title": "", "metadata": ""}
{"_id": "8927b8a8d12ccdb4ca452134ed19e9f9", "text": "Returns current user account state profitTotal - how much profit is collected during all rounds profitTaken - how much profit was taken by user during all rounds profitAvailable ( profitTotal - profitTaken ) - how much profit can be taken by user investmentInProgress - how much money are not profit yet and are invested in current or previous round .", "title": "", "metadata": ""}
{"_id": "5b62ba16e98cf5e337b19fcee1ff8020", "text": "Gets the length of the ownership array which represents the number of owned plots which exist .", "title": "", "metadata": ""}
{"_id": "5f7700c0224c27c5d41b4f625c2ab7b7", "text": "Allows the sale admin to set the sale start time and duration ( if it has not started yet ) .", "title": "", "metadata": ""}
{"_id": "f21ff3ec59fc5ea0ec5d309d044b4e2c", "text": "Make sure this board still has a spot for at least one player to join .", "title": "", "metadata": ""}
{"_id": "b3a8912d1d372d935de8aa32c7a89dc4", "text": "Approves the split allocation , so it can be claimed after periods .", "title": "", "metadata": ""}
{"_id": "09fb2e8422fdd8e8e31025a670de63df", "text": "Only super-accredited ponzICO investors ( 0 . 1 .", "title": "", "metadata": ""}
{"_id": "1a30d97f0b128ea6bc8cb5b0948f6b2d", "text": "Contributors can claim refund .", "title": "", "metadata": ""}
{"_id": "35d8082e936afce0c8ca7c0dd4851cf8", "text": "Claim your tokens .", "title": "", "metadata": ""}
{"_id": "2c70326ec2efcdb12eac3dbb3b2a656d", "text": "Set the charity fund .", "title": "", "metadata": ""}
{"_id": "d981c91c818016a71386a4a5770d0880", "text": "Returns an Team by id .", "title": "", "metadata": ""}
{"_id": "b39d5269261e9a7b170ac0a14eecb7f0", "text": "If funds already payed to the specified address .", "title": "", "metadata": ""}
{"_id": "0e4e8281bd3c22290a392db3f2c8fa10", "text": "register investments coming in different currencies .", "title": "", "metadata": ""}
{"_id": "42869ea5db8a849616f4dab0f378458f", "text": "ERC20 Short Address Attack fix .", "title": "", "metadata": ""}
{"_id": "a22308171ddb0b85ac0def8f69f0fa72", "text": "minimum amount of funding to consider the sale as successful ( in euro-cents ) .", "title": "", "metadata": ""}
{"_id": "f9d77a0707d879d3a9628c323bdc9b2b", "text": "deposit a ERC20 token .", "title": "", "metadata": ""}
{"_id": "c9195dff148bcdaa4a56db730561202a", "text": "Create games session request .", "title": "", "metadata": ""}
{"_id": "c311e6efb6ffe5f35fd0c436a159c181", "text": "Transfer tokens from one address to a contract .", "title": "", "metadata": ""}
{"_id": "03ce65f409545432db8f3ea7f8e1788c", "text": "allows the beneficiary and / or the funders to withdraw their funds .", "title": "", "metadata": ""}
{"_id": "861b5e3421594b1b5ec45ea3523c8e5c", "text": "finalization refund check .", "title": "", "metadata": ""}
{"_id": "fa644dfccd5f7d427b87e519002f2b6c", "text": "Lets the owner withdraw all ethers from contract .", "title": "", "metadata": ""}
{"_id": "0f86d594c87279b29dd3092f1d72b406", "text": "Receive a contribution for a donor cosmos address .", "title": "", "metadata": ""}
{"_id": "26df9c1a3c7aad9b3b0517ce17f40eb8", "text": "Paying the tipper .", "title": "", "metadata": ""}
{"_id": "e0a8bae1040b4d84b6d72a455a67d80e", "text": "only allow these functions once the token is released ( minting is done ) basically the zeppelin 'Pausable' token but using my token release flag .", "title": "", "metadata": ""}
{"_id": "1139661d60e73f31a99448b3e5368a3f", "text": "Allow founder to end the crowsale and transfer the remaining tokens of crowdfund to the company address .", "title": "", "metadata": ""}
{"_id": "e459fce65c16ff47e533ce93a7d2f860", "text": "Transfer tokens from an address to another ERC-20 Standard .", "title": "", "metadata": ""}
{"_id": "780670d57e83e5d13106314033c3d787", "text": "Get the Highest Price per each Medal Leader .", "title": "", "metadata": ""}
{"_id": "01eeb3485be88c2b62f9d599ae91fdd6", "text": "Accepts a transfer from a previous registrar ; stubbed out here since there is no previous registrar implementing this interface .", "title": "", "metadata": ""}
{"_id": "b9ecdc1a0dba89bfce130352a0e5db68", "text": "add a way to change the whitelistadmin user .", "title": "", "metadata": ""}
{"_id": "ec78a2bae2675aee903dcd9aa2375c24", "text": "Redeem a new ship for factory owner .", "title": "", "metadata": ""}
{"_id": "ca90b14322119c969b1109a494708708", "text": "Finalizing the crowdsale .", "title": "", "metadata": ""}
{"_id": "c669c7606907841baea00deeac0f1300", "text": "This function pays the receiver an amount determined by the Calculate function .", "title": "", "metadata": ""}
{"_id": "d6c3ecbc64095f620d60db9837118001", "text": "Sets The beneficiary of the fundraiser .", "title": "", "metadata": ""}
{"_id": "51e22e06f95adba8707999f1651d3042", "text": "function transforming a genom byte array to bytes7 type .", "title": "", "metadata": ""}
{"_id": "5022ba55117af4ea82e1a2630d7ea769", "text": "Remove token from ownedTokens list .", "title": "", "metadata": ""}
{"_id": "337061b8cc2935d4b3173ad8ef76a264", "text": "Check to see if a region is available provided the top-left ( start ) section and the bottom-right ( end ) section .", "title": "", "metadata": ""}
{"_id": "212d7f4b919d570642a1afa9cb79ed45", "text": "change random generator .", "title": "", "metadata": ""}
{"_id": "74a88aed75146d13d0258c4e73d21cb5", "text": "In the event of catastrophe .", "title": "", "metadata": ""}
{"_id": "a7e64aef3771dce31c8a9f8a35acbb50", "text": "check token balance in this contract .", "title": "", "metadata": ""}
{"_id": "b39f5a4104021b9517236cafd2526da6", "text": "May only be called by BTC Suisse .", "title": "", "metadata": ""}
{"_id": "76b5d9d16a1aaa5adda3d508d2cb10f4", "text": "Returns the total number of tokens currently in existence .", "title": "", "metadata": ""}
{"_id": "5a2731e59552e98b7ab7f6e7b169b9af", "text": "Calculate the custom fee based on buyer , seller , game token or combo of these .", "title": "", "metadata": ""}
{"_id": "44ee57d11f723dd87809eecaf940f7e4", "text": "unfreeze if ICO succeed .", "title": "", "metadata": ""}
{"_id": "bf5b0097b68f3d2f2b3ff89da7f710a0", "text": "If the close timer has elapsed , stop the crowdsale .", "title": "", "metadata": ""}
{"_id": "3e75997be5bd656192e1bdbb8242e79e", "text": "Standard transfer ( ) overridden to have a chance to thaw sender's tokens .", "title": "", "metadata": ""}
{"_id": "49c0397443f20de593a613f59577b145", "text": "Sets price in wei per 1 SOFIN token .", "title": "", "metadata": ""}
{"_id": "3de8b79e11fb62efc16672e27b24f997", "text": "Lock the vault - All balances have been loaded in correctly - Tokens are transferred on this vault correctly - Checks are in place to prevent creating a vault that is locked with incorrect token balances .", "title": "", "metadata": ""}
{"_id": "ce2b9dd64d5f75fa0cfbd6b741a07233", "text": "releases vested tokens for the specified address .", "title": "", "metadata": ""}
{"_id": "a906623ac64396cdd7c265fbdf7fb1c1", "text": "Compute the earned discount , topped at 60 .", "title": "", "metadata": ""}
{"_id": "24482d6e3c378311f883bf7394f88179", "text": "Check whether the address is in the list of managers .", "title": "", "metadata": ""}
{"_id": "67cbc46052b81ed5b739ba7a69291420", "text": "Allows create tokens .", "title": "", "metadata": ""}
{"_id": "4203745889cf654659be3f693b2350e6", "text": "register token .", "title": "", "metadata": ""}
{"_id": "d52c503dbdc25a416a649b46f36deebe", "text": "Burns n nomins from the pool .", "title": "", "metadata": ""}
{"_id": "124657707b7322f8863e6ae46589c3d3", "text": "Implemented token interface to transfer tokens to this .", "title": "", "metadata": ""}
{"_id": "dcd9c0eed5d40c786e421085ec5b9e9f", "text": "appendDelegate allows for a delegate to be added onto the end of the delegate chain for a given Pledge .", "title": "", "metadata": ""}
{"_id": "4b7893516ef0377cb59bb4133416b023", "text": "Generates the message to sign given the output destination address and amount .", "title": "", "metadata": ""}
{"_id": "96b069d11f470f90954581d671f315f3", "text": "owner send gift to recipient when VG was approved .", "title": "", "metadata": ""}
{"_id": "b722734b350f42fd4d382d7cad31d65c", "text": "Record TRIO transfer schedule to _contributor .", "title": "", "metadata": ""}
{"_id": "9d323faf519eb0ab3b46536b05173d21", "text": "withdrawTokens - withdraw tokens from contract .", "title": "", "metadata": ""}
{"_id": "4a5bbd7923cb789a76a1bac441808329", "text": "Square root of the given value .", "title": "", "metadata": ""}
{"_id": "11dff518e17d323814e1d6bed28c48de", "text": "Withdraws all tokens from a list of wallets and sends all the funds to the forward address .", "title": "", "metadata": ""}
{"_id": "e9a982057535531512719ea1516eabc8", "text": "Returns balance of address .", "title": "", "metadata": ""}
{"_id": "1a53ce59ca3c1584e66964dd9bee1862", "text": "This handles the withdrawal of refunds .", "title": "", "metadata": ""}
{"_id": "86f0a1ea498669e81c4c2d347dbe7f18", "text": "Interest Check Function .", "title": "", "metadata": ""}
{"_id": "9ab619cdf875e34742ab7aef0e7cb110", "text": "start the public sale manually after the presale is over , duration is in days .", "title": "", "metadata": ""}
{"_id": "f634b9d955ac12404bb6a430c1a493d8", "text": "Returns product if no overflow occurred .", "title": "", "metadata": ""}
{"_id": "962ba21d8c2aaa4c2f12ae4c85b0b34b", "text": "modifier that requires there is a game in progress for the player .", "title": "", "metadata": ""}
{"_id": "9bed0834148156d118c1227da8b230e4", "text": "Transfers token ownership from Pre-sale to Sale .", "title": "", "metadata": ""}
{"_id": "9d4ef7e605dae230ce24f88bf0601c12", "text": "If the minimum goal is reached , beyond the void can have the ethers stored on the contract .", "title": "", "metadata": ""}
{"_id": "c67a232ffaa55468548631625ea18fc8", "text": "Verify that the sequence id has not been used before and inserts it .", "title": "", "metadata": ""}
{"_id": "59bf1408b1caa8540c3312ae16f0a8db", "text": "allocate Token .", "title": "", "metadata": ""}
{"_id": "ce93b85099ec2377c9c0b9679c2824fa", "text": "set the default wallet address .", "title": "", "metadata": ""}
{"_id": "33c4e03e3ff6cd5b162ae80e47aa41e4", "text": "gets last value in the series .", "title": "", "metadata": ""}
{"_id": "6a548089e18cff650bd29934c0f417a6", "text": "Initial oracle call triggered by eUSD contract .", "title": "", "metadata": ""}
{"_id": "c0912fc222c916cc42a41cd574c4dadd", "text": "Returns the address currently assigned ownership of a given LinglongCat .", "title": "", "metadata": ""}
{"_id": "c2ea4712343db3e949875dcad994e6f8", "text": "function to verify the signature with given input signer .", "title": "", "metadata": ""}
{"_id": "f77dbded982c3b199e71a6e3ffc35ee4", "text": "executes as function above but allows to provide search range for low gas burning .", "title": "", "metadata": ""}
{"_id": "80ff9a2400c183869e083d1a8d164a6d", "text": "Computes warrior pvp reward .", "title": "", "metadata": ""}
{"_id": "e44a6a30e539fe6126093136997e9802", "text": "Checks if funds of a given address are time-locked .", "title": "", "metadata": ""}
{"_id": "30a0241575b9c0bbabe2eaf3ce4e9760", "text": "Approve a given address to take ownership of multiple deeds .", "title": "", "metadata": ""}
{"_id": "065258faadd0556b365a0e658e0686bf", "text": "Change the feeMake amount .", "title": "", "metadata": ""}
{"_id": "18a14319a49c3ebbbf5a8ee472a411de", "text": "check whether can tranfer tokens or not .", "title": "", "metadata": ""}
{"_id": "5a5d67450a2475c973faa33a4518eb05", "text": "Buy token by sending ether here .", "title": "", "metadata": ""}
{"_id": "1e2d8ba485e498323fdfe31f8b954463", "text": "try to update ratio , 15 days limit .", "title": "", "metadata": ""}
{"_id": "4eb889873845eab1c19b5414fb6b7708", "text": "Size in bytes .", "title": "", "metadata": ""}
{"_id": "261f7427dca8dce465d705b5f0ea49e5", "text": "Manually stages control .", "title": "", "metadata": ""}
{"_id": "a21f4f0e9328a8704c86820acd3aae61", "text": "Storage location of the amount of tokens sold in the crowdsale so far .", "title": "", "metadata": ""}
{"_id": "f391ac235ed90f501659b8eb1b9d026f", "text": "Batch function to detach multiple assets .", "title": "", "metadata": ""}
{"_id": "80131cf5a8cd47e8da676cb47bd6e6ad", "text": "release the 1st year locked token .", "title": "", "metadata": ""}
{"_id": "ad5d5967c676c4eab981ac85b01bcb73", "text": "handle a bet made by a player , validate the player and game add to players balance .", "title": "", "metadata": ""}
{"_id": "39335b3dac39317db3a072a59cf465dd", "text": "allow minter and tokenPorter to mint token and assign to address .", "title": "", "metadata": ""}
{"_id": "4edbcd22f81144519b6fb8d47da856a8", "text": "Delay a donation round .", "title": "", "metadata": ""}
{"_id": "60fef0d4cfac221da60d53820268b078", "text": "exec_id : The execution id ( within the application's storage ) of the created application instance .", "title": "", "metadata": ""}
{"_id": "821ec3f51f35ca7ff56bd0ad8ed290d8", "text": "Shows currently winning proj .", "title": "", "metadata": ""}
{"_id": "9d384706f22c0fa2f81dd5ae9fe56a74", "text": "Register an exchange information entry .", "title": "", "metadata": ""}
{"_id": "4ed75d82045fc63f92e7394e06583221", "text": "For user to update their own secret note .", "title": "", "metadata": ""}
{"_id": "37f5a7c84cf9a7014c8682fb82aacf0f", "text": "Has the sale completed .", "title": "", "metadata": ""}
{"_id": "ec8176ecba8dc89e15af4778ee0594b7", "text": "approve _spender send token .", "title": "", "metadata": ""}
{"_id": "60b2639f87a13208cc9187accb0b7291", "text": "Updates whitelistAdmin address .", "title": "", "metadata": ""}
{"_id": "d72f9ca0fa533f052f6057ef20d42bf6", "text": "1y and 2y locked balances for an account .", "title": "", "metadata": ""}
{"_id": "376452191e0679822531a6fd78611782", "text": "Allow the owner to set a transaction proxy which can perform value exchanges on behalf of this contract .", "title": "", "metadata": ""}
{"_id": "9d40f0ef3d6b8f02bb83f8584df3a23c", "text": "Check _value tokens allowed to _spender by _owner .", "title": "", "metadata": ""}
{"_id": "08e455c366443cca0da97eeb78c1921e", "text": "This function can let business owner update the price of the building they are selling .", "title": "", "metadata": ""}
{"_id": "46c0709c451bf8d09e7dcf08f87a4ac4", "text": "Calculate player profit if player has won for game type 2 ( dice lower wins ) .", "title": "", "metadata": ""}
{"_id": "f429c417fe4e90df6aca4dc3408a9d14", "text": "this will be later set by the owner of this contract .", "title": "", "metadata": ""}
{"_id": "536b09d5d6420b797a1f08a7aef30f32", "text": "Returns a boolean for whether the given address is in the next queued generation .", "title": "", "metadata": ""}
{"_id": "5a8c0335a7f6754655a58bddb5343299", "text": "the frequency of the thief steal depends on the number of artworks in the game .", "title": "", "metadata": ""}
{"_id": "a560feef36c5b2566d24ca71e954bda9", "text": "Set address of a token bankroll ( via divrate ) .", "title": "", "metadata": ""}
{"_id": "a1f006d4a2452e48605652ada017c9a2", "text": "Returns a bool indicated whether a given userName has been claimed .", "title": "", "metadata": ""}
{"_id": "659ee4d871cbd514ba3f7de4add79c06", "text": "Set the cap amount .", "title": "", "metadata": ""}
{"_id": "912be60885e1ef8a8aecfbb950fa660b", "text": "Get the checksum of additional data for the specified whitelisted wallet .", "title": "", "metadata": ""}
{"_id": "f0c5fcb00356cd4cdaf8048dbc9614cd", "text": "set new goal ( emergency case ) .", "title": "", "metadata": ""}
{"_id": "614b335393a854c515ff0493bafa0f4b", "text": "Convinience function to access the shares .", "title": "", "metadata": ""}
{"_id": "f75debd2247a5e46da80ebbae10cf2be", "text": "Add an investor grant for tokens with a vesting schedule .", "title": "", "metadata": ""}
{"_id": "f5f3bb8087911e10ae0ecaee1ec456b7", "text": "method for allocate tokens to beneficiary account .", "title": "", "metadata": ""}
{"_id": "d2a10b9be196799dab9b342315736e08", "text": "LAND Getters .", "title": "", "metadata": ""}
{"_id": "103aa7bd370bc16f0c4b478bb87a36f6", "text": "Given the rate of a purchase and the remaining tokens in this tranche , it will throw if the sale would take it past the limit of the tranche .", "title": "", "metadata": ""}
{"_id": "2522b8e9f79d0800b98d1aa5d27ead63", "text": "Add weapon .", "title": "", "metadata": ""}
{"_id": "4806c10c49401caf8ae49d0aec644699", "text": "Return ether funds .", "title": "", "metadata": ""}
{"_id": "9bbfc573792a129207eea39a002171ba", "text": "Claim a Day for Your Very Own ! .", "title": "", "metadata": ""}
{"_id": "628d47bdd6da802e18b03925466e2f55", "text": "get the total amount of tokens .", "title": "", "metadata": ""}
{"_id": "5ff44b260a356d54d85c72f2146f7d35", "text": "Sets exception price in Wei that differs from release price for single cat based on cat index .", "title": "", "metadata": ""}
{"_id": "b66c2a2ae993cbe6c815121721f55980", "text": "public ( read only ) : calc the active exchange factor ( tokens per ETH ) as a function of already selled amount .", "title": "", "metadata": ""}
{"_id": "50af6dd7197f73abd4bfaa7d55f82588", "text": "only players with tokens .", "title": "", "metadata": ""}
{"_id": "b21d41619ddb9e82454d24aef11452c1", "text": "return contrarians .", "title": "", "metadata": ""}
{"_id": "6d3343c605836b2661183890eac7eeec", "text": "Set exchange Price .", "title": "", "metadata": ""}
{"_id": "3906614c79a74f17f0ca6852106c5b04", "text": "create specified number of tokens and transfer to destination .", "title": "", "metadata": ""}
{"_id": "c28af8abcda6796375b696a91aa95eac", "text": "Allows another contract to spend tokens on behalf of the _from address and send them to the _to address .", "title": "", "metadata": ""}
{"_id": "25220db3a2eee2bcaaa2f11a177a0197", "text": "called from the bidding function above .", "title": "", "metadata": ""}
{"_id": "b8706d1a2da0e4abf4a7059b1afac957", "text": "deploys the token and adds default modules like permission manager and transfer manager .", "title": "", "metadata": ""}
{"_id": "e0bf009ec614d8f0343d6fa546cbfdef", "text": "owner only functions disable contract before activation .", "title": "", "metadata": ""}
{"_id": "dfadfa875b5aff35873005812b0baf87", "text": "function allows for external access to tokenHolders .", "title": "", "metadata": ""}
{"_id": "2fb4082667fac274c6b0240fdb3b9723", "text": "The token buying function .", "title": "", "metadata": ""}
{"_id": "19b5387ebac8d1387637dcad19466fef", "text": "returns note owner .", "title": "", "metadata": ""}
{"_id": "053690edbc4e667254b6f68031e74a03", "text": "burn coins .", "title": "", "metadata": ""}
{"_id": "a1f995080524f45c6cb6be1e6046aa11", "text": "Only Jackpot .", "title": "", "metadata": ""}
{"_id": "502650cc35ea71cb87f805e1adb02814", "text": "Function to add a new investor .", "title": "", "metadata": ""}
{"_id": "086978ae522c1ea5ecac450d30a7b603", "text": "Fill a bid with an unindexed piece owned by the registrar .", "title": "", "metadata": ""}
{"_id": "5aab18b7f6f1b10dbd09ee6af453a682", "text": "Checks if a deposit is held for the provided address .", "title": "", "metadata": ""}
{"_id": "8fa720549ed3b5edcf2884ed8bf2c3db", "text": "found new villgage .", "title": "", "metadata": ""}
{"_id": "58d3260b1d87d7daab5ac885ac33ccd9", "text": "set the address from which you can change the rate .", "title": "", "metadata": ""}
{"_id": "f6efb7e037e8cc3ac3951926e345a537", "text": "Overrides finalize function from RBACERC223TokenFinalization to prevent future minting after finalization .", "title": "", "metadata": ""}
{"_id": "7c9d659dfa21df9af28a8d0ab0e2b287", "text": "Returen whether the beneficiary is whitelisted .", "title": "", "metadata": ""}
{"_id": "dbbf7b64e17154d155b78b8b9dd3dbd5", "text": "Set the fee wallet .", "title": "", "metadata": ""}
{"_id": "ab746974774d3eaaf981e88c9fc10dcc", "text": "function to start the Token Sale .", "title": "", "metadata": ""}
{"_id": "a2e01cc6d601b944373d9f4cf0bfac14", "text": "Transfers given amount of currency to the beneficiary .", "title": "", "metadata": ""}
{"_id": "4166fe4be3702f4a8ff8a5b3e9eb46a5", "text": "owner set fallback function mode .", "title": "", "metadata": ""}
{"_id": "974b6d7ba7ee2f144a05ce0353edb753", "text": "Returns hash of an order .", "title": "", "metadata": ""}
{"_id": "f73250b71dbc4b304c00ee88752213be", "text": "change tour freezing time for candy .", "title": "", "metadata": ""}
{"_id": "578ce2197109786bbd5d0b90368009e7", "text": "return the price buyer will pay for next 1 individual key .", "title": "", "metadata": ""}
{"_id": "7a4df1a3d9e57eefc6861e7377fb4b51", "text": "Declares a public offering plan to make company's tokens transferable .", "title": "", "metadata": ""}
{"_id": "8f132170368838ef600a1a1a3869ff3f", "text": "Start PreICO stage .", "title": "", "metadata": ""}
{"_id": "76f0b862f15f70dab295e8bad2717020", "text": "Prepare the events - set the max_supply - set the wallet for the remaining amount - move to phase 1 .", "title": "", "metadata": ""}
{"_id": "a831fe0021fe185e7dc35d679b3946ff", "text": "Change the symbol attribute of the contract by the Owner .", "title": "", "metadata": ""}
{"_id": "a42795e2e74ffbedc2ac10ff4d970ffa", "text": "Create a crowdsale .", "title": "", "metadata": ""}
{"_id": "dfed784e6bdc6327bec3498ce00b297e", "text": "Request for an item to be registered .", "title": "", "metadata": ""}
{"_id": "aa5c56d44f8df6caeb376d7ddaf02d10", "text": "true if tokens were burned successfully , false otherwise .", "title": "", "metadata": ""}
{"_id": "d0489f288680fb59b0a4c984e40e8ce1", "text": "returns the last Card ID claimed by _claimerAddress in network with _socialNetworkType .", "title": "", "metadata": ""}
{"_id": "2b914934963b23691e68d480c4e8042d", "text": "Modifier function to prepend to later functions rendering the method only callable if the crowdsale is NOT running .", "title": "", "metadata": ""}
{"_id": "83988201b90d420149c403100d7a0335", "text": "returns 2 lists : first of voter addresses , second of token contracts .", "title": "", "metadata": ""}
{"_id": "ee04892306d9b58d6af96c40b967d8fb", "text": "Gets the total amount of deeds stored by the contract .", "title": "", "metadata": ""}
{"_id": "b658ea9b3734c94994660b2bd2e290cc", "text": "where are we ? .", "title": "", "metadata": ""}
{"_id": "ecf18eec97ab8a42a69c764132d5c942", "text": "Internal function for investing as a earlybird member .", "title": "", "metadata": ""}
{"_id": "efa0990a17a26407993c2256846aa357", "text": "Gets whether or not the specified address is currently an admin .", "title": "", "metadata": ""}
{"_id": "d30ce0510e5f8873ad438d28a03962d4", "text": "withdraw funds as / when needed .", "title": "", "metadata": ""}
{"_id": "ccd3728287cca530746c3c2676579cd4", "text": "claim refund owed if you are a contributor and the campaign is in stage failure .", "title": "", "metadata": ""}
{"_id": "31667593b5829a7bf18156181e74bb83", "text": "low level token purchase * * * DO NOT OVERRIDE .", "title": "", "metadata": ""}
{"_id": "79fde21b36855df30d01d5f0b7da464a", "text": "Business logic of _withdrawTo , the code is separated this way mainly for testing .", "title": "", "metadata": ""}
{"_id": "fb908767a93cb97afc9281356552f7d8", "text": "transfer token to owner account for burn .", "title": "", "metadata": ""}
{"_id": "bf568f8f238e9ab071ce8233ec7048ad", "text": "Returns the number of display decimals for a token .", "title": "", "metadata": ""}
{"_id": "b72f1c4dc631cce5665dcec31ceb8b01", "text": "Revokes access to a determined transaction .", "title": "", "metadata": ""}
{"_id": "a4885e53e795dd5049920c16dbc868fe", "text": "Enable / Disable token transfer .", "title": "", "metadata": ""}
{"_id": "4a932cec583cbc08957f8c1d56eb5994", "text": "Adds account addresses to whitelist .", "title": "", "metadata": ""}
{"_id": "cf1d0b29f7a4ed9833d063472d42afca", "text": "Allow _spender to withdraw from your account , multiple times , up to the _value amount .", "title": "", "metadata": ""}
{"_id": "96fdafc6fe91f98259da7dc7baf0890f", "text": "Returns the amount of tokens allowed by owner to spender ERC20 .", "title": "", "metadata": ""}
{"_id": "743ac706e15467e05029f73db29cbba5", "text": "Change the price ( the number of tokens per 1 eth ) , the maximum hardCap for the last bet , the minimum bet .", "title": "", "metadata": ""}
{"_id": "49f9799086f0582e20582345fe44929f", "text": "Tries to find existent FrozenCell that matches ( thawTS , isKYCRequired ) .", "title": "", "metadata": ""}
{"_id": "920bef5a28cfa79ee20ec7886d723501", "text": "- - - Owner functions - - - - - - Owner functions - - - - - - Owner functions - - - .", "title": "", "metadata": ""}
{"_id": "1d0cc0017e9645a4a52087a0a38b14ef", "text": "Concatenates two strings .", "title": "", "metadata": ""}
{"_id": "3288c999b90917a93f1231f997e81a21", "text": "Return a list of versions of an app registered by the maker .", "title": "", "metadata": ""}
{"_id": "5475021fbe45fce2b0a8bfd975e4bce0", "text": "Allows a Maker to cancel their offchain Option order early ( i . e .", "title": "", "metadata": ""}
{"_id": "2dbd170630ab215fd6b84ce30a4928c8", "text": "Allows to remove buggy contract before ICO launch .", "title": "", "metadata": ""}
{"_id": "764fd6b331eed5451bc72bcc7f6522ee", "text": "the contract creator calls this to withdraw contributed ETH to a specific address .", "title": "", "metadata": ""}
{"_id": "5418a0106c0b19919e6804790f7527a3", "text": "Set soft cap .", "title": "", "metadata": ""}
{"_id": "aff4b468b7adbc803bfa962e88d60ca4", "text": "Assigns a new address to act as the CEO .", "title": "", "metadata": ""}
{"_id": "27af586192479b4d22cd4219e3835975", "text": "Require a function to be called from a * token * bankroll .", "title": "", "metadata": ""}
{"_id": "001ad0dec36ef210cf475f4a95665f25", "text": "fee is 2 .", "title": "", "metadata": ""}
{"_id": "fe56f35a4dc0b6d64dd89e6daa9ad9a3", "text": "Freezes all of the transfers after specified block .", "title": "", "metadata": ""}
{"_id": "206e71c9d2c95087f45cc87e07e9ee33", "text": "Allows anyone to transfer the H20 tokens once trading has started .", "title": "", "metadata": ""}
{"_id": "d27b6efd67cc04ffbab4fb2e62532ef5", "text": "Allows the owner to set the rate .", "title": "", "metadata": ""}
{"_id": "20cb1e2f88c1d689b44fc2d5709ae368", "text": "This function can be used by the owner of a token to modify the current price .", "title": "", "metadata": ""}
{"_id": "5f4dd2c5ea1ef0715f1c44fac888ca16", "text": "helper function for processing multiple purchases .", "title": "", "metadata": ""}
{"_id": "d13028c5b420131e05886e0da1f77284", "text": "Transfer Unsold tokens from pre-TDE to Platform .", "title": "", "metadata": ""}
{"_id": "c2a216c9fa91c37854915170f48947e0", "text": "5 of Goo gained will be reinvested into the game ( contests / marketing / acquiring more raffle assets ) .", "title": "", "metadata": ""}
{"_id": "be71c668e80792d4e4b3e6743f00be81", "text": "FEATURE 6 ) : Budget control .", "title": "", "metadata": ""}
{"_id": "ed1ee4133ac8b50a4e38e186ec6ab632", "text": "Checks if caller is either the currently registered Minter or JobsManager .", "title": "", "metadata": ""}
{"_id": "5618e1895e61a39dab5878c4e7053b02", "text": "Remove the wallet ignoring the Exchange pause .", "title": "", "metadata": ""}
{"_id": "a51010fe4daa5c59923f19120d2c137e", "text": "Dissolve function which mines new stamps .", "title": "", "metadata": ""}
{"_id": "c141f8b41157abb41be3e3b1419c81be", "text": "Whether price of asset has been updated less than VALIDITY seconds ago .", "title": "", "metadata": ""}
{"_id": "5f93610e143165f01a17f3af8171eb78", "text": "owner set new wallet .", "title": "", "metadata": ""}
{"_id": "f745461406e8da0d41c25e3469836a54", "text": "Dinamically controls transition between initial MummyAccount , only ambassadors , and public states .", "title": "", "metadata": ""}
{"_id": "24bff2ed26cfb732175e0b68de478bc3", "text": "Register the token symbol for its particular owner .", "title": "", "metadata": ""}
{"_id": "aaa85e560a5dda214f9f8d4cd1b7e681", "text": "Get AssetId Trip Completed Time .", "title": "", "metadata": ""}
{"_id": "5d21040140a1a81f466ecb24dfd427f5", "text": "An uint representing the amount of vested tokens from a specific grant transferableTokens _ / - - - - - - - - vestedTokens rect _ _ _ _ .", "title": "", "metadata": ""}
{"_id": "859ca72e574f399c668235f93d267c0b", "text": "Staking MFT for a node address .", "title": "", "metadata": ""}
{"_id": "81fbcea4d24fb28a2d6d7fa6c6ad9646", "text": "Return the funds to collect for the current point on the ceiling ( or 0 if no ceilings revealed yet ) .", "title": "", "metadata": ""}
{"_id": "23810dd1a1b398e2fa2070b9087a9572", "text": "Calculates the amount of tokens by right , until that moment .", "title": "", "metadata": ""}
{"_id": "3b13ad6156665335634b1455a256a470", "text": "Tokens operations .", "title": "", "metadata": ""}
{"_id": "c9d1ce00711af5b88518f26d56345359", "text": "contribution is the only address that can call a function with this modifier .", "title": "", "metadata": ""}
{"_id": "a26e7093a915ec6830172abbb8ee750d", "text": "extract a bytes32 from a bytes .", "title": "", "metadata": ""}
{"_id": "245942c3d560afc73d15254454a7ca47", "text": "Calculate amount of vested tokens at a specific time .", "title": "", "metadata": ""}
{"_id": "ae85167ad2c21296ad20cfc65c73be51", "text": "cleanup no earlier than 3 days after race ( to allow for enough time to claim ) , or while noone has yet registered .", "title": "", "metadata": ""}
{"_id": "3b6fe59a26c8ec0648d926f9a1ea87d8", "text": "Returns the number of Tulips owned by given address .", "title": "", "metadata": ""}
{"_id": "c84a2dc621866b59a9429db3eb0c6a8e", "text": "airdrop to token holders .", "title": "", "metadata": ""}
{"_id": "cff5c228fc2444557342b06723dec3bb", "text": "Check if a proposal code matches .", "title": "", "metadata": ""}
{"_id": "b091393bb098b4e77219e42ce83ed59c", "text": "new_exec_id : A new , unique execution id paired with the created instance of the application .", "title": "", "metadata": ""}
{"_id": "d79f096f0ed5470f99e8f7e3104697b4", "text": "Closes the crowdfunding .", "title": "", "metadata": ""}
{"_id": "98104d7659e9aa38c68a82ea43d2db90", "text": "Modifies self to contain the part of the string from the start of self to the end of the first occurrence of needle .", "title": "", "metadata": ""}
{"_id": "300e53efede1274c7590a6eae0589054", "text": "Total amount of ETH that the contract has delt with so far .", "title": "", "metadata": ""}
{"_id": "15e345f5c43e3b54a4adb7368ae1832f", "text": "Allow splooger to cause a payload release from your ioucoin , multiple times , up to the point at which no further release is possible . .", "title": "", "metadata": ""}
{"_id": "ffe0c456937a198fe2a6bcc1abe04732", "text": "completes the favor Escrow and pays out the tokens minus the commission fee .", "title": "", "metadata": ""}
{"_id": "837620ebe4db9ba45448be87c87c141e", "text": "Allow participants to clawback ETH in case of Crowdsale failure .", "title": "", "metadata": ""}
{"_id": "dbfaeacd8ab2975fd393bda64c8ef1dc", "text": "lets the owner withdraw from the bankroll .", "title": "", "metadata": ""}
{"_id": "6db29fbc2eb187aa98ae11cedde578f0", "text": "Returns the amount of tokens available to be transferred .", "title": "", "metadata": ""}
{"_id": "810c08f0058f1b9b9cc1ab88887c81b2", "text": "the total number of cards in circulation .", "title": "", "metadata": ""}
{"_id": "45a54d0edc9656534feb36de797a50a2", "text": "Launches and starts a new auction .", "title": "", "metadata": ""}
{"_id": "783fe020ad693d7b487cb196aa729d10", "text": "distribute tokens to an address .", "title": "", "metadata": ""}
{"_id": "00120a40dcf31a5a8ad51f37ab4fb424", "text": "tokens could also be deposited without calling this function .", "title": "", "metadata": ""}
{"_id": "650b067f80bf7358aec68da727588ef9", "text": "Let owner collect ETH .", "title": "", "metadata": ""}
{"_id": "96a90d186f0e0d59bb5a9a8be3a0fa75", "text": "withdraw ETH for teller escrow + save amount sold today for the _from user .", "title": "", "metadata": ""}
{"_id": "9254147099ea3cccb7b301f2fb5a452f", "text": "reported lost wallet / / Critical emergency .", "title": "", "metadata": ""}
{"_id": "c175562a54c9d381c9812e778ca9e180", "text": "Internal , updates the balance of tokens available .", "title": "", "metadata": ""}
{"_id": "4f408c395188a6f63b52e9cab2b854d2", "text": "buyForHackerGold - on the hack event this function is available the buyer for hacker gold will gain votes to influence future proposals on the DST .", "title": "", "metadata": ""}
{"_id": "7d8c839223dbd2a6e7bdc365eebf5408", "text": "add asset data , audit information .", "title": "", "metadata": ""}
{"_id": "04a70861eee3cdea53109c76815c2968", "text": "Returns an Team by index .", "title": "", "metadata": ""}
{"_id": "b1ed0b6ff918d585df7b3d1b7eb05356", "text": "Stores a tier's whitelist .", "title": "", "metadata": ""}
{"_id": "f9ff868bd6ca3442c23a482652fb1582", "text": "Set fee percent for Carboneum team .", "title": "", "metadata": ""}
{"_id": "44ef8c5298d327943c0adef5a67b45f7", "text": "Attach a crowdsale and corresponding token to the proxy .", "title": "", "metadata": ""}
{"_id": "e7836ceddbae776df3ba4610a8c81471", "text": "Withdraw the all funds .", "title": "", "metadata": ""}
{"_id": "48f208284c61784fcb682f521221102a", "text": "finalizeSale ( ) ends the PreTokenSale .", "title": "", "metadata": ""}
{"_id": "bb2e0be9d1c7ad4fdc431e3c17ec4028", "text": "Function to mint reserved tokens to partners .", "title": "", "metadata": ""}
{"_id": "e8705004130ae6d90da310297f291738", "text": "as long as supply 83 * ( 10 * * 24 ) and timestamp is after 6 / 20 / 18 12 : 01 am MST , transferFrom will call halfPercent ( ) and burn ( ) to burn 0 . 5 .", "title": "", "metadata": ""}
{"_id": "6088801e5ea390d8a6dad47870751cb5", "text": "Returns the number of tokens that _owner trusted to spend from his account _spender .", "title": "", "metadata": ""}
{"_id": "a7334250340848fa8722f9ff50b9b2d3", "text": "Adds two numbers a and b , throws on overflow .", "title": "", "metadata": ""}
{"_id": "8f38d37bee98b256eb219a8b11d057f3", "text": "Modifier restricting only the owner of this contract to perform certain operations .", "title": "", "metadata": ""}
{"_id": "40b38d2bb3b4b9315fdd03cf15b09bd8", "text": "Function to prevent targets from sending or receiving tokens ( Freeze User ) .", "title": "", "metadata": ""}
{"_id": "19ff0b2eee70eee08d8dc5df09e2d6c6", "text": "Claim tokens for first / second reserve wallets .", "title": "", "metadata": ""}
{"_id": "91bce44b7d97013bd9839c88780bd945", "text": "Insert node _new beside existing node _node in direction _direction .", "title": "", "metadata": ""}
{"_id": "638c022a1791aa4146a970b12770c466", "text": "Book a room paying with ETH .", "title": "", "metadata": ""}
{"_id": "499b44e57a686e3f0cfe27bf1c85a529", "text": "Instead of sending byte string for the transaction data , string type is used for more detailed description .", "title": "", "metadata": ""}
{"_id": "1aa0700cef3fbfc6518e11378c19eb23", "text": "get mining payout and send to everyone .", "title": "", "metadata": ""}
{"_id": "5cfaf9494d35fdaee8abd5580f84bd91", "text": "Investors can claim profit if loaded .", "title": "", "metadata": ""}
{"_id": "2e98005434db42acc17a1de3fda9b01d", "text": "Check if it is safe to add two numbers .", "title": "", "metadata": ""}
{"_id": "5f3c1f15ef0bb6d4171ab6a80c11622e", "text": "Return ownership to previous owner .", "title": "", "metadata": ""}
{"_id": "e86749ccc3a838da93fd0874d8016bd8", "text": "Only owners can generate a forwarder .", "title": "", "metadata": ""}
{"_id": "51f4e0eab94fb40adc1d55cb551e8812", "text": "set manager to true / false to enable / disable manager rights .", "title": "", "metadata": ""}
{"_id": "c0b3520c7e7df456651f6c0892fabe12", "text": "Returns the current ExtraBonus .", "title": "", "metadata": ""}
{"_id": "043f49b56574b11912b9c9529ff7e4bd", "text": "Remove address from ICO whitelist .", "title": "", "metadata": ""}
{"_id": "01d7da3ffec631e29402d6ba73f4a58a", "text": "from Standard223Token function that is called when a user or another contract wants to transfer funds .", "title": "", "metadata": ""}
{"_id": "a9b8e8ab13e47b14ab41d07e031f558c", "text": "Allow crowdsale owner to start early or extend the crowdsale .", "title": "", "metadata": ""}
{"_id": "f7ab81de9e5e754a62fc31cb4742c312", "text": "Create stage adds new stage to stages map and increments stage count .", "title": "", "metadata": ""}
{"_id": "696634ad22a1aa58e43f35ceb7a7b274", "text": "Get next game id to be associated with a player address .", "title": "", "metadata": ""}
{"_id": "4b68ef221c4823b465cd6e867da7df3d", "text": "Manually back VenusCoin owner address .", "title": "", "metadata": ""}
{"_id": "ca726d57e12f4f412c836c45f42a54f5", "text": "This is the function used by signatories to confirm their agreement over the document hash .", "title": "", "metadata": ""}
{"_id": "be8304117fb115cdfa6781cd11b85650", "text": "not from Wallet ( needs msg . sender ) , .", "title": "", "metadata": ""}
{"_id": "cf53ccb047fd76b78f2d85f9a59a461a", "text": "Returns convention data value for a given index field .", "title": "", "metadata": ""}
{"_id": "430cb4dbace0b5e4770144d46c6470c4", "text": "Signal that externally made payments should be returned back to the participant .", "title": "", "metadata": ""}
{"_id": "c6f7a2411b9ec04bf3d1ebd8d1b2fc29", "text": "The donation address for lost ether / ERC20 tokens should match theCyber's .", "title": "", "metadata": ""}
{"_id": "bcc3e8782fd6eb61e6c59c74fd21b72d", "text": "Only the owner can manage burn function .", "title": "", "metadata": ""}
{"_id": "09a90ed788053bba178695552df6c772", "text": "public public functions .", "title": "", "metadata": ""}
{"_id": "b30e975b93b36dd4c1b963929329da3d", "text": "The address of the controller is the only address that can call a function with this modifier .", "title": "", "metadata": ""}
{"_id": "e1368b257c22e267f3c6d2ddb027a6d2", "text": "Allows the user to deposit funds , where the sender address and max allowed value have to be signed together with the cycle number by the casino .", "title": "", "metadata": ""}
{"_id": "0e8ea20d00b93c5fdf2c45f32428f8bf", "text": "tx6 next player raises slammer .", "title": "", "metadata": ""}
{"_id": "e2139b39f5e75fef114cc5cb420a36f1", "text": "Mint all token collected by second private presale ( called reservation ) , all KYC control are made outside contract under responsability of ParkinGO .", "title": "", "metadata": ""}
{"_id": "36de1ef24785c243613cacede8674ce8", "text": "Opens a new channel or tops up an existing one , compatibility with ERC 223 ; msg . sender .", "title": "", "metadata": ""}
{"_id": "822df63fbad329ef52482498922cb7af", "text": "Transfers an Erc-20 Token owned by this contract to another address .", "title": "", "metadata": ""}
{"_id": "dceb862ab8f5bedbe9661dd322095afe", "text": "Assigns a new address to act as the Bank .", "title": "", "metadata": ""}
{"_id": "6cf0fb4a91c0100f6064a6b8869ca304", "text": "to allow upgrade of Rates and MonetarySupervisor contracts .", "title": "", "metadata": ""}
{"_id": "63d9b6af91ace0e3be09d7ffa2f4112d", "text": "verifies a is greater than b .", "title": "", "metadata": ""}
{"_id": "37550fd6e9ec9d25f622f1c042fadb49", "text": "Returns the number of rabbits owned by a specific address .", "title": "", "metadata": ""}
{"_id": "71750c971e0ff8fb9e9c040bba58eaf6", "text": "Offer ( aenergy / 1 . 0e6 ) . toFixed ( 6 ) .", "title": "", "metadata": ""}
{"_id": "039e7bdaa80df94e5b1f5ac7d7d1c115", "text": "return current bonus percent .", "title": "", "metadata": ""}
{"_id": "689989acf717da0f6610bf142481127b", "text": "Gets the initial hand of a game .", "title": "", "metadata": ""}
{"_id": "ba77fc0618f7d1ec37d00f8efcf8f0a7", "text": "returns the number of seconds for job completion .", "title": "", "metadata": ""}
{"_id": "24d5eb3a00e4270916dca343cc7618a6", "text": "Copies the balance of a single addresses from the legacy contract .", "title": "", "metadata": ""}
{"_id": "abe9a0582d58a741c7ade0a78cd3f1a1", "text": "Gets the total supply available of this token .", "title": "", "metadata": ""}
{"_id": "52d897d2720070957c7ef5d4fa655a47", "text": "Auditor can increase certified assets .", "title": "", "metadata": ""}
{"_id": "714c37aecace0d348933de16727def05", "text": "function used to eliminate address a' will only succeed if the lastPing a is at least 27 hours old .", "title": "", "metadata": ""}
{"_id": "047c4caade6a13f6d7cac21de11bcaab", "text": "decrease price with 5 .", "title": "", "metadata": ""}
{"_id": "9c7b7667f00bf7de6b7a7b51b93b8681", "text": "Transfers a token using TokenTransferProxy transferFrom function .", "title": "", "metadata": ""}
{"_id": "53a542a9bb8526e9ab36ef3ba84102a9", "text": "kill this .", "title": "", "metadata": ""}
{"_id": "69aecb39813b73ea28fcf52f7bdc0430", "text": "withdraws ETH from the contract .", "title": "", "metadata": ""}
{"_id": "03eb00a69325c6bbac3e3012f9f0ab9a", "text": "Returns the location of an app's implementing addresses , registered under a provider .", "title": "", "metadata": ""}
{"_id": "862448b42ae7eb5e6ad03d52db60d410", "text": "Sets event outcome .", "title": "", "metadata": ""}
{"_id": "c27919909e0617bcbe91c667c3f8a2f4", "text": "Accepts new ownership on behalf of the PAIReceipt contract .", "title": "", "metadata": ""}
{"_id": "5a6c6aa48a41caed8adba9b1065fe2f7", "text": "Sets the Token Controller Contract ( CryptoTorch ) .", "title": "", "metadata": ""}
{"_id": "5c72ce1f15c9e1c52abc1fc92cc800d4", "text": "total wei raised in the presale and public sale .", "title": "", "metadata": ""}
{"_id": "3cdab84b8f09cea74793ea68ab613f99", "text": "Get all participants of all channels .", "title": "", "metadata": ""}
{"_id": "af7c9b86bc88c2c4f5d79b4f22c66eb7", "text": "Run script creation contract .", "title": "", "metadata": ""}
{"_id": "151af46e75ceedfd27a45e5fc81e3f00", "text": "Allows owner to transfer tokens assigned to the sale contract , back to the bank wallet .", "title": "", "metadata": ""}
{"_id": "be0d32252005b3f3319600d5571eead8", "text": "Converts other payments system payment to tokens .", "title": "", "metadata": ""}
{"_id": "9e08df33ada9d3f89705d12e163aebca", "text": "TODO need additional check : not clear check of country limit : .", "title": "", "metadata": ""}
{"_id": "b8cf921f177768b6275dd5a7a43f2430", "text": "Is withdraw money from smart contract allowed .", "title": "", "metadata": ""}
{"_id": "665f95b1d5b59109064d8a1d41c6f27b", "text": "internal methods .", "title": "", "metadata": ""}
{"_id": "6594e558841b4613cf34464a617eea75", "text": "transfer ether balance to owner .", "title": "", "metadata": ""}
{"_id": "98764a3de2a3e3f77231dc2d67ab5c2d", "text": "Public Functions of the contract .", "title": "", "metadata": ""}
{"_id": "e8d3bb5fe3439e19bc4b64bbc1ec27d9", "text": "Educo-op transfers the WEDU token to a user .", "title": "", "metadata": ""}
{"_id": "db77df8bf9bf12539a0dce87c561fef6", "text": "if crowdsales is over , the money rasied should be transferred to the wallet address .", "title": "", "metadata": ""}
{"_id": "65bdb1a3eb31fab69e5af2590aaf24b8", "text": "Get number of proposals .", "title": "", "metadata": ""}
{"_id": "61ede68a982b59391759e7cbec26f159", "text": "Mint tokens for crowdsale participants .", "title": "", "metadata": ""}
{"_id": "95289542b7d5c3fcd87818b78577ee52", "text": "Allow splooger to cause a payload release from your Penis , multiple times , up to the point at which no further release is possible . .", "title": "", "metadata": ""}
{"_id": "14428735e7f69171821413829d0bbe82", "text": "Function to create new contract .", "title": "", "metadata": ""}
{"_id": "9757f778dcfd026ddb6baef189d3ce09", "text": "deploys and initializes a new Registry contract , an EIP20 , a PLCRVoting , and Parameterizer to be consumed by the Registry's initializer .", "title": "", "metadata": ""}
{"_id": "6a2c1e4278f5365c0e66571866b40bbd", "text": "Each window is 23 hours long so that end-of - window rotates around the clock for all timezones .", "title": "", "metadata": ""}
{"_id": "09219b29d89bfa2edff94b52ea4a3dba", "text": "Transfer all Ether held by the contract to the owner .", "title": "", "metadata": ""}
{"_id": "b9f8c10608a93a24b4417d2a8aafe3ee", "text": "Modifier to make a function callable only if the reservation was canceled .", "title": "", "metadata": ""}
{"_id": "b411b304547770ca44eb3338fcace138", "text": "Year 1 300 1 , 000 , 000 .", "title": "", "metadata": ""}
{"_id": "94423f7cfa5129be98638eacc189b650", "text": "check item by customer .", "title": "", "metadata": ""}
{"_id": "f8a55c52e19b77ce19f11f349374e972", "text": "implemented the functionality , which checks whether a transfer goes to a contract .", "title": "", "metadata": ""}
{"_id": "b7da19f28d6a7b693f58d1c13f181fd5", "text": "all call_func from msg . sender .", "title": "", "metadata": ""}
{"_id": "672f3832417c0792f5fcd0c6aaca720a", "text": "Approve for transfers .", "title": "", "metadata": ""}
{"_id": "f96fef1314c6390a8b095d7c6bf02ffe", "text": "Transfer function to be compatable with ERC223 Standard .", "title": "", "metadata": ""}
{"_id": "2f3cc1b6dab6f211c1e390d284063600", "text": "Transfer Ether from the contract to the owner .", "title": "", "metadata": ""}
{"_id": "865249fb7904db86870c4e9da4f6d7f7", "text": "trashed returns the number of potatoes owned by a farmer that rot away , taking into consideration the current storage and fields too .", "title": "", "metadata": ""}
{"_id": "2980dc083ed3be53940519860c7f20ab", "text": "Finalizes sale generating the tokens for Boul\u00e9 Dev .", "title": "", "metadata": ""}
{"_id": "c6c2d6f6413d41caff6c2ebffda08b74", "text": "Add bonus to the amount , for example 200 + 15 bonus 230 .", "title": "", "metadata": ""}
{"_id": "261bd0415fe8d1be912ab2b21064e1dd", "text": "public interface to the line of players .", "title": "", "metadata": ""}
{"_id": "7f3f52c64dd9c67756b15a0002286c53", "text": "Change the changeminContribAmount .", "title": "", "metadata": ""}
{"_id": "1455a9b9eb66754990721d41b3b0986d", "text": "Tenderly remove hand from GROWCHAIN and place on another GROWCHAIN .", "title": "", "metadata": ""}
{"_id": "8cd9801aae7c657771f19a1e8562f377", "text": "only callable by referee .", "title": "", "metadata": ""}
{"_id": "9381ce33fe6adff309a4a21e1d6e23fd", "text": "Likewise the big sister dictates the buying price .", "title": "", "metadata": ""}
{"_id": "8626f28fe9ed89b050b49cd634193c63", "text": "update the weight of an existing code .", "title": "", "metadata": ""}
{"_id": "f18e2d6b642efad1bb1b72016b8a0825", "text": "Gets the lockUpAmount tuple of the specified address .", "title": "", "metadata": ""}
{"_id": "34d45d0ebbc39d4a5a380e0fcac24803", "text": "Destroy an amount of token .", "title": "", "metadata": ""}
{"_id": "d06957b5101ab934c790c93c0a28ff77", "text": "Verify if game is approved .", "title": "", "metadata": ""}
{"_id": "116b9c79fd8b5829b48b8c43b3dab40b", "text": "Allow to ( re ) set pricing strategy .", "title": "", "metadata": ""}
{"_id": "91c7403fdaeb8415b4c069c191fb0a7a", "text": "Returns current sell offer for the canvas .", "title": "", "metadata": ""}
{"_id": "2a8399dbeb48607d0208f223258b83a4", "text": "Returns the end time of the ICO .", "title": "", "metadata": ""}
{"_id": "62e116b474b071e82510d31530635228", "text": "Creates the presale vault contract .", "title": "", "metadata": ""}
{"_id": "745f7102c8fa42952aafc417812b3ea8", "text": "Sets the address of the proxy admin .", "title": "", "metadata": ""}
{"_id": "e44fcd01f1fb92f625666f83584703f9", "text": "Return the result of multiplying x and y , throwing an exception in case of overflow .", "title": "", "metadata": ""}
{"_id": "029908f7082cba325ed8359bc6461edc", "text": "End : overriden methods .", "title": "", "metadata": ""}
{"_id": "01d3cc5d70cecb24f96aed441dbb8717", "text": "Public Order View - get mutable details of an order .", "title": "", "metadata": ""}
{"_id": "a1efd6d3e1ea9370fc00adc5d2b26907", "text": "The owner is supposed to whitelist investors for the discounted price at lower price points .", "title": "", "metadata": ""}
{"_id": "8b29b4cbc71c7d77093fa6bedbb3e129", "text": "reset all data of previous session , must run before open new session only escrow can call .", "title": "", "metadata": ""}
{"_id": "988a9f23d7fd552540828f10cac45c8a", "text": "Creates a new Security Token and saves it to the registry .", "title": "", "metadata": ""}
{"_id": "6d9324066c7a031730424e8e9b2ad899", "text": "Transfer the specified amount to the target address ERC-20 Standard .", "title": "", "metadata": ""}
{"_id": "b041000ce3814c78bc2497a4318057fb", "text": "Checks if user has already revealed for specified poll .", "title": "", "metadata": ""}
{"_id": "945bb893eec411ddf78462678d42b70c", "text": "approve someone to be able to transfer tokens from your account .", "title": "", "metadata": ""}
{"_id": "23aedb0caba4782f121fcf1c73f13a39", "text": "Disables the contract and wipes all the balances , can be used only by owner .", "title": "", "metadata": ""}
{"_id": "30e1e65effde766410c5fb0f389e12c2", "text": "Create athlete .", "title": "", "metadata": ""}
{"_id": "46fa7fd4000484d75038b0747d7e226e", "text": "Close the token sale and transfer ownership .", "title": "", "metadata": ""}
{"_id": "672883f3a3224ea62774213cf689dba0", "text": "Unpause the contract operations .", "title": "", "metadata": ""}
{"_id": "c4cf6ee5393559f84e8e86e0f5106816", "text": "Function to initialize storage of proxy .", "title": "", "metadata": ""}
{"_id": "9cf58d52b145490764c73af627bec4c3", "text": "Sets fee used in Interface transactions .", "title": "", "metadata": ""}
{"_id": "fdd489d8e2f0b14c4937969b4d1018f2", "text": "This function is executed at initialization and sets the owner of the contract .", "title": "", "metadata": ""}
{"_id": "0a8d499f6f8058e0d8d296ce4d75ca25", "text": "Private Helpers .", "title": "", "metadata": ""}
{"_id": "48def54b142a0b24f0e791c26c7bfe98", "text": "Returns token price constant .", "title": "", "metadata": ""}
{"_id": "bf8062b4e08f4af975b282d7d32fe91f", "text": "_parameters array of canonical parameters .", "title": "", "metadata": ""}
{"_id": "ee7b2277cfb71c5375e31f18184ae07d", "text": "Pure functions .", "title": "", "metadata": ""}
{"_id": "21f638bf7fa2a47d17743afcd93eadc3", "text": "Storage location of crowdsale admin address .", "title": "", "metadata": ""}
{"_id": "a78d7c14461a61e506e806ae1bf3a4f3", "text": "If phase exists return corresponding bonus for the given date else return 0 ( percent ) .", "title": "", "metadata": ""}
{"_id": "07e3d8992ea4dbcc6c0b4296e0fe75e0", "text": "Set the wei per USD in the crowdsale and then transfer ownership to foundation .", "title": "", "metadata": ""}
{"_id": "e6ab2c213df65d8de818c5ac8c7190bb", "text": "can recommit this gives you more chances if no-one else sends the callback ( should never happen ) still only get a random extra chance .", "title": "", "metadata": ""}
{"_id": "783b674563b9b0a49a04e82250aedca7", "text": "Common internal logic for all user signups .", "title": "", "metadata": ""}
{"_id": "cfd2874216cb98e50f623a8742c420aa", "text": "The below are safemath implementations of the four arithmetic operators designed to explicitly prevent over - and under-flows of integer values .", "title": "", "metadata": ""}
{"_id": "96a7f2999f052b6c7774695bca5ebb28", "text": "Sub-function to calculate interest of each batch .", "title": "", "metadata": ""}
{"_id": "5f345483fb27aac0e0c0eede53fc7e6b", "text": "Issue a new amount of tokens these tokens are deposited into the owner address .", "title": "", "metadata": ""}
{"_id": "5e291ffc1cc0c9f1e887b6e6ad040a59", "text": "owners : send value of tokens to address to , can be called if crowdsale failed and some of the investors refunded the ether .", "title": "", "metadata": ""}
{"_id": "d2d19fe6b25153817eb8279bbc35affe", "text": "Claims SNT at a price determined by the block number .", "title": "", "metadata": ""}
{"_id": "e2aee70ac2ab7cf5ee04119c3b2a5d61", "text": "Sets converstion rate of 1 ETH to EPS .", "title": "", "metadata": ""}
{"_id": "f9756413888a178358479e84009f1da3", "text": "do transfer function will allow transfer from a _to to _from provided if the call comes from whitelisted contracts only .", "title": "", "metadata": ""}
{"_id": "d5c52922b1950f46abdc0e1b87138d8f", "text": "User removed from Blacklist .", "title": "", "metadata": ""}
{"_id": "b41696d69043efb80d98544d43a09090", "text": "Until all tokens are sold , tokens can be transfered to / from owner's accounts .", "title": "", "metadata": ""}
{"_id": "d1151a0947d1478945ba7efcb162ffae", "text": "Allows another account to spend a given amount of tokens on behalf of the sender's account .", "title": "", "metadata": ""}
{"_id": "d273b96d3227bfcc72966416bb0cfa3d", "text": "Backup function if oraclize does not run as scheduled , everyone can run this ! .", "title": "", "metadata": ""}
{"_id": "f6c1e753a62de50b60d37088b804e038", "text": "Allows only presale or crowdsale .", "title": "", "metadata": ""}
{"_id": "8139a24fd4dc385f7f89586fdce6d4f5", "text": "Set initial tokens balance when making the first withdrawal .", "title": "", "metadata": ""}
{"_id": "1744ad02aaa036841d1ca75c0037ce7a", "text": "Start a new voting .", "title": "", "metadata": ""}
{"_id": "d92f7f5d5682718d7328420e280f8f7b", "text": "Updates ownerCut .", "title": "", "metadata": ""}
{"_id": "3e6e99c03bf39c228009c8acf45b4291", "text": "Resume the auction and allow bidding once again .", "title": "", "metadata": ""}
{"_id": "bcd462367ace64531046c3cdabd9f1f5", "text": "Get symbol of this token .", "title": "", "metadata": ""}
{"_id": "0650cd20a9b8d1b3bd497901f017b225", "text": "Search for token quantity address .", "title": "", "metadata": ""}
{"_id": "ad69501abddbc2bd0268b3f054bb32c5", "text": "Start Pre ICO .", "title": "", "metadata": ""}
{"_id": "7bddaacc9376226c8325ba3d24a304fe", "text": "Stop taking donations .", "title": "", "metadata": ""}
{"_id": "e73fbb8b5b1c6d0800658741e83e256a", "text": "Insert Betting Record into storage .", "title": "", "metadata": ""}
{"_id": "3022d2fbe36abd439fa83a36b7b9b312", "text": "Deposits token ( other than ETH ) from msg . sender .", "title": "", "metadata": ""}
{"_id": "fbcf53a5368e24bb434b14c0aaa5a5f8", "text": "Allows the owner to unpause the ICO .", "title": "", "metadata": ""}
{"_id": "615ef49df60e28c4af9d480100e5690d", "text": "uint8 RecordStateRequired .", "title": "", "metadata": ""}
{"_id": "8b2e2677322b72cc3c5723f5be73d2c7", "text": "Transfers the balance of the sale auction contract to the ArtworkCore contract .", "title": "", "metadata": ""}
{"_id": "5446b99d6519ed23dfed94f00c238f3f", "text": "Returns the count of buildings for a city .", "title": "", "metadata": ""}
{"_id": "491d769851a14dac157ef31d7e9d7eab", "text": "Check if an address is an administrator .", "title": "", "metadata": ""}
{"_id": "fbe9ecb14f02d7aaac7c6960de668a5d", "text": "Eligible token and balance helper function .", "title": "", "metadata": ""}
{"_id": "16043f77eeb60f5601f3df6e66e0f1f6", "text": "Updates a Giver's info to change the address , name , url , or commitTime , it cannot be used to change a plugin , and it must be called by the current address of the Giver .", "title": "", "metadata": ""}
{"_id": "ae752efe0675f268a9846bb1dbe71260", "text": "Give a mint delegate permission to mint tokens .", "title": "", "metadata": ""}
{"_id": "6ee6dfa6321cc0f87d5ac5fe94c24aac", "text": "Unlocks all allocation addresses .", "title": "", "metadata": ""}
{"_id": "6e983cab63972ed872b4a718e8ecab9d", "text": "read from end position .", "title": "", "metadata": ""}
{"_id": "48410a0ddff1219a6312693c32a857eb", "text": "fvrr2 ensure that every buy transaction has a maximum of 1 ETH when the contract reaches 10 ETH .", "title": "", "metadata": ""}
{"_id": "b27807d804f90f865107a89162798154", "text": "Token owner calls this function to start profit distribution round .", "title": "", "metadata": ""}
{"_id": "7341773aedf31ce47c87ed9df96c6802", "text": "Is the spender address one of the Sophos Team ? .", "title": "", "metadata": ""}
{"_id": "54f74b47e9139ba6188d854e1522eb8a", "text": "Return a list of current trusted contracts .", "title": "", "metadata": ""}
{"_id": "74d4d2627a17dbdaed5be848882b609c", "text": "Allows the current admin to set the pendingAdmin address .", "title": "", "metadata": ""}
{"_id": "33bf6d0c44034fc0045380f539c5ab38", "text": "Used to change presale cap ( maximum tokens sold during presale ) .", "title": "", "metadata": ""}
{"_id": "1b880bf9dcab4906c857e9c1192a59e4", "text": "Shuffles a single side of a face .", "title": "", "metadata": ""}
{"_id": "79d084ca72ccf64d1298dd037755a67c", "text": "Scan the addressIndices for ensuring the target address is included .", "title": "", "metadata": ""}
{"_id": "a7f1cb8a47eb284dfcf777cf4d6e1e2d", "text": "The schedule is valid .", "title": "", "metadata": ""}
{"_id": "11cf38e839a75dfa3ce10e902cdb81b2", "text": "External functions .", "title": "", "metadata": ""}
{"_id": "97e938e4dd39605e6bce0324ed963660", "text": "Function to reserve RED to private angels investors ( initially locked ) the amount of RED is in Wei .", "title": "", "metadata": ""}
{"_id": "e36b5e20bb7d54468cd1cc191c93f9d7", "text": "Verifies if message was signed by owner to give access to _add for this contract .", "title": "", "metadata": ""}
{"_id": "ee566547237d004f3ae1148ec806632a", "text": "Contract balance withdrawal .", "title": "", "metadata": ""}
{"_id": "cd49ba439df02dbb2bbe29e4e480fef3", "text": "Buy a Sketch that's up for sale now , provided you've matched the Offer price and it's not on offer to a specific buyer .", "title": "", "metadata": ""}
{"_id": "f50f08298b2afcef012d1f766c2fd6c2", "text": "The owner of a company can reduce the price of the company using this function .", "title": "", "metadata": ""}
{"_id": "18b38e060b490be94fef0153496c605b", "text": "This function is used to return winner name .", "title": "", "metadata": ""}
{"_id": "8c532a083e6279dc5e9456bd9ab21a2f", "text": "Allows owner to restrict or reenable addresses to use the token .", "title": "", "metadata": ""}
{"_id": "b93eb93dc4c92e800ed33a5310b31d90", "text": "return the pixels owned by an address .", "title": "", "metadata": ""}
{"_id": "0623d3b6e03f7d8848649ce7eb5326fa", "text": "The amount the recipient will receive if you send a certain number of tokens .", "title": "", "metadata": ""}
{"_id": "52273866487173a9f7547960827f0516", "text": "Called from plugin contract when using items as effect .", "title": "", "metadata": ""}
{"_id": "b83ef7baebb41542de603e3ee581053c", "text": "El propietario puede transferir cualquier ficha ERC20 enviada accidentalmente .", "title": "", "metadata": ""}
{"_id": "0f9de7bf4d8efbfb4ed2f4d35fa01301", "text": "Checks that caller's address is the lender .", "title": "", "metadata": ""}
{"_id": "12cdfdb3dee028ace9dcdeab195361cc", "text": "function to check if the crowdsale has ended .", "title": "", "metadata": ""}
{"_id": "3875d6c7c8d3f89381e7608e4a18b3b6", "text": "end time of the sale .", "title": "", "metadata": ""}
{"_id": "40cd111c30f6818294a20c67320e8829", "text": "Updates the canClaimPartnerTokens property with the new _canClaimTokens value .", "title": "", "metadata": ""}
{"_id": "1640cf20d8bcca6132c35fca900b8095", "text": "This sets the legal home of the company , most probably has legal implications , for example where possible court sessions are held .", "title": "", "metadata": ""}
{"_id": "65a916aeed29988e4f104fe504b19329", "text": "Returns the _name of the token .", "title": "", "metadata": ""}
{"_id": "7664315a5096114777784e28e0b912d1", "text": "Allocated tokens to the presale buyer at a rate based on the total received .", "title": "", "metadata": ""}
{"_id": "cd48c626bdc2c65c290e996100a7c582", "text": "function to remove user from whitelist .", "title": "", "metadata": ""}
{"_id": "e94882fb27d384c8d9d4eaf91fb372cd", "text": "Get start position and length of the data .", "title": "", "metadata": ""}
{"_id": "af66d592631bfab8b4056d053b2e2221", "text": "makes a trade from token to Ether , sends Ether to msg sender .", "title": "", "metadata": ""}
{"_id": "73b3f4ad677fb53deeac621e87231630", "text": "Updates the loan accumulated interests up to the current Unix time .", "title": "", "metadata": ""}
{"_id": "a4f4b24688275d045b7f95425e7c4ad6", "text": "Sell tokens and receive ether from contract .", "title": "", "metadata": ""}
{"_id": "51e9be1c5c70a1228b651efd711f4b59", "text": "Get affiliate rate by level .", "title": "", "metadata": ""}
{"_id": "52c5c077db9ae3e1e8d51e8af989bd08", "text": "Set start time and end time for ICO .", "title": "", "metadata": ""}
{"_id": "23acefb4d5de93cb7321a84135136659", "text": "Set new take percentage .", "title": "", "metadata": ""}
{"_id": "6492b02b5115443cd1a16b3ea5614303", "text": "Unpause the contract by only he owner .", "title": "", "metadata": ""}
{"_id": "2858b91af9669c9de03c6faed65d9435", "text": "clearInventory clears the inventory of a product .", "title": "", "metadata": ""}
{"_id": "f782700a2d3d538b025b2bcb7491f09f", "text": "This function makes it easy to get the mintableAddress .", "title": "", "metadata": ""}
{"_id": "ceb2b0a343e6d903aadded66c631129d", "text": "Initialize a new asset needle is needle is needle is .", "title": "", "metadata": ""}
{"_id": "8f95397345eeeb563edbc773ae4d557d", "text": "Method to get any locked ERC20 tokens .", "title": "", "metadata": ""}
{"_id": "7e01e6a48c761e038db9fb88880643fc", "text": "Updates buy price ( owner ONLY ) .", "title": "", "metadata": ""}
{"_id": "aca78a67388a019d01e3e63eca7022ca", "text": "Allows the user to cashout an amt ( or their whole balance ) .", "title": "", "metadata": ""}
{"_id": "10d98d8c5972d2c15126c0c3b940572c", "text": "Function to get locked tokens amount for specific address for specific lock .", "title": "", "metadata": ""}
{"_id": "ab6bf76767377ca5cb8d11641d2db9b0", "text": "sends ETH to XinXian team .", "title": "", "metadata": ""}
{"_id": "3f141ecccf5c14baff3cf354e82dfc86", "text": "Transfer ERC20 tokens from contract .", "title": "", "metadata": ""}
{"_id": "8f7d9a4f0e0bdeaba529e74c5f9ff3d3", "text": "View functions .", "title": "", "metadata": ""}
{"_id": "7989a00731a09fd25498ca0d1ddb226a", "text": "Allows the current adminOwner to transfer control of the contract to a newOwner .", "title": "", "metadata": ""}
{"_id": "e49efecc5d909c1e67a3bd57932b48e9", "text": "Get info about specific round's investment - by index .", "title": "", "metadata": ""}
{"_id": "8c277b178ca012763fccbba8a423541a", "text": "Returns the token balance of an address .", "title": "", "metadata": ""}
{"_id": "5718dba93c87a62907c2ca528a4c7ce8", "text": "must be called by one of owners .", "title": "", "metadata": ""}
{"_id": "d869ee1d2551fbbfeb94ce58059db8bb", "text": "Getters to allow the same blacklist to be used also by other contracts ( including upgraded FlyingCash ) .", "title": "", "metadata": ""}
{"_id": "75eec833b43f6e6643646818c61c51ad", "text": "simple balance management wrapper for StandardToken to control fundmanager status .", "title": "", "metadata": ""}
{"_id": "e3cdadad7e05fe933571b4d1a5041e96", "text": "Set initial enemy combination .", "title": "", "metadata": ""}
{"_id": "f38dd161d868aa39c8c9a3e2a216474f", "text": "result quantity of days to unfreeze address .", "title": "", "metadata": ""}
{"_id": "4b3c733721aed2d5d54926a0552e239b", "text": "SeeleCrowdSale contract instance mint token .", "title": "", "metadata": ""}
{"_id": "04418e2c155535eb696763b95a80b157", "text": "To block a pending transaction .", "title": "", "metadata": ""}
{"_id": "3f2324c53f6ea2830c929dbcfd8e56cc", "text": "Allows the owner to set the starting time .", "title": "", "metadata": ""}
{"_id": "08170ebc25c57f3398c00d8ef8ad6e81", "text": "work controller functions .", "title": "", "metadata": ""}
{"_id": "ec05850cd6d2e9c2725560b5cfe2eca3", "text": "ERC20 compliant transferFrom function .", "title": "", "metadata": ""}
{"_id": "0bd1f3c17f78be679e2f3573fce01d0c", "text": "Process to check contract current status .", "title": "", "metadata": ""}
{"_id": "58c791f7fcb50febdb372a13304f6b56", "text": "Function to update attach value .", "title": "", "metadata": ""}
{"_id": "ff8bf11844dcac30ec429b417667ccca", "text": "Freezes from sending receiving tokens .", "title": "", "metadata": ""}
{"_id": "cd5e6cce8f5cda8927ae1cf76b125f67", "text": "Use safe math additions for extra security .", "title": "", "metadata": ""}
{"_id": "abac0acd51948831544e7e9291fda926", "text": "Create a Equio conteact with _name , sale address _sale , token address _token , password hash _password_hash , earliest buy block earliest_buy_block , earliest buy time _earliest_buy_time .", "title": "", "metadata": ""}
{"_id": "ac20ee24b766c767d5b49b713f6ef75c", "text": "Mints the below-mentioned amount of tokens allocated to the Vibeo marketing channel .", "title": "", "metadata": ""}
{"_id": "cc33fb4f70581d8cba9359d0cbd5e467", "text": "Internal Book View .", "title": "", "metadata": ""}
{"_id": "dd3b9e7efb3d18c2272e89147ec4caca", "text": "Will get the Sell Ratio .", "title": "", "metadata": ""}
{"_id": "339bcd364e680ee40d141abc6441db93", "text": "get gas for operations .", "title": "", "metadata": ""}
{"_id": "48b7dce867e00643b22163bd934006a4", "text": "Set the previously temp stored upgraded hero genes .", "title": "", "metadata": ""}
{"_id": "48e82bb9907110d2f385c7f526af7142", "text": "ERC20 API functions .", "title": "", "metadata": ""}
{"_id": "e11059d9066be5abb6fdbbdb2c79f896", "text": "Revoke a vesting .", "title": "", "metadata": ""}
{"_id": "62a2182a9de7d49bbbb70fdb023e9439", "text": "Information function .", "title": "", "metadata": ""}
{"_id": "4e0c7018c3bfd7d2bf92aec57880ec7f", "text": "convenience show balance .", "title": "", "metadata": ""}
{"_id": "849b0186c34e6f9f84ec0f9d0f9d272b", "text": "Returns all the relevant information about a specific edition .", "title": "", "metadata": ""}
{"_id": "2edd64c7952c784b96c7a988ad5d7c2a", "text": "Splits the slice , setting self to everything after the first occurrence of needle , and returning everything before it .", "title": "", "metadata": ""}
{"_id": "9f314608d61d2c497124ef4166f26e64", "text": "Check of red_balance .", "title": "", "metadata": ""}
{"_id": "2b5a73c72d7c24c344265cf2abf319c1", "text": "Method called by the vault to cancel a payment .", "title": "", "metadata": ""}
{"_id": "4180a07a7325e209beec47f59393dbf0", "text": "Divide of two numbers ( a by b ) , truncating the quotient .", "title": "", "metadata": ""}
{"_id": "0e2694c827aaf98ee8b1cc51d1e58466", "text": "Modifier to make a function callable only when the contract is not fused .", "title": "", "metadata": ""}
{"_id": "d1e09f0d6bc687b91b729c84d121a661", "text": "Return rate of token against ether .", "title": "", "metadata": ""}
{"_id": "547938daf5656fad8b580cc5f74b730f", "text": "Transfer _amount to _to .", "title": "", "metadata": ""}
{"_id": "426d7780167693594548f367322ddb6a", "text": "Update the current ether price and update the last updated time , refreshing the price staleness .", "title": "", "metadata": ""}
{"_id": "17e25b7fc5f60cee30913418f9de56cf", "text": "Retrieves information about account frozen tokens .", "title": "", "metadata": ""}
{"_id": "214b0711732616bed4d19840ca0f7b1e", "text": "Transfer token in batch .", "title": "", "metadata": ""}
{"_id": "e8c838b6a71fce4fa8bc837ccbc08a2e", "text": "Owner and Admin can change the operations address .", "title": "", "metadata": ""}
{"_id": "46b55f0fee89aa49c8b26b82a03f0345", "text": "asset implementation contract .", "title": "", "metadata": ""}
{"_id": "e02721841e53a6a823fa0bd3464c914c", "text": "Construction helpers .", "title": "", "metadata": ""}
{"_id": "fef2634d63ec56ebdaa180d5d20f6ca3", "text": "Set timestamp of deadline .", "title": "", "metadata": ""}
{"_id": "b3d2cfe970ae1acb7264e393ba5a4997", "text": "Getters and Setter .", "title": "", "metadata": ""}
{"_id": "45e16e8282cdd295ec0f3fc92d611b84", "text": "convert UC amount per ether - Token amount per ether .", "title": "", "metadata": ""}
{"_id": "0588d1d0ebcf2164dfc5de34e004d76a", "text": "Please , be aware that the owner ONLY can change : 1 .", "title": "", "metadata": ""}
{"_id": "3cc0cfeeed29f0267bce170d4548c010", "text": "Only a proposal can update the ApplicationEntity Contract address .", "title": "", "metadata": ""}
{"_id": "ea141a55291dbb0e03e8c1e9c39af2be", "text": "Start Round D .", "title": "", "metadata": ""}
{"_id": "1d50f325fd693eab4b28ac4fad0486c9", "text": "Set allowance for address to interact with contract .", "title": "", "metadata": ""}
{"_id": "9d29fb8cc2cf398f2384842cc6eaec87", "text": "use this function to allow C4F System to adjust provider of C4F Favorcontract .", "title": "", "metadata": ""}
{"_id": "78382f8267a74edbbddb16fe83444028", "text": "the amount of tokens on the exchange for a given user address .", "title": "", "metadata": ""}
{"_id": "13a1c3e7a3162773a5e227016d72fd99", "text": "Access modifier for Editor-only .", "title": "", "metadata": ""}
{"_id": "7542d2da3e8731cbed81a8d5ba50415a", "text": "Mint Blok tokens .", "title": "", "metadata": ""}
{"_id": "10f53405e1e6d5519b1fe3bca86444f5", "text": "investor rate , 1000000 100 .", "title": "", "metadata": ""}
{"_id": "6634a0608b2e7cee44a9c192e407ac17", "text": "increase or decrease allowance .", "title": "", "metadata": ""}
{"_id": "6d8afe011b9b1b15482c5f762d66e412", "text": "assemble the given address bytecode .", "title": "", "metadata": ""}
{"_id": "7d7fe642632e55ec2dc64c266bac3f5b", "text": "allow another account / contract to spend some tokens on your behalf throws on any error rather then return a false flag to minimize user errors also , to minimize the risk of the approve / transferFrom attack vector ( see https : / / docs . google . com / document / d / 1YLPtQxZu1UAvO9cZ1O2RPXBbT0mooh4DYKjA_jp-RLM / ) , .", "title": "", "metadata": ""}
{"_id": "54099180271837b3f8cfa9950df3b452", "text": "Buy Rose with ETH .", "title": "", "metadata": ""}
{"_id": "75106a651c84f42b7cb47f2b50ae0687", "text": "_devCut The developer's cut .", "title": "", "metadata": ""}
{"_id": "b23b89e904e46d128db4cec81786148e", "text": "global getters .", "title": "", "metadata": ""}
{"_id": "37906f17fff7748f6b9b7d458f9d393a", "text": "Fetches information on a future withdrawal event .", "title": "", "metadata": ""}
{"_id": "5abeae2aae7711708896d0f8fbb52ce3", "text": "functions for tokensale information on the website .", "title": "", "metadata": ""}
{"_id": "4d88a2f7c7642d1bcb3bea0806a40449", "text": "This function is used to transfer tokens to a particular address .", "title": "", "metadata": ""}
{"_id": "33a82abfdd7cb2b272c83e0cbc3abad6", "text": "Success of opeining mail .", "title": "", "metadata": ""}
{"_id": "665600b3ce12a9fd0cb7e58d0029d0f8", "text": "Modifier to allow actions only when the contract IS NOT paused .", "title": "", "metadata": ""}
{"_id": "e0e51fd18b25bc9fd0d72b1b0d558241", "text": "Gets the number of deeds of the specified address .", "title": "", "metadata": ""}
{"_id": "9c49d0dfc2a9a4d25897e1f5adb3b639", "text": "agregar Loan to Portfolio .", "title": "", "metadata": ""}
{"_id": "0fb633225ecc71a09168e13269be0611", "text": "Amount in tokens .", "title": "", "metadata": ""}
{"_id": "53eba20f3760118d2f64b60d44e88eba", "text": "Says if the given cell could be spent now .", "title": "", "metadata": ""}
{"_id": "77433308cd2cb34c894565d253640861", "text": "Fetch entries in whitelist .", "title": "", "metadata": ""}
{"_id": "c0b7f0c0e86b7430ec69d0e996429296", "text": "Remove _value tokens from the system irreversibly .", "title": "", "metadata": ""}
{"_id": "fff155ce243e211269b9d249ff38de15", "text": "withdraw tokens , send tokens to target default wallet .", "title": "", "metadata": ""}
{"_id": "7dc3492c8f157742c2ab72e4d91a7f3d", "text": "Stop transactions from team member allocations during lock period .", "title": "", "metadata": ""}
{"_id": "bb383c6b6f1dee798a6cab2fb1d6e4ec", "text": "the uint .", "title": "", "metadata": ""}
{"_id": "3b2c82f8e5591265be3c6ef8b296edf1", "text": "update token contract .", "title": "", "metadata": ""}
{"_id": "2c1ef2eee8c4d49c1a9311c80ad067d7", "text": "Pause Pre-Sale .", "title": "", "metadata": ""}
{"_id": "8d3f90365476591e7441f56aa545c31f", "text": "Checks if an account is the PlatformManager or SupportManager .", "title": "", "metadata": ""}
{"_id": "d61a2908d4de37cb34ca669a8d7a598c", "text": "Functions to provide information to end-user using JSON interface or other interfaces .", "title": "", "metadata": ""}
{"_id": "ef8f38fd589cab8be20fc4fa279ec5b9", "text": "Schreibt dem Absender der Transaktion ( TXfrom ) ihren Wert ( TXvalue ) als Guthaben zu .", "title": "", "metadata": ""}
{"_id": "4a1c721452df108c24ea0388278fadb3", "text": "During the crowdsale .", "title": "", "metadata": ""}
{"_id": "4c92a92c8132e94b32f5943916ec26ee", "text": "Creates a new Item23 with the given name .", "title": "", "metadata": ""}
{"_id": "dac98db38249389db4c7126a2982377e", "text": "Calculate commission on prefunded and raised ether .", "title": "", "metadata": ""}
{"_id": "08586285b6c9f655fe888198ab12f8be", "text": "getNow - helper class to check what time the contract see .", "title": "", "metadata": ""}
{"_id": "c3a12a003938af26debb711278aef2cc", "text": "Return a lock record ( lock amount , releaseTimestamp ) .", "title": "", "metadata": ""}
{"_id": "9842c4641f09660398f442fdf8a7a68d", "text": "This is called by other currency processors to issue new tokens .", "title": "", "metadata": ""}
{"_id": "c6f481d4f3a5c671db94ea9559a28715", "text": "Deploys all Iconics and marks the deploy as complete ! .", "title": "", "metadata": ""}
{"_id": "6a58054d746947cedd0f2a994d774684", "text": "Number of tokens that a specified address would get by sending right now the specified amount .", "title": "", "metadata": ""}
{"_id": "80430923e6f4db26ca3de4a057d89307", "text": "Computes the winning proposal taking all previous votes into account .", "title": "", "metadata": ""}
{"_id": "1c872da9e42c36f0251782c4c00e5444", "text": "Initialises addresses of team , founders , tokens owner , escrow .", "title": "", "metadata": ""}
{"_id": "61f68c7dd0fc8933c5f9b093814af92a", "text": "Allows configuration of the final parameters needed for auction end state calculation .", "title": "", "metadata": ""}
{"_id": "64f17387966de379f79d9a85501043e0", "text": "Send coins during transactions .", "title": "", "metadata": ""}
{"_id": "c8685b657d941ef1973e5ab9a43c457a", "text": "Maps the indices of lenders loans to tokens ids .", "title": "", "metadata": ""}
{"_id": "af4d3bf7c5607fbaa04a3e95644504a2", "text": "Adds a list of addresses to the whitelist .", "title": "", "metadata": ""}
{"_id": "a5ae8deff81aff9fde003d7ad0b6efd6", "text": "New Functionality .", "title": "", "metadata": ""}
{"_id": "3f3f95c95fede5467aa409acb8af595b", "text": "Creates a new categorical event and adds it to the event mapping .", "title": "", "metadata": ""}
{"_id": "de5e6c70bdb681c97f1e59c92e8b1e49", "text": "payout the current balance to the beneficiary , if the crowdfund is in stage success .", "title": "", "metadata": ""}
{"_id": "72f6bd6a99ba5ce357676d8c97ecbcf5", "text": "Activate and deactivate user add or sub final Nac to compute stake to withdraw .", "title": "", "metadata": ""}
{"_id": "51f592f399c6488c2c5551d21b22e0e8", "text": "get the first unsorted offer that was inserted by a contract .", "title": "", "metadata": ""}
{"_id": "7a12d7c98d7af67e9f2315e07cda9484", "text": "Allows owner to transfer ownership of contract .", "title": "", "metadata": ""}
{"_id": "7bb91c371423dca7d59a3db00f8e646d", "text": "Set building cost .", "title": "", "metadata": ""}
{"_id": "a69169ac026e63048d1fb798b1b6aade", "text": "Throws if called when crowdsale is still open .", "title": "", "metadata": ""}
{"_id": "9e721c3577604501b61094955a94a21f", "text": "Complete post .", "title": "", "metadata": ""}
{"_id": "aad8cf15eb6596371f675d0a549c03cf", "text": "Returns the current BTH block .", "title": "", "metadata": ""}
{"_id": "e7ea2f32351dedb5dfd6dfa1155b0488", "text": "The owner can terminate the crowdsale at any time .", "title": "", "metadata": ""}
{"_id": "e9cb38318d1c4b080262df4123c95b73", "text": "Removes list of investors from list .", "title": "", "metadata": ""}
{"_id": "f7718ead0538469f986431bd9114de69", "text": "Fetches current rate ( how many tokens you get for 1 ETH ) .", "title": "", "metadata": ""}
{"_id": "cb34b614730e7054c9ec1507b5223f0d", "text": "Function that indicates whether pre ico is active or not .", "title": "", "metadata": ""}
{"_id": "d5da3c88cefd5dea9d69944e5a10c892", "text": "Add affiliates in affiliate mapping .", "title": "", "metadata": ""}
{"_id": "f892e8173b6a03c45716f9f8a6cdf0c3", "text": "The auction contract variables are defined in LinglongCatBase to allow us to refer to them in LinglongCatOwnership to prevent accidental transfers .", "title": "", "metadata": ""}
{"_id": "3f1fab8ea5b17356795f0010d9f35d2e", "text": "Function to get the latest manifest registration based on registrant address and manifest name .", "title": "", "metadata": ""}
{"_id": "4f967740d39724fbd395e933c7fc3c1b", "text": "Test for web3js interface to see if contract is correctly initialized .", "title": "", "metadata": ""}
{"_id": "0c7af4f595e36ebbd9fc3dfa939e131a", "text": "admin functions in event of an issue .", "title": "", "metadata": ""}
{"_id": "cdbb602625ecbdd42cc808ef7939cedf", "text": "Child contract can override to provide the condition in which the upgrade can begin .", "title": "", "metadata": ""}
{"_id": "1baa6b47ac467bf9fd6c296646f3fc12", "text": "Releases the tokens for the calling sender and _id .", "title": "", "metadata": ""}
{"_id": "124335eba8a6ce5fc620b3d957948df4", "text": "Get remaining funds .", "title": "", "metadata": ""}
{"_id": "5d34f41958f254d6c069df1de3d5afd4", "text": "lets us see the pre-allocated balance , since we're just letting the token keep track of all of the allocations instead of going through another complete allocation step for all users .", "title": "", "metadata": ""}
{"_id": "e9f372ea98275ce83c119476332cebde", "text": "function to check available balance to transfer tokens during locking perios for investors .", "title": "", "metadata": ""}
{"_id": "7daac39b8f873d6ac2840d93f094aac3", "text": "Used when the funder wants to remove themselves as a funder without refunding .", "title": "", "metadata": ""}
{"_id": "5368df5417bede56519ec78900dfe85e", "text": "Internal function for apply commission on purchase .", "title": "", "metadata": ""}
{"_id": "6d8f50325075971810e25308da2712b1", "text": "Create a dispute .", "title": "", "metadata": ""}
{"_id": "b8c555469bd44a9efe0e5704b259f5e2", "text": "Makes execution of the token fallback method from if reciever address is contract .", "title": "", "metadata": ""}
{"_id": "4cade503a5bdec5d4b0d20874cf6c571", "text": "Make tokens tradeable .", "title": "", "metadata": ""}
{"_id": "914c69f60b133dc50a082754347b8f99", "text": "Ensures message is of a valid length .", "title": "", "metadata": ""}
{"_id": "31ef7d04ad5d2ff81adb6c4874e9ed7a", "text": "Aggiunge un nuovo Notaio autorizzato .", "title": "", "metadata": ""}
{"_id": "254865f3a6af1a6d67de8c90e4ddb4fd", "text": "un regulator pu\u00f2 abilitare un address di un altro regulator ? - - per noi NO .", "title": "", "metadata": ""}
{"_id": "bcf1611bbffc79df84e2d78a1c5cfe91", "text": "Internal function used to forward the POLY raised to beneficiary address .", "title": "", "metadata": ""}
{"_id": "7882a1b75e2b674adf8fd68bdc60886a", "text": "set description .", "title": "", "metadata": ""}
{"_id": "e1d9602c7140da11736cdb202fc8e377", "text": "function used to claim the whole reward will only succeed if called by the last remaining participant .", "title": "", "metadata": ""}
{"_id": "5efd194d70a637bc74ecce82966eff6e", "text": "Gets the outstanding reward of a specified address .", "title": "", "metadata": ""}
{"_id": "f67fbf7fc3c8778d593cf1410000f126", "text": "Remove congress member .", "title": "", "metadata": ""}
{"_id": "ef4dc36a851d0cb354447da92280b60c", "text": "Function to remove your orders and refund .", "title": "", "metadata": ""}
{"_id": "5ab883ed7b9010c0109cd1942bf713cc", "text": "_foundersWallet Wallet of founders .", "title": "", "metadata": ""}
{"_id": "d6ca253b63251d5ddaf62cbf6c300491", "text": "Only human , wallet can not be invoked from other contract , .", "title": "", "metadata": ""}
{"_id": "6354b8aed9a6eaab27b1952b298afb05", "text": "Returns the token's name .", "title": "", "metadata": ""}
{"_id": "59b839f91b025c4bbbe364de15b97b97", "text": "The owner of this contract can change the controller of the token .", "title": "", "metadata": ""}
{"_id": "4516b293b94d7fff47b3de8d5307ac63", "text": "refund non compliant member .", "title": "", "metadata": ""}
{"_id": "37c3a3ac20a565ce95f082fdb508ee5e", "text": "Retrieves the balance of a specified address for a specific token .", "title": "", "metadata": ""}
{"_id": "31aee43ee2b8340428b56a443bb86c5c", "text": "Get max number .", "title": "", "metadata": ""}
{"_id": "3f802c13fefd163742c672acbfef2894", "text": "setPrePaidFee : set advance amount , only owner can call this .", "title": "", "metadata": ""}
{"_id": "a265f95347f8525a69c75143eaf9ce43", "text": "Do inner action if check was success .", "title": "", "metadata": ""}
{"_id": "a0f47ce1ce3113941730c77671398e8e", "text": "created every mint of an angel card .", "title": "", "metadata": ""}
{"_id": "07ef7321cd89de00af949ded29bbca35", "text": "Allow the owner to set proxy contracts , which can accept tokens on behalf of this contract .", "title": "", "metadata": ""}
{"_id": "10fa2ea6cf328236cfdd2dfc0b5e0e91", "text": "updateUserClaim updates user claim status and adds token to his wallet .", "title": "", "metadata": ""}
{"_id": "fd1c135e5523a236b75c209119b05041", "text": "advances the step of campaign to presale 2 contract is deployed in presale 1 mode .", "title": "", "metadata": ""}
{"_id": "94a0b8e25fe604159e64caa592fc353a", "text": "Subtracts two numbers , throws on overflow ( i . e .", "title": "", "metadata": ""}
{"_id": "6b0550865dd8ef6596f89449d052e7b0", "text": "Allows the current owner to explicity assign a new depository .", "title": "", "metadata": ""}
{"_id": "855e9c7af0e2fdb7dbd716264749416b", "text": "Get the airdrop reward of the beneficiary .", "title": "", "metadata": ""}
{"_id": "3692ef4a331c6653c84df8230a88399e", "text": "for testing finish ( ) FUNCTION .", "title": "", "metadata": ""}
{"_id": "83e5ca075acdf395f1ed90d0010d40de", "text": "auctionData as uint256 array .", "title": "", "metadata": ""}
{"_id": "17b7cdfa53651324bf54f629e54d70e5", "text": "Transfer tokens to a grant until it is starting .", "title": "", "metadata": ""}
{"_id": "82be616629354bbd18b244197d3bafea", "text": "Get the customer's Tx of payment for MCW data - amount of KWh which is recorded in the Tx .", "title": "", "metadata": ""}
{"_id": "7a5318573dea2b8f904acdbefcafa100", "text": "The external function to call when joining the next tournament .", "title": "", "metadata": ""}
{"_id": "3fc0d5ee1b09ba188d167d8b4ef9538a", "text": "Markes the document with the passed id as invisible .", "title": "", "metadata": ""}
{"_id": "fd73d1f72ce7fef3924eb312b85ea969", "text": "Helper routines to alter the respective max bet limits .", "title": "", "metadata": ""}
{"_id": "f6b56dca495b0cfaccd2d38c0b3496b5", "text": "Adds _account as a new owner .", "title": "", "metadata": ""}
{"_id": "425652f7d04b0d511911c36c9e999206", "text": "checks if the address can transfer certain amount of tokens .", "title": "", "metadata": ""}
{"_id": "b8f41318c37913c5c379ee836002d633", "text": "Standard transferFrom overridden to have a chance to thaw sender's tokens .", "title": "", "metadata": ""}
{"_id": "86bce5f98048537605842dcc9203caaf", "text": "Throws if called by any account other than the curator .", "title": "", "metadata": ""}
{"_id": "41376fcb2ee80785063c07f6c07c1abb", "text": "10 winners of 15 , 000 tokens or . 375 .", "title": "", "metadata": ""}
{"_id": "cae6669f1586b0651ffacb42571d884d", "text": "First signatory consent for contract pause state change .", "title": "", "metadata": ""}
{"_id": "13d2c266866edfc1edb958f03a70c92f", "text": "Allows execution by the ico only .", "title": "", "metadata": ""}
{"_id": "08bba47aba8bcbe0309ec75d7edf31d9", "text": "Modify admin .", "title": "", "metadata": ""}
{"_id": "c86d65d0bd11681568268f39e40b1e1b", "text": "withdraw ( ) function being called with 0x3ccfd60b : : recommened gas limit 30 . 000 .", "title": "", "metadata": ""}
{"_id": "d82d19e3b7ab6829ea3c0b88f2042b1a", "text": "Performs finish hardcap manually .", "title": "", "metadata": ""}
{"_id": "5ede132b4c5bbf0a9d513a0a320af0c7", "text": "Adds Jiffys to escrow for a user .", "title": "", "metadata": ""}
{"_id": "0496876fa3791b726fb272688e0afa3e", "text": "ETH / USD Feed .", "title": "", "metadata": ""}
{"_id": "0b441e320b9f86abd27938acdeceefa4", "text": "Terminate order .", "title": "", "metadata": ""}
{"_id": "c1e14a9892af18145ff326882e7a3158", "text": "Returns true if the token is on auction .", "title": "", "metadata": ""}
{"_id": "71f01988ce52eb8f3d102f597ef3d290", "text": "execution allowed only for contract owner .", "title": "", "metadata": ""}
{"_id": "764bd71e2ea03ee81f20af53c18ffdf7", "text": "Gets cat price for a particular cat index .", "title": "", "metadata": ""}
{"_id": "257683112b84eda910221c2d52599f9d", "text": "use the proxy to execute calldata _data on contract _code .", "title": "", "metadata": ""}
{"_id": "04b9bc683bd29402b71e9e441e6a7029", "text": "true for case of success .", "title": "", "metadata": ""}
{"_id": "ecf535a1313bb118f84b7a6f31b5e5de", "text": "only owner can kill .", "title": "", "metadata": ""}
{"_id": "ca8e86ad992d0f87983e8a8a21b7a225", "text": "the value gained from hitting the characters ( zero is the character was protected ) .", "title": "", "metadata": ""}
{"_id": "d24793a378cfddaa7836961d6fc5604c", "text": "Bulk send tokens ( different amounts ) .", "title": "", "metadata": ""}
{"_id": "207c52a0e9d18cc26930fefdfc74dd80", "text": "Global Ix data .", "title": "", "metadata": ""}
{"_id": "0c523bf9f6f2ee9654d9ed914a04bdeb", "text": "Sends all other tokens that would have been sent to owner ( why people do that ? We don't meow ) .", "title": "", "metadata": ""}
{"_id": "5d0e4be712b7145e2a5e915198a22230", "text": "Gets the player color given an address and board ( overload for when we only have boardId ) .", "title": "", "metadata": ""}
{"_id": "d38db2895d0268b76ae9b1ef5c84672e", "text": "owner set new owner .", "title": "", "metadata": ""}
{"_id": "ac5eae01a1ffa8c89cb48593fd410f75", "text": "Withdraw in 3 month after failed .", "title": "", "metadata": ""}
{"_id": "fd9f9c1bc4312c7010509f2e47172c0b", "text": "adds value to dividends .", "title": "", "metadata": ""}
{"_id": "7f7b282644fb9ab3571cdda8a2304d7b", "text": "Will selfdestruct the contract .", "title": "", "metadata": ""}
{"_id": "441809326e390608f5cbb850db0d6f69", "text": "Dewhitelist a game on all token bankrolls .", "title": "", "metadata": ""}
{"_id": "3d31be32eb9784e0ebde74d327b41da6", "text": "To be called by owner or contract .", "title": "", "metadata": ""}
{"_id": "be935b74afc942cb5755ac639e21f0d2", "text": "Finalize private .", "title": "", "metadata": ""}
{"_id": "fa5d2605fba3476b6190d5722bdaee98", "text": "uint values 0 : amountGet , 1 : amountGive , 2 : expires , 3 : nonce , 4 : amount , 5 : tradeNonce , 6 : feeMake , 7 : feeTake addressses 0 : tokenGet , 1 : tokenGive , 2 : maker , 3 : taker signature binary v 0 rs 0 rs 1 : signature for order v 1 rs 2 rs 3 : signature for trade .", "title": "", "metadata": ""}
{"_id": "4d8789245352d50500b27beb4b4e9fc4", "text": "After Tokens Claimable Duration .", "title": "", "metadata": ""}
{"_id": "2c8e9000e8d4b37957da6dc4a48880fe", "text": "ERC-721 method .", "title": "", "metadata": ""}
{"_id": "a39901f881cf07d52bddfd730301551a", "text": "check address is approved investor .", "title": "", "metadata": ""}
{"_id": "ed64b2818eb35a01d1a61a3fea12f081", "text": "set the minimum sell amount for a token .", "title": "", "metadata": ""}
{"_id": "e5dd1e4e712a03df292406f5be34ce6c", "text": "Callback is called after crowdsale finalization if soft cap is not reached .", "title": "", "metadata": ""}
{"_id": "a3bc5a1868a6b767a42ca6818d22cea4", "text": "withdraw token .", "title": "", "metadata": ""}
{"_id": "fe2f2f5ad1ac50db01ea48cbb8c76b43", "text": "Only fall back when the sender is not the admin .", "title": "", "metadata": ""}
{"_id": "60b10c9a6c387688d92766da18579454", "text": "ERC165 Required .", "title": "", "metadata": ""}
{"_id": "75781408934b34ef661919158c19764a", "text": "manager privilege .", "title": "", "metadata": ""}
{"_id": "e287e55f663e1e956904e17ff4406966", "text": "Get value of MLN amount in Ether .", "title": "", "metadata": ""}
{"_id": "c1ee31e05d74639d4307c9fbe35c5418", "text": "cap minting so that totalSupply TOTAL_TOKENS .", "title": "", "metadata": ""}
{"_id": "3b5c10d0d9ba3becd33ec635c310bb87", "text": "Allows users to claim CLUSTER every 1000 SEGMENTS ( 1 . 000 . 000 .", "title": "", "metadata": ""}
{"_id": "24b6ca3f22fc67268814dd097d7b8fc4", "text": "what is the total supply of the ech tokens .", "title": "", "metadata": ""}
{"_id": "5fe5d54e65f984cf64dafbe0b72476f7", "text": "Redemption request ID ( required in order to cancel this redemption request ) .", "title": "", "metadata": ""}
{"_id": "04ec0f477cce850366c270d088679173", "text": "If the specified address is in our owner list , remove them - this can be called by descendents to ensure the database is kept up to date .", "title": "", "metadata": ""}
{"_id": "e791298783957ec0c122399eca730ffe", "text": "create a CDP from all the Dai in the sender's balance - needs Dai transfer approval .", "title": "", "metadata": ""}
{"_id": "31c8456aa72cc3cd31e65aa35b210ada", "text": "transferOwnershipToGiver allows for the transfer of value back to the Giver , value is placed in a pledged state without being attached to a project , delegation chain , or time line .", "title": "", "metadata": ""}
{"_id": "9ed4d055152aad68a1af01b2866d302a", "text": "A dispense feature to allocate some addresses with Jcash tokens calculation done using token count .", "title": "", "metadata": ""}
{"_id": "fc9cefc44462718031d7656c76f07863", "text": "getListCount ( ) returns the number of records in disclosureList ( not including the empty 0th record ) .", "title": "", "metadata": ""}
{"_id": "e39db4ad3d60f135017bc5b5151dd7b1", "text": "developer modifier .", "title": "", "metadata": ""}
{"_id": "ddca126043923bc7ac2558823256d9ca", "text": "returns the NUMBER of tokens owned by ( _owner ) .", "title": "", "metadata": ""}
{"_id": "d3b7d55b50c0cd7fdab99fc28ff592c3", "text": "trickers the update process via the proxyMaster for a new address _masterCopy updating is only possible after 30 days .", "title": "", "metadata": ""}
{"_id": "27184052b84e419df9529fdf62a15a6e", "text": "Reduce bought token amount .", "title": "", "metadata": ""}
{"_id": "335c07843329ab5dc2c5f2c60563bab8", "text": "function for sending ETH with balance check ( does not interrupt the program if balance is not sufficient ) .", "title": "", "metadata": ""}
{"_id": "68daf77c8afe0997aa783cb97a708ca0", "text": "Returns the owner of top level domain ( e . g .", "title": "", "metadata": ""}
{"_id": "402f1398c0dbde1972150c6f08603d9e", "text": "Hard cap - 49700 ETH for token sale .", "title": "", "metadata": ""}
{"_id": "092b2c60f1a3861c8eeef79d0cdb95dd", "text": "Reveal multiple ceilings at once .", "title": "", "metadata": ""}
{"_id": "45436aa2e710a84ad97fd65d1e8db4a1", "text": "True if-and - only-if _name_ meets the criteria below , or false otherwise : - no fewer than 1 character - no more than 25 characters - no characters other than : - roman alphabet letters ( A-Z and a-z ) - western digits ( 0-9 ) - safe punctuation : ! ( ) - .", "title": "", "metadata": ""}
{"_id": "2171781d2f95609d99e0d80f507d230c", "text": "Change crowdsale address - initially set to 0 .", "title": "", "metadata": ""}
{"_id": "bb7a4ed0b8b79a337d8e369bcaaf1429", "text": "getter to determine if address is in multiOwner list .", "title": "", "metadata": ""}
{"_id": "95d705ec5ef8c8b6e411f522865ee7f7", "text": "Change name and symbol of tokens .", "title": "", "metadata": ""}
{"_id": "c250497737e86fe30d12e554bf346dc3", "text": "put some text in the contract .", "title": "", "metadata": ""}
{"_id": "f00bdaea8b941ec1757490044c7cee17", "text": "swap M5 tokens back to regular tokens when GDP is back to positive .", "title": "", "metadata": ""}
{"_id": "70aad81a2501e2143426d9bf5d5b04e0", "text": "Set a URL to load this scene from .", "title": "", "metadata": ""}
{"_id": "7aff00d975582a758a6e76fbe9b57caa", "text": "Only builder owner methods .", "title": "", "metadata": ""}
{"_id": "0cec821ce867a1f06023c23d678273c3", "text": "set lockup for jishis .", "title": "", "metadata": ""}
{"_id": "b1d8f4e0fbf9f640d68b26f3f02aeffb", "text": "changes the required number of owner signatures .", "title": "", "metadata": ""}
{"_id": "c0701094cab52efca732907139a61ad1", "text": "Mint function for ICO .", "title": "", "metadata": ""}
{"_id": "e2e3382eea0636873dc9ea246902f745", "text": "this method is used to SET user's nickname .", "title": "", "metadata": ""}
{"_id": "f3d49df2b7f8bad0c7010e3f40121834", "text": "Returns the number of tokens sold so far this crowdsale .", "title": "", "metadata": ""}
{"_id": "6bc30f8f09705365e42c26b61e6b6b69", "text": "Query if an operator can move an asset .", "title": "", "metadata": ""}
{"_id": "3b0ff268250e76fae2bcd78a9d73231a", "text": "add a new account .", "title": "", "metadata": ""}
{"_id": "d1f374d04d11e0183da861ad2ffb9dbf", "text": "Modifier to check if a transfer is allowed .", "title": "", "metadata": ""}
{"_id": "cd7c4eb3d4b398a0bee32e46ee134cbd", "text": "Public payable function to buy tokens during sale or emission .", "title": "", "metadata": ""}
{"_id": "f98d149a8762a2a45611a805825b25c7", "text": "Sets the maximum and minimum raise amounts prior to the main sale .", "title": "", "metadata": ""}
{"_id": "c54dcea62310c5775b8efeafc88747b4", "text": "Calculate ( _baseN / _baseD ) ( _expN / _expD ) .", "title": "", "metadata": ""}
{"_id": "aac86b38fcd97e4036469c4b981eaffd", "text": "For creating Collections .", "title": "", "metadata": ""}
{"_id": "a84124458443c0e95a32de0723b587f8", "text": "withdraw surplus tokens .", "title": "", "metadata": ""}
{"_id": "28e73d59b8081534d9fa2fa73eb34a5d", "text": "Transfers tokens from caller / method invoker / message sender to specified recipient .", "title": "", "metadata": ""}
{"_id": "8d7a81ba237f1fdf0f3199d2df0933f9", "text": "Mint coins for a single account .", "title": "", "metadata": ""}
{"_id": "06f5019d028e2fc24e3265cb615de026", "text": "set the parameters for the contribution round associated with variables , functions , events of suffix Pre .", "title": "", "metadata": ""}
{"_id": "cc0311af64135067898a8f56b4ae5d70", "text": "Performs the purchase of a token that is present on the market - this includes checking that the proper amount is sent + appliced fee , updating seller's balance , updated collected fees and transfering token to buyer .", "title": "", "metadata": ""}
{"_id": "c9a7a8012c9b76b4d6c0db34b1f6d6e9", "text": "ERC20 Standard : Send tokens amount of tokens to address to .", "title": "", "metadata": ""}
{"_id": "b5dac01efc50e393f217d745cf6268b9", "text": "Function to compute output tokens from input wei .", "title": "", "metadata": ""}
{"_id": "6c142b751c7c97e72996afb19170eccc", "text": "Check is transaction exist .", "title": "", "metadata": ""}
{"_id": "25523a3b24b99000fb72ed28f52f432a", "text": "Function to forward incomming funds to multi-sig wallet .", "title": "", "metadata": ""}
{"_id": "10e18b4274d13bc9387f80883f4186be", "text": "Trigger a payout immediately , before the scheduled payout , if the data source has already been updated .", "title": "", "metadata": ""}
{"_id": "085502c86cbb951e170caed831d9c0b6", "text": "Set the current state of the crowdsale .", "title": "", "metadata": ""}
{"_id": "3d00113faa8f6d14a76a74c6dab3a454", "text": "Sets the current ETH wei rate - How many ETH wei per mill .", "title": "", "metadata": ""}
{"_id": "ce6a203eb0a46b84dbc0eb3940d3730b", "text": "Get the address of a contract .", "title": "", "metadata": ""}
{"_id": "6890d7165e96e482cc9af6483cd1c7fc", "text": "change Edntime .", "title": "", "metadata": ""}
{"_id": "a373949501f4140e6f94e2e85a8a79f1", "text": "Changes the owner of the contract .", "title": "", "metadata": ""}
{"_id": "00dd2fad7dfd57b5305c08182a8ad8c4", "text": "Internal function to set the previously temp stored upgraded hero genes .", "title": "", "metadata": ""}
{"_id": "8f426edabbd2714845d9c6d3e5445b2f", "text": "Connect to gene contract .", "title": "", "metadata": ""}
{"_id": "152ba1a118c7f76c5aa24c4e8dc891b8", "text": "Compute the UmbrellaCoin bonus according to the investment period .", "title": "", "metadata": ""}
{"_id": "6029cc340d814316a19c5e7774d3b4d3", "text": "owner call to trigger a stop state .", "title": "", "metadata": ""}
{"_id": "aa3e0539182f1ea487576be15bba9c85", "text": "overriding StandardToken approve .", "title": "", "metadata": ""}
{"_id": "e8181dda20421839d541d45431ce9653", "text": "Close the auction .", "title": "", "metadata": ""}
{"_id": "2fb5d548ab014e6b6cd4d142d10aa6ab", "text": "_ ( / _ _ _ ) . onlyDevs .", "title": "", "metadata": ""}
{"_id": "d83931406845313253fb3df61890d8d5", "text": "AutoCoinToken Contract .", "title": "", "metadata": ""}
{"_id": "9c20179507f5ed963234c79a64be2ba0", "text": "Cancels the ownership transfer .", "title": "", "metadata": ""}
{"_id": "1d8a10b10dee059448729a9917697cf1", "text": "Finalizes the sale and token minting .", "title": "", "metadata": ""}
{"_id": "c1ac133f2049baf168ea2c441ebba751", "text": "If there were any issue / attach with refund owner can withdraw eth at the end for manual recovery .", "title": "", "metadata": ""}
{"_id": "26c9897b3ea96bccd66a0077295f56da", "text": "read the demurrage configurations .", "title": "", "metadata": ""}
{"_id": "4f8b9c4d399631db57dae364eb68f7ed", "text": "Distribute tokens to pre-ICO investors using pagination .", "title": "", "metadata": ""}
{"_id": "d3098ec6c263b181affe0e01955825ad", "text": "This function will set the conversion rate .", "title": "", "metadata": ""}
{"_id": "8a66c0debd16bb9442e8b772d58cdd44", "text": "Allows owner to stop the crowdsale immediately .", "title": "", "metadata": ""}
{"_id": "ef8b7f8be88466ab9a15eb44a7f4a499", "text": "Allows other contracts to check if a store is set .", "title": "", "metadata": ""}
{"_id": "2442b3ea373e3a670dedcff17e235156", "text": "mints ElePig wallets .", "title": "", "metadata": ""}
{"_id": "e9aebd1f8d293ad72ad4034cceb20f1d", "text": "Deposit LRC for ETH .", "title": "", "metadata": ""}
{"_id": "9c034f60ee3faeb3220813c8be73093f", "text": "Owner must release all sale smart contracts .", "title": "", "metadata": ""}
{"_id": "1d6a6d0c61ccbf22964154a0a07420a4", "text": "Queries the total supply of tokens at a specific block number will return 0 if called before the creationBlock value .", "title": "", "metadata": ""}
{"_id": "804cccd26d21dcf428ab929bdb0a1dca", "text": "owner functions .", "title": "", "metadata": ""}
{"_id": "3ef42c9bbf0374f98476049db3b731f9", "text": "Reopens closed sale to recalcualte total tokens sold if there are any late deals - such as delayed whitelist processing .", "title": "", "metadata": ""}
{"_id": "314cd3e5e85e214f620b3788fc63a423", "text": "Initialize sell card for future .", "title": "", "metadata": ""}
{"_id": "61d31f82d96bb407a9dd0bc00c6fb822", "text": "token related .", "title": "", "metadata": ""}
{"_id": "ee3378e404799dfe31f0b486a71cbd19", "text": "Will set the Market Comission Ratio .", "title": "", "metadata": ""}
{"_id": "b84439a0a73f488fc4d68a6c2246976a", "text": "Allow to set soft cap .", "title": "", "metadata": ""}
{"_id": "6f075b0ebf467c736ed8f946699fac7f", "text": "Return the total number of curves committed ( can be larger than the number of actual curves on the curve to hide the real number of curves ) .", "title": "", "metadata": ""}
{"_id": "34b9c874866f54ff16cf01ec72bf6770", "text": "General call function where the contract execute an arbitrary call with data and ETH following governor orders .", "title": "", "metadata": ""}
{"_id": "545e082a8c9f0762b725c0760c766ff5", "text": "This function enables the whitelisted application ( internal application ) to set whether or not the softcap was reached .", "title": "", "metadata": ""}
{"_id": "d886fee66757fa2a74af32e8841106c6", "text": "purchase promo pixels that cost nothing at start .", "title": "", "metadata": ""}
{"_id": "0b9600dd1a499dd4bea0c9b602d05c73", "text": "Calculate bounty value by reduction equation .", "title": "", "metadata": ""}
{"_id": "dee5b34ee71967276164c65e12a3dcd6", "text": "Clear the pending list .", "title": "", "metadata": ""}
{"_id": "50a2131828b50ca0362b92b64edca2ff", "text": "Fuction for investor , minimun ether send is 0 . 1 , .", "title": "", "metadata": ""}
{"_id": "588c70310c04358a53c2a9dcc6c547e8", "text": "return the number of deployed .", "title": "", "metadata": ""}
{"_id": "e5ddc4c8e9562d0ed3320e4cef595d78", "text": "Returns the total number of LinglongCats currently in existence .", "title": "", "metadata": ""}
{"_id": "10e7cde3f15f18dae38d8fcdf2145315", "text": "get price depending on time .", "title": "", "metadata": ""}
{"_id": "e1c7a3980b7657af8a3247a33c667e87", "text": "Get token identifier by index .", "title": "", "metadata": ""}
{"_id": "7213724bd9f8023affdde4ba2def4d46", "text": "Adding a manager .", "title": "", "metadata": ""}
{"_id": "c0c7d1b23958e87114ad496f2a58fc7a", "text": "Returns wait query oracle count .", "title": "", "metadata": ""}
{"_id": "97bbe854f401772de824a56daed80536", "text": "Returns the price in Wei paid to Oraclize .", "title": "", "metadata": ""}
{"_id": "6fc42d9312a3b4397782d3ad7851f0dd", "text": "Allow to change the recipient multisig address .", "title": "", "metadata": ""}
{"_id": "970312cec5ff0ff7dc12ee51b17c853d", "text": "Allows the burning of tokens .", "title": "", "metadata": ""}
{"_id": "2251fdb27f15e811b9e67026d2154e1f", "text": "getBountyData ( ) : Returns the data of the bounty .", "title": "", "metadata": ""}
{"_id": "cae39740ab191e3ae91589d267efc8c4", "text": "Add address to Tech Operation .", "title": "", "metadata": ""}
{"_id": "d8134ee83fc0f0a863cba2077545fcaa", "text": "Buy Token 1 token for x ether .", "title": "", "metadata": ""}
{"_id": "9050a08a1726a38f3ac33b382f376afd", "text": "scan the full transaction bytes and return the first two output values ( in satoshis ) and addresses ( in binary ) .", "title": "", "metadata": ""}
{"_id": "afcaec4138389d00064559961df40edc", "text": "Allows the owner to confirm payments ; since authorizePayment is the only way to populate the payments array this is generally used when autopay is false after a payment has has been authorized .", "title": "", "metadata": ""}
{"_id": "562de302f98eb22bde92f9b0963cf1cd", "text": "function to set the sale advertisement price can only be called from owner wallet .", "title": "", "metadata": ""}
{"_id": "d084268f38bd1d36e8f91dc870e7240f", "text": "Throws if called by any account other than the dealer .", "title": "", "metadata": ""}
{"_id": "d2aef765b028676fc0369fa30a2cc438", "text": "Get the index to access a section object from the provided raw x , y .", "title": "", "metadata": ""}
{"_id": "76a054254f0e6013cb4e9c77b7ac8db6", "text": "Set whitelist state for an address .", "title": "", "metadata": ""}
{"_id": "0a5d206e0f9f3537759c90fe61ad06bd", "text": "overriding Crowdsale buyTokens to add partial refund logic .", "title": "", "metadata": ""}
{"_id": "4883473ee12fe56bdfe4d1c1b2d7e7f8", "text": "Extracts tokens from the contract .", "title": "", "metadata": ""}
{"_id": "f07ad759c2a5e24a55f05def8a02759a", "text": "Whatever calls this should have either the optionalProxy or onlyProxy modifier , and pass in messageSender .", "title": "", "metadata": ""}
{"_id": "7d98fc4368f3acf70426aa094cf8f7b5", "text": "Function of delegating account management for a certain amount .", "title": "", "metadata": ""}
{"_id": "93914e5799647917b89467d5b651704b", "text": "Sets a master key .", "title": "", "metadata": ""}
{"_id": "20c5ea6cecf26813c592d0ffbe80e872", "text": "updates one of the token reserves can only be called by the owner .", "title": "", "metadata": ""}
{"_id": "61121e397caf0da8cad345f90248c85e", "text": "Function for getting the given block hash .", "title": "", "metadata": ""}
{"_id": "96cdc4bee25c97e1b5567a80cab35672", "text": "maps a given number to the new range ( old range 1000 ) .", "title": "", "metadata": ""}
{"_id": "78eb4f135902d2ae7d70629e3199ea38", "text": "Fetch some statistics about the ICO .", "title": "", "metadata": ""}
{"_id": "282e82a8926c2bde0e5c15fbe0a0c6d3", "text": "Deploy ESCBCoin is called only once to setup all the needed contracts .", "title": "", "metadata": ""}
{"_id": "71e8a9180f74d905d70c935bdf11cf4f", "text": "Set migration Agent .", "title": "", "metadata": ""}
{"_id": "3ccba3527297f317ee054916ff46262f", "text": "Destroys a loan , the borrower could call this method if they performed an accidental or regretted approve of the loan , this method only works for them if the loan is in pending status .", "title": "", "metadata": ""}
{"_id": "15970b960dad069fcc9f564f88356b3c", "text": "Function to add a new event from TheHuman team .", "title": "", "metadata": ""}
{"_id": "de19135dcad9f7fb2e2c75dc5cbdb471", "text": "Proxy function which allows sending of transactions in behalf of the contract .", "title": "", "metadata": ""}
{"_id": "6d4744fb224d41133a501c6cc8d38a13", "text": "Changes the controller of the contract - only the Controller or Owner can execute this operation .", "title": "", "metadata": ""}
{"_id": "936b82850e4e9f3684feea44a29c2270", "text": "Refunds total bet amount iff it was not possible to determine the winner .", "title": "", "metadata": ""}
{"_id": "7ded9e1f50372d3bcd030106988ac8f1", "text": "returning an array of structs is not allowed , so its time for a hackjob that returns a raw bytes dump of the combined home and away bids clients will have to parse the hex dump to get the bids out .", "title": "", "metadata": ""}
{"_id": "3e61ea81643e8089deb170882d8ffbe8", "text": "Approve lava tokens for a smart contract and call the contracts receiveApproval method all in one fell swoop .", "title": "", "metadata": ""}
{"_id": "6d6e3fb0fe398824f7b8c7809a03ece7", "text": "Specify purchasing limits for a single account : the limit of tokens that a participant may purchase in a set amount of time ( blocks ) .", "title": "", "metadata": ""}
{"_id": "79ca50bfe249147a61125bbdadb45e5e", "text": "callback for Oraclize .", "title": "", "metadata": ""}
{"_id": "3a40399c90b5ab18dd245fc5a8d018a7", "text": "synthesize : call _isCooldownReady , pending assets , fire SynthesizeStart event .", "title": "", "metadata": ""}
{"_id": "a3a7d42f599b294e38cdf73d5f7873db", "text": "Triggers unsold tokens to be issued to target address .", "title": "", "metadata": ""}
{"_id": "cc6a32aa2225010f4ba1fd511021b14f", "text": "Computes the id for a node in a given Grove index which is sha3 ( indexId , id ) .", "title": "", "metadata": ""}
{"_id": "fd744db77d142d9af20a01b0e2656cfb", "text": "transfer balance to owner .", "title": "", "metadata": ""}
{"_id": "5d0bf8f1eaedba077d99c94e70ec965e", "text": "Value should be a public key .", "title": "", "metadata": ""}
{"_id": "855e44c213f7cba59d649eb97d025493", "text": "function for safe subtraction .", "title": "", "metadata": ""}
{"_id": "198c317e700d9a78598d81e1503af652", "text": "unpause ( overridden function ) .", "title": "", "metadata": ""}
{"_id": "17174d4a75d58c89b59857fd007294eb", "text": "add a new activity account .", "title": "", "metadata": ""}
{"_id": "ac2d0ce71b6c9ac96ed79858f258b9e5", "text": "actually probably just want a length getter here as default public mapping getters are pretty expensive .", "title": "", "metadata": ""}
{"_id": "dd56a4416b53d06cea0107cf801f68ae", "text": "Allows a bidder to withdraw their bid .", "title": "", "metadata": ""}
{"_id": "c7895c443681cefb6c95c464682aa8d6", "text": "presale control .", "title": "", "metadata": ""}
{"_id": "e8682a34d9c52fc6fe93057b17524828", "text": "process a fight .", "title": "", "metadata": ""}
{"_id": "1d7c6aeb56f89f4d0c03b16badf69bcd", "text": "function to transfer agreement ownership to other wallet by owner it's in ERC20 form so owners can use standard ERC20 wallet just need to pass full balance as value .", "title": "", "metadata": ""}
{"_id": "b77973738842073eff9e8aa9bc1ab3e9", "text": "Returns the amount of IBST allocated .", "title": "", "metadata": ""}
{"_id": "ed30f0836deffa5027dc9a60f6fb7d79", "text": "result - value * promille / 1000 .", "title": "", "metadata": ""}
{"_id": "d6290019f57d6d9f636464d249a76d7a", "text": "Bidders that have been outbid can call this to retrieve their ETH .", "title": "", "metadata": ""}
{"_id": "95b34bc8f66006fdf6c1972d55e00edb", "text": "This function permits anybody to withdraw the funds they have contributed if and only if the deadline has passed and the funding goal was not reached .", "title": "", "metadata": ""}
{"_id": "0a24cde3452ffe66dbca71845974b158", "text": "Create the MIND token ( override createTokenContract of StandardCrowdsale ) .", "title": "", "metadata": ""}
{"_id": "1ca475c7ad96ef70e492dc8509827309", "text": "Pauses the MVM .", "title": "", "metadata": ""}
{"_id": "d99914d2bf36e746d38a32cb94df54ce", "text": "Transfer the specified amount of LOT to the specified address .", "title": "", "metadata": ""}
{"_id": "3e317d714b94dfcdeb2129e26674d486", "text": "delegate your wallet to someone , usually to a smart contract .", "title": "", "metadata": ""}
{"_id": "885bff18899f08343b92b23aa0a2a36e", "text": "Private method for creating Element .", "title": "", "metadata": ""}
{"_id": "9fef6dffb2e89530331c8864bd0b67cb", "text": "Allows the the contract owner to withdraw all unsold base tokens , also deinitializes the token .", "title": "", "metadata": ""}
{"_id": "83c87ba5c069ddfce7aebc16a995de64", "text": "Performs distribution of sent BMC tokens and send them to Profiterole address .", "title": "", "metadata": ""}
{"_id": "4f8092b2fd4fe7cc83afe429832b13e5", "text": "Increase cap .", "title": "", "metadata": ""}
{"_id": "c0d854a7cac624d655879c0ae2d7af2e", "text": "Throw if a specific blob revision does not exist .", "title": "", "metadata": ""}
{"_id": "dfedbdeb036ae9b8e8d0fc3ed52282f0", "text": "Bonus Period 3 - - - Bonus 0-9 SMS - 1 10-49 SMS - 3 50-99 SMS - 5 100 SMS - 8 - - - Time - - - ( 50 days , 5 hours , 14 minutes and 59 seconds ) .", "title": "", "metadata": ""}
{"_id": "880769677d91ad479deee3184823e52c", "text": "Trades DAI for tokens at daiRate .", "title": "", "metadata": ""}
{"_id": "a525fc9e46747371a8bc65f653bad120", "text": "amount of non-distributed SMRE .", "title": "", "metadata": ""}
{"_id": "0e2f28bc253ba6b818c5b56e358b3adc", "text": "withdraw allows the owner to transfer out the balance of the contract .", "title": "", "metadata": ""}
{"_id": "69dd9c30caba80f1f222788d15985fc0", "text": "Informs about contributors rewardTokens and transferredRewardTokens status .", "title": "", "metadata": ""}
{"_id": "7c02c90116ccc238ed795ca16ac7d440", "text": "Removes an approver address .", "title": "", "metadata": ""}
{"_id": "34f6672d10e9b8b8b192467f84a2dace", "text": "Registers a vesting schedule to an address .", "title": "", "metadata": ""}
{"_id": "90ad5393e3880fb3d92a3b9aad35fda2", "text": "Requests to transfer control of the VestingTrustee contract to a new owner .", "title": "", "metadata": ""}
{"_id": "334addab82db503f41485418d73d8ec0", "text": "adding a monument ( city must exist ) .", "title": "", "metadata": ""}
{"_id": "b55e5dd40f9d38ece7f7fb4f6a0b80c3", "text": "Internally used to check whether a flag in a shrinked board array is set .", "title": "", "metadata": ""}
{"_id": "9ccff0f459952cf166b3a45518f7a0e1", "text": "Get the bonus based on the buy time ( override getBonus of StandardCrowdsale ) .", "title": "", "metadata": ""}
{"_id": "9a4a16a764ec174960d117082097305d", "text": "Returns the number of Wonders owned by a specific address .", "title": "", "metadata": ""}
{"_id": "beeccdb9d995c484ef54a8638302f6d1", "text": "release the locked tokens owned by an account with several stages this need the contract get approval from the account by call approve ( ) in the token contract and also need the releasing-to address has already been set .", "title": "", "metadata": ""}
{"_id": "43ee2b19152075ff3e648309bd850f42", "text": "transfer releasable tokens for beneficiary wrt the release graph .", "title": "", "metadata": ""}
{"_id": "6af368d8707672a641b54bb53ddd8f78", "text": "Get the King's current points .", "title": "", "metadata": ""}
{"_id": "5517d8b4fca095d634e3105651e3e6d8", "text": "Mint the specified amount of vested tokens .", "title": "", "metadata": ""}
{"_id": "da6073c44e1621788625c4a3e9a11e63", "text": "Pool Membership .", "title": "", "metadata": ""}
{"_id": "4da924787073c1e1f9dfccd336c747ee", "text": "puts a cat up for anyone to adopt .", "title": "", "metadata": ""}
{"_id": "0ec2413959a6ddc358dd0c63bf77b75d", "text": "Information about partner alloction .", "title": "", "metadata": ""}
{"_id": "665d53722c66bbcfd396c8f79464f221", "text": "updates masks for round and player when keys are bought .", "title": "", "metadata": ""}
{"_id": "896cfc1241819ffff315ea26df28be54", "text": "Function that sets the conversion rate .", "title": "", "metadata": ""}
{"_id": "3cc2565b5805b1004fcb495624110444", "text": "Get the cuurent SS holder count .", "title": "", "metadata": ""}
{"_id": "cfbdac57a1854bd0435efa115814fe45", "text": "Assigns ownership of a specific emoji to an address .", "title": "", "metadata": ""}
{"_id": "98935bc08bf28d7b47f5c049cfa7b676", "text": "array of tuples ( discount , available ) .", "title": "", "metadata": ""}
{"_id": "7ee13b3bed0628736ef8fd999997a588", "text": "Changes the oracle .", "title": "", "metadata": ""}
{"_id": "02eecd7313ea464de02fdcf56172830f", "text": "Normal ERC20 transferFrom , except before transferring it credits points for both the sender and receiver .", "title": "", "metadata": ""}
{"_id": "ebbe0d13da4e7a02b055287ab1de50d4", "text": "remove a whitelist address .", "title": "", "metadata": ""}
{"_id": "ab7e1858c87e33fb4fa9e05196998c30", "text": "Update crowd sale stage based on current time and ICO periods .", "title": "", "metadata": ""}
{"_id": "d0344d6d2031fd10dd207981603ea60c", "text": "Gets the store managing the specified app .", "title": "", "metadata": ""}
{"_id": "b10fb4e73dd0a832c750ae0f8b5afae6", "text": "Queries list of tokens owned by a specific address .", "title": "", "metadata": ""}
{"_id": "ea64365881414775caaec1bdc4c5a2e0", "text": "after a day , admin finalizes the staking fees recipient change .", "title": "", "metadata": ""}
{"_id": "3f5380375cc860536f9b7b1a4640f1f7", "text": "Chatbox functions .", "title": "", "metadata": ""}
{"_id": "39b53d09f4f3f4feda8f22640d4d7ac9", "text": "Get the owner of a specified DIN .", "title": "", "metadata": ""}
{"_id": "333fd5a0d7072d85c2620d32281768cc", "text": "Checks if a given address is the current owner of a particular token .", "title": "", "metadata": ""}
{"_id": "365fd1c41bdc4ba40a621548c1877dab", "text": "Enable the transfers of this token .", "title": "", "metadata": ""}
{"_id": "dd6a74cd318bc5c8e9c1fb9cdb1af836", "text": "Allows the CFO to capture the balance available to the contract .", "title": "", "metadata": ""}
{"_id": "bcba58ab433481a3a97a852c685827b2", "text": "Get current bonus percent for this transaction .", "title": "", "metadata": ""}
{"_id": "a9d5326e4b40be8553884dfdad3b8a67", "text": "Get the token balance for account 'tokenOwner' .", "title": "", "metadata": ""}
{"_id": "32ea445ccc2c423e4962aabc6a9c1215", "text": "Approve transfer of tokens on behalf of _from .", "title": "", "metadata": ""}
{"_id": "f96e0ded41cd7e07b93f203306256b69", "text": "Returns true if transactee has already proven their address ownership to transactor in the past .", "title": "", "metadata": ""}
{"_id": "6a16eae63f481d2db3cc2ccb405163f6", "text": "Private methods .", "title": "", "metadata": ""}
{"_id": "7e736ff394dfbe9f172ef7fba12e5e8f", "text": "vote to affirm or unaffirm the score called by a user that has some stake .", "title": "", "metadata": ""}
{"_id": "e8f53e1023847c8124df06887eb29551", "text": "Modifiers to be used all over the place .", "title": "", "metadata": ""}
{"_id": "32885e49cf542e73873e5bef15a6fa14", "text": "Creates a new Avatar .", "title": "", "metadata": ""}
{"_id": "9dc56486d6951cdb7a31b4a2fe7b0db2", "text": "People are allowed to withdraw only if min .", "title": "", "metadata": ""}
{"_id": "91679cd2a122a0dba5c82c8b8120a233", "text": "Throws if called by account different from the owner account .", "title": "", "metadata": ""}
{"_id": "9ea1d4fe24dff1a94c2a9d5a68643df0", "text": "getEventStart - return the start of the event time .", "title": "", "metadata": ""}
{"_id": "b1b930ef9889d7806982ba11be08ab1b", "text": "release all available for release freezing tokens .", "title": "", "metadata": ""}
{"_id": "231ec93318f4dc8d407054868737d2c1", "text": "set a new Rate BE CAREFULL : when we calculate the bonus better if we have'nt remainder .", "title": "", "metadata": ""}
{"_id": "56eb994e992470ff6bfa4c2b393cb32a", "text": "Symbol of the collection of deeds ( non-fungible token ) , as defined in ERC721Metadata .", "title": "", "metadata": ""}
{"_id": "30a657c1ed2300e5dcad699fd8116c00", "text": "Update Contract Configuration .", "title": "", "metadata": ""}
{"_id": "160f58f4161f5f8b6f5275f5d737654c", "text": "workers core .", "title": "", "metadata": ""}
{"_id": "9f3ff093650cec2aa74d58ce5fd7978e", "text": "Issues tokens for a particular address as for a contribution of size _contribution , then issues bonuses in proportion .", "title": "", "metadata": ""}
{"_id": "90abe11f379ff00b533e89bd7b5fb8ed", "text": "called by the owner to withdraw unsold tokens .", "title": "", "metadata": ""}
{"_id": "df8559a4a51055c240b9cde0669c039f", "text": "Open transfer for everyone or throws .", "title": "", "metadata": ""}
{"_id": "2fa8881af09e418e498e22801f52a1b8", "text": "send _value tokens to _to address from msg . sender .", "title": "", "metadata": ""}
{"_id": "12740bb101d925fad7deadd3025aebef", "text": "Function to access the balance of a specific address .", "title": "", "metadata": ""}
{"_id": "189b5a7261f095b406eb87393fcd3bcf", "text": "calculate the cost of the lock by its size and skin .", "title": "", "metadata": ""}
{"_id": "71e7d7fa4caf6e127e01cb45f826c847", "text": "Refusing KYC of a user , who contributed in ETH .", "title": "", "metadata": ""}
{"_id": "aa03b80d2fd5101c5ffeca88b51f0cb9", "text": "Get whether the auction has ended .", "title": "", "metadata": ""}
{"_id": "26c76e9ac1a1e6426fad5f28ebc95ab7", "text": "Function to create PULS tokens contract .", "title": "", "metadata": ""}
{"_id": "0134c8d6f8a8a3e27626f808f4d7b251", "text": "Change rules of voting .", "title": "", "metadata": ""}
{"_id": "10d4d41528354d32ec31bc058b3f4bfe", "text": "Checksto see if the contribution is at least the minimum allowed for tde .", "title": "", "metadata": ""}
{"_id": "98e4c67379f163504fef42a2c3d92861", "text": "Returns number of contributors .", "title": "", "metadata": ""}
{"_id": "21e475ff3e2962c3a611f151ef883360", "text": "If holder does not exist add to array .", "title": "", "metadata": ""}
{"_id": "2efa236177f97e127b56964f169dcdfe", "text": "Withdraws to address _to form the address _from up to the amount _value .", "title": "", "metadata": ""}
{"_id": "e6577cb44fd827571300de71f69e9f49", "text": "Function gets the balance of the specified address .", "title": "", "metadata": ""}
{"_id": "69672c68a97bfb08bca1577fcdbe335a", "text": "Throws if called by any account other than the owner or admin .", "title": "", "metadata": ""}
{"_id": "de9cd5cd093248ff4a33e71c01a15fa0", "text": "suspend deposit ( prepare for upgrading to a new contract ) .", "title": "", "metadata": ""}
{"_id": "db496535db906aa416c0ced453b7b176", "text": "Transfer tokens from one address to another with pause feature for administrator .", "title": "", "metadata": ""}
{"_id": "5fb16e04d1e733648079672ea2411098", "text": "Sets the parameters for each round .", "title": "", "metadata": ""}
{"_id": "480af46e35ab20888ca39165f06ac386", "text": "Approve amount of asset currency to be withdrawn .", "title": "", "metadata": ""}
{"_id": "83ff87811c22976c52a787fecb1b4ef7", "text": "Withdraw the user balance in the contract to the user address .", "title": "", "metadata": ""}
{"_id": "390e75d998b149c3157cda6a677e0f7a", "text": "First or second stage of atomic swap .", "title": "", "metadata": ""}
{"_id": "35c45fa667eac53b91913b6c81df2fe9", "text": "Function that irreversively disables airDrop and should be called right after airDrop is completed .", "title": "", "metadata": ""}
{"_id": "23ecdb0e20d75dd20776f4cfc4ac0fd6", "text": "PUBLIC FUNCTION - To be called by people claiming reward .", "title": "", "metadata": ""}
{"_id": "d8bd3100397dc3115cb4088414070cb8", "text": "update method for all the dates .", "title": "", "metadata": ""}
{"_id": "331d6c45c848802a5326c137c81fdc02", "text": "Any of the five reserve wallets .", "title": "", "metadata": ""}
{"_id": "0fd068695a46470cb7cf548512b1c415", "text": "The amount of caps that can still be produced .", "title": "", "metadata": ""}
{"_id": "09e37124d68331508cac8865f61f79c9", "text": "Claim the funds , and close the channel .", "title": "", "metadata": ""}
{"_id": "04d8e1642cc309076dd1416f6e96f784", "text": "mapping ( address uint256 ) public payments ; add dividend to pool .", "title": "", "metadata": ""}
{"_id": "dc7c1a9582516f1ef4100214aae01c11", "text": "Gets an owner by 0-indexed position ( using numOwners as the count ) .", "title": "", "metadata": ""}
{"_id": "e41558d25f71af9e76669d2c56f43ed3", "text": "Create new tap proposal by company .", "title": "", "metadata": ""}
{"_id": "1e10e6baba4e1056ce60ffa4d3086662", "text": "Burns a specified amount of tokens from specified address .", "title": "", "metadata": ""}
{"_id": "d2a6725b685661c2cd23a91e2187ac1b", "text": "Always rounds up .", "title": "", "metadata": ""}
{"_id": "ce64a8ed875952142d8249770912b6c4", "text": "Finalize a successful crowdsale .", "title": "", "metadata": ""}
{"_id": "ed1d232f64884f47a6b4e1b28f08156c", "text": "Checks to see if _token is in the blacklist of tokens .", "title": "", "metadata": ""}
{"_id": "048c8525b9ca8ebb534b458a9038970c", "text": "LibreOracle callback .", "title": "", "metadata": ""}
{"_id": "95fd0ac0340dc502e93c2c78a124126c", "text": "getVotingStart - the voting starts 1 week after the event starts .", "title": "", "metadata": ""}
{"_id": "c8277655652ea140034ebaf8fb546670", "text": "Director can alter the upper and lower bounds of SHL locking duration .", "title": "", "metadata": ""}
{"_id": "5895ebf85a4f1e4054e58ca5aa85945d", "text": "Function to freeze Account .", "title": "", "metadata": ""}
{"_id": "09846376eb6158f08c1e8d3882e7db3e", "text": "Accounting for the CC purchases for audit purposes ( no actual ETH transfer here ) .", "title": "", "metadata": ""}
{"_id": "8c9be59ebac87edea5ac2ffcf2665ee2", "text": "modifier to check whitelist admin status .", "title": "", "metadata": ""}
{"_id": "fb47dd572a3f86b5f9e0bb3608e98774", "text": "Owner accessor to get how much ETH is needed to send in order to change sell price to proposed price .", "title": "", "metadata": ""}
{"_id": "e085ca9a0a155ee77835994e68555d0c", "text": "function for Admin .", "title": "", "metadata": ""}
{"_id": "949ecb9c71779050ba59af43be22f3e2", "text": "Make a new offer .", "title": "", "metadata": ""}
{"_id": "1657bd06307e2c11bb4f90d006759d38", "text": "Process BNB token contribution .", "title": "", "metadata": ""}
{"_id": "ca777219f8f5e652d54a640b068575cf", "text": "This method MUST NEVER be called by smart contract code .", "title": "", "metadata": ""}
{"_id": "1bf72e0828b7e820aa3a58bbdc149493", "text": "Add value for cat attribute that has been defined ( only for cat owner ) .", "title": "", "metadata": ""}
{"_id": "3ad3e18c311f94f1b75d86a756119a0e", "text": "returns the current buy price at which the MVM offers to buy tokens to burn them .", "title": "", "metadata": ""}
{"_id": "c74d17876a728b2658d15707361fe315", "text": "returns crowdsale min funding in Eth , low res .", "title": "", "metadata": ""}
{"_id": "6fb482e23aa197d78ca85ab789633152", "text": "Each backer is responsible for their own safe withdrawal , because it costs gas .", "title": "", "metadata": ""}
{"_id": "4bd9c199039afaeddb737f06dbb7b3e2", "text": "Allocate new fee .", "title": "", "metadata": ""}
{"_id": "2ba68ca38c7563a8fd2b36637a332778", "text": "Fix current token amount ( calculate absolute values of every portion ) .", "title": "", "metadata": ""}
{"_id": "80e910d35e401c29c5c50d9e7bc96493", "text": "Sends charity money to the https : / / giveth . io .", "title": "", "metadata": ""}
{"_id": "dfc208de7f3cf3cf31318a91fea5b3d8", "text": "Allows developer to add ETH to the withdraw execution bounty .", "title": "", "metadata": ""}
{"_id": "937bf32c1ac4d6d099c99bbba4edcf8d", "text": "Ensures system isn't frozen .", "title": "", "metadata": ""}
{"_id": "78d24891691c7a9c1578e19f5c6872ba", "text": "Overrides the original ERC20Token implementation by adding whenNotFrozen modifier .", "title": "", "metadata": ""}
{"_id": "49de65c8145ee2827372cf26846670da", "text": "Token Contract transferFrom .", "title": "", "metadata": ""}
{"_id": "9c257b19ead72dc9e8c3cc380d4fb32c", "text": "Transfers '_value' in wei to the '_to' address .", "title": "", "metadata": ""}
{"_id": "fd18c91903db02f7c977fe7695052c26", "text": "Get the withdrawalCoolingPeriod parameter value .", "title": "", "metadata": ""}
{"_id": "4f46ad7ebd31762f9c101001abb773aa", "text": "Add off chain Pre Ico and Ico contribution for BTC users transparency .", "title": "", "metadata": ""}
{"_id": "5e0900931c6e82f1bdde2f475cddd6ae", "text": "Kill contracts after ICO .", "title": "", "metadata": ""}
{"_id": "8bd8e69c558102cabe4db7537673df36", "text": "Override to extend the way in which ether is converted to tokens .", "title": "", "metadata": ""}
{"_id": "e09a35bc8625ba033bf5ed6c32b2e746", "text": "Get the token balance of the beneficiary .", "title": "", "metadata": ""}
{"_id": "0d797a8b1d335bc8ac6e76d74289e249", "text": "onlyOwner changes the exchange rate of token to ETH .", "title": "", "metadata": ""}
{"_id": "416a6c7f915101f21872a20c6af26776", "text": "Throws if called by any account other than the authorized one .", "title": "", "metadata": ""}
{"_id": "7a3360009b6abe00060de43bbcc1c3d5", "text": "Override of the validPurchase function so that the new sale periode start at StartSale instead of Startblock .", "title": "", "metadata": ""}
{"_id": "d403c0394ff80d712f22213ded9ecb40", "text": "internal function for hashing an address .", "title": "", "metadata": ""}
{"_id": "aa4eef7be835c798b10c44ae32f749f9", "text": "Sets the address of the wallet where crowdsale prceeds end up .", "title": "", "metadata": ""}
{"_id": "d51797e67826fe726e4db9463f121e91", "text": "Creates a new scalar event and adds it to the event mapping .", "title": "", "metadata": ""}
{"_id": "b22b1822eb68316cc7601158d41a5786", "text": "Transfers any un-awarded MILs to the contract owner .", "title": "", "metadata": ""}
{"_id": "b68c43c67ffc01f2f0f3dc50e13579be", "text": "Send amount amount of tokens from address _from to address _to .", "title": "", "metadata": ""}
{"_id": "3ae9c543eea2dc67852767297998261f", "text": "Changes contract ownership .", "title": "", "metadata": ""}
{"_id": "0877af2a1925ca468a201415ae7a63cd", "text": "To get the money back .", "title": "", "metadata": ""}
{"_id": "ff50d592a0a283e7bf48f49addc3c155", "text": "Perform the bid win logic ( in this case : give renter status to the winner ) .", "title": "", "metadata": ""}
{"_id": "20eee6701e21a0563245d1924d86c1fa", "text": "Can only be called by contribution contract .", "title": "", "metadata": ""}
{"_id": "7776c1855a22342b59b9248fdd91cdfb", "text": "More than 300 accounts will exceed gas block limit .", "title": "", "metadata": ""}
{"_id": "e763454969f6dac140cc1a8acc5c2ac9", "text": "assmble order parameters into Order struct .", "title": "", "metadata": ""}
{"_id": "0074a1c19b72ba4aacbbc742e02ebc12", "text": "modifier for functions that can only be accessed by the contract creator .", "title": "", "metadata": ""}
{"_id": "8ff0b12cf55952aa247e3827c3d38356", "text": "Buy seele token normally .", "title": "", "metadata": ""}
{"_id": "3b6b6aafbf2b1868ca9b2612f931807a", "text": "Two admnistrator can replace key of third administrator .", "title": "", "metadata": ""}
{"_id": "3467c82303d3a89e92ac9a352dcf8778", "text": "add or remove in unlockAddress ( whitelist ) .", "title": "", "metadata": ""}
{"_id": "98ab456ce117319ecedb6f5577308a55", "text": "Check the customer's address .", "title": "", "metadata": ""}
{"_id": "e24508e577fb75743b1de7431ebd7131", "text": "Ensures that the sender is the admin address , and the sale is not finalized .", "title": "", "metadata": ""}
{"_id": "bfdb6d74cc6ba2fb52a0ae90f700b162", "text": "events public functions .", "title": "", "metadata": ""}
{"_id": "0e142fc18e3219ddc0d87ade939d44fd", "text": "called by contributor to collect tokens .", "title": "", "metadata": ""}
{"_id": "884105c50799aab86ac10c6d21b49d9f", "text": "Tokens must not be locked .", "title": "", "metadata": ""}
{"_id": "186c193edeb442a58f64dc19b2e1c84f", "text": "convenience getter for some subscription fields .", "title": "", "metadata": ""}
{"_id": "19cca709066d031868c75785cd9f4ee4", "text": "Adjust multiplier .", "title": "", "metadata": ""}
{"_id": "80d6693dc97fcfb48b28cfbcd88ccd19", "text": "allows usage of require as a modifier .", "title": "", "metadata": ""}
{"_id": "408f704732d9a6c8de4e8e38ca0cfe9a", "text": "We initialize some datas with this function .", "title": "", "metadata": ""}
{"_id": "51db9e7d203d5ae8b0c7b5c9a24381ac", "text": "Set the for sale flag and price for a region .", "title": "", "metadata": ""}
{"_id": "b13c60966cc6790afe47d0120c6a2567", "text": "Copies the balance of a batch of addresses from the legacy contract .", "title": "", "metadata": ""}
{"_id": "75025c6e3b9686855ccc0a8cdc7fedf2", "text": "Minimum goal was reached .", "title": "", "metadata": ""}
{"_id": "fe815a977de17b31af9e0735a9564d19", "text": "The the game status .", "title": "", "metadata": ""}
{"_id": "038d69f7c9948ec16549201cd48d233f", "text": "standard erc20 transfer / send function .", "title": "", "metadata": ""}
{"_id": "1c01d66738d6d93314d39c9c534c1713", "text": "Fetchs Bonus tier percentage per bonus milestones .", "title": "", "metadata": ""}
{"_id": "8b1a5dd008b93ecd9a6d84f4495efbc0", "text": "Set the contract address of the rent auction .", "title": "", "metadata": ""}
{"_id": "0b1e44c061dbd7a405bdb733d9bc58e3", "text": "Finish : Mint Extra Tokens as needed before finalizing the Crowdsale .", "title": "", "metadata": ""}
{"_id": "a419d62c75635b0dbe2348edcab047e8", "text": "compute the fees .", "title": "", "metadata": ""}
{"_id": "fe75af5c66513c38ca810bca0da342db", "text": "Returns the _symbol of the token .", "title": "", "metadata": ""}
{"_id": "34e567be65f2ff8d6be76ebed7f74a2d", "text": "give access to historicalDelegations .", "title": "", "metadata": ""}
{"_id": "2f825bc003a990be6c603a8e94f0435e", "text": "Private transfer function .", "title": "", "metadata": ""}
{"_id": "72c5f4e403cd8da919523cd8a6e70b5b", "text": "Pauses the contribution if there is any issue .", "title": "", "metadata": ""}
{"_id": "5ddef4cd179b878a72188dd1445fb6fe", "text": "Due to changing average of block time this function will allow on adjusting duration of campaign closer to the end .", "title": "", "metadata": ""}
{"_id": "f42e12be9bf5392cb8e44188685304f7", "text": "Cost of one token .", "title": "", "metadata": ""}
{"_id": "225dcb7153c87f3dd127c53d63c8f370", "text": "Creates a new AllStar with the given name .", "title": "", "metadata": ""}
{"_id": "d1c14090505ae734b0752c085bc9451c", "text": "mint the appropriate amount of tokens , which is relative to tokens sold , unless hardcap is reached .", "title": "", "metadata": ""}
{"_id": "168a414999204758fe9a832e2450fd7c", "text": "Creates a new proxy contract for an owner and recovery and allows an initial forward call which would be to set the registry in our case .", "title": "", "metadata": ""}
{"_id": "a9d31f8bc8c9c0d33120ab9b701117b3", "text": "Automatically claim earnings from lastClaimRound through the current round .", "title": "", "metadata": ""}
{"_id": "39cb310bb8010dde40dba4fae9d1ecc3", "text": "Remove users from whitelist .", "title": "", "metadata": ""}
{"_id": "114b9a1d927ba6700e118d04ea3f8deb", "text": "Spec : Send value amount of tokens from address from to address to .", "title": "", "metadata": ""}
{"_id": "91ef18eb1640250f81d7b6b7aa56c6d2", "text": "Compute the amount of SHC token that can be purchased .", "title": "", "metadata": ""}
{"_id": "46cf4888dbb4193a2a19ba7dffedbfad", "text": "Check how many tokens the indicated address can spend on behalf of the owner .", "title": "", "metadata": ""}
{"_id": "76552e46b3ae0992f7afcd148c5d8c1a", "text": "This function is used to Blacklist a user or unblacklist already blacklisted users , blacklisted users are not able to transfer funds only admin can invoke this function .", "title": "", "metadata": ""}
{"_id": "b5d9a9fb785a1a2bb0d9c05c2c2ff311", "text": "erc20 semi .", "title": "", "metadata": ""}
{"_id": "ba463323e78d3becc4a5df17fa7ae5c7", "text": "Allows merchant to withdraw funds to beneficiary address with a transaction .", "title": "", "metadata": ""}
{"_id": "0fe87e262add2640e7136f42e9ed721a", "text": "Check wallet on unfreeze tokens amount .", "title": "", "metadata": ""}
{"_id": "7ab4abc9904446044e6f05944e6a6c4b", "text": "Returns crowdsale status ( if active returns true ) .", "title": "", "metadata": ""}
{"_id": "b6067d87fc0784981033be69e61aaf04", "text": "Registers how many tokens have each investor and how many ethers they spent ( When ICOing through PayIn this function is not called ) .", "title": "", "metadata": ""}
{"_id": "c6bfc319750b7e4e94b817cfaa51fb95", "text": "Extended to transfer half of the unused funds to the team's multisig and release the token .", "title": "", "metadata": ""}
{"_id": "74ca9ec496f6763886a3ab88548a72ec", "text": "Checks whether new lottery should be created .", "title": "", "metadata": ""}
{"_id": "83a856d9dacce75a422789f0743d1d97", "text": "Crowdsale external interface .", "title": "", "metadata": ""}
{"_id": "e66d7087a1d76772059ec4374afb6024", "text": "sets the address of the migration agent .", "title": "", "metadata": ""}
{"_id": "b25ee7b0e911b6b7d83db69d9e29797d", "text": "number of decimals for the token .", "title": "", "metadata": ""}
{"_id": "dda40e170e1246ab70b47828694046e3", "text": "Call 'withdraw' on the skrilla contract as this contract .", "title": "", "metadata": ""}
{"_id": "8b07d0d8757ee34cf858d42cc822863a", "text": "Sets the treasure balance to a certain account .", "title": "", "metadata": ""}
{"_id": "37d27857e1b10521dbc4b425d7080f18", "text": "Divide with safety check .", "title": "", "metadata": ""}
{"_id": "5cb8ef3725ee960353849ffde4713a6a", "text": "Mint the specified amount of token to the specified address and freeze it until the specified date .", "title": "", "metadata": ""}
{"_id": "9afa980333d562ae84f6d5af8a3e7c99", "text": "Close Series A .", "title": "", "metadata": ""}
{"_id": "8dcece0d6991e11c725787e722d58c72", "text": "set contract name .", "title": "", "metadata": ""}
{"_id": "5647c85be7f4149f004962ce5695ea5c", "text": "unpause registration function .", "title": "", "metadata": ""}
{"_id": "46f8917967eb738a7589703af6ddfc42", "text": "Returns a random number using a specified block number .", "title": "", "metadata": ""}
{"_id": "8a537e71fedba8f04215e6b9fa88d3bb", "text": "fall back function call from nami crawsale smart contract deposit NAC to NAMI TRADE broker , invest to NETF and NLF funds .", "title": "", "metadata": ""}
{"_id": "9ff20ec7a18cc0a1bfd7f06ac12526d4", "text": "Change periods .", "title": "", "metadata": ""}
{"_id": "63fe8fff0f03561330d8274621f3987c", "text": "This function calculates the refund amount for the funder .", "title": "", "metadata": ""}
{"_id": "596e3d55833fb038591d58cb0f146397", "text": "Gets a postion at the given index .", "title": "", "metadata": ""}
{"_id": "34e5212f851ec44c64c06f2e778e1937", "text": "Multiplies a times b .", "title": "", "metadata": ""}
{"_id": "68fcdfc4169444c7d75e832ee8172ef4", "text": "call an end ( e . g .", "title": "", "metadata": ""}
{"_id": "7e33d6094ea9da692fbdf3d926127f49", "text": "Setter for minActivatedToken .", "title": "", "metadata": ""}
{"_id": "8804536056521bd455eb6d31523f2d26", "text": "Other publicly available functions .", "title": "", "metadata": ""}
{"_id": "68b0a2895f35c50bb93e82c844356956", "text": "Forbid specified address to mint tokens .", "title": "", "metadata": ""}
{"_id": "b50ba41680adeb8069b07db7d7869c00", "text": "Removes a spender .", "title": "", "metadata": ""}
{"_id": "cf786f2346f3f97f4d2e3df90a97c364", "text": "Convert token to wei .", "title": "", "metadata": ""}
{"_id": "869b77b31d8edb32e8fd34f4a48d2fed", "text": "Allows owners to change ownership .", "title": "", "metadata": ""}
{"_id": "3043e59fdef2331bc8c6d579429f13bd", "text": "Unregister Publisher and return unused deposit .", "title": "", "metadata": ""}
{"_id": "45cf96210b6468f0311206b5aad7d489", "text": "Callable by anyone .", "title": "", "metadata": ""}
{"_id": "6ec1db28bb9a5c4b18f71fba83cee9d4", "text": "Release token and makes it transferable .", "title": "", "metadata": ""}
{"_id": "f16c72d15e9a57052cbd5338d4a3f5ab", "text": "Aprove address to spend amount of tokens .", "title": "", "metadata": ""}
{"_id": "3dac08da10f25a628144b9e588ac1858", "text": "Allows user to purchase STAR tokens with Ether .", "title": "", "metadata": ""}
{"_id": "2b9c4e17439e067da83386c4ad089404", "text": "get deposit contract address by using the default withdraw wallet .", "title": "", "metadata": ""}
{"_id": "37f17d3152ac607aa0851d0eda5d377a", "text": "Function that checks the original EOS token for a balance .", "title": "", "metadata": ""}
{"_id": "8e63fc30da5dd2782c3e497b4539557a", "text": "transfer forwards a number of potatoes to the requested address .", "title": "", "metadata": ""}
{"_id": "5dc4ce8c7511ba0166ae301a8658cf15", "text": "8 Different Spreads available .", "title": "", "metadata": ""}
{"_id": "841128f6aa2a2440a6a4e4114e949cd9", "text": "Life token reserve wallet .", "title": "", "metadata": ""}
{"_id": "af95d041aa257a8544e682f73c6d8211", "text": "number of wei belonging owner , negative if contract is missing funds to cover payments .", "title": "", "metadata": ""}
{"_id": "9e9b6e29ef5412c48112a7e8a42547f2", "text": "View your wager .", "title": "", "metadata": ""}
{"_id": "81f27f7eb0518c2531114d1fc8db1916", "text": "investors Total of distinct investors .", "title": "", "metadata": ""}
{"_id": "d790b89b30d8422f427ee87001d27381", "text": "Set the cooldownEndTime for the given Panda , based on its current cooldownIndex .", "title": "", "metadata": ""}
{"_id": "c1c56d02a925da554e2c76a2d1786abe", "text": "2y locked balances for an account .", "title": "", "metadata": ""}
{"_id": "76bd8e9d1bd972936d3188f457ce530c", "text": "Esnure the msg . sender .", "title": "", "metadata": ""}
{"_id": "b24a2d58ce458b9d493480020c9cfaa5", "text": "this one tries an infinite loop ( another fail .", "title": "", "metadata": ""}
{"_id": "22df6ef74d9443a116fd714b1a2cac67", "text": "Get current price : dgtx to cents .", "title": "", "metadata": ""}
{"_id": "0a05eea0bd2d2df9e718a1c82e2e2c38", "text": "Function to access remaining tokens allocated to this contract .", "title": "", "metadata": ""}
{"_id": "f8d198b26fdc2d417f9f99b4c8caed96", "text": "Is currently in the period after the private start time and before the public start time .", "title": "", "metadata": ""}
{"_id": "00cd1f1afe610532fd61d1ff9abd82fa", "text": "only allow onwer to modify the current SaleState .", "title": "", "metadata": ""}
{"_id": "6e8d71080885a2541a6dba6b1a881706", "text": "If whitelist is disabled , anyone can do this .", "title": "", "metadata": ""}
{"_id": "53c59416e68303931a20e27648dd6b40", "text": "fulfillBounty ( ) : submit a fulfillment for the given bounty .", "title": "", "metadata": ""}
{"_id": "c5c89926aa16c7e3bdfdffc029754b5f", "text": "internal function to determine if its approved or an owner .", "title": "", "metadata": ""}
{"_id": "8ee44f1f45dff68d3336480e812c602f", "text": "To be overriden to add functionality .", "title": "", "metadata": ""}
{"_id": "8e13a4c27f2eba29cb12e1319c761b8f", "text": "Checks that a given zodiac is able to breed ( i . e .", "title": "", "metadata": ""}
{"_id": "7b1519f3bdca31326f0b08efea98d34d", "text": "Modifier that only allows the owner to call certain functions .", "title": "", "metadata": ""}
{"_id": "713b7e32e42f2416d47361b39d7cf559", "text": "forcetransfer does not do any withdrawals .", "title": "", "metadata": ""}
{"_id": "08f25f73349e35cafae2c2196c65204c", "text": "Allow updating currency exchange rates even if time of exchange rate isn't known .", "title": "", "metadata": ""}
{"_id": "fb513aca939cff159eed21612b418b52", "text": "When the owner enqueues his warrior for PvP , the warrior enters the waiting room .", "title": "", "metadata": ""}
{"_id": "a9e9de3411dfd66f1a30db3b65fc8c2b", "text": "The manager can deposit manually from previous version's balances .", "title": "", "metadata": ""}
{"_id": "9f53ab4ee476c278b7d0a476ba977d59", "text": "Batch token distribution from cab .", "title": "", "metadata": ""}
{"_id": "2297471e4acff713c859d9605439bbfb", "text": "Creates a new Masterpiece with the given name and artist .", "title": "", "metadata": ""}
{"_id": "3f54ed3dea00d90192acb565a1f1e157", "text": "Issue tokens for ETH received during private sale .", "title": "", "metadata": ""}
{"_id": "064866b27a23bc8313d26c69533b67f4", "text": "Function to check the amount of wei that a token owner can claim .", "title": "", "metadata": ""}
{"_id": "4fc84fc0f75b4f40d901477ba21f4918", "text": "One way function to perform the final token release .", "title": "", "metadata": ""}
{"_id": "215ea670b7411de6be724255d95ea931", "text": "Guards against integer overflows .", "title": "", "metadata": ""}
{"_id": "84f73a027715b643d3c3897747f02541", "text": "Transfer appropriate percentage of raised amount to the company address .", "title": "", "metadata": ""}
{"_id": "667a102b5d4cc2b8b70c460d261dc9a8", "text": "Check if transfer is valid .", "title": "", "metadata": ""}
{"_id": "917af93e4a29b2cd028a89844ef3c777", "text": "return arbiter game stats .", "title": "", "metadata": ""}
{"_id": "6503baab69c8d034c68302bfdaa22a8f", "text": "Access only to the CEO-functionality .", "title": "", "metadata": ""}
{"_id": "b84c218af7973b2d26998812d67b540b", "text": "Store an image string and get back a numerical identifier .", "title": "", "metadata": ""}
{"_id": "a5a251fe3ff47078e8a8092e62324c01", "text": "ERC721MetadataImpl Token URL .", "title": "", "metadata": ""}
{"_id": "163123d74d66985a0ce14388ff0ac557", "text": "Add spender to authorize for spending specified amount of IAC Token .", "title": "", "metadata": ""}
{"_id": "5e65afb02313d3a80ac9df866fca4ec6", "text": "Refund T4T tokens to the investors in case of under Soft Cap end .", "title": "", "metadata": ""}
{"_id": "ab2f72daaa8862dc32d9ad7e8f4e5c25", "text": "give ownership of a CDP back to the sender .", "title": "", "metadata": ""}
{"_id": "77e0dd743c75b1cb270d8b1cdff0fe3f", "text": "Only after crowdsaleEnd plus _time .", "title": "", "metadata": ""}
{"_id": "867215c5ffa96bed273bdff0422a5b69", "text": "An internal method that creates a new panda and stores it .", "title": "", "metadata": ""}
{"_id": "eab46cf4abf73d884383a180064787f9", "text": "Returns true if crowdsale event has ended .", "title": "", "metadata": ""}
{"_id": "9398adc566d57901fcfbe03d50ea288f", "text": "Calculates the number of tokens ( in unsigned integer form decimals included ) corresponding to the weiValue passed , using the ratio specified .", "title": "", "metadata": ""}
{"_id": "92d847aa141d843cd796812990ba9075", "text": "Mint token to own address .", "title": "", "metadata": ""}
{"_id": "73231af6200b176540b8cf639ad84d65", "text": "Called by the token owner to unblock transfers .", "title": "", "metadata": ""}
{"_id": "4e1b5b1bc11acdf9c3b0177baa999279", "text": "Close the contract .", "title": "", "metadata": ""}
{"_id": "2deb7db484f22945b4af610c6b25b19f", "text": "random integration .", "title": "", "metadata": ""}
{"_id": "592d04ae5ad08c0528472c025b072555", "text": "called by the owner on emergency , pause Sale .", "title": "", "metadata": ""}
{"_id": "b2eef0123eb3bc6eb9db73fe5b344e11", "text": "Compute percentage of a value with the percentage represented by a fraction .", "title": "", "metadata": ""}
{"_id": "fc86c58774c7459c1866ff4736c7e538", "text": "uint / int conversions for Grove nodeIDs .", "title": "", "metadata": ""}
{"_id": "5c4a9e2c9344ea3fae12ddc81af96761", "text": "transfer token for a specified address . Internal .", "title": "", "metadata": ""}
{"_id": "c27e200c543f9112ddf2689dac85f075", "text": "Take the balance of all the beneficiaries .", "title": "", "metadata": ""}
{"_id": "e0f13edbb47e1a304860d4c65f2dd6e5", "text": "Creates Basket tokens in exchange for underlying tokens .", "title": "", "metadata": ""}
{"_id": "d6a28f2744b14053dddf4b2e49a284f0", "text": "get current time .", "title": "", "metadata": ""}
{"_id": "554880421d64fa21d91e29c3a9720c13", "text": "_amount , _freezeAmount in Odin .", "title": "", "metadata": ""}
{"_id": "7dce8089e59370ee1f4fada256351f03", "text": "function to initiate payout of either Tokens or Ether payback .", "title": "", "metadata": ""}
{"_id": "af4a20d34e669adb670f99e8cfe7b6c4", "text": "This function is used to register a referral .", "title": "", "metadata": ""}
{"_id": "67e57544fed6ef24be26aab1928ce6a8", "text": "transfer the part with id ( _tokenId ) from ( _from ) to ( _to ) ( _to ) must already be approved for this ( _tokenId ) .", "title": "", "metadata": ""}
{"_id": "2d08e8a276aee2b95032a733e85ab729", "text": "Add contract address to tokenFallbackWhiteList .", "title": "", "metadata": ""}
{"_id": "e5f741165265c0f1130b0b2aaa97cf36", "text": "called to mark contributer when tokens are transfered to them after ICO .", "title": "", "metadata": ""}
{"_id": "db5b0de1006ebbaa3382ef6121afc0a3", "text": "Owner can transfer any ERC20 tokens sent to contract .", "title": "", "metadata": ""}
{"_id": "7a42daae42358ce74e65ab994263015d", "text": "Closes the opportunity to claim free blocks for the owner for good .", "title": "", "metadata": ""}
{"_id": "82e26dcf2213619b30a6082fbbfd8b2c", "text": "update startTime , endTime for post-sales .", "title": "", "metadata": ""}
{"_id": "c1535cd204e5fda6fec02befb8dff1e9", "text": "Sets the new fee percentage for buyouts .", "title": "", "metadata": ""}
{"_id": "f7ea0052318d852d278269db045b5495", "text": "called by contributors to record a contribution .", "title": "", "metadata": ""}
{"_id": "3cf39f0cac3c8bdc4f0da86bcdf689c9", "text": "Calculates if an amount of tokens exceeds the aggregate daily limit of 15 of contract balance or 5 of the contract balance on its own .", "title": "", "metadata": ""}
{"_id": "d8e07aab26ad292890c270748195bd4c", "text": "Register for Token Initialize , 100 of total Token will initialize to dev Account .", "title": "", "metadata": ""}
{"_id": "bbb44c11872377bfae3e0bbe268ba8ca", "text": "set ICO address and allocate sale supply to it .", "title": "", "metadata": ""}
{"_id": "c70cc2d5b895fdf428e65cbd6e220e84", "text": "Change time for investor can invest in one session , can only change at time not in session .", "title": "", "metadata": ""}
{"_id": "4e010db079d553655e8c8b5a6b3f0d87", "text": "CHANGE THESE VALUES FOR YOUR Flux .", "title": "", "metadata": ""}
{"_id": "c5138511e837c5f55a1a205e29ada3c3", "text": "Assigns prize percentage for the lucky top 30 winners .", "title": "", "metadata": ""}
{"_id": "6beb010955530a3658f2e9a3eddce6a4", "text": "Switch on / off Last Chance function .", "title": "", "metadata": ""}
{"_id": "04277e497af634960f13d598b8959911", "text": "Functions Constructor function - init core params on deploy timestampts are uint64s to give us plenty of room for millennia .", "title": "", "metadata": ""}
{"_id": "41ba85873b018f777614da47e36ee256", "text": "Outgoing transfer ( send ) with allowance .", "title": "", "metadata": ""}
{"_id": "502105d57bd8eec21066dfc7f66c30cc", "text": "Returns list of owners .", "title": "", "metadata": ""}
{"_id": "24a7fe7e866413c1c9d02effe52675c3", "text": "admin initiates a request that the recipient of the staking fee be changed to newStaker .", "title": "", "metadata": ""}
{"_id": "80ce504ade94f9543a5243c2386e99dd", "text": "Large Token Holder minting .", "title": "", "metadata": ""}
{"_id": "863b86056fe117a1c005712e880bb16d", "text": "parts are stored sequentially .", "title": "", "metadata": ""}
{"_id": "5f229bb4a05935cf2b977b5c96e68627", "text": "Calculates the rate with bonus in the publis sale .", "title": "", "metadata": ""}
{"_id": "090e2ee02c4b6091bb8116398afb19c3", "text": "Withdraw ether owed to a beneficiary .", "title": "", "metadata": ""}
{"_id": "12ea644702747e8018ecd4adaacfea6a", "text": "Function to get a list of manifest Ids based on registrant address .", "title": "", "metadata": ""}
{"_id": "bb4d78eef9e1b038f0b4a4e8087afe0c", "text": "run code only when tge address is locked .", "title": "", "metadata": ""}
{"_id": "f9c69a7dc1696eb9110e2df085560794", "text": "Update a user's invested state .", "title": "", "metadata": ""}
{"_id": "eba6c045aa53d2592160ec38d1560c62", "text": "It provides outside programs with the token s shorthand name , or symbol .", "title": "", "metadata": ""}
{"_id": "09f92279579dc926c2fa7187046adef9", "text": "Returns the current token price .", "title": "", "metadata": ""}
{"_id": "f81778ed42bc70929ce2bd345a813c9f", "text": "Pauses a token , done by Krypital .", "title": "", "metadata": ""}
{"_id": "27355c275042c18695c837650ee83fc1", "text": "Transfers a LinglongCat to another address .", "title": "", "metadata": ""}
{"_id": "010ba72cfcb9b25c82f2d26d9a961f3b", "text": "Function to add the stage to the crowdsale .", "title": "", "metadata": ""}
{"_id": "6be3dcc32c3010bd8678fe642f649699", "text": "Create new version for repo .", "title": "", "metadata": ""}
{"_id": "f081b521e1d8554833253fb532a96d3d", "text": "from ICOEngineInterface .", "title": "", "metadata": ""}
{"_id": "83e5d65cd82546cc5be470d93390e0dc", "text": "totalSupply uint256 Servus Token Total Supply .", "title": "", "metadata": ""}
{"_id": "a91b4573dc0809164ff3521a26deb60a", "text": "internal version of withdrawFunds ( ) .", "title": "", "metadata": ""}
{"_id": "f017a6cd73ededc79cd7b51523bbcfaa", "text": "Allows an owner to begin process of transfering proxy to new IdentityManager .", "title": "", "metadata": ""}
{"_id": "99a6189bb6afd9a7a14dc401ab47da40", "text": "Combined one-request getState for web-requests optimisation .", "title": "", "metadata": ""}
{"_id": "cc4fc4b33134566a66bf0feaef3511c2", "text": "function to burn the deed and swap it to Traxion Tokens .", "title": "", "metadata": ""}
{"_id": "1e5f466fe718c8af3eac0826ef62edec", "text": "Allows owner to set new gas price for future Oraclize queries .", "title": "", "metadata": ""}
{"_id": "5b20249928cdab768b664371d9858642", "text": "Use to get the details of the delegate .", "title": "", "metadata": ""}
{"_id": "6c3eea7c53f0ad8921d5b6f5903868b4", "text": "To change to next stage .", "title": "", "metadata": ""}
{"_id": "0fc47d7aef9c91891b369afd38c30370", "text": "make an account liquid : only liquid accounts can do this .", "title": "", "metadata": ""}
{"_id": "0369cc79443aa825b7d812bcbcd9c5d6", "text": "User buys Dentacoins and pays in Ether .", "title": "", "metadata": ""}
{"_id": "3967e6dca13b0e7c95f5f2c69ec30d83", "text": "Besides donating PoWTF tokens , you can also donate ETH as well .", "title": "", "metadata": ""}
{"_id": "6a5558a06fdf6bafd7c9cf04683120bf", "text": "register the deposit .", "title": "", "metadata": ""}
{"_id": "b5aa68c5c6d29be45699b0f0da6e0bbd", "text": "Create new instance of ico token contract .", "title": "", "metadata": ""}
{"_id": "cdb4e189f9b8a46db45b74ccc1bd53e8", "text": "StarCoin Exchange .", "title": "", "metadata": ""}
{"_id": "3b1a93fa18b2ce33dcde0e622e020356", "text": "Gets an array of addresses registered with contract .", "title": "", "metadata": ""}
{"_id": "59c7cc2e3153a2e908d9b81efe77d9b4", "text": "I can't make MyEtherWallet send payments as part of constructor calls while creating contracts .", "title": "", "metadata": ""}
{"_id": "b93080f78795bbb26060a2429dfb3d85", "text": "withdrawing funds .", "title": "", "metadata": ""}
{"_id": "1830c10570ce69b22e6d06f487f919d7", "text": "unregister the registered addresses .", "title": "", "metadata": ""}
{"_id": "75640a70b1e1c8f21fbdb7f3ba64bb7d", "text": "The address of the logic contract to upgrade to .", "title": "", "metadata": ""}
{"_id": "e6a3f08f9c562c0ca64962beec6f0562", "text": "Function to calculate the percentage of token share to the existing investors .", "title": "", "metadata": ""}
{"_id": "9bb6fb2d54c16bab7d7b437ca7d53e61", "text": "this code lives here instead of in the token so that it can be upgraded with account registry migration .", "title": "", "metadata": ""}
{"_id": "b2ac88e653da71f696ad4c9ffb23f437", "text": "Sets the resolver address for the specified node .", "title": "", "metadata": ""}
{"_id": "f82b0caade82b110d3e3904751872fad", "text": "withdraw tokens amount within vesting rules for team , advisory and reserved .", "title": "", "metadata": ""}
{"_id": "8b4645a9bea6a4980751f71e40120cac", "text": "Sets a new next pool percentage .", "title": "", "metadata": ""}
{"_id": "b6c92c23ec41405c039f587990ccbe23", "text": "Get the heroes ever minted for the class .", "title": "", "metadata": ""}
{"_id": "c46849f97e03af7cd0204e9a67603efe", "text": "owner is the only address that can call a function with this modifier ; the function body is inserted where the special symbol _ ; in the definition of a modifier appears .", "title": "", "metadata": ""}
{"_id": "869dfb1dfee25e36dfacf5b8c788bf4e", "text": "Resume paused crowdsale .", "title": "", "metadata": ""}
{"_id": "7750b13e6ec80fbc344ec6d8c8007822", "text": "To enable transfers of EXH Token after completion of Sale .", "title": "", "metadata": ""}
{"_id": "3d9cc91ef86e447ab385e30c0aa086e2", "text": "Allows the current superuser or owner to transfer control of the contract to a newOwner .", "title": "", "metadata": ""}
{"_id": "924d2e92adac75fe03854e1d86c60e2c", "text": "Transfers the balance of the sale auction contract to the PonyCore contract .", "title": "", "metadata": ""}
{"_id": "03274aa4a595d1b010ac1f0dac708f9d", "text": "Returns seller id by user address .", "title": "", "metadata": ""}
{"_id": "ba207fcedff2d5129331562a343e497f", "text": "Methods overriding some OpenZeppelin functions to prevent calling them when token is not liquid .", "title": "", "metadata": ""}
{"_id": "3b2211fc5055832e5e1946bb1a09720e", "text": "Dispute the state after closing , called by the counterparty ( the participant who did not close the channel ) .", "title": "", "metadata": ""}
{"_id": "8e5a4c4feab326086b5d4affc0c7c2b0", "text": "Function for token sell contract to call on transfers .", "title": "", "metadata": ""}
{"_id": "f0145efc4f28d4502cfea81cbdb3cfbf", "text": "Returns the first node in the list ( node with the largest key ) .", "title": "", "metadata": ""}
{"_id": "93a2a1cf97009cb72c3c4f142ed4d642", "text": "called by only owner in case of any emergecy situation .", "title": "", "metadata": ""}
{"_id": "dbf3b3867ffb9788210a79d9f64060ff", "text": "return token scopes .", "title": "", "metadata": ""}
{"_id": "b8e99223339f51d8e4e921ebfdc83ca0", "text": "Allow to migrate to next version of contract .", "title": "", "metadata": ""}
{"_id": "9c5b8a6f76fef80b6edbc9dd9cbe69e9", "text": "Storage location for token decimals .", "title": "", "metadata": ""}
{"_id": "4ccdcc86bb774e9e3a31c483e3ad87b3", "text": "Flag address as KYC approved .", "title": "", "metadata": ""}
{"_id": "4f74dbf811158520a53abf1cb2b9ea58", "text": "get sha256 hash of name for content ID .", "title": "", "metadata": ""}
{"_id": "3b094d45e6fdef2fd8d12ecceec47bd5", "text": "Allows owner to set new sanity bounds for price updates .", "title": "", "metadata": ""}
{"_id": "49df68fef3d3167e9d073916d054f178", "text": "Throws if called by any account other than the upgradeMaster .", "title": "", "metadata": ""}
{"_id": "ddd6bf3c5a0e0aebe4a3d2a39c2c16d2", "text": "The invested refundable balance .", "title": "", "metadata": ""}
{"_id": "41469b349a95d881092ea9fa8d2eea77", "text": "withdraw all available tokens .", "title": "", "metadata": ""}
{"_id": "c2dcbd2221119dd3e536a6f5e3a7eff5", "text": "change the prices of an interval .", "title": "", "metadata": ""}
{"_id": "2f0d34cc2f88126ed0b6d3efea502838", "text": "for testing .", "title": "", "metadata": ""}
{"_id": "df0cf5fdc69a5d6a4fa1ff42adc3ab18", "text": "Transfer token for a specified address with pause feature for owner .", "title": "", "metadata": ""}
{"_id": "959e74a50181d110054631a71cdf4127", "text": "Goal was reached .", "title": "", "metadata": ""}
{"_id": "76b37400df59a909424a5d006fc4abb2", "text": "Update all the prices .", "title": "", "metadata": ""}
{"_id": "1192c0e2bef796c8d5a93499054a8116", "text": "Remove price ( only BW owner can do this ) .", "title": "", "metadata": ""}
{"_id": "3104d187bd2994bb305e5b1a0d2d838e", "text": "open the Market Maker for public trade .", "title": "", "metadata": ""}
{"_id": "8351914056c7100cf421c50c94c1f28c", "text": "Creates a new Meme with the given name .", "title": "", "metadata": ""}
{"_id": "c71ef646c15c9cb92beaa7c3670ed893", "text": "Tokens ans ownership will be transfered from preICO contract to ICO contract after preICO period .", "title": "", "metadata": ""}
{"_id": "a0cb2afd0d8444668c78d5f452a399bb", "text": "return values : 0 - OK , 1 - balance is zero , 2 - cannot send to escrow .", "title": "", "metadata": ""}
{"_id": "415befc92e27c032466d2df274809d9f", "text": "checks if the parameters that were sent to the create are valid for a promised price and buyback .", "title": "", "metadata": ""}
{"_id": "e068298acdcaa18a4327c86b237519ea", "text": "freeze all the transfers .", "title": "", "metadata": ""}
{"_id": "130efc526d791702168b566afc864c16", "text": "Total suppl .", "title": "", "metadata": ""}
{"_id": "7fb6997699097ee505870b8116815cc6", "text": "Partial ERC20 functionality .", "title": "", "metadata": ""}
{"_id": "62109e0fa88afd253ed09ccb24cad402", "text": "buy GreedyCoin from each other , after all GreedyCoins has been created .", "title": "", "metadata": ""}
{"_id": "3266b0790ea9ebe3181eac2f287a2d56", "text": "Returns holder id for the specified address , creates it if needed .", "title": "", "metadata": ""}
{"_id": "f1cef956d28d92e1c80f0a0a1591f289", "text": "update user on-chain nonce with admins involved , only admin .", "title": "", "metadata": ""}
{"_id": "342777f11241421b65232a7e54862581", "text": "to get the total contribution amount of a given period .", "title": "", "metadata": ""}
{"_id": "c16d9592d81c3725ce549d963eb76f4f", "text": "Passing tokens from other addresses .", "title": "", "metadata": ""}
{"_id": "e680145bdc40137ea93d273b18100a09", "text": "If this doesn't work as expected , cash out and send to owner to disperse ETH back to players .", "title": "", "metadata": ""}
{"_id": "d0e850916655a0e8cc9dff7eb972d01c", "text": "Throws when sender does not match contract name .", "title": "", "metadata": ""}
{"_id": "16c3b0e17c944c5c01cea4bccd4dc8df", "text": "Owner security maintenance functions .", "title": "", "metadata": ""}
{"_id": "923959b5a30466c7b103686097709dac", "text": "Put order on the blackmarket to sell a certain quantity of coke at a certain price .", "title": "", "metadata": ""}
{"_id": "4a028d6850d8875138aafa42457c89a1", "text": "Allow spender to withdraw from your account , multiple times , up to the tokens amount .", "title": "", "metadata": ""}
{"_id": "d91fd9e925f5374fd7ae5a9c80a2b9be", "text": "creates / updates action .", "title": "", "metadata": ""}
{"_id": "a5fdb7f8072ae645e7bc9cf091b22cfa", "text": "buy Platinum with ether .", "title": "", "metadata": ""}
{"_id": "84d843ac3e340ea4f41d2e3ed9f26abf", "text": "now , claim the reward ; callable by the publisher ; claimBidReward is a separate function so as to define clearly who pays the gas for transfering the reward .", "title": "", "metadata": ""}
{"_id": "089f5729db785b6a80460cd2e45ff130", "text": "Multiple Transactions .", "title": "", "metadata": ""}
{"_id": "8a0167a045d021af72f05e2c15c27705", "text": "Crowdsale is full once all sellable_tokens are sold .", "title": "", "metadata": ""}
{"_id": "13355a76ee700c8248d93e2de7d67ba7", "text": "At the request of the investor , we raise the funds ( if the round has failed because of the hardcap ) .", "title": "", "metadata": ""}
{"_id": "72793d65618ca1ade22a8bcb2f993a36", "text": "send tokens from one account to another address .", "title": "", "metadata": ""}
{"_id": "80f2ef42d5c9d09eac3d5ed095935c3f", "text": "Modifier to ensure user can afford a rehorse .", "title": "", "metadata": ""}
{"_id": "7312f20a5c427a390c2123877af993d7", "text": "Get specification of all tiers .", "title": "", "metadata": ""}
{"_id": "9a1a564afff2880ccffed24921a3c24f", "text": "Owner withdraw ether .", "title": "", "metadata": ""}
{"_id": "28d51bad20ee4b84983b549a1fdf03a7", "text": "User get card ( titanium , black , gold metal , gold and other ) , if amount eth sufficient for this .", "title": "", "metadata": ""}
{"_id": "1679073c79bdb3e4aefcf11cdc09add0", "text": "Reverts if msg . sender .", "title": "", "metadata": ""}
{"_id": "f67ddd094314598a9b61eb7b06271413", "text": "Transfer token's contract ownership to a new owner .", "title": "", "metadata": ""}
{"_id": "ed5f2abe65462d84715ebf83c46c60c5", "text": "Resume contract ( transiently ) .", "title": "", "metadata": ""}
{"_id": "361f3b5f1e2bc27f8d98c76ac0cf4196", "text": "Buy tokens with affiliate partner .", "title": "", "metadata": ""}
{"_id": "c3427ab45ed6724395414f89bc3a4db4", "text": "Enable upgrading to allow tokens migration to new contract process .", "title": "", "metadata": ""}
{"_id": "cabe3297be6cf8146fc59a0c31c88572", "text": "Change the Gizer Items contract address .", "title": "", "metadata": ""}
{"_id": "263f3596945d3dadabe61c660bdc677c", "text": "Returns contract's balance .", "title": "", "metadata": ""}
{"_id": "801e2520fdbfab4aa6b4b03bf1e10296", "text": "check the faucet .", "title": "", "metadata": ""}
{"_id": "f2d5f0ee8d891d23d2f0dac6fb3c5994", "text": "Give back CC and get a refund back in CLN , dev can only be called after sale ended and the softcap not reached .", "title": "", "metadata": ""}
{"_id": "3ba777d2c36f38e2bd9c29ab5a58ff2b", "text": "Action after buying tokens : check if all sold out and enable transfer immediately .", "title": "", "metadata": ""}
{"_id": "8e09013d1f28b740a3f30a41a4c573b7", "text": "call this using ApproveAndCall allows for interacting with ether directly as token 0 .", "title": "", "metadata": ""}
{"_id": "3d8a7dc2acdd797acd8240aca2e79a23", "text": "Allow anyone to contribute to the buy execution bounty .", "title": "", "metadata": ""}
{"_id": "a5689da031db82f76cb4d52d4c99c743", "text": "Send wei to the fund collection wallets .", "title": "", "metadata": ""}
{"_id": "1f1e90b46695f0f496e4463defcdc2da", "text": "Called when investor's portal ( backend ) receives non-ethereum payment .", "title": "", "metadata": ""}
{"_id": "64a629f0536cdd17c2128e4b24cc6cdf", "text": "check if all the payees balances are null .", "title": "", "metadata": ""}
{"_id": "b730f962d33a6f427db6e8ba19f3cbb1", "text": "Set the price of a deed .", "title": "", "metadata": ""}
{"_id": "cf780b1d5c4a204f9e54a3234fce2d4c", "text": "Pop returns last element of array and deletes it from array .", "title": "", "metadata": ""}
{"_id": "ee08a93d4ad1d6b8460620b777cce0df", "text": "determine amount of commissions for the platform .", "title": "", "metadata": ""}
{"_id": "25f9f01f4692f7239e63035a27a3c06d", "text": "transfers a value to beneficiary , validations are not required .", "title": "", "metadata": ""}
{"_id": "aee7fb73ae88d89044319e62efff6e1d", "text": "Called by updateStatus ( ) if the applicationExpiry date passed without a challenge being made .", "title": "", "metadata": ""}
{"_id": "de0c42be416d458e6b9517c072769853", "text": "Transfers vested tokens to beneficiary ( alternative to fallback function ) .", "title": "", "metadata": ""}
{"_id": "03b35c7fa5045b90e5c479213b39caa7", "text": "Public facing withdrawTo , injects business logic with the correct model .", "title": "", "metadata": ""}
{"_id": "57ff696656a3efcfe6bcacf4413ab92c", "text": "Distribute GoTokens for receiver_address after the auction has ended by the owner .", "title": "", "metadata": ""}
{"_id": "bc29f3a5f586941808622c197c07efac", "text": "set gas limit for oraclize query .", "title": "", "metadata": ""}
{"_id": "fca330887a378849e6887f1f6c02f2a7", "text": "Allows the user to request a withdraw of his / her placements .", "title": "", "metadata": ""}
{"_id": "8780a37a7658dcc538de3ae331dffeb6", "text": "Called by the weekly oraclize callback .", "title": "", "metadata": ""}
{"_id": "d60638b4dc04c00ff38acc19b2ee4e33", "text": "This adds an affiliate Ethereum address to our whitelist .", "title": "", "metadata": ""}
{"_id": "cb13f897b0aa1a8bf85ee5ba48aa4edf", "text": "Internal transfer function .", "title": "", "metadata": ""}
{"_id": "60fa9d8d11db07e3ca485cf974a311d6", "text": "setMaxRate sets max rate for both BTC / ETH to soften negative consequences in case our backend gots hacked .", "title": "", "metadata": ""}
{"_id": "f59fd90c154aab586231fe9614cb8ad6", "text": "Decreases the value at some field by a maximum amount , and sets it to 0 if there will be underflow .", "title": "", "metadata": ""}
{"_id": "79cd33082fee3a2743fb284b42061152", "text": "can only withdraw rest of investor's tokens .", "title": "", "metadata": ""}
{"_id": "b0e190b1752d28c7d4db1e021dd3ec43", "text": "return the game details after ended 0 winner side 1 nomber of player who choose option 1 2 nomber of player who choose option 2 3 total award 4 award of each winner .", "title": "", "metadata": ""}
{"_id": "2b048b70aabba4fe03c68d54f6ac9d19", "text": "This will be called automatically by the server .", "title": "", "metadata": ""}
{"_id": "8def88e745dcf47e9d63b8e0aac0e242", "text": "Returns denomination of price .", "title": "", "metadata": ""}
{"_id": "c3d98b690573fa2d3f73fe1af37a0481", "text": "Submit a presigned transfer .", "title": "", "metadata": ""}
{"_id": "eb3f63402175c853f8d7703325ec7475", "text": "Change owner vault .", "title": "", "metadata": ""}
{"_id": "55f12d8ad2b5ae497d732966e840cb37", "text": "Accept tranfer owner rights .", "title": "", "metadata": ""}
{"_id": "e1e0c175ccbee1bddaaf13a302b917db", "text": "Transfer amount of asset currency from the hotwallet to to .", "title": "", "metadata": ""}
{"_id": "f3f27c453a65fa44facf7625152a7f4b", "text": "Pause the presale .", "title": "", "metadata": ""}
{"_id": "b9d89b1ed89679e1823800c616db4587", "text": "Drain all the available SMS from the contract back to owner's wallet .", "title": "", "metadata": ""}
{"_id": "3dcfe88d60f2068ea7c367753a6bb769", "text": "Authorizes multiple amounts within multiple Pledges to be withdrawn from the vault in an efficient single call .", "title": "", "metadata": ""}
{"_id": "73ef2adbb620b026136966e4dc63944e", "text": "Tokens transfer management .", "title": "", "metadata": ""}
{"_id": "86391d389af95f74cabc2390fa2f68e9", "text": "Places a bid for the Masterpiece .", "title": "", "metadata": ""}
{"_id": "355aac10306142484e6a1280b1d9cd12", "text": "for better debug .", "title": "", "metadata": ""}
{"_id": "e1d4e21da682aef87aed1938c9cc552c", "text": "Process blacklisting .", "title": "", "metadata": ""}
{"_id": "aa27bdc7845cb05e669eb3ac2ff3b625", "text": "Burn function to burn a set amount of tokens .", "title": "", "metadata": ""}
{"_id": "39a6fc1a488a7bc4cd4737e8affe2b4e", "text": "Checks input and then creates storage buffer to configure sale token .", "title": "", "metadata": ""}
{"_id": "bf1f29c2183e981fdc59baf4339e6623", "text": "allow autonomousConverter and tokenPorter to mint token and assign to address .", "title": "", "metadata": ""}
{"_id": "da4e75bb5861e7157cc09a5d6d7efa0e", "text": "get points from a single match .", "title": "", "metadata": ""}
{"_id": "3a5a94c15ed5f9a25ed870dba727cdd5", "text": "start contract .", "title": "", "metadata": ""}
{"_id": "009550c73f7140c05d7ec7dcfb2b7632", "text": "Atomic decrement of approved spending .", "title": "", "metadata": ""}
{"_id": "fe1a76ac59200dc93ef653d125e09229", "text": "User related stuff .", "title": "", "metadata": ""}
{"_id": "c380e5c65b523e2cb85636cdd1b4bada", "text": "Public functions to be called every day .", "title": "", "metadata": ""}
{"_id": "931ae2b9e1f097ce01da727ed1ddc087", "text": "checks if an address is authorized to call game functionality .", "title": "", "metadata": ""}
{"_id": "b65229419258d73c851f02cede32d1b9", "text": "Burn away the specified amount of tokens .", "title": "", "metadata": ""}
{"_id": "9c162fb01ec82f849759bb6ff775ea12", "text": "Owner can burn a specific amount of tokens of other token holders .", "title": "", "metadata": ""}
{"_id": "42c72a172075d99beb24364c4d92fd04", "text": "Burn HELs from Users .", "title": "", "metadata": ""}
{"_id": "efd3493727756bcb8ec2a8b25064112f", "text": "send STB to the ICO owner - after ICO .", "title": "", "metadata": ""}
{"_id": "a955353a34304ed534e71d79537931f3", "text": "Users can only vote by providing a secret uint s . t .", "title": "", "metadata": ""}
{"_id": "ff78552e0e2f2f8e81f38e06d4ff558f", "text": "Get whether specified player in storage or not .", "title": "", "metadata": ""}
{"_id": "1438f8469061d70dc4bd216dac00353e", "text": "param1 address The address of the song owner .", "title": "", "metadata": ""}
{"_id": "5042b2aaf474c776bb4b759a5ddd9c65", "text": "Withdraws the money to be spent to Blind Croupier Project needs .", "title": "", "metadata": ""}
{"_id": "c3a414e2c6f0c772aa76bd0d7476fde3", "text": "Transfer _value UTT tokens from sender's account msg . sender .", "title": "", "metadata": ""}
{"_id": "8fcdd18f48b53805163975c3393854dc", "text": "can be called by crowdsale before token release , allowences is respected here .", "title": "", "metadata": ""}
{"_id": "16489695729b53992a1ef71f108cb630", "text": "Team account transaction .", "title": "", "metadata": ""}
{"_id": "0ad25eaf9dcde389b4322c626104f3cd", "text": "White list , only address in white list can buy TTC .", "title": "", "metadata": ""}
{"_id": "ac44375e9c155f281f4ffc6c3be32a01", "text": "changing ICO parameters .", "title": "", "metadata": ""}
{"_id": "48c3fd09ceb22c8c2441bdea75e928d1", "text": "Vote in favor or against an existing proposal .", "title": "", "metadata": ""}
{"_id": "2a19501de1bfe55c4083d99202f7149b", "text": "try to beat every other player in the top10 with your strongest monster ! effectively looping through all top10 players , beating them one by one and if strong enough placing your in the top10 as well .", "title": "", "metadata": ""}
{"_id": "ec99db432d97242ee07f8652bb033909", "text": "burn account hold money .", "title": "", "metadata": ""}
{"_id": "efecd3b4d3e4262b166b36c5cad9971e", "text": "Reverts if it is not possible for the sender to refund the original bet .", "title": "", "metadata": ""}
{"_id": "763ec85f5111ae42981ae50d0076839b", "text": "Increase the airdrop count to allow sweet humans asking for more beautiful Lemon Tokens .", "title": "", "metadata": ""}
{"_id": "8a87ceccc6efc3ae7f151d8f3c0e0767", "text": "this method allows to start crowdsale prematurely .", "title": "", "metadata": ""}
{"_id": "b4ab72b70e458761f2e9a550b5ef2327", "text": "Returns expiration date from 0 index of token config values .", "title": "", "metadata": ""}
{"_id": "a8ab88681e7885815ca1de20e1114402", "text": "Our tokens .", "title": "", "metadata": ""}
{"_id": "4bbbedaf1162989dcbc5176aa103a5b6", "text": "Allows one of the current owners to add a new owner .", "title": "", "metadata": ""}
{"_id": "bc32df229c81e4b84547eb0dca9fc192", "text": "Allocates initial ICO balances ( like team , advisory tokens and others ) .", "title": "", "metadata": ""}
{"_id": "f04e84aa85c9ae96c89db98cdb7fb86d", "text": "Minting function that can only be called by the admin .", "title": "", "metadata": ""}
{"_id": "09519624055ef90ed1a41fd01d6e78ce", "text": "Destroy tokens amount ( Caution ! ! ! the operation is destructive and you can not go back ) .", "title": "", "metadata": ""}
{"_id": "e3f2dc78433360625bcd44a149f54f51", "text": "emergency adjust if incorrectly set by signer , only available during the sale .", "title": "", "metadata": ""}
{"_id": "28d64b7b34671baf75909632e5b25d84", "text": "Requesting a certification confirmation is a paying feature .", "title": "", "metadata": ""}
{"_id": "cb26163279111e2d4b23852aadc9a327", "text": "Forbid specified address to make transfers in lock up period .", "title": "", "metadata": ""}
{"_id": "542a4b57b422a55b91f877e39b08e9ac", "text": "Used only if there are some leftover funds ( because of topUpBalance ) .", "title": "", "metadata": ""}
{"_id": "3360996d295efe610aebe4b1c5922358", "text": "Returns the address currently assigned ownership of a given Monster .", "title": "", "metadata": ""}
{"_id": "a74330a3709457e54340aeacc599d6a0", "text": "Since the HeroToken contract is re-deployed due to optimization .", "title": "", "metadata": ""}
{"_id": "11203bfc4e254f45108c57a075b8b832", "text": "withdraw collects due funds in a safe manner .", "title": "", "metadata": ""}
{"_id": "18ff6a49e6bc9dfc0efe4e72a3c593be", "text": "Assigns ownership of a specific Pizza to an address .", "title": "", "metadata": ""}
{"_id": "8a7277574366809f4c080266c520d8a8", "text": "Very dangerous action and should be only used for testing .", "title": "", "metadata": ""}
{"_id": "4bdac0dbf81f3d1d335c0761d4262d3e", "text": "Add an address to the Approved List .", "title": "", "metadata": ""}
{"_id": "d53dd8f6e28975042b16cbc6fe51aa76", "text": "Delete Team or Adviser accounts .", "title": "", "metadata": ""}
{"_id": "e14063f57fe834103c5853f128df9c51", "text": "Contract receive ETH ( payable ) from sender and transfer some amount of tokens to him .", "title": "", "metadata": ""}
{"_id": "6857e40ab3210b4f6752083881bd6091", "text": "Only when all the winnings are supposed to be claimed , owner can receive the fees .", "title": "", "metadata": ""}
{"_id": "49eb150dbb87fb58405d2fdf0079c4bd", "text": "onlyOwner changes the setting to allow transfer tokens .", "title": "", "metadata": ""}
{"_id": "c38d745e1ebc6a318e8253b2d67678ae", "text": "Since the full cycle of calculations in a smart contract costs a big amount of gas and the smart contract is not able to calculate the exact block the major part of calculations is transferred to the server out of the smart contract ( though using functions of reading the smart contract ) .", "title": "", "metadata": ""}
{"_id": "2fce6555d6143d1b4cd54f007b297757", "text": "request refund .", "title": "", "metadata": ""}
{"_id": "20a8b4f46df33268848b150f6093e447", "text": "the token sale contract ( s ) and team can move tokens .", "title": "", "metadata": ""}
{"_id": "98c0991ebe37a601a67daff0441086f3", "text": "issues new Neumarks to msg . sender .", "title": "", "metadata": ""}
{"_id": "0bcf716e18f56a86dbbb0a0c8491954b", "text": "Dev : ERC20 standard transfer function .", "title": "", "metadata": ""}
{"_id": "81a48578c6a4d2a1fbffce34483b49f8", "text": "vestings state access .", "title": "", "metadata": ""}
{"_id": "8514790b35a486febbec50846cbf00db", "text": "The foundation may veto a motion at any time .", "title": "", "metadata": ""}
{"_id": "535ebd042660f640378c310e351915da", "text": "Check whether activation is scheduled .", "title": "", "metadata": ""}
{"_id": "13a248f7269a321180b41f90e9dfa368", "text": "These two setters are present only to correct block numbers if they are off from their target date by more than , say , a day .", "title": "", "metadata": ""}
{"_id": "3aa3a336833e510efcc10a32e1cb932e", "text": "Withdraws tokens from the contract if they accidentally or on purpose was it placed there .", "title": "", "metadata": ""}
{"_id": "4c95bcfe6a82540438e5860161e7888b", "text": "check the total of vested and released tokens assigned to a particular addresss ( this is the actual token balance ) implements ERC20 / ERC223 interface .", "title": "", "metadata": ""}
{"_id": "dc4e374c93ec21bf2b4e504f3077048a", "text": "Function to pause PreICO .", "title": "", "metadata": ""}
{"_id": "6865366f7cda0c894279ab6e872f96af", "text": "Utility Methods .", "title": "", "metadata": ""}
{"_id": "b2a2373da67c78891af5528d46ccc607", "text": "user balance .", "title": "", "metadata": ""}
{"_id": "a4e55371887c08ba633c9624ef23c9aa", "text": "Revoke the grant for the specified address , transfer the tokens to the owner .", "title": "", "metadata": ""}
{"_id": "4b781964d33eed7630954bcd4b333fdf", "text": "Tokens per ETH .", "title": "", "metadata": ""}
{"_id": "468f4e1e02089654742ad010c9375b3f", "text": "The following functions designed for mist UI .", "title": "", "metadata": ""}
{"_id": "77ebcde1885254aeac17ed75dbc954a4", "text": "mitigate short address attack thanks to https : / / github . com / numerai / contract / blob / c182465f82e50ced8dacb3977ec374a892f5fa8c / contracts / Safe . sol L30-L34 .", "title": "", "metadata": ""}
{"_id": "f8f6b55f13bbbadc5d29ec11508c4959", "text": "Current token balance of this contract .", "title": "", "metadata": ""}
{"_id": "bae56196544838fd63685c46ec423a9f", "text": "set transfer lock .", "title": "", "metadata": ""}
{"_id": "91252bbf4f7a0ba1ee10f43056b02d77", "text": "Check interest due .", "title": "", "metadata": ""}
{"_id": "f72126f49ca0a67651e1233f96cac247", "text": "Transfers tokens held by this contract .", "title": "", "metadata": ""}
{"_id": "b6375c5f2805f79f3735e299f432d7b9", "text": "Set the address of the dungeon token contract .", "title": "", "metadata": ""}
{"_id": "ffa87c945fa59c0c089d6c02706b05dc", "text": "Receive tokens and generate a log event .", "title": "", "metadata": ""}
{"_id": "42810dd1cfbe427d662dd82f641e77e9", "text": "Change admin address .", "title": "", "metadata": ""}
{"_id": "db1780e13b7e0199cd0797ba339cea1d", "text": "internal logic around adding a ballot .", "title": "", "metadata": ""}
{"_id": "8d9f98f61b095a1bf77200625c5d2c79", "text": "The modifier onlyLocked prevents token holders from collecting their profits when the token contract is in an unlocked state .", "title": "", "metadata": ""}
{"_id": "a1670ff3309e3eeb71f2a4f2a571fbd3", "text": "Returns floor ( ln ( numerator / denominator ) * 2 precision ) .", "title": "", "metadata": ""}
{"_id": "a87255b2c10b54654bac077ca7baf8b4", "text": "Holder-centric getter functions .", "title": "", "metadata": ""}
{"_id": "8804235918e1bdcae37986f74323d0c1", "text": "after the ICO has run its course , the withdraw account can drain funds bit-by - bit as needed .", "title": "", "metadata": ""}
{"_id": "e4ecb301f0f93313c34eceb93900cbc0", "text": "For creating team .", "title": "", "metadata": ""}
{"_id": "5992e783ce71efb21053bf093be4f7c7", "text": "ERC 721 transfer from .", "title": "", "metadata": ""}
{"_id": "c878b4fe29deee3670c06f1e160a626f", "text": "Returns the rate of tokens per wei at the present time .", "title": "", "metadata": ""}
{"_id": "54724e27edfc1f8f7f6bbb35bcaa7ab0", "text": "Returns number of tokens owned by given address .", "title": "", "metadata": ""}
{"_id": "43dc4c5e578d32688c4c36e0878648d4", "text": "Change the owner .", "title": "", "metadata": ""}
{"_id": "49e151ae884d37bb0eee6dc848543eaf", "text": "Safeguard a value in Wei .", "title": "", "metadata": ""}
{"_id": "bc6c3d25be21549c5904e5c29f2cf6b0", "text": "Cancel game session waiting for server acceptance .", "title": "", "metadata": ""}
{"_id": "10787b54b32e0e7b74f9f3d752665bc6", "text": "Total tokens availale for the sale in weis .", "title": "", "metadata": ""}
{"_id": "a5eda4a06bee34630f4ef25918ecdeb4", "text": "Increment _acct balance by _val .", "title": "", "metadata": ""}
{"_id": "213c4e3ca73ed864c9e6b3b9ccbba42a", "text": "Restricts games for the allowed table stakes .", "title": "", "metadata": ""}
{"_id": "e1c1ee2b3bcec750432b4f6a78f91e10", "text": "This method is for getting bcdctoken as rewards .", "title": "", "metadata": ""}
{"_id": "f397d790f910ff4c15c1cdb39215ed81", "text": "Ensure there's enough gas left ( minGasForDrawing is an estimate ) and that the gas price is enough to ensure it doesnt take an eternity to process the draw tx .", "title": "", "metadata": ""}
{"_id": "1fe838a3d1fabdf56e3fff9b1d92501a", "text": "xrateProviders length accessor .", "title": "", "metadata": ""}
{"_id": "9c2ff0b9af03ca91c5a9b30adb4dd748", "text": "Modifier that checks that the contract has finalized .", "title": "", "metadata": ""}
{"_id": "dadd4724bf42f0ff69f671ed70db9d90", "text": "Sets a previously-passed - in destination in storage to the value .", "title": "", "metadata": ""}
{"_id": "1d6b980dd2ac074408f633d02941ba76", "text": "Book a room for a certain address , internal function .", "title": "", "metadata": ""}
{"_id": "3cb0013fe6e03599b04719aa5e2080f1", "text": "Creates a new Movie with the given name .", "title": "", "metadata": ""}
{"_id": "6f07dd3f8244d0dc5a3373dac03d33d1", "text": "Allows parties to see if one is blacklisted .", "title": "", "metadata": ""}
{"_id": "4cddb0d1126d83cb6a8e09586d3a00b1", "text": "Checks if a poll exists , throws if the provided poll is in an impossible state .", "title": "", "metadata": ""}
{"_id": "144e965c748670d369a411082d73233a", "text": "Destroy tokens from other account with allowance .", "title": "", "metadata": ""}
{"_id": "dfec670bdb7737c7a6b97d94b9341087", "text": "Recycle bin .", "title": "", "metadata": ""}
{"_id": "714808ca82411495fa9fca662afdbb90", "text": "International language data .", "title": "", "metadata": ""}
{"_id": "e0e03fe01f4d56626a9e21a4594e9341", "text": "address The address of song owner .", "title": "", "metadata": ""}
{"_id": "338271f9424fcfb6f208fc937742fc51", "text": "Forward funds .", "title": "", "metadata": ""}
{"_id": "7b214ec6d324d024c001469b25aa57ac", "text": "Function of transferring tokens from a delegated account .", "title": "", "metadata": ""}
{"_id": "02c192bb7ea3f35f32762207d0694bb2", "text": "function to whitelist user if KYC verified returns true if whitelisting is successful else returns false .", "title": "", "metadata": ""}
{"_id": "0d1b39f981360b091e598fd8e5ee1783", "text": "Allows anybody to upgrade tokens from these contract to the new one .", "title": "", "metadata": ""}
{"_id": "04f9e20269c32c259de3ec111cf4cb13", "text": "finalize token sale .", "title": "", "metadata": ""}
{"_id": "c26b45cc61f79e3235c5df12a9d582e2", "text": "Disable bonus .", "title": "", "metadata": ""}
{"_id": "8346ef66437d29670285566a69054470", "text": "deposit your tokens to be saved .", "title": "", "metadata": ""}
{"_id": "109db594f70375f4e4f11c899cc75668", "text": "Transfer Beercoins from other address if a respective allowance exists .", "title": "", "metadata": ""}
{"_id": "8150f9e3cddad5ce81cb0d11c25bceda", "text": "constant function returns the current WPX price .", "title": "", "metadata": ""}
{"_id": "df6e78dc46ec66a95c49d498dfcb75ab", "text": "This function allows someone to withdraw tokens from someone's address .", "title": "", "metadata": ""}
{"_id": "267d4014987697f9bc9606556bacc528", "text": "returns true if the bytes located in txBytes by pos and script_len represent a P2SH script .", "title": "", "metadata": ""}
{"_id": "c04107250147bbcdba80b3d2e6ac6968", "text": "Enable / disable token transfers .", "title": "", "metadata": ""}
{"_id": "abc7a4d269f9669e0fcbe92e74eeb71f", "text": "Returns balance / token quanity owned by address .", "title": "", "metadata": ""}
{"_id": "3b10c0a2bc3865ca340b4608c3abe271", "text": "Transfer back remaining MANA to account .", "title": "", "metadata": ""}
{"_id": "0ec5899ef646132b0b0208b6bcda4ccc", "text": "Calculates available amount to withdraw .", "title": "", "metadata": ""}
{"_id": "580d17ec0eb9fa2e8e670d07d9a2c9e9", "text": "The function can be called only by release agent .", "title": "", "metadata": ""}
{"_id": "ed603c1b7888fe1028a306454fc6fc83", "text": "Set CSCFactoryErc721 Contract .", "title": "", "metadata": ""}
{"_id": "9232a963655a921869d246d9fb526d85", "text": "For creating NFT .", "title": "", "metadata": ""}
{"_id": "51d4401762be4dd21839838d4e096c03", "text": "Crowdsale contract mints and stores tokens in time locked contracts during crowdsale .", "title": "", "metadata": ""}
{"_id": "493f5e5266a7ca6396e6cbe78fe4b313", "text": "Invokes burn function .", "title": "", "metadata": ""}
{"_id": "656f97b5a7d96174a17dbfa3a6f9c897", "text": "Return the minimum of two uints .", "title": "", "metadata": ""}
{"_id": "8dc999200bfd916efec70cb448d27485", "text": "Setter for feeWallet smart contract ( Only owner ) .", "title": "", "metadata": ""}
{"_id": "7adc48b609eaab1a7d970170cbb9d2be", "text": "Returns whether the given spender can transfer a given token ID .", "title": "", "metadata": ""}
{"_id": "54be3bd4fe1ccd733975ecaed84f4771", "text": "Asserts crowdsale is finished , but goal not reached .", "title": "", "metadata": ""}
{"_id": "c6d48e41a857451ed90c0b29397c82b2", "text": "helper method that allows owner to pause withdrawls for any address .", "title": "", "metadata": ""}
{"_id": "adf7c738c8f66cec51a4998e0d5ea4d5", "text": "Returns the block number for when the channel was settled .", "title": "", "metadata": ""}
{"_id": "33cbfef92f2a7a4bd3bd58ba8cbe6ab9", "text": "Change the associated contract to a new address .", "title": "", "metadata": ""}
{"_id": "281114074375e884828f17c85c47a1e5", "text": "Function to stop / continue minting new tokens .", "title": "", "metadata": ""}
{"_id": "f27c2dec387e60990ca73e80574fa3d9", "text": "If product's owner want to move , he need to use this fuction for setting receiver : must use by sender .", "title": "", "metadata": ""}
{"_id": "849f508be127e5f6e6fe544d4fafff96", "text": "Add chunk 5 / 7 to the whitelist .", "title": "", "metadata": ""}
{"_id": "5cff86ac97e35d1e0d3b8ac7dc64a699", "text": "empty the crowdsale contract of Dragons and forward balance to beneficiary .", "title": "", "metadata": ""}
{"_id": "2c37080d89035bf5f52531d70b238a00", "text": "Create robot liability smart contract .", "title": "", "metadata": ""}
{"_id": "a9037e023f8edd3581572be3d30a4cdf", "text": "Override method .", "title": "", "metadata": ""}
{"_id": "b5c709d886aa55c3e25012a42ca85705", "text": "disable transfers and allow them once token is tradeable .", "title": "", "metadata": ""}
{"_id": "75b6a91c31f5b1cc179b8fa9464dbb78", "text": "Allows for setting the bridge address .", "title": "", "metadata": ""}
{"_id": "6a54d0341abcb8743fe544604047a7d3", "text": "Mint token to an specified address .", "title": "", "metadata": ""}
{"_id": "9090b9e2cbbd5e3ece5af9363aa15b0a", "text": "determine if purchase is valid and return proper number of tokens .", "title": "", "metadata": ""}
{"_id": "586f136d5f861da74e1022b3301b6927", "text": "Clear the delegate address for all tokens delegated by the sending address , unlocking the locked tokens .", "title": "", "metadata": ""}
{"_id": "6849602bea07f5df809c748b8ad46096", "text": "Economic token reserve wallet .", "title": "", "metadata": ""}
{"_id": "c268a6638865bc246a5e11ed25396af9", "text": "Ensures that once the ICO is over this contract cannot be used until the point it is destructed .", "title": "", "metadata": ""}
{"_id": "bd9f38b9d5e9b066bf34bfb433a6c5ec", "text": "Only Musk team reserve wallet .", "title": "", "metadata": ""}
{"_id": "ba07ada8365dc25bf16dca359ab130ee", "text": "Allows the owner to change the exchange rate of the token .", "title": "", "metadata": ""}
{"_id": "15ca79a292efc128c8a13b3e657ffdff", "text": "Suspende el actual contrato a favor de uno nuevo .", "title": "", "metadata": ""}
{"_id": "cb8a9d2dcddce56b0e966ce72827b460", "text": "Fire the WithdrawalRequested event .", "title": "", "metadata": ""}
{"_id": "a6832e0c8d9893e0bd029d0d7c2c284e", "text": "update release amount for single day according to dividend rule in https : / / coincool . top .", "title": "", "metadata": ""}
{"_id": "4424929a856a2f919e8847fd19001e96", "text": "Increment the number of shares for a member .", "title": "", "metadata": ""}
{"_id": "d134eea816e80aa16a805b2ad17ae33a", "text": "Burns the specified amount of tokens from the foundation .", "title": "", "metadata": ""}
{"_id": "c7ff9402bd716b36d90766a84a7d6d68", "text": "Internal call to allocated tokens purchased .", "title": "", "metadata": ""}
{"_id": "977d770359251eb00b763710c1b6adf2", "text": "Set timestamp of Stage2 start .", "title": "", "metadata": ""}
{"_id": "0ac518bdf35c86d51bd49f0246483dee", "text": "Sets the account that will be used for Platform Manager functions .", "title": "", "metadata": ""}
{"_id": "8f21b14c4ce85f9c4984f0ba43ea4792", "text": "Sets the cost for fishing in the aquarium .", "title": "", "metadata": ""}
{"_id": "af6484c4c4575bda54225a947153f45e", "text": "claiming a social identity requires a signature provided by the CryptoFamous backend to verify the authenticity of the claim .", "title": "", "metadata": ""}
{"_id": "893d1a093abbba2c6decfa755f98ea0d", "text": "Validate order parameters ( does * not * check signature validity ) .", "title": "", "metadata": ""}
{"_id": "2042be18d3953d653f854902fcc3fab3", "text": "Returns the balance associated with the relevant address .", "title": "", "metadata": ""}
{"_id": "a4537853f87ae83e1767b2b5fab545be", "text": "Helper function to claimStake that modularizes the minting via staking calculation .", "title": "", "metadata": ""}
{"_id": "9579eb895563f11925f995b9d06488c0", "text": "this method is used to TRANSFER OWNERSHIP of the CrySol Objects in the game on the BUY event .", "title": "", "metadata": ""}
{"_id": "a8045120807be99d8e6118bb69567d40", "text": "The modifier checks , if address can send tokens or not at current contract state .", "title": "", "metadata": ""}
{"_id": "993f390270c633994b27f3d7ed420ef4", "text": "Valid state to announce / confirm the winner .", "title": "", "metadata": ""}
{"_id": "91db156314b8165b7ab32336a3006de5", "text": "Checking allowance .", "title": "", "metadata": ""}
{"_id": "59f655dd4d9de855ea9ee74ca1fa8179", "text": "Loop over vesting rules , bail if date not yet passed .", "title": "", "metadata": ""}
{"_id": "1351cd00219a9aad25ec49368cc1a0dd", "text": "An internal method that creates a new LinglongCat and stores it .", "title": "", "metadata": ""}
{"_id": "5ea83affe0cc4aae8f0525e104dfc047", "text": "Change the current generation .", "title": "", "metadata": ""}
{"_id": "59b3c5d72cc56d5d0dc5a2329484ea1f", "text": "Return staff addresses list .", "title": "", "metadata": ""}
{"_id": "f8fce833a39032b57c7c0c3d4d759b92", "text": "Allows the owner to claim back ownership of the LMDA token contract .", "title": "", "metadata": ""}
{"_id": "c9ae8a7e3dc46c6f4dd7219b6d6849cd", "text": "Overrides the burn function so that it cannot be called until after transfers have been enabled .", "title": "", "metadata": ""}
{"_id": "0c1568779a50dcc63a1dd41a675fcca6", "text": "Wheter the contributor is accepted or not .", "title": "", "metadata": ""}
{"_id": "32318239d9eae5c8554f56d884cc4b01", "text": "0 - stop 1 - preSale 2 - sale 3 - Bounty First 4 - Olympic games 5 - Bounty Second .", "title": "", "metadata": ""}
{"_id": "e5e48c7d9610faf7a6fe789b75ade47b", "text": "end of testing functions helper function used when calculating win amounts .", "title": "", "metadata": ""}
{"_id": "c6fac2f5863dc6e89925ec50f2ded64e", "text": "allow fundWallet or controlWallet to add ether to contract .", "title": "", "metadata": ""}
{"_id": "3fee675e0cf8d6f5c31fc55cdd3eb598", "text": "Simple function to deposit more ETH to Double Donations .", "title": "", "metadata": ""}
{"_id": "e2c3a4e37f2ef5a0bcf4d81ecfcbb875", "text": "Creation and fetching methods .", "title": "", "metadata": ""}
{"_id": "f593347f36fd5d5cb8c7e841a74d7929", "text": "Modifier to make a function callable only when the Oraclizer is turn off .", "title": "", "metadata": ""}
{"_id": "cd0e4d68a9b04990cdee66d24fbaad0b", "text": "view number of tokens sold .", "title": "", "metadata": ""}
{"_id": "16487f983b6b02d7063a3949a18c3795", "text": "Helps in creating seed collectible . The .", "title": "", "metadata": ""}
{"_id": "7376036d500cf43fed6cb40ae19113d9", "text": "function to accept a mate offer by offering one of your own animals and paying ethers ofcourse .", "title": "", "metadata": ""}
{"_id": "e2169dcbe9ba7dd1ddcab2a30729bde8", "text": "member function to mint time based vesting tokens to a beneficiary .", "title": "", "metadata": ""}
{"_id": "3c95af57c130eea46852bffa66cbac2e", "text": "only players with profits .", "title": "", "metadata": ""}
{"_id": "683015c1176c32b8b6140c252d910bda", "text": "Withdrawal function for winner and admin .", "title": "", "metadata": ""}
{"_id": "7c46b02ca8d48ce7af48de839fdc38ee", "text": "Get the number of tokens for a specific account .", "title": "", "metadata": ""}
{"_id": "3d12137887f1780929d040f04dfdb18c", "text": "returns a array filled with commitments of address for every window a convinience function to be called for updating a GUI .", "title": "", "metadata": ""}
{"_id": "0804134d6517b17235391c38727de99b", "text": "Number of dividends received by the contract .", "title": "", "metadata": ""}
{"_id": "32a999134a9983762c8cdbf56a0dee89", "text": "Function set new Ico token price .", "title": "", "metadata": ""}
{"_id": "a720cd954bce86d3961a94b3633b4e98", "text": "Creates a specific amount of tokens and credits them to the Mint .", "title": "", "metadata": ""}
{"_id": "dd57ca89b67195bff755f25a3acd306b", "text": "MiniMe Controller Interface functions .", "title": "", "metadata": ""}
{"_id": "ea49b484aaa329da12c0394803ccc072", "text": "transfer token to _to .", "title": "", "metadata": ""}
{"_id": "604c15f9974a322afd17c43d076849a9", "text": "Sale life cycle : 1 .", "title": "", "metadata": ""}
{"_id": "203e321840e720b519fe6d1e9feae9e5", "text": "Calculates the price and transfers winnings .", "title": "", "metadata": ""}
{"_id": "5d717172f48be2a98e5815140d6d80a7", "text": "Shareable functions code implementation .", "title": "", "metadata": ""}
{"_id": "506b9cc40794aa647052acca1c9f17d9", "text": "administrator can whitelist an ambassador .", "title": "", "metadata": ""}
{"_id": "c6e28e0b21c36d95e01e88edbce201bd", "text": "Returns an array of how much ether all those trees have generated today .", "title": "", "metadata": ""}
{"_id": "24d2f1cbe2ace29a631a4bb7034a20e2", "text": "updates the protocol state by updating offset , last executor and cycle count .", "title": "", "metadata": ""}
{"_id": "a737a8ca9a21b0df6250bc4a7715159f", "text": "Returns current manager .", "title": "", "metadata": ""}
{"_id": "e6f623dcba6f7f825f1d35e878fb6917", "text": "remove holder from the holders list .", "title": "", "metadata": ""}
{"_id": "0c05a8b8e4b7f9857acbd429cd7c40a2", "text": "transfer token for a specified address similar to ERC20 transfer .", "title": "", "metadata": ""}
{"_id": "1e3fe5673631b025789c22863564cfb3", "text": "Destroys tokens from an address , this process is irrecoverable .", "title": "", "metadata": ""}
{"_id": "0f923ab8a445394b4f5e06b2a82963c0", "text": "Allows the admin to change the wallet where ETH contributions are sent .", "title": "", "metadata": ""}
{"_id": "e4d4d19dc760f44001e8bc1aebe0a8a1", "text": "Get current tier .", "title": "", "metadata": ""}
{"_id": "f9e87ca239a8975f3e8e9c7c1a9878c5", "text": "Function of token transaction .", "title": "", "metadata": ""}
{"_id": "10f27d3cbbede4141a7e43840f268455", "text": "burn the tokens , can be called only by owner .", "title": "", "metadata": ""}
{"_id": "1adc101ecd7a0d7cd51e974951788c6b", "text": "set a newRate if have a big different in ether / dollar rate .", "title": "", "metadata": ""}
{"_id": "9a38fc52f05c610d0a2d3095be0781ec", "text": "Sets new beneficiary , can be called only by the owner .", "title": "", "metadata": ""}
{"_id": "5d218205f7310b2c005d71c6d43ef394", "text": "When the crowdsale ends , tokens left are sent to the affiliate address and crowdsale is terminated .", "title": "", "metadata": ""}
{"_id": "a3ad371fc8b5e82d457222a53ef7373d", "text": "Allows the current owners to transfer control of the contract to a new owner .", "title": "", "metadata": ""}
{"_id": "a46ed0beafa23b75f2d967b7d8ff2527", "text": "Lock the vault for the two wallets .", "title": "", "metadata": ""}
{"_id": "56c4c62b526aca74278d1d439a26702a", "text": "We use this function to let the land owner update its land .", "title": "", "metadata": ""}
{"_id": "cd035957158567fc10363fc77a9c31bb", "text": "set minimal amount of ether which can be used to buy tokens .", "title": "", "metadata": ""}
{"_id": "b208952f533839740d7fd1a71d53b6bc", "text": "Dispenses daily amount of ZTH to whitelisted contract , or retrieves the excess .", "title": "", "metadata": ""}
{"_id": "22731780be61df9cb7e1643eeea45a41", "text": "how many tokens were allowed to send .", "title": "", "metadata": ""}
{"_id": "4d8615300ef37c593095773a5cfe2735", "text": "Lets participants withdraw the funds if goal was missed .", "title": "", "metadata": ""}
{"_id": "4c172776db0171f2c9a0b109edf4fe84", "text": "owner may fast-forward or delay ALL timelocks .", "title": "", "metadata": ""}
{"_id": "ea8e75ff88fc4f9bcb143bb922f09bf7", "text": "BCDC accepts Early Investment through manual process in Fiat Currency .", "title": "", "metadata": ""}
{"_id": "c4f4f086c9c53dcbfe3467ef8bcf84b7", "text": "modifier which gives specific rights to owner .", "title": "", "metadata": ""}
{"_id": "2519c494b6bd58484f3a8e9d463f5079", "text": "uint256 the current HLPMT token price in HLT ( without decimals ) .", "title": "", "metadata": ""}
{"_id": "170dc6c98974d850548ce2c946a2f7ae", "text": "Allows the owner to stop the trading ABLE tokens .", "title": "", "metadata": ""}
{"_id": "7bc3d734eb1058c31ab500f57fb8c72d", "text": "purchaseWithBTC is called from backend , where we convert .", "title": "", "metadata": ""}
{"_id": "40676a7e95aad47cc74d4c9c2cb1152a", "text": "Only EToken2 is allowed to call .", "title": "", "metadata": ""}
{"_id": "41a60f9e7a9db27615bdac26601b567f", "text": "Function to return the owner army count .", "title": "", "metadata": ""}
{"_id": "6d5bb08c690c1e0d869b8abb100b61c6", "text": "Only authorized address .", "title": "", "metadata": ""}
{"_id": "7eee8d3d3ffd7ac66ac95153b9ec7731", "text": "Tarot by donation + gas costs .", "title": "", "metadata": ""}
{"_id": "a71bb3a10e9d5a8bbe279e95e3f5f653", "text": "Owner can burn tokens .", "title": "", "metadata": ""}
{"_id": "7aac4e1ac0aec8ee257f87d6e6de75ce", "text": "Allows merchant or Monetha to initiate exchange of funds by withdrawing all funds to deposit address of the exchange .", "title": "", "metadata": ""}
{"_id": "f3f2f7d7391a92270e2c4db25da14aef", "text": "change rate .", "title": "", "metadata": ""}
{"_id": "47403eb2fca0b869ee137d5f057c8daa", "text": "Subtracts supply from tiers starting at a minimum , using up funds .", "title": "", "metadata": ""}
{"_id": "7dbbf7a963af28d7c1e8fd8798cc2890", "text": "Burning functions as withdrawing money from the system .", "title": "", "metadata": ""}
{"_id": "f74dc9e5d57d3fe6271b2552a07b3bf8", "text": "called by the manager to unpause , returns to normal state .", "title": "", "metadata": ""}
{"_id": "2e084bbe696e30693300501b70baa00b", "text": "Set the transfer fee , anywhere within the range 0-10 .", "title": "", "metadata": ""}
{"_id": "2b65f6a3611d2d991196baf5df18bfe7", "text": "return info about how much DTH the teller has staked .", "title": "", "metadata": ""}
{"_id": "3c3470e25a610636be3cd30c2fb2fe85", "text": "Set CLB to Ether rate for round .", "title": "", "metadata": ""}
{"_id": "5133935a5ffdbee4f5a48ffb29b46bb5", "text": "Returns how many pixels has been already set .", "title": "", "metadata": ""}
{"_id": "41fe202064a734230b107e964b291a7a", "text": "Creates a new State with the given name .", "title": "", "metadata": ""}
{"_id": "c323034d572abe98265cc4847c6b173b", "text": "Returns an abbreviated name for NFTokens .", "title": "", "metadata": ""}
{"_id": "ff4da4054723298378e40c6a8fff7dad", "text": "initiate the distribution .", "title": "", "metadata": ""}
{"_id": "f4398de7e23774da11f46f9375c875ff", "text": "amount of releasable token .", "title": "", "metadata": ""}
{"_id": "29dea10b12b00def57379fa8d6b20ba0", "text": "See ERC20 .", "title": "", "metadata": ""}
{"_id": "7aedb6b627cb0f1bb5c20c2ffe3f3701", "text": "Removes a user from the crowdsale whitelist .", "title": "", "metadata": ""}
{"_id": "2136124423a81c6a1b036233ce002486", "text": "Internal method for minting a fish .", "title": "", "metadata": ""}
{"_id": "e0eb713afd9bff8f558282c5452b2edb", "text": "the tokens remain in lava wallet .", "title": "", "metadata": ""}
{"_id": "13b09614c3a7f122dfa3ca724f7f1f64", "text": "Function that is called when transaction target is an address .", "title": "", "metadata": ""}
{"_id": "a8e785340fe6eeed504592337bd0f6ef", "text": "Allows the burning of a bid , for cases in which a bid was corrupted and can't be decrypted .", "title": "", "metadata": ""}
{"_id": "ef48b9cac9ac86c5ce808d4521102e22", "text": "Set a project Wallet .", "title": "", "metadata": ""}
{"_id": "b82f02d03a11cee3d076dc057233cb79", "text": "Returns current price of an FT ( ERC721 ) on sale .", "title": "", "metadata": ""}
{"_id": "c727744f4dd2ee3bf40b02667eaf11e5", "text": "administrators can : - change the name of the contract - change the name of the token - change the PoS difficulty ( How many tokens it costs to hold a masternode , in case it gets crazy high later ) they CANNOT : - take funds - disable withdrawals - kill tha contract - change the price of tokens .", "title": "", "metadata": ""}
{"_id": "362870d691083069634727bc77e1f4c0", "text": "duration - duration in seconds .", "title": "", "metadata": ""}
{"_id": "b3c08ab8d9fadc04e0e33558fe8041f7", "text": "Transfer value tokens to to address from the account of sender .", "title": "", "metadata": ""}
{"_id": "da15e609fc0dc7ab2be7f5dc454f2c90", "text": "Claim all vested tokens up to current date for myself .", "title": "", "metadata": ""}
{"_id": "a1b191002f9c7f5cc8cc7663fe31fef4", "text": "ERC20 Token Name .", "title": "", "metadata": ""}
{"_id": "292ea25b52afa91d72c56cc03e4285c2", "text": "To add address into whitelist .", "title": "", "metadata": ""}
{"_id": "0d817a62ad24af02cd0937d8fe56c463", "text": "Create a new Thing in the Registry , only for registrants .", "title": "", "metadata": ""}
{"_id": "9f4d46b877a7ccb330b6813e24816b2e", "text": "Will withdraw the whole allowance ; .", "title": "", "metadata": ""}
{"_id": "3778208e69fa0c0b2daf95811aeb04ea", "text": "claim resources .", "title": "", "metadata": ""}
{"_id": "eb63dfbeb40447227f869715f997f5a4", "text": "Returns list of executed transactions .", "title": "", "metadata": ""}
{"_id": "239334a30e78d8ec3c1fd200c61a09ee", "text": "called by contributor to claim the referral bonus .", "title": "", "metadata": ""}
{"_id": "f83a4c716ca47511cceb57dbb675ca25", "text": "Transfers the balance of the sale auction contract to the KittyCore contract .", "title": "", "metadata": ""}
{"_id": "a8aa3e0e5d924edca998ceeff9d7f186", "text": "The withdrawal function for admin .", "title": "", "metadata": ""}
{"_id": "f4605ec3318af5decf356d04b0abe0b8", "text": "web3 change token from eth .", "title": "", "metadata": ""}
{"_id": "6c989f94b0b46bee2cf074ae7d696b20", "text": "Resets newTokens to zero .", "title": "", "metadata": ""}
{"_id": "41ac7de56417df7811dffd6e4399ebed", "text": "function for sign in end of the deal ( for finis need 2 sign from 3 ) .", "title": "", "metadata": ""}
{"_id": "c735e8b57f2d6445576d8be6bafa7d45", "text": "Checks the state when validating a purchase .", "title": "", "metadata": ""}
{"_id": "4097268e3947ac9103c7d35710025522", "text": "ERC20 Methods END .", "title": "", "metadata": ""}
{"_id": "f64d5e74fd7059875bbec7eb91504394", "text": "Set policy do we need to work only with whitelisted accounts .", "title": "", "metadata": ""}
{"_id": "4ed68eb1d494f90fbd5b5aa107b28187", "text": "Manually spread iron profits to token holders .", "title": "", "metadata": ""}
{"_id": "f8fd5d8c868a8931fccc3e3473730ed2", "text": "Sender receive his pending withdrawals ( if 0 ) .", "title": "", "metadata": ""}
{"_id": "325d56be20c328abf56ae2bc939e8640", "text": "Change refill rate of bucket .", "title": "", "metadata": ""}
{"_id": "762525f16d9891b6b9c995f4ebd22f6e", "text": "Pay bonus to address .", "title": "", "metadata": ""}
{"_id": "80b42bc939703e022bdda83318d3c2a2", "text": "Only an owner can grant transfer approval .", "title": "", "metadata": ""}
{"_id": "ab9b6c15929be1c3567516a0e9102fa9", "text": "Owner can take back any accidentally sent ERC20 tokens from any address .", "title": "", "metadata": ""}
{"_id": "49b8812689056c1b5284ec1656717eb4", "text": "return if all period is finished .", "title": "", "metadata": ""}
{"_id": "439b0b4211fc827115ca4bce0450cd30", "text": "only owner can deposit ether into put option contract .", "title": "", "metadata": ""}
{"_id": "3ca327cd72e1d654a96577929d2d2043", "text": "Returns the current implementation .", "title": "", "metadata": ""}
{"_id": "f08e9e82dfd32e54d0ac5e9873782021", "text": "calculates last sale date .", "title": "", "metadata": ""}
{"_id": "622257851c6e196f9980004c7d47bcb1", "text": "Deletes an existing entry .", "title": "", "metadata": ""}
{"_id": "d686acc76a5d45f761b3da6fe5dd6350", "text": "Testing function to corroborate extra data from oraclize call .", "title": "", "metadata": ""}
{"_id": "ea9958d29a0e17fa714703d7a773c269", "text": "Sets the structures for payout distribution , last position and superior quota .", "title": "", "metadata": ""}
{"_id": "479a33f3e42c603e376a5b0a4246e014", "text": "Returns whether the address is whitelisted .", "title": "", "metadata": ""}
{"_id": "cd4a0436004e4aedabf17e323d70a4c9", "text": "Grants token .", "title": "", "metadata": ""}
{"_id": "9967dae89717d3075aceadb8cb0b5233", "text": "MINE YOUR OWN 0xBTCLOVE FUNCTIONS ! ! .", "title": "", "metadata": ""}
{"_id": "1f23d455b2f018fdf72420a9d17e9a84", "text": "start the second release phase .", "title": "", "metadata": ""}
{"_id": "92cbccbb5df8dd0dea149bdae95f04b6", "text": "Defines the way in which ether is converted to tokens .", "title": "", "metadata": ""}
{"_id": "256b8404297c302d03168206aa8e1e4d", "text": "Set humanity fund address .", "title": "", "metadata": ""}
{"_id": "1eb64d3b3a04482a8da67558748d2844", "text": "dev can stop selling this does NOT DISABLE withdrawing .", "title": "", "metadata": ""}
{"_id": "c901dae02d25ee625a3c0a870e62b034", "text": "Set oraclize gas price .", "title": "", "metadata": ""}
{"_id": "0f0982a59c99ac10629233f75e9020d8", "text": "The direction count counts the positions hold by this player in ONE direction , i . e .", "title": "", "metadata": ""}
{"_id": "24c6e8cf00308015e39b822604abf422", "text": "Transfer initial coins to target and prevent from sending receiving tokens .", "title": "", "metadata": ""}
{"_id": "ed64ee4b7877fe2e26a280b79e745bd6", "text": "Send _amount of tokens on behalf of the address from to the address to .", "title": "", "metadata": ""}
{"_id": "6f65bf28c6ddedc831ce227c5c3f2bf5", "text": "Destroys a loan using the signature and not the Index .", "title": "", "metadata": ""}
{"_id": "e220d61d8ffcbf29d26b87cafe280dc9", "text": "Calculate the total amount of transferable tokens of a holder for the current moment of calling .", "title": "", "metadata": ""}
{"_id": "240b704e1c0feffeb0c3c1de83a7cb15", "text": "Enable trading .", "title": "", "metadata": ""}
{"_id": "df3e3809f03750e6963fa5cc86e4f9a2", "text": "Scale down all orders based on historical fill or cancellation stats but key the order's original exchange rate .", "title": "", "metadata": ""}
{"_id": "c3e355fa67cc974b54324707fca74a8f", "text": "Dev charity transfer function - sends all of the charity balance to the pre-set charity address .", "title": "", "metadata": ""}
{"_id": "be83ce6227cad8f6d2de3da14a4bfa3c", "text": "Sets new token sender address .", "title": "", "metadata": ""}
{"_id": "5ef7caf24090068199d7bc215a7f4a81", "text": "Change general sale end date .", "title": "", "metadata": ""}
{"_id": "d46621972cd0b577da105a08a649160d", "text": "Allow operators to add whitelisted contracts .", "title": "", "metadata": ""}
{"_id": "6a13ab487ea3514aa0ae7d5145d37c6b", "text": "User buys ICloudSecs and pays in Ether .", "title": "", "metadata": ""}
{"_id": "a28accaf3d043dcb3685f9cf030324fb", "text": "Modifier that requires the PlatformManager account to be the function caller .", "title": "", "metadata": ""}
{"_id": "6536e9f089e4da9914e76a6969b855b4", "text": "Revoke the grant of tokens of a specifed address .", "title": "", "metadata": ""}
{"_id": "0e2591c47c7953ea1f94d4eebcef3a38", "text": "Remove a whitelisted contract .", "title": "", "metadata": ""}
{"_id": "2a3f761d4fffbefa72a8aca0254c63a6", "text": "Let the public play .", "title": "", "metadata": ""}
{"_id": "5c37a60c645282e6c892c12ea6ba5dbe", "text": "cap minting so that totalSupply MAX_TOKEN .", "title": "", "metadata": ""}
{"_id": "143f1636d10b9d5b9a4fec67b526077c", "text": "Function to distribute tokens .", "title": "", "metadata": ""}
{"_id": "fd15d66bb6d6b207cc3980ed7f5c9455", "text": "Adds a new match to the smart contract and schedules an oraclize query call to determine the winner of a match within 3 hours .", "title": "", "metadata": ""}
{"_id": "7a6d80e38fcf27bfa8dcb5c2fe1589af", "text": "Contract owner can alter the storage-peg and broker fees .", "title": "", "metadata": ""}
{"_id": "b1f73a6c61065a537c9b8e16ce3fce37", "text": "convert bytes to address .", "title": "", "metadata": ""}
{"_id": "27d67bf4a781e992235189970e453a93", "text": "Update the end of ICO time .", "title": "", "metadata": ""}
{"_id": "70a82bcacd878690d2218e4cebf4325e", "text": "Change issue contract owner .", "title": "", "metadata": ""}
{"_id": "db509144b6a66416d6d8e5709b3fce29", "text": "Withdraw team tokens after 1 year .", "title": "", "metadata": ""}
{"_id": "93a3951d8c38081b29b1228765d9e912", "text": "Withdraw funds from the contract ( failsafe ) .", "title": "", "metadata": ""}
{"_id": "9854c1aaf8fac9fe07203b7f2061b605", "text": "Checks input and creates storage buffer to update sale whitelist .", "title": "", "metadata": ""}
{"_id": "6d0c7ccfd3ca4d17c6c81e6ef48cfb19", "text": "redeem token in MOAC network .", "title": "", "metadata": ""}
{"_id": "fc414c9ec38913de500c6f42ea324db3", "text": "Token distribution to Advisors .", "title": "", "metadata": ""}
{"_id": "896b5f6dc9ea56715ae742397537aa50", "text": "Calculates total amount of tokens purchased without bonus conversion .", "title": "", "metadata": ""}
{"_id": "ee6d487ec2d9675a9764d97f3aae767f", "text": "View function that shows current bonus value .", "title": "", "metadata": ""}
{"_id": "42c0615561ee16f0dae860f40b3a6d81", "text": "Subtracts the minuend from the subtrahend , returns the difference .", "title": "", "metadata": ""}
{"_id": "39a8a26309fc81b74079d5258833048f", "text": "Validates an address - currently only checks that it isn't null .", "title": "", "metadata": ""}
{"_id": "ea508a8176bcb2880b2a89e0344b5bf8", "text": "Add hash to persistent storage .", "title": "", "metadata": ""}
{"_id": "03c5f84527bbd833f9dc5490c22096b4", "text": "Required for ERC-20 and ERC-721 compliance .", "title": "", "metadata": ""}
{"_id": "6d82bbcde60cace1147de5f3a9675a0a", "text": "set a new reference to the NFT ownership contract .", "title": "", "metadata": ""}
{"_id": "b629ae4a6c58ad040e6ce5edc17b885c", "text": "calculate fee including special promotions .", "title": "", "metadata": ""}
{"_id": "7e26ed966871079eb192aa6540273c83", "text": "Mints tokens being sold during the crowdsale phase as part of the implementation of releaseTokensTo function from the KYCBase contract .", "title": "", "metadata": ""}
{"_id": "e544dd8c642bcd199f72e56d7c246caf", "text": "Withdraws any tokens from this contract to wallet .", "title": "", "metadata": ""}
{"_id": "823f842f86cb122922326aea72ebca96", "text": "purchase token function - tokens only sold during sale period up until the max tokens purchase price is tokenPrice .", "title": "", "metadata": ""}
{"_id": "3e36882acd803bfd78d1ab0cb0760a75", "text": "Award by rndNo .", "title": "", "metadata": ""}
{"_id": "8f56a2e19cd8bffab0171af8a5be10e6", "text": "accept the ownership .", "title": "", "metadata": ""}
{"_id": "fd4d7c9da50139a5046708a100014802", "text": "send value token to to from msg . sender .", "title": "", "metadata": ""}
{"_id": "4fcd5a1cb0fe08af3874a084c24ae5b0", "text": "Fills an order with specified parameters and ECDSA signature , throws if specified amount not filled entirely .", "title": "", "metadata": ""}
{"_id": "03838564e4abfbb89dd76f5b26a97990", "text": "function to resume the crowdsale if it is paused can only be called from owner wallet .", "title": "", "metadata": ""}
{"_id": "b347785694ae9cadb33c4957462714df", "text": "This function will be used by the contract creator to generate 5 heroes ID randomly out of 55 heroes and it can be generated only once and cannot be altered at all even by contractCreator .", "title": "", "metadata": ""}
{"_id": "e23584174d41cc7e380694bb917bd7e0", "text": "Sets the limit for a guaranteed address .", "title": "", "metadata": ""}
{"_id": "782f3b0f86512dcc943989aa3c15fabb", "text": "Modifier to apply to methods to restrict access to the owner .", "title": "", "metadata": ""}
{"_id": "b2a21d40590782a6722d347da09a65cd", "text": "Checks if pValidationState is in the provided stats .", "title": "", "metadata": ""}
{"_id": "a5f9c8635b9be957993421f7388be1f5", "text": "Gets list of tokens of the requested owner .", "title": "", "metadata": ""}
{"_id": "918ad6b206fa6d67cdec29b1e29f9cc9", "text": "A user tries to claim a tile that's already owned by another user .", "title": "", "metadata": ""}
{"_id": "1b0b0e2d3c6f458dd959ebe2b9620897", "text": "Creates a new Asset with the given fields .", "title": "", "metadata": ""}
{"_id": "b2e8859e54f43bf9057a426442bfb0a8", "text": "Function voting for the success of the event .", "title": "", "metadata": ""}
{"_id": "255057461a2d3a0727d817849b07f3c5", "text": "refunds ether to investors if crowdsale is unsuccessful .", "title": "", "metadata": ""}
{"_id": "6791bf82a57466711a8d57913fec8282", "text": "place new ad to user owned area .", "title": "", "metadata": ""}
{"_id": "076957020437a929f46756e77763ab8b", "text": "Require that the voting period for the proposal has not yet ended .", "title": "", "metadata": ""}
{"_id": "2759b51942426060e776c189d8c5809c", "text": "Owner may use to change any / every connected contract address .", "title": "", "metadata": ""}
{"_id": "5c38543443a5f48b76bd94d99d032908", "text": "splits investment into master and slave wallets for security reasons .", "title": "", "metadata": ""}
{"_id": "231f9360654a7a027bd07a063d29a36e", "text": "mint new tokens with max of 197 . 5 millions .", "title": "", "metadata": ""}
{"_id": "a77b809c5f401dc537f7bdda5353fc88", "text": "That function returns canceled status .", "title": "", "metadata": ""}
{"_id": "2a0fe9d675e84ea37d10d6b4c70f4e25", "text": "Throws if called when the crowdsale is not running .", "title": "", "metadata": ""}
{"_id": "5c8c22ace3c1a7bbedca68a981c4cf5a", "text": "fails if state is not less than given .", "title": "", "metadata": ""}
{"_id": "f84f4637054eba167d3863a14dae6667", "text": "Assign balance to an account .", "title": "", "metadata": ""}
{"_id": "b6fcc1416445aaf6d2d61e4ad460c3d5", "text": "Will set the Direct Offers Comission Ratio .", "title": "", "metadata": ""}
{"_id": "96361818f40eddab774a712ace1a6e6f", "text": "Gets price based on a sample 1 ether BUY order .", "title": "", "metadata": ""}
{"_id": "23f8d37561bd0392694619a40031f892", "text": "Must be called after crowdsale ends , to do some extra finalization .", "title": "", "metadata": ""}
{"_id": "5b4662c3dcb6572c867ae72ddd8497d2", "text": "Allow splooger to cause a payload release from your FinderHyper , multiple times , up to the point at which no further release is possible . .", "title": "", "metadata": ""}
{"_id": "2a5b9f466dfec3058e9f6d9a19bfbf54", "text": "Gets balance of bank .", "title": "", "metadata": ""}
{"_id": "bb7c35a72fd50860a617d9161b61d106", "text": "Bailout - Just in case this contract ever received tokens .", "title": "", "metadata": ""}
{"_id": "0eb25b4ac05d637a1ffc6f4424db183c", "text": "check number of bets in block ( to prevent miner cheating ) .", "title": "", "metadata": ""}
{"_id": "4e7f395c5386c6f1b9f497967c1bcca6", "text": "Transfers tokens to a given address .", "title": "", "metadata": ""}
{"_id": "9b70efe1f56af6ceb2479ddee4eaac66", "text": "Approve tokens to be transfered by 0x Token Transfer Proxy .", "title": "", "metadata": ""}
{"_id": "64ba4b583f596cf4f8249d45fa3b189a", "text": "Calculates the token price ( WEI / XCH ) at the current timestamp during the auction ; elapsed time 0 before auction starts .", "title": "", "metadata": ""}
{"_id": "0654171a0f16c0297ce564a18a14a4e7", "text": "allows a winner to withdraw their rightful jackpot .", "title": "", "metadata": ""}
{"_id": "e79e9d595e1edaf154c6675223af55eb", "text": "Overridden to adjust the rate including bonus .", "title": "", "metadata": ""}
{"_id": "5730e087e51e11c06fbae645ccf71d7e", "text": "Drains ARP .", "title": "", "metadata": ""}
{"_id": "117d297bd7b2eb9223a6ef067cd2af58", "text": "Lets owner withdraw Eth from the contract .", "title": "", "metadata": ""}
{"_id": "2a59a1cd1b795049282c3f830ad33276", "text": "Any of the three reserve wallets .", "title": "", "metadata": ""}
{"_id": "abf6cb51daaf56c1444921b60971eb76", "text": "Calculate each order's fill amount .", "title": "", "metadata": ""}
{"_id": "e4fd32bd5b44edabcbb31a0e6040171c", "text": "Deploy initializes this contract if the constructor was not called .", "title": "", "metadata": ""}
{"_id": "4fa794bebdf5a619c0d64128c8b4367d", "text": "This method will change isPayableEnabled flag .", "title": "", "metadata": ""}
{"_id": "f605e1348536ce5af75d6e0f194eda95", "text": "Add a member to this contract .", "title": "", "metadata": ""}
{"_id": "65b9517ce9d79e03c4f517e66ceedbb5", "text": "Withdraw dividendEther .", "title": "", "metadata": ""}
{"_id": "eec353a9891223c5f27a1305bf34f9c1", "text": "set address for Fundaria source of ether .", "title": "", "metadata": ""}
{"_id": "64f05b496c01507933053de89830c635", "text": "Token holder upgrade their tokens to a new smart contract .", "title": "", "metadata": ""}
{"_id": "e61ea8ff023dc459096c73b434f02f0d", "text": "Only the manager can verify accounts .", "title": "", "metadata": ""}
{"_id": "b8eab9a5a3eeb731bb6463bdb7d1d432", "text": "finalize methods .", "title": "", "metadata": ""}
{"_id": "2148a7afcdfe23b995e6383ff7479674", "text": "deploy ATM and start Freeze cycle .", "title": "", "metadata": ""}
{"_id": "77c76a982ab6b6f905b3eceb20dd7e44", "text": "Set new maximum for amount of leaders .", "title": "", "metadata": ""}
{"_id": "a9b8578adb742c93816747960855132b", "text": "Check if user has passed KYC .", "title": "", "metadata": ""}
{"_id": "7ac3b6fb834f0e51bef01f03ca571deb", "text": "Payment function that accepts ETH from whitelisted addresses till cap is reached .", "title": "", "metadata": ""}
{"_id": "c018e1b451fc536aab22b8076053002f", "text": "officially finish ICO , only allowed after ICO is ended .", "title": "", "metadata": ""}
{"_id": "d1d445c8a7f4ad372b8fb9a061232aac", "text": "Verify miner has calculte the rates correctly .", "title": "", "metadata": ""}
{"_id": "5bb769adbff01d4a577ab14f8298b8ca", "text": "Creates a new Pizza with the given name .", "title": "", "metadata": ""}
{"_id": "dc6c62ccc81b7fdcd1d122e169bc6e7d", "text": "used to take a small amount of daily tokens .", "title": "", "metadata": ""}
{"_id": "050296e10ffe225d94083120db672d6e", "text": "Internal function that this reused by the transfer functions .", "title": "", "metadata": ""}
{"_id": "28043730e4828f2ec46b26cd804fa713", "text": "The auction contract variable ( saleAuction ) is defined in MasterpieceBase to allow us to refer to them in MasterpieceOwnership to prevent accidental transfers .", "title": "", "metadata": ""}
{"_id": "6b34341d8e649c300bac5b4a670a47a6", "text": "Allows the owner to change the vault address .", "title": "", "metadata": ""}
{"_id": "89fb56cc0d95a13b5b29ec494e18d7e6", "text": "Use for disable transfers before exchange to main BOB tokens .", "title": "", "metadata": ""}
{"_id": "ec3a4fa90e9aa0b5bb1204e73c4b2c9f", "text": "If someone is generous and wants to add to pool .", "title": "", "metadata": ""}
{"_id": "525f2b35afd8f4aa72bfca3dc9e7c156", "text": "Can be overridden to add finalization logic .", "title": "", "metadata": ""}
{"_id": "cc5efcc7ba914fca1d6d5c637bc80a04", "text": "Helper to UnPause CAToken .", "title": "", "metadata": ""}
{"_id": "65408cb85b88b7d8bf751fdb1878fe87", "text": "updates a state channel .", "title": "", "metadata": ""}
{"_id": "174478eaf4d6e58fcdb890ee4370cadd", "text": "if crowdsale is unsuccessful , investors can claim refunds here .", "title": "", "metadata": ""}
{"_id": "bbe8977422a224be15570f5a6ff81326", "text": "Authorize external contract to transfer .", "title": "", "metadata": ""}
{"_id": "cb404ce52ea1c0dd9ee86be5003ff449", "text": "boolean that indicates if the operation was successful .", "title": "", "metadata": ""}
{"_id": "2f476c466412f41ba2a5c90dd9607880", "text": "Calculates how many shares are assigned to a bid .", "title": "", "metadata": ""}
{"_id": "185a00f25d593da2bf2ad6e35eed8dec", "text": "Transfer specified amount of tokens to the specified address and call standard handleDXCPayment method of Crowdsale DAO .", "title": "", "metadata": ""}
{"_id": "be1ae2a4c801ac930bdf9ad2e51c5aff", "text": "Pays interest on available funds .", "title": "", "metadata": ""}
{"_id": "f7406a3f61c5847216d973fb2a3a57fc", "text": "Make a proposal and add to pending proposals .", "title": "", "metadata": ""}
{"_id": "5f7bd418be408bf2af0d57789d4615f1", "text": "Reverts if called before the sale ends .", "title": "", "metadata": ""}
{"_id": "3d01a6300e3f71cee4664ef09b6c972f", "text": "Get the ChannelManager address for a specific token .", "title": "", "metadata": ""}
{"_id": "bd795b5c7d3962aeb42966c54813306e", "text": "Ends the operation of the contract .", "title": "", "metadata": ""}
{"_id": "b0c3dd194147b897548df60fd0ae3de3", "text": "verifies that the signer address is trusted by recovering the address associated with the public key from elliptic curve signature , returns zero on error .", "title": "", "metadata": ""}
{"_id": "7ea634ba7fa326adffc129cf38e4f4bf", "text": "Returns the number of Assets owned by a specific address .", "title": "", "metadata": ""}
{"_id": "b0595bcbfee660ed008115d30267053b", "text": "How much time is left in seconds if there's a running campaign .", "title": "", "metadata": ""}
{"_id": "ed8ca885f19ba68d9d88758f7d48a056", "text": "Refund when something goes wrong .", "title": "", "metadata": ""}
{"_id": "b3e637e0c89a397d05206c8c70bd7a67", "text": "Quick withdrawal , needs to send ether to this function for the fee .", "title": "", "metadata": ""}
{"_id": "bee81bf88fd2992cd76b6ced3641bfca", "text": "Godfather can claim contract 48 hrs after card is purchased .", "title": "", "metadata": ""}
{"_id": "cc81c8447833df9358e75b4764e602db", "text": "Allows an approved spender to transfer tokens to another address on an owner's behalf .", "title": "", "metadata": ""}
{"_id": "9d77f6979e7721b3dcb0e1947a467da9", "text": "Creates a new clone token with the initial distribution being this token at _snapshotBlock .", "title": "", "metadata": ""}
{"_id": "7f6215b85eed7325f0e4aadfe816d08a", "text": "Allows execution by the controller only .", "title": "", "metadata": ""}
{"_id": "c6b887e50890e7083ba202626091a83e", "text": "Get the number of revisions a blob has .", "title": "", "metadata": ""}
{"_id": "b573955998dbfdfea310af5cf562df3c", "text": "Throw if sender is not creator .", "title": "", "metadata": ""}
{"_id": "cd2563a8c5e6396eb4e569c5bf3d377a", "text": "Main token buy function .", "title": "", "metadata": ""}
{"_id": "40d4d8416541ed235a26058946487dca", "text": "Remove a member from this contract .", "title": "", "metadata": ""}
{"_id": "135474ad98a8160914a72d1e502dd8d2", "text": "for functions throwing a stack too deep error , this helper will free up 2 local variable spots .", "title": "", "metadata": ""}
{"_id": "9580b4d97fb29b7f27959a128db230c2", "text": "Set exchange rate before start .", "title": "", "metadata": ""}
{"_id": "fe18dce76a00d43399581502675256b4", "text": "deposits ETH to a user's account .", "title": "", "metadata": ""}
{"_id": "5bce5a3971ecc706beeab80ebf58c314", "text": "Returns the addresses that each personal stake was created for by an address .", "title": "", "metadata": ""}
{"_id": "f36de8db0b4d1553bc12e807337d175a", "text": "Main function on ETH receive .", "title": "", "metadata": ""}
{"_id": "eab01fdf23aea7eb3e34c3a57df40217", "text": "Gets the pending withdrawals of the specified address .", "title": "", "metadata": ""}
{"_id": "0b06377955c94e19c864294d3c1ab2b6", "text": "Mint for Private Fiat Transactions .", "title": "", "metadata": ""}
{"_id": "c76a9f02005e48913c21471e7debfd02", "text": "deploys and initializes a new Parameterizer contract that consumes a token at an address supplied by the user .", "title": "", "metadata": ""}
{"_id": "8caaa6a1385d98b290e29d2f6d65b6b3", "text": "Returns whether an add operation causes an overflow .", "title": "", "metadata": ""}
{"_id": "f6131ae62902365245fe8671a614ba73", "text": "These are internal functions used for calculating fees , eth and token allocations as returns a value as a accurate to 20 decimal points .", "title": "", "metadata": ""}
{"_id": "41e513d56ea4d05b75b37b36a648b557", "text": "The beneficiary address .", "title": "", "metadata": ""}
{"_id": "aca597679753814cae58b66e02a48d95", "text": "Check if a name can be used as a monarch name .", "title": "", "metadata": ""}
{"_id": "5b3a15aba42a00da53988509fb8d82ce", "text": "Allow someone to spend on your behalf .", "title": "", "metadata": ""}
{"_id": "7d99ee1c08fffc35aa09cc8cb6259e6f", "text": "Query stats of next reward , checks for expired time , too .", "title": "", "metadata": ""}
{"_id": "f33e3e191038c1621ff27e8b56b5c117", "text": "Only to be used when this contract is significantly broken , and an upgrade is required .", "title": "", "metadata": ""}
{"_id": "53809b72de635db4ac96667711d446e7", "text": "Internal : Save a new request .", "title": "", "metadata": ""}
{"_id": "ec315887d17ecd4f1823b486b61bb92c", "text": "Get current sales state .", "title": "", "metadata": ""}
{"_id": "dbc8171d000b8e0716d92534b203179d", "text": "token fallback function forwards to this .", "title": "", "metadata": ""}
{"_id": "20b6e31435a6f1a44842e6aaf2621b8e", "text": "The getSencBalance ( ) retrieve the SENC balance of the contract in Wei .", "title": "", "metadata": ""}
{"_id": "67508afc2a51dfce91d3fdd064c69ae6", "text": "update min Ethereum to invest .", "title": "", "metadata": ""}
{"_id": "be4f4abb25f99ee406abe24c6c27ab60", "text": "whitelister account .", "title": "", "metadata": ""}
{"_id": "037b8fe90f8a33dd76c4fd5afdc33a1f", "text": "Send ether and obtain the token .", "title": "", "metadata": ""}
{"_id": "4844fed8244a3b3dd78ae8ccbf3efafe", "text": "withdraw expense funds to arbiter .", "title": "", "metadata": ""}
{"_id": "fa1e9761ee833b0f9f232a086908a721", "text": "Checks if champ does exist .", "title": "", "metadata": ""}
{"_id": "39a8065a40b800570dcead769a0fb405", "text": "Tranfer tokens to address .", "title": "", "metadata": ""}
{"_id": "0ac4bdacfeae8d52542bf466d7dffba6", "text": "Sets the start time .", "title": "", "metadata": ""}
{"_id": "cda1f1fcc430235ec01e65ed4f45863b", "text": "start admin functions .", "title": "", "metadata": ""}
{"_id": "72fed490ae7c540e6c955d15c0ca09a1", "text": "Get amount of Ponzi tokens in the game . Ponzi .", "title": "", "metadata": ""}
{"_id": "45712ed937cbb27634a078925942e7af", "text": "Issues tokens for the recipient .", "title": "", "metadata": ""}
{"_id": "edb71e0522a3324975e9fcff3c3fbbdd", "text": "Change rbInformationStoreAddress .", "title": "", "metadata": ""}
{"_id": "51a5ba830acd2090035f33ecb95b87bc", "text": "Set current market rate ETH / RICH .", "title": "", "metadata": ""}
{"_id": "e7317c55644dd2e355b1e769323a2901", "text": "can be called only by admin .", "title": "", "metadata": ""}
{"_id": "3696484f0e01e51fdc9cfa26088c9f6d", "text": "If 2 hours elapsed since last purchase , increase chance of winning pot .", "title": "", "metadata": ""}
{"_id": "1b56e549da6373b167fbcb25a2b42501", "text": "Give KYC status , so token can be traded by this wallet .", "title": "", "metadata": ""}
{"_id": "345bf9ab9a138672ebe7986e55e67391", "text": "Get status .", "title": "", "metadata": ""}
{"_id": "87fddad631b741fe1180929afb655c96", "text": "Proxy function for Token .", "title": "", "metadata": ""}
{"_id": "efcb484d310069a7db43c2afc8fed9d8", "text": "private retire hodl safe action .", "title": "", "metadata": ""}
{"_id": "40eaeee298161e56a505bd715dc4938d", "text": "set the limit of ETH in cents , oraclize data smaller than this is not accepted .", "title": "", "metadata": ""}
{"_id": "ac31de64955724c19282f4ca7b08f435", "text": "Allows the upgradeability owner to upgrade the current implementation of the proxy .", "title": "", "metadata": ""}
{"_id": "69b50aff3be9f083259ab1e6fd0bcc9a", "text": "Check addressExistInWhiteList .", "title": "", "metadata": ""}
{"_id": "a17ec7776c29ceac2a042f5b47eb8c83", "text": "Mint a specific amount of tokens .", "title": "", "metadata": ""}
{"_id": "6f5e1472eee99b16c10aa3c9cf629359", "text": "Current price of MET in current auction .", "title": "", "metadata": ""}
{"_id": "f1f7bb892666839ad17f87d49fcf75b3", "text": "Pull the prize if no one has raced in 3 days : ( .", "title": "", "metadata": ""}
{"_id": "f1f40dab1e101611216e25e4edec7f5b", "text": "Set the contract that can move the staked MANA .", "title": "", "metadata": ""}
{"_id": "286083aa2b47e250a5856ebc92258cb8", "text": "Returns the address of the owner of the NFT .", "title": "", "metadata": ""}
{"_id": "ccfa474b49cd773e33a3cd148ccddd75", "text": "init segmentation .", "title": "", "metadata": ""}
{"_id": "0d86d1fd63a9e5d69709f6577d397a88", "text": "Transfer toknes from Balncec to investBalance .", "title": "", "metadata": ""}
{"_id": "34155062ac25ec1b949fab69c05e976d", "text": "Throws if called by other account than owner .", "title": "", "metadata": ""}
{"_id": "64214bc81b9087b08f5f72b0d9077e93", "text": "Add new investment to investors storage .", "title": "", "metadata": ""}
{"_id": "45fa991b86c45dda82b585f8e815d5c7", "text": "Allows owner to transfer tokens to any address .", "title": "", "metadata": ""}
{"_id": "d4e4433044679ec9634eeaef124ec4a6", "text": "Used to delete cancelled or performed operation .", "title": "", "metadata": ""}
{"_id": "38a5a130abfbf8c186185b374958babd", "text": "Send Beercoins to multiple users .", "title": "", "metadata": ""}
{"_id": "57d90dd7998b45c71986a6e24bf83bc2", "text": "Allows the Hydro API to link to the Hydro token .", "title": "", "metadata": ""}
{"_id": "dde32bcfad07b3038ebf54cc43d92df2", "text": "Change a refund policy .", "title": "", "metadata": ""}
{"_id": "2b55f772368b4f0915e917649d4440d4", "text": "Populate the whitelist , only executed by whiteListingAdmin whiteListingAdmin .", "title": "", "metadata": ""}
{"_id": "72023c87ed5322052f9ed4ede66029ff", "text": "Withdraws bonded stake to the caller after unbonding period .", "title": "", "metadata": ""}
{"_id": "daf1e6fa947bfb885b229be82d3db376", "text": "Allow the owner to retrieve all the collected ETH .", "title": "", "metadata": ""}
{"_id": "c8aec3d413e85e67a6b8dff32861a012", "text": "The powerful schema that will allow the Workshop ( crystal ) prices to fluctuate based on performance , keeping the game fresh evolve over time ! .", "title": "", "metadata": ""}
{"_id": "e809339f42e02b46768c0ace785d78cf", "text": "Get EXH Token balance for provided address .", "title": "", "metadata": ""}
{"_id": "ee66f6b399d5ccec2e8dd6bf88e28ee5", "text": "Function to authenticate user .", "title": "", "metadata": ""}
{"_id": "8a539b3208388f1f63f952870970ff4c", "text": "Get the tags related to the module factory .", "title": "", "metadata": ""}
{"_id": "0db7cd9a4bd3303f297d57d2c734b3a1", "text": "Transfer Spork tokens from msg . sender .", "title": "", "metadata": ""}
{"_id": "7db05c0f6a9b85a1091b7d3c46a077ee", "text": "to count votes this transaction should be started manually from _any_ Ethereum address after deadline .", "title": "", "metadata": ""}
{"_id": "96e2409aa02b5f2d2d5e278a3a43f0b2", "text": "Allows the owner to propose the burning of tokens .", "title": "", "metadata": ""}
{"_id": "5c23ae5aa6a5cdd33c0900317d7ba222", "text": "Sets the maximum number of addresses that can be assigned at once .", "title": "", "metadata": ""}
{"_id": "5d0f4232dcbd507c519945da2c7c21f0", "text": "Price is 1000 TechBench for 1 ETH .", "title": "", "metadata": ""}
{"_id": "a8bc855f1d2368d6640865a54a1f8004", "text": "Check to see if Section is available for first purchase .", "title": "", "metadata": ""}
{"_id": "3c3317f42f41fc0ec85551fb2a0869bc", "text": "verifies , calculates and sends tokens to beneficiary .", "title": "", "metadata": ""}
{"_id": "398ca2df692e96955b2189aff1536d23", "text": "Creates a new promo AllStar with the given name , with given _price and assignes it to an address .", "title": "", "metadata": ""}
{"_id": "05b143eeac3304091f8a4a243d3dced7", "text": "Returns the topics for a crowdsale finalization event .", "title": "", "metadata": ""}
{"_id": "d502fb914e7b8dbfe2bdea220a08ad20", "text": "Configures controlled token params .", "title": "", "metadata": ""}
{"_id": "335e28d8183e8df0ffed6eb9e9522ec5", "text": "check if pre sale is running .", "title": "", "metadata": ""}
{"_id": "74ed9725686135bd05d39df6c756ef1a", "text": "verifies the ( sender address , amount of ethers ) .", "title": "", "metadata": ""}
{"_id": "82aa538170c49222c8933793e02a4d77", "text": "The function disableTokenSwapLock ( ) is called by the wallet contract once the token swap has reached its end conditions .", "title": "", "metadata": ""}
{"_id": "a1f8a264d544b2f7147489f57cb483f0", "text": "add some ETH for oraclize updater .", "title": "", "metadata": ""}
{"_id": "fbd8eac8c9992979c3d3c83af1f6c2f8", "text": "Prevent a contract function from being reentrant-called .", "title": "", "metadata": ""}
{"_id": "4d62b7e91fc4633e951ed50e2e2261c6", "text": "This is called from dAppBridge . com .", "title": "", "metadata": ""}
{"_id": "2bde3c32c9fe2e483760fe92f15debe5", "text": "Getter function for length .", "title": "", "metadata": ""}
{"_id": "d1e016f5fe26fef2db39a019b467d5d5", "text": "Change the minimum and maximum amount that can be burned at once .", "title": "", "metadata": ""}
{"_id": "d0f95a16e886ac081df929cc7fd49bc8", "text": "function to change owner .", "title": "", "metadata": ""}
{"_id": "69e5a0e535a0f8d158518073e75e3619", "text": "Fee can only be decreased ! .", "title": "", "metadata": ""}
{"_id": "bb34b3e2e6c061eab3398a6bfaca6ada", "text": "This function reopens the contract to contributions , returning it to stage one .", "title": "", "metadata": ""}
{"_id": "c6cdc379b0a64171b11c95d19d709d4d", "text": "Function anyone can call to turn off beta , thus disabling some functions .", "title": "", "metadata": ""}
{"_id": "4d9226c0037fd06cd9db32ab3ea1cbf3", "text": "Pays out current King .", "title": "", "metadata": ""}
{"_id": "6183f5d373427db252cf4bbf2b6bccf1", "text": "Add or remove game contract , which can accept OmniDex tokens .", "title": "", "metadata": ""}
{"_id": "04e2d3e7f7925ea95c55b66dbb4a8036", "text": "Is hard cap tokens reached ? .", "title": "", "metadata": ""}
{"_id": "bcb449b0963cde6b9831df84ff9a7d2b", "text": "set gas for oraclize query .", "title": "", "metadata": ""}
{"_id": "40b1b39049c3994ec7cebe46a5c4f18c", "text": "Delegare qualcuno all'invio di token .", "title": "", "metadata": ""}
{"_id": "f282f65dcc1ab64071db3da798e45e98", "text": "RegBase compliant changeResource ( ) to restrict caller to trustee rather than owner .", "title": "", "metadata": ""}
{"_id": "cd4894403c0459da7b34a1acc176bbef", "text": "Get the number of Tokens available for the current private fund account .", "title": "", "metadata": ""}
{"_id": "2889c98d1cc1e0b1c03f0512529f7aef", "text": "current number of tokens simplified from wei .", "title": "", "metadata": ""}
{"_id": "3abbaa224b09baff0698a292e4797944", "text": "modifier to allow actions only when the minimum wei is received .", "title": "", "metadata": ""}
{"_id": "51f5fed86dbf6f1d957b4928a1f6e24b", "text": "Checks how much _spender can withdraw from _owner .", "title": "", "metadata": ""}
{"_id": "cbb41d9e7de0df45a93b984fe096137a", "text": "function name : sub purpose : be the funcion for safe substract .", "title": "", "metadata": ""}
{"_id": "e8df0a85d491f6ec3593079d9359441b", "text": "saveAprrove to fix the approve race condition .", "title": "", "metadata": ""}
{"_id": "606f57f5ac21c7a1a4dc015a61e37ba7", "text": "doTransfer is designed to allow for pledge amounts to be shifted around internally .", "title": "", "metadata": ""}
{"_id": "611b8d9fe230602617561be12b3c7b0f", "text": "This function returns the current important stats of the game such as the timer , current balance and current winner , the current press prices . . .", "title": "", "metadata": ""}
{"_id": "fdd0bfa9ab87ad6953b87645867c596f", "text": "Delegatecall functions forwarded to upgradable contract .", "title": "", "metadata": ""}
{"_id": "320c494efe20d9215d5577e0f9092487", "text": "PRE-ICO and ICO times can be changed with this function by the owner if ICO has not started .", "title": "", "metadata": ""}
{"_id": "68fde04f47ed28810d8455a5fe928182", "text": "The vacate method is called by a newer version of the CashBetCoin contract to extract the token state for an address and migrate it to the new contract .", "title": "", "metadata": ""}
{"_id": "12244ff0ae048cff39f81923f6e2309d", "text": "Determine the amount that should be paid out .", "title": "", "metadata": ""}
{"_id": "3d03c1c08eb738c24923407fae9af954", "text": "Returns ether according to rate .", "title": "", "metadata": ""}
{"_id": "d2795c18df9ebf125760dca322011689", "text": "An authorized casino wallet may use this function to make a withdrawal for the user .", "title": "", "metadata": ""}
{"_id": "9c6b3b42ba0d4a5797e817ee81a7fc4a", "text": "Transfers amounts between pledges for internal accounting .", "title": "", "metadata": ""}
{"_id": "35aafc0e2f63615be1dc78c139f83757", "text": "returns value in zwei calculating number of tokens including bonuses .", "title": "", "metadata": ""}
{"_id": "920d623a1ee32d4f93ca0321d29b9b8e", "text": "- Allow another contract to spend some tokens on your behalf .", "title": "", "metadata": ""}
{"_id": "1bfc783724398de0d7a3566acac2e7f6", "text": "Oraclize random number function the callback function is called by Oraclize when the result is ready the oraclize_randomDS_proofVerify modifier prevents an invalid proof to execute this function code : the proof validity is fully verified on-chain .", "title": "", "metadata": ""}
{"_id": "6ec5054fca36b734671ed39c95b00377", "text": "Allocate pot 2 divs for the day ( 12 : 00 cron job ) .", "title": "", "metadata": ""}
{"_id": "5c065baaa4c9b2624c8b43cd9355d5a8", "text": "Allows investors to return their investments ( in ETH ) if preICO or ICO return duration is not over yet and burns tokens .", "title": "", "metadata": ""}
{"_id": "683a804788dcce44020c94b1f95a8028", "text": "transfer request .", "title": "", "metadata": ""}
{"_id": "a59504d400090be6b893fa7153961b0a", "text": "This will be invoked by the owner , when owner wants to rescue tokens .", "title": "", "metadata": ""}
{"_id": "218efccb49f67521714c04d2f939be55", "text": "Contract balance .", "title": "", "metadata": ""}
{"_id": "6f1cd090f159d51a3df5bfbcd04e7753", "text": "this can be deleted after some testing .", "title": "", "metadata": ""}
{"_id": "b5d48d9e18c1777c8edf515128f0f720", "text": "Check if the ICO goal was reached .", "title": "", "metadata": ""}
{"_id": "4a3c00f2735a5f6a75df0b404712ccd5", "text": "sets slave wallet percentage .", "title": "", "metadata": ""}
{"_id": "806331a997267935ae59626928b33866", "text": "2 _buy .", "title": "", "metadata": ""}
{"_id": "0c2d00a08c33c548b88a39acb6cbef0f", "text": "Set the mint helper .", "title": "", "metadata": ""}
{"_id": "6a12af0d3009695e033dc92e287536da", "text": "Workaround for vulnerability described here : https : / / docs . google . com / document / d / 1YLPtQxZu1UAvO9cZ1O2RPXBbT0mooh4DYKjA_jp-RLM .", "title": "", "metadata": ""}
{"_id": "1120bc24afa1cd394c52d091b214ac4d", "text": "Getters functions for info .", "title": "", "metadata": ""}
{"_id": "c7f980ce744e057983f0361c17cc6b49", "text": "uint256 _envelopeId uint256 3 _data 0 - envelopeTypeId 1 - quantity ; 2 - willExpireIn ; 3 - random .", "title": "", "metadata": ""}
{"_id": "c79df04124f340c237de5aa793407622", "text": "minimal options after fadeout .", "title": "", "metadata": ""}
{"_id": "4f161b1773e6ce4fe0f0160d6cefac59", "text": "Sets the maintenance mode .", "title": "", "metadata": ""}
{"_id": "db96b85669601ed7a7ee1e8fb2755380", "text": "Retrieving gift template by it's id .", "title": "", "metadata": ""}
{"_id": "a73355bf1ce3f815b1956458f4711aff", "text": "set the probabilities of the results ( absolute frequencies out of 1 . 000 . 000 .", "title": "", "metadata": ""}
{"_id": "7f18d9271e0129c3ec65e0a5fcfa2d6b", "text": "Number of tokens currently in the Lottery pool .", "title": "", "metadata": ""}
{"_id": "6d0ec10e1957330f25053124931e8498", "text": "Loads early purchases data to StarbaseEarlyPurchaseAmendment contract .", "title": "", "metadata": ""}
{"_id": "056ad8f7b687e83e96de580b8ab67644", "text": "Process bonus tokens for beneficiary in case of all tokens sold .", "title": "", "metadata": ""}
{"_id": "0922eebae52e43e69cac9fb28b4f9ae7", "text": "Checks that a certain cutie is not in the middle of a breeding cooldown and is able to breed .", "title": "", "metadata": ""}
{"_id": "d63fa993408bc951cbfe4698e2e16e6c", "text": "LastSalePrice is updated if seller is the token contract .", "title": "", "metadata": ""}
{"_id": "fa6e92b67192f1699f44b6c2be2aed91", "text": "Allows the owner of a listingHash to remove the listingHash from the whitelist .", "title": "", "metadata": ""}
{"_id": "096f3553d6b7cdb9a2fcec1038506d6e", "text": "admin methods .", "title": "", "metadata": ""}
{"_id": "37c87d5b06839a2ba3c50a0f2cbe9722", "text": "returns releaseTime .", "title": "", "metadata": ""}
{"_id": "73cb690c9b79ed61001399d72b023a7f", "text": "Delete Methods .", "title": "", "metadata": ""}
{"_id": "6d2f7cd6202878040a99148b1481856d", "text": "close token sale and transfer ownership , also move unclaimed airdrop tokens .", "title": "", "metadata": ""}
{"_id": "c018a929747c48925e49d20e427229d4", "text": "show asset details .", "title": "", "metadata": ""}
{"_id": "edb3caf898dc50e6e06d1499234e383c", "text": "Withdraw allocated ether .", "title": "", "metadata": ""}
{"_id": "a2cd482e03b301073abb83062c49997f", "text": "Allow users to buy tokens and sell tokens for eth .", "title": "", "metadata": ""}
{"_id": "7150a7c5fd9f38cf243d5339412e8308", "text": "The contract owner can take away the ownership of any domain owned by this contract .", "title": "", "metadata": ""}
{"_id": "ffa2f07c1eed867b44400e7672b2ecbb", "text": "Guards actions that only the intended recipient should be able to perform .", "title": "", "metadata": ""}
{"_id": "76908eaa57f48676e86a0c28b58a4f05", "text": "this could be left available to everybody instead of owner only .", "title": "", "metadata": ""}
{"_id": "53077dda24f28825b0f0e473430a8e5b", "text": "checks player profit and number is within range .", "title": "", "metadata": ""}
{"_id": "16286f869ecc951d6829403994351eab", "text": "Change the pricing plan of service fee to be paid in NOKU tokens .", "title": "", "metadata": ""}
{"_id": "09fd1a667e633e8d14ced83db9e05211", "text": "manually send tokens to investor .", "title": "", "metadata": ""}
{"_id": "6f6a17eda087edf2d3d1f3f8e96f6714", "text": "Prepare refund of the backer if minimum is not reached burn the tokens .", "title": "", "metadata": ""}
{"_id": "9cec8dc9dbbfd509cfee4f957f34265b", "text": "_amount in MeshX , .", "title": "", "metadata": ""}
{"_id": "828a490722585a0ec6026a1b6c9ee105", "text": "Refund ethers to buyer if KYC couldn't / wasn't verified .", "title": "", "metadata": ""}
{"_id": "408e8f5cbb6562e846fc676561210372", "text": "Forwarding a transaction , internal function , doesn't check sale status for speed up mass actions .", "title": "", "metadata": ""}
{"_id": "1e95ecc8ec80f71e870c4d1f3cfaa185", "text": "Allows the current owner to explicity assign a new issuer .", "title": "", "metadata": ""}
{"_id": "3f58688b1fe1c1df27ac1dc95e0f5cbd", "text": "adds dividends to the account _to .", "title": "", "metadata": ""}
{"_id": "79e22f6013956b3569f02517895178e8", "text": "query whois the owner address of the signature .", "title": "", "metadata": ""}
{"_id": "5afe5c28abf8ca80b0a099f628b8f3a1", "text": "Function to allow the Token users to transfer among themselves .", "title": "", "metadata": ""}
{"_id": "7032ae9695d658ffd67b9f46e6f7fda5", "text": "Transfer with ERC223 specification .", "title": "", "metadata": ""}
{"_id": "cb0d13b76ab1b7b7ecaf37ccc5b558ba", "text": "owner can call this if there's a bug in the contract .", "title": "", "metadata": ""}
{"_id": "43a096d95baf7aea9910a247fd2efb9d", "text": "Calculate the date when the holder can trasfer all its tokens .", "title": "", "metadata": ""}
{"_id": "829d380d5a654075f2e17fb0c08c0470", "text": "get the battle card's ether cost .", "title": "", "metadata": ""}
{"_id": "f45c3b3126ff17e324b858dad9d7fc49", "text": "Sends an amount of Ether to the recipient .", "title": "", "metadata": ""}
{"_id": "6385ea6c56c75841c83304e65021aa06", "text": "TODO Check .", "title": "", "metadata": ""}
{"_id": "100ecad65b9111e739d83f907df04fa9", "text": "Retrieve the current dispensing rate in satoshis per gwei .", "title": "", "metadata": ""}
{"_id": "60fd0fb48b40f7aa793020eba6dc4409", "text": "Whitelist a single address .", "title": "", "metadata": ""}
{"_id": "c294f6f0143208d81efbf7554c2f42f4", "text": "To determine whether the ICO is running or stopped .", "title": "", "metadata": ""}
{"_id": "aec1156256633f7c86e4ceeaa5e8b6ed", "text": "500 XTV Tokens per claimant .", "title": "", "metadata": ""}
{"_id": "897abe2fd2e3e6bd0920a869a992fe12", "text": "Collection buyer collection sale .", "title": "", "metadata": ""}
{"_id": "5dad148b90b0de505f9c530913a448db", "text": "legacy code to enable refunds if min token supply not met ( not possible with fixed supply ) .", "title": "", "metadata": ""}
{"_id": "519dd508fb01ab6abee61025a730eb3f", "text": "updateOfferingReputation is a constant function that updates the history of a security token offering contract to keep track of previous uses .", "title": "", "metadata": ""}
{"_id": "f736f7acf501f296b5fd6415c45574ba", "text": "The function containing this modifier can only call the owner of the contract .", "title": "", "metadata": ""}
{"_id": "18c6a6a92a254a4080ffc25e6caf00ba", "text": "Returns the token balance of user .", "title": "", "metadata": ""}
{"_id": "c715ec32011d5fa2cbc8abe700426474", "text": "write action .", "title": "", "metadata": ""}
{"_id": "9292498f8ccbdf751928e2cc6b1f5593", "text": "True if the contract implements the requested interface .", "title": "", "metadata": ""}
{"_id": "4a2f2618689aa23f235bce20af32ee35", "text": "Returns a positive number if other comes lexicographically after self , a negative number if it comes before , or zero if the contents of the two slices are equal .", "title": "", "metadata": ""}
{"_id": "c200311d37192d7d8b998634f5af549d", "text": "Set a new release date for investor's transfers .", "title": "", "metadata": ""}
{"_id": "e57986bd61cdb7868dc148b59be106e2", "text": "Function to release some locked tokens .", "title": "", "metadata": ""}
{"_id": "6d582991d5168039d20537e5a011a59f", "text": "actual CAP .", "title": "", "metadata": ""}
{"_id": "7424fd43f82b1546348a9ede0bb88933", "text": "Transfer from one address to another taking into account ERC223 condition to verify that the to address is a contract or not .", "title": "", "metadata": ""}
{"_id": "5ab71fc8e3f9a7b00052495cb4a07aee", "text": "Release funds to contractor .", "title": "", "metadata": ""}
{"_id": "195e58e1e8a78a9798d02d516a4c43df", "text": "Transfer tokens to current week participants .", "title": "", "metadata": ""}
{"_id": "9d7c63d0316efa7c07558ffb1ecc0d48", "text": "Function refunds contributors if ICO was unsuccesful .", "title": "", "metadata": ""}
{"_id": "2a34a2fe36590afe0a238867607bf824", "text": "getter function to get all membersAccts .", "title": "", "metadata": ""}
{"_id": "1a251ed43a779111613f82a747703505", "text": "Standard function transfer with no _data .", "title": "", "metadata": ""}
{"_id": "dbf0bf75420c9bf162d3ae8507b77bdf", "text": "Let owner customize defauts .", "title": "", "metadata": ""}
{"_id": "57113cfcd4083ddf22a7379c22185ef7", "text": "widthdraw what is in users bank .", "title": "", "metadata": ""}
{"_id": "21833a421b7098ef79ad2bed8445db5a", "text": "This method allows to withdraw to any arbitrary ETH address .", "title": "", "metadata": ""}
{"_id": "45be638a9b51d1dc6d06fba4ab145e3f", "text": "Remove an investor from the whitelist .", "title": "", "metadata": ""}
{"_id": "41778b5f69aefd3f3920017ab287f3e7", "text": "start the Zilla Crowdsale .", "title": "", "metadata": ""}
{"_id": "c08eed36fd02bba473d85f3a7532f156", "text": "allow the owner to set a new fee for creating a GanToken .", "title": "", "metadata": ""}
{"_id": "8e13d7dffdf7b580efa8f944a416226c", "text": "When the transfer function is run , there are two different types ; transfer from superinvestors to investor and to non-investors .", "title": "", "metadata": ""}
{"_id": "0b914b57232b63f918f62495a7073c00", "text": "Method called by game contract when last participant has withdrawn msg . sender .", "title": "", "metadata": ""}
{"_id": "772732dcf1d77c92e96fd0f1328953b9", "text": "change freezing time for candy .", "title": "", "metadata": ""}
{"_id": "a2b3e1db1283406dcb4c38d3951ca20f", "text": "the bid is given up by the publisher , therefore canceling it and returning the funds to the advertiser same logic as cancelBid ( ) , but different permissions .", "title": "", "metadata": ""}
{"_id": "6160c87c826c13fb3daa241359da1960", "text": "Guards from invocation only when state is active .", "title": "", "metadata": ""}
{"_id": "b7df58a099e0ecdb3104c643dff45f36", "text": "Burns a specific amount of tokens assigned to a given address .", "title": "", "metadata": ""}
{"_id": "a867f1747f83f07b4b77e451c499b89b", "text": "Allows _spender to spend no more than _value tokens on your behalf .", "title": "", "metadata": ""}
{"_id": "652fc0a28049d8f949e67f4594869ae5", "text": "used to allow operators to transfer and to manage the pixels .", "title": "", "metadata": ""}
{"_id": "d5a4e0ffd89e441d36f3802fab24deb0", "text": "Allow transfers from the seller and the owner , but nobody else .", "title": "", "metadata": ""}
{"_id": "50714039f7d65681cdd665561b643cf5", "text": "Calculate rate for ICO phase .", "title": "", "metadata": ""}
{"_id": "b028559778ea397ddf7282b895c390b2", "text": "Sets gas limit .", "title": "", "metadata": ""}
{"_id": "f334de9e181d6f23830165c8ae68d4d9", "text": "Helps in redeeming the Rewards using our Oracle .", "title": "", "metadata": ""}
{"_id": "d45224b2f442a2650802fc394f3b2fb3", "text": "Returns the number of Zodiacs owned by a specific address .", "title": "", "metadata": ""}
{"_id": "bcac7058352f9c63193ef03e5ae9fefb", "text": "Functions with this modifier can only be executed not to this contract .", "title": "", "metadata": ""}
{"_id": "cb02628b3864f7e15dbf863faca015f5", "text": "condition to be allowed address to run some functions .", "title": "", "metadata": ""}
{"_id": "1492d238346ae7c2914d1cd97a902966", "text": "allow MTU transfer .", "title": "", "metadata": ""}
{"_id": "3931db3537d1207deb06d1bc6871e6ba", "text": "Used for sending own tokens to other addresses .", "title": "", "metadata": ""}
{"_id": "17f0c1d04bc32a5661d5f5900959a893", "text": "set the parameters for the contribution round associated with variables , functions , events of suffix Main .", "title": "", "metadata": ""}
{"_id": "4c62b121a5d7e8b6e2247eec62517bba", "text": "Press logic .", "title": "", "metadata": ""}
{"_id": "be43fb4b0991d56cadbd2567d2627c52", "text": "modifier to allow token creation only when the hardcap has not been reached .", "title": "", "metadata": ""}
{"_id": "d1a10b76afc5684aab66373ec4bba3dd", "text": "Push adds element as last item in array .", "title": "", "metadata": ""}
{"_id": "fd4c41f21cb3d5ced5f06b39c2f4c1f7", "text": "Allow only registrants to exec the function .", "title": "", "metadata": ""}
{"_id": "cba83d88be5a0278ce1f659a4d88146e", "text": "Creates a new Creator with the given name , price , and the total number of collectibles ordered then assigns to an address .", "title": "", "metadata": ""}
{"_id": "de17caeacaac0dc01447f05521323ac5", "text": "Extra balance removal in case any issues arise .", "title": "", "metadata": ""}
{"_id": "1f93002d78f825ad28157d2f2a3abc95", "text": "Transfer the balance from token owner's account to to account - - - Owner's account must have sufficient balance to transfer - - - 0 value transfers are allowed .", "title": "", "metadata": ""}
{"_id": "c787c70dd2614f7bdae85f2e3aa966ed", "text": "Private function to get the weekly rate as per the week no .", "title": "", "metadata": ""}
{"_id": "3cda92be2b0f3334c8d6a8f7b5afde4a", "text": "Purchase a license .", "title": "", "metadata": ""}
{"_id": "bfe69a7a476e6707b50028045e22ad05", "text": "Transfers the balance of the sale auction contract to the LinglongCatCore contract .", "title": "", "metadata": ""}
{"_id": "71ad45703633ca413971e45b20b55098", "text": "Calculates the token price ( WEI / RDN ) at the current timestamp during the auction ; elapsed time 0 before auction starts .", "title": "", "metadata": ""}
{"_id": "cc7a47e3a8d00d4628b67288af57448d", "text": "From : https : / / github . com / ethereum / EIPs / issues / 223 .", "title": "", "metadata": ""}
{"_id": "dd59f6165cd13ae670909d76ae08c043", "text": "Utility function for updating a KODA assets token URI .", "title": "", "metadata": ""}
{"_id": "e0708b66dbaf16da67a0af60594815b3", "text": "returns the expected return for selling the token for one of its reserve tokens .", "title": "", "metadata": ""}
{"_id": "933527f650d0befdcceba031305c0c00", "text": "Sets minimal signId , than can be used .", "title": "", "metadata": ""}
{"_id": "8eafc17de68d94cb84dcbcb95663a758", "text": "Reserve for team .", "title": "", "metadata": ""}
{"_id": "75253430d20465cb7297bf67187e7226", "text": "Create initial marriage contract .", "title": "", "metadata": ""}
{"_id": "7aa668183c670a45cc9a4e9d45fe7431", "text": "function to enable / disable contract operations .", "title": "", "metadata": ""}
{"_id": "f7464a1a14ad229c1741cedc1b4b4ab8", "text": "Function called by purchasers to pull tokens .", "title": "", "metadata": ""}
{"_id": "f9cd37531d5bfe88ace569f1742630f5", "text": "internal register function , signature method .", "title": "", "metadata": ""}
{"_id": "976bfac368a3831351bc6db9f25ed9df", "text": "Transmute DAC to DAT .", "title": "", "metadata": ""}
{"_id": "e4403794dfb76cbb23a971a1bab5fd01", "text": "Account Management API .", "title": "", "metadata": ""}
{"_id": "8c74e67fd6086f2c5ac242c0a5bf954f", "text": "Get a the affiliate credited for the sale of this license .", "title": "", "metadata": ""}
{"_id": "38524326b9ed9f5f22f5b9b05213e653", "text": "safely add .", "title": "", "metadata": ""}
{"_id": "4406c7ec8a6be05cab046a347efa02e9", "text": "unlocks 'investor' tokens by making them withdrawable from assetToken .", "title": "", "metadata": ""}
{"_id": "f655cd0ebd6b1849f499dbfc6d38d14f", "text": "payable so attendance only of people who really care registers You as a voter ; .", "title": "", "metadata": ""}
{"_id": "2767bf58e13abf57b1195e05563a8441", "text": "Impl LimitedTransferToken .", "title": "", "metadata": ""}
{"_id": "cfdb9f8727fdf1c0feb7c464380f28c4", "text": "Transfers asset balance between holders wallets .", "title": "", "metadata": ""}
{"_id": "ec6621217b4914d9c788f588cadd6982", "text": "Add two numbers , throws on overflow .", "title": "", "metadata": ""}
{"_id": "6ebbd828d5085b726c7e426278dd847b", "text": "Get bonus balance of an account .", "title": "", "metadata": ""}
{"_id": "5a7386e200ba504dd671fd836c6c9749", "text": "Returns all the relevant information about a specific AllStar .", "title": "", "metadata": ""}
{"_id": "45375c4d38b35dad9acfc8f4bc3f046d", "text": "Transfers tokens from senders address to another address .", "title": "", "metadata": ""}
{"_id": "c51dfe812b8200d6b3f4b860d5ee9470", "text": "Function to be called by top level contract after initialization has finished .", "title": "", "metadata": ""}
{"_id": "153549e354040147856aab06d9ec2792", "text": "Only owner function to add Exchange Accounts .", "title": "", "metadata": ""}
{"_id": "5fa8890089c1cbd40bc365ff995c893e", "text": "Push contributor data to the contract before the crowdsale so that they are eligible for priority pass .", "title": "", "metadata": ""}
{"_id": "abc24914b859164725f08248e6024cf1", "text": "Returns the number of events for a vin .", "title": "", "metadata": ""}
{"_id": "83fb9a57fff740420caf5db4b2c368be", "text": "The owner of a Masterpiece can put it up for auction .", "title": "", "metadata": ""}
{"_id": "6a0c1e78828b4525cca50a0042d0c69f", "text": "Upgrader upgrade tokens of holder to a new smart contract .", "title": "", "metadata": ""}
{"_id": "ee1cc965c67dd5d370c228eddcdee951", "text": "When contract is halted no one can buy new tokens .", "title": "", "metadata": ""}
{"_id": "5ef72bc7464d9f008b21e11750cbbbca", "text": "Winner payout .", "title": "", "metadata": ""}
{"_id": "844a57c614ebed1b0e3fd90f79af4fba", "text": "minimal amount of investment .", "title": "", "metadata": ""}
{"_id": "71957c013329193012f91377454a5d7c", "text": "Allow token transfer .", "title": "", "metadata": ""}
{"_id": "7613d90ee9565c1a59aa41689ede7ddf", "text": "Redeem a bid .", "title": "", "metadata": ""}
{"_id": "0b2a5042c962a16887794a6cebe5b901", "text": "Queries the list with _offset and _limit of voters , candidates choosen and MSP amount at a specific _blockNumber .", "title": "", "metadata": ""}
{"_id": "11cba0226aa8289c9bb9dd5faaf5fd26", "text": "To transfer back any accidental ERC20 tokens sent to this contract by owner .", "title": "", "metadata": ""}
{"_id": "f8432bfe2f35a727dbc7a515a8141691", "text": "date bonus calculation .", "title": "", "metadata": ""}
{"_id": "f34e25f6cb0e2020b3a50a2b775bd337", "text": "Throws if called by any account other than the argument .", "title": "", "metadata": ""}
{"_id": "d296ad703397ab8053c35fa9b98268ae", "text": "Function for calculate the price .", "title": "", "metadata": ""}
{"_id": "8251cbbfe2035cba299670617268e5e0", "text": "AP Ok - Only owner can execute function .", "title": "", "metadata": ""}
{"_id": "50284dfbc5303cb06f1975d3684c61f0", "text": "returns the number of assets in a state .", "title": "", "metadata": ""}
{"_id": "0d385800b1521fc60866077d6f89e9a0", "text": "Gets the balance of bonus tokens the specified address .", "title": "", "metadata": ""}
{"_id": "19b1f1c6046a7f615f1798a0147563e6", "text": "Once a player has joined the game , the creator must reveal their bet by providing the same playerSecret that was passed to createGame ( . . . ) .", "title": "", "metadata": ""}
{"_id": "b37c0bd6fedb452f9eec83c5c366e1ba", "text": "It throws an exception if the transaction does not meet the preconditions .", "title": "", "metadata": ""}
{"_id": "e4254a4344934df53e28a0ee376c8f2e", "text": "Execute bet .", "title": "", "metadata": ""}
{"_id": "6b5d0cd44e4613749a11797f7f693789", "text": "Whether the transaction was successful or not .", "title": "", "metadata": ""}
{"_id": "0e41cbf3a0edd6dbfa713648bd19f007", "text": "ERC20 approve : .", "title": "", "metadata": ""}
{"_id": "c6a8d4a5394f18af5ada8e7f29d0592a", "text": "function for checking if crowdsale goal is reached .", "title": "", "metadata": ""}
{"_id": "9765b8f3861d6d2943358df15b918973", "text": "Receives a donation in Etherose , send SEC token immediately .", "title": "", "metadata": ""}
{"_id": "105f53104ec94c09e95959961e355633", "text": "function to decreaseApproval to spender .", "title": "", "metadata": ""}
{"_id": "ca39c02bdece8d11acd3307398c2bc24", "text": "Guarantees msg . sender .", "title": "", "metadata": ""}
{"_id": "8de2ca5bcb4c98a4703813ecc6fa74ac", "text": "don t accept transactions with value less than allowed minimum .", "title": "", "metadata": ""}
{"_id": "f367562c436d4dbbaa24cbdaba42aeb2", "text": "get result of random .", "title": "", "metadata": ""}
{"_id": "faa46f193b666bc87c299ae8a804b0b7", "text": "Initialize a new game .", "title": "", "metadata": ""}
{"_id": "5b6478cb18a79bf1e583314f13c49596", "text": "Discard user registration .", "title": "", "metadata": ""}
{"_id": "1951a1d03c4061598dd85a6f640b84e0", "text": "Allows the unsigned integer stored to be changed .", "title": "", "metadata": ""}
{"_id": "a627e137e02f71349ee48be47fb5f13e", "text": "Set an upgrade agent that can handle .", "title": "", "metadata": ""}
{"_id": "00e31e36ea98a2b7062c473b309e1574", "text": "Approve function to adjust allowance to investment of each individual investor .", "title": "", "metadata": ""}
{"_id": "5ffbe961f0bac4f4a197fa4ddf202663", "text": "standard method for transfer from ERC20 .", "title": "", "metadata": ""}
{"_id": "accc4984815783b2f0f8921365f8524d", "text": "don't allow transfers before the required wait-time and don't allow transfers to this contract addr , it'll just kill tokens .", "title": "", "metadata": ""}
{"_id": "9043c18462dbe8766704867b8fd83030", "text": "get the amount has been dropped by user's address .", "title": "", "metadata": ""}
{"_id": "35ad54cef88feda6042be53d55522642", "text": "descending rate .", "title": "", "metadata": ""}
{"_id": "bcb8a8cda3dbf2942453999dc04dc964", "text": "End the auction and send the highest bid to the beneficiary and 10 to CT .", "title": "", "metadata": ""}
{"_id": "1b01c5641dfdbe88c95f75c90b2bac89", "text": "It's MANDATORY to finalize ( ) .", "title": "", "metadata": ""}
{"_id": "7fc2a2bc3269d8f10806ca9b2aeb8b23", "text": "For user to register their new public key to map holder's tokens to new blockchain tokens .", "title": "", "metadata": ""}
{"_id": "89e04796ad0fec71a5346b1655dcc2b0", "text": "Withdraw a bid that was overbid and platform owner share .", "title": "", "metadata": ""}
{"_id": "1443422a9f6b5698351d01d7ebc39a0c", "text": "burn tokens .", "title": "", "metadata": ""}
{"_id": "d1733416afb9eb3bda47daea192d1654", "text": "starts at minimum tier for participant ( requiring auth ) .", "title": "", "metadata": ""}
{"_id": "6d0179f414a5ea0e0eba1d7115a12d18", "text": "Payout any wagers associated with the sending address .", "title": "", "metadata": ""}
{"_id": "b156cf982f7492fdb2f502d30b6ab42f", "text": "Product management also checks that p exists : p . owner .", "title": "", "metadata": ""}
{"_id": "99cccdb3baf8e066df9355396510dd9c", "text": "Method called by anyone to withdraw funds to acquisitions wallet after locking period .", "title": "", "metadata": ""}
{"_id": "0faa750f3cf9395909e0fc076d322528", "text": "Set crowdsale address and transfer HEAL tokens from ethealController's SALE address .", "title": "", "metadata": ""}
{"_id": "e8ab98eee2dcc719bdd831cf3a2d0b1f", "text": "Removes a requester from the whitelist .", "title": "", "metadata": ""}
{"_id": "34a0155225892fe5f3421949190fa759", "text": "Check if the given address is a contract .", "title": "", "metadata": ""}
{"_id": "ea0a03c79f0b142478d8a5c2bf094855", "text": "Only managers can execute .", "title": "", "metadata": ""}
{"_id": "0ff0816771984d22f1d61ca0ca6ae386", "text": "Set an entire region's cloud image data .", "title": "", "metadata": ""}
{"_id": "61f4e83e9095b88197195c4854a95773", "text": "Clears the current approval of a given NFT ID .", "title": "", "metadata": ""}
{"_id": "a436b257329a06bb9b60960a7acb43df", "text": "Method to check if an asset identified by the given id exists under this DAR .", "title": "", "metadata": ""}
{"_id": "9cc6ada0cc032ff3a25d916b4d4dd291", "text": "Allow operators to update the fee for a custom combo .", "title": "", "metadata": ""}
{"_id": "01266c78bb72c6652f2189ca5df5e26c", "text": "Allows you to put Ethereum to the smart contract .", "title": "", "metadata": ""}
{"_id": "fb779bf2f0bec3b264203ca329f744ee", "text": "count the player option uint private option1Count ; uint private option2Count ; .", "title": "", "metadata": ""}
{"_id": "18d862ed40d0a1fdbb97f0cbe9594201", "text": "Remaining amount of tokens for Ico stage .", "title": "", "metadata": ""}
{"_id": "8444086d91f83ff2e149632789a08a65", "text": "Checks whether a panda is currently pregnant .", "title": "", "metadata": ""}
{"_id": "cbdafe21aaaa8807036a841e0b02d830", "text": "Probably the sky would fall down first but , in case skynet feels funny . .", "title": "", "metadata": ""}
{"_id": "eb3c73f3c25a38ad3d79028fdd47492c", "text": "Returns size of transcoder pool .", "title": "", "metadata": ""}
{"_id": "8f1251b37b325e356af63d22218d02c0", "text": "manager votes for the action .", "title": "", "metadata": ""}
{"_id": "7ea5410f630b07ea0e4e620878d6034a", "text": "Checks prefixed signatures ( e . g .", "title": "", "metadata": ""}
{"_id": "65e7775c6aaaeb435d9c091bd7e72c88", "text": "Transfer CTN between wallets .", "title": "", "metadata": ""}
{"_id": "b3493e48bfb6a477579f3e0f63fcea80", "text": "check ICO is finished .", "title": "", "metadata": ""}
{"_id": "6d9a87508b4120e1c71850ee38d60253", "text": "Determines whether a proposal exists for the provided proposal ID .", "title": "", "metadata": ""}
{"_id": "69a136f7c7fc6ae4e3bfa10210ec8aff", "text": "Get the number of tokens bought at the regular price for an address .", "title": "", "metadata": ""}
{"_id": "ded1462055e48b1b7c8c9c97d7b8bdb5", "text": "Override this method to mock current time .", "title": "", "metadata": ""}
{"_id": "227c3f8eb736073a87e869773efcf106", "text": "Allows the Hydro API to changes the unofficial user fee .", "title": "", "metadata": ""}
{"_id": "fb819f5a7048e7643bf05a0b3bb52fcd", "text": "true if HarborPresale event has ended .", "title": "", "metadata": ""}
{"_id": "297f979584cc1886660851add573e894", "text": "Send tokens from contract .", "title": "", "metadata": ""}
{"_id": "05795a4141bbb6529e5cbaf22bf6545c", "text": "remaining number of tokens .", "title": "", "metadata": ""}
{"_id": "6fe55dd15305f93145151a04be3e1f84", "text": "Indicates whether or not the given bet is a valid bet .", "title": "", "metadata": ""}
{"_id": "ca745f2bc48742c70c15db4f6be12ebe", "text": "Get current Listing Contract address .", "title": "", "metadata": ""}
{"_id": "b32b6590dae3f91e56fe145939e9cc89", "text": "Allows for the beneficiary to withdraw their funds , rejecting further deposits .", "title": "", "metadata": ""}
{"_id": "7c77ef27f0d4a66ae644e5af16bf06a1", "text": "Allows the developer to shut down everything except withdrawals in emergencies .", "title": "", "metadata": ""}
{"_id": "55c26efa0bea9fae68e35fe231fc5e3f", "text": "help to refund token to users . this .", "title": "", "metadata": ""}
{"_id": "e4f8976cef4f58b73b9f6164e95e476a", "text": "Detach is executed by sale contract or token pools contract .", "title": "", "metadata": ""}
{"_id": "cfe3c0f1e93224ef7c916c0cb328a65d", "text": "Require _proposedAddress to have been proposed already .", "title": "", "metadata": ""}
{"_id": "d73b6fb6683eada470c9bda42d9f5d49", "text": "Authorize a third party _operator to manage ( send ) msg . sender 's .", "title": "", "metadata": ""}
{"_id": "be7818c7e8cfedbeb4e9ee9ad2af8cff", "text": "Return whether a transcoder is registered .", "title": "", "metadata": ""}
{"_id": "3b4ab6cfeb4b6fea6fc24509d6c9189a", "text": "Finalize method marks the point where token transfers are finally allowed for everybody .", "title": "", "metadata": ""}
{"_id": "9d90294dd210d7b9d3a56b7eb9f653a6", "text": "Allows to change the token address .", "title": "", "metadata": ""}
{"_id": "cf76b7b94df3e002f2f39613fd2cce05", "text": "Computing height of a building with respect to city progression .", "title": "", "metadata": ""}
{"_id": "39144fe25a5cff67b28c9ce815e1a9d2", "text": "set managers .", "title": "", "metadata": ""}
{"_id": "63e5786c0217b14a862ebb0029d9651a", "text": "Add to balance .", "title": "", "metadata": ""}
{"_id": "b7cd3e3b069d09f1fdd77cce6a6f6c21", "text": "Allows creator to issue tokens .", "title": "", "metadata": ""}
{"_id": "20341432eec81460db146c451769cd94", "text": "Gets the total amount of assets stored by the contract .", "title": "", "metadata": ""}
{"_id": "edacdcf4aea4b31d5d601578a0a2da5d", "text": "State 0 rules .", "title": "", "metadata": ""}
{"_id": "5931f07e243a2b50ecc3b21b62bef20c", "text": "Allocate ETH for stakeholders .", "title": "", "metadata": ""}
{"_id": "0be02144324df395f316af2f79713ef5", "text": "Allows a participant to ensure they receive a specfic rate when purchasing to prevent front-running by the owner .", "title": "", "metadata": ""}
{"_id": "e44b6d7ec4d25e9b19e1fcdd49c876f0", "text": "Register a name that's not currently registered .", "title": "", "metadata": ""}
{"_id": "01ba1201d57591f62ac7602133129b81", "text": "Sets _newManager as the manager of the permission _role in _app .", "title": "", "metadata": ""}
{"_id": "f3f5704513dc2ffba69e1a39a1ed674e", "text": "restore tokens from previous contract .", "title": "", "metadata": ""}
{"_id": "5252f5088f4ee77fa053d3f049917a07", "text": "get total black cards .", "title": "", "metadata": ""}
{"_id": "0ce34fbb2d6d4a594a968529c9dac93a", "text": "Returns the available supple ( total supply minus tokens held by owner ) .", "title": "", "metadata": ""}
{"_id": "ed8754914945705eab21830e8524ef8d", "text": "startPrice , currPrice , earnings , baseHealth , baseAttack , baseArmor , baseSpeed , numTanks .", "title": "", "metadata": ""}
{"_id": "4fe6144f0fc9aa49c9dec2f4f71abbc3", "text": "Allows the owner to add a new minter .", "title": "", "metadata": ""}
{"_id": "71ed9c0c797cecdcec23f6cf90d006b0", "text": "changeBountyDeadline ( ) : allows the issuer to change a bounty's deadline .", "title": "", "metadata": ""}
{"_id": "e8ad742e331156ca9528756c0cb915e7", "text": "dev Fix for eht ERC20 short address attack .", "title": "", "metadata": ""}
{"_id": "41c1387a536422a591e7e5fda5f39fd4", "text": "standard erc20 token balance in wallet from specific token address .", "title": "", "metadata": ""}
{"_id": "b98bf7ce21709a707c79f8f053afc108", "text": "function buyTokens - Collect Ethers and transfer tokens .", "title": "", "metadata": ""}
{"_id": "2a7599a7baa863857f7ee7c942cf80b7", "text": "In case any errors happen the balance can be modified manually , it will only be used as last resort ! .", "title": "", "metadata": ""}
{"_id": "8bb341aab0b2c1eecf3f764965ceb057", "text": "Spec : Send value amount of tokens to address to .", "title": "", "metadata": ""}
{"_id": "60108065e4a228c7e9805341c07bab55", "text": "Appointing administrator by owner .", "title": "", "metadata": ""}
{"_id": "19efc53d549044be15c68e1cf7fda93c", "text": "Returns 5 . 00 .", "title": "", "metadata": ""}
{"_id": "f147b19f8063b1cf5ab2eb66e6525268", "text": "Retrieve the height of the node .", "title": "", "metadata": ""}
{"_id": "a31b10333bcdda332e2587898ea7f6cf", "text": "Withdrawal Etherium from smart-contract .", "title": "", "metadata": ""}
{"_id": "6d69681d3bdab653ca02c406cc4b21cd", "text": "Calculate the Price Increase based on the current Purchase Price .", "title": "", "metadata": ""}
{"_id": "d068f57945cb8db54c889f415aeadf12", "text": "Allows the owner to change the bonus amount applied to purchases .", "title": "", "metadata": ""}
{"_id": "d13329f6d6b982c628cc868a933ba90d", "text": "Throws if called by any account other than one of the owners .", "title": "", "metadata": ""}
{"_id": "1f2e08a4ee1779c19d58ef465a712ec5", "text": "public function for requesting an updated price from server using this function requires a payment of 0 . 35 .", "title": "", "metadata": ""}
{"_id": "675a879e1430d4bebc6164b4f5c0364c", "text": "Withdraws all of charity's earnings .", "title": "", "metadata": ""}
{"_id": "f46a368039bbed243fa1d707b0d3295c", "text": "Override to reject calls unless the crowdsale is finalized or the token contract is not the one corresponding to this crowdsale .", "title": "", "metadata": ""}
{"_id": "6ff444fb30e139e2689ded48730a7939", "text": "Establece el valor de las cuotas en caso de existir .", "title": "", "metadata": ""}
{"_id": "891c954c464abca631830857b4ed3a30", "text": "number of tokens to be delivered to given investor .", "title": "", "metadata": ""}
{"_id": "3bbfe8e181c91508be6dc1bcee46ff2b", "text": "Metadata Functions .", "title": "", "metadata": ""}
{"_id": "c177bf5c6101ac13440a310125aa4e14", "text": "this closes it when we want to close - rather than waiting - this is bad .", "title": "", "metadata": ""}
{"_id": "7dc7cb46df5916058a4557d39ea8eb59", "text": "In case something goes wrong and contract needs to be redeployed , this is a way to return all contributions to the sponsors .", "title": "", "metadata": ""}
{"_id": "29b152edaa46e5491f951f0312543c90", "text": "Throws if called by any address other than an admin .", "title": "", "metadata": ""}
{"_id": "cbb00d7b4f41a26b87c981b01ebe9778", "text": "Trading Order .", "title": "", "metadata": ""}
{"_id": "1d32faaf94f15ae2f956ed263e67743a", "text": "Override ERC20 transferFrom function in order to perform fee entitlement recomputation whenever balances are updated .", "title": "", "metadata": ""}
{"_id": "47dbf781c1804d13b2b4291fe0fd7469", "text": "Set up fee distribution status thresholds .", "title": "", "metadata": ""}
{"_id": "7a794c06845dd1982dde91cc42497403", "text": "Modifier to use in derived contracts .", "title": "", "metadata": ""}
{"_id": "bd272ee49d6503663c4c5b85e605a7a2", "text": "withdraw tokens amount within vesting rules for reserved wallet .", "title": "", "metadata": ""}
{"_id": "65afb7380b7c72c9f79a2429f91d9995", "text": "Grant another address the right to transfer a specific Fighter via transferFrom ( ) .", "title": "", "metadata": ""}
{"_id": "75e5159b0d5054da9c0ace013f7d1eea", "text": "Change admin chargers .", "title": "", "metadata": ""}
{"_id": "d8903546cd25a8982feb19669199903f", "text": "function to change founder multisig wallet address .", "title": "", "metadata": ""}
{"_id": "3c645a388055049aed2156b86aa13469", "text": "Helper function to calculate ( hypothetical ) subscription cost for given seconds and price , using current exchange rates .", "title": "", "metadata": ""}
{"_id": "e9f88c9471938d0ace99950bd1e05980", "text": "Calculates the sale and wholesale portion of tokens for a given value of wei at the time of calling .", "title": "", "metadata": ""}
{"_id": "3fce7c805448adb9e9f7d742d806fa27", "text": "Retire if newer version will be available .", "title": "", "metadata": ""}
{"_id": "2eb7117084ed3447d6e75ed6dec242d6", "text": "iAqua authorized sttaff will call this function to withdraw contributed amount ( only in case crowdsale is successful ) .", "title": "", "metadata": ""}
{"_id": "5941f20d7d003915ff2fd2f56597b9b7", "text": "distributes eth based on fees to com , aff , and pooh .", "title": "", "metadata": ""}
{"_id": "893f188ce778af15fb02da818c428f56", "text": "Calculates if an amount of Ether exceeds the aggregate daily limit of 15 of contract balance or 5 of the contract balance on its own .", "title": "", "metadata": ""}
{"_id": "e39895f8abc800beb653aa04c1a81525", "text": "Freeze and unfreeze .", "title": "", "metadata": ""}
{"_id": "bdcf6d2bac62017d88c4e791f8b04ac3", "text": "Sets the transfer address of a domain for after an ENS update .", "title": "", "metadata": ""}
{"_id": "3f67a8d77883b41076e1b59112fd5ad7", "text": "Refund ETH in case minimum goal was not reached during presale .", "title": "", "metadata": ""}
{"_id": "7feb8c4d8717e9443ace32ef71b2fd71", "text": "Burn remianing tokens after the ico , .", "title": "", "metadata": ""}
{"_id": "81ba5435d09257e5ac1f5a79731de261", "text": "get a specific deployment .", "title": "", "metadata": ""}
{"_id": "bbb8b314cc10742724c547d8481a835b", "text": "Sets Step Value .", "title": "", "metadata": ""}
{"_id": "4a4c58b3624c4f1186ec12375fbc65ea", "text": "allows token holders to withdar their dragons after timelock expires .", "title": "", "metadata": ""}
{"_id": "6d2945c4ff6091c2c86534af32b48aab", "text": "INHERITED from CVExtender .", "title": "", "metadata": ""}
{"_id": "ee99c53bff6eff947cffa9c9848a206a", "text": "admin initiates a request that future ERC20 calls to trueUSD be delegated to _delegate .", "title": "", "metadata": ""}
{"_id": "184611b9ecf3486f4f907c39b23ca5fa", "text": "Finish crowdsale and token minting .", "title": "", "metadata": ""}
{"_id": "1e2413ea503e9630e73626e47bdcae63", "text": "transfer tokens if you have been delegated a wallet .", "title": "", "metadata": ""}
{"_id": "579b99cb64f9b8b471ffe706a10a3fa1", "text": "For creating Politician .", "title": "", "metadata": ""}
{"_id": "b209e09bab50669bc01caf256fc2812b", "text": "Calcute Bouns .", "title": "", "metadata": ""}
{"_id": "50898f521043cc0670210b3ca58aed03", "text": "register new exchange rate provider .", "title": "", "metadata": ""}
{"_id": "39d2b4be83ce93ea2d389395b422589b", "text": "Automate the ETH drain .", "title": "", "metadata": ""}
{"_id": "77052434b03372a8b7d74065eb166a95", "text": "This method is used to pay for the fee .", "title": "", "metadata": ""}
{"_id": "3a1ccbd13f951b78b400451b0d37b339", "text": "remove contract from whitelist .", "title": "", "metadata": ""}
{"_id": "733ba7d259e3f908b73a73c1953f2562", "text": "Sets the address of the token .", "title": "", "metadata": ""}
{"_id": "2d44219ca6dcfc7692707bd8814e9c30", "text": "Only after finishMinting and checks for bounty accounts time restrictions .", "title": "", "metadata": ""}
{"_id": "f0fa0eba3fe197b14a3721a25b4b9129", "text": "The function of creating and crediting tokens for retail customers , participants of the bonus program .", "title": "", "metadata": ""}
{"_id": "d945daa30c7b513c1dbad6c80f84638f", "text": "Claim Reward .", "title": "", "metadata": ""}
{"_id": "924f35b40dc1f747c35af1fc334fe520", "text": "Sets item's payout .", "title": "", "metadata": ""}
{"_id": "36efdfa6dca456d7248c2ec7e5baa33b", "text": "Accept the contract ownership by the new owner .", "title": "", "metadata": ""}
{"_id": "a011c96ae6fc5ddc7a506d4e26a77d7a", "text": "Returns all the relevant information about a specific collectible .", "title": "", "metadata": ""}
{"_id": "53bc680fc3038921032e8c961e260219", "text": "withdraw accumulated balance , called by payee in case crowdsale failed .", "title": "", "metadata": ""}
{"_id": "2d5eef056cf658b6b6af859cc10ae6c5", "text": "Allow the owner to start the crowdsale manually .", "title": "", "metadata": ""}
{"_id": "9c0f30e6ace61e09b6be0bd88d82c29f", "text": "Checks if an uint array is sorted .", "title": "", "metadata": ""}
{"_id": "5cb89a9199de950f55aa55d006cdfe52", "text": "dev function for withdraw any amount from raised funds ( activate only if minimumTarget is reached ) .", "title": "", "metadata": ""}
{"_id": "6c1ff0fb18a0afeedbcee6a832fb74dd", "text": "Withdraw divs and send to bankroll .", "title": "", "metadata": ""}
{"_id": "afb42becd2ad2e861e614b15ef469707", "text": "Ensure no locks are in place for the given contract identifier .", "title": "", "metadata": ""}
{"_id": "153fe24b5f0ff69909de147824567b17", "text": "Only owner administration flag .", "title": "", "metadata": ""}
{"_id": "81ca92f3752587adf8da46f0a4a6b596", "text": "Whether the '_token' is part of this token changer .", "title": "", "metadata": ""}
{"_id": "90186021594ff9d7edd2fcb554f5b410", "text": "Must be called to start the crowdsale .", "title": "", "metadata": ""}
{"_id": "ae3d0c1b557e833a42f4e776ead0484f", "text": "Function to buy animals from the factory in exchange for ethers .", "title": "", "metadata": ""}
{"_id": "e60a5b10ab785bb03009dd7bcdd631b8", "text": "notLocked : ensure no coins are moved by owners prior to end of ICO .", "title": "", "metadata": ""}
{"_id": "aca9d68ba1385a17fb85164455fd4fc5", "text": "Function for taking all profit .", "title": "", "metadata": ""}
{"_id": "9c06bdea67f1ee0ae491cde9611cc716", "text": "Allows to withdraw the ETH from the CrowdSale contract .", "title": "", "metadata": ""}
{"_id": "f1712c16af946d87fb6bc2e5e3dedc25", "text": "each player can get their own portfolio .", "title": "", "metadata": ""}
{"_id": "f722708748e582e1385ddcc17cd92bd3", "text": "the creator can certify a sale , meaning it cannot be cancelled , and ETH can be withdrawn from the sale by the creator .", "title": "", "metadata": ""}
{"_id": "09fadcfb36c8743e418cb101a7ab8ad4", "text": "Updates the challenge cooldown time .", "title": "", "metadata": ""}
{"_id": "02e8dfe47909fad9b7b4d1c221c0bb8b", "text": "bool Whether _account has voted on the proposal .", "title": "", "metadata": ""}
{"_id": "38b95b36740561a109abb3fb0b31358b", "text": "Add new CC users to array .", "title": "", "metadata": ""}
{"_id": "b6dfeb6031620c2f061a95be9de15b14", "text": "Obtain the time at which the next schedule entry will vest for a given user .", "title": "", "metadata": ""}
{"_id": "e1e7389edcf69a82ae95ffd0767a0b9c", "text": "Modifier to prepend to functions adding the additional conditional requiring the paused bool to be false .", "title": "", "metadata": ""}
{"_id": "886a41cdfad312fd0ccd964037bfc5c5", "text": "Allows the current owner to change administrator account of the contract to a newAdmin .", "title": "", "metadata": ""}
{"_id": "c4536594a1b9c0cb14a39283caf4f6ff", "text": "get the approved amount of tokens to deposit .", "title": "", "metadata": ""}
{"_id": "52dc4dc1ce3fa5ffcb62c0be75f6a283", "text": "Helper fns .", "title": "", "metadata": ""}
{"_id": "2816520991e89d1a746de4acdd8028fe", "text": "To check if Contract is active .", "title": "", "metadata": ""}
{"_id": "776017fa6715ecc4651dac794b86f638", "text": "function Set allowance for other address .", "title": "", "metadata": ""}
{"_id": "a2a06082f8916aa202b3e5cbe8066839", "text": "Check policy include target group .", "title": "", "metadata": ""}
{"_id": "cdb6adca4f9fb53d2756abef0e5bad2f", "text": "return your funds after deadline if minimumTarget is not reached ( active if crowdsale close ) .", "title": "", "metadata": ""}
{"_id": "0803a817e4557ab6d64828f10a038254", "text": "Freeze the account .", "title": "", "metadata": ""}
{"_id": "13ad9b392fbafe354136baa5da463a71", "text": "Function for the frontend to dynamically retrieve the price scaling of sell orders .", "title": "", "metadata": ""}
{"_id": "e7eeaf9e0e45e99e865984662ed38106", "text": "Close the Sale phase and transition to execution phase .", "title": "", "metadata": ""}
{"_id": "001329829846bc84a115f7ca57619329", "text": "Any account can call this method to deploy a new BTTSToken contract .", "title": "", "metadata": ""}
{"_id": "d1dedde888070b8569088557697bc8b6", "text": "Throws if called by any account other than the owner , control .", "title": "", "metadata": ""}
{"_id": "2d9b88ed6792304d1db6346e049c9285", "text": "called by the CEO to unpause , returns to normal state .", "title": "", "metadata": ""}
{"_id": "6754e829239735d253b7593f5aa459e3", "text": "Owner setters for future proofing .", "title": "", "metadata": ""}
{"_id": "9ae41782823dec7d342e98d321783435", "text": "Cancels a migration .", "title": "", "metadata": ""}
{"_id": "946ac9dfb0352d4648498edda04053a8", "text": "Ensures that the sender is the admin address , and the sale is not initialized .", "title": "", "metadata": ""}
{"_id": "2bcad42b1bdf7f6491da556c983fd75f", "text": "get current user balance .", "title": "", "metadata": ""}
{"_id": "405b7986669d40574e683a1c53a8bd65", "text": "modifiers here .", "title": "", "metadata": ""}
{"_id": "c6bf1855f5b19e5f127674e557afa63b", "text": "This internal function handles withdrawals during stage two .", "title": "", "metadata": ""}
{"_id": "33ae8cdfc02988a23afc9a352759c50f", "text": "Allow a function in the given state .", "title": "", "metadata": ""}
{"_id": "b6aebe293209d084a6b8acb08a617c49", "text": "Set the urls for the link and image .", "title": "", "metadata": ""}
{"_id": "4bd585aee5e3b4f1cd7ea6470722e742", "text": "Function internal to calculate Keccak-256 hash of a request with specified parameters .", "title": "", "metadata": ""}
{"_id": "79d2734c996ab48c954e02675479e8cb", "text": "Profits are the difference between balance and threshold .", "title": "", "metadata": ""}
{"_id": "a7125142bf1ac84ab79253db7e19a990", "text": "approves the ( _to ) address to use the transferFrom function on the token with id ( _tokenId ) if you want to clear all approvals , simply pass the zero address .", "title": "", "metadata": ""}
{"_id": "2e1ddb7ebfe2d2958d773750255d6822", "text": "Return the funds to collect for the current point on the curve ( or 0 if no curves revealed yet ) .", "title": "", "metadata": ""}
{"_id": "06b47b8c63876d491cca9563fa95df87", "text": "Owner can change the exchange rate before ICO begins .", "title": "", "metadata": ""}
{"_id": "9da4950736084bbcbf05d7041074be0d", "text": "MINE YOUR OWN 0xBTCHATE FUNCTIONS ! ! .", "title": "", "metadata": ""}
{"_id": "12e35af69b5b7c3c988a8e71e29c9101", "text": "Removes a user .", "title": "", "metadata": ""}
{"_id": "9874c2d96bfc9f1c50301e4990323123", "text": "Function to revoke permission of the manager .", "title": "", "metadata": ""}
{"_id": "a79584a127a77dcec4cb03b8ca98e50a", "text": "Finalizes the crowdsale , taking care of transfer of funds to the .", "title": "", "metadata": ""}
{"_id": "88a35a3ca95773747b92dbb3d412e346", "text": "function through which owner can take back the tokens from the contract .", "title": "", "metadata": ""}
{"_id": "8530e87faa545f7adf1aaf4dc3cb30bf", "text": "gets length of investors array .", "title": "", "metadata": ""}
{"_id": "e52e64b79c128f5713673fda4e899eaf", "text": "Approves another address to claim for the ownership of the given unicorn ID .", "title": "", "metadata": ""}
{"_id": "1442378253d5c91d3c6db93bfe731834", "text": "Returns the amount of a token ( tokenAddr ) that payee can claim .", "title": "", "metadata": ""}
{"_id": "e4c3f1fbe22406bc2ef695059f1e6ed1", "text": "If anything during the point calculation and sorting part should fail , this function can reset data structures to their initial position , so as to .", "title": "", "metadata": ""}
{"_id": "9558a68e26f5b8c13e8a7dd0e4017d16", "text": "Update pool cap for tier 2 .", "title": "", "metadata": ""}
{"_id": "e327a9c26fdfa36bcebed204bd1e7882", "text": "Sets the address of the base tokens used for the swap .", "title": "", "metadata": ""}
{"_id": "6191f649d0262a3c803955a3a1dfb6b5", "text": "Set bag holders from version 1 . 0 .", "title": "", "metadata": ""}
{"_id": "6cc1d9d70a028a0f2411d3e3933fe748", "text": "call from our payment contract .", "title": "", "metadata": ""}
{"_id": "8ead257ea52d98d72f2501791d8cdc28", "text": "This function assumes that the consumer contract has logic for handling when the returned blockhash is bytes32 ( 0 ) , .", "title": "", "metadata": ""}
{"_id": "22d777ca1d47921f2e029e5ee1734cb7", "text": "Called by dev to supply the address of the ICO ( which is created after the PreICO ) .", "title": "", "metadata": ""}
{"_id": "b07ad3e33212c7615b5796a06759d3ff", "text": "Special override for the standard finishMinting function .", "title": "", "metadata": ""}
{"_id": "ad5dcee56969c5e98de5722450d794c5", "text": "Checks if last mint is 3 weeks in past .", "title": "", "metadata": ""}
{"_id": "48af9d1263ff52aba9ddb6c0741ef5e4", "text": "helper function to extra date info from block . timestamp .", "title": "", "metadata": ""}
{"_id": "eb673a29438aa31b973e44184130c284", "text": "Democ getters .", "title": "", "metadata": ""}
{"_id": "1e134bc4832a1013c473f2704e6363db", "text": "Check if a contract exists .", "title": "", "metadata": ""}
{"_id": "24f0ee4902469398e339cfe6586311e8", "text": "Supply may be increased at any time and by any amount by minting new tokens and transferring them to a desired address .", "title": "", "metadata": ""}
{"_id": "b55b5ab4c4a78a7ca62ca24e3ccce3c6", "text": "Transfer ownership of token back to wallet .", "title": "", "metadata": ""}
{"_id": "63d81c962f62133cdab01098c0622787", "text": "This function check whether ICO is currently active or not .", "title": "", "metadata": ""}
{"_id": "b13a7a2f68f4a6a606714fc3dc4b5f3d", "text": "Refunds Jiffys from escrow for a user .", "title": "", "metadata": ""}
{"_id": "b8899f557fb401afaf4cdf426160d55e", "text": "to bet which team will be the champion .", "title": "", "metadata": ""}
{"_id": "6469ae329cbdd4a52c20b44b5f40c8a5", "text": "should be 160 , 000 to save eth .", "title": "", "metadata": ""}
{"_id": "6fa62c1b3c53155c865d4c087b96eb95", "text": "Return the array of mint delegates .", "title": "", "metadata": ""}
{"_id": "39be645c9052e49ce537778011680109", "text": "solium-disable arg-overflow .", "title": "", "metadata": ""}
{"_id": "a0536bdecf528b195fc77891d74c7fc6", "text": "run it after ESlotsCrowdsale contract is deployed to approve token spending .", "title": "", "metadata": ""}
{"_id": "238739fce0dc1dfaa7bbd1a02601033b", "text": "Only requestor or proxy can generate the number .", "title": "", "metadata": ""}
{"_id": "4fd29b52a57c4deba0e2e89830b19a06", "text": "This returns the amount of tokens that an owner allowed to a spender .", "title": "", "metadata": ""}
{"_id": "36baf41a97d2a3540c9748f7cc1398cb", "text": "Withdraws all ETH deposited or BET purchased by the sender .", "title": "", "metadata": ""}
{"_id": "c74d400857ab319e3fcaa48bf083999e", "text": "Mints the below-mentioned amount of tokens allocated to the Vibeo partners .", "title": "", "metadata": ""}
{"_id": "6724a4e3d069ae760317d89d555a08da", "text": "The latest charity fraction .", "title": "", "metadata": ""}
{"_id": "345889f9899861c9f6cc16f2062ed7ee", "text": "change auxPartner .", "title": "", "metadata": ""}
{"_id": "1863fb59a4626f685686983c9bacf324", "text": "Migrate tokens to a new version of the contract .", "title": "", "metadata": ""}
{"_id": "fff0ee722b4212fb1d2377c39df7119a", "text": "Returns the current amount of UNITS .", "title": "", "metadata": ""}
{"_id": "4385992103a803fc849f6ffd84d0daed", "text": "Dev : Function to check the amount of tokens that the owner has allowed the spender to transfer .", "title": "", "metadata": ""}
{"_id": "deac4b49705a96e5e9b260e9820fb46b", "text": "Function which gets the tokens amount for current and next level .", "title": "", "metadata": ""}
{"_id": "156fd5ea98ccc24ec57897711c37f0fc", "text": "Dev : Address for the timelock tokens to be held .", "title": "", "metadata": ""}
{"_id": "0d21dbbfabecf8507e7c26b41e1ddffd", "text": "Checks whether a Dog is currently pregnant .", "title": "", "metadata": ""}
{"_id": "5209977a87138bb5194c8e4b840cf33c", "text": "Transferring a team to another owner will entitle the new owner the profits from buy .", "title": "", "metadata": ""}
{"_id": "a3ae8f3cda0b631ef3698a7630e18d87", "text": "Returns guaranteed duration of message based on amount of wei sent with message .", "title": "", "metadata": ""}
{"_id": "ccd7d4a7588bd962e6e89b271282497b", "text": "withdraw eth .", "title": "", "metadata": ""}
{"_id": "9b0cf1418ef5647b6592b8fb6f961a63", "text": "This allows the owner to withdraw surplus Tokens .", "title": "", "metadata": ""}
{"_id": "081330a5afee4c87e6bfde9742bb2779", "text": "public constant .", "title": "", "metadata": ""}
{"_id": "2a0a0a9893bd4cb7fabadd031cd4e8af", "text": "market order to take order price ( all prices are multiplied by PRICE_FACTOR ) .", "title": "", "metadata": ""}
{"_id": "3004fd40afe35dba138256c0a212d693", "text": "it can be set only once .", "title": "", "metadata": ""}
{"_id": "46c8d2eb3b5260dfedc6ebf736bf794e", "text": "Buy presale tokens .", "title": "", "metadata": ""}
{"_id": "bae1091e68ad9a63b587bf5fd906ee73", "text": "Calculate the number of tokens to mint during a period .", "title": "", "metadata": ""}
{"_id": "073c15605deb6c8d604603c41674445d", "text": "Payable's section .", "title": "", "metadata": ""}
{"_id": "437c00c4f673c5666e7cd86efafa78f4", "text": "Provides a cheap way to get number of symbols registered in a platform .", "title": "", "metadata": ""}
{"_id": "9d06c2e1e74ca0703fca26f35a30b8b6", "text": "Confirm that you ( the buyer ) received the item .", "title": "", "metadata": ""}
{"_id": "7d95dd914b88ec0c05b4d44790c9c010", "text": "The only ether kept on this contract are owner money for samples .", "title": "", "metadata": ""}
{"_id": "e7a744e060946d686f287c11b854c068", "text": "Add a group of users to whitelist A .", "title": "", "metadata": ""}
{"_id": "3685507b0efade11cc840b226d5323e1", "text": "Sets the ICO Contract Address variable to be used with the onlyIcoContract modifier .", "title": "", "metadata": ""}
{"_id": "82ed49e2abd396a70d8040fd3268919c", "text": "Accepts ether and creates new tge tokens .", "title": "", "metadata": ""}
{"_id": "92657496a544fc226bb90ecee416e3d7", "text": "Add tokens bonus amount to counters .", "title": "", "metadata": ""}
{"_id": "7ef71320c0601942102a7af1e256edff", "text": "Allows a recoveryKey to add a new owner with userTimeLock waiting time .", "title": "", "metadata": ""}
{"_id": "1adf92f554c486c1b5bd1101973a76c8", "text": "calculate participants in ico round .", "title": "", "metadata": ""}
{"_id": "f449f9844b9f29ffdb8604b6442346d3", "text": "type description .", "title": "", "metadata": ""}
{"_id": "3eb822cd2e379a6bc6f8cb1bf61dd856", "text": "Modifier that checks that the contract is not paused .", "title": "", "metadata": ""}
{"_id": "3765dd44a5fdc145a330888380c8c003", "text": "Change authority .", "title": "", "metadata": ""}
{"_id": "178b187df8eaec082c0b5658ec3d35c1", "text": "Throws if mill rate for SPX wei is not sane .", "title": "", "metadata": ""}
{"_id": "95b34343e24265169d87568b8d5da8f8", "text": "Receive the initial funds from crowdsale contract .", "title": "", "metadata": ""}
{"_id": "8d6f98c886b7031a2e096d3a4b0ab80c", "text": "Only allowed to execute before the token sale is closed .", "title": "", "metadata": ""}
{"_id": "a536282297c82c914e50870676532593", "text": "Returns a list of all Panda IDs assigned to an address .", "title": "", "metadata": ""}
{"_id": "3d6489bae1c5c90a8cd4609bc18fdcf7", "text": "Locks given allocation address with timestamp .", "title": "", "metadata": ""}
{"_id": "22a2cad129330de2fcaeab6094f2b403", "text": "Function for user to bet on launch outcome .", "title": "", "metadata": ""}
{"_id": "914d7a3cd67bf501d20f7ad77d955efd", "text": "Modifier to check whether the value can be stored in a 128 bit uint .", "title": "", "metadata": ""}
{"_id": "bd577e6c1e56a52761037cfe9ba6dc76", "text": "transfer the tokens to investor's address .", "title": "", "metadata": ""}
{"_id": "90b32ab940522f23ca0bd65b9b826088", "text": "Check remaining and cost function .", "title": "", "metadata": ""}
{"_id": "4f80af6b3ac1c60651f614031ed58da4", "text": "Transfers the cascade values to the assigned addresses .", "title": "", "metadata": ""}
{"_id": "8e0b5e59f94018d8c2936fc5f0d2705c", "text": "Calulate game time and gc amount record .", "title": "", "metadata": ""}
{"_id": "f6e6d61e4607ba15e72d557f1d4d93b6", "text": "Function : Distribute initial token supply .", "title": "", "metadata": ""}
{"_id": "4b1dd86df885ecf577bc9cea97a0fa3e", "text": "stop the crowdsale .", "title": "", "metadata": ""}
{"_id": "5f730aae4a3eea60e325ca12567e5dc0", "text": "transfer funds ETH to multisig wallet if reached minimum goal .", "title": "", "metadata": ""}
{"_id": "eb1696f83446ebebd250dc515a299efe", "text": "Allows an owner to confirm a change settings request .", "title": "", "metadata": ""}
{"_id": "c49e5d1bfa205b82363040230c64547b", "text": "Get the auction for the given deed .", "title": "", "metadata": ""}
{"_id": "a51c8510351a9efdb7c2ae35b52a38ae", "text": "pulls the funds that were set to send with calling of withdrawEth when minimum cap is reached .", "title": "", "metadata": ""}
{"_id": "41c88eac2dd3d0eb63739532122906de", "text": "For creating Opinion .", "title": "", "metadata": ""}
{"_id": "0544e9f09126ffd2bd5c01bc52896cd6", "text": "Get the available amount of an EtherDelta order .", "title": "", "metadata": ""}
{"_id": "816ea24ddad67aff2f4410aba5468d9a", "text": "Refund the buyer if excess .", "title": "", "metadata": ""}
{"_id": "9b243ea045766abd56b609667db4b5eb", "text": "We as owners can ( only ) increase or keep the price in case there is a gas price surge within the range of 30 to 300 GWei .", "title": "", "metadata": ""}
{"_id": "f4ab6c0bb2897768d5ea01b75a489550", "text": "Owner can allow a particular address to transfer tokens despite the lock up period .", "title": "", "metadata": ""}
{"_id": "b791924328f1c8d948097f7457b559f3", "text": "Check is a given id is on sale .", "title": "", "metadata": ""}
{"_id": "78c3d2d230229dcf76f2eb5c3358704f", "text": "Distribute fees for a particular claim .", "title": "", "metadata": ""}
{"_id": "a91ccc09bcfca9abd9a5ccea47a4f573", "text": "Only Accepted callback from the oraclize .", "title": "", "metadata": ""}
{"_id": "a6091a9693ea4f5e932d26267b2e8823", "text": "Add a contract to our list of account minters .", "title": "", "metadata": ""}
{"_id": "d135bd33175ec9dacbf4f999d1039734", "text": "Set whitelist state for multiple addresses .", "title": "", "metadata": ""}
{"_id": "3fa3e611bd71f89c0b819c464a3e06da", "text": "The sender casts a vote in favour of confiscation of the target account's nomin balance .", "title": "", "metadata": ""}
{"_id": "ffbb6065102d831f49a633668c7e08ee", "text": "pay auction proceeds to the underwriter may be called by underwriter or owner ( fbo underwriter ) .", "title": "", "metadata": ""}
{"_id": "b6566e48cac8f55d339796f2eb427bcf", "text": "Internal function to set player Id for a given token .", "title": "", "metadata": ""}
{"_id": "9c542553baf8f1d792e2423e2409c058", "text": "OraclizeI constant public oraclize OraclizeI ( OAR . getAddress ( ) ) ; .", "title": "", "metadata": ""}
{"_id": "c39811f156898bfea57c9a56e5a81e9a", "text": "See comment for secretSigner variable .", "title": "", "metadata": ""}
{"_id": "b79fe5086cabf679ea0517568d536fc4", "text": "increase MOER's current supply .", "title": "", "metadata": ""}
{"_id": "70ee2846d7a512d3e686e102e19994a6", "text": "Adds 2 numbers , throws on overflow .", "title": "", "metadata": ""}
{"_id": "6652338870c4af41a4833908802bc0c1", "text": "Set the current ETH rate in wei for one DOL .", "title": "", "metadata": ""}
{"_id": "c1ef6ab4300fdd5d2a7a1da5037f52e2", "text": "Add signature prefix to hash for recovery \u00e0 la ERC191 .", "title": "", "metadata": ""}
{"_id": "6a5178d12b78f9672d7abd1d4093f5fe", "text": "Compute the number of halvings claimable by the miner caller .", "title": "", "metadata": ""}
{"_id": "9df998d53871264aedc98b6f02a6e1f4", "text": "Set date for unlock bonus tokens .", "title": "", "metadata": ""}
{"_id": "5497730cdc8b91368a172505465a8070", "text": "Return contract info for a given contract id .", "title": "", "metadata": ""}
{"_id": "1fba982d64373f74c3f447234f637f04", "text": "Sorts given array in place .", "title": "", "metadata": ""}
{"_id": "8c7c2dd05af114897f184ee8e3c826e8", "text": "Appoint sales agent of token .", "title": "", "metadata": ""}
{"_id": "9535649f7d11eb2cebc78f2d60f1b502", "text": "irreversibly close the adding of cheques .", "title": "", "metadata": ""}
{"_id": "b301c67b2153fa64e9978eafe1e095d2", "text": "withdraw tokens to owner .", "title": "", "metadata": ""}
{"_id": "3126569ef1feded1428b27a012278974", "text": "success - true if the allowance was given , false otherwise .", "title": "", "metadata": ""}
{"_id": "6e4a209fa8035d4929fe2cee78a166da", "text": "updates the current change fee can only be called by the manager .", "title": "", "metadata": ""}
{"_id": "3dd47dc4ae33671101df71b070753a94", "text": "Manually back ProjectX owner address .", "title": "", "metadata": ""}
{"_id": "50375d27bed22ca1547b261d57fe9fbe", "text": "a function to claim refund if and only if theres an error in the contract .", "title": "", "metadata": ""}
{"_id": "381b5f74fa85b29746d89db861f626c9", "text": "Finalizer functions .", "title": "", "metadata": ""}
{"_id": "3001026c2ac78c284b3d831eabe766ac", "text": "called in case crowdsale failed .", "title": "", "metadata": ""}
{"_id": "6004db9ae4da2754ac64a9566cb82cd0", "text": "3 writes + 1-12 writes 4-15 writes .", "title": "", "metadata": ""}
{"_id": "20799a52e1d52e1205b2fddec0f1bd01", "text": "reset reset all accounts .", "title": "", "metadata": ""}
{"_id": "8502765710adcf8f79453f45774f534d", "text": "Stop ICO manually .", "title": "", "metadata": ""}
{"_id": "84bd50870851e8bb4b7dd20a916388fe", "text": "Returns day details .", "title": "", "metadata": ""}
{"_id": "3df55108a487650b216bf3443b09d37a", "text": "This function makes it easy to get the creator of the tokens .", "title": "", "metadata": ""}
{"_id": "d1c5f4dbddca9ea75252fff22e8428ac", "text": "Calculates how many ether will be used to generate the tokens in case the buyer sends more than the maximum balance but has some balance left and updates the balance of that buyer .", "title": "", "metadata": ""}
{"_id": "f3031e0cde7ed19f6f097ebd75aecfe0", "text": "get contract address by its ID .", "title": "", "metadata": ""}
{"_id": "6d742b7c9bdfdac69c77274f2263fecf", "text": "requires that a proposal is not in process or has exceeded its lifetime , and has cooled down after being vetoed .", "title": "", "metadata": ""}
{"_id": "19c4f6c204b0830225101212a3c6f39c", "text": "Gets the Note for an Account Address .", "title": "", "metadata": ""}
{"_id": "d43147bc48a915ae415f38c2327fff8b", "text": "Gets unlocked timestamp for which an address is locked with locked index .", "title": "", "metadata": ""}
{"_id": "9c2545b177c3033ba1bcca15a29a4cf7", "text": "Sets a block up for rent , requires a rental price to be provided .", "title": "", "metadata": ""}
{"_id": "ab0204f8d64d44e3f8eb6e00e011a839", "text": "Set new mint request , can be call only by owner .", "title": "", "metadata": ""}
{"_id": "9fd166c8df09482cf773e5929cf39a1e", "text": "Recover Tokens in case incorrect amount was sent to contract .", "title": "", "metadata": ""}
{"_id": "b19ccc7758137b618179246dc6dca400", "text": "Only allow the Provide platform robot to execute a contract function .", "title": "", "metadata": ""}
{"_id": "cda3474c761c32e998b3fff0ce1a3934", "text": "Set CRB token address here .", "title": "", "metadata": ""}
{"_id": "fb15ee81c17809c16e989d95d9550811", "text": "0 - destruct 1 - close 2 - restart 3 - refund 4 - calc 5 - update Exchange .", "title": "", "metadata": ""}
{"_id": "311755ac9a9968b7b2571bc839287f17", "text": "Add the compound interest to the startBalance , update the start block , and update totalSupply .", "title": "", "metadata": ""}
{"_id": "28f55ae1c9c75c671ad1e7668f70baef", "text": "Function to coinbase at new block .", "title": "", "metadata": ""}
{"_id": "f2b94205df8d8d40e5d48cec81553a15", "text": "Manually back NewHope owner address .", "title": "", "metadata": ""}
{"_id": "35ba87d344d2297d24bb4e88b71e63d5", "text": "Burns all tokens owned by this contract .", "title": "", "metadata": ""}
{"_id": "1ae9503760a2e85a692cf71097052fd1", "text": "Sets contract operations on / off .", "title": "", "metadata": ""}
{"_id": "897d326d59383d6f30f5d4fb5b0f546b", "text": "function allows all Ether to be drained from contract by owner .", "title": "", "metadata": ""}
{"_id": "e85c159a0d65bdac3f7c860b42ee4b16", "text": "Sets the withdraw gas cost .", "title": "", "metadata": ""}
{"_id": "8fa50789df22ea4893a2f78eeec675ad", "text": "Deploy Artcoin Consortium contract .", "title": "", "metadata": ""}
{"_id": "4f36f4ac276b7a7d0912f1cc83d526e5", "text": "Function to end the airdrop and start crowdsale .", "title": "", "metadata": ""}
{"_id": "c8d2e912fa73cfe931ac82d4dcbbaa2b", "text": "transfer function that is called when transaction target is a contract .", "title": "", "metadata": ""}
{"_id": "2cae6edbbec5468fe91753b0badaa3ff", "text": "Transfer the balance from simple account to account in the fund .", "title": "", "metadata": ""}
{"_id": "a70b103f3ebc3612f3b055c1b4d2b671", "text": "For user to get their own secret note key by index .", "title": "", "metadata": ""}
{"_id": "36e4c6776e7152397554596cb162aac6", "text": "check exist of user in whiteList .", "title": "", "metadata": ""}
{"_id": "34c27d0cc13dac877d5855c998ccbed9", "text": "Function processing new investments .", "title": "", "metadata": ""}
{"_id": "bbde704168d3f820f8847aebc6d2b977", "text": "Claim all bought HQX .", "title": "", "metadata": ""}
{"_id": "e50f72dbc077826a6a4e911588f11c5f", "text": "Decrease the total amount of WEDU token .", "title": "", "metadata": ""}
{"_id": "304459f2318900321975d0490da66057", "text": "Set beneficiary .", "title": "", "metadata": ""}
{"_id": "14d2d1f04f89d1d34f87ca34400d4145", "text": "Call approve ( ) for multiple spenders .", "title": "", "metadata": ""}
{"_id": "1c86b30e92ea690fb96aa88e6b2faca4", "text": "Function to mint tokens with some locked .", "title": "", "metadata": ""}
{"_id": "e63be11052babcd5a2e3860415b90e9e", "text": "Define distount percents for different token amounts .", "title": "", "metadata": ""}
{"_id": "78c35a4aba643f254382e6dd39ac7a05", "text": "Returns the greater of two values .", "title": "", "metadata": ""}
{"_id": "6e2c49b0e0a832f54a0961b18577bce2", "text": "function to get all animals against an address .", "title": "", "metadata": ""}
{"_id": "6b6b99af51ae2c237451d974d1e7e135", "text": "Only one of claimByProof ( ) or claim ( ) will potentially be activated in the future .", "title": "", "metadata": ""}
{"_id": "957ba58e01da32bc4e22c8ed71782c51", "text": "Low level token redeem function .", "title": "", "metadata": ""}
{"_id": "a144dd8096843f5ed428809d2a1a63ef", "text": "retrieve number of all Nuru Tokens in existence .", "title": "", "metadata": ""}
{"_id": "0a30d6adf20705b915ae19f72a80cf06", "text": "The function of the open token .", "title": "", "metadata": ""}
{"_id": "920f07184a41854ab5fe763b4773c9ed", "text": "get amount in token millis for amount in wei .", "title": "", "metadata": ""}
{"_id": "ea68ec64dee9aea9f17723f13c995a7d", "text": "Function to update the partnerValuesMap with their amount and challenge string .", "title": "", "metadata": ""}
{"_id": "944027a70ca87ea19fbf380555827837", "text": "called in case crowdsale succeeded .", "title": "", "metadata": ""}
{"_id": "3bc3e3d285c3acfa476d59d23586779f", "text": "killBounty ( ) : drains the contract of it's remaining funds , and moves the bounty into stage 3 ( dead ) since it was either killed in draft stage , or never accepted any fulfillments .", "title": "", "metadata": ""}
{"_id": "6478313c7a0def4ee0a7e091564358a4", "text": "The onlyOwner external function to call to cancel the next tournament and refunds .", "title": "", "metadata": ""}
{"_id": "85f14539451ac00542555b47b863fcb5", "text": "Deactivates voting .", "title": "", "metadata": ""}
{"_id": "366890a4c2ec5e09446eeffac705f596", "text": "Integer division of two signed integers , truncating the quotient .", "title": "", "metadata": ""}
{"_id": "2280609a6e2a95d0daef86eff70983b7", "text": "Return the player id and the count of VTL for the connected player .", "title": "", "metadata": ""}
{"_id": "b86d01cce10201b22ddd633f3113a0cf", "text": "lowers the supply by a specified amount of tokens .", "title": "", "metadata": ""}
{"_id": "5d9af4cf81079cb39c0a12ddca86a9f0", "text": "Normal Period 1 ( 2018 ) - - - Time - - - ( 31 days ) .", "title": "", "metadata": ""}
{"_id": "5029c5ca0359fe0bd8e766cbaae10760", "text": "Transfer tokens to AdMine users pool ( 10 ) .", "title": "", "metadata": ""}
{"_id": "5a94ae0c2d064f9a1c9e303541e81363", "text": "Function to set the crowdsale smart contract's address only by the owner of this token .", "title": "", "metadata": ""}
{"_id": "229d72d5147dd6b1a6632d771803e0e3", "text": "Set factory address to clone .", "title": "", "metadata": ""}
{"_id": "14fd0234a8e6df068bf20ae8f33ff21a", "text": "transfer balance to owner withdraw owner .", "title": "", "metadata": ""}
{"_id": "da883629a79ea71c810cbb84d4371df3", "text": "Passes if token is currently trading .", "title": "", "metadata": ""}
{"_id": "d827cbffbb0cc4b41ea35ef7fbd92457", "text": "returns the Requester of the Escrow contract .", "title": "", "metadata": ""}
{"_id": "28c07c8194a6d708619ff999590f1c7c", "text": "Permits modifications only by the owner of the specified node .", "title": "", "metadata": ""}
{"_id": "efbdbb4545d5cfd4416d69c492997019", "text": "This should only be called from the above function .", "title": "", "metadata": ""}
{"_id": "80719c4e724e14f06957bae44e33777f", "text": "after close , no new buys are allowed .", "title": "", "metadata": ""}
{"_id": "b7b903741ae13f889e51ad32b60325b9", "text": "remove an approver only admin can perform this function .", "title": "", "metadata": ""}
{"_id": "e0bbb7d66adfd00766e3c4536f764e44", "text": "Assigns a new address to act as the CPO .", "title": "", "metadata": ""}
{"_id": "f10f51a9548e52d1f40018f107784555", "text": "Returns a memory pointer to the data portion of the provided bytes array .", "title": "", "metadata": ""}
{"_id": "06e9276ce568ec1936d7d1c5b483f6f0", "text": "Total CDP Debt .", "title": "", "metadata": ""}
{"_id": "afb243ba99f94278bf60cccc37d08eb8", "text": "the total stake .", "title": "", "metadata": ""}
{"_id": "1a02d24d1452ba972266bc050397a25e", "text": "unregister the registered address .", "title": "", "metadata": ""}
{"_id": "a19de49d9943719fc82fc2a2ce8c2b7f", "text": "refund back if not KYC approved .", "title": "", "metadata": ""}
{"_id": "0e497a8d97699ebec031da06f1312c47", "text": "Aprrove the transfer of token .", "title": "", "metadata": ""}
{"_id": "8f09643f061d6acee59241e55a8331dd", "text": "Burn tokens from accounts .", "title": "", "metadata": ""}
{"_id": "5fb6c440b9584ac4b36033c2a1513b71", "text": "true if the transaction can buy tokens .", "title": "", "metadata": ""}
{"_id": "1d60ce77893a9ca751daafecf0ab6010", "text": "admins may add or remove games .", "title": "", "metadata": ""}
{"_id": "7cea1fb1c136c32cbc85269fbf39bd28", "text": "just cancel auction .", "title": "", "metadata": ""}
{"_id": "6a9a145690ff11e769c2f21724f964e9", "text": "Updates the fee for calling recruitHero ( ) .", "title": "", "metadata": ""}
{"_id": "f722302b2f780f3043333592b37a267e", "text": "the created token .", "title": "", "metadata": ""}
{"_id": "2f0a9d7e141a621d150638d36a01aa50", "text": "Allows the current owner to transfer control of the contract to a newAdmin .", "title": "", "metadata": ""}
{"_id": "a6222fdd33a17fd7e3374bb8c693c58d", "text": "We override the close function from zeppelin .", "title": "", "metadata": ""}
{"_id": "e5c0a409e853441a48cbe75cf0505a05", "text": "This internal function checks if an address is whitelisted in the whitelist contract .", "title": "", "metadata": ""}
{"_id": "6f8ee87350acccca54b931ca849f60d4", "text": "Place a Sketch up for sale , to any buyer .", "title": "", "metadata": ""}
{"_id": "9a2061308e73d5829a4d503ebfd531b6", "text": "Buy tokens from the contract , as in parent class , but ask the sister if price needs to be increased for future purchases .", "title": "", "metadata": ""}
{"_id": "fa66b255360763ae29986d718cbaf33d", "text": "this function will determine vested amount .", "title": "", "metadata": ""}
{"_id": "05f1559bd7acbe0d31e2903390177eac", "text": "The owner can change the oracle .", "title": "", "metadata": ""}
{"_id": "231a16f14e25a3c55c950c0dbd379275", "text": "Owner can add a new Tx of payment for MCW to the customer's TxRegistry .", "title": "", "metadata": ""}
{"_id": "c5bc6c51b0f18188196a42f0bbf7dc3a", "text": "depositing for investor , return transaction Id .", "title": "", "metadata": ""}
{"_id": "3d36afd37bb87ba207f6bb9a47b472d4", "text": "DAO Proposals Management .", "title": "", "metadata": ""}
{"_id": "7c57d7b5d2bcbf5923fddc2d668f2c98", "text": "Allows the user to get ether he placed on his team , if his team won or draw .", "title": "", "metadata": ""}
{"_id": "3f2856cc715b0c3b08fe31220e0b1577", "text": "Transfers the token .", "title": "", "metadata": ""}
{"_id": "efab239d7509c930e24d24f7e3388c9c", "text": "One specific attribute of the equipment modified .", "title": "", "metadata": ""}
{"_id": "12daec34ff8cad969a1ccef323cd3157", "text": "Check the remaining balance for a safeguarded transaction .", "title": "", "metadata": ""}
{"_id": "f74832b468914009c753f542e45b2c93", "text": "Check that the amount sent in the transaction is below the individual cap , or below the pledged amount if the user is whitelisted and the sale is in the whitelist period .", "title": "", "metadata": ""}
{"_id": "41970f8183101e4f86f319be16956a35", "text": "Puts some amount of Tokens on hold to be retrieved later .", "title": "", "metadata": ""}
{"_id": "64cd47324555901d30d68dfb557d4906", "text": "Issue new tokens in circulation .", "title": "", "metadata": ""}
{"_id": "210515aaa95891c0c15038e14668f563", "text": "Update unicorn price .", "title": "", "metadata": ""}
{"_id": "43fcf88ec19d20bb4f82a6a050ae4525", "text": "get balance at snapshot if with continuation in parent token .", "title": "", "metadata": ""}
{"_id": "19a56a05fb16810cfe489c9dea515574", "text": "Assigns ownership of a specific Zodiac to an address .", "title": "", "metadata": ""}
{"_id": "58e6431d18bbb5cb1195079075e89d83", "text": "Gets the approved address to take ownership of a given token ID .", "title": "", "metadata": ""}
{"_id": "fe7bc013b1b3ec2d3856f168efdd0a57", "text": "Allow users to buy tokens for _newBuyPrice eth and sell tokens for _newSellPrice eth .", "title": "", "metadata": ""}
{"_id": "08c9534d72f09aacd5c431e54db4c24e", "text": "Start a new mintable sale .", "title": "", "metadata": ""}
{"_id": "6da2ab817114c77f8f639abc43726f86", "text": "The function of the frozen account .", "title": "", "metadata": ""}
{"_id": "6dd8a1b10cc00fec5cf181a8e91b44fe", "text": "Get the approved address for a single ELHT .", "title": "", "metadata": ""}
{"_id": "30f31a5331a35e5ebef9fbef589f1e17", "text": "purchases tokens , which a send to _to with 5 returned to _ref .", "title": "", "metadata": ""}
{"_id": "b5a200752c8a60b583a3d878ed8cf5cb", "text": "Uses - e . g .", "title": "", "metadata": ""}
{"_id": "1978f90ac019fde724d4a6965c35b34e", "text": "update / create a record in the Distribution List .", "title": "", "metadata": ""}
{"_id": "29dbad1b00a078200516017e76ebec84", "text": "register and change authorized user .", "title": "", "metadata": ""}
{"_id": "1065029d09f26df5e3b3e8a63d5e6a68", "text": "Withdraw Wei into your wallet ( will revert if you have no balance ) .", "title": "", "metadata": ""}
{"_id": "1155caa7a813640cb63006ea07623625", "text": "function to distribute the tokens to all users whether approved or unapproved can only be called by the owner .", "title": "", "metadata": ""}
{"_id": "293a3ef256af4abaeda484fd096179dd", "text": "mints directly from network .", "title": "", "metadata": ""}
{"_id": "e6770f4ebe4c3127e15405ea8122b19e", "text": "number of decimals for this token .", "title": "", "metadata": ""}
{"_id": "c878dcf8e24388809c306579ab05cb22", "text": "Compute the Devvote bonus according to the investment period .", "title": "", "metadata": ""}
{"_id": "100f1c954785c099064e8327e72a6fd6", "text": "ERC20 transfer function overridden to disable transfers when paused .", "title": "", "metadata": ""}
{"_id": "1291f20a915ac40ab274e224890f44a2", "text": "returns a array which contains reward for every closed window a convinience function to be called for updating a GUI .", "title": "", "metadata": ""}
{"_id": "3ea659de733e4b80b8c1e75fac15190a", "text": "Ask a new question and return the ID .", "title": "", "metadata": ""}
{"_id": "1616e2d6a74a9a25de47a075830b3d01", "text": "Invalidate early purchase .", "title": "", "metadata": ""}
{"_id": "6e0d9e045775f06dbdfdee62b1a9a88b", "text": "Burns requested amount of sender's tokens .", "title": "", "metadata": ""}
{"_id": "5d18f5d4824a3746f637fd26b37d7a0f", "text": "add a minter role to an address .", "title": "", "metadata": ""}
{"_id": "4e8a7fbe585c3839645773880fae23f4", "text": "Transfers the ownership of an ELHT from one address to another address .", "title": "", "metadata": ""}
{"_id": "d3e5f2f8f5bb5cbb0a4fd08d79d4888f", "text": "Allows participants to claim refund for their purchased tokens .", "title": "", "metadata": ""}
{"_id": "37a6ee92bc92b9b356846d350ce6b720", "text": "onlyOwner An efficient way to cancel multiple payments .", "title": "", "metadata": ""}
{"_id": "9100fa10d34a9ea5bcfd650b543d26b1", "text": "Pause sale just in case we have some troubles .", "title": "", "metadata": ""}
{"_id": "3ac68149761e370382601ad790db5117", "text": "Allows to create new proxy contact and execute a message call to the new proxy within one transaction .", "title": "", "metadata": ""}
{"_id": "25595c74ef4f0e8ca426fbb95d2553d4", "text": "check dates .", "title": "", "metadata": ""}
{"_id": "66de8fa2e6ef11fc3d4b44d3009a6626", "text": "Choose a winner and pay him .", "title": "", "metadata": ""}
{"_id": "a588458118026df68076b42589aa7cad", "text": "Don't allow tokens to be sent to the contract .", "title": "", "metadata": ""}
{"_id": "d65db651d233d55b18f4246d9fe02aee", "text": "Returns the keccak-256 hash of the slice .", "title": "", "metadata": ""}
{"_id": "6119d4659401ee6528234027f19a9331", "text": "Only allow a method to be executed if '_who' is not the 0x address .", "title": "", "metadata": ""}
{"_id": "e6acb1a335684db79df89fe105173ac5", "text": "a + b .", "title": "", "metadata": ""}
{"_id": "c676306e974cff3cf615691616281a31", "text": "batch transfer for ETH .", "title": "", "metadata": ""}
{"_id": "61e441c305ce1993a704226d9658599c", "text": "Set the owner cut for auctions .", "title": "", "metadata": ""}
{"_id": "ec7e93899bc6245add724b349cdbc70a", "text": "bonuc calculation for preico on per day basis .", "title": "", "metadata": ""}
{"_id": "f2954868e939711aa806db047351276f", "text": "Accepts ether and creates new DDFT tokens .", "title": "", "metadata": ""}
{"_id": "a9994d17c23218cf9c8301c4861077ab", "text": "burn tokens if soft cap is not reached .", "title": "", "metadata": ""}
{"_id": "5b4c76f5cc5a92119e0bf7671c8aa791", "text": "buy an area of blocks at coordinates fromX , fromY , toX , toY .", "title": "", "metadata": ""}
{"_id": "503536bd0ee33e4d4c3e3651638c2bcf", "text": "Set up advisory pool .", "title": "", "metadata": ""}
{"_id": "113afbbec8a4d83df9ecb7a78992288f", "text": "Request unclaimed ETH , payback to beneficiary ( owner ) wallet dividend payment is possible every 330 days at the earliest - can be later , this allows for some flexibility , e . g .", "title": "", "metadata": ""}
{"_id": "8a863c333ae6e4ed0e31e018c7a7546a", "text": "Allows anyone to execute a confirmed transaction .", "title": "", "metadata": ""}
{"_id": "36d51c6887251821ce625f9e68411c5d", "text": "Check that the amount sent in the transaction is below the individual cap .", "title": "", "metadata": ""}
{"_id": "63046eb5f30d2f5a611d753db687f1fd", "text": "Allows to send a bid to the auction .", "title": "", "metadata": ""}
{"_id": "09be667621d758230a7a2a4c79b3b6d0", "text": "Removes a list of addresses from the whitelist .", "title": "", "metadata": ""}
{"_id": "1dc46f99946f5217895e854a719220c5", "text": "Function to send wei to address .", "title": "", "metadata": ""}
{"_id": "37fede9f86a52c8120e30f96a9488a4a", "text": "Buys tokens in the crowdsale and rewards the caller , callable by anyone .", "title": "", "metadata": ""}
{"_id": "09c8fba3c2cca90f23b2bb4e53bc2e3f", "text": "Checks escrow wallet balance .", "title": "", "metadata": ""}
{"_id": "f9d8cf74e563d0543576911ae9fc1ac3", "text": "Enforces a scaricity of unique player cards by limiting .", "title": "", "metadata": ""}
{"_id": "32f804c334e0c1f868f90444a6f003c2", "text": "Add one user to whitelist .", "title": "", "metadata": ""}
{"_id": "141efbf75b03c305dc7d63d588bf410a", "text": "Checks whether the minting is allowed or not , check for the owner if owner is no the msg . sender .", "title": "", "metadata": ""}
{"_id": "223839ffdc44f7d885f681646943b8a6", "text": "Return number of tokens for address .", "title": "", "metadata": ""}
{"_id": "8b574601c847849095d527af0771dfbc", "text": "Pay winners , update contract balance , send rewards where applicable .", "title": "", "metadata": ""}
{"_id": "cb73fe35351a2954b8c5cc04c00a7a95", "text": "Receives a storage pointer and returns the value mapped to the seed at that pointer .", "title": "", "metadata": ""}
{"_id": "75bf83636d0b56c311c0fafbe51a86af", "text": "Adds new investors to the list and calculates the balance according to the current rate .", "title": "", "metadata": ""}
{"_id": "e2db1453e29c6ec4b5e24954c5b2815b", "text": "Throws if called by any other address than Oraclize .", "title": "", "metadata": ""}
{"_id": "f6e85176d17db3409cb775edf88e9ec2", "text": "Set new owner address .", "title": "", "metadata": ""}
{"_id": "1993b3ff592ac3d0233a14b149fdb35e", "text": "Creates HKG tokens .", "title": "", "metadata": ""}
{"_id": "af026af9ccb2828764eebdd26510d7ac", "text": "Destroy tokens if MCT not sold out .", "title": "", "metadata": ""}
{"_id": "7a769fc86e8ee983daf08d08957653aa", "text": "Transfers all the tokens stored for this investor to his address .", "title": "", "metadata": ""}
{"_id": "bbdf0fedf7c28e88ffddad71f6029b55", "text": "Security Functions .", "title": "", "metadata": ""}
{"_id": "36b98e0b74f8582310ba9bc61d7a53a4", "text": "Creates a new gen0 narco with the given genes and creates an auction for it .", "title": "", "metadata": ""}
{"_id": "434b1ba126a1abf33c258fe796db1296", "text": "Only when sufficient allocations remain for making this liquid allocation ( 2 ) .", "title": "", "metadata": ""}
{"_id": "8ebcf902b8de019c199a7d9e7f900736", "text": "To allow ICO contracts to check whether RefundVault is ready to refund investors .", "title": "", "metadata": ""}
{"_id": "b858811135948e0829a23daca9cb2897", "text": "User sells KWHs and gets Ether .", "title": "", "metadata": ""}
{"_id": "c3b80dd9a09c15cf53d26ef9a0230be4", "text": "Withdraw tokens from EtherDelta .", "title": "", "metadata": ""}
{"_id": "f63473603578269a0e4a8492c67d9c18", "text": "Returns the address currently assigned ownership of a given Cutie .", "title": "", "metadata": ""}
{"_id": "6b15fb67b6e4c2981c2d3ab1d9e8637e", "text": "only owner address can suicide - emergency .", "title": "", "metadata": ""}
{"_id": "3c10794f118dd9be06f0ade7670640f0", "text": "Edit function for Admin .", "title": "", "metadata": ""}
{"_id": "d1b7f70c292401e74afd87c95a970c32", "text": "initializes the protocol .", "title": "", "metadata": ""}
{"_id": "53d82dd3008f599e88dfcffd7efc0577", "text": "function to transfer the funds to founders account .", "title": "", "metadata": ""}
{"_id": "2f73983e5408a0d6e6076a5c475bfafa", "text": "Withdraw accumulated gas fees from the arbitratror releasing escrow .", "title": "", "metadata": ""}
{"_id": "1d44d1852b93a3cf5559aff87adfc51e", "text": "Call this method to let the contract to allow token collection after the contribution period .", "title": "", "metadata": ""}
{"_id": "93e009717c14da6b1096b733f3f5341c", "text": "returns the price of oracle call in wei .", "title": "", "metadata": ""}
{"_id": "f64231adf8c7d6e29eb4ed311d784576", "text": "Returns the location pointed to by the free memory pointer .", "title": "", "metadata": ""}
{"_id": "60f4d148d2d20b15d9d89a8a581934ad", "text": "Emergency pause .", "title": "", "metadata": ""}
{"_id": "8069319323cfdf1e6502374ec298c564", "text": "Return true if the given time belongs to the given phase .", "title": "", "metadata": ""}
{"_id": "97c32b0f502af09e912df032499ec4c5", "text": "routine 50 - comminglerSellsProductSKUWithProRataIngred ( address _to , int numPSKUsSold , , string _url , uint _qttyIGRinLLSKU , string GTIN13 , string YYMMDD ) allows for sale of final-consumer product with resp SKU and Lot identification with corresponding IGR transfer the respective IGR token transfer ( with url ) i . e . : .", "title": "", "metadata": ""}
{"_id": "bbac00f40ec7bf6a5ba36825316b0d40", "text": "Gubberment officials can pilfer out of necessity .", "title": "", "metadata": ""}
{"_id": "6667534210461ef2070fcd83bab3e5cd", "text": "Get number of tokens with bonus .", "title": "", "metadata": ""}
{"_id": "02202de82afd7f7ba1fd41b68e4e766f", "text": "Allows the current owner to transfer token's control to a newOwner .", "title": "", "metadata": ""}
{"_id": "2456fe789a48ca9bb18f19bd7513897f", "text": "this function can be called from another contract , after it have allowance to transfer shares in behalf of shareholder .", "title": "", "metadata": ""}
{"_id": "5deb4d1c48b44b913e14715891f7845f", "text": "The owner can allocate the specified amount .", "title": "", "metadata": ""}
{"_id": "17e17533c7eb4f84c06d959f49ee63a9", "text": "Confirm that airDrop is available for msg . sender .", "title": "", "metadata": ""}
{"_id": "5475e0c53be793f9acc738308e79035b", "text": "Create a country with a name , called only by the owner .", "title": "", "metadata": ""}
{"_id": "8a39c6c32f7316d11321ecddec944b51", "text": "The presale is considered finalized when the token address is set .", "title": "", "metadata": ""}
{"_id": "4033a352c0a75e6e8511a384848e1853", "text": "get the remain original tokens belong to an account before this time locking .", "title": "", "metadata": ""}
{"_id": "da756a5f78461981a5a3f1834b552df1", "text": "Destroy tokens in another account .", "title": "", "metadata": ""}
{"_id": "d717b18c9c0063f1263d56d70f95da01", "text": "uint256 _envelopeId uint256 4 _data 0 - willExpireAfter 1 - v 2 - r 3 - s .", "title": "", "metadata": ""}
{"_id": "c27f23a197013c3796263aa9ec6da377", "text": "Refund surplus tokens to refund wallet .", "title": "", "metadata": ""}
{"_id": "5e5799d76116b36fdc199c1fa9ad7c90", "text": "Prepend element to element of list .", "title": "", "metadata": ""}
{"_id": "b7d1aea4df55acd007a30b29a2bfd1b5", "text": "Allow withdrawing any token other than the relevant one .", "title": "", "metadata": ""}
{"_id": "7bcb89d4b936f564547c79edbeab43e1", "text": "Burn functions taken from https : / / www . ethereum . org / token .", "title": "", "metadata": ""}
{"_id": "8dfe1289abc2b1bb87404a6fba576752", "text": "allocate token for Team Address .", "title": "", "metadata": ""}
{"_id": "432077f9ee928a7e3d3089ce80d657ec", "text": "Also used to adjust price if already for sale .", "title": "", "metadata": ""}
{"_id": "652d72b95a852c84a9d26af3e90b9d0c", "text": "Do accident logic - transfer found and destruct contract .", "title": "", "metadata": ""}
{"_id": "1933d2f20d8dac03a120a89e00a67588", "text": "get a quote for exchanging and update temporary reserves .", "title": "", "metadata": ""}
{"_id": "e678dc4f1b49cfe15c73544b95d79daf", "text": "Returns the number of games completed .", "title": "", "metadata": ""}
{"_id": "6230db20db877e9a3b3982a9430dc85b", "text": "Set the confirmation period after a vote has concluded .", "title": "", "metadata": ""}
{"_id": "53b0f9fa524a265c1de1a0ef41f61058", "text": "Creates new version tokens from the new token contract .", "title": "", "metadata": ""}
{"_id": "eb1fb3b7c53a20ed477b99d1ac95b7a2", "text": "Internal methods .", "title": "", "metadata": ""}
{"_id": "ab4ebd4d440014c4f9428f3408a0da51", "text": "Set the lockingRatio of total bonus that is the sum of bonus by time .", "title": "", "metadata": ""}
{"_id": "bb201db9dca245f2100e64178cec38c1", "text": "Override unpause so it requires all external contract addresses to be set before contract can be unpaused .", "title": "", "metadata": ""}
{"_id": "fbe32a43894b09f13e5112fefed0ea4b", "text": "Funtion : Transfer tokens .", "title": "", "metadata": ""}
{"_id": "38d310bad150a78bc6789941efe12f6f", "text": "Return unsold tokens to beneficiary address with decimals .", "title": "", "metadata": ""}
{"_id": "b747e0318bd07eb06052f0196d732f21", "text": "Sets prize percentage to every address that wins from the position 30th onwards .", "title": "", "metadata": ""}
{"_id": "87906303ca4ce3d6511777834e15c729", "text": "this function is called from logic to trigger the correct event upon receiving ETH .", "title": "", "metadata": ""}
{"_id": "ffc8020d8d0207469591013f13459056", "text": "Create contract .", "title": "", "metadata": ""}
{"_id": "95c26849cd7089731ce1fc65034b8f07", "text": "Returns the total of bets in contract .", "title": "", "metadata": ""}
{"_id": "3151ee616e174f888851d3e8c8a0a3a4", "text": "Get the SELL price based on the order size .", "title": "", "metadata": ""}
{"_id": "a862eacc8c97fc7c6142c624b7e64887", "text": "Grant another address the right to transfer token via takeOwnership ( ) and transferFrom ( ) .", "title": "", "metadata": ""}
{"_id": "c082bf3d0cda1e674ad90c58b9392510", "text": "Get the purchase from time for the given token .", "title": "", "metadata": ""}
{"_id": "68e2e5021452209ff25212fbc31690ca", "text": "Register off-chain donation in the name of the given address .", "title": "", "metadata": ""}
{"_id": "dc1045f7e9c11394baeceb2e6daf324a", "text": "Returns the ether on the real network to the sender , while forwarding the classic ether to a new address .", "title": "", "metadata": ""}
{"_id": "30636f3534730ca49667f22d0f772712", "text": "Let the owner stop the crowdsale open timer , as long as the crowdsale has not yet opened .", "title": "", "metadata": ""}
{"_id": "97ea0a0bed63d7ac5327772e212503fb", "text": "recordDealCancelReason creates an event of not paid deal that was cancelled .", "title": "", "metadata": ""}
{"_id": "ab3a7060150470f075cc7c987c2c9f94", "text": "Allow the owner to withdraw tokens .", "title": "", "metadata": ""}
{"_id": "1ad69435530f2d0c76121eb4bcf24c38", "text": "flag function called by ony owner , stopping some function to work for .", "title": "", "metadata": ""}
{"_id": "bbe4f4c979a26898dec36f2cc3a2a176", "text": "Amount owed to this person .", "title": "", "metadata": ""}
{"_id": "ea98b152c96fce1c347af8eec88ab429", "text": "Declines transfers from / to / by frozen addresses .", "title": "", "metadata": ""}
{"_id": "ae4669407dabd1e45d53634e863e9060", "text": "updates round timer based on number of whole keys bought .", "title": "", "metadata": ""}
{"_id": "3d8cd01ef88a9cf5cfcfb49990645d2d", "text": "Create an account for a user and emit an event .", "title": "", "metadata": ""}
{"_id": "9ba0d544987d83707be9ef7505f706fe", "text": "Internal Order Placement - Match the given order against the book .", "title": "", "metadata": ""}
{"_id": "132dba39f4797523b7a2b36d0905b53f", "text": "this version will use up most gas .", "title": "", "metadata": ""}
{"_id": "b958011fedfb4c320737340d0a84b131", "text": "Create each mint of a petCard .", "title": "", "metadata": ""}
{"_id": "a206e6b4c32cd6bdcd0c8fc208b25eaf", "text": "To get the ether from the rewards .", "title": "", "metadata": ""}
{"_id": "64603d080b0a1de25e1be51211f0e389", "text": "Functions change owner .", "title": "", "metadata": ""}
{"_id": "443ec9d13007928e9688ac7b29004426", "text": "sets the teleport price .", "title": "", "metadata": ""}
{"_id": "edc299438e95acb1f1d7a17b8d015e54", "text": "closes a state channel .", "title": "", "metadata": ""}
{"_id": "97951568962449d7f35f26749f22e0de", "text": "Withdraws tokens from the contract .", "title": "", "metadata": ""}
{"_id": "217ea4295204f2d74a98cdf3ba1fcabc", "text": "sum of a + b .", "title": "", "metadata": ""}
{"_id": "c341e989535c1c1785bf249cd4748943", "text": "Update this contract's trueUSD pointer to newContract ( e . g .", "title": "", "metadata": ""}
{"_id": "665a358126d98d5288c9bd17a6a9eb89", "text": "update minimum Bitcoin to invest .", "title": "", "metadata": ""}
{"_id": "f5a8f79f0c21632be403521acd50cb49", "text": "get the user win round comment .", "title": "", "metadata": ""}
{"_id": "59ed79440e9edc5f117612408211c563", "text": "Owner Properties .", "title": "", "metadata": ""}
{"_id": "18337f5252c5be380ffc6853fc8fa5c8", "text": "Ensures the sale's token has been initialized .", "title": "", "metadata": ""}
{"_id": "68f76bbe47dd1c423e3a0d3aebea1296", "text": "marks contract as audited .", "title": "", "metadata": ""}
{"_id": "7f528739284c75eb66b01998d0fb468b", "text": "store the gas price as a storage variable for easy reference , and then change the gas price using the proper oraclize function .", "title": "", "metadata": ""}
{"_id": "38e9c79b90677135bd939391e95d25c2", "text": "after a day , admin finalizes the staking fee change .", "title": "", "metadata": ""}
{"_id": "f5f07ce1df47a3076519e9723b8ae6b4", "text": "Get the current 2-decimal precision price per token .", "title": "", "metadata": ""}
{"_id": "5f925656dc438351e7fb6c06c2c9a85f", "text": "Contract Management .", "title": "", "metadata": ""}
{"_id": "86ecd64fa50abea4f01b8f86273592d1", "text": "Compute the last period's fee entitlement for the message sender and then deposit it into their nomin account .", "title": "", "metadata": ""}
{"_id": "69a832124d323dd227ed2cbeaef41335", "text": "public getters for private state variables .", "title": "", "metadata": ""}
{"_id": "595257f5ec2cf4dc4865173f49a99e9d", "text": "kill contract only if all wallets are empty .", "title": "", "metadata": ""}
{"_id": "fc89bc2e00dd6d4dfc2327315ba30cb9", "text": "accountsList length .", "title": "", "metadata": ""}
{"_id": "875c0a1aa055e6c4e6173d9f9fb50ac8", "text": "enable recovery of ether sent to this contract .", "title": "", "metadata": ""}
{"_id": "b6e4af8d0be783b76016592825425c01", "text": "Accept an invite using the signing model described in the contract description .", "title": "", "metadata": ""}
{"_id": "20fe7c443c129924e69d7a78cc0209d8", "text": "Total tokens sold duing the presale and public sale .", "title": "", "metadata": ""}
{"_id": "bb31f786b148673c95ca2fa7d3297df6", "text": "lockers set by owners may transfer Token with timelocks .", "title": "", "metadata": ""}
{"_id": "dc4b5b742f9a316938e3d49dc8118d96", "text": "Transfers using plain transfer remaining tokens .", "title": "", "metadata": ""}
{"_id": "70a9b9079047c26f677815754fffd981", "text": "Turns project ON and OFF .", "title": "", "metadata": ""}
{"_id": "319b01cb2e71ccd17e654223a58822d6", "text": "Compare 2 strings and returns true if they are identical .", "title": "", "metadata": ""}
{"_id": "2de327ef589f5ab17ca670f9f71faaaf", "text": "Charge the advertiser with whatever clicks have been served by the ad engine .", "title": "", "metadata": ""}
{"_id": "7e189cec37079400cb339e86e13ab5ca", "text": "claims the rewards .", "title": "", "metadata": ""}
{"_id": "77ab633612cb3c601c85839a89c7c49d", "text": "first stands , then inits a new game with only one transaction .", "title": "", "metadata": ""}
{"_id": "c5b11fdee696ed96df1a3da6f0fc0bec", "text": "Helper function actually performing the sending of tokens .", "title": "", "metadata": ""}
{"_id": "f84d205a47a1911718674ffe7371d082", "text": "transfer all ETH balance from this contract to the sender .", "title": "", "metadata": ""}
{"_id": "a7a8aa922776f6730ed87ec9224013b1", "text": "update so that this checks the child status , and only delists IF funding has not started yet .", "title": "", "metadata": ""}
{"_id": "43562a48810567b72faa13317f0188b7", "text": "The index of the current phase .", "title": "", "metadata": ""}
{"_id": "95a9b30c4f1ba60f1d21e3628d417346", "text": "Receive dividends .", "title": "", "metadata": ""}
{"_id": "526d49169c97be9748a518131312550f", "text": "disables staking period .", "title": "", "metadata": ""}
{"_id": "c90bb536cdff94b210b3cf8a5a3cd6f3", "text": "Transfer status .", "title": "", "metadata": ""}
{"_id": "62fe707518aa64de2da5048f6db4fa90", "text": "Helper Functions .", "title": "", "metadata": ""}
{"_id": "913bdd35532deac99d4701ced035dbae", "text": "Sell any amount of tokens for cash or CryptoCurrency .", "title": "", "metadata": ""}
{"_id": "b9d1c23b2180cf6431e9f6fa57a7d2ae", "text": "Throws if called by any accounnot other than the owner .", "title": "", "metadata": ""}
{"_id": "6fcf9ccf6960ea34e81501a345dbe06b", "text": "funders count .", "title": "", "metadata": ""}
{"_id": "56e9bc428c52f7f39dddb5d7a73ea914", "text": "Removes a affiliate from the list .", "title": "", "metadata": ""}
{"_id": "90cbe1582abda57c5c4dfa40fe9327a4", "text": "evaluates the draws .", "title": "", "metadata": ""}
{"_id": "c416e148670ea8e48243368cc6343782", "text": "Will transfer the tokens vested until now to the beneficiary , if the vestingPeriodStarted and there is an amount left to transfer .", "title": "", "metadata": ""}
{"_id": "cba362595e8ebb654da12ed37f4ee0d4", "text": "use this method to rescue your tokens if you sent them by mistake but be quick or someone else will get them .", "title": "", "metadata": ""}
{"_id": "2f6532a9efa3619435dc13a58aa52a67", "text": "transferOwnershipToProject allows for the transfer of ownership to the project , but it can also be called by a project to un-delegate everyone by setting one's own id for the idReceiver .", "title": "", "metadata": ""}
{"_id": "74f355b928fd19302020f6f7ff33cbbf", "text": "We can use this function to move unwanted tokens in the contract .", "title": "", "metadata": ""}
{"_id": "a7a4b42eed3389b3aacc9a65ed7e544e", "text": "Returns number of investors , including reserved .", "title": "", "metadata": ""}
{"_id": "c200b8b9295fe63926c39b25373e354c", "text": "returns all owners' tokens will return an empty array if the address has no tokens .", "title": "", "metadata": ""}
{"_id": "d98f556ed87ad61ecb9bf7ea7958150e", "text": "Finishes the minting period .", "title": "", "metadata": ""}
{"_id": "0ca11a12149a3c444107a81d764bd306", "text": "set the ICO end date and time .", "title": "", "metadata": ""}
{"_id": "8b6d80ff7e0a1d64b7df86b2021e2665", "text": "set the token partner .", "title": "", "metadata": ""}
{"_id": "f945710b73e9908817e468f7130b20ad", "text": "Allows to add a legit owner address for races validation .", "title": "", "metadata": ""}
{"_id": "cd5178e5bd82ad8fd6f4dbdfc23c2252", "text": "Transfers a Cutie to another address .", "title": "", "metadata": ""}
{"_id": "68b54cb40c17e4560507d760533ac806", "text": "The participant will need to withdraw their Parsec credits if minimal pre-sale amount was reached and date between TOKEN_WITHDRAWAL_START_DATE and TOKEN_WITHDRAWAL_END_DATE .", "title": "", "metadata": ""}
{"_id": "a73072d5a1f15f1e623dde58303c2197", "text": "The amount in EGR .", "title": "", "metadata": ""}
{"_id": "eb143252e9a7816d0ebe45beb1239fb0", "text": "Is the actor part of the admin group , or are they the owner ? .", "title": "", "metadata": ""}
{"_id": "9e8000f353d67612ecd61c0b8943a444", "text": "Send fund when ico end .", "title": "", "metadata": ""}
{"_id": "f53beb16d37c5c04f6a4824bed0c0851", "text": "Checks whether data exists for a given asset pair .", "title": "", "metadata": ""}
{"_id": "b44e0f95a731a624b42d99dd6bf89d04", "text": "Call to multiple contracts using a byte32 array which includes the contract address and the amount .", "title": "", "metadata": ""}
{"_id": "f9cb10a7d0f8012f91c8644b40f3d2cc", "text": "Checks if the crowdsale failed .", "title": "", "metadata": ""}
{"_id": "3fd5843f9ed6a16d7c4664c3b79b04aa", "text": "updateValueAtNow used to update the balances map and the .", "title": "", "metadata": ""}
{"_id": "036f6bd2a1508c585662ac09ab1db860", "text": "assert ( b 0 ) ; / / Solidity automatically throws when dividing by 0 assert ( a b * c + a b ) ; / / There is no case in which this doesn't hold .", "title": "", "metadata": ""}
{"_id": "da74b5d4c81c69cc16465b99e6ebd36f", "text": "Returns Controller interface .", "title": "", "metadata": ""}
{"_id": "ef026709836a2f0fab1ad1eb439aa022", "text": "Request a new verification as transactor .", "title": "", "metadata": ""}
{"_id": "e8e93b36310fe9faae5ae847b1241bb0", "text": "modifier to check if msg value is sufficient to take control of a chunk .", "title": "", "metadata": ""}
{"_id": "bcdb986789fb9ee6e5e46dd4d53627e5", "text": "Transfer _amount from _from to _to , invoked by _caller .", "title": "", "metadata": ""}
{"_id": "ebad5afb33d2451d7eaeb7991d21f8f0", "text": "Owner calls after EndLottery .", "title": "", "metadata": ""}
{"_id": "94245e8a3a4be1916e3385537c89631d", "text": "Return true if given address have been refunded .", "title": "", "metadata": ""}
{"_id": "238128003eb96bdd689569f43f318f58", "text": "New units may be added in future , but check it matches existing schema so no-one can abuse selling .", "title": "", "metadata": ""}
{"_id": "3bff1ddb75abfa50b5b4ccae7bb7dc79", "text": "Checks that a given cutie is able to breed .", "title": "", "metadata": ""}
{"_id": "93a23fb0c354cb7104f7299a3acafea4", "text": "Allows any caller to get his eth refunded .", "title": "", "metadata": ""}
{"_id": "dc0a21b7edea20a25d0c97ce3b8539c3", "text": "Returns the base token addresses .", "title": "", "metadata": ""}
{"_id": "6b0c37e61c6e5d351010c31d863b8afd", "text": "mints new tokens .", "title": "", "metadata": ""}
{"_id": "ae08dc37b9c5bfff2ff7bb59ec2ee44b", "text": "Returns true if the minting period has ended , false otherwhise .", "title": "", "metadata": ""}
{"_id": "388352916a8d54ce7455d25189c50626", "text": "withdraw remaining IPC token amount after crowdsale has ended .", "title": "", "metadata": ""}
{"_id": "b1bf094798e9a31f6169efe04cc50b23", "text": "get the phase number .", "title": "", "metadata": ""}
{"_id": "eba8b25a68ecd4a4b724376558e5ff46", "text": "Query the hash of an interface given a name .", "title": "", "metadata": ""}
{"_id": "81a4945b59aeb948869099383933a6e5", "text": "Get all the registrants .", "title": "", "metadata": ""}
{"_id": "19ea9cfef0cc8e6f1ac0985ab37a9816", "text": "This method can be used to extract tokens mistakenly sent to this contract .", "title": "", "metadata": ""}
{"_id": "d942328b0ba8a72c8fbc0fe73a3f0f6c", "text": "set a freeForAll to false ( in case you need to authorise the acconts ) .", "title": "", "metadata": ""}
{"_id": "91c7b83bb711588016372beb3b727cda", "text": "To close the ICO and mark as Successful .", "title": "", "metadata": ""}
{"_id": "fca41688de8bf1fdede2eb0919075d64", "text": "Get LoveLock .", "title": "", "metadata": ""}
{"_id": "609bfebf1cfe12a8f2b19a3de5df3dc4", "text": "Returns the current price of an sale .", "title": "", "metadata": ""}
{"_id": "ee47df38e98c1f809761c793a677144a", "text": "set the dragon crowdsalecore contract .", "title": "", "metadata": ""}
{"_id": "733a094c9c643b6fed74a8bd18ab74bb", "text": "Number of tokens that can be purchased with the specified _weiAmount .", "title": "", "metadata": ""}
{"_id": "09a4eef7e665bb57877606273db0ce25", "text": "Import bounty reward ( for owner ) .", "title": "", "metadata": ""}
{"_id": "e944bbe8a1c0860aaefb49b1c77e5bae", "text": "main function to buy tokens to specified address .", "title": "", "metadata": ""}
{"_id": "09b23874dcb962b0ff0a54b4a52e6d9e", "text": "Computes the remaining subsidy pending of being claimed for a given halving .", "title": "", "metadata": ""}
{"_id": "8a97e2844e770b0a8fd0043e5d7a573a", "text": "ETH-WPR exchange rate .", "title": "", "metadata": ""}
{"_id": "124ce86088ec7d91f6bf93dd7fb3b6e9", "text": "Transfer All Balance to Address .", "title": "", "metadata": ""}
{"_id": "26cdee52b3279783ddad7aea20413ae4", "text": "Set Info .", "title": "", "metadata": ""}
{"_id": "20f6a6653fabe00ddeb8b78ef61c7993", "text": "deploys a new proxy instance sets custom owner of proxy .", "title": "", "metadata": ""}
{"_id": "697c8b36496ed2412296b9bfe0111f6a", "text": "onlyOwnerOrOperator set gas price for oraclize callback .", "title": "", "metadata": ""}
{"_id": "bfd20010ae33b8beeb8fdbd45ba61251", "text": "Send 7 commission to the contract owner .", "title": "", "metadata": ""}
{"_id": "00d5460569912410aa584f0df7e213eb", "text": "Passes asset ownership to specified address .", "title": "", "metadata": ""}
{"_id": "2d808f9d7c78f605ad23984d2be53a9b", "text": "This method should be called by the WCT holders to collect their corresponding WPRs .", "title": "", "metadata": ""}
{"_id": "41847c1fc11d5de0e231be0e9ea9d2b0", "text": "called by the owner to unpDeleteFromBlacklistause .", "title": "", "metadata": ""}
{"_id": "98a90b76d51c932aae8767502b7f9956", "text": "registers a new address for the contract name in the registry .", "title": "", "metadata": ""}
{"_id": "87595c88a555eac499affe694ff08e7e", "text": "Check if a particular transaction has already been written .", "title": "", "metadata": ""}
{"_id": "bcd4e07d3da839045c1f62acff214a80", "text": "Approve specified address to mint tokens .", "title": "", "metadata": ""}
{"_id": "eaf3e7f503a7bf30e607720b78819048", "text": "Pay affiliate to only a address .", "title": "", "metadata": ""}
{"_id": "3b9af05797050aa224552cb726bb020b", "text": "Set the data associated with a plot .", "title": "", "metadata": ""}
{"_id": "1825212d27e0d2dc13ab1b9a00bfd16d", "text": "Sets the amount of gas allowed to withdrawers .", "title": "", "metadata": ""}
{"_id": "4b416e8613adda85b27417aebb4d4c1c", "text": "standard transfer function with timelocks .", "title": "", "metadata": ""}
{"_id": "631127a33deae70e9a241182970aeeae", "text": "Checks whether the msg . sender .", "title": "", "metadata": ""}
{"_id": "b95982e16c64c1b5ca653ba9eb855c92", "text": "Set the tokenSell contract address , can only be set once .", "title": "", "metadata": ""}
{"_id": "d15aef2a01a9b045e8b5a123719170eb", "text": "Creates a new promo Movie with the given name , with given _price and assignes it to an address .", "title": "", "metadata": ""}
{"_id": "ec669d2a079ee45edb0210b8ba1102b4", "text": "true if crowdsale event has ended . .", "title": "", "metadata": ""}
{"_id": "e16c8c15128a55e1ab00006e77441c9d", "text": "Stakes a certain amount of tokens , this MUST transfer the given amount from the user .", "title": "", "metadata": ""}
{"_id": "2e9de3b233431f82aa88760d8d6b0ec1", "text": "Mint DRC Tokens from serveral specific wallet addresses .", "title": "", "metadata": ""}
{"_id": "968bd006350f1a34453876e15f91b509", "text": "allows Nauticus to toggle disable all inter-user transfers , ICE .", "title": "", "metadata": ""}
{"_id": "59bb60ef46c9b47bfcfb49ba5bc38b42", "text": "In case we run out of gas .", "title": "", "metadata": ""}
{"_id": "cda1bcd0003a57e9f304c9ebe7892397", "text": "Set when public sale starts .", "title": "", "metadata": ""}
{"_id": "39354cc56183a7a4d451e402bb54ad84", "text": "Check whether btcAddress is in the transaction outputs * and whether * at least * value has been sent to it .", "title": "", "metadata": ""}
{"_id": "899f9c25a790953c10caafcd79e8b3d0", "text": "donation and token purchase method .", "title": "", "metadata": ""}
{"_id": "897f84053534966c8915d3ada5cbfa8f", "text": "allows execution by the BancorNetwork contract only .", "title": "", "metadata": ""}
{"_id": "298bc053d473afdd0d78971c14eacd39", "text": "Modifier for validating the msg . sender .", "title": "", "metadata": ""}
{"_id": "548c5ebd3102f42a0e4e2b698f504365", "text": "Postallocation Reward Tokens .", "title": "", "metadata": ""}
{"_id": "5536055ecb68d35ca6b7447d750e5fe9", "text": "Return the result of subtracting y from x , throwing an exception in case of overflow .", "title": "", "metadata": ""}
{"_id": "081c7621065a141babd12080a08f3048", "text": "Returns the location of a provider's list of registered applications in storage .", "title": "", "metadata": ""}
{"_id": "fa4b0dae1245f90a0faf084a5dae7c1b", "text": "Transfers a Fighter to another address .", "title": "", "metadata": ""}
{"_id": "29aac99119a73c62293c0a836073eebe", "text": "End : events .", "title": "", "metadata": ""}
{"_id": "b9cd4ee7e9e415cf3649dab47c5b26f5", "text": "Called by the Standard Token upon creation .", "title": "", "metadata": ""}
{"_id": "1131421c86579c42e4fd9cd4ebb71640", "text": "Buy Droplet .", "title": "", "metadata": ""}
{"_id": "77021038d452640d99a666c131f36663", "text": "enable automatically seller .", "title": "", "metadata": ""}
{"_id": "5d4d0b2490877095062aa3b4a0865c09", "text": "ERC20 approveAndCall extension .", "title": "", "metadata": ""}
{"_id": "ed41f027e1d6da2130476fe889a4485f", "text": "returns the current owner of the token with id _tokenId .", "title": "", "metadata": ""}
{"_id": "c96a8a086205e7770b8591f4a2946052", "text": "Cancellation : cancels an order , if a bid refunds money , if an ask returns shares .", "title": "", "metadata": ""}
{"_id": "89dba6eb8ec0234af4f0d96e16f7aee6", "text": "called by the operator to set the new operator to pause the token .", "title": "", "metadata": ""}
{"_id": "02317892003b53e75e2c5d58e4f34756", "text": "return the lowest of two 64 bit integers .", "title": "", "metadata": ""}
{"_id": "6cf263f4fb9d12da397332a404710f47", "text": "Allows the upgrade the M5 logic contract and token at the same transaction .", "title": "", "metadata": ""}
{"_id": "034a6c2baedd623ad7c3eefddbf6ebaf", "text": "Lock transfer during presale period .", "title": "", "metadata": ""}
{"_id": "3e18e1619a7ca03cfa3fcca32d4e9700", "text": "Calculates wei cost of specific amount of tokens .", "title": "", "metadata": ""}
{"_id": "fa22e5f9e0e1f5ed5f32f4002dc951c3", "text": "functions for safe math .", "title": "", "metadata": ""}
{"_id": "124e0b755f54ace1912fd09842bb8031", "text": "Owner can lock the feature to transfer token .", "title": "", "metadata": ""}
{"_id": "e4b66e9c4dc93ee1f040fe1c5dd46c9b", "text": "Add an option to an existing Ballot .", "title": "", "metadata": ""}
{"_id": "5cda56acc13122674f801b1f436aaec8", "text": "Exploration Time : The time it takes to explore a Sector is dependent on the Sector Size along with the Ship s Range and Speed .", "title": "", "metadata": ""}
{"_id": "30bbd3a2b6fdcc39aadfd46efb4aaff8", "text": "Mark all members ( except this contract msg . sender ) .", "title": "", "metadata": ""}
{"_id": "533da55524bf8108f921fe96c06d0367", "text": "return a pseudo random number between lower and upper bounds given the number of previous blocks it should hash .", "title": "", "metadata": ""}
{"_id": "23796bcfb74bdf545c2ae98cd7f54b11", "text": "Withdraw remaining tokens to the team wallet .", "title": "", "metadata": ""}
{"_id": "4355cd5d2b0700008b43cc01c924a054", "text": "Number of tokens sender will recieve .", "title": "", "metadata": ""}
{"_id": "4097f1c0654eef10a696c641709e0c7c", "text": "Transfer _value SGN / SGA tokens from sender's account msg . sender .", "title": "", "metadata": ""}
{"_id": "3c317f68d13f070b3048a4636ccc1a41", "text": "Change amount of tokens in discount phases .", "title": "", "metadata": ""}
{"_id": "2e0df4ed58bb200554d34eb440f6e936", "text": "Rimuove un vecchio Notaio .", "title": "", "metadata": ""}
{"_id": "d9ea67992d3f5b13e29786c7fe7584f4", "text": "Allows owners to change their mind by cacnelling votesMaskByOperation operations .", "title": "", "metadata": ""}
{"_id": "fd31d2bea91cf1c67410a2c7a43e53fe", "text": "Token holders are able to burn their tokens .", "title": "", "metadata": ""}
{"_id": "d6b055043f2ef2126c705d520aaf24b3", "text": "Set access permissions for methods .", "title": "", "metadata": ""}
{"_id": "321c5781dd1bb0a2cc8433d409ed812e", "text": "Set USD to ETH value .", "title": "", "metadata": ""}
{"_id": "18371c383c2639dc37e12700efe91f84", "text": "validate transfer with TransferManager module if it exists .", "title": "", "metadata": ""}
{"_id": "8117bb78c958fa1ab896cbaa1eb4ffaf", "text": "change target .", "title": "", "metadata": ""}
{"_id": "83e679bfd3993923357a126177834991", "text": "This function can be used by the owner of a team to modify the price of its team .", "title": "", "metadata": ""}
{"_id": "03ed512243d839fadda13cd2a7fdf0a3", "text": "get main sale state .", "title": "", "metadata": ""}
{"_id": "97d937f2e36d610b81eb700c4acec72e", "text": "Signature methods .", "title": "", "metadata": ""}
{"_id": "bd5e6279a4326778c66de3681109a676", "text": "Returns all the relevant information about a specific movie .", "title": "", "metadata": ""}
{"_id": "087753ffedd3336ff31a276497a4f83d", "text": "extend crowdsale for 2 weeks .", "title": "", "metadata": ""}
{"_id": "5029002a90cb188d24db61ae73feb00c", "text": "in case some accidentally sends other tokens to this contract .", "title": "", "metadata": ""}
{"_id": "4eb4170a7b94db2feef6502cb143b441", "text": "bool debug .", "title": "", "metadata": ""}
{"_id": "ac6331c137a053950092fba33b8017b8", "text": "Sends an mail to the specific list of recipients with amount of MAIL tokens to spend on them , hash message , time unti when is message available and tokens .", "title": "", "metadata": ""}
{"_id": "f895ebb63a547102e012b7ad7dd93300", "text": "Actually part type .", "title": "", "metadata": ""}
{"_id": "47c62ab0117ae352eef3d42f71d34221", "text": "Returns all the relevant information about a specific player .", "title": "", "metadata": ""}
{"_id": "ba09c4286e72e832532e8462a838a6e4", "text": "Transfer tokens to the recipient and update our token availability .", "title": "", "metadata": ""}
{"_id": "2c7995b918b1299f6d16cb4660cce388", "text": "Ritorna il bilancio dell'utente di un indirizzo .", "title": "", "metadata": ""}
{"_id": "c050a9706b7a6961336c187905d3116b", "text": "Implements IERC677Token .", "title": "", "metadata": ""}
{"_id": "fad4a9ba5ba5c206dcb98b2de798e50c", "text": "Ensure the function caller is the contract admin .", "title": "", "metadata": ""}
{"_id": "2ee7749e58213c0cd76ce60dd35f19e5", "text": "get index when cumsum i exceeds _in first .", "title": "", "metadata": ""}
{"_id": "a4c2505400ede43310747e87e7eeb7c0", "text": "Function to change founder address .", "title": "", "metadata": ""}
{"_id": "ce11d9ebc70ed298c01e188ad55c06db", "text": "ERC20 Token Symbol .", "title": "", "metadata": ""}
{"_id": "c99d8fada69f924685618c7dc49e4e74", "text": "Calculate service fee ; to avoid ufixed data type , dev ( 1 / charge rate ) .", "title": "", "metadata": ""}
{"_id": "a980ee36f5459130ca360222e7a939c7", "text": "Allow _spender to withdraw from your account , multiple times , up to the _amount amount .", "title": "", "metadata": ""}
{"_id": "e2b9fc6cf9d26c70e6712ad10f898781", "text": "Allow founder to change the minimum investment of ether .", "title": "", "metadata": ""}
{"_id": "062d5a2ebde3002ebd4defd88bc5d050", "text": "commitDispute and startDispute need to be separate stages to ensure blockHash randomness .", "title": "", "metadata": ""}
{"_id": "85673858c4b73717cd0586f898ccaf9b", "text": "Create a block if it doesn't exist .", "title": "", "metadata": ""}
{"_id": "74f01aaf074fd3bb665230b3aa416768", "text": "Used by posters to submit and create a new meme .", "title": "", "metadata": ""}
{"_id": "fa760034357edbc6da54995a12fcf2c2", "text": "Removes an address from the whitelist of Verifiers .", "title": "", "metadata": ""}
{"_id": "252dd341139c348faf0a894befc5b627", "text": "Token holder must call this to receive dividends .", "title": "", "metadata": ""}
{"_id": "1080bb0a7680cd12744f1a2c2990d1b7", "text": "only owner address can set emergency pause 2 .", "title": "", "metadata": ""}
{"_id": "ab24bee60c0e7f7ab24da6ab4ae54dee", "text": "Returns the granularity .", "title": "", "metadata": ""}
{"_id": "f826a4581d6d86aec7473ed6480eb473", "text": "Get the amount which '_spender' is still allowed to withdraw from '_owner' .", "title": "", "metadata": ""}
{"_id": "52515012ff186427c89e720778b113fc", "text": "Trasfer tokens from one address to another .", "title": "", "metadata": ""}
{"_id": "635157725d3217f2ca791d55f86e267c", "text": "Set the tokens contract .", "title": "", "metadata": ""}
{"_id": "d73ced1280c25bf8c541345f4ef4045f", "text": "100m coins total reward begins at 50 and is cut in half every reward era ( as tokens are mined ) .", "title": "", "metadata": ""}
{"_id": "3652e19cb0abd30c890a8a505bda2575", "text": "Returns the location of an app's list of versions .", "title": "", "metadata": ""}
{"_id": "96f4f990ec793524fb538dce7d9871f3", "text": "Registers and immediately activates device , used by manufacturers to prepay activation .", "title": "", "metadata": ""}
{"_id": "950d0760baec6cf843c3c1483955d028", "text": "Revokes the lock at a given index for a given address .", "title": "", "metadata": ""}
{"_id": "d881a8fa04028bcc10e7b300b8bbf35f", "text": "Calculates the number of seconds feeAmount would add to expiration date .", "title": "", "metadata": ""}
{"_id": "6f4edfc2c013b318fe129db84a1d6459", "text": "Since symbol is passed into the ERC721 token constructor , it's not stored in the CodexRecordProxy contract .", "title": "", "metadata": ""}
{"_id": "6da7a8df0be80dade34b58a61dffc4c1", "text": "Returns the win percent when going low on the given number .", "title": "", "metadata": ""}
{"_id": "226460fa65ab6669c350213454750bf6", "text": "private function used by transferAgreement transfer .", "title": "", "metadata": ""}
{"_id": "53675a216f81aff39ca9792e53c858c2", "text": "check if a pair is listed for trading .", "title": "", "metadata": ""}
{"_id": "be7d6d416f2f69b65875754d2316c380", "text": "if the contribution is a valid refund claim , then carry on with state changing operations .", "title": "", "metadata": ""}
{"_id": "536a400b856c4635f607939784504332", "text": "returns current voting result for given address in percent .", "title": "", "metadata": ""}
{"_id": "33eb6927e43f692fca0603c476db91f5", "text": "The attached LiquidPledging contract is the only address that can call a function with this modifier .", "title": "", "metadata": ""}
{"_id": "26ec5534f20c00989d868517b346f3ce", "text": "start the crowdsale .", "title": "", "metadata": ""}
{"_id": "2d48b54c6c50ecc5d074770f20a9b18d", "text": "Requires value to be non-zero .", "title": "", "metadata": ""}
{"_id": "60b4ed037cc98438b69669680ee83caa", "text": "ERC20 transferFrom : .", "title": "", "metadata": ""}
{"_id": "668d8da56703de47ddb48cbbc3cc12ea", "text": "Retrieve tx confirmation count .", "title": "", "metadata": ""}
{"_id": "b0126ce0d293dbfb3f0e46c7f6e4e9a4", "text": "function to set tokens for the sale .", "title": "", "metadata": ""}
{"_id": "5381775175d05002bd4baea9300dd212", "text": "Set the current DOL rate in wei for one eth .", "title": "", "metadata": ""}
{"_id": "96aaa7ce5fb22a40e34db35f69d4eea1", "text": "migration by investor .", "title": "", "metadata": ""}
{"_id": "ec26d302f933899641b5a407c0013c37", "text": "returns expected payout for tokenholder during lock phase .", "title": "", "metadata": ""}
{"_id": "067b1676ed72252222324fd807bb2a2d", "text": "add a admin role to an address .", "title": "", "metadata": ""}
{"_id": "d8f2a3e1aa302387749aa6a6a4a9c3af", "text": "add a member to the network .", "title": "", "metadata": ""}
{"_id": "8ad8196e8728f6fbd4acc1402e5b104c", "text": "call any function from another contract .", "title": "", "metadata": ""}
{"_id": "2a7eabf61f13a6774c8cf02b36a6ecf1", "text": "The function withdrawalProfit ( ) enables token holders to collect a fair share of profits from the ProfitContainer , proportional to the amount of tokens they own .", "title": "", "metadata": ""}
{"_id": "3b827d8a5634d891797604e622604a0e", "text": "Implementation of ERC223 receiver fallback function in order to protect .", "title": "", "metadata": ""}
{"_id": "fb01e771191a99b60583bdaa212bda32", "text": "Wolk Genesis Event only accessible by Contract Owner .", "title": "", "metadata": ""}
{"_id": "b281d71d2b8195c7bf40fcae1122392d", "text": "Sets Proxy contract address for a particular asset .", "title": "", "metadata": ""}
{"_id": "18369b8723879ed6bf8bb88bb5263117", "text": "Buy tokens when the contract is not paused .", "title": "", "metadata": ""}
{"_id": "648709e202ee6758b7602253c2f51f72", "text": "modifiers to avoid short address attack .", "title": "", "metadata": ""}
{"_id": "16176fef98950dc5020bc7d0d27327be", "text": "check if msg . sender .", "title": "", "metadata": ""}
{"_id": "a1ba137d30dc319b4330d200b7028c13", "text": "Gets total amount of fees that are redeemable if refreshGames ( ) is called .", "title": "", "metadata": ""}
{"_id": "a9db32962a6d8a4ce6cbb71b9f8cb4ec", "text": "Add an contract admin .", "title": "", "metadata": ""}
{"_id": "0711ccfeb48552f877b5ad686f017113", "text": "Setting operator _operator for _tokenHolder .", "title": "", "metadata": ""}
{"_id": "f5bf61eb47b10af2c55b6fed80c09f33", "text": "modifier to authorize owner .", "title": "", "metadata": ""}
{"_id": "797551744c28e8388bd71dfb3c4c6eac", "text": "Remove all ether from the contract .", "title": "", "metadata": ""}
{"_id": "9169ddc7650cec4d322067db699ce8b2", "text": "Return RoundsManager interface .", "title": "", "metadata": ""}
{"_id": "f3c4e2f87f3ed3ec4073a2da82432ba9", "text": "allows the owner to update the signer address .", "title": "", "metadata": ""}
{"_id": "0e8b7ba1a43b33d0edbc5bd5d3fd8c28", "text": "Query game state .", "title": "", "metadata": ""}
{"_id": "66f4c57cac1c9fd100cb02ebc7d6ce93", "text": "Internal function to ensure atomicity of voter log .", "title": "", "metadata": ""}
{"_id": "20e26e7ced6b6f34644e536738e3822e", "text": "ERC20 Token Section .", "title": "", "metadata": ""}
{"_id": "b08bbc3c0e3a94cb9d806f3f9c455886", "text": "Check if the address is valid by checking if it is not equal to 0x0 .", "title": "", "metadata": ""}
{"_id": "c1b4b577c3cfb3f39c0f522d6096d306", "text": "Add funds to the bounty for a question .", "title": "", "metadata": ""}
{"_id": "0337a0422481fd273bd0e203cacd1bf4", "text": "num_whitelisted : The length of the tier's whitelist array .", "title": "", "metadata": ""}
{"_id": "f66ed2757eaa296713050fc11e3c50ee", "text": "Change the ( totalSupply ) cost of a license .", "title": "", "metadata": ""}
{"_id": "d3057fc22494c4512b38f3ae7db48da2", "text": "Implements ERC20 totalSupply ( ) .", "title": "", "metadata": ""}
{"_id": "3fd74456c93c5e14cea6268691f792f4", "text": "Whenever there is transfer of tokens from _from to _to , CEO of company might get changed ! .", "title": "", "metadata": ""}
{"_id": "31f075e3b7025740a3849d7f51745a28", "text": "board members reserve the right to reject outside proposals for any reason .", "title": "", "metadata": ""}
{"_id": "e27b96448a92208504dd3cbe3db195ed", "text": "total tokens supplied .", "title": "", "metadata": ""}
{"_id": "bd867955315858f89a48d473e195dfc8", "text": "allows owner to remove any exclusion from certain recipients , allowing their locked token balance to be unlockable again .", "title": "", "metadata": ""}
{"_id": "c4377505d39a03bfbf733cb672cf400b", "text": "Tokens balance .", "title": "", "metadata": ""}
{"_id": "3dc98bf6c81b287e21440422b9ac9fb2", "text": "Withdraw ETH to a recipient .", "title": "", "metadata": ""}
{"_id": "d79594366ed9c104590b0a8f32cfc4de", "text": "get global marketplace configuration .", "title": "", "metadata": ""}
{"_id": "525d65bee0718accd3e268752d653657", "text": "Function needed for automated testing purposes .", "title": "", "metadata": ""}
{"_id": "6b1580246fd418bdf1cff4897a1a2fbd", "text": "true if the transaction can redeem tokens .", "title": "", "metadata": ""}
{"_id": "bc1270465baa4da44e0c71754c13c411", "text": "time measuement is based on blocks .", "title": "", "metadata": ""}
{"_id": "d43b398f5a21401ee24a6c10f8a8ffbe", "text": "getOrders allows parties to get an array of all orderId's open for a given token .", "title": "", "metadata": ""}
{"_id": "b90b7c282c195aa593e8f0e6e3f365d5", "text": "Creates a new Meal with the given name .", "title": "", "metadata": ""}
{"_id": "596d12e961808f906b14064235623f56", "text": "getting stage index .", "title": "", "metadata": ""}
{"_id": "06e2279c01e3055a93b1f11f5aa102fe", "text": "Dai Target Price ( ref per dai ) .", "title": "", "metadata": ""}
{"_id": "6b2f567fd37568a63db9c9c70eec1f0e", "text": "Allows the upgrade the M5 logic contract .", "title": "", "metadata": ""}
{"_id": "1aa729e6f5a4ef8f35ddf53db15279c8", "text": "get count of cofounders .", "title": "", "metadata": ""}
{"_id": "6447637af1d3bd7fe02794b818810cad", "text": "Subtracts ability points .", "title": "", "metadata": ""}
{"_id": "d74a7450d81b5d8be91d7d3077a67162", "text": "_tokens amount of tokens .", "title": "", "metadata": ""}
{"_id": "21e046a85cd79e6f345fd43fc81c3fd1", "text": "Allow the specified drawer to withdraw the specified value from the contract balance .", "title": "", "metadata": ""}
{"_id": "413563edd016c2096d723fab7345d3cd", "text": "250 is the max number of cards that the developers are allowed to print themselves .", "title": "", "metadata": ""}
{"_id": "be23a4953c6c141da5233d87fc4ceada", "text": "ERC20 Standard method to return total number of tokens .", "title": "", "metadata": ""}
{"_id": "918d07c45981479730a25043ea6611e8", "text": "Returns TRUE if early birds round is currently going on .", "title": "", "metadata": ""}
{"_id": "7b01d10edf3362ce8143d400bdd610da", "text": "Returns true if the contract implements interfaceID and interfaceID is not 0xffffffff , false otherwise .", "title": "", "metadata": ""}
{"_id": "b8a604b2e0551f83780a8c144895f795", "text": "Returns the maximum bet .", "title": "", "metadata": ""}
{"_id": "531606dedaf7e8ac20c352689f5f1043", "text": "The function initializes a group with a release date .", "title": "", "metadata": ""}
{"_id": "f3487d449d3847756f8c506d7f7af3a4", "text": "Creation of district properties , up to a limit .", "title": "", "metadata": ""}
{"_id": "57a382b24562aa44f29fb256b15972e2", "text": "Get Freeze Status : Constant .", "title": "", "metadata": ""}
{"_id": "bfbfd1927397c08b2b150ee8e5b9d742", "text": "Check the amount of grants that an address has .", "title": "", "metadata": ""}
{"_id": "a1a7e8a091ea04a500e924048fe0fd6f", "text": "Returns the balance in play .", "title": "", "metadata": ""}
{"_id": "f0b747dea100c14a041ff37616e792db", "text": "The volcano eruption can be triggered by anybody but only if enough time has passed since the last eription .", "title": "", "metadata": ""}
{"_id": "7e9f3f860987940ea3ce2322999f14a4", "text": "the contract owner can set the minimum coin value to purchase .", "title": "", "metadata": ""}
{"_id": "deca29c2091850f9357d74a304f8355b", "text": "Add the tag for specified Module Factory .", "title": "", "metadata": ""}
{"_id": "9331917c9778bfd4f11d806731473914", "text": "Performs the computation of auction winners and losers .", "title": "", "metadata": ""}
{"_id": "3e6a30a4083d06cea91d6441c4bd533a", "text": "only playas wit profits .", "title": "", "metadata": ""}
{"_id": "bbe21ec2781e924efd40f28f6a16fba4", "text": "returns certificate metadata given the certificate hash .", "title": "", "metadata": ""}
{"_id": "e880df81aa03f444b6cd5e6fcfda539d", "text": "given two connector balances / weights and a sell amount ( in the first connector token ) , calculates the return for a conversion from the first connector token to the second connector token ( in the second connector token ) .", "title": "", "metadata": ""}
{"_id": "e8ede5fab0508d0bb184a200202c3f77", "text": "Allows the owner to set the multisig wallet address .", "title": "", "metadata": ""}
{"_id": "68de237ab6259c7090eb6ee56a5106f9", "text": "Remove addresses from the whitelist .", "title": "", "metadata": ""}
{"_id": "b8b367a72b0302d4036d1479a83b1d83", "text": "updates sale price of item .", "title": "", "metadata": ""}
{"_id": "65daa9b595910af963bdcdcc4ae2fede", "text": "Very simple trade function .", "title": "", "metadata": ""}
{"_id": "4faa6dd9730af87d0ecdfaec44147381", "text": "Get the token balance for account _owner .", "title": "", "metadata": ""}
{"_id": "6528b092edb2ffb3e020f96ec0fe2835", "text": "Unfreeze all bonus tokens .", "title": "", "metadata": ""}
{"_id": "d4b23b57565eecadb3a1de41b49e09a4", "text": "Add participants to whitelist in bulk .", "title": "", "metadata": ""}
{"_id": "dc61519f03620e58366cdcd269625163", "text": "String helpers below were taken from Oraclize .", "title": "", "metadata": ""}
{"_id": "13e5fa8dc814f71e68b4b9e9cf02aea6", "text": "Allow refund if isRefundAllowed is ON .", "title": "", "metadata": ""}
{"_id": "0f712b230167007ad3c1bec19a1b3c92", "text": "a multiplied by b .", "title": "", "metadata": ""}
{"_id": "7f885372e3295726aaba2fdd956e71c5", "text": "User transfer permission .", "title": "", "metadata": ""}
{"_id": "0467bbd62cf7967a294bb18faa484ab7", "text": "The setEndDate ( ) changes unit timestamp on wich de donations ends .", "title": "", "metadata": ""}
{"_id": "e06df825a1df8f717d451a13b3eb7811", "text": "Get claimable dividend for the hodler .", "title": "", "metadata": ""}
{"_id": "d07a9f57ef2064afdbd6368a14b2a2d2", "text": "Computes the bonus .", "title": "", "metadata": ""}
{"_id": "425eeed4e9d81830bdcc073089bcbd07", "text": "Throws if called by any account other than the validator .", "title": "", "metadata": ""}
{"_id": "4c12bd2a60e18213bcb6f137e6f6935c", "text": "Withdraw all eth from this contract .", "title": "", "metadata": ""}
{"_id": "8abab86eb25c8bf77fa45577c5c23a3c", "text": "changeBountyPaysTokens ( ) : allows the issuer to change a bounty's issuer .", "title": "", "metadata": ""}
{"_id": "487f9bc6e7a6330d6d50e69ec1abd7e4", "text": "Only allowed by financial officer .", "title": "", "metadata": ""}
{"_id": "51d6079acdf6860bd4db963b1692db8a", "text": "Approves a migration and suicides the entire smart contract .", "title": "", "metadata": ""}
{"_id": "b16afb7128312d1699d82bb41e575c33", "text": "Unfreeze ALL token transfers .", "title": "", "metadata": ""}
{"_id": "45233501d7529c5851ed15e76997b3dd", "text": "available to contributers after deadline and only if unfunded if contributer used a different address as _beneficiary , only this address can claim refund .", "title": "", "metadata": ""}
{"_id": "45175c9344b688a2fac9d3535d47d6c4", "text": "Returns a list of all element IDs assigned to an address .", "title": "", "metadata": ""}
{"_id": "0bc185563f0d2b9d9546de161d98aa3d", "text": "Allows to get tokens during the TGE .", "title": "", "metadata": ""}
{"_id": "d5f1d23f1ba9e91ec832f7772064c673", "text": "What is the balance of a particular account ? .", "title": "", "metadata": ""}
{"_id": "95dfb5d6ebfff31ec1e56eaba9526731", "text": "Collect information about doge farm dividents amount .", "title": "", "metadata": ""}
{"_id": "0cd6845b875282f4d168a53d42af33f7", "text": "Initializes an ACL instance and sets _permissionsCreator as the entity that can create other permissions .", "title": "", "metadata": ""}
{"_id": "aa3aca808263160088725504faa303e6", "text": "Add or remove game contract , which can accept Etheropoly tokens .", "title": "", "metadata": ""}
{"_id": "844694e1767c0768bebf62df33178b23", "text": "functions below this line are onlyOwner set message of the day .", "title": "", "metadata": ""}
{"_id": "33d817b947c7d4d2187cb3737dccc999", "text": "send _value token to _to from msg . sender .", "title": "", "metadata": ""}
{"_id": "43fb9a6ba76f2a95c3bf4f1006ac3508", "text": "onlyOwner changes the location that ARC is sent .", "title": "", "metadata": ""}
{"_id": "1270b0e96d3a2e46e6260bc96963f1b4", "text": "Substring utility function .", "title": "", "metadata": ""}
{"_id": "a4443f9ccb9b6d6b79d4d351358f44d1", "text": "Update fundraiser address rights .", "title": "", "metadata": ""}
{"_id": "f9040c051ee02fa47dbec1b540998dcd", "text": "total amount of ART .", "title": "", "metadata": ""}
{"_id": "507d7a1253fd5e57f6a722d5fe644842", "text": "Transfer a Fighter owned by another address , for which the calling address has previously been granted transfer approval by the owner .", "title": "", "metadata": ""}
{"_id": "c096490c559c4a981c06423f51c6afb2", "text": "Set the cooldownEndTime for the given Cutie , based on its current cooldownIndex .", "title": "", "metadata": ""}
{"_id": "9e4fe9768639d1a4e1cda3082b123a44", "text": "Set the Exp given to the player for fighting in this arena .", "title": "", "metadata": ""}
{"_id": "d2cd185673942a04e1e51d739994ea96", "text": "Allows owner to execute a transaction .", "title": "", "metadata": ""}
{"_id": "19cd051675fa290b88e0b1182cf68071", "text": "When the currently running game ends , a new game won't be automatically started .", "title": "", "metadata": ""}
{"_id": "1aef0ef8df1f9ca1a2deebdf9d06a4ef", "text": "Kills this contract .", "title": "", "metadata": ""}
{"_id": "18784173467f5128ef9fb41e04567452", "text": "Get balance total of a request .", "title": "", "metadata": ""}
{"_id": "2d281378f53c100d02434ec0f55f2691", "text": "Invoke ERC20 transferFrom method .", "title": "", "metadata": ""}
{"_id": "46ef56cfae9f7ded64cee7206ffc92e0", "text": "Cambiar el contrato de Vita reward .", "title": "", "metadata": ""}
{"_id": "fe36a19a79ff1666fa56c5f65f48300e", "text": "Allows anyone to transfer the zHQ Token tokens once trading has started .", "title": "", "metadata": ""}
{"_id": "e94084c7f52b1a7d592f69e368457812", "text": "Returns if _addr . getTreasury ( ) .", "title": "", "metadata": ""}
{"_id": "8626b28ab5a84301294e468ec3d47149", "text": "The receiver may add and remove each address' permission to deposit .", "title": "", "metadata": ""}
{"_id": "ad606b6d814a7086228ad6c5e87cfe36", "text": "find the trusted contract index for an address , or - 1 if not found .", "title": "", "metadata": ""}
{"_id": "ad4e26b5e82756a8b8f2381e8a588701", "text": "Stop the ico manually .", "title": "", "metadata": ""}
{"_id": "c4e343fe4bde2898ba0cc0977f85b11c", "text": "Allow item owners to transfer to another account .", "title": "", "metadata": ""}
{"_id": "ad5b21aa8a122802814bc5790c5d80fc", "text": "Presale Priviledge Addresses methods : set , remove , is .", "title": "", "metadata": ""}
{"_id": "512854477dc2f17947d9f244da9eb4ae", "text": "this function update balance of NETF Funds remove NAC from funds only executable if round open and round not withdraw yet .", "title": "", "metadata": ""}
{"_id": "3cbdcc5bc5e5ed710f215beab6780f47", "text": "returns approximate crowdsale remaining cap ( hardcap ) in Eth .", "title": "", "metadata": ""}
{"_id": "f8fcac4df9b7d88b32225fff44e67b47", "text": "dev function for withdraw amount , which be reserved by minimumTarget ( activate only if minimumTarget is reached ) .", "title": "", "metadata": ""}
{"_id": "d42eb1848d4b79457dae83b30b0a7843", "text": "The auction contract variables are defined in ZodiacBase to allow us to refer to them in ZodiacOwnership to prevent accidental transfers .", "title": "", "metadata": ""}
{"_id": "6bb0fc2ddb8af6c2d7595cb0f0e4a434", "text": "Grants approval to another user to sire with one of your LinglongCats .", "title": "", "metadata": ""}
{"_id": "6a43afb966842060c7e37205d7f9a01c", "text": "checks that the player is not already in the game .", "title": "", "metadata": ""}
{"_id": "6a7d694ebb4d0ea6d393d66aa60927a0", "text": "Accepts ether and creates new Allstocks tokens .", "title": "", "metadata": ""}
{"_id": "f12dda2b04f0b781954df70f0c49d304", "text": "Return basic information about the contract .", "title": "", "metadata": ""}
{"_id": "a83e0f1edd768dc4ad1ce1e715800e45", "text": "Check if input day is present in locked days .", "title": "", "metadata": ""}
{"_id": "0171de675df9e048c7c7eac101fccbf4", "text": "Owner is allowed to manually register who was referred by whom .", "title": "", "metadata": ""}
{"_id": "95a4c0181ee27b3654c1fc3568137cf1", "text": "Returns the total number of pixels currently in existence .", "title": "", "metadata": ""}
{"_id": "407b9c3db6f75e2ba93d137e0131a617", "text": "Sets champ for sale .", "title": "", "metadata": ""}
{"_id": "a5f0de0b94ccf783a42217b8adfa8c16", "text": "Semantically similar to getTokensForEther , but subtracts the callers balance from the amount of Ether returned for conversion .", "title": "", "metadata": ""}
{"_id": "e5edcb6c6e9ce455de89a87703ccef30", "text": "allow transfer for the given address against global rules .", "title": "", "metadata": ""}
{"_id": "81771c248554790b622b398be35f100d", "text": "set the wallet address set the wallet at _wallet .", "title": "", "metadata": ""}
{"_id": "0328b4b7f6c1364b8ff6ef92d38195ff", "text": "Assets consumption .", "title": "", "metadata": ""}
{"_id": "986aef9f9305d489260af153ba5beaa3", "text": "Define if the ratio to be used is wei / tok to tok / wei .", "title": "", "metadata": ""}
{"_id": "21304b770ae40b39a0483ec334a20d30", "text": "The listed addresses are not valid recipients of tokens .", "title": "", "metadata": ""}
{"_id": "4fdab0b1357277cf69288b26952ecf59", "text": "for the provided proposal ID , set it , resolve its challenge , or delete it depending on whether it can be set , has a challenge which can be resolved , or if its process by date has passed .", "title": "", "metadata": ""}
{"_id": "1858030855e251ef8acb6ea649aa3763", "text": "Returns current canvas state .", "title": "", "metadata": ""}
{"_id": "01d143f5cc5057711624139fdf0f25cc", "text": "Map block number to year index .", "title": "", "metadata": ""}
{"_id": "4f57fd99af2f7f9bc1a9e43bbe9101e5", "text": "Upgrades the domain to a new registrar .", "title": "", "metadata": ""}
{"_id": "cd9b993d481274529808223c82a2484d", "text": "Creates Golix token contract .", "title": "", "metadata": ""}
{"_id": "f98ba81006f7d398856919188afd74fc", "text": "whether the token is owned by a non-zero address .", "title": "", "metadata": ""}
{"_id": "310b23bd385b09133f7ef017dffd3ec4", "text": "Withdraw all the ethereum user holds in the contract , set balance to 0 .", "title": "", "metadata": ""}
{"_id": "3d1e1facdfb7839d905c851ab10c5116", "text": "Updates fee recipient address .", "title": "", "metadata": ""}
{"_id": "0031105554347824f6791b61162bf7ee", "text": "This is a supercheap psuedo-random number generator that relies on the fact that who will mine and when they will mine is random .", "title": "", "metadata": ""}
{"_id": "fb996a206163c85f3ee9832896f57c57", "text": "Creates a new Collectible and creates an auction for it .", "title": "", "metadata": ""}
{"_id": "e426b59981e333516ba2f0fc0396b289", "text": "let the user comment 64 letters for a winning round .", "title": "", "metadata": ""}
{"_id": "06e88adf7c84586b199b7ea90575aa35", "text": "Get allowance of _spender in behalf of _owner .", "title": "", "metadata": ""}
{"_id": "5ead3d5ed32ebf7f4b1125d5cff807c5", "text": "Modifier to make a function callable only when the token holder is not frozen .", "title": "", "metadata": ""}
{"_id": "e6d74bdb6cc32a0f2f86e8eb7aa1d4c5", "text": "bool : true if the trade would be successful , false otherwise .", "title": "", "metadata": ""}
{"_id": "251933773e0018f9d76dd118e24aaab3", "text": "Called by a security token to notify the registry it is using a module .", "title": "", "metadata": ""}
{"_id": "37dd52a22b5e5171135c6ea6e58a5d32", "text": "Allows investor to withdraw overpay .", "title": "", "metadata": ""}
{"_id": "7f291154d111ad7dda33788a618e7f5b", "text": "anyone can call this function that mints Scale to the pool dedicated to Scale distribution to rewards pool .", "title": "", "metadata": ""}
{"_id": "9b7aa76ec60f5621d961c333654b89c8", "text": "called by the owner to change the rate .", "title": "", "metadata": ""}
{"_id": "d5aa3cfb8ca8b10f72e9a34b80a09acc", "text": "Called to lock bet , new participants can no longer join .", "title": "", "metadata": ""}
{"_id": "5bcb938bdfd4d913ec0646ded680b24a", "text": "Takes an active order on the selected exchange .", "title": "", "metadata": ""}
{"_id": "c9427586fc17b43f060e1dc9bea231cb", "text": "called by the owner to change the rate of the crowdsale .", "title": "", "metadata": ""}
{"_id": "a7b14c00ae258bc409d4241331a12292", "text": "amount : 12345000 12 . 345000 ARNA 12345000000000000000 ; .", "title": "", "metadata": ""}
{"_id": "e4e34be7f934db6c0e82605a796247bb", "text": "Constructor / Initialize ( only runs at contract creation ) .", "title": "", "metadata": ""}
{"_id": "d7b5fb8f9414fe852422c93c98085771", "text": "Dev : ERC20 standard approve function .", "title": "", "metadata": ""}
{"_id": "a89b3efe9ed17964afd0a6305950099d", "text": "Dev : Mint the number of tokens for the timelock contract .", "title": "", "metadata": ""}
{"_id": "0e1e97c62f7fb50504a05721290b68db", "text": "Sets contract to active / non active state .", "title": "", "metadata": ""}
{"_id": "62aa0bef8c41de2956185924289a337d", "text": "delete function before release contract .", "title": "", "metadata": ""}
{"_id": "f8d876a356d46a4b772982ff74fc833a", "text": "routine 30 - allows for sale of ingredients along with the respective IGR token transfer ( with url ) .", "title": "", "metadata": ""}
{"_id": "b96eac14559b0eae44e7ec11869d0452", "text": "ERC20 compatibility functions .", "title": "", "metadata": ""}
{"_id": "94c835d1c7a6d453f8f4ed1e741b0240", "text": "Transfers the given amount of funds to given beneficiary address .", "title": "", "metadata": ""}
{"_id": "d74d0cbeee3aeafc09fb13ba2f9d1ba3", "text": "comment out networkID to avoid 'unused parameter' warning .", "title": "", "metadata": ""}
{"_id": "97b5f30e3efbb08b81df11a7872ae4bb", "text": "9-11 writes .", "title": "", "metadata": ""}
{"_id": "d058d21687d3681bbea350fd660b0aef", "text": "funds contract's balance to fund address .", "title": "", "metadata": ""}
{"_id": "7978705993f52e3aca35aa8844f0b7c9", "text": "Helper routine to process the payment .", "title": "", "metadata": ""}
{"_id": "207b3b5dd2586e56570a67eccea9734f", "text": "inserts stage .", "title": "", "metadata": ""}
{"_id": "d92daa3e100714a39d9c714b98fd394d", "text": "Create a ( semi ) random number .", "title": "", "metadata": ""}
{"_id": "28137658f303b421e8888adf70ce74ac", "text": "2-step verification that the right winner was announced ( minimize the probability of error ) .", "title": "", "metadata": ""}
{"_id": "4cceec5f7a30f6388623ea9ef744b1e6", "text": "allows the owner to change the max gas price .", "title": "", "metadata": ""}
{"_id": "8bbdcee384861c9c7e8990c8d4e9eb0f", "text": "Rev1 related information functions .", "title": "", "metadata": ""}
{"_id": "5f08f2160bc5b92cd2073622bfe7f466", "text": "Transfer ownership of a contract from trueUSD to this TimeLockedController .", "title": "", "metadata": ""}
{"_id": "c8e93886280fdcdf9856f8194d5e67ce", "text": "Sets the address of the Token contract .", "title": "", "metadata": ""}
{"_id": "d7f49a6b14d669882b3331b4a52ce079", "text": "Allows to set the toal alt deposit measured in ETH to make sure the hardcap includes other deposits .", "title": "", "metadata": ""}
{"_id": "cc094263ac78b11aef2b053f2800fd8c", "text": "callable by other contracts to control economy .", "title": "", "metadata": ""}
{"_id": "101f4fdd8eeeb4496ffc492d15aa4d66", "text": "Owner can give infinite allowance to a specific global address .", "title": "", "metadata": ""}
{"_id": "dd85b023ebd4daf4f5e43f6876429ab0", "text": "address public proposed_sale 0x0 ; .", "title": "", "metadata": ""}
{"_id": "c6e681c241818bfd0d995c1da21c89d9", "text": "when vote end , we need stop buy to frozen the result .", "title": "", "metadata": ""}
{"_id": "8c8377cb4ae688c2dad893cf3132efda", "text": "Sets a new renaming per character cost in wei .", "title": "", "metadata": ""}
{"_id": "cee24ec12a7e499aa07a9878ebc9bac5", "text": "set new price for tokens : .", "title": "", "metadata": ""}
{"_id": "e26d1cd04c69818bae6c7ebfea328d0d", "text": "LAND Update .", "title": "", "metadata": ""}
{"_id": "e2516f675931710651fbe90d63d4d092", "text": "Total supply - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - allowance .", "title": "", "metadata": ""}
{"_id": "4202e4f09a97ecddaf63ebf1d05eff9a", "text": "Completes a siring auction by bidding .", "title": "", "metadata": ""}
{"_id": "8b91a1d6a7284b61192afdfee15f79ed", "text": "bool The result of validation .", "title": "", "metadata": ""}
{"_id": "727aaf9863f48bcdb66745535d2be69a", "text": "Allow owner to adjust the cap during the presale .", "title": "", "metadata": ""}
{"_id": "3331d3d4b1fd5691dd33c7a12802f459", "text": "distributeTimelockedTokens ( ) : private utility function called by constructor .", "title": "", "metadata": ""}
{"_id": "c7cd43f8346342bb2864154a0b23df13", "text": "Starts auction and sets startBlock .", "title": "", "metadata": ""}
{"_id": "8a129b5c56165489d348c6defa119fdd", "text": "function for buying tokens to investors who paid in other cryptos .", "title": "", "metadata": ""}
{"_id": "4296950f55814a32289248df6c978157", "text": "Inherited internal method for storing tokens in contract until claim stage .", "title": "", "metadata": ""}
{"_id": "bd70b3d6e41d55dc6cbdf63c6cc8627d", "text": "The current token price .", "title": "", "metadata": ""}
{"_id": "c15bc6b9b332af9b45114a78001053ec", "text": "Add single address to whitelist .", "title": "", "metadata": ""}
{"_id": "7d66f48d7f7255ea9bf1d517585c324a", "text": "Add a ERC20 token contract address to the whitelisted ones .", "title": "", "metadata": ""}
{"_id": "9cb39c604866ee5c31b47085472dd76f", "text": "Generates a random number from 1 to max based on the last block hash .", "title": "", "metadata": ""}
{"_id": "f4d67bbe5e7c3a94562bb77d14cd2cfa", "text": "get awailable dividends for withdrawal .", "title": "", "metadata": ""}
{"_id": "2674ea4661818f8f460ca84c7464eae8", "text": "deletes _rank id .", "title": "", "metadata": ""}
{"_id": "bbb5db1ad576bebf5b1b8aebb1653c13", "text": "User buys PBTT and pays in Ether .", "title": "", "metadata": ""}
{"_id": "62e374c5596b2183ddbca950fd037888", "text": "Releases foundation supply .", "title": "", "metadata": ""}
{"_id": "9ff6a6ce05c6cfc5df0024c0d49f2dce", "text": "Call this function to redeem a gift of ETH .", "title": "", "metadata": ""}
{"_id": "1c7482fb22ce29c9b1cdad4ebdd9b493", "text": "manually finish and restart round .", "title": "", "metadata": ""}
{"_id": "0db960a81b4902452591f036691b8689", "text": "should not have approve / transferFrom .", "title": "", "metadata": ""}
{"_id": "6c8dea25375572986f591b5cf000f51c", "text": "Check the balance of the Vesting Contract .", "title": "", "metadata": ""}
{"_id": "14f5103bab3291fab9e46ed02621ebf0", "text": "finish time of the ICO .", "title": "", "metadata": ""}
{"_id": "c25b3b08f90a6ff124d306a4ea7e5ca7", "text": "Returns all the relevant information about a specific city .", "title": "", "metadata": ""}
{"_id": "04900ea70fdb6a2f40a8ef3b6a3562bf", "text": "this function change GTO address , this mean you can use many token to buy gift by change GTO address to BNB address .", "title": "", "metadata": ""}
{"_id": "44d5b00fd81935055f89b45a3bdb718a", "text": "finalizeTemplate is used to finalize template . full .", "title": "", "metadata": ""}
{"_id": "900ea7f414a29c45bf0246e98cac0882", "text": "It calculates the amount of tokens to send to the investor .", "title": "", "metadata": ""}
{"_id": "a827dbb2bde56a82b7454c8cdebf6f3b", "text": "extendDeadline ( ) : allows the issuer to add more time to the bounty , allowing it to continue accepting fulfillments .", "title": "", "metadata": ""}
{"_id": "cd92b51b52a0d68d70ebabc5ae8aed51", "text": "Set debug .", "title": "", "metadata": ""}
{"_id": "279d7180a321ea715a4b65ece3f5fe3e", "text": "proxyPayment ( ) allows the caller to send ether to the Campaign and have the tokens created in an address of their choosing .", "title": "", "metadata": ""}
{"_id": "7adfec0db823ccea42d8af1a5f2a28b1", "text": "Allows investors to withdraw funds and overpays in case of crowdsale failure .", "title": "", "metadata": ""}
{"_id": "8fa057039d1a7722fe60878fad3bc43c", "text": "Finalize crowd-sale .", "title": "", "metadata": ""}
{"_id": "d2947138cb8cc75a0c4732a429cd75a5", "text": "I wouldn't call this if I were you , who knows what could happen .", "title": "", "metadata": ""}
{"_id": "802682618fcf0ab672c28612cee84570", "text": "overriding Crowdsale validPurchase to add whilelist .", "title": "", "metadata": ""}
{"_id": "f33b79e6fa1e5e71a76c8700d9f3af46", "text": "Withdrawl Funds .", "title": "", "metadata": ""}
{"_id": "a7ce0bdeaa02acd45d9df0b50610dc1e", "text": "Bulk token transfer function .", "title": "", "metadata": ""}
{"_id": "dda23f35d5f238448d2541abbc1b976a", "text": "do a transfer .", "title": "", "metadata": ""}
{"_id": "addd398e3e0a59c1cc71595f6849e2d0", "text": "get forecast score .", "title": "", "metadata": ""}
{"_id": "092d8fd13397b7f53a5898bfebadae3b", "text": "remove managers .", "title": "", "metadata": ""}
{"_id": "babcdf4557851d6ea6e89e0e7e31728b", "text": "Split the monthly profits of the Casino to the users .", "title": "", "metadata": ""}
{"_id": "d28b80c11fb7bcaf833d7aa8ef300ffb", "text": "Modifier to make a function callable only when the contract is not locked .", "title": "", "metadata": ""}
{"_id": "17556521cedbd2cf56d340cca19419fe", "text": "freeze the account's balance under urgent situation .", "title": "", "metadata": ""}
{"_id": "aca9da4ea52e1eaaf8783ab2a776761f", "text": "Set required progress of previous dungeon .", "title": "", "metadata": ""}
{"_id": "5977bf4ca47fc625ccfb6bb29679b535", "text": "Send tokens to withdrawAddress .", "title": "", "metadata": ""}
{"_id": "62c17e8945e4afbd77762150fcb21ef0", "text": "n : node id d : direction r : return node id .", "title": "", "metadata": ""}
{"_id": "7f5dfe54e3369a0340bcc759a9676d5e", "text": "ERC20 standard supply function .", "title": "", "metadata": ""}
{"_id": "ae9c76f2a84a0326f6df764479fa69e9", "text": "function to determine if an address has already voted in a given ballot .", "title": "", "metadata": ""}
{"_id": "7eb0d5fef938bda0c9a9c9b50c27bd8b", "text": "set a freeForAll to true ( in case you leave to anybody to send ethers ) .", "title": "", "metadata": ""}
{"_id": "4b82bed2aaf9a8fe4cb301647a5142fb", "text": "Connect to Battle contract .", "title": "", "metadata": ""}
{"_id": "413d184fb305493a88505db4a2e54757", "text": "called by the owner to end private fund , triggers stopped state .", "title": "", "metadata": ""}
{"_id": "7f5d4f2f96e896026da320da1e0f4d08", "text": "internal function that allocates a specific amount of ATYX at a specific block number .", "title": "", "metadata": ""}
{"_id": "478c54ad6bccb168b92a5d9393962463", "text": "Allow the owner to take ERC20 tokens off of this contract if they are accidentally sent .", "title": "", "metadata": ""}
{"_id": "fa9addf2a5ed2697833a900a3ce5f3c2", "text": "send ether to the funder wallet .", "title": "", "metadata": ""}
{"_id": "ea9894108dad04daa5194b8ada8c1b70", "text": "Send transaction to compensate the previous owner .", "title": "", "metadata": ""}
{"_id": "dfbbed74aab92bfe2a58f88e413b62ab", "text": "Specifies contract address as a valid studio sub project .", "title": "", "metadata": ""}
{"_id": "8afad9ed63d433ad57fbf53ad1328710", "text": "Address of game contract that ETH gets sent to .", "title": "", "metadata": ""}
{"_id": "537efb6521047616013f506ab424b678", "text": "finalize the crowdsale . After .", "title": "", "metadata": ""}
{"_id": "b0c103224740bc12dd7e6e480ceaaf2e", "text": "Splits the slice , setting self to everything after the first occurrence of needle , and token to everything before it .", "title": "", "metadata": ""}
{"_id": "b4507ab1cbd3bb82a4e234b178de3e33", "text": "Expose all Vars .", "title": "", "metadata": ""}
{"_id": "a59dff4b0b23ce96695bf5e717ce6565", "text": "Can be called by the hirer to claim a full refund , if job has been started but contractor has not completed within 4 weeks after agreed completion date , and becomes unresponsive .", "title": "", "metadata": ""}
{"_id": "da9dea1410aba71967d732c7e9f813c9", "text": "Gets current grant balance for an account .", "title": "", "metadata": ""}
{"_id": "d3a456e291ce6d99a7063b467e16825f", "text": "Returns the address of a store .", "title": "", "metadata": ""}
{"_id": "1124bdf5885a8526e290dbfbbf53509f", "text": "override to add validRecipient .", "title": "", "metadata": ""}
{"_id": "ca214aa312d1d2ad4a29576bfd0738ef", "text": "Prevents the given wallet to transfer its token for the given duration .", "title": "", "metadata": ""}
{"_id": "8c355ab149066197050622612a62898f", "text": "Hash the values required for a secret bid .", "title": "", "metadata": ""}
{"_id": "314307d259b55d7aad6d2d4ec0caa63c", "text": "Croupier uses this method stop selling user's tokens and return them to normal deposit .", "title": "", "metadata": ""}
{"_id": "03b99bfa1eea7a71a2942d56ee3e4f5f", "text": "Switch contract to next stage and reset stage stats .", "title": "", "metadata": ""}
{"_id": "1dbd41fc7a44382060abb2a29354f143", "text": "Getters to allow the same blacklist to be used also by other contracts ( including upgraded Thai Baht Digital ) .", "title": "", "metadata": ""}
{"_id": "f4db250adae60b98501ee432f0ed6225", "text": "Function which allows to mint tokens from another admin address .", "title": "", "metadata": ""}
{"_id": "ce8df8552aeb2da0a40ac003fb9125c4", "text": "Private function the helps in comparing strings .", "title": "", "metadata": ""}
{"_id": "0f2fc2bffd2524afca70bb3134d0b1ef", "text": "claim DRAM function .", "title": "", "metadata": ""}
{"_id": "45b652349f71034a50ef8c6683025781", "text": "Finalize Crowdsale .", "title": "", "metadata": ""}
{"_id": "3888f94096b753adc3318044cdfa60b8", "text": "Optional token symbol .", "title": "", "metadata": ""}
{"_id": "61be646b0b3511cc9aaab8f712e5bb33", "text": "total number of tokens in circulation at the moment snapshot with given index was created .", "title": "", "metadata": ""}
{"_id": "b2e47127ad0f0f4dfda6a0d36b8decd9", "text": "withraw ether .", "title": "", "metadata": ""}
{"_id": "131ae1ac705fd38f82da596f334db534", "text": "for mint tokens to USD investor .", "title": "", "metadata": ""}
{"_id": "2540b4181983e8e8f33f1507737fbe9d", "text": "How many weeks , as a whole number , have passed since the end of the crowdsale .", "title": "", "metadata": ""}
{"_id": "9b4024c87ffcd9c3eaad2dc45db11248", "text": "this function allows to make an offer from someone else .", "title": "", "metadata": ""}
{"_id": "fa48ef19e63b5a9f5f5656d3a281b852", "text": "totalSupply is set via the minting process .", "title": "", "metadata": ""}
{"_id": "349fddad45c6217bef2e7c442075fdd4", "text": "The main external function to call when a player challenge a dungeon , it determines whether if the player successfully challenged the current floor .", "title": "", "metadata": ""}
{"_id": "20f399354426473f466ec7b347f1b691", "text": "Bid ( msg . value ) .", "title": "", "metadata": ""}
{"_id": "0f8f26384d5cee5725e064ef2451836d", "text": "Remove an address from whitelist .", "title": "", "metadata": ""}
{"_id": "4c4af34a881f52d12617593bf13ba224", "text": "The owner of a domain may transfer it to someone else at any time .", "title": "", "metadata": ""}
{"_id": "cdcfc136773255500a844f2529c874dd", "text": "Allows user to check their staked balance .", "title": "", "metadata": ""}
{"_id": "717c5207c4b742a6957afcedc5ca990b", "text": "Set _price_start , _price_constant1 and _price_exponent1 _price_constant2 and _price_exponent2 as the new starting price , price constant and price exponent for the auction price .", "title": "", "metadata": ""}
{"_id": "5da8f90170c9211962baf4e73bcbf4a0", "text": "false first call for cancel offer , prevent withdraw twice withdraws fee to owner if he owns this one .", "title": "", "metadata": ""}
{"_id": "ef944745d1d8664963f2d8bfc27863fc", "text": "blacklists the given address to ban them from contributing .", "title": "", "metadata": ""}
{"_id": "872cd7c4444f1dd5bb75d98d66239184", "text": "Functions with this modifier can only be executed by the owner of following smart contract .", "title": "", "metadata": ""}
{"_id": "aca1b5aff01f17e6a70013c85a46db2c", "text": "this method is used to BUY CrySol Objects in the game , defining what will happen with the next price .", "title": "", "metadata": ""}
{"_id": "ca3944af8aa27a871fbe43db797481cb", "text": "0-based block number index .", "title": "", "metadata": ""}
{"_id": "c0d7eaa40ed8ffb34ebac60661e79434", "text": "Restrict methods in such way , that they can be invoked only by merchant account or by monethaAddress account .", "title": "", "metadata": ""}
{"_id": "ec4a32fb4368885a38ca8cd362b6a529", "text": "Burn SHIT by User .", "title": "", "metadata": ""}
{"_id": "faade4610b01ca74be28579e36bb3e70", "text": "set maximum amount to be sent .", "title": "", "metadata": ""}
{"_id": "4e7025bd1f0361e8ef04d4530b162bbb", "text": "Transfers the director to a new address .", "title": "", "metadata": ""}
{"_id": "475b939d88d83694a0c1eb94c0d9f535", "text": "Returns total raised amount in CNY ( includes EP ) and bonuses .", "title": "", "metadata": ""}
{"_id": "d366727a5dbcfc51409c4c872a94051d", "text": "Pause - In case charity address is no longer active or deposits have to be paused for unexpected reason - Cannot be paused while anyone owns tokens .", "title": "", "metadata": ""}
{"_id": "519f3283d7cf88a2a345caffed92af5a", "text": "Submit proposal for the DAO to execute a particular transaction .", "title": "", "metadata": ""}
{"_id": "d5e63c51352034e90eeaa744a235ef1d", "text": "Can add people to the whitelist .", "title": "", "metadata": ""}
{"_id": "524730832689ad5afcd9cafe71d21eda", "text": "Called from participants .", "title": "", "metadata": ""}
{"_id": "dd4b06424346ebd6c269e27f7b41ba79", "text": "Allows the owner to authorise an address to approve and request the transfer of ETH and .", "title": "", "metadata": ""}
{"_id": "978a4ef3b23c99ec3e6ca747c32554bb", "text": "Sets a passed in location to a value passed in via 'to' .", "title": "", "metadata": ""}
{"_id": "bbafb3695819f7aee0f614da4cceb687", "text": "The owner of a share can reduce the price of the selected share using this function .", "title": "", "metadata": ""}
{"_id": "a9a9a475a26fd0b4889e74a619ffbbd1", "text": "This function is called to withdraw eth or tokens from the contract .", "title": "", "metadata": ""}
{"_id": "afb6b6f32253071521572624aff844ad", "text": "check for pending withdrawals .", "title": "", "metadata": ""}
{"_id": "ddfef8975d9163de1e431bff96f03de9", "text": "Check that caller's address is the borrower .", "title": "", "metadata": ""}
{"_id": "fbe27e7fa5acfbb9c82872021dde2423", "text": "This function is used to send ether to winner address .", "title": "", "metadata": ""}
{"_id": "f1ecfb05350d0b0ec2913cbad4e23c00", "text": "Stop minting function .", "title": "", "metadata": ""}
{"_id": "bdbd7079cd66e9a1b7aa152525a95f6e", "text": "Queries the balance of _owner at a specific _blockNumber .", "title": "", "metadata": ""}
{"_id": "141aadcc1c17f48fb5ad3f2c73da66d5", "text": "approveAndCall allows users to use their tokens to interact with contracts in a single function call msg . sender .", "title": "", "metadata": ""}
{"_id": "48a0a3d2e8d2a50b9ed434d90037bcb6", "text": "Finance token reserve wallet .", "title": "", "metadata": ""}
{"_id": "0c06fa818a6dee7b660dff0529e946c0", "text": "Defines the current value of the token .", "title": "", "metadata": ""}
{"_id": "7e8374d42305ff340f95725cdbac98d4", "text": "charity is the same type of user as everyone else .", "title": "", "metadata": ""}
{"_id": "bf1e20514114374eb89e775697886865", "text": "0 . 001 ETH msg . value .", "title": "", "metadata": ""}
{"_id": "0f3c8d544da4d73108a9a05bdc23cd76", "text": "Allows contributors to claim their tokens and / or a refund .", "title": "", "metadata": ""}
{"_id": "e949d02c6a6f03c372d0ca95bb256368", "text": "Get info about groups .", "title": "", "metadata": ""}
{"_id": "0dd93187e3e41536b9d47416c1b04843", "text": "Charge a fee in protocol tokens .", "title": "", "metadata": ""}
{"_id": "037ab48b5ffc08049fc0bfcf1cc6334d", "text": "Allows owner to start / unpause crowdsale .", "title": "", "metadata": ""}
{"_id": "9f2e88656fe425f718c02a00e33c0936", "text": "manualCloseBet could only be called by owner , this method only be used for ropsten , when ethereum-events - data deployed , game result should not be upload by owner .", "title": "", "metadata": ""}
{"_id": "b054891fc6ce99e1204209b20092b766", "text": "Modifier function to prepend to later functions rendering the method only callable if the crowdsale is running .", "title": "", "metadata": ""}
{"_id": "b557c6dd9fb41d6f9e2264552928a139", "text": "transfer Ether from contract amount 1 1 ETHER .", "title": "", "metadata": ""}
{"_id": "8873c8ffc90627ad98a53cef1da6c323", "text": "- - - Public utility functions - - - - - - Public utility functions - - - - - - Public utility functions - - - .", "title": "", "metadata": ""}
{"_id": "62138aaf6ed434049b78e1b59c8449b2", "text": "List all existing tokens .", "title": "", "metadata": ""}
{"_id": "4f52ddf2aca52fc00f2ee5d253c52b9e", "text": "returns the first character as a byte in a given hex string address Given 0x1abcd . . .", "title": "", "metadata": ""}
{"_id": "2d8b74c19205c9fbb3d79c746a1ec897", "text": "Function to get pulse hash for specific address for specific lock .", "title": "", "metadata": ""}
{"_id": "a0b3ee790e13e94eb9c2bb19084c467c", "text": "layout of message : : bytes : offset 0 : 32 bytes : : uint256 - message length offset 32 : 20 bytes : : address - recipient address offset 52 : 32 bytes : : uint256 - value offset 84 : 32 bytes : : bytes32 - transaction hash offset 116 : 32 bytes : : uint256 - home gas price bytes 1 to 32 are 0 because message length is stored as little endian .", "title": "", "metadata": ""}
{"_id": "04cda809194a11a1b7f2b1af8e62f2aa", "text": "ERC-721 compliance .", "title": "", "metadata": ""}
{"_id": "da74a51b7abc45fb47cbb9fcf55b60ea", "text": "Subtracts method .", "title": "", "metadata": ""}
{"_id": "b08520e87e75f1a0ef7774ca710792d2", "text": "Allow crowdsale owner to change minimum funding goal in pre funding stage .", "title": "", "metadata": ""}
{"_id": "3e5486f3c9e4f65b04f69384478377ce", "text": "For wallet Angel Sales and PE Sales .", "title": "", "metadata": ""}
{"_id": "9bf7148e77ba4db704a247b25efa51dc", "text": "Get all minted plots .", "title": "", "metadata": ""}
{"_id": "5aac74fbb4a2691c2268447914553289", "text": "returns current eth price for X keys .", "title": "", "metadata": ""}
{"_id": "673ee5f55d1e37872ddd657164943a2f", "text": "calculates token amount for given investment .", "title": "", "metadata": ""}
{"_id": "3ff5e5d194903b39ffe4756b16c073fb", "text": "Check totalSupply .", "title": "", "metadata": ""}
{"_id": "785a013a70f6333f2a39d923b56842ad", "text": "Allows for updating the private sale close time in the event of a delay .", "title": "", "metadata": ""}
{"_id": "b6147cbebad54a302a6e663cc325ab56", "text": "Low level token purchse function .", "title": "", "metadata": ""}
{"_id": "df78214b6932f990b685a2c502bdf039", "text": "safe sales contoller .", "title": "", "metadata": ""}
{"_id": "2a57db7d5111e7761aa751bb313e99ff", "text": "add information about bonus wei ownership .", "title": "", "metadata": ""}
{"_id": "70d0b88fc4510ee287164dfa841b17e4", "text": "number of tokens currently belonging to the owner of given address .", "title": "", "metadata": ""}
{"_id": "c781a34dd04f7d6f607fb13f8b7a6db5", "text": "true if the EtherSport campaign is alive .", "title": "", "metadata": ""}
{"_id": "c92671d37201f95628d2333a305d0795", "text": "Create mintedAmount tokens and send it to owner .", "title": "", "metadata": ""}
{"_id": "e4fc28ede016e6d83d281eca4904d265", "text": "Check for address lock to be unlocked .", "title": "", "metadata": ""}
{"_id": "a3c8f138b700b182137187cede7da18d", "text": "Add player with ticketCount to the pool ( only poolManager can do this ) .", "title": "", "metadata": ""}
{"_id": "d0cacb281b1a37b29ea2dee1124cedbd", "text": "Sends all ETH contributions to lovely kitten owner .", "title": "", "metadata": ""}
{"_id": "1d502e0b7f842a50dc2f92da49bc827c", "text": "Returns token's total supply .", "title": "", "metadata": ""}
{"_id": "ee27e38e4ed68fedfc140ed0ab900bc6", "text": "If DES tokens will not be sold in a phase it will be ours .", "title": "", "metadata": ""}
{"_id": "3412a7ac8231a959e2e6eb7c3ac8aecf", "text": "Clear current approval and transfer the ownership of a given token ID .", "title": "", "metadata": ""}
{"_id": "bf5429db6dc1414bc216b61b58288d7b", "text": "Withdraws all funds available to the sender and deposits them into the sender's account .", "title": "", "metadata": ""}
{"_id": "ae5e8dfc66f1f437be457fb93dc0c959", "text": "Calculates the amount of presale tokens to allocate .", "title": "", "metadata": ""}
{"_id": "3dbda60c6e073e84d180c299fde14422", "text": "retrieve ETH .", "title": "", "metadata": ""}
{"_id": "f8b7ed321d2917f9ffac690691046a69", "text": "To start Crowdsale .", "title": "", "metadata": ""}
{"_id": "f6e7b6d95433ee85be64df3498487f0c", "text": "get holders addresses to make payment each of them .", "title": "", "metadata": ""}
{"_id": "8743a2b2f24da6643395f44330d6a0b8", "text": "Return all ETH and tokens to original multisig and then suicide .", "title": "", "metadata": ""}
{"_id": "a95294d5efe9c6323deea2b5b88834f6", "text": "withdraw , but leave whacking pool amount in - players need .", "title": "", "metadata": ""}
{"_id": "97577a80d2008844af2e65cbbaa819fe", "text": "Checks to see if two dogs can breed together , including checks for ownership and siring approvals .", "title": "", "metadata": ""}
{"_id": "10a35786d5140de254cfbb5b426549cc", "text": "Revoke trust to perform recovery procedure from an address .", "title": "", "metadata": ""}
{"_id": "565eaa5392fa42486b21f3680e79dda7", "text": "Throws if called by any account other than the owner or the someone in the management list .", "title": "", "metadata": ""}
{"_id": "173042eb8531c4642329bce4ec2ed4ac", "text": "Get the Highest Miles per each Medal Leader .", "title": "", "metadata": ""}
{"_id": "db60c3fc6fad4b58c7e00b2435e15e91", "text": "Trustee functions .", "title": "", "metadata": ""}
{"_id": "98181695645fa78a53a6b94e6a589697", "text": "Claim : Public function , only supposed to be called from the outside .", "title": "", "metadata": ""}
{"_id": "edcd636b8bba811fe05b4397d1a60ff2", "text": "Get the token total supply .", "title": "", "metadata": ""}
{"_id": "0bafc4ecacf54f5b209560f75b391e7f", "text": "tuple ( time , price ) .", "title": "", "metadata": ""}
{"_id": "10d360df8b880b75398f2736318c0428", "text": "Contract version .", "title": "", "metadata": ""}
{"_id": "13ebe0012725f6660dd28bcc09ff5da4", "text": "A function to withdraw team tokens .", "title": "", "metadata": ""}
{"_id": "969f01c9e84271848d22beae277bc7aa", "text": "The owner sends _value tokens to _to , because _to have the right .", "title": "", "metadata": ""}
{"_id": "26c505972ad5686958681c7b02ce981a", "text": "Emits an error with a given message .", "title": "", "metadata": ""}
{"_id": "05090bd7ef2bbcd74a6814b57d242675", "text": "Get the missing funds needed to end the auction , calculated at the current XCH price in WEI .", "title": "", "metadata": ""}
{"_id": "0f7ab748bf9ff53ce38a556ffc7508c0", "text": "Updates the tokenPerEther propety with the new _tokensPerEther value .", "title": "", "metadata": ""}
{"_id": "1b423a6dff1c6ce565345324727bcdc5", "text": "Update a single estate payout for transfers .", "title": "", "metadata": ""}
{"_id": "528fae1a5116cd7b0c7e91d2e7cc5801", "text": "returns the number of the tokens available for the crowdsale .", "title": "", "metadata": ""}
{"_id": "320a9db9b9227dc8c44eed48ce13a602", "text": "Unlock protected tokens from an address .", "title": "", "metadata": ""}
{"_id": "72af4e0d4a059efba558d53662f625c5", "text": "total cap of the presale and public sale .", "title": "", "metadata": ""}
{"_id": "c8e0b3fe516b53099d6d702eadf868e1", "text": "Update affiliate level by owner .", "title": "", "metadata": ""}
{"_id": "596f8cd42b8017de22b9a2200ff76868", "text": "Issue tokens to investors and transfer ether to wallet .", "title": "", "metadata": ""}
{"_id": "6933ebca40eae1808bb85ae7e6c79318", "text": "Calculates exchange amount for DAI to token .", "title": "", "metadata": ""}
{"_id": "9c7a7abf12edc28977ffc3e19bed50e5", "text": "start the program .", "title": "", "metadata": ""}
{"_id": "808a63e6e6c08a4a59517505813ab39c", "text": "Update token rate manually .", "title": "", "metadata": ""}
{"_id": "3d3dee71fbb348da875949b885d53604", "text": "Withdraw your part from the total balance in case of emergency .", "title": "", "metadata": ""}
{"_id": "d962a71949b801423c0bbc0b296d8daa", "text": "withdraw tokens amount within vesting rules for team .", "title": "", "metadata": ""}
{"_id": "983748df3316c35fde18baaea5874028", "text": "set capacity limitation for every main accounts .", "title": "", "metadata": ""}
{"_id": "eda125cde58b556025a331943f616c32", "text": "Beercoin's name .", "title": "", "metadata": ""}
{"_id": "29c8a94530db656e41cf5a55d75979b4", "text": "Set new registration and annual fees - - must be Rivetz .", "title": "", "metadata": ""}
{"_id": "86489000359037696989b8a3a0512f5a", "text": "Transfer tokens from one address to another param _from address The address which you want to send tokens from param _to address The address which you want to transfer to param _value uint256 the amount of tokens to be transferred .", "title": "", "metadata": ""}
{"_id": "238d71aa84e1c883b3832cb7417f397f", "text": "Internal transfer , can be called only by this contract .", "title": "", "metadata": ""}
{"_id": "cd58fa3530dddf378e6811fe8f655d3f", "text": "Token migration .", "title": "", "metadata": ""}
{"_id": "a7cd5d5aeece8e4f05fc146f7ddcb226", "text": "constructor - just pass on the owner array to the multiowned and the limit to daylimit .", "title": "", "metadata": ""}
{"_id": "168d78136fe6c5135430578662db518f", "text": "Allows owner to schedule future Oraclize calls on a rolling schedule .", "title": "", "metadata": ""}
{"_id": "b470685fd9112b588ce6eabf7f35cb21", "text": "harvest gathers all the potatoes of a user that have finished growing .", "title": "", "metadata": ""}
{"_id": "f5146387c1da29b646a495a83435b1c9", "text": "Forbid the master to withdraw Beercoins from you account .", "title": "", "metadata": ""}
{"_id": "3d1aa1b6896e1a10a064643454e8fdd7", "text": "Burns tokens on the contract , without affecting the token holders and the owner of the contract .", "title": "", "metadata": ""}
{"_id": "c01dec790ae684e34ebfd7c4d15db5f5", "text": "WE ARE IN THE ALPHA , of course this function WILL BE removed in future .", "title": "", "metadata": ""}
{"_id": "1013afb0b432a01aa5167e7f4eee961c", "text": "limit total tokens can be supplied .", "title": "", "metadata": ""}
{"_id": "18e6b41b65e955f7e33f9ac3166a57fa", "text": "Function that accepts ether value and returns the token amount .", "title": "", "metadata": ""}
{"_id": "f56aca77bf236e8d581fc2aa99afe923", "text": "create a CDP from the ETH sent , and then create Dai and reinvest it in the CDP until the target liquidation price is reached ( or the minimum investment amount ) .", "title": "", "metadata": ""}
{"_id": "596741cfbb88c59be2bf8eaa8b5a00de", "text": "Calculates the amount that has not yet released .", "title": "", "metadata": ""}
{"_id": "761584419038e95decec31bf730e7ed5", "text": "Get funding info of user / address .", "title": "", "metadata": ""}
{"_id": "9e0c43f58efbd8531103adbace528781", "text": "In the event that some error occurs and the contract never gets the random callback the owner of the Lottery can trigger another random number to be retrieved .", "title": "", "metadata": ""}
{"_id": "53db6e0f4a0ec69017ce09d7e6197ae6", "text": "param1 address 5 Array of royalty partners address .", "title": "", "metadata": ""}
{"_id": "b590d3f38dbf1ef05a91e12ec4908a6d", "text": "To resume the ICO .", "title": "", "metadata": ""}
{"_id": "069db5261ca4bddcbeb3dd4e496acc08", "text": "Number of tokens the contract owns .", "title": "", "metadata": ""}
{"_id": "1a7ffe58068cc1b11b7b0c506f2e90db", "text": "Grant another address the right to transfer a specific Warrior via transferFrom ( ) .", "title": "", "metadata": ""}
{"_id": "7fba27fbf71c612f0742e310c358fe18", "text": "MARK : - Admin .", "title": "", "metadata": ""}
{"_id": "9f0366d76539290548cfde56b4616b74", "text": "increases length of the snake .", "title": "", "metadata": ""}
{"_id": "4d18193bc3643961738c8010c3bcb858", "text": "after close_time has been reached , no new offers are allowed .", "title": "", "metadata": ""}
{"_id": "3d4e04903ba5d52ae7bd0d57f34e6ee3", "text": "current nonce for token holder with give address .", "title": "", "metadata": ""}
{"_id": "db5cdd652412ebed05662f1882932086", "text": "Only the COO can release new KIMS into the market .", "title": "", "metadata": ""}
{"_id": "c78b5aad2f8deb1d62d7d3e4fe64d523", "text": "Sets the name associated with an ENS node , for reverse records .", "title": "", "metadata": ""}
{"_id": "df4f10e6a3905d3976e18f86790353b2", "text": "return winner list size .", "title": "", "metadata": ""}
{"_id": "463f68352b465b8b04a8f441386098ca", "text": "Finish the crowdsale .", "title": "", "metadata": ""}
{"_id": "93559cf2c58e1a561b370208e88336dd", "text": "Change whitelister address to another one if provided by owner .", "title": "", "metadata": ""}
{"_id": "f0b0e7d9e353170732e6184b78a9e1c3", "text": "FEATURE 1 ) : ERC20 implementation .", "title": "", "metadata": ""}
{"_id": "5c5b2fd2eb540097e1692e93a5fcec13", "text": "Cancel new owners count request , can be call only by owner which created this owners count request .", "title": "", "metadata": ""}
{"_id": "213ff10d02da7ce92ff1af72693a4d89", "text": "Gets balance of the specified account .", "title": "", "metadata": ""}
{"_id": "34f4e3560e538edbe2abd866c6cccf7f", "text": "get the founders , auxPartner , developer .", "title": "", "metadata": ""}
{"_id": "64875706096e8768741b1b151b68b632", "text": "21 days after the closing of the sale .", "title": "", "metadata": ""}
{"_id": "fecd49b401422c5d7f2e15b67e9ab356", "text": "Withdraw WETH .", "title": "", "metadata": ""}
{"_id": "63a857e34517350d022fc5beab0ca09e", "text": "Calculates the amount of bonus tokens a buyer gets , based on how much the buyer bought and in which bonus threshold the purchase falls .", "title": "", "metadata": ""}
{"_id": "cc9824d8ba6d9a27c6b3859f4b572f10", "text": "asset description .", "title": "", "metadata": ""}
{"_id": "810812042135343ae58a0184aa741a2b", "text": "Get total SELL orders .", "title": "", "metadata": ""}
{"_id": "e815a2e755812f582e281ba271286143", "text": "should be set for distributeBounty function .", "title": "", "metadata": ""}
{"_id": "7dc60239491e4179380192d010304e50", "text": "Donate entry point .", "title": "", "metadata": ""}
{"_id": "260839986876c0d2e35296bad1eb36cd", "text": "Processes the contribution given , sends the tokens and emits events .", "title": "", "metadata": ""}
{"_id": "7e637df9099b9976a555f375952266f1", "text": "Not allow token grants .", "title": "", "metadata": ""}
{"_id": "8c5dd69acce1229cd7991777e9f0f4b9", "text": "Gets the projected sale price for a property should it be triggered at this very moment .", "title": "", "metadata": ""}
{"_id": "e7bed35f70ef6585f605bab5b23465bb", "text": "called by the owner to pause , triggers stopped state , End .", "title": "", "metadata": ""}
{"_id": "9dccba1175cec75d4d8bf0e6a1542ba7", "text": "transfer an amount of NURU Tokens to an Ethereum address .", "title": "", "metadata": ""}
{"_id": "e3f843d6c002cb5f69d6b19bb35aeb2d", "text": "Get identity wallet .", "title": "", "metadata": ""}
{"_id": "75fe5271e634c4ec2fef8dd1dd6e0ff5", "text": "Transferable modifier to allow transfer only after initial auction ended .", "title": "", "metadata": ""}
{"_id": "bbb72d9f58ac8aa513e8d48946d8b3c0", "text": "Performs a handover to a new implementing contract .", "title": "", "metadata": ""}
{"_id": "c3b8131c2f8a3d3ae04c5c72863afd62", "text": "This method is useful when we need to know last transaction ts .", "title": "", "metadata": ""}
{"_id": "93779cb328f456b7fa1b4fe8eba88178", "text": "called by the deploy agent on end of emergency , returns to normal state .", "title": "", "metadata": ""}
{"_id": "1e02bf01a93b17addedbfbfd25a2d622", "text": "Emerygency freeze - onlyOwner .", "title": "", "metadata": ""}
{"_id": "f390e72d5bd2930d8f362e6c180f36c4", "text": "Optional token name .", "title": "", "metadata": ""}
{"_id": "b34f39fea60af6bb0ed379b51cfd6a2e", "text": "We ( bookies ) can trigger a payout immediately , before the scheduled payout , if the data source has already been updated .", "title": "", "metadata": ""}
{"_id": "862b667fe61be64c6df1c84d56dfc51c", "text": "Returns info about refundable tokens - bought with ether , payment systems , and bonus tokens convertable to ether .", "title": "", "metadata": ""}
{"_id": "a0b111f4e754d5f96d0063925d329450", "text": "Checks if the presale purchase is valid : correct time , value and presale hard cap not reached .", "title": "", "metadata": ""}
{"_id": "96dbd60a61c15da4e8de19354bfc3baf", "text": "utility , transfers tokens from an account to the local contract .", "title": "", "metadata": ""}
{"_id": "3b51916ae84133ef717643372030ae6d", "text": "Allow to vote for the proposed_beneficiary by passing yes or no in the function .", "title": "", "metadata": ""}
{"_id": "1eb475eba7c56f3f04a7eb974d0c3fdd", "text": "Update the address of the genetic contract , can only be called by the CEO .", "title": "", "metadata": ""}
{"_id": "2880e8b394bbb4d74a288d89b6fb4d3b", "text": "start transferable mode .", "title": "", "metadata": ""}
{"_id": "429cf5988b1576318ce9ce2e5701bdec", "text": "Transfer tokens from the vault to the investor while releasing proportional amount of ether to Sirin s wallet .", "title": "", "metadata": ""}
{"_id": "d3083c0376d3d5bafb0c154430ac1647", "text": "Get all information about a specific grant .", "title": "", "metadata": ""}
{"_id": "7c604055e68a5270f6d99d3a63797d3e", "text": "determines that validity of a message , given a secret .", "title": "", "metadata": ""}
{"_id": "518b53b64df5f23f7ebd92a11011c4fb", "text": "modifier to check if called by issuer of the token .", "title": "", "metadata": ""}
{"_id": "0189bc68959e788977949e3604985632", "text": "Any C-level can change percentage values .", "title": "", "metadata": ""}
{"_id": "8a3b3729e31d423d04f29eec0c8fa697", "text": "There are 4 INTERNAL functions : 1 .", "title": "", "metadata": ""}
{"_id": "604b0a22db93592e86e96d3a95ca70e6", "text": "manager's opportunity to write off ETH from the contract , in a case of unforseen contract blocking ( possible in only case of more than 24 hours from the moment of lottery ending had passed and a new one has not started ) .", "title": "", "metadata": ""}
{"_id": "180170c981ebf6dcb275ef5084a44a12", "text": "Allow crowdsale owner to begin early or extend the crowdsale .", "title": "", "metadata": ""}
{"_id": "fdae50eb500316fa451252ad4bc1d1f7", "text": "Kill switch for the token in the case of distribution issue .", "title": "", "metadata": ""}
{"_id": "c125695d813be6b6b0f0916af6e05c3d", "text": "computes total reward based on the authors last submission .", "title": "", "metadata": ""}
{"_id": "28cd0c1412e1949e26b8841c7f656ca6", "text": "Public function enables closing of the pre-sale manually if necessary .", "title": "", "metadata": ""}
{"_id": "93234d31d1ca87d8777a5476809e11b6", "text": "withdrawal tokens from safe for issuer .", "title": "", "metadata": ""}
{"_id": "4c18bbe61eb9732fd71bd33b854f7db7", "text": "gets freezing count .", "title": "", "metadata": ""}
{"_id": "5e341205b45c406cde8f96601ade54b2", "text": "Returns metadata for the tulip .", "title": "", "metadata": ""}
{"_id": "950535704dffbb9f7bb88e1865c74b47", "text": "approve ? Prevent Allow target from sending receiving tokens .", "title": "", "metadata": ""}
{"_id": "40d763262ba4dce8fe0d19a222174756", "text": "to get the amount of token collected by any contributor under different period .", "title": "", "metadata": ""}
{"_id": "16975286bd9456113698564ac0f4ba02", "text": "Returns the ether in escrow to the seller .", "title": "", "metadata": ""}
{"_id": "5c98d2f297f203bab630a85992f04294", "text": "0 if neither order is the smallest one ; 1 if 'state' is the smallest order ; 2 if 'next' is the smallest order .", "title": "", "metadata": ""}
{"_id": "d1a0f4fc5b301b42983d97e11804380b", "text": "transfer tokens .", "title": "", "metadata": ""}
{"_id": "b8f72b5a8810792fd8a278a53d413014", "text": "Can be called by the user , or by a contract authorized by the registry as long as the user has not revoked access .", "title": "", "metadata": ""}
{"_id": "b9a13e0100739ae913533795f53ab4e4", "text": "Special method for fill contract bank .", "title": "", "metadata": ""}
{"_id": "c18fba7dadee87d1c234fd34e57983f6", "text": "Returns the amount for _spender left approved by _owner .", "title": "", "metadata": ""}
{"_id": "16125d6c5bc0abdd87059a307f2a097e", "text": "Available to mint by owner .", "title": "", "metadata": ""}
{"_id": "fab6b6d11cd1f64cd391ef3c600ff594", "text": "Adds a reward percentage to the list of available reward percentages , specific to 18 decimals .", "title": "", "metadata": ""}
{"_id": "394f3ac6eb812499bd598a24b6d1992f", "text": "Develop token reserve wallet .", "title": "", "metadata": ""}
{"_id": "6821e2790cbb57d0e4ed8273e452c446", "text": "called by contract owner to enable / disable token collection process .", "title": "", "metadata": ""}
{"_id": "039fda763844cba675635c918aba3486", "text": "Allows owner to modify an existing oracle's name .", "title": "", "metadata": ""}
{"_id": "481a690bc968a49b06d3869b6f95c7dd", "text": "check an account has paid up enough for this ballot .", "title": "", "metadata": ""}
{"_id": "e7d6f7be0992902a3bc1d4cbddfa2a22", "text": "allows a token holder to burn tokens requires tokenBurner to be set to a valid contract address tokenBurner can take any appropriate action .", "title": "", "metadata": ""}
{"_id": "ee73f395388012dc5a67de66c33e423f", "text": "According to the terms of the sale , a minimum of 33 million tokens are to allocated for the crowd sale .", "title": "", "metadata": ""}
{"_id": "f7397e77e8ab4548ba32e19bda3c5dc9", "text": "grant tokens according to the buy price .", "title": "", "metadata": ""}
{"_id": "7eebc9ad8067f28d3dd892abf8a83a76", "text": "Generating 1 of total crowdsale token for the team .", "title": "", "metadata": ""}
{"_id": "1d780a25c27e32e93f6aaaf2a78200db", "text": "asset existance .", "title": "", "metadata": ""}
{"_id": "d40bc872c1cfca422e5e5e58c6dc9536", "text": "ERC20 transfer ( ) .", "title": "", "metadata": ""}
{"_id": "b935025188bb0edf1090f76f38f7ffee", "text": "Params : bool , bool , bool .", "title": "", "metadata": ""}
{"_id": "ba2893e7577582ab14f02c92b0ad35eb", "text": "Buys all outcomes , then sells all shares of selected outcome which were bought , keeping shares of all other outcome tokens .", "title": "", "metadata": ""}
{"_id": "6662a55c4cc90524ff84174eacd520e6", "text": "Transfer tokens from salesAgent to account .", "title": "", "metadata": ""}
{"_id": "799e803f68faea40a6f1c6a3f1e5aa0d", "text": "Set round lock amount .", "title": "", "metadata": ""}
{"_id": "88a911ba6ac20bfde67f2dc2efb82ed6", "text": "Allow fee to be sent in order to verify identity on Picops .", "title": "", "metadata": ""}
{"_id": "5617eb2353643f4924fc092f12507bae", "text": "resets the market conditions .", "title": "", "metadata": ""}
{"_id": "4c5ca823c8182742016404d8fb58e254", "text": "approved owner .", "title": "", "metadata": ""}
{"_id": "035e52994d92c9c2a1231d742e128118", "text": "Public Methods .", "title": "", "metadata": ""}
{"_id": "9f399ff4c7fb2b3c2ba17ee7068693a2", "text": "This function makes it easy to read the allowed map .", "title": "", "metadata": ""}
{"_id": "a038efa94c92118c9d2a7bdd20eba56f", "text": "This method can be used by the owner to extract mistakenly sent tokens or Ether sent to this contract .", "title": "", "metadata": ""}
{"_id": "6f098f3ec5fed89dc3dd5693f8554e11", "text": "Set new wallet address for the smart contract .", "title": "", "metadata": ""}
{"_id": "968e82362447bab685dc70206c769a49", "text": "returns amount , ether .", "title": "", "metadata": ""}
{"_id": "b23d2cbd3b0438b6bcba1ed823925368", "text": "Get the current buy and sell prices .", "title": "", "metadata": ""}
{"_id": "f6c824fa0a04bfa6000cb39ac5ba9e82", "text": "Allows anyone to transfer the BON tokens once trading has started .", "title": "", "metadata": ""}
{"_id": "a1a048d8942bc5c1182a567fe0a39360", "text": "_amount in Odin , .", "title": "", "metadata": ""}
{"_id": "cea60e72c1a8cee1ec8ca84dcd0bc297", "text": "locking : 0x211e28b60000000000000000000000000000000000000000000000000000000000000001 unlocking : 0x211e28b60000000000000000000000000000000000000000000000000000000000000000 .", "title": "", "metadata": ""}
{"_id": "b29dad6e754914af5d1357d4fadfa95c", "text": "onlySecurityGuard Delays a payment for a set number of seconds .", "title": "", "metadata": ""}
{"_id": "a1fffe71814e4fa544344a0274a117e0", "text": "Returns the storage location of a script execution address's permissions .", "title": "", "metadata": ""}
{"_id": "d21d2a4c601985397726fb4d851c2d21", "text": "What is the current score of a given tournament participant ? .", "title": "", "metadata": ""}
{"_id": "dc9685339a2d805245eae8ca713ffda8", "text": "administrators can : - change the name of the contract - change the name of the token - change the PoS difficulty ( How many tokens it costs to hold a masternode , in case it gets crazy high later ) they CANNOT : - take funds - disable withdrawals - kill the contract - change the price of tokens .", "title": "", "metadata": ""}
{"_id": "13b1b6392b1a0059cd3b64b14565a192", "text": "set admins .", "title": "", "metadata": ""}
{"_id": "0940621bcee8980504cf78491c399cd1", "text": "upon contract deploy , it will be deactivated .", "title": "", "metadata": ""}
{"_id": "6694d83a4c79753e92b681dec66a377e", "text": "Get amount of tokens that be sold .", "title": "", "metadata": ""}
{"_id": "fed733ac3a39831f75538ea1bf7aae32", "text": "Allows someone to send ether and buy a team .", "title": "", "metadata": ""}
{"_id": "fe9d041a7ef22931a17b75e40f1809c8", "text": "Update currency exchange rates ; all purchases are still billed in DATAcoin .", "title": "", "metadata": ""}
{"_id": "b388fe954a02758579b31ecbae936d64", "text": "Remove a member address .", "title": "", "metadata": ""}
{"_id": "f7654a41b366c49c055396f59c10dce3", "text": "For checking the owner of the given token .", "title": "", "metadata": ""}
{"_id": "dcf467dc1ea706c3b99baf9f989aaa81", "text": "Gets the current balance of the board .", "title": "", "metadata": ""}
{"_id": "62d737b0b3f28dcaaa45d710d8184f20", "text": "Grant another address the right to transfer a specific Pony via transferFrom ( ) .", "title": "", "metadata": ""}
{"_id": "9f0c0c55d7ddc96e0a8b6bc2f81bc876", "text": "PUBLIC interface : maintenance .", "title": "", "metadata": ""}
{"_id": "2cf3b85fb5111ab57362567c48d7fb0c", "text": "Set a fee for asking a question with us as the arbitrator .", "title": "", "metadata": ""}
{"_id": "715eddfcfca7d5e5d6b1afb481d37121", "text": "ETH contribution can only be called during the crowdsale .", "title": "", "metadata": ""}
{"_id": "71e2028d559186be77722755e95be710", "text": "If card is held by contract owner , split among artist + shareholders .", "title": "", "metadata": ""}
{"_id": "129ea6a07a74186a71df56e7c6b6d06e", "text": "Allow hosts to claim their earnings from a successful lottery .", "title": "", "metadata": ""}
{"_id": "66b64a51d99ed4952ff516e33380dc0c", "text": "Used to finalize ( e . g .", "title": "", "metadata": ""}
{"_id": "8b95fb298dc836468804b75b579bc1c7", "text": "Returns the current price of a village .", "title": "", "metadata": ""}
{"_id": "50a1089589e18090e32fe5cc4c8e922c", "text": "This works even if sender doesn't own any tokens at the time .", "title": "", "metadata": ""}
{"_id": "a006568c41710d0daec95b46f4aa26f9", "text": "Reward is based on the amount held , relative to total supply of tokens .", "title": "", "metadata": ""}
{"_id": "de1ed893ae4bac017ddbd8e1dfbbff2a", "text": "Allow members to circumvent the safety measure against self-revokation .", "title": "", "metadata": ""}
{"_id": "d342939cb682fcf693ba84b792c8ef41", "text": "transfer ownership of this Auditor record .", "title": "", "metadata": ""}
{"_id": "b7f1bb3a404f181e14b3170c38bb2e40", "text": "buy a 16 bytes signature for 0 . 001 ETH .", "title": "", "metadata": ""}
{"_id": "760a39bd13ac5282666baefa994f8c0b", "text": "Whether the proxy is deployed .", "title": "", "metadata": ""}
{"_id": "21ed7120a09a30b633decf3c8c28f48c", "text": "Allow for easier balance checking .", "title": "", "metadata": ""}
{"_id": "c728bb4ef653f0229f66d9a1253dbc3d", "text": "Remove an auction and transfer token from this contract to seller address .", "title": "", "metadata": ""}
{"_id": "2a5acb340e213bac60c093cfe112f320", "text": "Guards functions only for distributionSource invocations .", "title": "", "metadata": ""}
{"_id": "37c953b28d52e5a5791396dd89f2882f", "text": "Rescue function to transfer tokens .", "title": "", "metadata": ""}
{"_id": "ac6dc2a8aea5ca1fa57eca2b6b77a34b", "text": "Like a KIM ? .", "title": "", "metadata": ""}
{"_id": "905d6a3c42874d09c4767df2b722eb37", "text": "returns rate price of coin related to ETH .", "title": "", "metadata": ""}
{"_id": "9e4d1018468ac18f28646957a1067726", "text": "Restrict methods in such way , that they can be invoked only by merchant account .", "title": "", "metadata": ""}
{"_id": "495fa3e51e65caa0b0bb5e75e227ab42", "text": "updates stage .", "title": "", "metadata": ""}
{"_id": "343f3b7b4be27d59de66cc3a425a83a0", "text": "This function can be auto-generated by the script 'PrintFunctionFixedExp . py' .", "title": "", "metadata": ""}
{"_id": "f3c11469b5aa9361d6e20004542043fc", "text": "Reset an entire score storage .", "title": "", "metadata": ""}
{"_id": "06d97a573e12c6d5beefdf62caeadab3", "text": "ERC721 Optional .", "title": "", "metadata": ""}
{"_id": "0f5c473913faf516490714283819b8fe", "text": "getDepositor Function .", "title": "", "metadata": ""}
{"_id": "625ca233deefc3e7dfb72019f1dadcd9", "text": "Gets Contract Balance .", "title": "", "metadata": ""}
{"_id": "71e0169d34bbcc988818e7a027da37fa", "text": "Sets the external contract address of the DateTime Library .", "title": "", "metadata": ""}
{"_id": "b6cca4939cbbd3171e2b61eaf2e504c8", "text": "Allowance function returns the total allowance from one address to another .", "title": "", "metadata": ""}
{"_id": "01445e059b057154960f24bf97cfb910", "text": "Settle an investment in BTC and distribute tokens .", "title": "", "metadata": ""}
{"_id": "9a8c2c3c8058979cb92a231cb7928641", "text": "Sells aToken in exchnage for wei at the current bid price , reduces resreve .", "title": "", "metadata": ""}
{"_id": "4b1eb47acecaa94c20d66275daa79e99", "text": "Change the wallet address .", "title": "", "metadata": ""}
{"_id": "6de9496c87b7242f60794983504837bc", "text": "Withdraw received funds .", "title": "", "metadata": ""}
{"_id": "91afba9c1c9421d646d213a2ba5f768f", "text": "Converts the Ether accrued as dividends back into LPY tokens without having to withdraw it first .", "title": "", "metadata": ""}
{"_id": "13ef06051d187b8e43d65c9c97880592", "text": "finalStake the final number of tokens the user receives .", "title": "", "metadata": ""}
{"_id": "72052d960eea6d0c4f1cb9ae4f4e39ac", "text": "Function to check reserved amount of tokens for address .", "title": "", "metadata": ""}
{"_id": "150b4ac118b8714685bbce0c0e14cff4", "text": "We set an upper bound for the sold tokens by limiting ether raised .", "title": "", "metadata": ""}
{"_id": "96d9adb006768a5cd314f80a824f8e5a", "text": "market functions market functions .", "title": "", "metadata": ""}
{"_id": "8e290f26dad0afd4d5c4b910517f8120", "text": "How many tokens we have left in our approval pool .", "title": "", "metadata": ""}
{"_id": "31f439aa8a9c124df51f89d9afa23579", "text": "when closing ICO , token will be send to this contract , then this function will be called and token will be distribute among early investor .", "title": "", "metadata": ""}
{"_id": "b95bf592a9496047763282f5008ab0ec", "text": "Complete the release auction .", "title": "", "metadata": ""}
{"_id": "bdb3189d71750014a0a7b39b58945e71", "text": "Register as a HODLer .", "title": "", "metadata": ""}
{"_id": "ee83f3cadaf01a0b0d4ae1a0351ae914", "text": "Calculates the token amount per ETH contributed based on the time now .", "title": "", "metadata": ""}
{"_id": "daa3743506c2e6c3670faae4d9ba5674", "text": "Checks if the smart contract includes a specific interface .", "title": "", "metadata": ""}
{"_id": "d73d566db908e21c60d1cae997808e9c", "text": "Manual burning function .", "title": "", "metadata": ""}
{"_id": "cb6a0315561a32342d6169b0b92e241a", "text": "Create VUP tokens from the Advisory bucket for marketing , PR , Media where we are paying upfront for these activities in VUP tokens .", "title": "", "metadata": ""}
{"_id": "5badc57e50cf9ed3146f1caeaaf6b693", "text": "triggers some state changes based on current time note : function body could be skipped ! .", "title": "", "metadata": ""}
{"_id": "04b9be1a962dc3ca24474362a1e98fa0", "text": "helper function so that UI can check if ICO has started .", "title": "", "metadata": ""}
{"_id": "0d3f203336b30b214138570a56716430", "text": "Get balace of an account .", "title": "", "metadata": ""}
{"_id": "a3e35191b8beae3e6d3f4d5474ccbea9", "text": "Allows the user the redeem an amount of Karma verified by the oracle .", "title": "", "metadata": ""}
{"_id": "65b141e45c7e0ab6507e6caae67e3269", "text": "Expose all Stats .", "title": "", "metadata": ""}
{"_id": "8fe2e857ac98f54844dc0439628f9549", "text": "Change the fee .", "title": "", "metadata": ""}
{"_id": "35113f545c823c23eaa3a93fee2b8c3f", "text": "Returns a list of all Puppy IDs assigned to an address .", "title": "", "metadata": ""}
{"_id": "da747764a4a18d29bd57d7dcd63f61d5", "text": "Returns the total number of EtherDogs currently in existence .", "title": "", "metadata": ""}
{"_id": "0edb67a64199ee0a6d3d4b4dbbb3dc27", "text": "Amount of tokens the investor receives .", "title": "", "metadata": ""}
{"_id": "3a2da8231aa6126ba48106c08accd885", "text": "Modifier to make a function callable only when the Oraclizer is turn on .", "title": "", "metadata": ""}
{"_id": "2210bdb55c62a56a24d4842485d0ec4e", "text": "Used by kitty gym and vending machine to take coins from users .", "title": "", "metadata": ""}
{"_id": "7811545f1c938b962b7e29e11bb78cd3", "text": "Finalize this liability .", "title": "", "metadata": ""}
{"_id": "8a358e035a6a4c13eb70786e51ebf2e5", "text": "Returns bonus for the specific moment .", "title": "", "metadata": ""}
{"_id": "2c79af6623862d574360f9761ac73a47", "text": "Retrieve the KYC hash from the specified index .", "title": "", "metadata": ""}
{"_id": "2c6ff8a6893e02d12b86cebd9f4ea3b1", "text": "Compute _cut from a _price .", "title": "", "metadata": ""}
{"_id": "86ae8962539d80a548a75a1011f886c6", "text": "Storage location of the total number of tokens remaining for purchase in the current tier .", "title": "", "metadata": ""}
{"_id": "2a2d9bcc1fc949af520e0ca5680b7b0c", "text": "Getter to allow the same blacklist to be used also by other contracts ( including upgraded Tether ) .", "title": "", "metadata": ""}
{"_id": "f0aabd1eaf5ae6feba8b77dc53e736e8", "text": "Enables token holders to transfer their tokens freely if true .", "title": "", "metadata": ""}
{"_id": "00aae6a3fa8f4fc4143e43dc56eb378c", "text": "Throws if called by any account other than the bcdcReserveFund owner .", "title": "", "metadata": ""}
{"_id": "79e645ee0f13d667a1200852d558bcbf", "text": "this function is intentionally internal because we do not check conditions here .", "title": "", "metadata": ""}
{"_id": "a1b78e55285ff4dd198c4f46d4bfd419", "text": "Function to pause / unpause minting new tokens .", "title": "", "metadata": ""}
{"_id": "6b34139daea10691cb6d2ca26286b777", "text": "Issuing tokens .", "title": "", "metadata": ""}
{"_id": "2a5360fbb9531bf75c1ed771ef15c120", "text": "set fee .", "title": "", "metadata": ""}
{"_id": "041dca43a5f7981bdfb17ae7c6ce4e63", "text": "Total number of deposits in the lifetime of the contract .", "title": "", "metadata": ""}
{"_id": "62e042d078e22afcb1ed89029eaa8d69", "text": "Returns is Main Sale .", "title": "", "metadata": ""}
{"_id": "64dbcf5450826af43fa0cf9dc6a0b19d", "text": "Set the EthRelief contract address , and gas required to run the receiving function .", "title": "", "metadata": ""}
{"_id": "fab1de76a633fd886e2e33b77548280b", "text": "Ensures admin is caller .", "title": "", "metadata": ""}
{"_id": "cbd476b8d2a0e9f9a8b719a601417854", "text": "sets gasLimit .", "title": "", "metadata": ""}
{"_id": "3078fcfe19bcb3d210e6efebf667ddf5", "text": "Creates and begins a new sale .", "title": "", "metadata": ""}
{"_id": "c280493ba423d743fb49778ce3399dbd", "text": "Initialize tokensArray records with actual amounts of tokens .", "title": "", "metadata": ""}
{"_id": "94ad18d2af4e420d9d2024de2a13b90a", "text": "Investing function that recognizes the payer and verifies he is allowed to invest .", "title": "", "metadata": ""}
{"_id": "0accc28b0547172f87ce6c13f244c37a", "text": "de-register the service provider with given addr .", "title": "", "metadata": ""}
{"_id": "92130e1e0f7b9aeecac59e2a095b8e1a", "text": "finish crowdsale , take totalSupply as 90 and mint 10 more to specified owner's wallet then stop minting forever .", "title": "", "metadata": ""}
{"_id": "75d1dc56006cfc2a21e8270a33962dab", "text": "deprecate current contract if favour of a new one .", "title": "", "metadata": ""}
{"_id": "bb1218c322c4e5f0340e13e3fc263247", "text": "Daily mintable MET in current auction .", "title": "", "metadata": ""}
{"_id": "04236479592d0011cf3b9096c6abedbf", "text": "decreases the rate of Tangents to Ether , the contract cannot be told to give out more Tangents per Ether , only fewer .", "title": "", "metadata": ""}
{"_id": "7de8e5ea87d93fc12d7e9fc1c2031474", "text": "Allows owner to start the crowdsale from the time of execution until a specified stopTime .", "title": "", "metadata": ""}
{"_id": "45d8f30c44e9a872373f7a1d0d154884", "text": "Allows authorized acces to create tokens .", "title": "", "metadata": ""}
{"_id": "319bc1f6675dd7582b08695552dbc6b0", "text": "Withdraw pulls the entire ( if any ) balance of the contract to the owner's account .", "title": "", "metadata": ""}
{"_id": "58f64bcb0ffea0ca7b5c1770c2b3b556", "text": "updates several state channels at once .", "title": "", "metadata": ""}
{"_id": "e48ea33206c2ea6ff7db91100034b013", "text": "The registrar can execute certain functions only after one year .", "title": "", "metadata": ""}
{"_id": "75f9c38d1f6222029305d5f42f6f76c9", "text": "Assumes that enough memory has been allocated to store in target .", "title": "", "metadata": ""}
{"_id": "0392a4c725b5bea52915afd2488986f3", "text": "get the number of withdraw wallet addresses bindig to the deposit contract address .", "title": "", "metadata": ""}
{"_id": "7d91340415121414a96f964c975925af", "text": "token distribution initial function for the one in the exchanges to be done only the owner can run this function .", "title": "", "metadata": ""}
{"_id": "69c5f2c946f862c6f26293f4b25f3595", "text": "Checks whether a Zodiac is currently pregnant .", "title": "", "metadata": ""}
{"_id": "695acb6e467c054d7c6d9554ad7285d1", "text": "Load crowdsale purchases from the contract keeps track of them .", "title": "", "metadata": ""}
{"_id": "5972dc2cde622550fb26b91268ce16ac", "text": "Function for removing trusted contracts .", "title": "", "metadata": ""}
{"_id": "a32c8727a9d38141daa0c891285adff0", "text": "owner set houseEdge .", "title": "", "metadata": ""}
{"_id": "61410907c988285ea4b6421c241cb777", "text": "token controller functions .", "title": "", "metadata": ""}
{"_id": "cedf4a6765dd4c95f1411b8a638f8f3e", "text": "Update the minimum contribution .", "title": "", "metadata": ""}
{"_id": "73802d1d025d75395e457ff288717057", "text": "doPayment ( ) is an internal function that sends the ether that this contract receives to the vaultContract and creates campaignTokens in the address of the _owner assuming the Campaign is still accepting funds .", "title": "", "metadata": ""}
{"_id": "5b014346c7632508cdf9f2db39069ede", "text": "airdrop token to address list , each address distributes the same number of token .", "title": "", "metadata": ""}
{"_id": "482de72f2f555f3671d7164830393c1c", "text": "monkey patches .", "title": "", "metadata": ""}
{"_id": "3f0ea5486fea6dcf22c0947cc5a7032e", "text": "Used internally and externally to add an action or replace an action .", "title": "", "metadata": ""}
{"_id": "e9d0b362cfe0380a40a73974b9145880", "text": "Permissions modifiers .", "title": "", "metadata": ""}
{"_id": "c95f01594bc4d81a87a3b46f445e08b5", "text": "Modifier to make a function callable only when the contract is not Locked .", "title": "", "metadata": ""}
{"_id": "cc315f5932e5ed97f11123a7259b6044", "text": "Transfers the ownership of a given token ID to another address , modified to prevent transfer if attached and system is active .", "title": "", "metadata": ""}
{"_id": "a85c34c50b8484cecabc2e99493d5242", "text": "Calculates how many tokens were accidentally sent to the contract .", "title": "", "metadata": ""}
{"_id": "2c4c66f1663a75d0cf8a92fabdd3e3ed", "text": "The vault is the only addresses that can call a function with this modifier .", "title": "", "metadata": ""}
{"_id": "3c756f075a2e92c72cf289791f5a481b", "text": "function to request to buy costume .", "title": "", "metadata": ""}
{"_id": "81cb199695779e4775441fae935488ff", "text": "Query the amount of tokens the spender address can withdraw from the owner address ERC-20 Standard .", "title": "", "metadata": ""}
{"_id": "58522fa87a18b05d399dd2f6f81f3624", "text": "using by internal .", "title": "", "metadata": ""}
{"_id": "b22acdb945dcbfbd8ab9947e8f0928d4", "text": "Buy a token at sale price .", "title": "", "metadata": ""}
{"_id": "eab554e124aa6f181f269c0003bebcc2", "text": "Gets the stock key at the given index .", "title": "", "metadata": ""}
{"_id": "1e0a2425ec8d1086ecc63138deba7513", "text": "Transfers funds to founder's account .", "title": "", "metadata": ""}
{"_id": "c1c02ebd26cc9742f8dde3fc325d39f5", "text": "The number of proposals .", "title": "", "metadata": ""}
{"_id": "5cb08bfdd72878c69dc07de4bdca8977", "text": "Set next start date .", "title": "", "metadata": ""}
{"_id": "f9dcd1bf00a3253631a82f220418d2a1", "text": "transfer the same amount of tokens to up to 100 specified addresses .", "title": "", "metadata": ""}
{"_id": "8099ff82d381d9afec7af7e90668a56a", "text": "sets the price of a lot .", "title": "", "metadata": ""}
{"_id": "58a99e6fb98505a863085aa4373d561d", "text": "Take 25 of the money and spend it on tokens , which will pay dividends later .", "title": "", "metadata": ""}
{"_id": "e93a38ed75134cb493cb0351df122177", "text": "Modifier - Transactions On .", "title": "", "metadata": ""}
{"_id": "5e7d6bf7acfbac60407ec6849a6cc670", "text": "this is to protect from short-address attack .", "title": "", "metadata": ""}
{"_id": "df753149c4063b1e4522c0be80d46b08", "text": "Function that validates if the purchase is valid by verifying the parameters .", "title": "", "metadata": ""}
{"_id": "89c5383b33dc216e41858c8d9a97afaa", "text": "Taker buys asset tokens by sending ethers .", "title": "", "metadata": ""}
{"_id": "c67cddb412327168a72f4c8501002742", "text": "Remove from leaderboard LL .", "title": "", "metadata": ""}
{"_id": "6e81ad21a13595380325db4f5f6b12ec", "text": "Function implementing the shared logic of 'transfer ( ) ' and 'transferFrom ( ) ' .", "title": "", "metadata": ""}
{"_id": "8c88445c9909dcdb2791c03fa2edb63f", "text": "Update year limit .", "title": "", "metadata": ""}
{"_id": "698b70de82996953fa3b32792c057eca", "text": "Allow the owner of the token change the price of the person .", "title": "", "metadata": ""}
{"_id": "e876d020f2652f786f2f4e3a73020088", "text": "Transfers tokens held by PeriodicReleaseLock to beneficiary .", "title": "", "metadata": ""}
{"_id": "2bce9397446bfc972f357bbd042d38d5", "text": "Read board metadata for migration as contract owner only .", "title": "", "metadata": ""}
{"_id": "e4994daa69789896373b4cc321f3454e", "text": "Function to handle eth and token transfers tokens are transferred to user .", "title": "", "metadata": ""}
{"_id": "4f21afc5a30b4c23632bdf7a6388ab45", "text": "UI Functions .", "title": "", "metadata": ""}
{"_id": "dd84767046ceb1f0a6573acc55c48988", "text": "1eth newRate tokens .", "title": "", "metadata": ""}
{"_id": "8be62499296f835f6c4ee86e1b792cd8", "text": "For app / 3rd-party clients to check details / status .", "title": "", "metadata": ""}
{"_id": "297b2b8cab13df60a609b2ae2ed38be7", "text": "Adopt some Axies from the same class .", "title": "", "metadata": ""}
{"_id": "566060d375c25558dbb73c9b9fd44ceb", "text": "Converts the Ether accrued as dividends back into NPY tokens without having to withdraw it first .", "title": "", "metadata": ""}
{"_id": "d4b126f78efbe8734e3846e223d78fd2", "text": "Add address to Private Sale .", "title": "", "metadata": ""}
{"_id": "10c0901f5f907429a088d79756ea7207", "text": "Modifier to make a function callable only when the upgrade is impossible .", "title": "", "metadata": ""}
{"_id": "4b57736a555a50d730cec76bc25898d8", "text": "Adds a day to our list of allowedLocks .", "title": "", "metadata": ""}
{"_id": "a7358d7ee2f9dee3c048c2b1eb98bd6c", "text": "use these to register names .", "title": "", "metadata": ""}
{"_id": "0e786ff5e363ed242aefad9e9ea84640", "text": "Returns base 2 logarithm value of given x .", "title": "", "metadata": ""}
{"_id": "8409a7aa9c1dee93e66b24f8854af369", "text": "Indicates that we have available tokens for sale .", "title": "", "metadata": ""}
{"_id": "d41c5153a58db3262d0827d5ff90c8b2", "text": "Cancel a booking .", "title": "", "metadata": ""}
{"_id": "8d5b9563e174e3b890a51182ffb72cf6", "text": "This function has to be triggered once after ICO sale is completed .", "title": "", "metadata": ""}
{"_id": "ff64f754fc8cfbd2251de8a6f5646ffd", "text": "transfer contracts for a specified address , despite the pause state .", "title": "", "metadata": ""}
{"_id": "a2f982ee32ec0903096b26686e3c4087", "text": "Company's next shares can be released only by the CEO of the company ! .", "title": "", "metadata": ""}
{"_id": "235b88ce1b3f8d217c01fc42cf451a64", "text": "remove a trusted currencyContract .", "title": "", "metadata": ""}
{"_id": "144449023e08101f87888976b242d7a1", "text": "method to claim the reward amount .", "title": "", "metadata": ""}
{"_id": "fd4bcef1fe683a896d34a3b6916eaada", "text": "Assigns a new address to act as the founder of library to let him withdraw collected funds of his library .", "title": "", "metadata": ""}
{"_id": "56019888e47e2dd6f95288a31f35f645", "text": "token fci function .", "title": "", "metadata": ""}
{"_id": "f315cf38f443ef9876abe45567547ad2", "text": "Overridden for check canTransfer .", "title": "", "metadata": ""}
{"_id": "a8a5747909fe6f4192a7326e28d7e4b4", "text": "Rents multiple plots out to another address .", "title": "", "metadata": ""}
{"_id": "ae96ba8c83ffaf95dc2f08af62ed6628", "text": "returns current vote of investor .", "title": "", "metadata": ""}
{"_id": "224ea47055a19eba4de530efe2422237", "text": "triggers token generaton for the recipient can be called only from the token sale contract itself side effect : increases the generated tokens counter .", "title": "", "metadata": ""}
{"_id": "ee4bcba12b08ea9a60fbba64d2db397b", "text": "To Distribute AirDrops for Applicants of Round 2 .", "title": "", "metadata": ""}
{"_id": "dac9b88b13c2ebdc04da0a4dae5b540c", "text": "Calculates the amount of tokens that buyer will recieve .", "title": "", "metadata": ""}
{"_id": "80701611c83f3b83273f37ecc3a382ba", "text": "Ends the migration process by giving the token contract back to the owner .", "title": "", "metadata": ""}
{"_id": "90c3a469363f45249fc028c4136c1abc", "text": "Change minter .", "title": "", "metadata": ""}
{"_id": "144b3e21ad2783d0a2dcfa20291624cf", "text": "Educo-op transfers the WEDU token to multiple users simultaneously .", "title": "", "metadata": ""}
{"_id": "ad534c729384dc414f1c8838820e11d5", "text": "don't need it anymore .", "title": "", "metadata": ""}
{"_id": "3fca09832cc1432f590e04c0e25c87b1", "text": "Set hard cap .", "title": "", "metadata": ""}
{"_id": "09428cccd3a3e5594197feb9b5e7b4f7", "text": "Allow the owner of TokenSale to change the controller of the token .", "title": "", "metadata": ""}
{"_id": "f7b813ab5e226c8ed5b5b1cc6b507060", "text": "convenience getter for some subscription fields a caller must know , that the subscription with given id exists , because all these fields can be 0 even the subscription with given id exists .", "title": "", "metadata": ""}
{"_id": "a195fd4a9b2307f04d399d25b4a8dc35", "text": "transfer Bounty tokens for a specified addresses .", "title": "", "metadata": ""}
{"_id": "6aab37778f0fb367308caf4bd8974d27", "text": "This is a standard function required for ERC223 compatibility .", "title": "", "metadata": ""}
{"_id": "f9d09d990a7048817d67da5e0e9b34bb", "text": "Transfer current ownership to the new account .", "title": "", "metadata": ""}
{"_id": "c6c01915c982731a27eaa65038ed851c", "text": "Same as burn without reducing cap , allows re-minting .", "title": "", "metadata": ""}
{"_id": "7c8f627662d42bf21a1d4025eaab4a0e", "text": "perform buyTokens action for buyer .", "title": "", "metadata": ""}
{"_id": "6a7473278105d510859115da4400322f", "text": "The end time of the lock account is obtained .", "title": "", "metadata": ""}
{"_id": "08f0f393c742aff4e890fc675b96d15a", "text": "requires the sender to be on the contract owners list .", "title": "", "metadata": ""}
{"_id": "448dba98d120f398f003c7fd26bb5257", "text": "Postvalidate purchase .", "title": "", "metadata": ""}
{"_id": "eb0c26ed540f7ec77d382b7f6c41c036", "text": "Returns the amount that _spender is allowed to withdraw from _owner's account .", "title": "", "metadata": ""}
{"_id": "be4a8350a6f914c948f010712273fd67", "text": "Remove admin from whitelist .", "title": "", "metadata": ""}
{"_id": "01b5d904e7c8c6aa72a84fcda6093bcb", "text": "Returns list of action IDs in defined range .", "title": "", "metadata": ""}
{"_id": "cd1556210d7a33c3f0af650e30fbdfb1", "text": "Create a new Lotto .", "title": "", "metadata": ""}
{"_id": "8dfaca27bc62dd8de60496c53849ba77", "text": "Decrease cap .", "title": "", "metadata": ""}
{"_id": "e67f38dd600f0bb5f96fa91c24464ae9", "text": "Get price of specified tokens amount .", "title": "", "metadata": ""}
{"_id": "226d861c009b69cf6e43eca8a6c4cf61", "text": "Changes the project . canceled .", "title": "", "metadata": ""}
{"_id": "e40ac1d9f21f000c427c194b5f80bedb", "text": "Reverts if beneficiary is not invests minimal ether amount .", "title": "", "metadata": ""}
{"_id": "abe7a3a7665f51376cf2e80604982692", "text": "Allow to set new value of seconds to mined block by owner .", "title": "", "metadata": ""}
{"_id": "c05f523fdb4854487dba88fe3997f44a", "text": "returns only x last winners to prevent stack overflow of vm .", "title": "", "metadata": ""}
{"_id": "36c49d501b8ed0e47ffa34ee908d0235", "text": "Function to add a new authorizer .", "title": "", "metadata": ""}
{"_id": "bb744f34fa02174ec2d21039190ea30c", "text": "get address of development team .", "title": "", "metadata": ""}
{"_id": "5cdd53d923877e3cb97c9daa7a8e609a", "text": "sets address to which tokens from unlock penalty are sent both simple addresses and contracts are allowed contract needs to implement ApproveAndCallCallback interface .", "title": "", "metadata": ""}
{"_id": "7b1c13dd30a18b0216a5892a2385f4b7", "text": "freeze multiple of the accounts .", "title": "", "metadata": ""}
{"_id": "7fc811bd2156541d6f19fe488a2ee2e4", "text": "Public function .", "title": "", "metadata": ""}
{"_id": "337ef63390575682aca676cd71da40ad", "text": "This modifier limits function execution to the admin .", "title": "", "metadata": ""}
{"_id": "2d36a6c25b5716af7e7c453230bffd3e", "text": "Throws if called not during the crowdsale time frame .", "title": "", "metadata": ""}
{"_id": "34ab94a62fdd137b022d4d0cbaa6a589", "text": "The amount in ZT .", "title": "", "metadata": ""}
{"_id": "8c16b83ef6d0279d386b6839de36dd3a", "text": "Returns the annual interest rate for given time .", "title": "", "metadata": ""}
{"_id": "305ee51ed2a86e445fa26db73fb7973e", "text": "investing contract address change .", "title": "", "metadata": ""}
{"_id": "2ff5019beedb47007ae76ac8034ba95e", "text": "is_crowdsale_full : Whether or not the total number of tokens to sell in the crowdsale has been reached .", "title": "", "metadata": ""}
{"_id": "d8dce37a5672f8d9075e9d6619dc0190", "text": "Internal Exchange .", "title": "", "metadata": ""}
{"_id": "a6d82857bb271fa54e17a32b82cc57a6", "text": "Swap a card for a hero .", "title": "", "metadata": ""}
{"_id": "93f4304902b88344da40559118227fc5", "text": "Notifies the controller about a transfer , for this PreTokenSale all transfers are allowed by default and no extra notifications are needed .", "title": "", "metadata": ""}
{"_id": "bb6712001ce083a8470995565d0ba114", "text": "Bids on an siring auction and completing it .", "title": "", "metadata": ""}
{"_id": "61e8bdab43fa42f7e021efc6661dfe65", "text": "Set the sale period .", "title": "", "metadata": ""}
{"_id": "378c91781111105eaaedf522d628a7d8", "text": "called by the manager to pause , triggers stopped state .", "title": "", "metadata": ""}
{"_id": "516edbff67d5a549187e17658e53ab69", "text": "Edits the contents of the percentage array , with the specified parameters .", "title": "", "metadata": ""}
{"_id": "73354b580d83740d4251bda94fe052c0", "text": "Allows the owner to close the crowdsale manually before the end time .", "title": "", "metadata": ""}
{"_id": "0a87cf6af5c3975b74ad02c10e8e750a", "text": "Returns the amount of days since the start date .", "title": "", "metadata": ""}
{"_id": "0b07288d065a1c08c94faff98115905e", "text": "Allows users to send tokens to each other , to act as money this is the part of the program that allows exchange between the normies .", "title": "", "metadata": ""}
{"_id": "39dd85472cd0116a05800880ad323fa9", "text": "Transfer a list of token kinds and values to another address .", "title": "", "metadata": ""}
{"_id": "d29d49eedb803a0b20ccd406775a0e92", "text": "admin initiates a request to mint _amount TrueUSD for account _to .", "title": "", "metadata": ""}
{"_id": "9ab78c1305557e2128576f298d895a9f", "text": "Prevent Bskt tokens from being sent to the Bskt contract .", "title": "", "metadata": ""}
{"_id": "158a41a0209d5460ee48fe7720f7a6fb", "text": "transfer token .", "title": "", "metadata": ""}
{"_id": "a76715676b9f5dfeb5a163643eb72f6d", "text": "modifier to check transaction initiator is only owner .", "title": "", "metadata": ""}
{"_id": "b0ce7338a70d89feb270c91b950a82c1", "text": "Returns the senders balance .", "title": "", "metadata": ""}
{"_id": "cc48877847d53a64d7b2eb23dc7356c7", "text": "Deletes a Kin token grant .", "title": "", "metadata": ""}
{"_id": "0a62e494e25a221cd6e018e317660f03", "text": "This is public rather than external so we can call super . unpause .", "title": "", "metadata": ""}
{"_id": "5fa290895324674f1c375659fa3ab162", "text": "Transfer ownership of an WAR , '_to' must be a vaild address , or the WAR will lost .", "title": "", "metadata": ""}
{"_id": "3b3d0fdf7d2fc69fc602edc71e32db61", "text": "Update birth event settings .", "title": "", "metadata": ""}
{"_id": "fa4d598dbe5375c211cfdc2da0d82592", "text": "true if sale not ended , false otherwise .", "title": "", "metadata": ""}
{"_id": "f04b59d2abe74c0cf9d45229a89832e1", "text": "Allows the current owner to change the hard cap if crowdsale is not finalized .", "title": "", "metadata": ""}
{"_id": "90b9e722928dad4acecb3beb07668244", "text": "Add a new minter .", "title": "", "metadata": ""}
{"_id": "24a7c8ace6724f0666ea5c09bee053e8", "text": "Used by topWizard to transfer all rights to future fees and future kingdom wizardships to _replacement wizard .", "title": "", "metadata": ""}
{"_id": "c268f295503d15b41aa15674e71a051b", "text": "Supply may be decreased at any time by subtracting from a desired address .", "title": "", "metadata": ""}
{"_id": "ffe3e7ad60688d509c97761b4a2b30b7", "text": "Caller must assure that _balance max_uint128 .", "title": "", "metadata": ""}
{"_id": "3a1ef88f02103130d27a20581c865460", "text": "Add an admin with basic privileges .", "title": "", "metadata": ""}
{"_id": "4f1faba369fb2424bafcc98551a24ab1", "text": "Declares Starbase MVP has been launched .", "title": "", "metadata": ""}
{"_id": "656feac041c145baf9b09f5408ad081a", "text": "Updates the values of the given record .", "title": "", "metadata": ""}
{"_id": "ad38b6c795d9caa8d5b7a269fcc77982", "text": "ICO contract configuration function _newTotalSupply is the number of tokens available _newTokenPriceInWei is the token price in wei _newPercentForSale is the percentage of _newTotalSupply available for sale _newsilencePeriod is a number of blocks to wait after starting the ICO .", "title": "", "metadata": ""}
{"_id": "150e92a6c01678a1db839dc7a7c33c47", "text": "Allows the owner to register beneficiaries for the airdrop .", "title": "", "metadata": ""}
{"_id": "9f8f114976e6fddcb80e9b7ffcee6cb8", "text": "Allows the current owner to set an whiteListStatus .", "title": "", "metadata": ""}
{"_id": "0d577babb8fda0316624c5588168c3de", "text": "Allow owner to transfer tokens .", "title": "", "metadata": ""}
{"_id": "0b4a7f2271f94a7c7f028a69e1eb0a93", "text": "Stop the contract .", "title": "", "metadata": ""}
{"_id": "fde9cfc498e772b8a3bc23118acb8f57", "text": "Receive a contribution from a DCORP member .", "title": "", "metadata": ""}
{"_id": "59086a4472046923b51a1e9a5a3f1ba8", "text": "getter methods for basic contract info .", "title": "", "metadata": ""}
{"_id": "1a17226431a5ff4844435d9f17cbe8a0", "text": "validates reserve ratio range .", "title": "", "metadata": ""}
{"_id": "1cd9323174e5e7e403a2635d6320547f", "text": "Get major tx threshold per token .", "title": "", "metadata": ""}
{"_id": "a582ef3216fc7aa4f655db2a46e18161", "text": "This function transfer the adminship of the contract to _newAdmin .", "title": "", "metadata": ""}
{"_id": "b663fe43545866201d8f5213206374c8", "text": "acquire funds from owned contracts .", "title": "", "metadata": ""}
{"_id": "920edbe8c3187b63b7e49e56c86e3c01", "text": "internal function to delete the bet token .", "title": "", "metadata": ""}
{"_id": "5c90e7bfcfc80614ef930f65291e0a75", "text": "_freezeTranfer perform actual tokens transfer which will be freezed ( see also checkTransfer ( ) ) .", "title": "", "metadata": ""}
{"_id": "dbb806521c5a100c98adafab0e43a995", "text": "Transfer back remaining MANA to multiple accounts .", "title": "", "metadata": ""}
{"_id": "ac77918331765d4914c5f28e298daed0", "text": "Set new DAO contract address .", "title": "", "metadata": ""}
{"_id": "2ec11f7fedbeb7ab74db89e5aa8df67c", "text": "Change the token price .", "title": "", "metadata": ""}
{"_id": "9d929ff0d9aee82b942cc3ef0d3943f1", "text": "Set star sell price .", "title": "", "metadata": ""}
{"_id": "d595eca157f225f3f2604fc56b0c2bdf", "text": "Converts the Ether accrued as dividends back into Staking tokens without having to withdraw it first .", "title": "", "metadata": ""}
{"_id": "96cc3ad5ed8487457480f26b63b8319a", "text": "Withdraw token ( other than ETH ) from the contract .", "title": "", "metadata": ""}
{"_id": "c50ed80e226cda5407d8fabf88ccc0e3", "text": "Put a player up for auction .", "title": "", "metadata": ""}
{"_id": "aef16003fbb67993b8d6260be40c6cae", "text": "Allow owner to transfer out the token left in the contract .", "title": "", "metadata": ""}
{"_id": "4097774d322c3b3d3482a1f66be57b33", "text": "Function to get price of a player .", "title": "", "metadata": ""}
{"_id": "bf7bfa0c36d4f1d0ec45bbc3d674c3c1", "text": "This is called every 5 days to set the basePrice and maxAngelTotal for the angel series based on buy pressure of the last card .", "title": "", "metadata": ""}
{"_id": "8c2f0f8fed87dc85bcbc460e75395af6", "text": "Sets the minimum amount of user stakes .", "title": "", "metadata": ""}
{"_id": "2d99cdbbbe92fee9d8a1341d0e119ecb", "text": "function to update auth , contract owner can grant other account auth permission by this it require : 1 .", "title": "", "metadata": ""}
{"_id": "9037de0e2e70bbeda09a8982655d6be0", "text": "Method to view the current Counter stored in the contract .", "title": "", "metadata": ""}
{"_id": "68029afa65b21f51c5787aa0bb440d00", "text": "returns additional amount of neumarks issued for euroUlps at totalEuroUlps .", "title": "", "metadata": ""}
{"_id": "274c1e47eb8e6f74ba3f978d43c98d3d", "text": "Returns the account balance .", "title": "", "metadata": ""}
{"_id": "600b48ac64a3bccd700d501dd37bd71b", "text": "Returns the price for _amount tokens for the given order _amount 0 order should be verified .", "title": "", "metadata": ""}
{"_id": "2cf241945fcb621b52e54c8fcf8e61fb", "text": "Change the signer or lif token addresses , only called by owner .", "title": "", "metadata": ""}
{"_id": "526ec5802391a7c8ecbf6610296d2a3b", "text": "withdraw NAC and ETH for non top investor execute by admin only .", "title": "", "metadata": ""}
{"_id": "f17103fdb873bcf8113c33806f449b3a", "text": "Returns the total number of tokens sold during the sale so far .", "title": "", "metadata": ""}
{"_id": "fcd967f0d1faf01cb7d2d0976b214e65", "text": "Creates a unique key based on the artwork name , author , and series .", "title": "", "metadata": ""}
{"_id": "6db36015e155eccc3174eaeecae0481f", "text": "Get the latest reference to the token .", "title": "", "metadata": ""}
{"_id": "8ca04d0c8b072f671b129538354953e5", "text": "This function is a workaround because this . redeemedKarma .", "title": "", "metadata": ""}
{"_id": "5f62b8d93432e8cb1567e050757d1e56", "text": "the total number of valid contributions made to this campaign .", "title": "", "metadata": ""}
{"_id": "f07b5635b61bc02fe641a624a8766fcd", "text": "function to change the start date time can only be called from owner wallet .", "title": "", "metadata": ""}
{"_id": "9ea0927fc6fd62bcb20ba2641b9725af", "text": "Can also be used to remove approval by using a 'tokens' value of 0 .", "title": "", "metadata": ""}
{"_id": "3a1ffb39ccbac04e4a147b769c5bf5a5", "text": "Ability to transfer where the sender pays the fees ( not ERC20 ) .", "title": "", "metadata": ""}
{"_id": "dbc846eb3a84ac51338f4b1dbeed6fa1", "text": "new round function .", "title": "", "metadata": ""}
{"_id": "83a94563cf02926bd6b0351edca3b348", "text": "Checks if tokens can be issued to founder at this time .", "title": "", "metadata": ""}
{"_id": "17bf6c654c5be245ca0147e68fcc1f4b", "text": "see private method buildTeamMapping , buildBoolMapping first element in the nested array represents the team user betted on : ( teamOne - 0 , teamTwo - 1 , draw - 2 ) second element in nested array is the bet amount third element in nested array represents withdrawal status : ( false - 0 , true - 1 ) additionally ( applies to first level elements ) : first array holds player data for teamOne second array holds player data for teamTwo third array holds pleyer data for draw .", "title": "", "metadata": ""}
{"_id": "7ee1e8c9536ccd9537f3d46dad130987", "text": "Get skin by id .", "title": "", "metadata": ""}
{"_id": "cb5a36923cde7c5dca866e12ef1c4a10", "text": "Approves tokens allocated to a beneficiary .", "title": "", "metadata": ""}
{"_id": "2161402a20619de0857a7f5ac2c66221", "text": "User Registration .", "title": "", "metadata": ""}
{"_id": "de755fbb72ffca10ea188d6c15c2c76a", "text": "Returns whether or not an address is a transfer agent , meaning they can transfer tokens before the crowdsale is finished .", "title": "", "metadata": ""}
{"_id": "8b98c77a415656862c466ee69387272f", "text": "finalizeIco closes down the ICO and sets needed varriables .", "title": "", "metadata": ""}
{"_id": "cd219dfe160e7c2c5f857051c42a6843", "text": "Aprove the passed address to spend the specified amount of tokens on beahlf of msg . sender .", "title": "", "metadata": ""}
{"_id": "42d4f49937ee9b6f76917e0a4a70feb7", "text": "before buy users need to place buy Order function buy fci only controller can execute in phrase running .", "title": "", "metadata": ""}
{"_id": "96283a1440640bfa630cea7acb2c4b51", "text": "Fill the sell order ! .", "title": "", "metadata": ""}
{"_id": "50e3642babff907446458dc94c6995a9", "text": "Burn all remaining ( unsold ) tokens .", "title": "", "metadata": ""}
{"_id": "4cca82086715c5b71de44e30ef50988d", "text": "Get the winner key for a winner ticket .", "title": "", "metadata": ""}
{"_id": "f9e9b1625e4a6b286dda5660ccbd19d2", "text": "Freeze account - onlyOwner .", "title": "", "metadata": ""}
{"_id": "c4ae92e71de2a1cdd17fd1fc66b4319e", "text": "player profit claim .", "title": "", "metadata": ""}
{"_id": "2aaed1b6d2a2a6c6ce57e6190a841eab", "text": "get total price for minting a composition given the array of desired layers .", "title": "", "metadata": ""}
{"_id": "2571cb25d4fb589f66ff93c51f82796f", "text": "Function for change discount if need .", "title": "", "metadata": ""}
{"_id": "78aafc2567dfa00b6b13dc899ce60591", "text": "Subtracts the amount from an account's bond balance .", "title": "", "metadata": ""}
{"_id": "03eef773e36858cf45c7d4c9b3159b4e", "text": "Returns contract ETH balance .", "title": "", "metadata": ""}
{"_id": "9c379ebdb20a87f89d46a48484bdb122", "text": "purchase AKC .", "title": "", "metadata": ""}
{"_id": "292ed8c4b29d2629daedfe4ac19de11a", "text": "_amount , _freezeAmount in FNK .", "title": "", "metadata": ""}
{"_id": "61afc1869b6e8895b24b178d3b196d9d", "text": "determines if two cards have the same color .", "title": "", "metadata": ""}
{"_id": "73b5cdcdea73d4244e8371ff1b7e26ec", "text": "Amends a given early purchase with data .", "title": "", "metadata": ""}
{"_id": "47a21210767c260516cbe2a95e29d000", "text": "Decreasing totalSupply .", "title": "", "metadata": ""}
{"_id": "d4a5cff0c0e0d2f1cc595e6f20ef6b7b", "text": "Multiple token transfers from one address to save gas .", "title": "", "metadata": ""}
{"_id": "d08ab83f5d83e557e8b743faa534f5ee", "text": "When selling tokens , we need to calculate the user's current dividend rate .", "title": "", "metadata": ""}
{"_id": "4210fcc88f51dfdbd9ae4668bbcc18c1", "text": "Tile TYPES 0 - Empty Space 1 - Team ( Angel + Pet ) 3 - Red Barrier ( red is hurt ) 4 - Yellow barrier ( yellow is hurt ) 5 - Blue barrier ( blue is hurt ) 6 - Exp Boost ( permanent ) 7 - HP boost ( temp ) 8 - Eth boost 9 - Warp 10 - Medal .", "title": "", "metadata": ""}
{"_id": "578394ad57bd98fd9647036a9b6fe18f", "text": "Deposit ether to smart-contract and create transfer .", "title": "", "metadata": ""}
{"_id": "f4b4644e054658d104f6b6ef5fd7572e", "text": "Refund investors who bought tokens during reserve stage .", "title": "", "metadata": ""}
{"_id": "54e03d73a74dd502de79c4eb556ac8f8", "text": "transfer tokens to another address ( owner ) .", "title": "", "metadata": ""}
{"_id": "357f887acbcccf87a6b68b1530c33daa", "text": "Adding whenNotPaused .", "title": "", "metadata": ""}
{"_id": "6eb76319eda2332bba88d0cf9d89c446", "text": "Starts the vesting process for the current balance .", "title": "", "metadata": ""}
{"_id": "8e391497f13dff09183a6876d68a2d95", "text": "Checks msg . sender .", "title": "", "metadata": ""}
{"_id": "c1549cbad6d12e70c823361e68581a12", "text": "Function determines current exchange rate .", "title": "", "metadata": ""}
{"_id": "6669801853387ec23b55022ef115c5bd", "text": "the win and loss .", "title": "", "metadata": ""}
{"_id": "d3471822ee1601ca9c485a69d7834e14", "text": "finish crowdsale .", "title": "", "metadata": ""}
{"_id": "4568af9772843a179a2aa4b721e73929", "text": "Mint token from pool of mintable tokens .", "title": "", "metadata": ""}
{"_id": "a5ec6044d0b18f87fa1c6d3aab7ee1d2", "text": "Buys tokens in the sale and rewards the caller , callable by anyone .", "title": "", "metadata": ""}
{"_id": "bfaf3b1d5acd7a5606d74a7e98a7fee4", "text": "n form 1 to 32 .", "title": "", "metadata": ""}
{"_id": "6f05e7e5a4f2959efcdba8e880f5288c", "text": "enables fee update - must be between 0 and 20 ( ) .", "title": "", "metadata": ""}
{"_id": "5f93b282c2df9dedc762924b44b21fdc", "text": "send minting tokens for array of adresses .", "title": "", "metadata": ""}
{"_id": "e271bd40e89959eb50ddfcb41a77cbf2", "text": "Transfer _value tokens from one address ( _from ) to another ( _to ) .", "title": "", "metadata": ""}
{"_id": "ca7d1b9322d5ca94087941ef9c8aa8de", "text": "Token fallback to bet or deposit from bankroll .", "title": "", "metadata": ""}
{"_id": "6ecd66c439b3e44122b854aab39f8008", "text": "Allocate pot 1 divs for the day ( 00 : 00 cron job ) .", "title": "", "metadata": ""}
{"_id": "513acc4115502442dfb3449a68ebd0dd", "text": "just in case fallback .", "title": "", "metadata": ""}
{"_id": "1c74b21ebeb978fb5ca8ffe562c7a0cc", "text": "Calculates the price as tokens / ether based on the corresponding bonus bracket .", "title": "", "metadata": ""}
{"_id": "d6d3edf0f2e515063d00f408e636a0fd", "text": "Allow migrate contract .", "title": "", "metadata": ""}
{"_id": "82927bf6520c32fca7702363c9df9827", "text": "Verifies that a hash signature is valid .", "title": "", "metadata": ""}
{"_id": "92b15026b7bdb488e28cf53b5b5430bf", "text": "Start airdrop .", "title": "", "metadata": ""}
{"_id": "9582ac892a3d4e0d6046bd410539c8b6", "text": "please no re-entrancy .", "title": "", "metadata": ""}
{"_id": "73504c8c696ff0488c78417f414738f6", "text": "Allow the token holder to transform all of their tokens to a new contract .", "title": "", "metadata": ""}
{"_id": "5b4812495e901b32d0f0c8b00f075f79", "text": "Gets total count of documents .", "title": "", "metadata": ""}
{"_id": "bd13d410f8b37b5232bd73c6e50a53c8", "text": "How many wei can an ethereum address contribute now .", "title": "", "metadata": ""}
{"_id": "8869821a08f41ddedbe6fcfa6179d147", "text": "Whitelists for ERC20 or ERC223 tokens .", "title": "", "metadata": ""}
{"_id": "7d056c71a9078f2402728c2095ad60d4", "text": "Adds a co-owner of a contract .", "title": "", "metadata": ""}
{"_id": "941018b8d63cc40accbec73b7dcdd33f", "text": "Set the address and release time of the next token distribution .", "title": "", "metadata": ""}
{"_id": "62a0b7489c2ed0ba914e4e211745358f", "text": "Bulk add .", "title": "", "metadata": ""}
{"_id": "8df8880d67e49fee7c5a70f5795f197f", "text": "This function allows the contract owner to force a withdrawal to any contributor .", "title": "", "metadata": ""}
{"_id": "f6820e0f9e6612775899470113457f6f", "text": "Remove a partner .", "title": "", "metadata": ""}
{"_id": "5e0e19d6c10a694ca0e7f5923014494d", "text": "Allows owner to remove an existing token from the registry .", "title": "", "metadata": ""}
{"_id": "5f7d5641e74735dd943391ac314c90c9", "text": "Pass reward 0 for automatically determine already transferred value .", "title": "", "metadata": ""}
{"_id": "dc1cf39a81e1710e91e0b5f0451140a5", "text": "86m tokens total reward begins at 86 and is cut in half every reward era ( as tokens are mined ) .", "title": "", "metadata": ""}
{"_id": "cccdaeb3608a05a8aa9d5b446975f05a", "text": "A distinct URI ( RFC 3986 ) for a given NFT .", "title": "", "metadata": ""}
{"_id": "df5f600fa6dc31bd7b398d82fc875b72", "text": "Check authorization between account and Service Provider .", "title": "", "metadata": ""}
{"_id": "8b6494b716d7473dcaf307c55c798e8b", "text": "Overrides the default function from FinalizableFundraiser to check if soft cap was reached and appropriatelly allow refunds or simply close the refund safe .", "title": "", "metadata": ""}
{"_id": "df6a4a5509763700bc6d6f6148683e41", "text": "Set new fund address for the smart contract .", "title": "", "metadata": ""}
{"_id": "90f094c1d1fd78c5626923006be841ba", "text": "Determines if a name is available for registration yet .", "title": "", "metadata": ""}
{"_id": "ed66333a1eca4a33dcef4e324ee00463", "text": "Get current timestamp .", "title": "", "metadata": ""}
{"_id": "d8aabf0686a661530784ecbc069f7859", "text": "Finalize , i . e .", "title": "", "metadata": ""}
{"_id": "959e09ed49e8b7f112879e6f19c3d737", "text": "Get real value to return to investor .", "title": "", "metadata": ""}
{"_id": "16b7dac2353e75bb6fba2f520a95feec", "text": "called by the owner then token is paused and upgrading , returns to a non-upgrading state .", "title": "", "metadata": ""}
{"_id": "422246b3f13e11c7a6c39cdade8b18b9", "text": "function to get all animals in the egg phase list .", "title": "", "metadata": ""}
{"_id": "dd14227c8c17ee00e69863d766f211e8", "text": "For creating NFT Collectible .", "title": "", "metadata": ""}
{"_id": "55ba9458c82c13169e21ff896ba87107", "text": "We would like to easily and transparantly share the game's statistics with anyone and present on the web-app .", "title": "", "metadata": ""}
{"_id": "03aed1aed93392f145da886e93463f4b", "text": "Get a certain number of an addresses blocks in descending order .", "title": "", "metadata": ""}
{"_id": "cf7a9b70cf1069aa989df3fc526cf76c", "text": "Buy tokens providing referral code .", "title": "", "metadata": ""}
{"_id": "aa0f21c33886902a7064f38fdcbe9b02", "text": "Gets balance of address .", "title": "", "metadata": ""}
{"_id": "905e067b3faddc1776ab8d1c35c5ab6a", "text": "Change minimal amount of investment .", "title": "", "metadata": ""}
{"_id": "c6bd38cffa88ccd79fa5f1d69da2c9e9", "text": "Add price ( only BW owner can do this ) .", "title": "", "metadata": ""}
{"_id": "99215c40b387c1cdbc99f8f97d8ddf15", "text": "Check if a given account belongs to this DaoChallenge .", "title": "", "metadata": ""}
{"_id": "0085885010731a8adf4d7bbcde37bcca", "text": "Frees free' tokens from the Gastoken at address gas_token' .", "title": "", "metadata": ""}
{"_id": "a4d8fb1848909b2588e415f2401b894b", "text": "burn unsold token and return bonus token .", "title": "", "metadata": ""}
{"_id": "86430c93d974260832231d5a3adb4d05", "text": "do we want lock permanent ? I think so .", "title": "", "metadata": ""}
{"_id": "ccabc27bf334f994f041300a3f1d0cf5", "text": "Decode an RLPItem into a uint .", "title": "", "metadata": ""}
{"_id": "2cc96e2954f37be46b48450ff97e9ec5", "text": "Simple renaming function for the artworks , it is good to keep in mind that when the website syncs with the blockchain , any titles over 32 characters will be clipped .", "title": "", "metadata": ""}
{"_id": "72faf09b04056bdc2c39e57158ab3a95", "text": "Payments are not accepted after ICO is finished .", "title": "", "metadata": ""}
{"_id": "74c9aa54a17348bc67e7f8c75cdb744a", "text": "function to get all children ids of an animal .", "title": "", "metadata": ""}
{"_id": "56c2816029d27d3373896d74748f7cc9", "text": "_nextPrice The next price of token .", "title": "", "metadata": ""}
{"_id": "b4fd510de543a56968b8200f24f5ccc4", "text": "When MIN_CAP is not reach : 1 ) backer call the approve function of the ProjectX token contract with the amount of all ProjectXs they got in order to be refund 2 ) backer call the refund function of the Crowdsale contract with the same amount of ProjectXs 3 ) backer call the withdrawPayments function of the Crowdsale contract to get a refund in ETH .", "title": "", "metadata": ""}
{"_id": "2b341b29de0e72fe3a7de761db50c689", "text": "Buy a gift while create a new gift based on gift template .", "title": "", "metadata": ""}
{"_id": "b6761e90d3b5cbf8865b4882b6501ec9", "text": "send ether ( wei ) to the fund collection wallet override to create custom fund forwarding mechanisms .", "title": "", "metadata": ""}
{"_id": "bedf8543af6e37df6007297929404868", "text": "Fix for the ERC20 short address attack .", "title": "", "metadata": ""}
{"_id": "f6cd2b593a1559922b678e6985224025", "text": "lock one address one address only be locked at the same time .", "title": "", "metadata": ""}
{"_id": "c1ec0f6ac1bd92a48f78f5d6557dc89e", "text": "Finalizes the previous roll and pays out user if they won .", "title": "", "metadata": ""}
{"_id": "6ad3b5c6e803a2e0b25b3eb45173ff6f", "text": "Public mutable functions .", "title": "", "metadata": ""}
{"_id": "d0f6b630038fe4d08802b53fe2187457", "text": "calculate the dividend .", "title": "", "metadata": ""}
{"_id": "e245e3a0c221c28e55bb7696ff29ba7c", "text": "Ends the token sale and transfers balance of tokens and eth to owner .", "title": "", "metadata": ""}
{"_id": "5b730089bfbbff37bdd769aad914f445", "text": "Set the address of the TokenState contract .", "title": "", "metadata": ""}
{"_id": "970748c71b7d18c1b15a7700ee7ea43e", "text": "return the largest of two values .", "title": "", "metadata": ""}
{"_id": "e35a9d0632335286fab46fc52aa13aae", "text": "Get set boxes .", "title": "", "metadata": ""}
{"_id": "6ebc13be9b41d8c4208e964abf1b5266", "text": "Is there a not ended crowdsale ? .", "title": "", "metadata": ""}
{"_id": "9eaf2262a6e3adf7ecfef5cd26f115b7", "text": "like drop / swap except simply elect this address if it is higher than current hat .", "title": "", "metadata": ""}
{"_id": "223bac128dff227437d258f703516082", "text": "payout method for the contract owner to payout contract profits to a given address .", "title": "", "metadata": ""}
{"_id": "3ff80e3f42ed5cffe90cba9169e6a8bd", "text": "Adds an ether deposit to deposits ; only the owner can deposit into this contract .", "title": "", "metadata": ""}
{"_id": "35212f2404138b59afa1abc0d0671209", "text": "Resolve the contract umambigious state .", "title": "", "metadata": ""}
{"_id": "4a1ec4376e90548f914a6434d2291ee3", "text": "Returns whether a multiply operation causes an overflow .", "title": "", "metadata": ""}
{"_id": "b6b4d31c871f1ae4e486167c233e50f9", "text": "notice Finalize crowdfunding clossing funding options .", "title": "", "metadata": ""}
{"_id": "04d613a65403111f56728a40f11e4545", "text": "Calculates the payment given the sender balance for the current period .", "title": "", "metadata": ""}
{"_id": "e1d023efcfdf76842823e05cfa24bd74", "text": "Gets balance including interest for specified address .", "title": "", "metadata": ""}
{"_id": "423cbcb2ee8aa751fe727797384f8c3a", "text": "Enables anyone with a masternode to earn referral fees on P3D reinvestments .", "title": "", "metadata": ""}
{"_id": "d9eb9065b65a33993acb10657ce99d14", "text": "A getter to find the oldest pledge that hasn't been canceled .", "title": "", "metadata": ""}
{"_id": "42825a984dab3670cbca0a7596dd54e1", "text": "Finish airdrop , unpause token transfers .", "title": "", "metadata": ""}
{"_id": "aae17ded08e5491db925ed190e773118", "text": "Creates a new promo Scene with the given name , with given _price and assignes it to an address .", "title": "", "metadata": ""}
{"_id": "d09c0b223ca035a739188e09cda6e3dc", "text": "Convert an affiliate's address into a code .", "title": "", "metadata": ""}
{"_id": "552b3fbdb0a49d7a8f122f5a48e7748b", "text": "Get the hero's required gold for level up .", "title": "", "metadata": ""}
{"_id": "133bc62a156527788e18d6a75256f024", "text": "Modified by amit as on 18th August to stop the tarnsaction if ICO date is Over .", "title": "", "metadata": ""}
{"_id": "b38d04a88baadd3f3ce64d698664d273", "text": "Return the result of dividing x by y , throwing an exception if the divisor is zero .", "title": "", "metadata": ""}
{"_id": "dbcae2840ca187160ab596c1ecd598cb", "text": "override hasClosed to add minimal value logic .", "title": "", "metadata": ""}
{"_id": "9a469be6273419a2f0ee77ecfe181cd3", "text": "Make sure we will send back excess if user sends more then 4 ether before 100 ETH in contract .", "title": "", "metadata": ""}
{"_id": "9a55d8f0d3e2c69de62c106ef143995e", "text": "changeDeadline function .", "title": "", "metadata": ""}
{"_id": "aa38b6df3ab4bbc47966c89f66f4b402", "text": "set platform fee denominated in 1 / 10000 of SAN token .", "title": "", "metadata": ""}
{"_id": "0a43532c8a616c27549dca6fc5a89967", "text": "Allow updating the ETH USD exchange rate .", "title": "", "metadata": ""}
{"_id": "501a33f48c17332f62bd7a2b0c6ea263", "text": "_numberOfCoinSides ( 2 - O obverse 1 reverse ) .", "title": "", "metadata": ""}
{"_id": "1ce92cb96deaf2e11be83c4770bf3979", "text": "sets advisors address .", "title": "", "metadata": ""}
{"_id": "4ae290c59c129384d6c0e73c564a5227", "text": "Override ERC20 interface funtion , To verify token release .", "title": "", "metadata": ""}
{"_id": "236642bdd259055eb4c111dd0092b34b", "text": "ERC721 methods .", "title": "", "metadata": ""}
{"_id": "4157077bb67caff81cee7bd313878490", "text": "Function to make a proposal to work for the client .", "title": "", "metadata": ""}
{"_id": "65eed88b9fc1e5eed4f2759261a50b66", "text": "Set a new symbol .", "title": "", "metadata": ""}
{"_id": "d589af96027cfcfe250c8e2581c92123", "text": "Refund investment , token will remain to the investor .", "title": "", "metadata": ""}
{"_id": "02e1c9db69bf30ce6309650f2dc2f7f0", "text": "Gets the cascade total for the given percentage .", "title": "", "metadata": ""}
{"_id": "27bba003c5a96aa67591fe1f3cb4cdfa", "text": "Transfer function extended by check of eth balances and pay transaction costs with CLI if not enough eth .", "title": "", "metadata": ""}
{"_id": "653a9d0d3cc28cd93a279f94c6c92c5d", "text": "implicitly calls spend - if both signatures have signed we then spend .", "title": "", "metadata": ""}
{"_id": "f37bcb7238e6251b1fbf10d71accdc01", "text": "check if a base is registered .", "title": "", "metadata": ""}
{"_id": "8455393f5ad4db2188540e31f537db0b", "text": "This function takes the amount of ether sent and buys tokens .", "title": "", "metadata": ""}
{"_id": "f7873be7e1b0e5b2f042faf3771f2ce0", "text": "Get the number of games .", "title": "", "metadata": ""}
{"_id": "f7f6d4e9d2166a7be8227ee6a24f78bc", "text": "Only affects pledges with the Pledged PledgeState for 2 things : 1 : Checks if the pledge should be committed .", "title": "", "metadata": ""}
{"_id": "e37a330938887aba5abe008e9324e361", "text": "bonus creator can withdraw their wei after bonus period ended .", "title": "", "metadata": ""}
{"_id": "77d00d8bc9e78c5ab122a4835f0fba94", "text": "override getRateScale to integrate with rate provider .", "title": "", "metadata": ""}
{"_id": "12770c74f28d8640fd5671c8492f19bb", "text": "Get all product ids .", "title": "", "metadata": ""}
{"_id": "f4c9f80fb8437c0e285164252d8b9dd6", "text": "total supply of the tokens .", "title": "", "metadata": ""}
{"_id": "d268d5fa4c228fa60a754b57b8a3b722", "text": "Mints tokens during public sales .", "title": "", "metadata": ""}
{"_id": "667f5cdd672d85259db9c394202d62a1", "text": "Total cumulative charity for all campaigns .", "title": "", "metadata": ""}
{"_id": "ea636ea8e2d467e4e1ac3ecacfdeb33f", "text": "returns number of quarters buyer got .", "title": "", "metadata": ""}
{"_id": "d780eee23df8e4751f7ff5c1876252ff", "text": "Withdraw funds from contract balance to secure hardware wallet .", "title": "", "metadata": ""}
{"_id": "e3ba28095717217cfecf298c9b3fbbc1", "text": "The owner can take away the ownership of any top level domain owned by this contract .", "title": "", "metadata": ""}
{"_id": "71e6ec62d266c708e31d5b4357d7e256", "text": "send tokens out .", "title": "", "metadata": ""}
{"_id": "83d2417ae67bc053d5071282a5ef4605", "text": "( re ) sets the daily limit .", "title": "", "metadata": ""}
{"_id": "9b05183f98616dae6e188181fe2f3941", "text": "Autorize users refunds .", "title": "", "metadata": ""}
{"_id": "215947d547b363096e7745b92942c8cd", "text": "the value of balance .", "title": "", "metadata": ""}
{"_id": "942cc827fb4f146f7cde9817e870c90f", "text": "ICO state .", "title": "", "metadata": ""}
{"_id": "ee47adc51927f7ac8f901729925ef0ba", "text": "This function is used to return participantList .", "title": "", "metadata": ""}
{"_id": "939918b9aa83d08d9d2ee6dc41aa3dab", "text": "Transfer tokens from other address .", "title": "", "metadata": ""}
{"_id": "7d70fda675b83c405da1d3a8b6290031", "text": "Returns the TTL of a node , and any records associated with it .", "title": "", "metadata": ""}
{"_id": "0e7194088a44f4401facaf500df46f33", "text": "This function mints tokens by adding tokens to the total supply and assigning them to the given address .", "title": "", "metadata": ""}
{"_id": "470a9f15f80588e1dc49b0c6925d3d5b", "text": "Returns number of investors .", "title": "", "metadata": ""}
{"_id": "a6de069282add853cbae27717f606ac3", "text": "Destruct all contracts .", "title": "", "metadata": ""}
{"_id": "949c03c6289899b3dfb4e1024f9a6ed9", "text": "manual pause ico .", "title": "", "metadata": ""}
{"_id": "c5d7a219ab33fa6e490be0058fea1b57", "text": "Set release manager if token not released yet .", "title": "", "metadata": ""}
{"_id": "aaf015fa2fb0b053c7fd750505e81b37", "text": "Will make it rain ! Will throw some tokens from the user to some random addresses , spreading the happiness everywhere ! .", "title": "", "metadata": ""}
{"_id": "8aac6f3a6dc81da2bd33f16941110952", "text": "mints specified percent of token emission to pool .", "title": "", "metadata": ""}
{"_id": "9414ba8042afb8c8d6c4b737e85b61f9", "text": "Declare Crowdsale refund start .", "title": "", "metadata": ""}
{"_id": "4f3f5170e8cc4c9cf02e789db3fd0b83", "text": "The dev can use this function to create new companies .", "title": "", "metadata": ""}
{"_id": "94bfe5e2610ec44fe72fcf4e2d2f0ed9", "text": "buy into the contract .", "title": "", "metadata": ""}
{"_id": "5eb38520e02e8ffcb7350976037f35e5", "text": "Get info about specific round's investment , by investor .", "title": "", "metadata": ""}
{"_id": "e37cbfb8a0af86c703af68ca49b309bb", "text": "Checks if the a function is allowed in the current stage .", "title": "", "metadata": ""}
{"_id": "fa23d258147eed6e1c86547cd0d92190", "text": "Internal transfer , only can be called by this contract .", "title": "", "metadata": ""}
{"_id": "ee527edd743d393e280c946d4edc6132", "text": "pay to vote again ! I don't care ! . . . but .", "title": "", "metadata": ""}
{"_id": "9685be496aa9bfa22014ee4631407a14", "text": "Called by the owner to pause , triggers stopped state .", "title": "", "metadata": ""}
{"_id": "ef1da9270932ca7ae0b2bba101df3cb2", "text": "17ce lift a ban plan for yearly .", "title": "", "metadata": ""}
{"_id": "d71184dcb5ae70be7a38b79650b15b50", "text": "used to manually set Stage to Failed when no users have bought any tokens if no buy ( ) s occurred before timeoutBlock token would be stuck in Funding .", "title": "", "metadata": ""}
{"_id": "bf3c89f46e61521c6cf8b47513c9f7ca", "text": "check if the given account is available .", "title": "", "metadata": ""}
{"_id": "7f60b36f0f32e7b089d49111fffbb4b3", "text": "State checker .", "title": "", "metadata": ""}
{"_id": "1732bd609ebc9be11cf073d0b7e17735", "text": "Modifier to check whether transfers are unlocked or the founder is sending the funds .", "title": "", "metadata": ""}
{"_id": "5fa1b0d78cc71b4b6cfdaeb8d0a15c13", "text": "only owner address can do manual refund used only if bet placed + server error had a place filter LogBet by address and / or diceRollHash check the following logs do not exist for diceRollHash and / or playerAddress diceRollHash before refunding : .", "title": "", "metadata": ""}
{"_id": "219770370019f6a657c39db03bac5b77", "text": "deprecate current contract .", "title": "", "metadata": ""}
{"_id": "f7512c724cd6e30e02f673479ec590cb", "text": "Escrew and start game .", "title": "", "metadata": ""}
{"_id": "6439850e11cad879ef6618c01a2227b3", "text": "Central Bank .", "title": "", "metadata": ""}
{"_id": "7cc1e43af5f8c505e6d6d74f20ac083c", "text": "Raise total cap .", "title": "", "metadata": ""}
{"_id": "0267d4ee4f1d6b4eb12bb93a09381f21", "text": "TNTOO withdraw as ETH .", "title": "", "metadata": ""}
{"_id": "54e3bc6419b65acbab49f52496025333", "text": "Returns all the relevant information about a specific opinion .", "title": "", "metadata": ""}
{"_id": "82114034673d1071e8deefeeb96e9fb9", "text": "Allows to buy a sale item , completing the sale and transferring ownership of the NFT if enough Ether is supplied .", "title": "", "metadata": ""}
{"_id": "b55b49c69eba4d30a2a8cface482b771", "text": "controller of NLF add NAC to update NLF balance this NAC come from 10 trading revenue .", "title": "", "metadata": ""}
{"_id": "4627153283d52f014953812810a78e80", "text": "entry to buy tokens .", "title": "", "metadata": ""}
{"_id": "75df9c0181c9b61a06bd4e8e29fe1cc6", "text": "This contract only defines a modifier but does not use it it will be used in derived contracts .", "title": "", "metadata": ""}
{"_id": "e4478f24a2b301fb83d50ad2b9e5d8b8", "text": "Adds two numbers and returns result throws in case an overflow occurs .", "title": "", "metadata": ""}
{"_id": "bc557cbc667910398d22a95c41f032aa", "text": "Allow havven to burn a certain number of nomins from an account .", "title": "", "metadata": ""}
{"_id": "d79b9e96f43a1102fccd4a126c94452c", "text": "erc20 methods .", "title": "", "metadata": ""}
{"_id": "ec8b70c82c925103f90b7e9b275963ea", "text": "called by owner for changing blockedTimeForInvestedTokens .", "title": "", "metadata": ""}
{"_id": "19e81225365ac61b41980b3dfe263990", "text": "Internal upgrade master setter .", "title": "", "metadata": ""}
{"_id": "ae185216772ebff9b46560b884e12f38", "text": "delivery token for buyer .", "title": "", "metadata": ""}
{"_id": "7e18486f36366e8c9a7d9d52b98c2897", "text": "sets the sixteen teams that made it through groups to the contract storage .", "title": "", "metadata": ""}
{"_id": "6758efba0068b60b6520df1dd74cd3e8", "text": "An approved user can 'claim' a token of another user .", "title": "", "metadata": ""}
{"_id": "a2e241bc005554c65015a693bf1e4f11", "text": "Define a new hero type ( class ) .", "title": "", "metadata": ""}
{"_id": "3458029d792f29a7c9aee9875b1d50bf", "text": "VIEW APIs ENDS .", "title": "", "metadata": ""}
{"_id": "75ace847ec1c9176302424e3685e8531", "text": "only accepts a value of 0 . 001 ether .", "title": "", "metadata": ""}
{"_id": "3a2001eb149d684e20c75790d795f7c7", "text": "Mint extra token to corresponding token and community holders .", "title": "", "metadata": ""}
{"_id": "5bd43270257a6427f454507c299a5806", "text": "Allows contractOwner to activate / deactivate hashType .", "title": "", "metadata": ""}
{"_id": "dacc423f9d41d91b3b9407eaf6f6f92e", "text": "Set SaleCap .", "title": "", "metadata": ""}
{"_id": "7c7c65844ac17c89f93fd2b2a2c6bd27", "text": "DEBUG ONLY - end this contract , suicide to developers .", "title": "", "metadata": ""}
{"_id": "88ece734e0658844d992fc90735b8bcc", "text": "Change token name .", "title": "", "metadata": ""}
{"_id": "b47719cb1d092977a19d9707496c0ba3", "text": "Save transaction details belong to an address .", "title": "", "metadata": ""}
{"_id": "c9c91cd071db23185fcf8958f909bc5c", "text": "a function to return the minimum of 3 values .", "title": "", "metadata": ""}
{"_id": "4becefdad845a31c78d85e43f50d55aa", "text": "For the ERC20 short address attack .", "title": "", "metadata": ""}
{"_id": "a75516469db08161c571309ebfec45ab", "text": "deposit Ether into the contract for dividend splitting .", "title": "", "metadata": ""}
{"_id": "cb7f380b12b851ba58c9e790d0203072", "text": "calculates wmount of DANS we get , given the wei and the rates we've defined per 1 eth .", "title": "", "metadata": ""}
{"_id": "338aac8aaf64ed3f19e646cee6cd08a4", "text": "To handle ERC20 short address attack .", "title": "", "metadata": ""}
{"_id": "5c8a8b2ed52c119652f661335ef498ec", "text": "Creates a transition from 'fromId' to 'toId' .", "title": "", "metadata": ""}
{"_id": "511a1f5011b06bff9ff3c40b7ed12a4d", "text": "transfer KRS from other holder , up to amount allowed through krs . approve ( ) .", "title": "", "metadata": ""}
{"_id": "492128868c08b30f88557e2709918641", "text": "Extract Ethereum address worth of data from the bytes stream .", "title": "", "metadata": ""}
{"_id": "de98084d4b58f85f504ac56ec270421f", "text": "holder to spender allowance .", "title": "", "metadata": ""}
{"_id": "969b3b0660632059e0df2100e995d532", "text": "May reroll one kitty move .", "title": "", "metadata": ""}
{"_id": "d017d555a78565f29d9f89f19df1d0ab", "text": "Internal function to deliver tokens for bounty , pre-ICO or ICO with determined freezing periods .", "title": "", "metadata": ""}
{"_id": "ee03def734175595f1ec7be7acf1776c", "text": "Removes authorized to execute several functions from subOwner .", "title": "", "metadata": ""}
{"_id": "384094e53df475d2fd6dbab5a8c2cef0", "text": "change community tokens holder .", "title": "", "metadata": ""}
{"_id": "0228002c7eaf357e90701d41167a57d2", "text": "Recovery donated ether .", "title": "", "metadata": ""}
{"_id": "32e1dc7c3937d5ea22d72d5423f477d8", "text": "Check whether the _operator address is allowed to manage the tokens held by _tokenHolder address .", "title": "", "metadata": ""}
{"_id": "da0452456b3dcd93a0a85f7ca6de69a4", "text": "The hash for all Know Your Customer information is calculated outside but stored here .", "title": "", "metadata": ""}
{"_id": "c89900d05747c321cb29ddcee8c6a5a2", "text": "increase the amount of eth .", "title": "", "metadata": ""}
{"_id": "36b78eedea6bd022bc122b12749069e4", "text": "read access .", "title": "", "metadata": ""}
{"_id": "44a6a849c63f0ee52af6a8a58a84da2b", "text": "pause once cards become tradable .", "title": "", "metadata": ""}
{"_id": "205a76654f60008d0d3b1e2845f836e7", "text": "Pause the entire game , but let users keep withdrawing battle value .", "title": "", "metadata": ""}
{"_id": "2c9ad168833e9aeaed47228af848e0a3", "text": "Check if the pre-tde is going on .", "title": "", "metadata": ""}
{"_id": "6bb876ae07efda2c1b931ac22ab69b22", "text": "Returns the number of tokens based on the ETH sent and token price .", "title": "", "metadata": ""}
{"_id": "44c5c6840f127a124fc79790021ed6ad", "text": "Changes the value of freeze variable .", "title": "", "metadata": ""}
{"_id": "3b5b8843fe24828c393fa2abc36032a0", "text": "Set current preICO price in wei for one metadollar .", "title": "", "metadata": ""}
{"_id": "3c7facac387444a13f0aecb46b054584", "text": "Used by Oraclize to return value of PushData API call .", "title": "", "metadata": ""}
{"_id": "c0537b47254348138edc31158a8426ef", "text": "Set unfix token price to true .", "title": "", "metadata": ""}
{"_id": "83953f99bd1fd3104df9af9990eab26d", "text": "Validates if new application's deployer is allowed to upgrade current app .", "title": "", "metadata": ""}
{"_id": "2946d76c33fb89d400fe465e9e3ba108", "text": "Computes the current state of an Option given its parameters .", "title": "", "metadata": ""}
{"_id": "8766709b96bbc4a41937960fda8e8e90", "text": "Purchase on a behalf of the sender .", "title": "", "metadata": ""}
{"_id": "bdd8a55ab98ca6e95f0ebc9909eefc4d", "text": "Used to look up balance of a user .", "title": "", "metadata": ""}
{"_id": "2f7628e4725d3c3853e93be9294f5bda", "text": "for registering an Opinion .", "title": "", "metadata": ""}
{"_id": "0242eb94b4a96ef6c16e68d89d7492b9", "text": "This method is for editing your personal note ! .", "title": "", "metadata": ""}
{"_id": "a8522a94b3b1accbb767e50b354d2c8c", "text": "Amount of blocks left to the end of this stage of TGR .", "title": "", "metadata": ""}
{"_id": "070205bfab9afd0c21b74b30d098b25f", "text": "Private Function .", "title": "", "metadata": ""}
{"_id": "b71fcca9045d518ec5f261693224dc99", "text": "Accept any ERC20 gifts .", "title": "", "metadata": ""}
{"_id": "7154f3191d7a98202dd94784cc68b6b6", "text": "Creates an auction and lists it .", "title": "", "metadata": ""}
{"_id": "faa76d618892bfd67bd9fad0f29be11a", "text": "Restricted to registryAdmin .", "title": "", "metadata": ""}
{"_id": "ba208f70c35ff08ab64e107d549dc32c", "text": "For Owner Manager .", "title": "", "metadata": ""}
{"_id": "d47a6e62b3c78c1d416210dbc7351c1d", "text": "contract self destruct .", "title": "", "metadata": ""}
{"_id": "841807abc612272fe2125f7ac49b1171", "text": "Allow maintainer to set the ico contract for transferable permissions .", "title": "", "metadata": ""}
{"_id": "1f21bb0abb4b33de538e74a07329a253", "text": "ERC20 Standard method to give a spender an allowance .", "title": "", "metadata": ""}
{"_id": "011cf170af7494c00e74e785a5a567ab", "text": "Closes crowdsale and changes its state to Finalized .", "title": "", "metadata": ""}
{"_id": "7eeac3e6ec00c5a87c945bff572e10c3", "text": "Update the global max contribution .", "title": "", "metadata": ""}
{"_id": "d4a6b8bfacb16ebf6cf5e7d6dd5cfa75", "text": "Performs conditional transitions .", "title": "", "metadata": ""}
{"_id": "2c96c455601ce0317ec5cd3559b6336d", "text": "Makes a transfer with specified commission .", "title": "", "metadata": ""}
{"_id": "b8dc27f0bc64ab5c33f853a64fe6a378", "text": "Calculates the share price of the fund .", "title": "", "metadata": ""}
{"_id": "f6288b20791a8b7d0558f44d29e84867", "text": "adds a single animal of the given type .", "title": "", "metadata": ""}
{"_id": "43be121fcd730ab938e7a65d4ee7ed99", "text": "Remove fabric .", "title": "", "metadata": ""}
{"_id": "582d48bb7326f8404b3bacb17d9f1f80", "text": "overrides transfer function with modifier to prevent from transfer with invalid address .", "title": "", "metadata": ""}
{"_id": "5a04f2ce59e2e77d609c39cfea0fc0e9", "text": "Used to delay start of ICO .", "title": "", "metadata": ""}
{"_id": "0428182773fc82ca4a7844a79ffde78b", "text": "Change Owner .", "title": "", "metadata": ""}
{"_id": "ea6a3f8fdac78f772838e57e176e3681", "text": "finalize an unsuccessful ICO : - enable the refund - close the ICO not successfully .", "title": "", "metadata": ""}
{"_id": "5b331335fca2f8cda8c812ae5c0c9902", "text": "Allow the current owner to revoke control of the contract from another owner .", "title": "", "metadata": ""}
{"_id": "ead2eebbb123026a90a2503a27ba5b48", "text": "Recover any mistakenly sent ERC20 tokens to the Token address .", "title": "", "metadata": ""}
{"_id": "9b2b28271d9740e721b1008d4ad8af1e", "text": "Public ( player ) functions .", "title": "", "metadata": ""}
{"_id": "9da468cef3ce646ea42a65791c05b4bf", "text": "Opens a new channel or tops up an existing one , compatibility with ERC 223 .", "title": "", "metadata": ""}
{"_id": "e4174f24fefba9eb5063903103215e4f", "text": "we here repopulate the greenlist using the historic commitments from www . napoleonx . ai .", "title": "", "metadata": ""}
{"_id": "4c86d788ae5924869501dc9751c6f4c2", "text": "Revoke a membership and immediately assign the membership to a new member .", "title": "", "metadata": ""}
{"_id": "34c03ab6d6a5958dfbe40cd80ec964f8", "text": "Returns reward and profits .", "title": "", "metadata": ""}
{"_id": "73dba8d8f4c5755659b47cd103ec9a02", "text": "Iterate through milestones .", "title": "", "metadata": ""}
{"_id": "acb7fcb98257bfde44906fc8084d780b", "text": "Transfers the balance from Multisig wallet to an account .", "title": "", "metadata": ""}
{"_id": "c81de6d64cbbcbce0edd1f7a1fa23886", "text": "Return the units of fiat per nomin in the supply .", "title": "", "metadata": ""}
{"_id": "2b8f672c295b404187668f198e1892a2", "text": "Sets the account where fees will be transferred to .", "title": "", "metadata": ""}
{"_id": "3ab74406501accdbd9d9fa8c0ab99d09", "text": "set a new action and set a value of zero on a vote .", "title": "", "metadata": ""}
{"_id": "62e44517cf3054ca53054e6a571e791a", "text": "Get Certification Document from DocType .", "title": "", "metadata": ""}
{"_id": "d6783ff39a0367c04a542a28bb376b0a", "text": "Hash Helpers .", "title": "", "metadata": ""}
{"_id": "9a7d232ab0603c1e02fe11c030a968ca", "text": "Allows the current owner to transfer mint control of the contract to a newOwner .", "title": "", "metadata": ""}
{"_id": "f9a208d15c8d47666083de6695fdea29", "text": "Return all relevant data for an animal .", "title": "", "metadata": ""}
{"_id": "6b6e7e6cfe3b915cc92dc02708f7ce94", "text": "set new oracle address .", "title": "", "metadata": ""}
{"_id": "bc4a1a0dc6c54b5b820f9c520d9ba88e", "text": "Returns the amount of Ether that can be sent to . fundCapital ( ) .", "title": "", "metadata": ""}
{"_id": "80fa2071bf67e485e1d5f08553834272", "text": "Finish Round D and mint tokens AppicsFund , EcosystemFund , SteemitFund , .", "title": "", "metadata": ""}
{"_id": "46b3800a69ca7cb4026b69c42ee7fbf0", "text": "Function used to release token of team wallet .", "title": "", "metadata": ""}
{"_id": "f78db9b83f12f03f1e7bdd81225ae47b", "text": "common buy for ether and non-ether .", "title": "", "metadata": ""}
{"_id": "f0b26a0997b8e1203e14bfea788d0cb1", "text": "Returns the length of a null-terminated bytes32 string .", "title": "", "metadata": ""}
{"_id": "dec477f908b997e3809c1e7bf0283f6c", "text": "Method called when new seller joined the program .", "title": "", "metadata": ""}
{"_id": "fa22172cd7b0d4927808e7a65090b512", "text": "Try to execute proposal .", "title": "", "metadata": ""}
{"_id": "e90d43e81ab4d3a7bcf5ce4d687ce105", "text": "After the refund period , remaining tokens are transfered to the company wallet .", "title": "", "metadata": ""}
{"_id": "d66459406f2415d27f974fb18fb3d4fd", "text": "Set token name .", "title": "", "metadata": ""}
{"_id": "9e036606f1d0c5145b775aaf1ad77bc6", "text": "set systemAccount .", "title": "", "metadata": ""}
{"_id": "11f0ba7cd365ea6c048e0f637781b9eb", "text": "sends the tokens to new contract .", "title": "", "metadata": ""}
{"_id": "f9e9572364ff0465d04f2a3c1ed1c157", "text": "allocate private stage tokens .", "title": "", "metadata": ""}
{"_id": "dcce17f81ce089a9d70bdce0db6fbf38", "text": "Allows a user to claim a special horsey with the same dna as the race one .", "title": "", "metadata": ""}
{"_id": "fdfa59ed57962c5fcfef345b04db8763", "text": "Returns the user-id associated to a wallet .", "title": "", "metadata": ""}
{"_id": "b6e5e311288d35a4a0ea0f4049a649ec", "text": "Get token count by transaction id .", "title": "", "metadata": ""}
{"_id": "b3a2a311ee1f2f4d45d936a965b77097", "text": "update last multi pids who boungt key .", "title": "", "metadata": ""}
{"_id": "7c4cc1dce5c5d663aebbccd5d6fe06cf", "text": "Called by oraclize to return generated random number .", "title": "", "metadata": ""}
{"_id": "e1818a7fd2e66059554838d7acb85362", "text": "Create a new payment channel between two parties .", "title": "", "metadata": ""}
{"_id": "b4223088afc13a259fa03174a91faba2", "text": "setPrice - sets the price of a product .", "title": "", "metadata": ""}
{"_id": "b8e1027fd654e09bc5e831ecb6c18e59", "text": "accepts calls from owner only .", "title": "", "metadata": ""}
{"_id": "594e8d4a963dc78eded3be5052a2f50a", "text": "Throw if contract is registered .", "title": "", "metadata": ""}
{"_id": "1757c7bdbef38ae47281ff8acaa87320", "text": "Fills a buy order in EtherDelta .", "title": "", "metadata": ""}
{"_id": "7d6dc9dfeac436fd0da977ada0d3652b", "text": "Parameter can be used only once .", "title": "", "metadata": ""}
{"_id": "936878cd551c4b04ffe144b30c7eb1cd", "text": "Allows owner to change exchangeLimit .", "title": "", "metadata": ""}
{"_id": "05dbf867954678ea65237062b1b093dc", "text": "To test with JS and compare with actual encoder .", "title": "", "metadata": ""}
{"_id": "575648603cb33b85834c124c4cfd901e", "text": "burn some tokens in this contract .", "title": "", "metadata": ""}
{"_id": "89e180cb04da53ef568824a17d2d8b58", "text": "Check for token ownership .", "title": "", "metadata": ""}
{"_id": "4687bdb39049315dbb8e1a074a554420", "text": "This function is used to claim free WET and only works for the first 1 , 000 unique addresses to use it .", "title": "", "metadata": ""}
{"_id": "ef0aeecbc099c0f18ea3b778bb251aad", "text": "Sets authorised address for minting .", "title": "", "metadata": ""}
{"_id": "2402640c410bed2e5a109ef01dd03fe0", "text": "Compute all winners and losers for the first round .", "title": "", "metadata": ""}
{"_id": "1f9453f045ce21fbf4df837c968f8676", "text": "can only add / change tier contract in between mining cycles .", "title": "", "metadata": ""}
{"_id": "9602506315b8aa8df1245dd7f4d849cf", "text": "called by the owner on end of emergency , resumes Sale .", "title": "", "metadata": ""}
{"_id": "ec86a5f8183cc0e2b05ca9dffa54ac46", "text": "inputs passed in to this function based on the parameters above .", "title": "", "metadata": ""}
{"_id": "3f7779de30136ecada4f54f12c9fd60d", "text": "Change eth address of agency for recieve fee .", "title": "", "metadata": ""}
{"_id": "7b71d1c678bc74e6110ed67a2b62220d", "text": "Add money to the contract in case balance goes to 0 .", "title": "", "metadata": ""}
{"_id": "dc554e2f0fee2418cf3ffb38b4d6e5a4", "text": "Set RntTokenProxy address .", "title": "", "metadata": ""}
{"_id": "ec07860985ef8ce9ca958fd5f8adda05", "text": "List of all Wonder IDs assigned to an address .", "title": "", "metadata": ""}
{"_id": "4b67a607a4162c8e7e0b6e5847d9c70c", "text": "Increase the amount of gas to be charged later on completion of an escrow .", "title": "", "metadata": ""}
{"_id": "c2c09172eb39dc4c142499ad3a33284e", "text": "WARNING ! This will remove you'r existance from the company , this is irreversible and instant .", "title": "", "metadata": ""}
{"_id": "4c195e1832f64da084e1b7a53a29902d", "text": "current amount of prize fund .", "title": "", "metadata": ""}
{"_id": "4cf7027a8ad4dd1dc6ba77fcfa372561", "text": "Transfers tokens from the sender's account to another given account .", "title": "", "metadata": ""}
{"_id": "8638ad9a6f56a8a88f3642b75229beb7", "text": "Owner can remove allowance of designated presale contributor .", "title": "", "metadata": ""}
{"_id": "9d592ea785b8260ea2680ba19089c0fd", "text": "Modifier , which only allows server to call function .", "title": "", "metadata": ""}
{"_id": "c8996c6285a1e8e65ea33ced35a08880", "text": "Add modifier of onlyCOO .", "title": "", "metadata": ""}
{"_id": "121ff090448d89ea07456a10f5977dac", "text": "Standard ERC677 function that will handle incoming token transfers .", "title": "", "metadata": ""}
{"_id": "5a1031e99f5345a597bf7a8160c740b5", "text": "Set AMO to Ether rate for round .", "title": "", "metadata": ""}
{"_id": "67310b42c8e669cb78050b5c910b32ba", "text": "Allows management to update the artist account ( where commission is sent ) .", "title": "", "metadata": ""}
{"_id": "c7d4779244c573033497b1676715fd77", "text": "Returns only Text .", "title": "", "metadata": ""}
{"_id": "cfca7d3fcd28157bd6fd40bb377232b7", "text": "Internal function to generate a SPECIAL horsey token we then use the ERC721 inherited minting process the dna is a bytes32 target for a keccak256 .", "title": "", "metadata": ""}
{"_id": "5d389efe644294e901e99f4af783fef5", "text": "Returns the address currently assigned ownership of a given Lambo .", "title": "", "metadata": ""}
{"_id": "6ff2c27e36c43f6b2b14be1f49a647d5", "text": "determine player's affid .", "title": "", "metadata": ""}
{"_id": "c3485406d67d334663d9993367ac301b", "text": "Allow _spender to withdraw from your AACount , multiple times , up to the _value amount .", "title": "", "metadata": ""}
{"_id": "2fa3a75890b7afd6617c6a7005c6c584", "text": "Migrate data from the original contract .", "title": "", "metadata": ""}
{"_id": "47a762c917a965037a9e367316fc93b3", "text": "called by customer or service provider to unhold subscription .", "title": "", "metadata": ""}
{"_id": "9a6ecfde3348ec7a62dcab0a8bdab23a", "text": "Helper function to return a min between the two uints .", "title": "", "metadata": ""}
{"_id": "a25ed419f8490fd9a4a66972677dce27", "text": "Compute the amount of DOR token that can be purchased .", "title": "", "metadata": ""}
{"_id": "4a72f5e311d57dbffd9341c4680873a7", "text": "Indicates whether or not an certain amount of an order can be traded .", "title": "", "metadata": ""}
{"_id": "3496fced7d840eda37836ae55d76637b", "text": "New token emission address setting up .", "title": "", "metadata": ""}
{"_id": "465eefa7e8cb439b5cb2ced99ce26801", "text": "Allows the owner to grant presale participants their tokens .", "title": "", "metadata": ""}
{"_id": "0736369628c8cb568350ab7766b8faa3", "text": "createContractToken Adds new ERC721 Token .", "title": "", "metadata": ""}
{"_id": "340d30ad780a1639f6eb3f894c9ed5cf", "text": "update randomness , will be used to find next Nonce .", "title": "", "metadata": ""}
{"_id": "8ebd0dc3a78639043b3e364763e6bf3e", "text": "Functional modifier for rejecting the interaction of senders that are not minters .", "title": "", "metadata": ""}
{"_id": "b5dc84ceb81dda6a248a2da27bf513b5", "text": "check if crowdsale still active based on current time and cap .", "title": "", "metadata": ""}
{"_id": "e414a7e974f635d9474225fe3df0ac95", "text": "This contract doesn't handle setting the Masterpiece's next listing price .", "title": "", "metadata": ""}
{"_id": "56829ea519abb2374f3f8d2d8c0a1240", "text": "true if in period or false if not .", "title": "", "metadata": ""}
{"_id": "0d77717d51dd704deb0d9eba0e2ed3cf", "text": "Implements the criterion of the funding state .", "title": "", "metadata": ""}
{"_id": "27d1b57d6db09d5884bc529fc711bb54", "text": "transfer via allowance .", "title": "", "metadata": ""}
{"_id": "dcb669411e9e1cca82e7bd36a0557054", "text": "Burns a specific amount of tokens from owner .", "title": "", "metadata": ""}
{"_id": "cdc73f148c15b8455514671417b6bf37", "text": "Creates a new emoji with the given name .", "title": "", "metadata": ""}
{"_id": "72653d4398f6ce82ed594b8f151daba1", "text": "For example - After 5 years of the project's existence , all of us suddenly decided collectively ( company + investors ) that it would be more profitable for everyone to switch to another smart contract responsible for tokens .", "title": "", "metadata": ""}
{"_id": "b98adff5dfbfd9c7dbc12d9ae72904f1", "text": "getter to retrieve divident owed .", "title": "", "metadata": ""}
{"_id": "1e020dde9a72ad9fcafc506bbb63461c", "text": "purchase DGX gold using ETH .", "title": "", "metadata": ""}
{"_id": "f258b169dff564be123fa3c24258e443", "text": "Checks if item is for sale .", "title": "", "metadata": ""}
{"_id": "989d841719ea4c6246448096c04a113e", "text": "oraclize callback , only oraclize can call , payout should in active status .", "title": "", "metadata": ""}
{"_id": "0fe4023959dc1e347737fa55a5f0195b", "text": "sets the lockup contract if the crowdsale hasn't started .", "title": "", "metadata": ""}
{"_id": "95abe84759f45e96e603b93774bad7da", "text": "This method is used for definition of discountTokens borderlines .", "title": "", "metadata": ""}
{"_id": "7614db2072eefd23dc34a79ea65fac87", "text": "deposits we're not using the third argument so we comment it out to silence solidity linter warnings .", "title": "", "metadata": ""}
{"_id": "d3a07f1e6c7c2a1513731a67049dd73c", "text": "Add oracles to whitelist .", "title": "", "metadata": ""}
{"_id": "a4afa98488d0e8a9f2ec75f93bab83db", "text": "State changing public methods made pause-able and with call logging .", "title": "", "metadata": ""}
{"_id": "05ba780b146224271be182eeb47d2160", "text": "new owner only activity .", "title": "", "metadata": ""}
{"_id": "53a3f771fb392901ea0b6711e13577ac", "text": "mint token to new address , either contract or a wallet param OneledgerTokenVesting vesting contract param uint256 total token number to mint .", "title": "", "metadata": ""}
{"_id": "453c7899dd34ed6ef8d4da77e1e2af43", "text": "Return the total number of assets in an edition .", "title": "", "metadata": ""}
{"_id": "cd74fb798f7d8b69ca2022cf10253f33", "text": "When transferred , price and approved are set to 0 but attrs remains .", "title": "", "metadata": ""}
{"_id": "8d0ab4e3c4026fd535f113342381f92b", "text": "Withdraw tokens only after crowdsale ends .", "title": "", "metadata": ""}
{"_id": "a75e6b9724e97131d188b0bf0221f3db", "text": "get total percentages x2 .", "title": "", "metadata": ""}
{"_id": "a190b1af12644c1ce0e485bd95dd3a1a", "text": "Utility function for heapSort .", "title": "", "metadata": ""}
{"_id": "a8cf0bcfbcf40d0ef81fffd10cfa903f", "text": "Creates a new Rare Token Auction .", "title": "", "metadata": ""}
{"_id": "c2fe7a8b632a0bd97fc381d36e9d2204", "text": "Burns / destroys specified amount of Presale tokens for caller / method invoker / message sender .", "title": "", "metadata": ""}
{"_id": "9dee982badc0f47e9f65731e44658bc4", "text": "removed a metadata of an object .", "title": "", "metadata": ""}
{"_id": "ad7e630cacd79a646c0ad47a6b4d7655", "text": "This is a bookkeeping function which updates the state for the funder when top up their funds .", "title": "", "metadata": ""}
{"_id": "a3a0789b4a90086fd1ce000150a8e770", "text": "Search for the correct insertion spot and submit a bid .", "title": "", "metadata": ""}
{"_id": "210ea40e7d3383d2a0a3e0c6f070bf3e", "text": "Validate that a provided ECSDA signature was signed by the specified address .", "title": "", "metadata": ""}
{"_id": "8c34cc18994a6833d7146d572f753e4e", "text": "Set new Ico HardCap .", "title": "", "metadata": ""}
{"_id": "ef483b29426b4f3dcdccb95591cb2c1d", "text": "Returns balance of a queried address .", "title": "", "metadata": ""}
{"_id": "7cea223418201a78653d4c2bbdac49cc", "text": "Transfer funds from an Option to a user's balance .", "title": "", "metadata": ""}
{"_id": "3524ba20fe18d7a33eced27746fabe35", "text": "Calculate vested claimable tokens on current time .", "title": "", "metadata": ""}
{"_id": "e0f0e82d37f55ccb24a8cdf39dfae737", "text": "Process a payment using only regular TRVL Tokens with a specified reward percentage .", "title": "", "metadata": ""}
{"_id": "1be3a88fb5432265e6d6fd5651bc5c64", "text": "mint to partner with lock ( non-sale ) .", "title": "", "metadata": ""}
{"_id": "254cd2add7e762a76e3e7ad11367b4ac", "text": "Changes the number of required confirmations to one .", "title": "", "metadata": ""}
{"_id": "a010815a83b291670d5ca90b09e6d141", "text": "Converts wei to smallest fraction of Holo tokens .", "title": "", "metadata": ""}
{"_id": "f62690df96e7c12352ad36021109c7bd", "text": "returns amount of ether a player is able to withdraw .", "title": "", "metadata": ""}
{"_id": "02461f6fe155992d0424d1247025d403", "text": "Will allow multiple minting within a single call to save gas .", "title": "", "metadata": ""}
{"_id": "9e198b1142b99d64c631d508ce39c06c", "text": "Active new conflict resolution contract .", "title": "", "metadata": ""}
{"_id": "3f04dea47b0de5ffb9aba2386fb19170", "text": "kill contract .", "title": "", "metadata": ""}
{"_id": "d7b91787d4d73c2e6ab9c396618c90b8", "text": "The callback function which oraclize will call after newRound has been called .", "title": "", "metadata": ""}
{"_id": "53112e841886a632160625019b2239d1", "text": "This function allows _spender to withdraw from your account , multiple times , up to the _value amount .", "title": "", "metadata": ""}
{"_id": "2fbdda226dfac478af34be7362dd31c6", "text": "function for front-end token purchase on our website * * * DO NOT OVERRIDE buyer Address of the wallet performing the token purchase .", "title": "", "metadata": ""}
{"_id": "e4fd4475adc19504222f105ae3735568", "text": "this is used to turn off the crowdsale during stage 3 .", "title": "", "metadata": ""}
{"_id": "f1804d7d807381edf266e41eaeb2dfa9", "text": "Determines whether the given transfer is possible .", "title": "", "metadata": ""}
{"_id": "a3fc6fbaaefef23f6cd0cc0593469023", "text": "update the allocation storage remaining balances .", "title": "", "metadata": ""}
{"_id": "946914ad2c96e5151a664eff5178a707", "text": "This is the way to refill token balance by ethers .", "title": "", "metadata": ""}
{"_id": "46dcb5afc1952259c0f0890c9959cc71", "text": "Finds the index of a given value in an array .", "title": "", "metadata": ""}
{"_id": "0b33ef00ba5c2ddbdb70d43c1f63c42c", "text": "price uint256 .", "title": "", "metadata": ""}
{"_id": "98f2d1e41d5b894bca7df3bf51482865", "text": "Withdraw tokens only after lock-up ends , applying the staged lock-up scheme .", "title": "", "metadata": ""}
{"_id": "5c48120d6d4178decf2af6a1aaacf5ef", "text": "Allows core team account tokens to be released .", "title": "", "metadata": ""}
{"_id": "1d3471f0228a18472ac501c711ad2ff9", "text": "returns the current Token value of the escrow for competing the favor this is the token balance of the escrow contract in the main contract .", "title": "", "metadata": ""}
{"_id": "77321d9a8711d34838b425d0a5a5affe", "text": "Throws if transfersEnabledFlag is false and not owner .", "title": "", "metadata": ""}
{"_id": "93f8f5763c28aad1fea01a985a4e5208", "text": "This code can be executed only after ICO .", "title": "", "metadata": ""}
{"_id": "de72b2d5a89ee77d8c0b2275dc7ae67f", "text": "Transforms a bytes32 value taken from MakerDAO's Medianizer contract into wei per usd rate .", "title": "", "metadata": ""}
{"_id": "85a300079adb10712e9b8a0e86615b73", "text": "Changes the address to forward all the funds .", "title": "", "metadata": ""}
{"_id": "a43befc8e511708c1213033c8e9bd39b", "text": "Deposit any ERC20 token into this wallet .", "title": "", "metadata": ""}
{"_id": "0c7dda8a9619a7b26d62fcbb289fecce", "text": "Create investition .", "title": "", "metadata": ""}
{"_id": "b3616d3c5998aaf7f33a1c9231157709", "text": "Remove a ERC20 token contract address from the whitelisted ones .", "title": "", "metadata": ""}
{"_id": "ccddb4a18127e70154ac09c90d17832c", "text": "Set new wallet .", "title": "", "metadata": ""}
{"_id": "6d9e347ec37a6f5f35b5ab85af9f034e", "text": "Checks whether the period in which the crowdsale is opened .", "title": "", "metadata": ""}
{"_id": "d555ab2ca23a137ea09e7c77de281fb8", "text": "distributes eth based on fees to com , aff , and p3d .", "title": "", "metadata": ""}
{"_id": "e29e74c0842e0ad38f1db9e6b053d944", "text": "Secutity modifier .", "title": "", "metadata": ""}
{"_id": "db8d1bc4a3c97ed11aa1ee8613a88ee3", "text": "Allow another contract or user to spend some tokens in your behalf .", "title": "", "metadata": ""}
{"_id": "42cd7df0d810f0407f11a308999616f7", "text": "Amount of tokens that can be sent according to provided percentage .", "title": "", "metadata": ""}
{"_id": "66bbaa6c124449ba1d81f3436ad1b9d1", "text": "migrates single investor .", "title": "", "metadata": ""}
{"_id": "9b3fd0ca84568b1dc1989d1801755f51", "text": "Creates a new Girl with the given name .", "title": "", "metadata": ""}
{"_id": "69d8855ba8c1f29be58747a1ddad5d83", "text": "Returns the symbol of the token .", "title": "", "metadata": ""}
{"_id": "d9b6682d45dd83affac80a3422d46e9d", "text": "Price of MET at nth minute out during operational auction .", "title": "", "metadata": ""}
{"_id": "c6da633122ba418a76052d1eae3804a9", "text": "increase price with 5 .", "title": "", "metadata": ""}
{"_id": "85b06a468844cab5b2e05adc7f3bc7eb", "text": "allows the batch settlement of investments made .", "title": "", "metadata": ""}
{"_id": "7ddc06048b7be8615fca8b434c2a32c0", "text": "votes on contract proposal payable to ensure only serious voters will attend .", "title": "", "metadata": ""}
{"_id": "2e1ded700bf29a87d6a6b0767f924aa9", "text": "Returns unpayed wei for a given address .", "title": "", "metadata": ""}
{"_id": "0a73afaf6cd9d7ef1adb9b183bb2e628", "text": "success : The success of the call to the application's updateInstance function .", "title": "", "metadata": ""}
{"_id": "9d93bd6ddcde232732009073bb741749", "text": "get the current hardCap for the current SaleState .", "title": "", "metadata": ""}
{"_id": "e5c4e4afcba1f60417999d79bd25c13a", "text": "Funtion to update maxWei contribution .", "title": "", "metadata": ""}
{"_id": "58d690ec4ecbd9339e4654c741c755ad", "text": "Only owner is allowed to perform this operation .", "title": "", "metadata": ""}
{"_id": "504cfe39c7daa99c53ac6015fcb14d4f", "text": "Allows the current owner to change the ETH to token generation rate .", "title": "", "metadata": ""}
{"_id": "66d639ce057d5173388b5c2c2ea509ba", "text": "Revoking grant .", "title": "", "metadata": ""}
{"_id": "2a4108416e076effb4db781ca0fd8717", "text": "simply a boolean to indicate this is the contract we expect to be pure means they promise not to read from or modify the state .", "title": "", "metadata": ""}
{"_id": "03e3a9848b34f50c6227206dde509ebc", "text": "Limit amount of token transfer after the crowdsale is over .", "title": "", "metadata": ""}
{"_id": "f11be0f6a06d4949428eb00d34a9ae28", "text": "Used for forcing ensureStage modifier .", "title": "", "metadata": ""}
{"_id": "9e5b1d416ab8fc2d18df0c8dadec31f5", "text": "Returns if an users has KYC approval or not .", "title": "", "metadata": ""}
{"_id": "ccb234cdccf2a5138bc189c531a35260", "text": "Migrate to a new Minter by transferring ownership of the token as well as the current Minter's token balance to the new Minter .", "title": "", "metadata": ""}
{"_id": "0389882506950d48b4c9320375056125", "text": "Disable the seller from cancelling ( i . e .", "title": "", "metadata": ""}
{"_id": "753aae208f224ca29c8267feff06e09c", "text": "getRate function expose token rate that decline is applied .", "title": "", "metadata": ""}
{"_id": "5c37dc7a8fa788e174edba2cb01cefd2", "text": "Check and define how a ship can upgrade .", "title": "", "metadata": ""}
{"_id": "2f225fc784b28cfdf6fdc9053b5a9728", "text": "Function to transfer tokens to participants in the range _from , _to ) .", "title": "", "metadata": ""}
{"_id": "aae8380853842fadaa4e89b1339cca6c", "text": "Below functions are probably not necessary , but included just in case another contract needs this information in future .", "title": "", "metadata": ""}
{"_id": "dc6b2999bc88e11405f817e2c9c02677", "text": "balance of locked .", "title": "", "metadata": ""}
{"_id": "bef0a829b5fae0527155bda693c68438", "text": "create new game .", "title": "", "metadata": ""}
{"_id": "315772cf52eb41e8aff0e0b006daf934", "text": "kill the contract .", "title": "", "metadata": ""}
{"_id": "4a478ab84a3c3f6d5719a93804d42d81", "text": "Withdraw item from marketplace back to seller .", "title": "", "metadata": ""}
{"_id": "7a98c97726d39a8f0bfcbec7845166f3", "text": "Compute the natural logarithm .", "title": "", "metadata": ""}
{"_id": "29874fe4fa7def1434bf338626f9277a", "text": "The price of a product .", "title": "", "metadata": ""}
{"_id": "47b153d6236b2220ef8c763ff5a8003d", "text": "Closes the sale , issues the team tokens and burns the unsold .", "title": "", "metadata": ""}
{"_id": "205061451aca4679ab22b5bf4724b17f", "text": "todo gas ? ? ? .", "title": "", "metadata": ""}
{"_id": "20bfae2578d6e00a4da3229f796c0b34", "text": "Converts given number to base58 , limited by _maxLength symbols .", "title": "", "metadata": ""}
{"_id": "65cbdf7a880e799b7e12dd59ec419f61", "text": "set new rate ( emergency case ) .", "title": "", "metadata": ""}
{"_id": "a5cb361f611e614988c5e28b5f385cb4", "text": "Allocate tokens for team vested gradually for 1 year .", "title": "", "metadata": ""}
{"_id": "e85b1a9ebb737d2ba2c10c8171e84efc", "text": "owner retire hodl safe .", "title": "", "metadata": ""}
{"_id": "8f10378b7852f9152caae0de5053cc2f", "text": "send received tokens to anyone .", "title": "", "metadata": ""}
{"_id": "578797c0640185d38f64dd0e221c5345", "text": "Sets an oversight address , on active or inactive , called before the contract is locked .", "title": "", "metadata": ""}
{"_id": "76aaf55cfaa08235c504e169f142e916", "text": "modifier to allow action only before sale .", "title": "", "metadata": ""}
{"_id": "c08358382cc44eaafa0ab94c6d799372", "text": "Checks the balanse of the address , ERC-721 compliance .", "title": "", "metadata": ""}
{"_id": "b1fa725daf67650450bd560006b0ae24", "text": "Executed when a purchase has been validated and bonus tokens need to be calculated .", "title": "", "metadata": ""}
{"_id": "ebfa7d5f6bf23f66988117fbf65269bb", "text": "forwards ether received to refund vault and generates tokens for purchaser .", "title": "", "metadata": ""}
{"_id": "157b6fab7c234653b9a687be1bcfbb1f", "text": "Convert an uncompressed ECDSA public key into an Ethereum address .", "title": "", "metadata": ""}
{"_id": "cf69efd0ad81811d43f5360b20cab6e2", "text": "current tick ( minute ) of the metronome clock .", "title": "", "metadata": ""}
{"_id": "b8e8d03025f77dcd5ca20a124dfd57f6", "text": "we must do a carefully check when set hatch duration configuration , since wrong value may break the whole cooldown logic .", "title": "", "metadata": ""}
{"_id": "b3b8755b3372b3cc2fe0f4ba32f3167f", "text": "Create new repo in registry with _name .", "title": "", "metadata": ""}
{"_id": "728750c94004e296bf127975c40a7847", "text": "set new wallet address .", "title": "", "metadata": ""}
{"_id": "c3614591b37ec02743b10883919766fd", "text": "Return current running game info .", "title": "", "metadata": ""}
{"_id": "3f5cb581d3a6dc3edfa0b195a7c5b243", "text": "called by CrowdsaleController to setup start and end time of crowdfunding process as well as funding address ( where to transfer ETH upon successful crowdsale ) .", "title": "", "metadata": ""}
{"_id": "4ee0c5fab3d7a623a42749705c0cf659", "text": "Creates a bidirectional link between two nodes on direction _direction .", "title": "", "metadata": ""}
{"_id": "1d895ed809e9db20ab486d878a096c1a", "text": "Allows the owner to transfer tokens , such that the balance of tokens cannot go below getMinTokenBalance ( ) .", "title": "", "metadata": ""}
{"_id": "8ce940c43d1368844eb97c3f0fe4ded5", "text": "transfer owner to another address .", "title": "", "metadata": ""}
{"_id": "35f92bf2afd1aaba97cef80d46581bf4", "text": "function that call after crowdsale is ended releaseTokenTransfer - enable token transfer between users .", "title": "", "metadata": ""}
{"_id": "03dbea666de948141d7b853a64ba4418", "text": "Pause the contract operations .", "title": "", "metadata": ""}
{"_id": "a37a849b9b56ea05bc6f085110ad323e", "text": "add new participant to the mixing .", "title": "", "metadata": ""}
{"_id": "0d3d5cc5a7d4c3173f197a2bf5c6c6a4", "text": "bool Return true if the contract is in ICO Period .", "title": "", "metadata": ""}
{"_id": "e7d099eb5f5996c3b7e15ae83e1d1165", "text": "ICO contract configuration function new_ETH_QCO is the new rate of ETH in QCO to use when no bonus applies newEndBlock is the absolute block number at which the ICO must stop .", "title": "", "metadata": ""}
{"_id": "1889dbd51dc4bbaeba2d303a2a4b8721", "text": "the maximum number of recipients per transaction .", "title": "", "metadata": ""}
{"_id": "ecf8ed948ab35fd4de677356147cb1b9", "text": "100M tokens in teamWallet are locked for 6 months 200M tokens in teamWallet are locked for 12 months .", "title": "", "metadata": ""}
{"_id": "ef7dee168d7a74d06d0ff3a0bb89868e", "text": "Get the index to access a section object from its section identifier .", "title": "", "metadata": ""}
{"_id": "380361307d6d848f8c50fc0dea5c3cc7", "text": "Callback function for Oracalize .", "title": "", "metadata": ""}
{"_id": "2ab23148ba5230783c971bf1c603346c", "text": "bool Return true if the contract is in Pre Sale .", "title": "", "metadata": ""}
{"_id": "b483b57a446772ea8cf6b93278611563", "text": "Public Management - change fee collector .", "title": "", "metadata": ""}
{"_id": "2560c61db84931af102ab77e185b42ad", "text": "Approve an address to spend tokens on your behalf .", "title": "", "metadata": ""}
{"_id": "fad0a0834c76c828602fb7df3f3f6ddd", "text": "To manually allow game locking .", "title": "", "metadata": ""}
{"_id": "1a9a2d711ca0b9b3a88e9ad0dee360f6", "text": "Function to set the crowdsale address .", "title": "", "metadata": ""}
{"_id": "d6bf35be1f937903ac4a9fe35cb65182", "text": "Requests updating rate from LibreOracle node .", "title": "", "metadata": ""}
{"_id": "2c094df9b95e35d3477a9fca54a00069", "text": "Returns all the relevant information about a specific promotion .", "title": "", "metadata": ""}
{"_id": "a5544f18438d6ec82cf60cf7bf3809d4", "text": "transfers IXT .", "title": "", "metadata": ""}
{"_id": "3a4e2559279528ea2931ed67b3604631", "text": "Creates a new token .", "title": "", "metadata": ""}
{"_id": "5ff1f9ae8921c0e6115658132f218bb7", "text": "Get the description of the Module .", "title": "", "metadata": ""}
{"_id": "236ce36ac7ded764b5d0ed55d158c4d3", "text": "Cofoundit can claim their tokens .", "title": "", "metadata": ""}
{"_id": "b8d8fe42080a9662c1e2c08745464fbb", "text": "Function used to set wallets and enable the sale .", "title": "", "metadata": ""}
{"_id": "b204ed370e561917eebe09c77607bab7", "text": "Allows the current owner to give new owner ability to claim the ownership of the contract .", "title": "", "metadata": ""}
{"_id": "cc4eaddacf69c9354247984a9696b449", "text": "Calculate total cost of tokens without fees .", "title": "", "metadata": ""}
{"_id": "b3e12bb8a71fa8df380807b8575950c1", "text": "Function which will return the block commission .", "title": "", "metadata": ""}
{"_id": "01958f123b94b1003276db59c89f3687", "text": "Buy cat that is currently on offer .", "title": "", "metadata": ""}
{"_id": "28b3d648f699fd9f481cbf8823117a73", "text": "overriding Crowdsale hasEnded to add sale limit logic .", "title": "", "metadata": ""}
{"_id": "50161f6f3d0113862a73a07944e84abe", "text": "Ensure there is no sale in progress .", "title": "", "metadata": ""}
{"_id": "eab01453742a994fb8f7ef6133d8dffb", "text": "Adds additional check if the hard cap has been reached .", "title": "", "metadata": ""}
{"_id": "f0a0ddbbfb625172d52e4265ab2fc33b", "text": "function for changing rate of ETH and price of token .", "title": "", "metadata": ""}
{"_id": "20308c6a67734bb77b6dc1368a0f491d", "text": "Get affiliate balance of an account .", "title": "", "metadata": ""}
{"_id": "3c2a2c9ef84df6dc4f10a3e9f1829889", "text": "Used by frontend to get information on a special .", "title": "", "metadata": ""}
{"_id": "1b4ec7cf71b6dd3ab17566147967dc1a", "text": "Remove a Burnup game contract address .", "title": "", "metadata": ""}
{"_id": "7bc3bf5c5a226dff207eafd219c20534", "text": "Activate the token .", "title": "", "metadata": ""}
{"_id": "59372a6e8d1bfa7fdd2977f35ad59213", "text": "Retrieves current LOT token balance of an address .", "title": "", "metadata": ""}
{"_id": "4fe438335217d00170600e9340b2ab07", "text": "Buy tokens function .", "title": "", "metadata": ""}
{"_id": "8fea8702ea8e1d497afb81c6ef294b3a", "text": "Get Certification Document Count .", "title": "", "metadata": ""}
{"_id": "6d9c3ada45c8224579fe1051070de2ae", "text": "NEEDS CREATE_NAME_ROLE and POINT_ROOTNODE_ROLE permissions on registrar .", "title": "", "metadata": ""}
{"_id": "be884a3bcc8f0efd911d70cf74dd2a99", "text": "Pause the token sale .", "title": "", "metadata": ""}
{"_id": "7ddd72ffd35a800a0dbed1fb8e792ee1", "text": "only owner can add destination chains .", "title": "", "metadata": ""}
{"_id": "1edb3cbdb7123eff2eb19d03d7201554", "text": "Initial Contract .", "title": "", "metadata": ""}
{"_id": "8addb8e007b58e3d294978b3a254a063", "text": "Recover signer address from a message by using his signature param hash bytes32 message , the hash is the signed message .", "title": "", "metadata": ""}
{"_id": "0546bd8705ebae690c1b49e7fde79c74", "text": "Allows to add the address and the amount of wei sent by a contributor in the private presale .", "title": "", "metadata": ""}
{"_id": "3b6978d2be0a363e249ed28a0b8ada2e", "text": "Set assetsCertified .", "title": "", "metadata": ""}
{"_id": "512caafa64e8999f6142a728ccde1d61", "text": "add player order .", "title": "", "metadata": ""}
{"_id": "dab918a616270eac20e458c59b492d39", "text": "Withdraw some Ether from contract .", "title": "", "metadata": ""}
{"_id": "83bf0d46d3e75f1ab91f2efaba1fd9aa", "text": "Check confirmation status of the transaction .", "title": "", "metadata": ""}
{"_id": "0a89895fa53baf0eac7ef94e1394185e", "text": "Maker can call this method to create a new TokenTrader contract with the maker being the owner of this new contract .", "title": "", "metadata": ""}
{"_id": "62d7965472a9876e7983d4328327ba4b", "text": "to get the amount of token collectable by any contributor .", "title": "", "metadata": ""}
{"_id": "e8f837ad5ca0ae40fa1bc1162a8bda72", "text": "Allow user to sell all amount of metadollars at once , depend on ether amount on contract .", "title": "", "metadata": ""}
{"_id": "ceb3018f07bfcb38eb56035051bfc4b1", "text": "Getters to allow the same blacklist to be used also by other contracts ( including upgraded QUINToken ) .", "title": "", "metadata": ""}
{"_id": "a6064facfd2d95cb3cf04a8c96d4d952", "text": "Function to remove a minter .", "title": "", "metadata": ""}
{"_id": "a7d5b70d234a7f8a8084f2b3da85db9c", "text": "Access control modifier that allows only the current owner to call the function .", "title": "", "metadata": ""}
{"_id": "5541ca713e4510694c53d6dddf330f36", "text": "Transfer Beercoins to another user .", "title": "", "metadata": ""}
{"_id": "e6d1e6bd4eca27c0ad8b09a29a8025d3", "text": "Create a crop contract that can hold P3D and auto-reinvest .", "title": "", "metadata": ""}
{"_id": "b67f7cad4c6f81df0fb9c15bf0e7b651", "text": "Start presale and track start time .", "title": "", "metadata": ""}
{"_id": "764965c37df499a9c395fdc82ec877e7", "text": "Add audit information .", "title": "", "metadata": ""}
{"_id": "7bb5225d7079f3630a8959336380cd81", "text": "gets how many players an owner owners .", "title": "", "metadata": ""}
{"_id": "2c000169ebd4169dc8b9b1c853b4a6db", "text": "Mint tokens for multiple addresses for Airdrops ( only external ) - Alber Erre .", "title": "", "metadata": ""}
{"_id": "14732e080d8a46fa0f1defaf19506b79", "text": "Sets and resets mutex in order to block functin reentry .", "title": "", "metadata": ""}
{"_id": "ebe934e52cdb15245f1c06fefb4991fe", "text": "implemented function balanceOf of erc20 to know the balnce of any account .", "title": "", "metadata": ""}
{"_id": "3ee20b47a033f358df2d11d80bba6abd", "text": "Add address to Marketing Business Development .", "title": "", "metadata": ""}
{"_id": "489269fdbdc8852be47aaececb797844", "text": "store sent amount as credit to be pulled , called by payer .", "title": "", "metadata": ""}
{"_id": "aa32bd96a56298c6d7ed0c5d45ea88d5", "text": "public function onlyAfterDeadline moves ether to beneficiary contracts if goal reached if goal not reached msg . sender .", "title": "", "metadata": ""}
{"_id": "fdf21ffcb9013d25993f3acfeda47979", "text": "Allows to add a new owner .", "title": "", "metadata": ""}
{"_id": "16665f980ba9403366f04cc74fe62061", "text": "Change the backendWallet that is allowed to issue new tokens ( used by server side ) .", "title": "", "metadata": ""}
{"_id": "eec0144bac6c93a5a3a6b795a6d7e2d3", "text": "Redeems Bskt Token in return for underlying tokens .", "title": "", "metadata": ""}
{"_id": "ed8c04263c3005d86a2b1d0d0af34191", "text": "owner restricted function burns any unsold tokens at end of crowdfund .", "title": "", "metadata": ""}
{"_id": "c09ceffb28a3fc323030502db12f8833", "text": "command to start the auction .", "title": "", "metadata": ""}
{"_id": "a347b4d189c02d053170ed6db2fef9ba", "text": "Used by the owner to set the withdrawal address .", "title": "", "metadata": ""}
{"_id": "6bcce5997d7b403a2c7b49c34bcd698f", "text": "calculator ElectionsMarketSavingsBank . github . io .", "title": "", "metadata": ""}
{"_id": "f968890734bfc34c5942ad500bb09725", "text": "if isPaused true then investments cannot be accepted .", "title": "", "metadata": ""}
{"_id": "c2fe47c58ba497a8013f7651b97c0fca", "text": "Get the current valuation and cut off bid's details .", "title": "", "metadata": ""}
{"_id": "87b5b3d611b98c698fbbf345bd749437", "text": "Breaks when balance 10 20 ether .", "title": "", "metadata": ""}
{"_id": "f61943cedb2d71eeb9c97d4963243198", "text": "Calculate Token price based on an amount of incoming ether ; .", "title": "", "metadata": ""}
{"_id": "c06a5e2e06eb7b88c5569e11043036a2", "text": "Override super createTokenContract , so it'll not deploy MintableToke .", "title": "", "metadata": ""}
{"_id": "b98a35bc74ac696b008dac794f1ca256", "text": "sale coin without time locking only the manager can call this function and this operation should be confirmed .", "title": "", "metadata": ""}
{"_id": "19b5104a6fe6128d2c7c3a6dd206f7e6", "text": "Main modifier to limit access to delicate functions .", "title": "", "metadata": ""}
{"_id": "92803a3590c1afaef90146fd6b7f5a1f", "text": "Grant another address the right to transfer a specific pixel via transferFrom ( ) .", "title": "", "metadata": ""}
{"_id": "b356f677c422250c70cd70e523d9b251", "text": "gets the strings of lockUpAmount of _address .", "title": "", "metadata": ""}
{"_id": "898cc80d3dd525f082ac87c53073ab36", "text": "Add a wallet to the whitelist .", "title": "", "metadata": ""}
{"_id": "d188abb426d684dc26f4baba1c884647", "text": "Used by topWizard to vary the cap on claim price .", "title": "", "metadata": ""}
{"_id": "cd8d5557e45f59393d7352d4dfaf9119", "text": "Helper function that returns the amount of tokens aof an owner minus the amount currently locked .", "title": "", "metadata": ""}
{"_id": "a74cf090cf14b0360125a81bc08b57a6", "text": "Initiate functions that will create the planets .", "title": "", "metadata": ""}
{"_id": "f5a55ddbf8a7b3df05f2bd87e0b5f4ed", "text": "Manually set a share directly , used to set the LinkPool members as owners .", "title": "", "metadata": ""}
{"_id": "ce2b2bc75cba45c33875a7a456f71be8", "text": "Overrided buyTokens method of parent Crowdsale contract to provide bonus by changing and restoring rate variable .", "title": "", "metadata": ""}
{"_id": "29450f2ef224f48065978cccbb780f50", "text": "Adjust the weiPerBtc rate .", "title": "", "metadata": ""}
{"_id": "6f1f5445f98afdf333c1eff11cb1f420", "text": "change TROGLOg controller .", "title": "", "metadata": ""}
{"_id": "8c4c99d157896dce23dcf9830f514692", "text": "Destroy tokens and remove _value tokens from the system irreversibly .", "title": "", "metadata": ""}
{"_id": "4c461819b42d712c473acdafccaade13", "text": "Throws if destroy flag is not enabled .", "title": "", "metadata": ""}
{"_id": "da2b1b1b693baac91ad8ce1f8dcc5b33", "text": "forwarding multiple transactions : check whitelist .", "title": "", "metadata": ""}
{"_id": "dc3dc5646d1ec29009442859ce557312", "text": "Bind an existing certificate to a wallet - can be called by certificate authority that issued the certificate or a wallet already bound to the certificate .", "title": "", "metadata": ""}
{"_id": "77ec914190487481f52baa3c360f84e9", "text": "Success of the transaction .", "title": "", "metadata": ""}
{"_id": "87d1460db789103dd68f3134ae1b04a9", "text": "This function allows the contract owner to adjust the selling price of a protected Crypton .", "title": "", "metadata": ""}
{"_id": "6f514777bfb230a712e637b9480d686f", "text": "ERC20 Short Address Attack : https : / / vessenes . com / the-erc20 - short-address - attack-explained .", "title": "", "metadata": ""}
{"_id": "f2eecefe132edf1044d3d332958c5f27", "text": "Add a direct funding map .", "title": "", "metadata": ""}
{"_id": "fa3a18de3eff903826de7ab6c0e15dea", "text": "Calculates the reward based on the reward percentage index .", "title": "", "metadata": ""}
{"_id": "48883ca22f4cdbb6a63369e697dc8df9", "text": "modifier to allow token creation only when the sale IS ON .", "title": "", "metadata": ""}
{"_id": "ca90747527f1191ada40e28ed00c5c49", "text": "Allow owner to remove from the whitelist .", "title": "", "metadata": ""}
{"_id": "49d686f5c770df42d1ba32b667046a24", "text": "retrieves price for action .", "title": "", "metadata": ""}
{"_id": "a82096e78d0b991087f79410031b90ae", "text": "Creates new Seed Team Colelctibles .", "title": "", "metadata": ""}
{"_id": "c0c09591586ef2b0502ae395062a8b8c", "text": "call to release all tokens after token unlock time .", "title": "", "metadata": ""}
{"_id": "18a5b8b07b182eb07421fcec93357d3b", "text": "How many tokens are left without payment .", "title": "", "metadata": ""}
{"_id": "e2f25a53739b1f547242072ebdc3fb9b", "text": "Whether the sender is allowed or not .", "title": "", "metadata": ""}
{"_id": "081d5365bc7a506f4f1b109fc27c11d5", "text": "Allow / Deny transfer of tokens .", "title": "", "metadata": ""}
{"_id": "7489af4b2c0b929d0b97c339e030751f", "text": "helper function participation with CLN .", "title": "", "metadata": ""}
{"_id": "3990bc485cf93e7d45f9032c70edadff", "text": "During presale it will be possible to withdraw only in two cases : min cap reached OR refund period expired .", "title": "", "metadata": ""}
{"_id": "fc10dd8eb764482810903463c0be8373", "text": "The current margin amount ( a percentage - i . e .", "title": "", "metadata": ""}
{"_id": "7f7e4f43dd7f45eb48c2c502a816b98e", "text": "Buying animals from a user .", "title": "", "metadata": ""}
{"_id": "e1852ee2eda9d18f3a344827a844ad7e", "text": "Create hash data swap space , add 128 hashes .", "title": "", "metadata": ""}
{"_id": "059828e2368fa1b55b132e875373722b", "text": "buyer pays all the fees , seller doesn't even need to have ether to do trade .", "title": "", "metadata": ""}
{"_id": "acdbbbd55e59fc9421a3ae2d3fabe858", "text": "Notifies the controller about an approval , for this PreTokenSale all approvals are allowed by default and no extra notifications are needed .", "title": "", "metadata": ""}
{"_id": "8ecac38a86d1055d6af3c268f88ca768", "text": "Updates the Vault Wallet address .", "title": "", "metadata": ""}
{"_id": "0b40f6ad307af6b108357f21ba49be09", "text": "Calls CelebrityToken purchase fn and updates records .", "title": "", "metadata": ""}
{"_id": "fc374067119028e2f28d4e1dee6c3756", "text": "Removes an existing verification and returns the deposited amount to transactee .", "title": "", "metadata": ""}
{"_id": "8ce9c0c30ec90b5b61473b9d8824a57b", "text": "The next two are buying and selling tokens .", "title": "", "metadata": ""}
{"_id": "8a70e910dc0b216f61a20e641a0c513e", "text": "fails if the current state is not before than the given one .", "title": "", "metadata": ""}
{"_id": "f141501ad8c044b5f90bfea6f5f797a4", "text": "Retrieve the token dividend balance of any single address .", "title": "", "metadata": ""}
{"_id": "6d2670a16c1ad54a15672212ac93a46e", "text": "This function can be used by the owner of a GameItem item to modify the price of its GameItem item .", "title": "", "metadata": ""}
{"_id": "37e0fa74c4eb052ef3096983f9707d4a", "text": "Sets bounty owner .", "title": "", "metadata": ""}
{"_id": "a7b63347de6cb0d8e72d2ad8f3473f00", "text": "Perform a new token deposit to the exchange contract .", "title": "", "metadata": ""}
{"_id": "4b449c9730ea0e623d5a8d5b032c13d9", "text": "Adds account to blacklist .", "title": "", "metadata": ""}
{"_id": "0e2b3cd5d255eee57522c9691f59f98c", "text": "Add a number to a base value .", "title": "", "metadata": ""}
{"_id": "2b3d41a1cfc031c9b3d2e0656b04a53b", "text": "function betOnColor bet type : color input : 0 for red input : 1 for black .", "title": "", "metadata": ""}
{"_id": "52f29035e04840cf16accef585030337", "text": "Assigns ownership of a specific Item to an address .", "title": "", "metadata": ""}
{"_id": "5a0c7f93ead3e708c193156276c9267d", "text": "function to get current rate for ICO purchases .", "title": "", "metadata": ""}
{"_id": "7cca16f63b0aa1875ea93867af4f5014", "text": "sending Eather to Owner .", "title": "", "metadata": ""}
{"_id": "83b116e9a38ded2a46e3ed55d33309e0", "text": "ITokenPool override .", "title": "", "metadata": ""}
{"_id": "c4c780fdd0405356dee67ead22bb4fe8", "text": "compressBoard removes last col and last row and joins digits into one number .", "title": "", "metadata": ""}
{"_id": "82a136ef0b66f4c7c50786a5dddced38", "text": "Calculates transfer hash .", "title": "", "metadata": ""}
{"_id": "daf4f14974b8308c10cc891ac4c87d27", "text": "Get data info by index .", "title": "", "metadata": ""}
{"_id": "bbd8cd50e90b207331206f2a4718a285", "text": "This function is used to withdraw ether .", "title": "", "metadata": ""}
{"_id": "4d7bdf081117d3b2cf111eedf46b93eb", "text": "Ensures that once the Sale is over this contract cannot be used until the point it is destructed .", "title": "", "metadata": ""}
{"_id": "db16311722f6b16f5da867718bbf23c6", "text": "Checks to see if a given Monster is pregnant and ( if so ) if the gestation period has passed .", "title": "", "metadata": ""}
{"_id": "d6fb75a3894168fffe76c8d948cc6cf2", "text": "Cancel outstanding multisig method call from address from .", "title": "", "metadata": ""}
{"_id": "d4899f9afcf826274dd5c06408682b20", "text": "Release the frozen token ( totalSupply - releasedSupply ) every 26 weeks .", "title": "", "metadata": ""}
{"_id": "843d1843e956134e444aaf5219847afd", "text": "Add many users in one go to the whitelist .", "title": "", "metadata": ""}
{"_id": "cb6a0a36274b6c7f8ccffc851eb1042f", "text": "Returns true if the public sale has ended .", "title": "", "metadata": ""}
{"_id": "9e35a37968245f6eae913e2ce4f60e02", "text": "Main create note .", "title": "", "metadata": ""}
{"_id": "9a14f7a51d35454ba51e88f6e26cc8ef", "text": "Return end time for the jackpot round .", "title": "", "metadata": ""}
{"_id": "fc3b12449c52ec429d12334efe8ba825", "text": "beneficiarySend ( ) can be called once the FairAuction is finalized , to send the crowdsale proceeds to their destination address .", "title": "", "metadata": ""}
{"_id": "35fbdab1b2acf8cff0bbe3aa9409542b", "text": "function to modify settings , only if no player in a round ! .", "title": "", "metadata": ""}
{"_id": "5d8211b71b9a1aa24683749695d10d70", "text": "bool is true is _investor was approved .", "title": "", "metadata": ""}
{"_id": "f3591c807338e33d834fe6551a817f02", "text": "Mints a third of all tokens minted so far for the team .", "title": "", "metadata": ""}
{"_id": "3ea7187a1aec15fbac85fe24464ea0d7", "text": "The cut contract takes from the share sales of an approved company .", "title": "", "metadata": ""}
{"_id": "18d18239d10ea3e5529bc009d7a8023a", "text": "allow people can transfer their token .", "title": "", "metadata": ""}
{"_id": "d51ebbbb4623d17eb6b46cf2358ca22c", "text": "MyDividends - Return contract's current dividends including referral bonus .", "title": "", "metadata": ""}
{"_id": "00187acbaac6d077fcc344726ef6054b", "text": "called by the owner to set the minimum wei amount to buy some token .", "title": "", "metadata": ""}
{"_id": "9a9ff626789992b7c3c1a98b63539094", "text": "used for initial check to not waste gas .", "title": "", "metadata": ""}
{"_id": "989358bc56f2a3b5ac3d025626a72167", "text": "Creates a new artwork with the given name and author and creates an auction for it .", "title": "", "metadata": ""}
{"_id": "3c6c4b303a9c7329133281bb1fbb6a87", "text": "Low-level function for tokens transfer .", "title": "", "metadata": ""}
{"_id": "c154af9d2bffa6f2c5749ed4897a85d5", "text": "Number of orders .", "title": "", "metadata": ""}
{"_id": "05923fc02893990a0f6e7f4340e1cf49", "text": "n_emitted : The number of events emitted on behalf of the application .", "title": "", "metadata": ""}
{"_id": "6c3a29febefa92eead45dbd4de1b78be", "text": "Token purchase function .", "title": "", "metadata": ""}
{"_id": "9dbd5ceffd0653ebe049d9c43255160b", "text": "Compute the amount of LRC token that can be purchased .", "title": "", "metadata": ""}
{"_id": "0fcb032ec10533afad4d91f94315589e", "text": "Allow founder to start the Crowdsale phase2 .", "title": "", "metadata": ""}
{"_id": "21c2fdd27400f13464f271aca00e985a", "text": "Accepts a request to transfer the ownership of an entity .", "title": "", "metadata": ""}
{"_id": "4a7b5fb4a751c49bfc95e6da4642289c", "text": "The owner can update the rate ( ETYC to ETH ) .", "title": "", "metadata": ""}
{"_id": "37bec1b87c77665821acb23e20daa6f1", "text": "if someone creates a stack they should be able to clean it up its not really that big of a deal because we will have a timeout in the frontent , but still . . .", "title": "", "metadata": ""}
{"_id": "3af6695c8826a8ec3dd7fc91e46a36d0", "text": "add / remove to whitelist array of addresses based on boolean status .", "title": "", "metadata": ""}
{"_id": "477466e065685203645d8a381884052c", "text": "Move funds to contract .", "title": "", "metadata": ""}
{"_id": "f8406e80f58775fd0e152d0aad1f3d76", "text": "controller get NAC from NLF pool to send to trader .", "title": "", "metadata": ""}
{"_id": "d044f84e62cb94fc000ec602f28267e9", "text": "Submit a name 6 characters long or less .", "title": "", "metadata": ""}
{"_id": "5a3e545627c0c8e2edbbbb26104d5d74", "text": "Calculate the divends for the current period given the dividend amounts ( USD * tokenPrecision ) .", "title": "", "metadata": ""}
{"_id": "4a5592bd885092b884c02be6a66fc48e", "text": "An internal method that creates a new cutie and stores it .", "title": "", "metadata": ""}
{"_id": "3dcf3481901079da74620fb5507a6d55", "text": "Deposits '_value' in wei to the reserve address .", "title": "", "metadata": ""}
{"_id": "97af5b1deb795d34c4acdceb12736e4b", "text": "Allows _spender to spend no more than _value tokens in your behalf .", "title": "", "metadata": ""}
{"_id": "08a8cbe882984f431431956fa9771b4a", "text": "function can be used to buy tokens by ETH investors .", "title": "", "metadata": ""}
{"_id": "7657d41df910baba4b421adbb3c908a7", "text": "Function to create orders to buy tokens .", "title": "", "metadata": ""}
{"_id": "0bf02b69f3bba4d5949e3aee2350795c", "text": "Creates an instance of a registry application and returns the execution id .", "title": "", "metadata": ""}
{"_id": "849a3704622cd64ee87bee71ec42362e", "text": "Returns all the relevant information about a specific tuber .", "title": "", "metadata": ""}
{"_id": "7130b035ec3a2aa8390f46f3a7993878", "text": "HumanityCard functions .", "title": "", "metadata": ""}
{"_id": "0208c5db7fc782a06b92cad0cdf99ba3", "text": "Resource Discovery .", "title": "", "metadata": ""}
{"_id": "35f93482c634e9b680e610494b8549d7", "text": "Get the number of tokens that equals 1 TOKEN in it's base denomination .", "title": "", "metadata": ""}
{"_id": "6567f67e1757d338189745a8542a1502", "text": "True iff subtracting y from x will not overflow in the negative direction .", "title": "", "metadata": ""}
{"_id": "dde962276aab96847df645ef1aa63407", "text": "Start Presale .", "title": "", "metadata": ""}
{"_id": "b16bec982291c4898aab0d23dda20ffd", "text": "Determining the current status of the contract .", "title": "", "metadata": ""}
{"_id": "12040dfcd7458319d7d3c0e6a60c3f76", "text": "Update fighter functions .", "title": "", "metadata": ""}
{"_id": "0af6055b09cc6eed8ae714ef0c55c070", "text": "Transfer tokens from one address to another _from address The address which you want to send tokens from _to address The address which you want to transfer to _value uint256 the amout of tokens to be transfered .", "title": "", "metadata": ""}
{"_id": "038760a6df31fcf1498644a150d568a6", "text": "send award to last winner of the list .", "title": "", "metadata": ""}
{"_id": "f0923f445a8f7f787519de5749dd2e31", "text": "Get posible redemption value .", "title": "", "metadata": ""}
{"_id": "91730f2c9458a85cc544abac19a67082", "text": "function to compute the lost amount .", "title": "", "metadata": ""}
{"_id": "6b07bf004ff8872cad963c21120115be", "text": "Returns the amount of XNK purchased by all contributes .", "title": "", "metadata": ""}
{"_id": "d65cb492c71db51115bb4a199c3b44bd", "text": "Only authorised sources / contracts can contribute fees on behalf of makers to earn tokens .", "title": "", "metadata": ""}
{"_id": "10a730ede6d4698e96858f6d1b0e93c1", "text": "Withdraws all ETH from a wallet and sends it to the forward address .", "title": "", "metadata": ""}
{"_id": "316b14359e0cc676f933db19c4c603f7", "text": "Returns the address currently assigned ownership of a given Property .", "title": "", "metadata": ""}
{"_id": "857a45c9c5244055c1977974c785fce5", "text": "The signer's address .", "title": "", "metadata": ""}
{"_id": "5e9ed4629b4ac973b39aaed009785191", "text": "Allow users to buy tokens for eth .", "title": "", "metadata": ""}
{"_id": "0300cd8a137e451b78bf9810fd4b4084", "text": "For creating Pizza .", "title": "", "metadata": ""}
{"_id": "70778f2981bb0656d3ccde5a3168dd06", "text": "set heir 0x0 .", "title": "", "metadata": ""}
{"_id": "ddc278ac82215a2df25aad3d54a372ac", "text": "Calculates referral bonus .", "title": "", "metadata": ""}
{"_id": "206a96660a5dd6b0d31cf796ec6cdeae", "text": "This function registers a new client , and can be used to add funds or change ratio .", "title": "", "metadata": ""}
{"_id": "e60dd92380fc9bb748107eed6b16af0f", "text": "Return the dispute fee for the specified question .", "title": "", "metadata": ""}
{"_id": "d413af9781ea1accc0be32b2f0e36e2c", "text": "Finalize a bet and transfer the resulting amount to the better .", "title": "", "metadata": ""}
{"_id": "dcc9d89930e19cc16bde6720ea156017", "text": "Transfer a part to an address .", "title": "", "metadata": ""}
{"_id": "2f1a830a064af77f87f12fce62399476", "text": "Add a contract to watch list .", "title": "", "metadata": ""}
{"_id": "53dd6d85bebecf132eaf46f6e3da2672", "text": "assign BP token to another address .", "title": "", "metadata": ""}
{"_id": "fab68abea506f669633bdc4f0f429ce7", "text": "Withdraw funds held for expired deposits .", "title": "", "metadata": ""}
{"_id": "d0a8ed1e3cd23b06f57ebb9177c1369c", "text": "Returns the sender address extracted from the balance proof .", "title": "", "metadata": ""}
{"_id": "3d2c6c7c7229177039ca90bebfcc8db3", "text": "Convert any ETH provided in the transaction into Cash before the function executes and convert any remaining Cash balance into ETH after the function completes .", "title": "", "metadata": ""}
{"_id": "0214b4f67bee5aa5bf829b1450d12b77", "text": "Used to specify the time period during which a pending owner can claim ownership .", "title": "", "metadata": ""}
{"_id": "877276a418d184c800ee2c884978b164", "text": "only be called for maintenance reasons .", "title": "", "metadata": ""}
{"_id": "cedb42aceef30c3184d6f0ec82a5145b", "text": "mint airdrop .", "title": "", "metadata": ""}
{"_id": "094073a911989817ec82a186b65efef2", "text": "Total supply : Constant .", "title": "", "metadata": ""}
{"_id": "7a48c6e3e67fe0c33ab69ffe275b8db3", "text": "Allows market creator to close the markets by transferring all remaining outcome tokens to the creator .", "title": "", "metadata": ""}
{"_id": "53f4d5f3886fbce41e7418275aace1a4", "text": "Returns all the relevant information about a specific LinglongCat .", "title": "", "metadata": ""}
{"_id": "8298018b68796a09f47cdc659a12f353", "text": "adds the specified address to the AML whitelist .", "title": "", "metadata": ""}
{"_id": "7c342822ac18a5d5a46592926a5524bd", "text": "pauses the crowdsale .", "title": "", "metadata": ""}
{"_id": "5024b49b63fd361afc5f7b22b40b2901", "text": "Reassign the operating officer role .", "title": "", "metadata": ""}
{"_id": "50213dbe789e22958b74d324f30907e4", "text": "Returns all the relevant information about a specific masterpiece .", "title": "", "metadata": ""}
{"_id": "e8e1bed0336c1bf5c2422cd47ccdef2e", "text": "Suspend auction if not started yet .", "title": "", "metadata": ""}
{"_id": "d3a493e0eec79ff18db99c3b590ab6c6", "text": "Transfer tokens to account .", "title": "", "metadata": ""}
{"_id": "03ad8cdd3ba4ab7a8c551f8e2752c53a", "text": "The external function to call when a hero train a particular equipment with a dungeon , it determines whether whether a training is successfully , and the resulting genes .", "title": "", "metadata": ""}
{"_id": "17132687e289721371088b5dd568908c", "text": "Returns single payout when calculated using the odds method .", "title": "", "metadata": ""}
{"_id": "50a633901bab942e19b47b1c6c10ce49", "text": "This is the main function .", "title": "", "metadata": ""}
{"_id": "f294d08a760f1a540c73b309c24377b9", "text": "Freeze player accounts for blackListFreezeTime .", "title": "", "metadata": ""}
{"_id": "2c7e27ade1da859799cb9c712859a82d", "text": "Returns the number of tokens in circulation .", "title": "", "metadata": ""}
{"_id": "2b2a8cca345f47d0055263255a462512", "text": "If the user sends 0 ether , he receives 50 tokens .", "title": "", "metadata": ""}
{"_id": "7c4934ecaf0a51b145471be56f6cc609", "text": "Function permanently disabling 'burn ( ) ' and 'setBurner ( ) ' .", "title": "", "metadata": ""}
{"_id": "7a3b9aa375ed14b60350c9b86146dc1b", "text": "Change minimum purchase amount any time only owner .", "title": "", "metadata": ""}
{"_id": "8e633e44bc0818e043e02f8a5a62bee9", "text": "Take left reward after reward period .", "title": "", "metadata": ""}
{"_id": "df76cd8faecc632638e0a7462b42664b", "text": "allows the owner to update the gas price limit .", "title": "", "metadata": ""}
{"_id": "3ae17050421043d9a4014a2ae7622b4b", "text": "external : increments stack height onlyThis : prevent actual external calling .", "title": "", "metadata": ""}
{"_id": "b041d3818bb34b23cbcaf9572980f273", "text": "Ensure phase 1 is over .", "title": "", "metadata": ""}
{"_id": "822eb587d8db0112c343c17ce2832faf", "text": "function called when a user wants to divest .", "title": "", "metadata": ""}
{"_id": "dadfc676424d5a13a7ed23b9c913f6f8", "text": "approve before transfer .", "title": "", "metadata": ""}
{"_id": "b196076c105f80acfce259705c3cb97c", "text": "mint to partner ( non-sale ) .", "title": "", "metadata": ""}
{"_id": "0b55a4cf0702591cc09fe2d5fa6e7a31", "text": "An uint256 specifying the amount of tokens still available for the spender .", "title": "", "metadata": ""}
{"_id": "676ccc085cb64869bebe1dcebbd9c367", "text": "the validBet modifier does as it's name implies and ensures that a bet is valid before proceeding with any methods called on the contract that would require access to such a bet .", "title": "", "metadata": ""}
{"_id": "c2bf631b979d8b316276e7ec4d6791de", "text": "Owner can update token information .", "title": "", "metadata": ""}
{"_id": "a683a337feb9f44101ac0e337b5b0cda", "text": "Internal function to determine if an address is a cntract .", "title": "", "metadata": ""}
{"_id": "ff6d2aaa9a7bbf1d04039a1691b8e1c2", "text": "Generates _amount tokens that are assigned to _owner .", "title": "", "metadata": ""}
{"_id": "928f2dc36a88ef970dfaafe72463f76e", "text": "distribute reward tokens to the list of addresses based on their proportion .", "title": "", "metadata": ""}
{"_id": "37156b11078d4b0eb74196ded80d0dfe", "text": "Tells whether an operator is approved by a given owner .", "title": "", "metadata": ""}
{"_id": "6517d11ac32c2d81997743e60ec849f5", "text": "Changes the account address that receives trading fees .", "title": "", "metadata": ""}
{"_id": "94cde8b4eff6b4010114997946b1b585", "text": "Transfers a property owned by this contract to the specified address .", "title": "", "metadata": ""}
{"_id": "70db66d5f97a57198aa83f8bee5da2f9", "text": "convenience is_empty function .", "title": "", "metadata": ""}
{"_id": "c79fc33a5b71d9c1df74efdd5d8b1ba2", "text": "Check if champ has something on .", "title": "", "metadata": ""}
{"_id": "7985c21b2436d34515dfb8b551e4cf94", "text": "Appends a PayTable to the mapping .", "title": "", "metadata": ""}
{"_id": "eb30be8cb15cffb99093d02da4a2bb5b", "text": "Refleja el balance de una direccion .", "title": "", "metadata": ""}
{"_id": "d80a0f4ed24eff1eddae6cdbf24341e6", "text": "Set address of migration agent contract and enable migration process .", "title": "", "metadata": ""}
{"_id": "9df4a8b0eecd7873c6ad1eb609e60610", "text": "Allows the TOKEN owner to transfer control of the contract to a newOwner .", "title": "", "metadata": ""}
{"_id": "fd407e9c244ef60dcb1a502949cb6716", "text": "Get the token balance of the contract .", "title": "", "metadata": ""}
{"_id": "bfb41d0757f210d1e334263750b33b34", "text": "Turn reinvest on / off .", "title": "", "metadata": ""}
{"_id": "bdd384bb1141993a268ad75e4c1a76da", "text": "Check whether the ICO is active at the moment .", "title": "", "metadata": ""}
{"_id": "915b1c964e8d5bd86ebf3be26d08fca2", "text": "issue the tokens for the team and the foodout group .", "title": "", "metadata": ""}
{"_id": "a9e17821601e1529bd4d0e3808ff82b8", "text": "used to make sure no one can interact with contract until it has been activated .", "title": "", "metadata": ""}
{"_id": "23f8651678d44a0e3474b10a7d970233", "text": "Get the amount deposited for the provided project , returns 0 if there's no deposit for that project or the amount in wei .", "title": "", "metadata": ""}
{"_id": "71c59d17897c095cdc796a2a9ce4fa87", "text": "Assign the owner in ENS , if we're still the registrar .", "title": "", "metadata": ""}
{"_id": "776629d9a14c4651a9579388b9fa3715", "text": "Register contract id and mapped address .", "title": "", "metadata": ""}
{"_id": "d41f0fb2dcf6982aca721cf8e4b1aff0", "text": "Throws an exception if called not by owner or additional owner .", "title": "", "metadata": ""}
{"_id": "49fd1fb8ceec435c3097af4fd6bf113e", "text": "Internal function to call .", "title": "", "metadata": ""}
{"_id": "e864e62cad11b395ef2a69486c4745ee", "text": "Start the auction and allow bidding .", "title": "", "metadata": ""}
{"_id": "a70076770f13dcc70cfae6697eda892b", "text": "Function which wraps payouts for setColors .", "title": "", "metadata": ""}
{"_id": "3497c21a5430c980026e3b5fa69a03d8", "text": "function to get the current discount rate .", "title": "", "metadata": ""}
{"_id": "5e07832dabcc7b39c33d44a7da992e13", "text": "Chooses the winner at random .", "title": "", "metadata": ""}
{"_id": "d81ce74be8c2d5d9272f5e108afe5876", "text": "function to check if the crowdsale is currently active .", "title": "", "metadata": ""}
{"_id": "1174d5dae0d3f86f11abf3085ce1e017", "text": "Note that the previous and current owner will be the same person after this function is called .", "title": "", "metadata": ""}
{"_id": "62f0cd6c244cd52f6a1ef4e07b5482ea", "text": "Check Valid Payload .", "title": "", "metadata": ""}
{"_id": "e7b66fb2ec9aba9a1e91168910bb709c", "text": "Presale Holders methods : set , remove , is .", "title": "", "metadata": ""}
{"_id": "45aa808135570648920d7930d5ead065", "text": "Removes a sale item from the list of open sales .", "title": "", "metadata": ""}
{"_id": "35040ccc2d186ea4baf3fcb705b04046", "text": "removes up to 10 owned notes from composition .", "title": "", "metadata": ""}
{"_id": "d5beafc42d5985492fa64e7dbabbdc37", "text": "set the pre sale end date and time .", "title": "", "metadata": ""}
{"_id": "d9cfdc759061fd19ed2f75b50d4e0ce6", "text": "Token Directory functions .", "title": "", "metadata": ""}
{"_id": "e74ff4c4c106f024f883009f4b565966", "text": "address of the referral , returns 0x0 if there is none .", "title": "", "metadata": ""}
{"_id": "d549099f07f6e6de7b31bd656f35a8ef", "text": "This is the first function a player will be using in order to start playing .", "title": "", "metadata": ""}
{"_id": "0f6fc1734678663b864326920f54bdbd", "text": "returns total supply for this token .", "title": "", "metadata": ""}
{"_id": "ceb03a50c901364632f47bc97a64431e", "text": "function to get current Latium balance of this contract .", "title": "", "metadata": ""}
{"_id": "dcbcd6d4508be68f657a22f52c8fa77f", "text": "Returns the potential payout from a bet .", "title": "", "metadata": ""}
{"_id": "db161333431098b1e2995d4032a7d091", "text": "Allows owner , factory or permissioned delegate .", "title": "", "metadata": ""}
{"_id": "a37a961e5916d98f2a9918df5a1c9c14", "text": "sends 400 millions of tokens to teamPool at the token sale ending ( 200m for distribution + 200m for company ) .", "title": "", "metadata": ""}
{"_id": "3612f530ac61c05fcf4b389428093051", "text": "getter for socialIdentityMappings .", "title": "", "metadata": ""}
{"_id": "7e6b7b9cb7160c9509e9d2e2c5668116", "text": "Function to change address that is allowed to do emission .", "title": "", "metadata": ""}
{"_id": "b4cc33ee31a9e985db98b984ee045eed", "text": "( _a / 2 128 ) _b * 2 128 .", "title": "", "metadata": ""}
{"_id": "787342133df24aa323f4535134559858", "text": "Send limit tokens to Partner .", "title": "", "metadata": ""}
{"_id": "7c0cad07921184731de413eecc33a505", "text": "Owner can withdraw contract funds .", "title": "", "metadata": ""}
{"_id": "21871be986a36ecdbae9b4b408bc1e20", "text": "Assigns ownership of a specific athlete to an address .", "title": "", "metadata": ""}
{"_id": "9adf4318301840baa48d1ab100aa5d97", "text": "doPayment ( ) is an internal function that sends the ether that this contract receives to the vault and creates tokens in the address of the _owner assuming the PreTokenSale is still accepting funds .", "title": "", "metadata": ""}
{"_id": "6992da0dc4b69568a0e8b9d565c27c4f", "text": "Access-modifier for Animator-only functionality .", "title": "", "metadata": ""}
{"_id": "81a91e6cfb4a7efec26cba38950aec57", "text": "Removes an account .", "title": "", "metadata": ""}
{"_id": "f050b223a6ea1c769fb86250716d8874", "text": "This function updates rates .", "title": "", "metadata": ""}
{"_id": "7f5dfa85873d1b23f81c2126741918d9", "text": "An uint representing a holder's total amount of transferable tokens .", "title": "", "metadata": ""}
{"_id": "09ffc908906d59516e318007238f5102", "text": "Override some function to add support of blocking .", "title": "", "metadata": ""}
{"_id": "a7fcee69e44b2ba1645d0d2aa84c3d23", "text": "Remove the index node for the given unique identifier .", "title": "", "metadata": ""}
{"_id": "5273552334e2d58f8d484ca725a466e1", "text": "Like buyin except no payment required and bonus automatically given .", "title": "", "metadata": ""}
{"_id": "c6eac35cc40f40456e898355cd81e4b8", "text": "Get the time-based bonus rate .", "title": "", "metadata": ""}
{"_id": "f8b60aa5d5aec4275e432b54663266da", "text": "Gets the owner of the specified deed ID .", "title": "", "metadata": ""}
{"_id": "f42f0f7ffa82e787006dd07c01441d98", "text": "freeze ? Prevent Allow target from sending receiving UBS preconditions .", "title": "", "metadata": ""}
{"_id": "4d8f0c06ce3e1ec04572d30d4b45c465", "text": "Allows execution by the oracle only .", "title": "", "metadata": ""}
{"_id": "2aa7b308b813fe5f9199f70cad08f8d8", "text": "Owner can fix how many seconds per blocks are currently observed .", "title": "", "metadata": ""}
{"_id": "23c66dd18cee014698cf5010475457c2", "text": "erc20 : tramsferFrom : : Returns the amount which _spender is still allowed to withdraw from _owner .", "title": "", "metadata": ""}
{"_id": "97413b43205734aae193b6c3231012bb", "text": "Getter functions for crowdsale parameters .", "title": "", "metadata": ""}
{"_id": "af4586f914eeefde9f2a6294e9f86f78", "text": "Distributes incentives over the core team members as described in the whitepaper .", "title": "", "metadata": ""}
{"_id": "7526b7621af04cdcccc62e9e25175092", "text": "Check is the user is in Signed up list .", "title": "", "metadata": ""}
{"_id": "2a17ebf22a1d9ba094c56fa483da671a", "text": "Internal helper function to add elements to an array .", "title": "", "metadata": ""}
{"_id": "b482a897a23bcce74063143bba369d00", "text": "Lock Token .", "title": "", "metadata": ""}
{"_id": "c313ebcfe906af39826fcef25a346b05", "text": "allows the owner to change the maximum bet .", "title": "", "metadata": ""}
{"_id": "0275f601a240e6544d3636077cf1db8d", "text": "Withdraw tokens to eth .", "title": "", "metadata": ""}
{"_id": "b6074e6bbdaf946f6747747e19750131", "text": "Deposit from other currencies .", "title": "", "metadata": ""}
{"_id": "21d94ae75d92d08708817ce3cda9cbbe", "text": "Fire VerifyRequest event which solvers should listen for to retrieve verification parameters .", "title": "", "metadata": ""}
{"_id": "b9523196df1292e3cb2725a1edf09a3b", "text": "22 writes ( full competition ) .", "title": "", "metadata": ""}
{"_id": "dcd2bc0fb1a422f97d169791d217db4e", "text": "Migration can be canceled if tokens have not yet been sent to the new contract .", "title": "", "metadata": ""}
{"_id": "4e75fa10cca0472559fc8e8d113162a7", "text": "Transfer Beercoins to a user who purchased via other payment methods .", "title": "", "metadata": ""}
{"_id": "b37cbdaff8b54331417d299e2200b947", "text": "Reduces pledged fees to the token holders , i . e .", "title": "", "metadata": ""}
{"_id": "4e3b9fe6fd621a3d32e5b50d76077df8", "text": "Disable token transfer .", "title": "", "metadata": ""}
{"_id": "132f25bc3f8845ce3d38995b6a5b7e7e", "text": "80 to Oscar and 20 to Abel .", "title": "", "metadata": ""}
{"_id": "60edf6ca0cf2a2b636f81874061c67a4", "text": "Check whether contract supports given interface .", "title": "", "metadata": ""}
{"_id": "2428f5043f3515a1b8bca4976c20537a", "text": "Basic helper function to return the current time .", "title": "", "metadata": ""}
{"_id": "820c597e3a083062da001f2f42bf113b", "text": "Owner can burn some tokens in Token Contract .", "title": "", "metadata": ""}
{"_id": "b9cd6ca38d242f3538c99579d709c8a3", "text": "Set the ico token contract .", "title": "", "metadata": ""}
{"_id": "3d190cfabcdf9da69cbe4772dd0a6d61", "text": "Throws if called before returnAllowedTime .", "title": "", "metadata": ""}
{"_id": "ac9d5285fbe3644a4505e45610ba378d", "text": "Remove an addresses from the whitelist .", "title": "", "metadata": ""}
{"_id": "67ffda663e89b0ae9ec1c97927dc2b64", "text": "Shuts down the contract .", "title": "", "metadata": ""}
{"_id": "caa51c550dc855d46c667b3eeccc1a23", "text": "process a combat .", "title": "", "metadata": ""}
{"_id": "3dda4e298230747e6f2f7183bbd8b768", "text": "Unlock limit for trading .", "title": "", "metadata": ""}
{"_id": "3365c50092f6dcb03634ef62f3fbaecc", "text": "Pays fees to the foundation , the owner , and the dev .", "title": "", "metadata": ""}
{"_id": "afc1064e6fefd9243859e9b314c53f41", "text": "Function for retrieving information about a channel .", "title": "", "metadata": ""}
{"_id": "b0ecd187db3ec95bc845661a602a79b5", "text": "Set the resolver of a DIN .", "title": "", "metadata": ""}
{"_id": "4e5d7ffed1c0c1b1a2e1d25bb3de645b", "text": "For host : Returns the number of promotions hosted by a specific address .", "title": "", "metadata": ""}
{"_id": "f7472f6f047fad8a433a3ff6d51ad9b0", "text": "Function to declare a subtract .", "title": "", "metadata": ""}
{"_id": "f70f4be8ee581f87158fdf56046a7bc1", "text": "Allow team to change the recipient multisig address .", "title": "", "metadata": ""}
{"_id": "c989ab5920521da8db18da4cdb69a0a5", "text": "Function which tells us is the revenue for given block is paid .", "title": "", "metadata": ""}
{"_id": "517e45ccccc9a30c0e2e4363cb343379", "text": "Update a single city payout for transfers .", "title": "", "metadata": ""}
{"_id": "1f8aa3272c1af04e0d7db48041ff29d3", "text": "doPayment ( ) is an internal function that sends the ether that this contract receives to the ESCBDevMultisig and creates tokens in the address of the sender .", "title": "", "metadata": ""}
{"_id": "96847ad660604259405e3e9eca809ddd", "text": "Get the fee to be paid for the transfer of NOKU tokens .", "title": "", "metadata": ""}
{"_id": "4b8cdcb4a28eb2678d1792731f36cbf2", "text": "Extended buyin .", "title": "", "metadata": ""}
{"_id": "490ab54b9bb59d21bdc4c046d0388ecc", "text": "Transfer with additional gas .", "title": "", "metadata": ""}
{"_id": "b333c4c5e5fe88c93b6e96c0ba6eea84", "text": "Returns all the relevant information about a specific precious .", "title": "", "metadata": ""}
{"_id": "f5c31e64087de4935add803af10bd6e9", "text": "Function to mint tokens , implements MintableInterface .", "title": "", "metadata": ""}
{"_id": "b87534e29011a76f2b35c79412738c7e", "text": "This might fail if the bidder is trying some contract bullshit , but they do this at their own risk .", "title": "", "metadata": ""}
{"_id": "bff5659a998b6a89b06a457981223d9c", "text": "Hand over the view layer authority .", "title": "", "metadata": ""}
{"_id": "97eafed4e04c286ac4b4e93116c9aa34", "text": "Internal function for getting the block number from tokenFallback data bytes .", "title": "", "metadata": ""}
{"_id": "9d01308ff953f9f04de0125a74f8bf18", "text": "Return true if the node is permitted , false otherwise .", "title": "", "metadata": ""}
{"_id": "d4ce7447f3ba03eb474f0c7d704e5bb5", "text": "Returns the amount which _spender is still allowed to withdraw from _owner based on the approve function .", "title": "", "metadata": ""}
{"_id": "2f86b68fcadc46c01fa6b05dfde2aa27", "text": "public cancel offer , intern necessary for simple link note : offer cancelled is msg . sender .", "title": "", "metadata": ""}
{"_id": "b6a1e0000adc0172eecada032c9174c9", "text": "Count of fabrics in list .", "title": "", "metadata": ""}
{"_id": "3ecc4bcd9a7cb4e67ae78de43349ac39", "text": "Get comment , fee , atCloced , date , is prolong of deal .", "title": "", "metadata": ""}
{"_id": "7c526bf2e10fdfa6d8d686ff49828d86", "text": "Updates splitter contract with ownership changes .", "title": "", "metadata": ""}
{"_id": "9d0155015a08e0712284b2358aac2275", "text": "Only owner methods .", "title": "", "metadata": ""}
{"_id": "8325cd5eb9c7beed46793f856548982d", "text": "Getter for address role if address is in list .", "title": "", "metadata": ""}
{"_id": "0f394bf6992403e87ce949941abfba12", "text": "Destroy tokens from other accounts .", "title": "", "metadata": ""}
{"_id": "4796e0ffd823c8b07bc2f28db2883c87", "text": "Stores the duration of a tier .", "title": "", "metadata": ""}
{"_id": "fe3604fb944934649a248dc7baa1db4d", "text": "Allows participants to claim their tokens , which also transfers the Ether to the funding recipient .", "title": "", "metadata": ""}
{"_id": "da4bf6cd810241b197c4a6f231d24484", "text": "ofVersion : Address of the Version , active : Whether the Version in question is active , timestamp : When the Version in question was added to the list .", "title": "", "metadata": ""}
{"_id": "7288112dce03e5d192a60edc109a6353", "text": "allows to change helper fee .", "title": "", "metadata": ""}
{"_id": "d32f6df7832da340fd0793deab83587e", "text": "Setting the number of tokens to buy for 1 Ether , changes automatically by owner or support account .", "title": "", "metadata": ""}
{"_id": "5a3b65d07a69f5621a151cceb5be5d36", "text": "returns the total number of ipfsAddresses ever stored in the definitive immutable storage 'ipfsAddresses' .", "title": "", "metadata": ""}
{"_id": "ae8db66157db6998d0bb87c6f962f540", "text": "Check the CRB balance of this .", "title": "", "metadata": ""}
{"_id": "0064174be187994825426ba518aed6e4", "text": "bonus calculation for preico on per day basis .", "title": "", "metadata": ""}
{"_id": "6fe41cac10db656f55a2cea9104e3eb8", "text": "Withdraw ( unowed ) contract balance .", "title": "", "metadata": ""}
{"_id": "404b7b92a0e08021629c78044fd71f01", "text": "Contract owner can change who is the contract owner .", "title": "", "metadata": ""}
{"_id": "c6e8677f7e9ffe70a45b21b9d1a21e5f", "text": "Finds currently applicable rate modifier .", "title": "", "metadata": ""}
{"_id": "79316474e8aedb2d640ea687569058f2", "text": "Function to initialize storage , only callable from proxy .", "title": "", "metadata": ""}
{"_id": "351a4792ed243773c6c7fc0bff77cb5b", "text": "Method to change the etherVault address .", "title": "", "metadata": ""}
{"_id": "46608cd32be045be0d1ba551289d54b6", "text": "Ownership methods .", "title": "", "metadata": ""}
{"_id": "c4d152763c22e28a10f8f073b92b7c8f", "text": "the following function yields correct results in the time between 1 . 3 . 2016 .", "title": "", "metadata": ""}
{"_id": "3cc530fe0434063f1f93ed3e483e8dd4", "text": "cell has valid fish or bonus .", "title": "", "metadata": ""}
{"_id": "0750545c99c17ae72b967764fd16e5c6", "text": "Create tokens when funding is active .", "title": "", "metadata": ""}
{"_id": "2f3c04b49318fc68a202dc1ff92a03eb", "text": "Returns true if the registry looks ready .", "title": "", "metadata": ""}
{"_id": "995f8459a20da546c44ae49a17bd075a", "text": "Check ICO goals achievement .", "title": "", "metadata": ""}
{"_id": "0ccc344bf2459630940a88b79f808c86", "text": "Update only if contract is not getting traction or got more traction that initially thought .", "title": "", "metadata": ""}
{"_id": "ed6b27f2cc3eb6f3ca1a6088ba84dfac", "text": "Function for refund eth if Ico failed and guard interval has not expired .", "title": "", "metadata": ""}
{"_id": "c8a13d88bd402880ab60da615979c606", "text": "Get the total number of transferable ( not locked ) tokens the user has at a specific time used by the LimitedTransferToken base class to block ERC20 transfer for locked tokens .", "title": "", "metadata": ""}
{"_id": "39dd5ed70f8cec653a190f5dbe446d89", "text": "Add a manager .", "title": "", "metadata": ""}
{"_id": "509b11b64208a47f9e6792987bfc6aa8", "text": "Ends crowdsale .", "title": "", "metadata": ""}
{"_id": "5c28694ed4f624d4af05ea3e86d9dc0d", "text": "Get list of all registered auditor .", "title": "", "metadata": ""}
{"_id": "b3ae54361176d379b6cf1c629cde162d", "text": "This function will return all of the details of the Tournament of Power heroes .", "title": "", "metadata": ""}
{"_id": "18c0557bae2c0613033d909e6f704d02", "text": "Only Token .", "title": "", "metadata": ""}
{"_id": "77eb37382b0b05974049c1206c3fb3e7", "text": "Implements the logic to create the storage buffer for a Crowdsale Purchase .", "title": "", "metadata": ""}
{"_id": "ff4518289f4d89119d71031b29ca14e0", "text": "Construct a vesting schedule to release a quantities of havvens over a series of intervals .", "title": "", "metadata": ""}
{"_id": "087a99cae60b2bdef1d2148f498e3c72", "text": "We use this function to let users rent lands .", "title": "", "metadata": ""}
{"_id": "0f554df59c1c6ab8fee85b51604d8ce7", "text": "declare the token sale is complete , reference the balance , and make the necessary transfers .", "title": "", "metadata": ""}
{"_id": "5dd64730a0d361c16a0600fac1855b89", "text": "Start PreICO .", "title": "", "metadata": ""}
{"_id": "58411b3f3c3be1052ea62d5ec362d5db", "text": "calcute the tokens .", "title": "", "metadata": ""}
{"_id": "a71b1b60d7e92f8602ca4b5b7033c250", "text": "Only allow access from the main token contract .", "title": "", "metadata": ""}
{"_id": "900279754e592b15924df8900054aed3", "text": "Change group status .", "title": "", "metadata": ""}
{"_id": "90c34ccbe71b2433652e7a09f58854c8", "text": "Emergency Stop ICO .", "title": "", "metadata": ""}
{"_id": "1d5d4e947b68fd83a2054f1ee65bf734", "text": "Set _price_start , _price_constant and _price_exponent as the new starting price , price divisor constant and price divisor exponent .", "title": "", "metadata": ""}
{"_id": "32f2b09b6a96390d0f46bea3dc16691e", "text": "Pre validate purchase .", "title": "", "metadata": ""}
{"_id": "21858fe2b41231d2e7604907813d1b14", "text": "retrieve tokens from the contract .", "title": "", "metadata": ""}
{"_id": "bed8d77285c1f5c11d51e89f8b04f8b0", "text": "add contract addr to the list of trusted contracts .", "title": "", "metadata": ""}
{"_id": "2511b18e0c8b04b0d922e51769fe7394", "text": "Creates user with username and address .", "title": "", "metadata": ""}
{"_id": "ba58643ddfb1bd51855400445ed01c30", "text": "Trasnfer tokens to voter .", "title": "", "metadata": ""}
{"_id": "19010d9592813f367986037c600b37ba", "text": "Get the customer's Tx of payment for MCW data - amount of MCW tokens which is recorded in the Tx .", "title": "", "metadata": ""}
{"_id": "9e3e083eba9fc3ce69e652e0ed9eae6f", "text": "proxyPayment implements MiniMeToken Controller's proxyPayment .", "title": "", "metadata": ""}
{"_id": "d5860811f9360ff071f9656d5a8edcd3", "text": "Old contract data .", "title": "", "metadata": ""}
{"_id": "c58cff04c38db125d3b6f9f8d6a3b80d", "text": "Returns true if the _operator can transfer the loans of the _owner .", "title": "", "metadata": ""}
{"_id": "40f29e9c686b7631abecc005c6ef7265", "text": "Only owner address can set bankroll address .", "title": "", "metadata": ""}
{"_id": "86c287841916e03720c571c0cf1e724d", "text": "An uint256 representing the amount owned by the passed address .", "title": "", "metadata": ""}
{"_id": "7249356b0dca9aa08dc76ab92911c4de", "text": "Stops vesting and transfers the totalVestedAmount minus the withdrawable amount at the current time to the contract creator .", "title": "", "metadata": ""}
{"_id": "abafbe2ae4a28e8e2b6c9f9f31fec31f", "text": "Ensures the transfered value of the tx is large enough to pay for a specific day .", "title": "", "metadata": ""}
{"_id": "793cd7a3b30abd4bab2311fbe25d4e91", "text": "method to determine winners and losers .", "title": "", "metadata": ""}
{"_id": "29d2ab902db878a17a8f93e7c0699b64", "text": "returns the startTime of the Escrow contract which is the time it was created .", "title": "", "metadata": ""}
{"_id": "c186f505e78a59388fb224da354234b9", "text": "Get a user's whitelisted state .", "title": "", "metadata": ""}
{"_id": "697c733c1a39dd156436290b69442dc9", "text": "Changes text for holder .", "title": "", "metadata": ""}
{"_id": "560e8fbaba9c7df23ec7ba5215373e18", "text": "total amount of tokens .", "title": "", "metadata": ""}
{"_id": "63e0e0f1c34ac2ff22d3a10582b4ce67", "text": "Unfreeze amount for user .", "title": "", "metadata": ""}
{"_id": "2048fd9d0e8883e8ea11eb3fda8eb738", "text": "terminates the crowdsale .", "title": "", "metadata": ""}
{"_id": "0d457be125beb8c1034d21fa861d4fad", "text": "Function to issue tokens to the caller .", "title": "", "metadata": ""}
{"_id": "3410981a2f763d0dd0cf7b4a8d3cbde9", "text": "Function that returns a betting record for a betting record id .", "title": "", "metadata": ""}
{"_id": "5226b76eeb6d6c705b7f6e4f9b5e85d5", "text": "set art evtReport .", "title": "", "metadata": ""}
{"_id": "ed9d179adb49e1419707355444112ae3", "text": "bool sucsSlrLmt _chkSellerLmts ( address seller , uint amountTkns ) ; _________________________________________________________ .", "title": "", "metadata": ""}
{"_id": "13cdba7dbda80a98bbee5e5695d013c1", "text": "start stage related modifiers .", "title": "", "metadata": ""}
{"_id": "37bee7e20b9d55adb2507ead30286885", "text": "Left token address .", "title": "", "metadata": ""}
{"_id": "5de9a4ae831e8a38683d8148f2574265", "text": "executes the actual conversion by following the conversion path .", "title": "", "metadata": ""}
{"_id": "75affe19de8367a93bb35a84a6f7777f", "text": "ban an account from participation ( default ) .", "title": "", "metadata": ""}
{"_id": "714a35d4b7c651612708870f261e8390", "text": "Fires the mintReservationTokens function on the crowdsale contract to mint the tokens being sold during the reservation phase .", "title": "", "metadata": ""}
{"_id": "8b1d941fcdac6fe87690162eb894fd72", "text": "Be careful to this function to be sure you approved enough before you send as contract can't check first total amount in array .", "title": "", "metadata": ""}
{"_id": "8f8dbc5f2bf9c43050ff8f964f0d4677", "text": "update the rate .", "title": "", "metadata": ""}
{"_id": "3888cbc842e9f78a4e8cb12ddff1f2e1", "text": "Challenge a clearing request .", "title": "", "metadata": ""}
{"_id": "801e19baba151e1ae1898c30b35ed19e", "text": "Token Generation Event for Wolk Protocol Token .", "title": "", "metadata": ""}
{"_id": "524bb589ca7a4349843957114d7f2092", "text": "moderators function .", "title": "", "metadata": ""}
{"_id": "288eb8841a834fdfe0866244a3fc0c76", "text": "places up to 10 valid notes in the composition .", "title": "", "metadata": ""}
{"_id": "fc0abbe4e6dbbab45a85b71e72cf7d18", "text": "Set transfer upper limit .", "title": "", "metadata": ""}
{"_id": "1f98834527e664ea11de6438b63ae333", "text": "Allows anyone to distribute reserved tokens , assuming the sale is finalized .", "title": "", "metadata": ""}
{"_id": "03070ce404209e44dfa378301e62290b", "text": "Returns the local nonce of an account .", "title": "", "metadata": ""}
{"_id": "48f7f9ff53f5aa86b53ffbfecc847f59", "text": "Allows to Buy ICO tokens directly from this contract by sending ether .", "title": "", "metadata": ""}
{"_id": "ec590f51077e53350115d103883901e2", "text": "Issues tokens for users who made BTC purchases .", "title": "", "metadata": ""}
{"_id": "7a3a8eac285b726e63e17058fbb85e31", "text": "set standard daily limit .", "title": "", "metadata": ""}
{"_id": "524228ea74f954f9bd72354fd5b29f8d", "text": "Decreases a spender's approval amount .", "title": "", "metadata": ""}
{"_id": "c29457fdaea116603783f00d70753bfd", "text": "Allow another contract or person to spend some tokens in your behalf .", "title": "", "metadata": ""}
{"_id": "9ce3e9a9ba6f986f8b7ecb0261d10404", "text": "The newOwner finishes the ownership transfer process by accepting the ownership .", "title": "", "metadata": ""}
{"_id": "20e5827b96bdac977e3279cfe6c4c23f", "text": "The external function to get all the relevant information about a specific dungeon by its ID .", "title": "", "metadata": ""}
{"_id": "900d8a1fb7bf7fd5ea1923045cdfe71f", "text": "Authorize a third party operator to manage ( send ) msg . sender's .", "title": "", "metadata": ""}
{"_id": "888085f9009488eeeb70892f5ed58ead", "text": "Returns the bonus multiplier to calculate the purchase rate .", "title": "", "metadata": ""}
{"_id": "3c555ba26604b293e567a6d19117f092", "text": "switch off setup mode .", "title": "", "metadata": ""}
{"_id": "c34b3b7e645b51fc7214c90803c930c9", "text": "function will identify what period of crowdsale we are in and update the rate .", "title": "", "metadata": ""}
{"_id": "7073e79a6bed8184c456013455f8a40e", "text": "preparation for voting ( application for voting ) long enought to go to next phase .", "title": "", "metadata": ""}
{"_id": "6ae28bf3888b92234c967300a0fb8bbc", "text": "tx1 2 : players submit to a particular commit hash their stack of pogs ( the two txs can happen on the same block , no one is waiting ) these go to the Cryptogs contract and it is transferStackAndCall'ed to here .", "title": "", "metadata": ""}
{"_id": "4045906d03d7f09174930baabdd20608", "text": "Gets account's balance .", "title": "", "metadata": ""}
{"_id": "5a1687b1ecb5259d6a183a8b11b356cd", "text": "Set the number of tokens to hold from transferring for a list of token holders .", "title": "", "metadata": ""}
{"_id": "7c18040a394a7833026c5c6e0e8f9ef5", "text": "modifier to scope access to cro / / reverts .", "title": "", "metadata": ""}
{"_id": "6cf03c7e0fbc7d25bfec79a8a771826b", "text": "Get variable .", "title": "", "metadata": ""}
{"_id": "74740386ca52c375acd74ff88056e18b", "text": "game info edit .", "title": "", "metadata": ""}
{"_id": "db023dd7808708bf79bbfb15ecf28ad1", "text": "Takes the last node in the user's DLL and iterates backwards through the list searching for a node with a value less than or equal to the provided _numTokens value .", "title": "", "metadata": ""}
{"_id": "f538847c85832b45c73de28f24319aa7", "text": "generate new carnitaAsada .", "title": "", "metadata": ""}
{"_id": "a32530556bd5244eef484125d37c977b", "text": "For creating Tot .", "title": "", "metadata": ""}
{"_id": "4ca5d2e2dd3a61ddf753239fa5b9e214", "text": "main deposit function .", "title": "", "metadata": ""}
{"_id": "6fdf08e4d6f38c3dd4d0a02f97b87f05", "text": "Withdraws ETH to workshop address .", "title": "", "metadata": ""}
{"_id": "c265f10dfe8263cdd15586cbcc5bc62d", "text": "Withdraws all dividends held by the caller sending the transaction , updates the requisite global variables , and transfers Ether back to the caller .", "title": "", "metadata": ""}
{"_id": "ce01f9cfb6f609cffb9f5dfa7808d756", "text": "function name : getAccountInformation purpose : be the getter of the information of the account goal : to get the amount and the acount of a compliance account .", "title": "", "metadata": ""}
{"_id": "3f239354fc826e149b246d86cc8c0c92", "text": "To start a new trading staking-interval where the price of the FEE will be updated .", "title": "", "metadata": ""}
{"_id": "e6fdd48724d892cee13221cbe901ae49", "text": "base price .", "title": "", "metadata": ""}
{"_id": "c57951979229a7a4615489a3d9a3ecb0", "text": "WTF you want to burn LAMBO ! ? .", "title": "", "metadata": ""}
{"_id": "f50f9fe7f66d71e0e91eb2c258d05a06", "text": "Get the current balance of the contract .", "title": "", "metadata": ""}
{"_id": "e3df4f9cbd3c79670d22cc8deda191b9", "text": "Wrap up CrowdSale and direct any ether stored in this contract to etherVault .", "title": "", "metadata": ""}
{"_id": "0c20d4f292ade5ccf447435598adffd2", "text": "Poslje ETHje ali tokene klicatelju .", "title": "", "metadata": ""}
{"_id": "cb199c1ab07ac75f293577ec9769db4e", "text": "Each player ( address ) can only have one tile on each board .", "title": "", "metadata": ""}
{"_id": "502b30a89e1dc070b6c79c71d2ee7636", "text": "Mints new TDP token and rewards to caller as per the coin age .", "title": "", "metadata": ""}
{"_id": "62a8395aea620456a67a0e45820d8df0", "text": "Lodge deposits for a set of address hashes .", "title": "", "metadata": ""}
{"_id": "b17b396c034afc489c9b5d09a2de5198", "text": "Matches a posted trade .", "title": "", "metadata": ""}
{"_id": "a50dc6aefd1177f693568614c0736f3c", "text": "called by the owner on emergency , triggers paused state .", "title": "", "metadata": ""}
{"_id": "e9d8a78f9691d1ce8a745259d3b00d27", "text": "Return started state false if the crowdsale is not started , true if the crowdsale is started and running , true if the crowdsale is completed .", "title": "", "metadata": ""}
{"_id": "5782f85137e16b56ed6c4048585b1878", "text": "Cancel a transaction that has not been completed .", "title": "", "metadata": ""}
{"_id": "ff085eb5c6f779c2b1b1fac15b508f8c", "text": "allows the owner to update the contract registry contract address .", "title": "", "metadata": ""}
{"_id": "2582b4b24545c3f74d2a2f486f6a7e08", "text": "Update marriage licence image hash , either partner can update .", "title": "", "metadata": ""}
{"_id": "52b7f01f822ea5184a23965928119f59", "text": "Destruct one contract .", "title": "", "metadata": ""}
{"_id": "0512040e16838a22705f8e03ab54825f", "text": "Assign amount_ of tokens to investor identified by to_ address .", "title": "", "metadata": ""}
{"_id": "c8826e7f51224772fccdae7e7babfd4d", "text": "Fuction called when somebody is buying tokens .", "title": "", "metadata": ""}
{"_id": "5dfde853f0433117a167d4e6fdf1c87b", "text": "Allows you to get ethereum from the contract .", "title": "", "metadata": ""}
{"_id": "5a8618a81a11b4585ffb8fa4d4c5e0b8", "text": "Start Round B .", "title": "", "metadata": ""}
{"_id": "ad450ee18c6637e9168420c3a421f488", "text": "This is a test contract , so kill can be used once it is not needed .", "title": "", "metadata": ""}
{"_id": "50a0528421c5f777e3d007bab3220ebd", "text": "A distinct URI ( RFC 3986 ) for a given token .", "title": "", "metadata": ""}
{"_id": "012e99aa15bfc5f7ca1b73d8392fea53", "text": "change gas limit for oraclize callback note : should be changed only in case of emergency .", "title": "", "metadata": ""}
{"_id": "409153a17d20fa8f9afad38f4ac05b4b", "text": "converts the token to any other token in the bancor network by following a predefined conversion path and transfers the result tokens to a target account note that the converter should already own the source tokens .", "title": "", "metadata": ""}
{"_id": "83ad5c48a02a4c3c5228b3637c35a92f", "text": "Checks if tokens are unlocked .", "title": "", "metadata": ""}
{"_id": "d94287b5d09e3e0b48f08d5e9ef4305a", "text": "allows user to lock tokens to enable trading for a given market contract .", "title": "", "metadata": ""}
{"_id": "d0d3bcc30138864b9ce83ddd739712ab", "text": "Actually buy the tokens requires an active sale time and amount above the minimum contribution and sold tokens inferior to tokens for sale .", "title": "", "metadata": ""}
{"_id": "09ca7bc835729ef662a41d868bd54cb8", "text": "Updates tokenURI for tokenId - to be used to correct errors .", "title": "", "metadata": ""}
{"_id": "cc19c6e89939f42f68d3f19ea53fa9c1", "text": "Only I can use this once I have reached my goal .", "title": "", "metadata": ""}
{"_id": "e69984dd364f6e847c0395dc28195c5e", "text": "Accept ethers from one account for tokens to be created for another account .", "title": "", "metadata": ""}
{"_id": "647cbb6df6034fd5f0e477ba2b5932b0", "text": "if something goes wrong , the owner can trigger pay back .", "title": "", "metadata": ""}
{"_id": "614ae469f58cf8d11eab6b13b9c9dafa", "text": "Method called by game contract msg . sender .", "title": "", "metadata": ""}
{"_id": "3b225fc48793fe1c0982fa2a5d50ffc7", "text": "Let the pending admin confirm his address and become the new admin .", "title": "", "metadata": ""}
{"_id": "a792a89e16084975b127fc13f6426314", "text": "amount of wei-tokens minted .", "title": "", "metadata": ""}
{"_id": "d67800f652927ef0328d56176415f65d", "text": "Description update .", "title": "", "metadata": ""}
{"_id": "dbbf1cdee224748e6424f10bbbcefad2", "text": "Unfreeze token transfers .", "title": "", "metadata": ""}
{"_id": "6f46df5b58aa541f5489a49b604d268a", "text": "Allow to withdraw ERC20 token from contract .", "title": "", "metadata": ""}
{"_id": "09302a06a0436531d080b99338076ec7", "text": "Terminate the pool by picking a winner ( only poolManager can do this , after the pool is ended and some time has passed so the seed has changed many times ) .", "title": "", "metadata": ""}
{"_id": "bce9ad9d2e109291e16f20d93eecc770", "text": "Calculates token price .", "title": "", "metadata": ""}
{"_id": "a23f2a7149ad717fbd33c6854e17d01a", "text": "distributePreBuyersRewards ( ) : private utility function called by constructor .", "title": "", "metadata": ""}
{"_id": "53560d377a398a8f1f8d4af4107d6009", "text": "Function to claim ANY token stuck on contract accidentally .", "title": "", "metadata": ""}
{"_id": "21724f58001bed7ddcf0f6b02b12beb5", "text": "public function to create a player , can only be called by owner of smart contract .", "title": "", "metadata": ""}
{"_id": "a0f045d0f5193fb3c12c7ba33a64212d", "text": "Provides a registered token's address when given the token name .", "title": "", "metadata": ""}
{"_id": "6186c3862969b33de806f20d559a63e1", "text": "returns always 1 because exchange rate of the token to itself is always 1 .", "title": "", "metadata": ""}
{"_id": "dd2a730f5219e46e3147adc55edf0ce1", "text": "get ether price .", "title": "", "metadata": ""}
{"_id": "9d5765944421d53d479a2009bd07fcb6", "text": "Allows to check an investment .", "title": "", "metadata": ""}
{"_id": "2d526fa6c11e1d620614d187303f3c26", "text": "byte The byte equivalent .", "title": "", "metadata": ""}
{"_id": "2db234f9dabe0e6496c4b8067d3bdcbb", "text": "buy cards with ether .", "title": "", "metadata": ""}
{"_id": "aaa2a608dee1b431a0de60d9ab654b69", "text": "return arbToken and low bytes from an HGame .", "title": "", "metadata": ""}
{"_id": "66be0c901e714fd87aee2921d98e3ec4", "text": "Transfere tokens to audit partners ( 2 ) .", "title": "", "metadata": ""}
{"_id": "fd19bea428ff05fa6b42eb8f906d3222", "text": "Look up how much the spender or contract is allowed to spend ? .", "title": "", "metadata": ""}
{"_id": "1420ecbe772275e0984084ffcd1b9803", "text": "bonus calculation for ICO on purchase basis .", "title": "", "metadata": ""}
{"_id": "25827973c191937fcc681523bbc9761c", "text": "can't override validPurchase because need to pass additional values .", "title": "", "metadata": ""}
{"_id": "7b95dcf8bccdfa2a08273478fb208c03", "text": "Gets all versioned addresses .", "title": "", "metadata": ""}
{"_id": "4300f59a6de21ac7372a431f0906364e", "text": "check if the goal is reached .", "title": "", "metadata": ""}
{"_id": "87683602f7f3562972f8e1bd04fafc9f", "text": "Define how many wonderful Lemon Tokens will be issued for donators participating the selfdrop .", "title": "", "metadata": ""}
{"_id": "665e981229aa88f1c97c537ae5cb6990", "text": "MintableToken modifiers .", "title": "", "metadata": ""}
{"_id": "075dcfb5af73e36e8aa5f944e4ec898f", "text": "Emergency situation .", "title": "", "metadata": ""}
{"_id": "1814b1dc121f723c55a19ebdefe6d8a5", "text": "The manager can add manually the investors from the previous versions , so that those that invested in the older versions can join us in the new and updated versions .", "title": "", "metadata": ""}
{"_id": "c8e08725da51d47e7a26b471993bd5a8", "text": "securePay can be used by client if he wants to securely set client address for refund together with payment .", "title": "", "metadata": ""}
{"_id": "69b09a2ee3247ed70ad89a5d37ba3697", "text": "For other Tokens .", "title": "", "metadata": ""}
{"_id": "542e7474f05760dd12bf64f8390af347", "text": "Has chibi necromancer trait ? .", "title": "", "metadata": ""}
{"_id": "b9a4550aa8f0f77047f61eab0732e3fd", "text": "Tarot by donation .", "title": "", "metadata": ""}
{"_id": "6a9596425459b8e45d1410d4a5bec57f", "text": "Returns total number of actions after filers are applied .", "title": "", "metadata": ""}
{"_id": "50fb2647af8a2c3036741282f864b55f", "text": "Pauses the whitelist if there is any issue .", "title": "", "metadata": ""}
{"_id": "66b842ea122ec2f72c9210a5d2875a1a", "text": "Admin can withdraw ether beneficiary address .", "title": "", "metadata": ""}
{"_id": "134ba6e869276aefb35e0cf0e30d37b4", "text": "allow to send tokens between recipients .", "title": "", "metadata": ""}
{"_id": "1b37cd4b256dc9753853138e7f17d65a", "text": "create a bet .", "title": "", "metadata": ""}
{"_id": "f176c5428d99a56510bda6280041e7f0", "text": "Checks if an affiliate is valid .", "title": "", "metadata": ""}
{"_id": "e0cfc228ea7f8ed39bbed18e668bda70", "text": "set distributor for address : state true / false on / off distributing .", "title": "", "metadata": ""}
{"_id": "967191b38f3aa0f1d42b0179ceb9bc9d", "text": "The claimTokens ( ) should only be called after donation ends or if a security issue is found .", "title": "", "metadata": ""}
{"_id": "c6ae2f1e13d2f5e7fcc332d0713f7d3a", "text": "Approve specified address to make transfers in lock up period .", "title": "", "metadata": ""}
{"_id": "4d4dcf3fff672f1a9144e194789979e2", "text": "checks the state when validating a purchase .", "title": "", "metadata": ""}
{"_id": "cd85462d6055225b3fbea147c7f80e04", "text": "for ending the contest in a stalemate .", "title": "", "metadata": ""}
{"_id": "749c6a5caf09026805c5ca02c452182b", "text": "called by the owner to transfer 'etherAmount' to 'beneficiary' .", "title": "", "metadata": ""}
{"_id": "f9bd35c2298914866328403de9cc7867", "text": "Change the address of the global administrator .", "title": "", "metadata": ""}
{"_id": "d8dc6034fd3485e475dc48ea8dd92120", "text": "modifier for some action only owner can do .", "title": "", "metadata": ""}
{"_id": "05506707a3eade32386d0b426c13df21", "text": "Funtions Public .", "title": "", "metadata": ""}
{"_id": "3317148d5c5172ef3793495217a14737", "text": "record the contribution of a contribution .", "title": "", "metadata": ""}
{"_id": "5e3e5eebcd3cb796f1428b6368b590f2", "text": "Allows the owner to register new candidates .", "title": "", "metadata": ""}
{"_id": "e7d2d2517329043ea30e9d641536b558", "text": "prevents contracts from interacting with FOMO3TESTd .", "title": "", "metadata": ""}
{"_id": "153682c8434be1059eb8f44e1005ae1b", "text": "Prevents North Pole from issuing Santa Coins .", "title": "", "metadata": ""}
{"_id": "6ab20dc8f560f1522661672369c37b3c", "text": "Returns true if the given _address is a contract , false otherwise .", "title": "", "metadata": ""}
{"_id": "1dad75bee9e850409da8704ebba5a193", "text": "Fills the input order .", "title": "", "metadata": ""}
{"_id": "e4ce8ca6d705be05ac586489f4b29785", "text": "Dev cut .", "title": "", "metadata": ""}
{"_id": "6be210379e23359b41da9848f2823b2a", "text": "To be done after killing the old conttract else conflicts can take place .", "title": "", "metadata": ""}
{"_id": "692ae72de06aa6e143b2dde616ded947", "text": "Unfreeze team Fundaria Stakes .", "title": "", "metadata": ""}
{"_id": "d6a31f34721f74b8776240ab6a637bae", "text": "FsTK Token .", "title": "", "metadata": ""}
{"_id": "52815db7de6e2bde42dd135c0240d99a", "text": "End minting mode .", "title": "", "metadata": ""}
{"_id": "79a66e9fdee0d901483e1af0d876038c", "text": "yea votes , nay votes , quorum ( total votes ) .", "title": "", "metadata": ""}
{"_id": "9682668cf3bd0efab879921ce4a54f7a", "text": "Start therefund period .", "title": "", "metadata": ""}
{"_id": "e195ebcf071dd303f48a173ca9c24d7f", "text": "Sets the address associated with an ENS node .", "title": "", "metadata": ""}
{"_id": "b3c9762fd87d5cfaa29eac0b0d080310", "text": "First redemption request ID .", "title": "", "metadata": ""}
{"_id": "0467815db40e24708620c03b8bad0702", "text": "2 . 9 card Trading .", "title": "", "metadata": ""}
{"_id": "aafdcbe567da3762dfdda0d7ea35dcfd", "text": "Give permission to a wallet for freeze tokens .", "title": "", "metadata": ""}
{"_id": "8cee5f244dc1982e5d0f9f2cba4f1a11", "text": "This is pretty standard ownership change routine .", "title": "", "metadata": ""}
{"_id": "3cfb0a81906df6a04bf85419fff27b12", "text": "This function is internally called by the buyTokens function to ensure that investments are made during times when the ICO is not paused and when the duration of the current phase has not finished .", "title": "", "metadata": ""}
{"_id": "68f018b1020003a6a1eae38b7615aaec", "text": "Creates new tokens based on the number of ethers sent and the conversion rate .", "title": "", "metadata": ""}
{"_id": "3ca0b35117115c1810e16714d85dc3ba", "text": "You cannot return structs , return each attribute in Item struct .", "title": "", "metadata": ""}
{"_id": "1404208cf3182d53584ced976c4dddeb", "text": "allows the owner to update enable the conversion whitelist contract address when set , only addresses that are whitelisted are actually allowed to use the converter note that the whitelist check is actually done by the BancorNetwork contract .", "title": "", "metadata": ""}
{"_id": "aeca626a799e8f778c74341c1a1a2462", "text": "Ensure one can settle the channel identified by channelId .", "title": "", "metadata": ""}
{"_id": "b3aa4da8272e906ddbefc8de97df621d", "text": "Add users to whitelist .", "title": "", "metadata": ""}
{"_id": "b131a9290e248370e3272b4bc129f472", "text": "Change size of bucket .", "title": "", "metadata": ""}
{"_id": "38bc96294d86d94bb330213189e550e0", "text": "create the token manually to consume less gas per transaction when deploying .", "title": "", "metadata": ""}
{"_id": "03298cfd4c7542b0574afedaadf770e4", "text": "Purchase WBC Tokens for Self - ICO .", "title": "", "metadata": ""}
{"_id": "7b6a0068830f65b34d3c7fb2ce9b8604", "text": "internal method for processing the withdrawal .", "title": "", "metadata": ""}
{"_id": "7947031ec9383131639d3ff7d2c210bd", "text": "Transfer ownership of a given record .", "title": "", "metadata": ""}
{"_id": "5eb587ff6ae096c22dc2bd8f06b668bb", "text": "freeze account or unfreezen .", "title": "", "metadata": ""}
{"_id": "957a7003de6f5efd10c7655cfb58ce9a", "text": "Disable the token transfer .", "title": "", "metadata": ""}
{"_id": "cf6749371272c85322e48f3c079b178c", "text": "used to set the token Burner address .", "title": "", "metadata": ""}
{"_id": "e555d3d1d016f6f531fb2f6949a08c3b", "text": "client's capital .", "title": "", "metadata": ""}
{"_id": "e59f5888001f800576bef0489daed7fc", "text": "sels the project's token to buyers .", "title": "", "metadata": ""}
{"_id": "e862b3f76a64239102069a8269be4054", "text": "Returns the address currently assigned ownership of a given Zodiac .", "title": "", "metadata": ""}
{"_id": "7429ad12a9e1d8a131945dc49fbaf9a0", "text": "Configuration Functions .", "title": "", "metadata": ""}
{"_id": "f10e3c00d209cd55e556b3741c3996f1", "text": "Presale should notify that presale is finalized and mainsale is going to start .", "title": "", "metadata": ""}
{"_id": "6d8954ace5f8f58b7b714457a5789da9", "text": "Transfer Ownership .", "title": "", "metadata": ""}
{"_id": "7a11c8e3c95c546314d238e4a15fe80d", "text": "Send tokens to other wallets .", "title": "", "metadata": ""}
{"_id": "5728aab29c59def6eeaeca0351f4572a", "text": "Set the tokens bought .", "title": "", "metadata": ""}
{"_id": "9fb406cb7b364920c96ee48e3de82c1b", "text": "DET Transfer Transaction .", "title": "", "metadata": ""}
{"_id": "1d3ad06f266a8780a88189b928b872f4", "text": "Modifier Throws if called by any account other than the operator_ or owner .", "title": "", "metadata": ""}
{"_id": "8efcd0279d979c5de84881f89926b0da", "text": "true if crowdsale current lot event has ended .", "title": "", "metadata": ""}
{"_id": "7f77cf45b20a40ad1e8ce25b3bbc092b", "text": "A Security Precaution - - Don't interact with contracts unless you .", "title": "", "metadata": ""}
{"_id": "0b057c635969d36fb184504acd02af99", "text": "Withdraw the total of the top 100 bids into the beneficiary account .", "title": "", "metadata": ""}
{"_id": "7834c847cb2d762051c61e640ae07437", "text": "Subtracts a from b .", "title": "", "metadata": ""}
{"_id": "0eff307086e0347651731d4e56d1a82b", "text": "Withdraw traded tokens 1M at a time .", "title": "", "metadata": ""}
{"_id": "031b403c95e49b2092917836d8575730", "text": "get the second phase total supply .", "title": "", "metadata": ""}
{"_id": "8ed3b3b768d1148424acee4a6fe9cd40", "text": "Manually set the token price ( in wei - https : / / etherconverter . online ) .", "title": "", "metadata": ""}
{"_id": "7b174345ee14decd1564d2f3d0f20343", "text": "Rejects ETH transaction requests and erases all data associated with the request .", "title": "", "metadata": ""}
{"_id": "2fa7a78d6c6fc564a4725a48f954f5ed", "text": "sets minimum investement threshold .", "title": "", "metadata": ""}
{"_id": "ca37174e3bd953b68593559b4108aa05", "text": "So Owner can't take away player's money in the middle of the game .", "title": "", "metadata": ""}
{"_id": "5d5ba685151c5aec023d87abaa96e1c5", "text": "Checks if a given address currently has transferApproval for a particular Zodiac .", "title": "", "metadata": ""}
{"_id": "d9a5e24e8dd42b7be0b519e423cf3b53", "text": "finish mining coins and transfer ownership of WISE token to owner .", "title": "", "metadata": ""}
{"_id": "a084f6b80c4708346bf57f862435b1eb", "text": "Whitelist handler function .", "title": "", "metadata": ""}
{"_id": "9dab41c981465d5c4eae245087b1d0e4", "text": "Lock transfer during the ICO .", "title": "", "metadata": ""}
{"_id": "70b2ddebd648663fa4134febc6c65a32", "text": "Withdraw the funds of a given juror .", "title": "", "metadata": ""}
{"_id": "4e19d33a37ce5689c8248859600c4e03", "text": "returns the total number of pixels generated .", "title": "", "metadata": ""}
{"_id": "c99deee5dfc468b3f8ea91bbe69da2e0", "text": "This function must be used * * only if this contract balance is too low for oraclize_query to be executed .", "title": "", "metadata": ""}
{"_id": "9d4596e14ad3ff07872865f02d867bd3", "text": "( Re ) sets mint tap parameters .", "title": "", "metadata": ""}
{"_id": "331085a62629a2bd97dd5db8f9c0ac64", "text": "Delete a certificate administrator .", "title": "", "metadata": ""}
{"_id": "630def47bd7f9ad9b842e480c35aa87c", "text": "Allows execution by the owner only .", "title": "", "metadata": ""}
{"_id": "3ad264f2679d1630e57de4ec53918ddc", "text": "Disable any minting forever .", "title": "", "metadata": ""}
{"_id": "1f764b0f39143f1aa6fd23ba28b5d596", "text": "purchasing a parrot .", "title": "", "metadata": ""}
{"_id": "62237c11f7251ae3b266b91ad19e35d4", "text": "change fee percent .", "title": "", "metadata": ""}
{"_id": "a1cb3ea861806876cd3e10f0983d583f", "text": "For creating Pow .", "title": "", "metadata": ""}
{"_id": "b11d264a1841e2fda3875ccb2cbb8b00", "text": "swap maker and taker's tokens according to their signed order info .", "title": "", "metadata": ""}
{"_id": "ed8264c2aad573d216c42175bb5ec244", "text": "Claim auction tokens for msg . sender .", "title": "", "metadata": ""}
{"_id": "a42ff26920d4ced21a12220666170b31", "text": "Claim all bought tokens .", "title": "", "metadata": ""}
{"_id": "6e6631def80d2083aa52bfe73464fca5", "text": "Sets tokens contract address from which check balance of tokens .", "title": "", "metadata": ""}
{"_id": "5d4467befd06b309af98a31246175641", "text": "Get result from PRNG .", "title": "", "metadata": ""}
{"_id": "ed226cb2c3cac245b56472a25e529db6", "text": "Pay balance from wallet .", "title": "", "metadata": ""}
{"_id": "dc0b29c046fa747b5409a2c91c08d42d", "text": "Change the ICO end date .", "title": "", "metadata": ""}
{"_id": "6cc3f9d52e195fbd719362f84139f2f0", "text": "A getter to look up a Pledge's details .", "title": "", "metadata": ""}
{"_id": "6897438c2c842638db5601253148b868", "text": "Day 1 : + 20 bonus .", "title": "", "metadata": ""}
{"_id": "b35d9acac9ccee246cfebaf8605cf8ec", "text": "onlyDonor Approves the proposed milestone list .", "title": "", "metadata": ""}
{"_id": "6c0eee5ff543423375c197a8a2cc1c66", "text": "Creates a div card with bankroll as the owner .", "title": "", "metadata": ""}
{"_id": "36dc3871ac450ccec68ade00a5a85bcd", "text": "return _owner how many tokens .", "title": "", "metadata": ""}
{"_id": "81657e95c4733b3e50b241ee3d4cf361", "text": "Will initiate the next game by clearing most of the data and calculating the payouts .", "title": "", "metadata": ""}
{"_id": "e6e193edc09b8acbf44b6bea42060bbe", "text": "Moves all funds from contract to owner's wallet .", "title": "", "metadata": ""}
{"_id": "457e0a91f7cafcc2007ec003cddba23b", "text": "withdraw accumulated balance to the payee .", "title": "", "metadata": ""}
{"_id": "c32f34ca777473f9f6e4db27627e3f0d", "text": "Deposit stake amount .", "title": "", "metadata": ""}
{"_id": "4a6027106530ced2bcabd3750501a5b8", "text": "Send ether to the fund collection wallet .", "title": "", "metadata": ""}
{"_id": "1f1e590ebb017e50c5eb2f21cc792988", "text": "Create the contract , and sets the destination address to that of the creator .", "title": "", "metadata": ""}
{"_id": "f85f9ef5b3bdde33c450eb9b372dc010", "text": "Submit the arbitrator's answer to a question .", "title": "", "metadata": ""}
{"_id": "7908a374188e8407d9f4560cb5a6bd67", "text": "Retrieves eth balance of sender at the time of redemption .", "title": "", "metadata": ""}
{"_id": "87e107b43b5f6cc262fbe6f71bb04f36", "text": "Burns _amount tokens from _tokenHolder by _operator .", "title": "", "metadata": ""}
{"_id": "00c492be1ef2b1f1d6e1a638063a79c2", "text": "to be done only the owner can run this function .", "title": "", "metadata": ""}
{"_id": "1a2cc41462bdbd35fdc50febdb26b167", "text": "Based on http : / / www . codecodex . com / wiki / Calculate_an_integer_square_root .", "title": "", "metadata": ""}
{"_id": "b2ce0f27c9774029a7c7073c64213359", "text": "setperate this function is for unit testing .", "title": "", "metadata": ""}
{"_id": "a201c54daffa7f1dbe065799c9897e5a", "text": "Team lock .", "title": "", "metadata": ""}
{"_id": "ca3af5b3dac3c781e826dc722fa4844a", "text": "This function will return the details for the connected user ( planets count , attack count , defense count ) .", "title": "", "metadata": ""}
{"_id": "de57573d63d27ff0224394132296eefd", "text": "set liveness .", "title": "", "metadata": ""}
{"_id": "c15e84ec0a69525826405162f6b0145f", "text": "Send to multiple addresses using a byte32 array which includes the address and the amount .", "title": "", "metadata": ""}
{"_id": "edbaa2a42df0ca01b13d2a64baa0f312", "text": "Get game info by game id .", "title": "", "metadata": ""}
{"_id": "c97ce155acf98ec91101d16d4fc48275", "text": "claim an animal from animal factory .", "title": "", "metadata": ""}
{"_id": "e32b014fc95801f285cfc6151555ea05", "text": "Stop participate game , store teams hash .", "title": "", "metadata": ""}
{"_id": "41f233ca718d66f910ba64e098f5c373", "text": "Internal function to add a checklist item to the Originals set .", "title": "", "metadata": ""}
{"_id": "48bdae97f3bcaaba09b570737516874b", "text": "The two withdrawal functions below are here so that the dev can access the dividends of the contract if it owns any artworks .", "title": "", "metadata": ""}
{"_id": "d6445dff8b91794172fb9afd56e32657", "text": "Transfer Bounty Reserve Tokens .", "title": "", "metadata": ""}
{"_id": "00f543b093293a85548528160f02fcd0", "text": "End presales .", "title": "", "metadata": ""}
{"_id": "fe52f28fec1cf8966190720d35bbb728", "text": "Gets absolute hardcap value which means it will be greater than softcap value .", "title": "", "metadata": ""}
{"_id": "fb41f87cd8b01b96375b3a8dfe43199e", "text": "Allows invetsot to register thier Level Up Chain address .", "title": "", "metadata": ""}
{"_id": "1684f19d8f62febf647c6625ac97ae5a", "text": "Prevent short address attack .", "title": "", "metadata": ""}
{"_id": "d03696f98683621d2fcfa17fbbe60ba9", "text": "Releases Jiffys that have been vested for caller .", "title": "", "metadata": ""}
{"_id": "f1e31918a648fdebef8ae7f7f6bb1bb0", "text": "Modifier makes methods callable only when the contract is not frozen .", "title": "", "metadata": ""}
{"_id": "3f260cc8bd1feba74c4e040c26d8e79e", "text": "set camp for this contract .", "title": "", "metadata": ""}
{"_id": "46854a9901a815aa46645a05ffc782b6", "text": "cancel auction .", "title": "", "metadata": ""}
{"_id": "ddc9d9be94b263e84959724afb5cd6f8", "text": "Function to claim eth on contract .", "title": "", "metadata": ""}
{"_id": "3db18daa903f06380fbdf035078ba563", "text": "clean up function to call a self-destruct benefiting the owner .", "title": "", "metadata": ""}
{"_id": "908a79b1fbd1f1e445a304e042b4c193", "text": "this function is used to let admins give cities back to owners of previous contracts .", "title": "", "metadata": ""}
{"_id": "05edc0971fb5257ae11c604369fc160d", "text": "Allow official apps to create ship .", "title": "", "metadata": ""}
{"_id": "b3452cbe72b2effdabb17aac063bc6af", "text": "to be overridden in tests .", "title": "", "metadata": ""}
{"_id": "cec581fd3c3af0338bc066892688e070", "text": "function to change the owner share on buying transactions can only be called from owner wallet .", "title": "", "metadata": ""}
{"_id": "9e694d8af0ab7c895ba8e8af9bba1443", "text": "if only one player ever ends up submitting a stack , they need to be able to pull thier tokens back .", "title": "", "metadata": ""}
{"_id": "a5a268e98924117a657baa7e77d7d491", "text": "remove a role from an address .", "title": "", "metadata": ""}
{"_id": "4c74e7c9b2cb5fb832cb2bf6db92f7dd", "text": "in-game use of CITYs .", "title": "", "metadata": ""}
{"_id": "ef0a88dd682ff83b307aaf34462680fa", "text": "Overridder modifier to allow exceptions for pausing for a given address .", "title": "", "metadata": ""}
{"_id": "8cc8edb2925cc1046467796c45c72ce0", "text": "Create tokens .", "title": "", "metadata": ""}
{"_id": "4c62ba2a8c017eb83855293859f07766", "text": "lock tokens or lock 0 to release all .", "title": "", "metadata": ""}
{"_id": "e72a4c1a92530497d0cbfb50367bbcfc", "text": "Removes a NFT from owner .", "title": "", "metadata": ""}
{"_id": "74199cac78b4f4c15f732d66f1c069ce", "text": "changes owner of contract .", "title": "", "metadata": ""}
{"_id": "1986ade579f480330f36b0cedb477f69", "text": "Allows the current owner or operators to remove operator .", "title": "", "metadata": ""}
{"_id": "21e9c5eb8a957305cc1e3f1c104f2d1d", "text": "Frontend can use this to find the birther percent for animal .", "title": "", "metadata": ""}
{"_id": "8262976b374254be94d545ab5ffa595d", "text": "Get soft cap amount .", "title": "", "metadata": ""}
{"_id": "f6a61e55e97e45d5e6070dfe17752681", "text": "transfer holds from to ( only holds , no bouns ) this will withdrawal the holder bonus of these holds and the to's fullfilled will go up , since total bonus unchanged , but holds goes more .", "title": "", "metadata": ""}
{"_id": "752c9e3d08a703408faa06754f7a4007", "text": "function for adding address to whitelist .", "title": "", "metadata": ""}
{"_id": "b999a28791a3bf2de42068550d643f02", "text": "A safe way to handle addition .", "title": "", "metadata": ""}
{"_id": "5134f445bc9041a05432a47e0f8c13be", "text": "Throws if paused is true .", "title": "", "metadata": ""}
{"_id": "6b54573901dad5781eb9bb0db270bb82", "text": "Allows any user to get a part of his ETH refunded , in proportion to the reduced of the allocation .", "title": "", "metadata": ""}
{"_id": "2fd98de1f66f78701ebc978580934c55", "text": "Set ParamsTransfer .", "title": "", "metadata": ""}
{"_id": "7bbe8ea0df5bc3a4fcd466b02841fa29", "text": "players withdrawing ETH .", "title": "", "metadata": ""}
{"_id": "75ffaf283155171953ae2cbe8203aa8d", "text": "Shows who is the pending admin for this contract .", "title": "", "metadata": ""}
{"_id": "d7c0604314d31b558a6bb57bf3752caf", "text": "Sets a new CFO .", "title": "", "metadata": ""}
{"_id": "f2ece23b4f82a4ce15db58a24ae2fa6b", "text": "Approve spender to transfer amount of asset currency from the Hotwallet and make a consequential call .", "title": "", "metadata": ""}
{"_id": "690e2b3f32c9c22038b16a91e87e4c04", "text": "Unlock vested tokens and transfer them to their holder .", "title": "", "metadata": ""}
{"_id": "df6cd449fc4ea8ddec339b9161693a97", "text": "In case the ICO is emergency-terminated by House , allows investors to pull back the investments .", "title": "", "metadata": ""}
{"_id": "00a835c80235c2367dfeb267c726c1f2", "text": "Withdraw P3D dividends and send balance to owner .", "title": "", "metadata": ""}
{"_id": "8dcb5456b8478a696756163f130b0760", "text": "set minimal amount to be sent .", "title": "", "metadata": ""}
{"_id": "750463d5b4e679526440a779ff5c2c5e", "text": "transferring tokens from one cell to another .", "title": "", "metadata": ""}
{"_id": "baa5464a3e5c5837fc0ca33316d99fcd", "text": "Withdraw the token .", "title": "", "metadata": ""}
{"_id": "3161c14b74f4c85cb2d6978dd80a9123", "text": "Calculates amount with bonus for bonus milestones .", "title": "", "metadata": ""}
{"_id": "5a1a5cad1747c7d29a550b8efecc08c7", "text": "Add / Remove to whitelist array of addresses based on boolean status .", "title": "", "metadata": ""}
{"_id": "ffb125fe8be2e59b94dfaa105b2d2b5b", "text": "Function to update a bet manually .", "title": "", "metadata": ""}
{"_id": "465d6f82e6d4366af2d4e044c95db869", "text": "A is msg . sender .", "title": "", "metadata": ""}
{"_id": "687dcd4a143fbc0b4678b8d7ec86df23", "text": "override the claimRefund , so only user that have burn their token can claim for a refund .", "title": "", "metadata": ""}
{"_id": "fd1c87162b8cd49663f96517c83e8280", "text": "Requires value to be divisible by granularity .", "title": "", "metadata": ""}
{"_id": "36ff423c5a419c47e58ed4876da909d8", "text": "Lock the shares so contract owners cannot change them .", "title": "", "metadata": ""}
{"_id": "96e40c9599b463f48dfd6bb89d0557e3", "text": "anyone can call this and get his money back .", "title": "", "metadata": ""}
{"_id": "b1b0cafff8b6a8613aa092ecfd43eedf", "text": "Creates a new promo item with the given name , with given _price and assignes it to an address .", "title": "", "metadata": ""}
{"_id": "368c7403fdc755520a57268f7b338118", "text": "Sending tokens for sale to the sale contract address .", "title": "", "metadata": ""}
{"_id": "28082f43a76ef1ef9d23500aade34c93", "text": "get token amount rewarded to participant in specified round .", "title": "", "metadata": ""}
{"_id": "bbcf3fe292e03351e745411810f4c635", "text": "Mint coins buyer tokens .", "title": "", "metadata": ""}
{"_id": "6656e5c99d60c9bec82f0ed8411166f6", "text": "Ends the fundraising period and sends the ETH to the ethFundDeposit wallet .", "title": "", "metadata": ""}
{"_id": "6e8e8f42744abd7b088e51a76af96e15", "text": "XRT emission value for utilized gas .", "title": "", "metadata": ""}
{"_id": "7f2bd46e27fcd5c47877b09efcde15f1", "text": "give the crowdsale a new newDeadline .", "title": "", "metadata": ""}
{"_id": "5c39734c9eac79cb30bc7978c38c342e", "text": "Modifier to make a function callable only when the contract is stopped .", "title": "", "metadata": ""}
{"_id": "644f41a6bcf0fd15bd9d7b7a9be4b3dc", "text": "Adds an provided value to the Set .", "title": "", "metadata": ""}
{"_id": "033497bd60e020f854b0aa33be2b78e2", "text": "change binary address .", "title": "", "metadata": ""}
{"_id": "731986b84cc61887d964d3208bb65ce2", "text": "Remove an address from an account for a user .", "title": "", "metadata": ""}
{"_id": "26b0878face5ee9ee13c7c3aa4e3a70d", "text": "Initilizes the token with given address and allocates tokens .", "title": "", "metadata": ""}
{"_id": "9b5443b83a0d25fcef41adde8e600be2", "text": "issue token 2 : issue token take back .", "title": "", "metadata": ""}
{"_id": "dea097aaffc0aa3f79868eefb1d80821", "text": "just for test cashin and cashout on small amount before let it go .", "title": "", "metadata": ""}
{"_id": "95834d402d4e61af5eabfabbd7f39d2e", "text": "allow owner to remove arbitrary tokens included just in case contract receives wrong token .", "title": "", "metadata": ""}
{"_id": "1ef13f0b556fc39ace1931580cf0838e", "text": "bit from 0 to 255 .", "title": "", "metadata": ""}
{"_id": "c83e6a08f100d53231d0a65076f7347c", "text": "Calculate and reward points to the current King .", "title": "", "metadata": ""}
{"_id": "db66b3ea45f03a1726d6b52e63919812", "text": "The authority can add members until they reach member_count , and then the contract is finalized ( updateAuthority ( 0 , DSAuthModes . Owner ) ) , .", "title": "", "metadata": ""}
{"_id": "61c97e5815ecc5005f2090fa758d3db5", "text": "Halt ICO in case of emergency .", "title": "", "metadata": ""}
{"_id": "93076b3cdd6e20d19f1ba72f12c25883", "text": "Get ships for a specified user .", "title": "", "metadata": ""}
{"_id": "02c0d7003e15752f7f4be92b31b6f1d4", "text": "claims last bet .", "title": "", "metadata": ""}
{"_id": "80514789191f2b80cb086898fc019d04", "text": "Converts the Ether accrued as dividends back into EPY tokens without having to withdraw it first .", "title": "", "metadata": ""}
{"_id": "261c4c3a63e22a3750d94f04d8e9aac4", "text": "player submit their option .", "title": "", "metadata": ""}
{"_id": "b04128d5862e9a0fdba735012d7fea25", "text": "Guarantees that _tokenId is a valid Token .", "title": "", "metadata": ""}
{"_id": "324ddcd9d23599ec416ce76389392863", "text": "To increment allowed value is better to use this function .", "title": "", "metadata": ""}
{"_id": "4347b5f76d82c3e110b15d70cf24f93e", "text": "controller update balance of Netf to smart contract .", "title": "", "metadata": ""}
{"_id": "936ec0942c54c420195292fe1c4446d9", "text": "close contract .", "title": "", "metadata": ""}
{"_id": "4e78af6e74c331623e30eded2098a53b", "text": "Developer can change fee .", "title": "", "metadata": ""}
{"_id": "6df3354657dbc361b6fd71e198a08b94", "text": "Gets net outcome tokens sold by market .", "title": "", "metadata": ""}
{"_id": "84cfd49de77941dc3f8107d6a391f4b1", "text": "Register new policy rule .", "title": "", "metadata": ""}
{"_id": "a86841fc75d5d55c7c60dc9d4030fab1", "text": "Process Stakes sale .", "title": "", "metadata": ""}
{"_id": "3a4ad4dc055373d4f6f90f547d8ed095", "text": "Gets days for which an address is locked with locked index .", "title": "", "metadata": ""}
{"_id": "60e15bdd6972ecd3c854634066e92a8e", "text": "Sets MX record data associated with an ENS node .", "title": "", "metadata": ""}
{"_id": "b7c453f55f061c1217e8eb3497941cc4", "text": "initializes the contract parameters ( would be constructor if it wasn't for the gas limit ) .", "title": "", "metadata": ""}
{"_id": "39b47f33632886d87d8f206b96956505", "text": "Reset a dungeon run for a given hero .", "title": "", "metadata": ""}
{"_id": "3659bb46f632391048590c13bef044e5", "text": "Make modifyMetadataHashes ( ) pausable .", "title": "", "metadata": ""}
{"_id": "39f96e298f0a2ea7f01f58295da1c42b", "text": "enable single payee .", "title": "", "metadata": ""}
{"_id": "e6e3ed9051a9fbdcf1c137d3dd368bc7", "text": "Notifies the controller about an approval , for this BaseTokenSale all approvals are allowed by default and no extra notifications are needed .", "title": "", "metadata": ""}
{"_id": "b075e6ff70a38e7458c6967fa97f43be", "text": "returns true if a given contract supports the given feature ( s ) , false if not .", "title": "", "metadata": ""}
{"_id": "02df4a705c7a094e098f695234b40a48", "text": "Get the Highest Miles Owner per each Medal Leader .", "title": "", "metadata": ""}
{"_id": "cd3f0eee16ae720785475c8d344b96b1", "text": "associating each shop with a token to prevent anyone gaming the system .", "title": "", "metadata": ""}
{"_id": "8b5e38f6c402c569fa63a9f904ce3e4b", "text": "Allows owner to add hashType .", "title": "", "metadata": ""}
{"_id": "fc52df24905f6a59156b993c839b553c", "text": "Returns true if the ICO is a success , false otherwise .", "title": "", "metadata": ""}
{"_id": "f33622b1618ea208d982777625310c33", "text": "Gets the range store at the specified index .", "title": "", "metadata": ""}
{"_id": "37fafb900d961af417ff46e9ade131b6", "text": "this function is triggered manually by owner to finish game after countdown stops .", "title": "", "metadata": ""}
{"_id": "4201764648225d988d4b1a27b1add3ff", "text": "Create and execute transaction from wallet .", "title": "", "metadata": ""}
{"_id": "ea6357fb8caf7fb0b41e4c811bf9a4fd", "text": "remaining uint256 .", "title": "", "metadata": ""}
{"_id": "9db20517c8f8e54b7bcb7f0db475c648", "text": "Transfer tokens from one holder to the other holder .", "title": "", "metadata": ""}
{"_id": "de1181630b9de7b03698b6e102e4aa46", "text": "Lets the organizer add a new data point .", "title": "", "metadata": ""}
{"_id": "0af997e64fdbe603769394d1b5bd761a", "text": "Function to check the Saved Ether balance of a contributor .", "title": "", "metadata": ""}
{"_id": "dfe36aa9b64d32fa163fb38d62e6ab21", "text": "This is used for extending the sales start time ( and the deadlines of each stage ) accordingly .", "title": "", "metadata": ""}
{"_id": "df7efcbf22615b85f0857b9f8bd83401", "text": "Shop management start here .", "title": "", "metadata": ""}
{"_id": "19cd51274fa1d6c7ee2247957d543701", "text": "checks if a user owns a token .", "title": "", "metadata": ""}
{"_id": "3d7925f4fcf5bc810060ed081bee07f8", "text": "Load the number of participants for the same match and betting price .", "title": "", "metadata": ""}
{"_id": "fbc959007e576c43b9c92738c67b9f05", "text": "Guarantees all color have been sold .", "title": "", "metadata": ""}
{"_id": "99ba49f1a2ab00a01c3ec91d8d7c1f01", "text": "Adds a milestone .", "title": "", "metadata": ""}
{"_id": "e59722284919e2bfc652582f711ce19d", "text": "Permanently deactivate SPID , must be registrant - - expires subscription , invalidates .", "title": "", "metadata": ""}
{"_id": "3649566bede9a8e48ae53acea5734f5e", "text": "Public View functions .", "title": "", "metadata": ""}
{"_id": "18f512edd0ab831ba60ba75dd6505f53", "text": "records an investment .", "title": "", "metadata": ""}
{"_id": "d2e977e2debfcf375192b80b1ddc2686", "text": "true if cap has been reached .", "title": "", "metadata": ""}
{"_id": "707c0c8c75149901b26cb3bddf4f5d0f", "text": "Perform an atomic swap between two token contracts .", "title": "", "metadata": ""}
{"_id": "08c3a4c651977febf900f409ef967403", "text": "Fetch total value of loan in wei ( Initial + interest ) .", "title": "", "metadata": ""}
{"_id": "cb4ae2580668f45c2b4416c94a0c0a5e", "text": "Name , Symbol and Decimals functions .", "title": "", "metadata": ""}
{"_id": "28d4a4c3fb639d61430a1dc5f574fea8", "text": "function to make sure the balance is not locked .", "title": "", "metadata": ""}
{"_id": "8304f217dab4df195da4d1803ac254b1", "text": "Allows contributors to recover their ETH in the case of a failed token sale .", "title": "", "metadata": ""}
{"_id": "4c7f767240ffbf509ad3fa749645f633", "text": "one of founders can propose destination address for ethers .", "title": "", "metadata": ""}
{"_id": "2f1c15f2f640aa3033ef28c070be3076", "text": "Returns the block number for when the channel was closed .", "title": "", "metadata": ""}
{"_id": "0bb6e3b4b0eae128ffe1bc0e3b071918", "text": "Params : address , uint256 .", "title": "", "metadata": ""}
{"_id": "c0e6a50d96d6b7c43bd3b8071818179c", "text": "Propose split method adds proposal to the splits Array .", "title": "", "metadata": ""}
{"_id": "47db6ae2111175e6b2b7e48891feb129", "text": "Unrestrict ( convert ) all restricted tokens assigned to the given address .", "title": "", "metadata": ""}
{"_id": "1c249377381b82b72a8d4954e0ac7a7c", "text": "Allows owner to add / remove whitelistingAgents .", "title": "", "metadata": ""}
{"_id": "67aedc023e20a7dcb764e2633c67c79b", "text": "Add new account with locked token balance to the specified bundle type .", "title": "", "metadata": ""}
{"_id": "3c3a9de64c95259590a440f06ad8df16", "text": "This method will change old sponsee address with new one .", "title": "", "metadata": ""}
{"_id": "27918d46ae820d3e6093efd82e1d5dfe", "text": "Implements ERC20 transferFrom ( ) .", "title": "", "metadata": ""}
{"_id": "c36b5754a487adb07efa50cc8a7b4503", "text": "Allows for setting transfer on / off - used as hard stop .", "title": "", "metadata": ""}
{"_id": "67a049595cb0d25076ca703eb83a61bc", "text": "get base infomation of the seasons .", "title": "", "metadata": ""}
{"_id": "d83cb08978b079a6da63a9a1965fc1cd", "text": "Remove a user from the whitelist admins .", "title": "", "metadata": ""}
{"_id": "7557b0c5eaf4567e4fa64db1bbf518cf", "text": "Returns the allowed amount _spender can spend of _owner's balance .", "title": "", "metadata": ""}
{"_id": "fe41d2ed897c19d413826840b4923870", "text": "return specific rate .", "title": "", "metadata": ""}
{"_id": "672e7b4a78955612bc18f3630c2763f3", "text": "routine 20 - certAuthIssuesCerticate certification auth confirms that ingredients are trustworthy as well as qtty , location , published url , string product ) .", "title": "", "metadata": ""}
{"_id": "26cb8d7d8bda61d25f0e5d48ed7b2f02", "text": "Loop address and distribute tokens .", "title": "", "metadata": ""}
{"_id": "aaece2f5fb3388039ef1d7fa15272543", "text": "Remove an user address from the whitelisted ones .", "title": "", "metadata": ""}
{"_id": "0eb5c89c335c9d1282b98df9f733dfe4", "text": "unused : : function div ( uint256 a , uint256 b ) internal pure returns ( uint256 ) uint256 c a / b ; return c ; .", "title": "", "metadata": ""}
{"_id": "5662ebe4e8906c2c097e37eaca8c6d85", "text": "Sets the next sale contract .", "title": "", "metadata": ""}
{"_id": "19c413b615eff3b2a2f576ca45aa831c", "text": "Function that handles logic for setting prices and assigning heroes to addresses .", "title": "", "metadata": ""}
{"_id": "eb84cf75e6c12385d1d185b301bb621a", "text": "Emit new tokens .", "title": "", "metadata": ""}
{"_id": "214c52ec128d495a1a2c762fade36a76", "text": "Computes the number of halvings claimable by the miner .", "title": "", "metadata": ""}
{"_id": "5efc70455063269655a0da1f522e2932", "text": "Allow only if is close to start time or if is it running .", "title": "", "metadata": ""}
{"_id": "b92df15e485185643d0dfd50030a945e", "text": "this skips the checks performed by _addVote .", "title": "", "metadata": ""}
{"_id": "a87845ccdabddbf0f3cd2396727f90b6", "text": "Returns all the relevant information about a specific car .", "title": "", "metadata": ""}
{"_id": "0c908c635c5b471bd3cb9c972a8a079f", "text": "Transfer contract balance .", "title": "", "metadata": ""}
{"_id": "97a470db317a107ef8216f70f6a4dbcc", "text": "Resume sale .", "title": "", "metadata": ""}
{"_id": "bdccf4dd439f1e04f6d8dbaf8ec22f9f", "text": "Returns the address currently assigned ownership of a given Panda .", "title": "", "metadata": ""}
{"_id": "bbb941d3b59f7d7c6408c523eea935f3", "text": "Set new token address .", "title": "", "metadata": ""}
{"_id": "b40aef1e3baaaa5c9df146f9b075ba28", "text": "Returns how much Elcoin would be granted for user's minimal balance X in cycle Y .", "title": "", "metadata": ""}
{"_id": "e3842519b8148c27fc06138d9981da48", "text": "Forward the tokens from the contract to the beneficiary .", "title": "", "metadata": ""}
{"_id": "683ae472caaafe32d9af569cdeb65f16", "text": "true we have reached our soft cap .", "title": "", "metadata": ""}
{"_id": "489f565dab25a8ffe1278d807811434a", "text": "submitEtherProposal : submit proposal to use part of the collected ether funds .", "title": "", "metadata": ""}
{"_id": "0afae078abdeab18f9a2da3b782d3d94", "text": "called by the owner or moderator to pause , triggers stopped state .", "title": "", "metadata": ""}
{"_id": "3cd0405cfc8e813bf05b389747944029", "text": "Get asset specific information .", "title": "", "metadata": ""}
{"_id": "112bb971a61653c31cc2e70b056fda58", "text": "sell tokens back to the contract for wei .", "title": "", "metadata": ""}
{"_id": "899baf09a55f77a9f64bedb7c13d5604", "text": "Override the base transferFrom class to enforce vesting requirement is met .", "title": "", "metadata": ""}
{"_id": "16f44bbffd3eb981800484fbf139d529", "text": "Function to enter the raffle on behalf of another address .", "title": "", "metadata": ""}
{"_id": "8838117b1192940f4b84e462bcaf05f6", "text": "ERC20 friendly transfer function .", "title": "", "metadata": ""}
{"_id": "01510dd89374344e20632747725bbb21", "text": "Let sender make a standard purchase ; AMB goes into another account .", "title": "", "metadata": ""}
{"_id": "1772f42bf87ac4e7dc6b7d30bbec5d21", "text": "Performs a single trade via the requested exchange handler .", "title": "", "metadata": ""}
{"_id": "eb0b233448579d0c0ae974c4983424f5", "text": "Allow the Provide platform robot to update the Provide wallet contract address .", "title": "", "metadata": ""}
{"_id": "9072bbf62126341e9249267067b0db41", "text": "ERC20 Interface implementation .", "title": "", "metadata": ""}
{"_id": "9fbce51b5b3706e5c48f3674600b3756", "text": "Proxy transfer gg token .", "title": "", "metadata": ""}
{"_id": "4898cd413c46bc716376a9b90ac39220", "text": "Get data about specific proposal .", "title": "", "metadata": ""}
{"_id": "3b808fafcae4320c5ab74c214d28708b", "text": "Get sum price required to birth baby .", "title": "", "metadata": ""}
{"_id": "3bfc6d23ac4e5061247655e86c0caead", "text": "Sells front-end tokens .", "title": "", "metadata": ""}
{"_id": "1f1bb1aa68725b07fde620e6fd13e247", "text": "purchasing egg .", "title": "", "metadata": ""}
{"_id": "eee1046af10ae4ac12cbddfbbbbb77d6", "text": "only presale registered address can participate presale .", "title": "", "metadata": ""}
{"_id": "135c2d21a589e9c85315a6e492c7fb6d", "text": "Pay with WEA .", "title": "", "metadata": ""}
{"_id": "db5bb3c2f2accdad25dc07a5796234c8", "text": "int The position of the needle starting from 0 and returning - 1 in the case of no matches found .", "title": "", "metadata": ""}
{"_id": "0f2e08dee19468c308026bf14c2b5426", "text": "check the arbiter is valid without comparing token .", "title": "", "metadata": ""}
{"_id": "971d5cf65c7ee1f45b310d3fd962faff", "text": "Require that the proposal is supported .", "title": "", "metadata": ""}
{"_id": "bdf6dc81080a8b157a821f0e17a2b2f0", "text": "erc827 extension will be used by the TraxionWallet system which spawns a dynamic Traxion Contract in ethereum blockchain through Hyperledger Fabric SDK .", "title": "", "metadata": ""}
{"_id": "97aa9a608d377a0f50b28916d8eea2ec", "text": "Let the contract keep from the short-address attack .", "title": "", "metadata": ""}
{"_id": "ba1997b3d063bc1417359b719009ab57", "text": "check the vesting at the particular index for the address for amount eligible for release returns the eligible amount .", "title": "", "metadata": ""}
{"_id": "acee61318d8a0efead17b2e74ee36d50", "text": "copies the quick buy path from the old converter to the new one .", "title": "", "metadata": ""}
{"_id": "496f9c6af638b47e143a9226a69eb71d", "text": "Buy item .", "title": "", "metadata": ""}
{"_id": "96a8a4013844e2e16da7bbeecf1a76cb", "text": "Internal function for execution of crowdsale transaction and proper logging used by payable functions .", "title": "", "metadata": ""}
{"_id": "d633e2b88821ef4194f6cf0581fc09b6", "text": "Locks tokens according to stored schedule .", "title": "", "metadata": ""}
{"_id": "aef654b1b042e96d6ebf487e98c1bb77", "text": "Transfer an accounts token entitlement to itself .", "title": "", "metadata": ""}
{"_id": "51e9a1dbb5a883f9bbfdaeee5c407a8c", "text": "restrict execution to one of original cofounder addresses .", "title": "", "metadata": ""}
{"_id": "6db48e8a2967c27732b5e4b71ce31e77", "text": "Function to get duration time of lock for specific address .", "title": "", "metadata": ""}
{"_id": "a0987df5606e37976e1ecd7270144a11", "text": "called by the owner to withdraw all unsold tokens .", "title": "", "metadata": ""}
{"_id": "f0a4e0df4c381331513c4f9dd4796b92", "text": "escrow finalization task , called when owner calls finalize ( ) .", "title": "", "metadata": ""}
{"_id": "0967510619d73ba3aeca9c919f238ba5", "text": "Extend parent behavior requiring purchase to respect the token cap .", "title": "", "metadata": ""}
{"_id": "3d0abfb85037e5329b3991521ce3b280", "text": "The Illuminati ( Admins ) has the power to : - change the name of the contract - change the name of the token - change the PoS difficulty ( How many tokens it costs to hold a masternode , in case our membership grows exponentially ) .", "title": "", "metadata": ""}
{"_id": "b9209f0673a0136c0ad2c12746bf8461", "text": "Creates a new Library with the given language and name and founder address .", "title": "", "metadata": ""}
{"_id": "55a7afba31d7ea0b76bd9c34fb3b6c36", "text": "External function to set the token URI prefix for all tokens .", "title": "", "metadata": ""}
{"_id": "84dc65f628c8d39662a1c4c6bd4d0650", "text": "Does a byte-by - byte lexicographical comparison of two strings .", "title": "", "metadata": ""}
{"_id": "51c6837a090fb99f0b9d56c6e339af91", "text": "Overrides the setBeneficiation fucntion to set the beneficiary of the refund safe .", "title": "", "metadata": ""}
{"_id": "9ff1ecf16461f28d2805e7e4f392a2d8", "text": "only owner address can set owner address .", "title": "", "metadata": ""}
{"_id": "d4075fac15f1ee8aa9668a8244af3029", "text": "Check if the given address is a contract address .", "title": "", "metadata": ""}
{"_id": "390c75c899c396d30c36500f0141d642", "text": "Adds the token address of the payment type .", "title": "", "metadata": ""}
{"_id": "844c607d8be7647ee1564d5c984c2fd6", "text": "Battle Cards .", "title": "", "metadata": ""}
{"_id": "aeea0aceb08a2ebcb1835fc494650a2f", "text": "Returns true if date in ICO period .", "title": "", "metadata": ""}
{"_id": "b7f47f4487486d34e45214ca220059c6", "text": "Show share of Stakes on some address related to full supply capacity .", "title": "", "metadata": ""}
{"_id": "b7e5dcbbe85bc0d57ce6faecc78e2e0d", "text": "Return true iff the address has tokens assigned ( resp .", "title": "", "metadata": ""}
{"_id": "905c4eb23ddc9715134792dc5587eb29", "text": "acquire a wildcard .", "title": "", "metadata": ""}
{"_id": "23d4051aceb0e773460285cdc1b5020c", "text": "Heir can pronounce the owners death .", "title": "", "metadata": ""}
{"_id": "c7ac529204fd4d2599332a718f37afa0", "text": "Emergency this fucks up free tokens .", "title": "", "metadata": ""}
{"_id": "b07b7cf5b63a8411daa7a47a3ffa2494", "text": "If best ask is not set or price lower than best ask price , this order is the new best ask .", "title": "", "metadata": ""}
{"_id": "460dbeb23a4c601f62869ca3d04665d0", "text": "should use when payDividends is under re-entrance freeze .", "title": "", "metadata": ""}
{"_id": "b3a6e3b4a80dab8553f45bb0c9684690", "text": "Adds rate updating bot .", "title": "", "metadata": ""}
{"_id": "de2a58bbd5762840d732aa1edd4a1bc2", "text": "boolean of it is or isn't an contract address .", "title": "", "metadata": ""}
{"_id": "121b0e9c6b8524d21761520b3979cba5", "text": "Set Waracoin sale price .", "title": "", "metadata": ""}
{"_id": "f057a51dc92978e338d0b1bf2ac7111b", "text": "User buys floakss and pays in Ether .", "title": "", "metadata": ""}
{"_id": "79dcb7498f8bbd8eb8a490c532635007", "text": "bool Return true if purchase succeeds , false otherwise .", "title": "", "metadata": ""}
{"_id": "b454d2b3c102c23163a138cb935fef0f", "text": "Returns the number of Fighters owned by a specific address .", "title": "", "metadata": ""}
{"_id": "71469a69d9594181dcf05aaebfd21c2b", "text": "For a given owner , returns two arrays .", "title": "", "metadata": ""}
{"_id": "ef7fd84fa32912dcab91a5d65c3308df", "text": "set exchange rate for KRS / USD .", "title": "", "metadata": ""}
{"_id": "6ddd963290f6f3a73c94651b175b43c8", "text": "Override to make sure we mint the rest of the tokens that were not purchased .", "title": "", "metadata": ""}
{"_id": "bbb8530852a6cd8ffc26c34e48cb336e", "text": "override transfer token for a specified address to add onlyWhenTransferEnabled and validDestination .", "title": "", "metadata": ""}
{"_id": "d0596c89d367ae0ec1f34fbe3eebbced", "text": "Allows the current token commission receiver to transfer control of the contract to a new token commission receiver .", "title": "", "metadata": ""}
{"_id": "b24e6069d3c13566df44da8c5507d9b0", "text": "allows token holders to send tokens to multiple addresses from one single transaction .", "title": "", "metadata": ""}
{"_id": "ddb04b716df3000daa56500e68bc014a", "text": "add funds to vesting contract .", "title": "", "metadata": ""}
{"_id": "7dd45e157346b23ef3faba96a1549cd2", "text": "Claim tokens for Libra team reserve wallet .", "title": "", "metadata": ""}
{"_id": "ae26151447f1dd811939011ac855e5ce", "text": "Assign claim dividend to an address .", "title": "", "metadata": ""}
{"_id": "aeae49357752f4200d6c97193ca17b49", "text": "Convenience aliases .", "title": "", "metadata": ""}
{"_id": "46b86b42c5e9e20417a440fdaedd5026", "text": "Close the crowdsale .", "title": "", "metadata": ""}
{"_id": "125ef0d8f48689bf36eee5c7b2f23283", "text": "Get how many tokens are available to be claimed .", "title": "", "metadata": ""}
{"_id": "77e9f1e79b39296ca7ac3aaa24ea301e", "text": "platform unfreeze .", "title": "", "metadata": ""}
{"_id": "4a6d576a7cae0c730461f6565d552995", "text": "change sender address .", "title": "", "metadata": ""}
{"_id": "9142793387703a5883f3687a08fd6766", "text": "distribute ether to every winner as they choosed odds .", "title": "", "metadata": ""}
{"_id": "527f13d267b19bdda8932add7b09e385", "text": "Finish ICO and emit tokens for bounty company and team .", "title": "", "metadata": ""}
{"_id": "9c2f6e9f106bb5bd0eeefbd47b56026e", "text": "Utility function that allows to change the rescueAccount address , which can rescue tokens accidentally sent to this smart contract address .", "title": "", "metadata": ""}
{"_id": "c8e5819b1cac83c9dc0db5089184c386", "text": "Using this function a spender transfers tokens and make an owner of funds a participatants of the operating Jackpot .", "title": "", "metadata": ""}
{"_id": "d064f7054f1652a7b6b5d34e114e88a0", "text": "DEV - change the number of required dev signatures .", "title": "", "metadata": ""}
{"_id": "d22af5074e4b46c9c9a46d682c193e50", "text": "check if SSP registered .", "title": "", "metadata": ""}
{"_id": "4cd8f3e7c78df5141e8536d8c3f308d0", "text": "Returns next transcoder in pool for a given transcoder .", "title": "", "metadata": ""}
{"_id": "3d0abd6ae215082ff3c84104370614b7", "text": "Function to check if ICO if finished .", "title": "", "metadata": ""}
{"_id": "fb85a5c9dbd3a4bddeccc7179957ab86", "text": "Get Timestamp of specified player .", "title": "", "metadata": ""}
{"_id": "aa5fd20fa3cde98b57c9244214772e09", "text": "Changes the bonus rate of the tokensale in percentage ( 40 140 , 15 115 , 10 110 , 5 105 ) .", "title": "", "metadata": ""}
{"_id": "f1f2917ddb4fdfbb57c08afcc2fa4c60", "text": "For transfer tokens from owner of contract .", "title": "", "metadata": ""}
{"_id": "b8e1ecb36c02ed1abc9120c6fb004dd9", "text": "Release frozen tokens .", "title": "", "metadata": ""}
{"_id": "4552fe688712718b9feeac39a43ea8bc", "text": "Transfer token balance to beneficiary .", "title": "", "metadata": ""}
{"_id": "f37fe92f85a37f0a87a4d9d32551edac", "text": "Function to transfer APMAs to a given address from the contract owner .", "title": "", "metadata": ""}
{"_id": "616ce6bce45e6bfdbc0c8eed43a5f612", "text": "ends the campaign after deadline .", "title": "", "metadata": ""}
{"_id": "35ebd1bfc98cae0b2a66cca57eb472fd", "text": "Reclaim protected tokens granted to a specified address .", "title": "", "metadata": ""}
{"_id": "846f060411da662c18f478d34fcf0a50", "text": "The associated name .", "title": "", "metadata": ""}
{"_id": "ec929b879ec94628ce03a2b3cbe41b8b", "text": "Creates a dividend and checkpoint for the dividend .", "title": "", "metadata": ""}
{"_id": "4af4958233ec0fe1bc4010d35df8f376", "text": "Called by the owner on end of excess , returns to normal state .", "title": "", "metadata": ""}
{"_id": "5ba52076eed20c7fba65deb92b6ae68c", "text": "Computes keccak256 hash of the supplied value .", "title": "", "metadata": ""}
{"_id": "97de336724cd499e551d480744a3c97e", "text": "Pause function .", "title": "", "metadata": ""}
{"_id": "d27aefa5769965497bb8d3a4c2d52806", "text": "registers a method mapping .", "title": "", "metadata": ""}
{"_id": "06aeb1468c23915d748acea343fdbf52", "text": "resumes the whitelist if there is any issue .", "title": "", "metadata": ""}
{"_id": "ed19efb311ac689591a2c9c6addc3ade", "text": "functions for transferring token to booking .", "title": "", "metadata": ""}
{"_id": "945f0b6995dd2f95dd376ff28ef1b676", "text": "bool success .", "title": "", "metadata": ""}
{"_id": "038add8937ead90088b10e3e77b140ea", "text": "3 digits - RARITY 2 digits - PART * 4 ( 4 parts ) e . g .", "title": "", "metadata": ""}
{"_id": "3e39de8eca93659175b7bd167d9fc385", "text": "called by the owner to start the ICO .", "title": "", "metadata": ""}
{"_id": "8393060ca9dc2bbce50b4bc5d1420771", "text": "Transfer tokens and bonus tokens to a specified address .", "title": "", "metadata": ""}
{"_id": "0dc4a435b41104769611d1668de7165b", "text": "The modifier onlyNotPaidOut prevents token holders who have already withdrawn their share of profits in the epoch , to cash out additional shares .", "title": "", "metadata": ""}
{"_id": "826aa8853c87a686d5aac837679c27a3", "text": "Requesting a certification is a paying feature .", "title": "", "metadata": ""}
{"_id": "e6675d4a47b5c3fab45139e90880d131", "text": "user withdraw .", "title": "", "metadata": ""}
{"_id": "777eff8dd2c3ab780f18882937f2451d", "text": "Withdraw funds from the tokens contract .", "title": "", "metadata": ""}
{"_id": "d2f8e1ac82fe7b1db6d07c9631e1b908", "text": "Checks whether redemption is permitted for a participant .", "title": "", "metadata": ""}
{"_id": "1beb0c4dd4aadc57ded0a6e4e39c5168", "text": "Update a token ( such as it's treatment or designation or skin ) .", "title": "", "metadata": ""}
{"_id": "a511934685a5fa19e0425c9c0f606f12", "text": "Buy artwork .", "title": "", "metadata": ""}
{"_id": "bf025e1eec00babfdd2121b22e34210c", "text": "The manager of this funding is the creator of this contract .", "title": "", "metadata": ""}
{"_id": "47109de04ab1038046314b0219996134", "text": "Main purchase function .", "title": "", "metadata": ""}
{"_id": "7b5899536f5b097721d57bccbbc1e20d", "text": "Used by the owner to create / edit a new action that kitties may learn .", "title": "", "metadata": ""}
{"_id": "5b167fa48b412f97133dac560b97f45c", "text": "view balance .", "title": "", "metadata": ""}
{"_id": "b665e932ee8db313042d7c6bc7d2c0a2", "text": "as long as supply 83 * ( 10 * * 24 ) and timestamp is after 6 / 20 / 18 12 : 01 am MST , transfer will call halfPercent ( ) and burn ( ) to burn 0 . 5 .", "title": "", "metadata": ""}
{"_id": "134129a4d1fab520cd08a69e7d0db7fd", "text": "Withdraw collected ether to ethWallet .", "title": "", "metadata": ""}
{"_id": "ca46f7ff4ede92d33357f802b21d4982", "text": "Returns the name of the current round in plain text .", "title": "", "metadata": ""}
{"_id": "dd12bf92941a1e496547d639bae9858b", "text": "return a list of auditors that participated in this audit .", "title": "", "metadata": ""}
{"_id": "8d2c9360a1500812d9270cc5e62aa086", "text": "Unsets an existent identity .", "title": "", "metadata": ""}
{"_id": "f575261d25dc7b0c27c20193cead06d0", "text": "This function is used to choose an address for returning the funds .", "title": "", "metadata": ""}
{"_id": "2fd80f5ce3459e07b48f001293114e01", "text": "Adapted Crowdsale hasEnded .", "title": "", "metadata": ""}
{"_id": "2124e55a9a03d96e692b1e142772cc72", "text": "buy animals of a given type forsomeone else as many animals as possible are bought with msg . value .", "title": "", "metadata": ""}
{"_id": "546b95049bcde1ece4d3e662b14a5584", "text": "Allows anyone to transfer the REC tokens once trading has started .", "title": "", "metadata": ""}
{"_id": "3afbf9dfd1e095b9c03624fb44e8968f", "text": "change pause .", "title": "", "metadata": ""}
{"_id": "0899bb341d35036417383261d8f329fb", "text": "Returns an array of fund addresses and an associated array of whether competing and whether disqualified .", "title": "", "metadata": ""}
{"_id": "602b527d0a41c187abc35bb63108a910", "text": "Allows a registered address to withdraw tokens that have already been vested .", "title": "", "metadata": ""}
{"_id": "7cd75fa8016a87f8e1b5760bb2e588c8", "text": "User Trade Methods .", "title": "", "metadata": ""}
{"_id": "30935240df8cd29b71bf2ba04a1ddd18", "text": "Verifies that an order signature is valid .", "title": "", "metadata": ""}
{"_id": "7bac2295b0114ab06c95477a864ae1bc", "text": "Length of company allocations per period .", "title": "", "metadata": ""}
{"_id": "75a07596263e79e1567980feb19c1fe5", "text": "Enables disabled ICO .", "title": "", "metadata": ""}
{"_id": "e249f60a7c354e4fe02bac15f69b792d", "text": "Set transferEnabled variable to false .", "title": "", "metadata": ""}
{"_id": "b86bd35fe8f6b15dcbd8920cbd203a35", "text": "Require champ NOT to be for sale .", "title": "", "metadata": ""}
{"_id": "830cba79f406fd1f91fb82ce38d27616", "text": "Sets Corwdsale contract address allowance .", "title": "", "metadata": ""}
{"_id": "aa282eab868f90706e8aa2092594bbd9", "text": "change exchange rate .", "title": "", "metadata": ""}
{"_id": "cec95249de13dc03b7fff09e05b36b8a", "text": "Mint Token ( Uncapped Minting ) .", "title": "", "metadata": ""}
{"_id": "75f6c799b3513c6bccb391330997395a", "text": "returns current state of the voting .", "title": "", "metadata": ""}
{"_id": "6ab5707dceb6b962c57bc0e5cc1ed335", "text": "function name : mul purpose : be the funcion for safe multiplicate .", "title": "", "metadata": ""}
{"_id": "3b47ae9d7066e575bc8198f746e3602d", "text": "allows the owner to update the gas price limit contract address .", "title": "", "metadata": ""}
{"_id": "1ea0753c04b6c9cb02a96206f35cffbd", "text": "Change TokenPrice .", "title": "", "metadata": ""}
{"_id": "e18d6b55c03cae20c16a494ffa8721e8", "text": "set the contract address of the sale auction .", "title": "", "metadata": ""}
{"_id": "4460d57661623dff930447238f9a7fe8", "text": "Extends crowdsale end date .", "title": "", "metadata": ""}
{"_id": "458a9e9d178072bf293a549f3a114489", "text": "returns how much has been collected in fees , and how much is available to withdraw .", "title": "", "metadata": ""}
{"_id": "0c94a477f412c63558dff784cadf0767", "text": "burn token held by owner only in case he decides so to destroy any extra tokens in far future .", "title": "", "metadata": ""}
{"_id": "7fba0638bc712cf9ca034dcf705f2c33", "text": "Manual payout for site users .", "title": "", "metadata": ""}
{"_id": "c1e4e3cb8979f0efd8650b004cc36025", "text": "Total balances quantity .", "title": "", "metadata": ""}
{"_id": "cab8d1086b3a1d0f54f9a8cf0cb3c030", "text": "getKeyValue Get value correspoinding to a key .", "title": "", "metadata": ""}
{"_id": "8a69adb2754ef4b9984d68fdffbd04cd", "text": "Updates limit per month for holder .", "title": "", "metadata": ""}
{"_id": "6cb7c1dd6db97dadc99740bc3c734667", "text": "authorized parts end .", "title": "", "metadata": ""}
{"_id": "5a7c1a5a80f7f4575ca850f74434b491", "text": "business use only for owner .", "title": "", "metadata": ""}
{"_id": "653a6c14b28cf1241d73cb43eae17e21", "text": "Set the Contract Donations Receiver .", "title": "", "metadata": ""}
{"_id": "930e94b1da92fe59d5fcbe6616fb44b0", "text": "Determines whether unlock date has passed .", "title": "", "metadata": ""}
{"_id": "3e71feb29126d01d1e9cb6bb931062fa", "text": "ERC-20 Approves and then calls the receiving contract .", "title": "", "metadata": ""}
{"_id": "0a9d48a0f7a2c92f18245fd245ad1358", "text": "Participate in the crowdsale .", "title": "", "metadata": ""}
{"_id": "4c38286c37d5d427a19bca10b98d47e6", "text": "set Max token count to buyout .", "title": "", "metadata": ""}
{"_id": "a98eb4c93bbc007b252966d4468067a1", "text": "approve etherdelta to take take a specific amount .", "title": "", "metadata": ""}
{"_id": "5bd3643e680d445bc34861062c9ddf41", "text": "overwrites the original function .", "title": "", "metadata": ""}
{"_id": "6d08a8f6d2902d9a15dddf17ddf27c94", "text": "Determine if the _from address is a contract .", "title": "", "metadata": ""}
{"_id": "1b672c1fbbc26349310988de6e9129fc", "text": "Check after deadline if the goal was reached and ends the campaign .", "title": "", "metadata": ""}
{"_id": "6467f98fbaaf91b49faff27e6c75b35b", "text": "set the private sale end date and time .", "title": "", "metadata": ""}
{"_id": "47e726a6b5da129107f5037a19aaa41f", "text": "true if the transfer was successful .", "title": "", "metadata": ""}
{"_id": "adff1f97d9ad6d0c73e322865ae5ad48", "text": "Method set exchange rate agent .", "title": "", "metadata": ""}
{"_id": "a7d6769f8e397d25e50595390b2b51cd", "text": "This function is used to do bulk transfer token to contributor after successful audit .", "title": "", "metadata": ""}
{"_id": "9bbff27d9a509b10a0569d37bab06bb2", "text": "It is always must be true , for correct withdrawals and receivers ETH .", "title": "", "metadata": ""}
{"_id": "4237d5e4ebeb32d05169b8be1e54e31a", "text": "Returns minimal amount to wager to return a profit in case of max win .", "title": "", "metadata": ""}
{"_id": "532ffc277179ecacc617ba5120b3aac4", "text": "BK Ok - Only owner can execute function .", "title": "", "metadata": ""}
{"_id": "19f3d0baa8e7bce67e95bd85e9939303", "text": "send the rest of the tokens after the crowdsale end and send to contributors address .", "title": "", "metadata": ""}
{"_id": "a67f7f5fb5285fb0c39f75c7ae1ede05", "text": "update the pauser role .", "title": "", "metadata": ""}
{"_id": "d87a7a44c3f8b142ec66ad65362969c3", "text": "if bonus 1 then extra Bonus 5 .", "title": "", "metadata": ""}
{"_id": "95fabf2600f5ae8c305125229b000612", "text": "Returns true if self starts with needle .", "title": "", "metadata": ""}
{"_id": "d5c91ad00263f236c66599e09019f30b", "text": "when a host create an promotion event .", "title": "", "metadata": ""}
{"_id": "c778948b7d629c44505a56fb8497bb2e", "text": "allow owner to transfer ownership to newOwner .", "title": "", "metadata": ""}
{"_id": "3a3879d313edf7f3b5824b1ea5dcdd24", "text": "Throws if game is not ready .", "title": "", "metadata": ""}
{"_id": "7048fbafaf9af9da5495b2e9ef12954f", "text": "Allows the owner to withdraw the balance of the tokens .", "title": "", "metadata": ""}
{"_id": "f40ba0df83529c258f2e4569ae00feb2", "text": "Increase the sender's current deposit .", "title": "", "metadata": ""}
{"_id": "162ad309aa862bfd53642ab31afcea1d", "text": "Public interaction : .", "title": "", "metadata": ""}
{"_id": "14c024436da5c26216e52d0466d5e1dc", "text": "Increase total supply ( issue new tokens ) .", "title": "", "metadata": ""}
{"_id": "a0a8181df138c2b6a1fdb36109b671bb", "text": "Retrieve the tarif used by the caller .", "title": "", "metadata": ""}
{"_id": "c05c22f7c1504d320b1a438a94414f37", "text": "Get the buyout cost for a given plot .", "title": "", "metadata": ""}
{"_id": "3ded71eb5b7999c0e5c32733bc1f31d5", "text": "Used to change founder's address .", "title": "", "metadata": ""}
{"_id": "d88ca745bfd089bc42c9e3d50f99b767", "text": "Permit manager to sweep any tokens that landed here .", "title": "", "metadata": ""}
{"_id": "da1c029ded0686b95a6417f767190906", "text": "Allows only the owner to call a function .", "title": "", "metadata": ""}
{"_id": "3c16ade4de5b31ec08888f65c86c1693", "text": "Get the number of items in an RLP encoded list .", "title": "", "metadata": ""}
{"_id": "6262ab125e5f6551688f366286847a7b", "text": "exchange tokens .", "title": "", "metadata": ""}
{"_id": "346b12ed2ad12670f91560832e494320", "text": "Standard receive ether function , forward-compatible with proposed future disbursal contract .", "title": "", "metadata": ""}
{"_id": "2dfaa60f7acdd1a294353d56bf057bbe", "text": "Changes auction ceiling and start price factor before auction is started .", "title": "", "metadata": ""}
{"_id": "39b19d7e79a962db4685e6e4c6ad2dc1", "text": "Register a new DIN for a specific address .", "title": "", "metadata": ""}
{"_id": "b23fdf63a3e25385918a2952007e23f4", "text": "set betting start and stop times .", "title": "", "metadata": ""}
{"_id": "01e2a9a1735cced0d64f71d7b2921a6b", "text": "Add funder to KYC failed list .", "title": "", "metadata": ""}
{"_id": "9c95fffa089d073024c687ca9a81908e", "text": "Deletes the channel and settles by transfering the balance to the receiver and the rest of the deposit back to the sender .", "title": "", "metadata": ""}
{"_id": "5c53dd1c08f947b7c56cffa0e949cbde", "text": "Invalidates a deployed certificate .", "title": "", "metadata": ""}
{"_id": "d6845d0715fe61f6668eb2989ca67518", "text": "calculate and distribute fee for fee-recievers .", "title": "", "metadata": ""}
{"_id": "8aa25dc0f6a06b432efada4d21dcc0b7", "text": "moderator function .", "title": "", "metadata": ""}
{"_id": "7784fe22dc66c1a63258cf209edcff48", "text": "In case we need extra price tiers ( table stakes where people can play ) we can add additional ones .", "title": "", "metadata": ""}
{"_id": "5be885cec14a8ea0c9eebb62236485f5", "text": "Function for issuing new tokens for address which made purchasing not in .", "title": "", "metadata": ""}
{"_id": "df352f4cb19246cfce7ab18578f21e78", "text": "It provides an ERC20 compatible transfer function without checking of .", "title": "", "metadata": ""}
{"_id": "3dbe1d453326dd571d35b7b1673f3cb5", "text": "Check if the player won or refund if randomness proof failed .", "title": "", "metadata": ""}
{"_id": "cb359bd81718443827f48eafab83d5bf", "text": "Calculates exchange amount for ETH to token .", "title": "", "metadata": ""}
{"_id": "1cd693115fa8723047bfd2441ebb4ecf", "text": "Causes this contract to suicide and send any accidentally acquired ether to its owner .", "title": "", "metadata": ""}
{"_id": "3e7edf4b2d76292ac467f9b67992140f", "text": "let users trade with the token .", "title": "", "metadata": ""}
{"_id": "b801b61d809662119763cc8fed437763", "text": "Backup fn to allow transfer of token out of contract , for use where a purchase group wants to use an alternate selling platform .", "title": "", "metadata": ""}
{"_id": "e5ffc26814506f835dd03fe0db434d2b", "text": "oraclize callback .", "title": "", "metadata": ""}
{"_id": "1c66a37df700334662635f61c4ba9157", "text": "ability to set new certifier even after the sale started .", "title": "", "metadata": ""}
{"_id": "d330f6d04c11e54ba7436a41eb755ecb", "text": "transferableTime restrictions on the parent function .", "title": "", "metadata": ""}
{"_id": "d6a861ce798b4ed701fa1c35e68b3e45", "text": "Create a token and give to address .", "title": "", "metadata": ""}
{"_id": "ae9cc2a38dd9f29cbf7fbb689439d9b9", "text": "Calculating tokens count .", "title": "", "metadata": ""}
{"_id": "0ca64f32a2ba772920ab1894375c7ef2", "text": "become the new master .", "title": "", "metadata": ""}
{"_id": "f57fbf4a80c8b59f7b2d08ef0e4b9f7a", "text": "Returns number of tokens that could be traded and its total price .", "title": "", "metadata": ""}
{"_id": "aca69bd840dd808ebe25e9255ce5283f", "text": "To update document : 1 - Add new version as ordinary document 2 - Call this function to link old version with update .", "title": "", "metadata": ""}
{"_id": "78b6386404511d5cc8b9d37703ac5ebd", "text": "Checks that a call pushing a payment destination to the buffer is expected and valid .", "title": "", "metadata": ""}
{"_id": "b13746e9bee27ac9f56b209cb246e787", "text": "Allow only the owner of this contract .", "title": "", "metadata": ""}
{"_id": "1d406120ff41187a04c703578326ab37", "text": "Called to end the sale by the owner .", "title": "", "metadata": ""}
{"_id": "43f792e1dc280d044369beb3439a6911", "text": "Gets the balance of locked the specified address .", "title": "", "metadata": ""}
{"_id": "c194daae60a06be902d0ef0d45635e5b", "text": "Function to mint coins .", "title": "", "metadata": ""}
{"_id": "e2e14b8b1617c7c07a5693e3399e63d9", "text": "Function to extend the transfer locking periods up to one more week .", "title": "", "metadata": ""}
{"_id": "e47a1e8bacfd41a3296a652bac764e87", "text": "Gets amount for which an address is locked with locked index .", "title": "", "metadata": ""}
{"_id": "1154a01afb1a082e93bd75389306a7bb", "text": "Add admin .", "title": "", "metadata": ""}
{"_id": "2ef69f5c71fc1e6395ec03a3bb3a18c3", "text": "MARK : Private functions .", "title": "", "metadata": ""}
{"_id": "415bde63f689ee98ed81ee12a7f71720", "text": "Owner remove army from marketplace .", "title": "", "metadata": ""}
{"_id": "369c4cc98533830215ef1b7dee7c60d4", "text": "check user's donated amount .", "title": "", "metadata": ""}
{"_id": "776d4a7a9be9eff814e2bc77c4578aa7", "text": "Function to update tradable status .", "title": "", "metadata": ""}
{"_id": "3c7121a88df77705c140b643e3a66641", "text": "General bank account functions .", "title": "", "metadata": ""}
{"_id": "35d16e42442429ffe2a5fec94b773705", "text": "disables purchasing with the given connector token in case the connector token got compromised can only be called by the owner note that selling is still enabled regardless of this flag and it cannot be disabled by the owner .", "title": "", "metadata": ""}
{"_id": "bdede856acafd89c86b2ae660e3b3ac7", "text": "availability for creator address to set when bonus period ends , but not later then current end moment .", "title": "", "metadata": ""}
{"_id": "17df937ee296c59f696311cc3190c725", "text": "you can call it anything you want .", "title": "", "metadata": ""}
{"_id": "04e84996023d975f2f683cc06598efbb", "text": "cds part .", "title": "", "metadata": ""}
{"_id": "996402da16adc285a676e9c0568a06d7", "text": "If you call this function you should beat the game . . .", "title": "", "metadata": ""}
{"_id": "0a092b8001d04eb6cf5808b2f05ee585", "text": "Set CSCErc721 Contract .", "title": "", "metadata": ""}
{"_id": "09230212a2a65704d186a1090ca230df", "text": "Configuration setters .", "title": "", "metadata": ""}
{"_id": "7925dbe76f440542fcb3b92c4209f400", "text": "Add approved addresses .", "title": "", "metadata": ""}
{"_id": "8e65782954e79e159e635e76e19e8b09", "text": "x * y .", "title": "", "metadata": ""}
{"_id": "ca6d9e7c7b0ea537ce343e4820c56666", "text": "Gets the approved address for a token ID , or zero if no address set .", "title": "", "metadata": ""}
{"_id": "59de9297c0a189b08b0086638c710d21", "text": "Function to activate the controller .", "title": "", "metadata": ""}
{"_id": "377bedab5896a34ec54b1551206a2f18", "text": "Query a transaction details by address and its index in transactions array .", "title": "", "metadata": ""}
{"_id": "ab8cb6b548e207099f3af1082d2f74d2", "text": "check presale is not active .", "title": "", "metadata": ""}
{"_id": "2dfca3167efe9e92dadba7560a4c9320", "text": "User sells GrimReapers and gets Ether .", "title": "", "metadata": ""}
{"_id": "e08b19906f90ff1be52134fd9501d022", "text": "Records a purchase which has been completed before the instantiation of this contract .", "title": "", "metadata": ""}
{"_id": "00e6a17546da2348be0f887be2f40e04", "text": "The current price for a token .", "title": "", "metadata": ""}
{"_id": "f544af9519bc300cb65e48cb2b7e93e4", "text": "Allows the owner to suspend the sale until it is manually resumed at a later time .", "title": "", "metadata": ""}
{"_id": "a1751a2aa7c05bb0fa4539efd163ce0f", "text": "functions below this line are onlyLedger let the ledger send transfer events ( the most obvious case is when we mint directly to the ledger and need the Transfer ( ) events to appear in the token ) .", "title": "", "metadata": ""}
{"_id": "532a60a5a2316da9ee801460ea784a4a", "text": "set count winner place / top1 / top5 / top10 etc .", "title": "", "metadata": ""}
{"_id": "eec3877cc8d8dec9de85df92fed21776", "text": "Settle a bet by trusted verifier .", "title": "", "metadata": ""}
{"_id": "0550f7b613dba91e6df23a71b6bbf90d", "text": "Creates LuckCashToken contract .", "title": "", "metadata": ""}
{"_id": "1f9a4d62d61b3594e1b488e101977ae9", "text": "Sending reserved tokens ( 20 from all tokens was reserved in preICO ) .", "title": "", "metadata": ""}
{"_id": "b7f773e5caeb7352c6e22660486f3b7f", "text": "The migration process to transfer tokens to the new token contract , when in the contract , a sufficiently large number of investors that the company can't cover a miner fees to transfer all tokens , this will be used in the following cases : 1 .", "title": "", "metadata": ""}
{"_id": "1dbd17955967b17ed6bb6ffd268589fc", "text": "Revoke acess to deposit heroes .", "title": "", "metadata": ""}
{"_id": "318ec8f323c3f7f84771477def304238", "text": "create new subtoken with unique tokenId .", "title": "", "metadata": ""}
{"_id": "f98c66a15541c1f7d878a18822424d65", "text": "Checks if a given address currently has transferApproval for a particular Masterpiece .", "title": "", "metadata": ""}
{"_id": "53db135aa43be45ed4488a7af31e208f", "text": "This is how value enters the system and how pledges are created ; the ether is sent to the vault , an pledge for the Giver is created ( or found ) , the amount of ETH donated in wei is added to the amount in the Giver's Pledge , and an LP transfer is done to the idReceiver for the full amount .", "title": "", "metadata": ""}
{"_id": "b5d5cf69b481cadb616911ad50b52c72", "text": "Enable investment in specified assets .", "title": "", "metadata": ""}
{"_id": "805f79ef0eb63d1cfa5334d6cb3db856", "text": "Allows token issuer to lock token transfer for an address .", "title": "", "metadata": ""}
{"_id": "e8dac28f558636a3c015a32c53746cd8", "text": "Access modifier for owner only functionality .", "title": "", "metadata": ""}
{"_id": "d614da0e7ea96199da3d1b20707ab63d", "text": "Allow investors that contributed in the private presale to generate the same amount of tokens in the actual crowdsale .", "title": "", "metadata": ""}
{"_id": "dbfc4604abcc3227fed92ca4a09ebe7e", "text": "function that is called when a user or another contract wants to transfer funds .", "title": "", "metadata": ""}
{"_id": "a5fefe125c994abb0351f4f2de630c84", "text": "allows the owner to add additional bouncer addresses .", "title": "", "metadata": ""}
{"_id": "9a9e3d0813096922c153eafd240fa2fa", "text": "Returns true if we are still in sale period .", "title": "", "metadata": ""}
{"_id": "4ff3928b3b773fc33e0b526c8f2116af", "text": "withdrawEth when minimum cap is reached .", "title": "", "metadata": ""}
{"_id": "de6653c07e5928b3fd73b60e8a560d64", "text": "real uint256 public constant MINIMUM_ETHER_SPEND ( 250 * 10 * * ( decimals-3 ) ) ; uint256 public constant MAXIMUM_ETHER_SPEND 300 * 10 * * decimals ; .", "title": "", "metadata": ""}
{"_id": "f77838b11bbc2f5b0b21056d33028412", "text": "function unsoldToken - Function used to transfer all unsold public tokens to reserve supply .", "title": "", "metadata": ""}
{"_id": "2f7b2e51e4268146942ee16ec4f49e7b", "text": "get balance information .", "title": "", "metadata": ""}
{"_id": "781a5de1d3841007776d0b94eaca165b", "text": "Verify that a UTXO with the specified Merkle leaf hash can be redeemed .", "title": "", "metadata": ""}
{"_id": "12e609b29c3474c112d48184caf3ced3", "text": "set minimumPayout price .", "title": "", "metadata": ""}
{"_id": "3b2b34649a76d1d8e66d78b080992f40", "text": "Calculate the Final Sale Price after the Owner-Cut has been calculated .", "title": "", "metadata": ""}
{"_id": "d93268fbd61bb024b449c3b41e1dd63b", "text": "Set game state for fcf tokens only , so Founder can get Chibis pre launch .", "title": "", "metadata": ""}
{"_id": "08e8412c335712f0f0d4f7a9b83299ec", "text": "The balance .", "title": "", "metadata": ""}
{"_id": "38719b2f0ab8038283446151aeef791a", "text": "Set the address of the party providing service and start the work order .", "title": "", "metadata": ""}
{"_id": "78fee33fd8064c729bef377f6f832d47", "text": "Check if token transfer is free of any charge or not .", "title": "", "metadata": ""}
{"_id": "8cf0c1163cecab5e2ed532ccdebc1b6c", "text": "Allows someone buy obtain an GoldenGoose asset token .", "title": "", "metadata": ""}
{"_id": "1f907c94a6f3bdc8cefe43e35366f275", "text": "Team account authorization transaction .", "title": "", "metadata": ""}
{"_id": "b306e7024961d876010afe54ce724467", "text": "Get a license's attributes .", "title": "", "metadata": ""}
{"_id": "9f19bd16b74ba27cc85d04fc089a3fbd", "text": "Withdraw tokens avaibable .", "title": "", "metadata": ""}
{"_id": "3e3ef405b8ffcd77dbb53054c54f3135", "text": "used for private and public sale to create time locked contract before lock release time .", "title": "", "metadata": ""}
{"_id": "e0e5b5a471261f0d3fe723be118c8f5d", "text": "Get the current milestone or bail out if we are not in the milestone periods .", "title": "", "metadata": ""}
{"_id": "3133a5bd867e0b1852277daaf7d25930", "text": "cancelOrder is used when client doesn't pay and order need to be cancelled .", "title": "", "metadata": ""}
{"_id": "02664ccff2af3ac9ecd920fbe1f66eaf", "text": "sale methods .", "title": "", "metadata": ""}
{"_id": "4082b3ac390b4fcab73b5a4d5198a650", "text": "The function that is used to submit the solution to the blockchain .", "title": "", "metadata": ""}
{"_id": "fe90cc9fcda7c586a43030fda097a1a4", "text": "Get the token balance of owner .", "title": "", "metadata": ""}
{"_id": "32d604a863a30ebdd3575259e9b99f61", "text": "Called by the owner to unlock .", "title": "", "metadata": ""}
{"_id": "8141de91a4c15d2e51c9eb201f772772", "text": "Set PricingStrategy address .", "title": "", "metadata": ""}
{"_id": "84e614748391c1081c6d2024b549e07c", "text": "add user to whilteList ( only people in whileList can buy tokens ) .", "title": "", "metadata": ""}
{"_id": "ae45a7a070ec2f6f6a906a4afa3a4ec7", "text": "beneficiary claims tokens held by time lock .", "title": "", "metadata": ""}
{"_id": "d4c43b0c7daa8c98bd5eeadd20b417f5", "text": "This is ripped of from zeppelin contracts , because zeppelin FinalzableCrowdsale contract extends TimedCrowdsale contract and here it is not the case .", "title": "", "metadata": ""}
{"_id": "db547e36f3ee25e0ea7ee2db797e7332", "text": "ETH handler functions .", "title": "", "metadata": ""}
{"_id": "1e074ca4796f7c6e69ca166dc7e50da0", "text": "Allows execution by managers only .", "title": "", "metadata": ""}
{"_id": "7bb77835ebe188ddc26f7b48d27e26a8", "text": "Handle incoming transactions .", "title": "", "metadata": ""}
{"_id": "6bea516e0f31e4bbca360c27a1af80a7", "text": "For transfering tokens to others .", "title": "", "metadata": ""}
{"_id": "48b79f4edc0ede51078c44a185364de6", "text": "Updates node parking rate .", "title": "", "metadata": ""}
{"_id": "be036e4a34d478cbe7ea9c91c326b283", "text": "The constructor for the crowdsale was removed given it didn't receive any arguments nor had any body .", "title": "", "metadata": ""}
{"_id": "59418c60a8ab1066f372aa9eb06bade3", "text": "Transfer a token owned by another address , for which the calling address has previously been granted transfer approval by the owner .", "title": "", "metadata": ""}
{"_id": "a3f34ae2b6b1b2d1b30f9f58aae00c00", "text": "function to withdraw SoftwareProductDevelopment funds to the owner wallet can only be called from owner wallet .", "title": "", "metadata": ""}
{"_id": "9d4a8f104da28441efdd6071fb543c45", "text": "distribute tokens to multiple addresses .", "title": "", "metadata": ""}
{"_id": "f1499145f910e8ec740d581ede8dd6a0", "text": "get fees .", "title": "", "metadata": ""}
{"_id": "be844714f610c6c5664f4678a46a81f8", "text": "Interface for sale agent contract - mint new tokens .", "title": "", "metadata": ""}
{"_id": "cdc4aae5e0de7049f4db707c5b96b87d", "text": "Finish contract ( permanently ) .", "title": "", "metadata": ""}
{"_id": "8da437e72be7d4eee61b270a9603d3a7", "text": "Check contruibute is open .", "title": "", "metadata": ""}
{"_id": "585170666eb8c11b1a574b1eee508fef", "text": "total balance sum of vestings balance ( includes not released part ) and unlocking coin balance .", "title": "", "metadata": ""}
{"_id": "6427f98885b885b22ca059668bff01ee", "text": "registers and validates cats that are found .", "title": "", "metadata": ""}
{"_id": "0d949d1538fb7e09c06f474dc611eb79", "text": "convert tokens to whole .", "title": "", "metadata": ""}
{"_id": "22567e3ea8c11a084c634f1776e8e276", "text": "Function to issues tokens for investors who made purchases in other cryptocurrencies .", "title": "", "metadata": ""}
{"_id": "185f42ef4798e88d34c9ecb70f41d0f4", "text": "startDate Crowdsale opening date .", "title": "", "metadata": ""}
{"_id": "5b688ed1fc525c66f28999a15576f386", "text": "Checks input and then creates storage buffer to update minimum .", "title": "", "metadata": ""}
{"_id": "e30dbb4903a561d6efad5ac0c6defd5a", "text": "Get the price of the Section .", "title": "", "metadata": ""}
{"_id": "6759e8afb2f5bec2f8d8b52500fc11a7", "text": "division by zero is ignored and returns zero .", "title": "", "metadata": ""}
{"_id": "4c3351a6d2e326878bfdbfa2ae140156", "text": "update wallet .", "title": "", "metadata": ""}
{"_id": "5160fe2e0b01d3132a972a995231dc6b", "text": "true if the token being queried has not used its 100 first free trial drops , false otherwise .", "title": "", "metadata": ""}
{"_id": "e2d6a566a25e42da3410555a089ce539", "text": "Performs a single 'click' of EtherButton .", "title": "", "metadata": ""}
{"_id": "76ab3bb576941a8877e733376006a745", "text": "The bid is canceled by the advertiser .", "title": "", "metadata": ""}
{"_id": "fad724387a92dd1a6b439dccf3faf972", "text": "Update partner 2 vows only once .", "title": "", "metadata": ""}
{"_id": "664b2c4850547f690dd00047151ce041", "text": "remove addresses from whitelist .", "title": "", "metadata": ""}
{"_id": "133983813e352d2c312c7b6612249080", "text": "Internal function for burning tokens .", "title": "", "metadata": ""}
{"_id": "fc099e79f1da953eb04bda80db2a92aa", "text": "Upon game death , there might be some ETH still locked in contract .", "title": "", "metadata": ""}
{"_id": "21e065841bcb80bbaa6f6cba87ecba32", "text": "Unable / disable a store .", "title": "", "metadata": ""}
{"_id": "1f13d4a5d69da4753708eacfd7e0b2a0", "text": "Geter functions for variables .", "title": "", "metadata": ""}
{"_id": "f7776c79dbd381819c40ff7147fe1f4a", "text": "Approves a bounty transfer and mint tokens .", "title": "", "metadata": ""}
{"_id": "265e6ed4368f4ca97d869153e125254e", "text": "Spender of tokens transfer an amount of tokens from the token owner's balance to another account .", "title": "", "metadata": ""}
{"_id": "ee5ef1e06754ec11e14533f3782fe224", "text": "check if the address is frozen .", "title": "", "metadata": ""}
{"_id": "a8b1ff05e74bd327ff39565f9244d318", "text": "Transfer a LinglongCat owned by another address , for which the calling address has previously been granted transfer approval by the owner .", "title": "", "metadata": ""}
{"_id": "828c4c328f55a4d3c573be1578d1c77a", "text": "true if ICO has ended .", "title": "", "metadata": ""}
{"_id": "99ecad6126884a847d609c38b58ac52b", "text": "the number of dragons .", "title": "", "metadata": ""}
{"_id": "509db595a9386bc3198ebd5c9e2aba31", "text": "Check for the ability to finalize the round .", "title": "", "metadata": ""}
{"_id": "5a23579b296a568ad457b2eeb1048072", "text": "Dev : Gets the balance of the address owner .", "title": "", "metadata": ""}
{"_id": "7d74fa2007af70427d1bab315bcae199", "text": "Aura Boosts .", "title": "", "metadata": ""}
{"_id": "b6f68d7d3783a1cf54eda9414b67bed3", "text": "Utility costly function to encode bytes HEX representation as string .", "title": "", "metadata": ""}
{"_id": "912b77d93a074e040637bfde3b59c163", "text": "Transfer the balance from sender's account to another account .", "title": "", "metadata": ""}
{"_id": "f9bea6d5443eb2ad4f02f4caa4972d38", "text": "check for Non zero value .", "title": "", "metadata": ""}
{"_id": "0cfc74e1178a8a1fc55b9a98ff4cbf29", "text": "Function to remove an address from whitelist .", "title": "", "metadata": ""}
{"_id": "ab22b5e6675f6a4ad91c025634058782", "text": "car sales are limited .", "title": "", "metadata": ""}
{"_id": "34181bfa533bb04c5da50d364a1fea78", "text": "Get length of the schemas array constant_function .", "title": "", "metadata": ""}
{"_id": "aaeaef3cf689a1183d9660bc6c307fc2", "text": "Function to withdraw tokens that have previously been excluded when calling the redeemExcluded method .", "title": "", "metadata": ""}
{"_id": "4cf026093ff0e0bcfff7b6b6b222a2ac", "text": "scan the outputs and find the values and script lengths .", "title": "", "metadata": ""}
{"_id": "1c5d0df971603f21a78694a8a5e20a5b", "text": "upgrade ship .", "title": "", "metadata": ""}
{"_id": "7d1e66ac5a85271c95b840da29cae80e", "text": "Contract initialisation .", "title": "", "metadata": ""}
{"_id": "d423b4cd5ca257715758c34af7c984e5", "text": "Change Rate per token in one ether .", "title": "", "metadata": ""}
{"_id": "9ee62759d1c983aef4703f4b081d2ec1", "text": "Removes a co-owner for an asset with provided symbol .", "title": "", "metadata": ""}
{"_id": "f3bf6dfb36bd12addab12df6fcc9c59b", "text": "Allows the owner to start the trading ABLE tokens .", "title": "", "metadata": ""}
{"_id": "82c9b2c77217172cad387352a5de08e5", "text": "Check a certain node is in a blacklist .", "title": "", "metadata": ""}
{"_id": "897db095dbdceb5a287753ebd07fd44e", "text": "The function can be called only by a whitelisted release agent .", "title": "", "metadata": ""}
{"_id": "dd6dfaeb8cab310b73fa5edd8785ec68", "text": "Function that locks / unlocks transfers of token .", "title": "", "metadata": ""}
{"_id": "f3918f5401098668930a8370a631993f", "text": "Administrator can initiate prize payout during final period .", "title": "", "metadata": ""}
{"_id": "fe7b2b9dd120e0a43b7f05daf457fed2", "text": "Freezes address ( no transfer can be made from or to this address ) .", "title": "", "metadata": ""}
{"_id": "c7f1fb139fb2abf04609db2441603dfa", "text": "Override to only allow tranfer after being switched on .", "title": "", "metadata": ""}
{"_id": "8f69d180300c8877aaa28f39daf933ba", "text": "the token price with the fees .", "title": "", "metadata": ""}
{"_id": "46cc57059e49071e282f4ecd36fb2685", "text": "This function will return the details for a transaction .", "title": "", "metadata": ""}
{"_id": "6fe86705714c6247f9435b4e03821daf", "text": "Returns current address for a particular holder id .", "title": "", "metadata": ""}
{"_id": "075edd6196ae375589f3ce5d00a1921e", "text": "Call the ERC20 transfer function on the underlying token contract .", "title": "", "metadata": ""}
{"_id": "f1066c81a626eb02db9d8e5ba3adc95e", "text": "Forwards funds to the tokensale wallet .", "title": "", "metadata": ""}
{"_id": "f76de503673e11577b0242c6b1d01d01", "text": "Internal Price Calculation - turn a packed buy price into a packed sell price .", "title": "", "metadata": ""}
{"_id": "49a6ae161402cce5aed8bdd3d69aaa2a", "text": "Access methods .", "title": "", "metadata": ""}
{"_id": "d697f24ac2b08f07b6b3076c477f8ce1", "text": "Query whether the user is eligible for claiming dividence .", "title": "", "metadata": ""}
{"_id": "cc4cc828ba546596c1197a2e01d77cc9", "text": "Add a proof ONLY if not already present and ONLY by the identity owner .", "title": "", "metadata": ""}
{"_id": "737d10c6824b35a6fcf36abe16bfeb64", "text": "assuming halt because caller is compromised so let caller stop for speed , only owner can restart .", "title": "", "metadata": ""}
{"_id": "17a69dd905e30528628d9004e9f5ab62", "text": "Returns whether the given address paid or not .", "title": "", "metadata": ""}
{"_id": "2c7dd195a13304e689348a5fef09c943", "text": "whitelist an Address .", "title": "", "metadata": ""}
{"_id": "3f6335c1fb1dbb50bd15287fbade349e", "text": "Assigns ownership of a specific LinglongCat to an address .", "title": "", "metadata": ""}
{"_id": "580ca541bf72194662ca272a9358e51f", "text": "transfer token for a specified address if transfer is open .", "title": "", "metadata": ""}
{"_id": "3ccff47c1e5247471056c6237694e998", "text": "Set up angel address token balance .", "title": "", "metadata": ""}
{"_id": "4cb7912a82be86dc3c52138446a6c83d", "text": "return token balance this contract has .", "title": "", "metadata": ""}
{"_id": "df3b4dcbfd02bf062f1cf600c5b90963", "text": "Store how many eth were invested by investor .", "title": "", "metadata": ""}
{"_id": "8e30b2ce3814f631f00c915cbef0da61", "text": "Increases capitalRaisedTarget .", "title": "", "metadata": ""}
{"_id": "b3e5be2e8bcdd9adbc51304a16a26d6e", "text": "Called in the SETUP stage , check configurations and to go to the SETUP_DONE stage .", "title": "", "metadata": ""}
{"_id": "56ae586484df7fe67c84e9b04f59ba79", "text": "buy tokens : if you get message : It seems this transaction will fail .", "title": "", "metadata": ""}
{"_id": "26a70d4081dc5f3383f4c743e4273314", "text": "Function for withdrawing eth by the owner .", "title": "", "metadata": ""}
{"_id": "910692597ed93b8d5c817ef343b98509", "text": "the payout amount still due to this entry in line .", "title": "", "metadata": ""}
{"_id": "621cee2f7c1b850fcda9ee90c56eccf8", "text": "it allows token owner to create art work change request first user upload 2 images then do call this function admin can reject or approve it .", "title": "", "metadata": ""}
{"_id": "6ef5266ab25a4d3b1054fe7f6a1d13ec", "text": "Calculates a bulk bonus for a specified value of ether .", "title": "", "metadata": ""}
{"_id": "4c6616b3099a1ef36e3c797211fd9ccb", "text": "Only allow calls from the beneficiary of the vesting contract .", "title": "", "metadata": ""}
{"_id": "5411e44b7dfb9fbdecb795771f7550c2", "text": "function to approve multiple users at once can only be called by the owner .", "title": "", "metadata": ""}
{"_id": "aba82b6ab8dafece997b2d0e2a4a72bc", "text": "Gets the number of tokens sold thus far .", "title": "", "metadata": ""}
{"_id": "bc7a8b29aad3e1fd97420896f87e76e3", "text": "Add exp .", "title": "", "metadata": ""}
{"_id": "4eded25563e57a5b57fecb5b3dd28336", "text": "returns the address currently assigned ownership of a given pet .", "title": "", "metadata": ""}
{"_id": "f84270de053698d7828481717197bef0", "text": "Check if the loan is mature for interest .", "title": "", "metadata": ""}
{"_id": "c80a414fad1cb272ec99537a7f268d8f", "text": "Set the Token Standard the contract applies to .", "title": "", "metadata": ""}
{"_id": "6633f233b3881d2efabf563dfbad881d", "text": "Grant another address the right to transfer a specific narco via transferFrom ( ) .", "title": "", "metadata": ""}
{"_id": "f7c76f2342c3b6fc4e1d45923c0b29ff", "text": "State changing functions .", "title": "", "metadata": ""}
{"_id": "4b21394b0106c5d6a4f71332c02a383f", "text": "Start the token sale .", "title": "", "metadata": ""}
{"_id": "cbda800a1e159f79c0cf905058941733", "text": "Weight , drp balance .", "title": "", "metadata": ""}
{"_id": "990d7d8b15f8e1892ae685575526640d", "text": "function to transfer token back to owner .", "title": "", "metadata": ""}
{"_id": "97a6033645bee8d84151688cc3d82e53", "text": "sets avatar for an address .", "title": "", "metadata": ""}
{"_id": "220355b09cbccc4f0e308071050a2dd0", "text": "Use to claim EOSclassic for any Ethereum address .", "title": "", "metadata": ""}
{"_id": "2171b3d52bca326be0f334911f14c813", "text": "implement totalSupply ( ) ERC20 function .", "title": "", "metadata": ""}
{"_id": "b753539860f927df1fe1441e3b224dc9", "text": "Converts a numeric string to it's unsigned integer representation .", "title": "", "metadata": ""}
{"_id": "7a50a7e487b67780ccd4260764306fa4", "text": "We use this function to return the population of a city .", "title": "", "metadata": ""}
{"_id": "c83998ed7cb62e03bf2a2ad7c5ff47cb", "text": "Change a burner address .", "title": "", "metadata": ""}
{"_id": "239244ab7b991307cf3418b65da1f1e5", "text": "only allow call from owner of the address asking .", "title": "", "metadata": ""}
{"_id": "97e51123d574a991457fa9b40fde5608", "text": "Safe multiplication .", "title": "", "metadata": ""}
{"_id": "8b1ea0982cdebcf2e32de3270ff4c58c", "text": "return now time .", "title": "", "metadata": ""}
{"_id": "6988ac140c10167959fcb8e1338248f4", "text": "returns contract metadata in one function call , rather than separate . call ( ) s .", "title": "", "metadata": ""}
{"_id": "a2684ea780ae59b6552187c5d8d22bc2", "text": "Execute token repartition on a dispute for a specific number of votes .", "title": "", "metadata": ""}
{"_id": "938371f3a537010eab3a6a5d0fd2b0ab", "text": "Validate permissions with PermissionManager if it exists , If no Permission return false .", "title": "", "metadata": ""}
{"_id": "501bc1e2f7afcb5369c8029da06a93e4", "text": "Add address to Contributors2 .", "title": "", "metadata": ""}
{"_id": "a321c99005355e89fb3cc4703f2cc80b", "text": "Contract Administration .", "title": "", "metadata": ""}
{"_id": "1f196144c71cbd445859aedcfeb35492", "text": "This method will change old multi signature for sponsee address with new one .", "title": "", "metadata": ""}
{"_id": "b7d63cdf3482644cff2c0535e9dfc5b2", "text": "Add transaction against entity .", "title": "", "metadata": ""}
{"_id": "4e4fe3c260be0b3cf4461a9a60d79427", "text": "Accepted ether amount .", "title": "", "metadata": ""}
{"_id": "39385be410248cfbe7c0e39e0f02115b", "text": "Allow spender to take value tokens from the transaction sender's account .", "title": "", "metadata": ""}
{"_id": "221415c1ac4dd1c586606508f02c53bf", "text": "Adjust the price of Ether according to Coin Market Cap's API .", "title": "", "metadata": ""}
{"_id": "f913517abeeefbc8cd447fa77a28f4b7", "text": "Stores the amount of unique contributors so far in this crowdsale .", "title": "", "metadata": ""}
{"_id": "41b47c0e0c76f1a47f417555b4c9902a", "text": "Sets the address for the NFT Contract .", "title": "", "metadata": ""}
{"_id": "81369ea9f8d39cc1a6ba231090736d5e", "text": "How many people are taking part in the tournament ? .", "title": "", "metadata": ""}
{"_id": "aeac464ac66bcf68f8395f66ed48a592", "text": "Show date in UNIX time format .", "title": "", "metadata": ""}
{"_id": "014eb9e11ebd54fa7e047491d92b7fc5", "text": "function to remove a partner can only be called by the major / actual owner wallet .", "title": "", "metadata": ""}
{"_id": "58dad11fe698930478942b13dcd66cf5", "text": "when ico finishes we can perform other actions .", "title": "", "metadata": ""}
{"_id": "0a3f8073f864f23c1557fb129e8ede57", "text": "get global name for msg . sender , .", "title": "", "metadata": ""}
{"_id": "a316855282d4abb670ec9d6e9e07d8b2", "text": "in case there is an error .", "title": "", "metadata": ""}
{"_id": "0ebc99f211c6853a16bae8d010e278aa", "text": "This function destroys tokens by subtracting them from the total supply and removing them from the given address .", "title": "", "metadata": ""}
{"_id": "e1e542ac19998ce2804ff03854110043", "text": "send eth for safekeeping .", "title": "", "metadata": ""}
{"_id": "6c1e0f5699b3add7016a5f4dc3797ef1", "text": "Revoke all memberships ( except those of the utility contract msg . sender ) .", "title": "", "metadata": ""}
{"_id": "c3c50af54ef6650003407aea42d5d62b", "text": "Assigns ownership of a specific Meal to an address .", "title": "", "metadata": ""}
{"_id": "0c8a6c63d48d8a29d07e7b2ba59bbb35", "text": "manually offer tokens to channels .", "title": "", "metadata": ""}
{"_id": "b42be8d9b4022e4f619ac42aefdd9f1b", "text": "true on success , false on error .", "title": "", "metadata": ""}
{"_id": "030a39fbef135bbcf52c186b4c6a926d", "text": "Allows the owner of the contract to pause acceptingDeposits .", "title": "", "metadata": ""}
{"_id": "c9df6a0652771f4efaa3ed59b63d9002", "text": "If a sale is done using multiple rounds , allowing for better pricing structure , depending on on market demand and value of the ITM token .", "title": "", "metadata": ""}
{"_id": "094471853ee1e5f5b68a190bdb19949c", "text": "Get virtual balance of the owner of given address .", "title": "", "metadata": ""}
{"_id": "083e2a8583586bf286adfd0c6e126dd8", "text": "Set allowance for other address and notify , Allows _spender to spend no more than _value tokens on your behalf , and then ping the contract about it .", "title": "", "metadata": ""}
{"_id": "57328fc838c021565567a5fe59b73f55", "text": "state transition .", "title": "", "metadata": ""}
{"_id": "9ba37190696f9a611c5cb71e7bf6ae7b", "text": "Gets the releaseTime of the specified address .", "title": "", "metadata": ""}
{"_id": "ed681b36a05dfee8caba750cfbeab78f", "text": "Overrides parent to forward the complete balance to the wallet .", "title": "", "metadata": ""}
{"_id": "c1e8fb6282ccdc501283892e4eecda50", "text": "Create star .", "title": "", "metadata": ""}
{"_id": "14f2426d2664e5dde84ca4dede6cb91b", "text": "Set many allocations buy admin .", "title": "", "metadata": ""}
{"_id": "65516fe03f43f0996d3374f13cb7e693", "text": "ShowUnrelease ( ) looking for the not yet release amount of the address at some time .", "title": "", "metadata": ""}
{"_id": "be5c8c06a44358f3c7e1e40fb752713a", "text": "function to add a partner can only be called by the major / actual owner wallet .", "title": "", "metadata": ""}
{"_id": "8c3ebc0401a8a7c978173dac68a8f455", "text": "public a string is subitted that is hash tested to the digest ; If true the funds are sent to the dest address and destroys the contract .", "title": "", "metadata": ""}
{"_id": "1896287f5dbf53f3f81a3ea9b9b1ca6b", "text": "Finalize function .", "title": "", "metadata": ""}
{"_id": "fa5876c71e1cf676b6cc04b5ec2d712d", "text": "Check if an address is whitelisted by SEND .", "title": "", "metadata": ""}
{"_id": "1040f405b93628c3285a8d2fd2c9c152", "text": "Starts buyback at specified time , with specified rate .", "title": "", "metadata": ""}
{"_id": "ee38f450cf8a30f4efeff3d5dd75fcf9", "text": "Sets or Updates service locator registry .", "title": "", "metadata": ""}
{"_id": "f0b0905eb8fe3ec5ad23074fe61fadad", "text": "returns CHUNK_SIZE orders starting from offset orders are encoded as id , maker , price , amount .", "title": "", "metadata": ""}
{"_id": "15968aa37cc092c5df7a0b61d49556ef", "text": "Delists the given mon from any posted trades .", "title": "", "metadata": ""}
{"_id": "587018b7f9a8cd3af117fd776c9ec305", "text": "Freeze user during platform use - Backend Function .", "title": "", "metadata": ""}
{"_id": "2fb22141e19e33d79a08d23133fa0b14", "text": "Drains any ERC20 token accidentally sent to contract .", "title": "", "metadata": ""}
{"_id": "c4e8b6a4e8887af25b3bf3a80c2948d2", "text": "these variables are global only because of solidity local variable limit match offers with taker offer , and execute token transactions .", "title": "", "metadata": ""}
{"_id": "adbeb4f114df1eec0bde1ab9357bd69c", "text": "Do common multisig verification for both eth sends and erc20token transfers .", "title": "", "metadata": ""}
{"_id": "b0567ec314867c16ff7db786d730f2ec", "text": "Set or reaffirm the approved address for an ELHT .", "title": "", "metadata": ""}
{"_id": "16adfa01fd9f79b0420b51ac67d06213", "text": "The number of tokens allowed to be transferred .", "title": "", "metadata": ""}
{"_id": "9d0cd6f03d8a106d608182f7658759f6", "text": "lock new team release time .", "title": "", "metadata": ""}
{"_id": "784329a881b39ffa418b1067d106505f", "text": "Add new token into circulation .", "title": "", "metadata": ""}
{"_id": "090b790c4a0c294a6c9184ec2a4d3712", "text": "Drains all Eth .", "title": "", "metadata": ""}
{"_id": "c68cf2b4f7fdd874f8f36c23b2a55edc", "text": "Transfer Function .", "title": "", "metadata": ""}
{"_id": "560ccf55023327d49453027195eeed98", "text": "Mints unlocked tokens to unlockedLiquidityWallet and assings tokens to be held into the internal reserve vault contracts .", "title": "", "metadata": ""}
{"_id": "adf6d1623e8cb9f3b5a9a03c68322587", "text": "ability for controller to step down and make this contract completely automatic ( without third-party control ) .", "title": "", "metadata": ""}
{"_id": "9db93b409f17e97be7b7dc908e79df9e", "text": "extend closing time to a future time .", "title": "", "metadata": ""}
{"_id": "cfac3827987bc328944613df737148d6", "text": "This modifier should prevent ICO from being launched by an attacker .", "title": "", "metadata": ""}
{"_id": "b51a92a2b469c78e2beb5fa299cff145", "text": "Sets the implementation address of the proxy .", "title": "", "metadata": ""}
{"_id": "1935b7e296e8cddc1d5549af2694d463", "text": "Getters to allow the same blacklist to be used also by other contracts ( including upgraded Thanhnv ) .", "title": "", "metadata": ""}
{"_id": "f036a98643d9b45ede86f808dd4af17a", "text": "Set investors contract address .", "title": "", "metadata": ""}
{"_id": "09270c8a5d5c4b1a4184504be1919e3f", "text": "Multiplies two factors , returns the product .", "title": "", "metadata": ""}
{"_id": "63808eab82cf247beff5ce70c3526857", "text": "admin initiates a request that incoming delegate * calls from _source be accepted by trueUSD .", "title": "", "metadata": ""}
{"_id": "055a0c94c6ba1198fcc40c092059ed50", "text": "Function to clean up the state and moved not allocated tokens to custody .", "title": "", "metadata": ""}
{"_id": "f9273960d53ba49117fea799c139e9f2", "text": "Checks if the funding goal has been reached .", "title": "", "metadata": ""}
{"_id": "d8a542cfce20b9f167035a19a7e2e4f9", "text": "Withdraws reward for contributing in canvas .", "title": "", "metadata": ""}
{"_id": "3528f5d7175b0b702f86101e76b89723", "text": "Setting 3 - 6 - 9 months total staking hodl value if time is come .", "title": "", "metadata": ""}
{"_id": "7171bfc5b93205c3f7fbb931214f4df2", "text": "Function to buy tokens - reserve calculated amount of tokens .", "title": "", "metadata": ""}
{"_id": "cedbbe539760e21bc3fab8d66492e80a", "text": "Internal transfer function used to transfer tokens from an address to another without prior authorization .", "title": "", "metadata": ""}
{"_id": "7b22d0c832c75e7faaab4d3118623c23", "text": "Get the current day ( from contract creation ) .", "title": "", "metadata": ""}
{"_id": "4a2be2118c5fad90f03f746a958305fd", "text": "Pause of sale .", "title": "", "metadata": ""}
{"_id": "fdf122c7a9d01f56400fff5ec469745a", "text": "Parse a floating point number from String to uint , e . g .", "title": "", "metadata": ""}
{"_id": "9f4f51fee148971166450a43f42e9598", "text": "balance - token balance of owner .", "title": "", "metadata": ""}
{"_id": "5d2a5c14e487596be3ce463375289e2f", "text": "Distributes tokens to holders ( investors ) .", "title": "", "metadata": ""}
{"_id": "4c17233ad86c3b7c516e6ae60849c0d1", "text": "Change name .", "title": "", "metadata": ""}
{"_id": "32ef2b435b70a75f085350c32c1a06af", "text": "Function pay wrapper .", "title": "", "metadata": ""}
{"_id": "580a908410e0d778aaabd6a739b2026e", "text": "Get amount if tokens that actually available for purchase .", "title": "", "metadata": ""}
{"_id": "e7097c99b5d6aadeb35adfd4ae3a2fc3", "text": "Validate that amount is allowed to be transacted for currency .", "title": "", "metadata": ""}
{"_id": "5b0bc381d9749a2a588b2ce1ab380ce7", "text": "ERC223 Transfer and invoke specified callback .", "title": "", "metadata": ""}
{"_id": "e5763b2fc0f685da04656e6c21b739a1", "text": "setting the addition / removal of master addresses .", "title": "", "metadata": ""}
{"_id": "2483f8de1ac5881a6804a287e5bcf3f9", "text": "Get the token balance for address _owner .", "title": "", "metadata": ""}
{"_id": "44b3afd601193375527be42b5c904e86", "text": "Overrides delivery by minting tokens upon purchase and store in the time locked contract .", "title": "", "metadata": ""}
{"_id": "c4be04db913f26c459911cdee146be83", "text": "after we have setup everything we can unlock the game for public .", "title": "", "metadata": ""}
{"_id": "a583e1985343d96a6d262bd37324568f", "text": "This function is called directly by users who wish to transfer tokens .", "title": "", "metadata": ""}
{"_id": "1dec32842a424df47fad977eeef10575", "text": "Find closest tier id to given block .", "title": "", "metadata": ""}
{"_id": "632a08fea4219b74d6ae18fd177f70a9", "text": "Adds founders' token allocation .", "title": "", "metadata": ""}
{"_id": "744c49ef57ba10c8527670c6191d427d", "text": "runs when crowdsale is active - can only be called by main crowdsale contract .", "title": "", "metadata": ""}
{"_id": "f5935ae8a18411a78bba15d0f9dfeca6", "text": "true if investors are allowed to purchase tokens at the moment .", "title": "", "metadata": ""}
{"_id": "cf01d1115df3228502cc4591443c3dae", "text": "Transfer tokens to pre sale partners ( 5 ) .", "title": "", "metadata": ""}
{"_id": "03565f30c2c2c20ab2d72f164bdaf3ac", "text": "Should always be placed as first modifier ! .", "title": "", "metadata": ""}
{"_id": "dca97a7b297ed7165a03a51f5bc26318", "text": "Returns current price ( without decimals ) .", "title": "", "metadata": ""}
{"_id": "82370e422e4317b00a7b14e039892e33", "text": "additional StandardToken method of zeppelin-solidity .", "title": "", "metadata": ""}
{"_id": "3681a1f1bf6a472a5e5cb77a893fee59", "text": "Safeguard function to quickly pause a stack of contracts .", "title": "", "metadata": ""}
{"_id": "7ddb97af86c0427fcd7043b394f8ce2f", "text": "These functions allow users to use transfer and approve functions if the token is released .", "title": "", "metadata": ""}
{"_id": "ba1c7e53778f4f45dd594f404e415e1a", "text": "Allows _spender to spend a maximum of _value tokens in your behalf .", "title": "", "metadata": ""}
{"_id": "14042f1e1a83587b7c23c8bac4a0916c", "text": "Used to look up the allowance of someone .", "title": "", "metadata": ""}
{"_id": "ad0979abcf73726a9306878ef5f266bd", "text": "Modifier to only allow Owner or KYC Wallet to execute a function .", "title": "", "metadata": ""}
{"_id": "de051098637d8dfdb2dd89c94880d09f", "text": "function check is ICO complete ( minCap exceeded ) .", "title": "", "metadata": ""}
{"_id": "858e56580fe83eab7cc7553f8c108fab", "text": "The claim dividend to be paid for each adjacent plot , and as a flat dividend for each buyout .", "title": "", "metadata": ""}
{"_id": "4506767a6d64f54ac9ecb04a4f3a3860", "text": "Generates an identifier which associates a user and a poll together .", "title": "", "metadata": ""}
{"_id": "474701c0ddaceda65ceabc60c34a9efe", "text": "To enable owner to mint tokens .", "title": "", "metadata": ""}
{"_id": "39bd7852e641a54d0fb5adc154e87d0c", "text": "tier pop .", "title": "", "metadata": ""}
{"_id": "88dd73d174f69134eca075471fa13121", "text": "The mythical sample is a type common that appears only once in a 1000 .", "title": "", "metadata": ""}
{"_id": "d3180cd5596ea91a1845b69c08472794", "text": "Withdraw ether collected .", "title": "", "metadata": ""}
{"_id": "f6201cc5d0add1dce119b4cc649cb751", "text": "Access modifier for owner functionality .", "title": "", "metadata": ""}
{"_id": "4775633582b64ed2d58153a1d2c778a1", "text": "transfer by market .", "title": "", "metadata": ""}
{"_id": "ff01d25c8addcaea3ccbea07827bd6c8", "text": "Only lighthouse guard .", "title": "", "metadata": ""}
{"_id": "3ddb275092fc474d3809a38a1381b03b", "text": "Returns a board's row details , specifies which color occupies which cell in that row .", "title": "", "metadata": ""}
{"_id": "c866f24fe14d2eafbcc09c7cf407ca02", "text": "If there were any issue with refund owner can withdraw eth at the end for manual recovery .", "title": "", "metadata": ""}
{"_id": "2e49cb016990832bc58cf66ed5dbdf89", "text": "Sells equal number of tokens of all outcomes , exchanging collateral tokens and sets of outcome tokens 1 : 1 .", "title": "", "metadata": ""}
{"_id": "14c5661cb2dcd02fedbd7b71c4b1ecb2", "text": "true if investor is approved .", "title": "", "metadata": ""}
{"_id": "575353ff6c93c0a3f44b8412391673ad", "text": "Update information about collected ETH and sold tokens amount .", "title": "", "metadata": ""}
{"_id": "f3ed18ab7d3a6e240fbfd1b4fea7e0e3", "text": "Registers transaction for confirmation , designed for tokens transfer or Ether if ether transfered leave from blank from that moment wallet owners have WAIT_BLOCKS blocks to confirm transaction .", "title": "", "metadata": ""}
{"_id": "cb8ab0b4c74c91a7be6d4e379055fc25", "text": "Allows an owner to confirm freezeng process .", "title": "", "metadata": ""}
{"_id": "57e5a7588f53113aeefdc4db3e3f0303", "text": "function to get the price of the token returns how many token units a buyer gets per wei , needs to be divided by 10 .", "title": "", "metadata": ""}
{"_id": "5c7ccd16e85fde1240fed6ee1f005a6f", "text": "Before first sending , make sure to allow this contract spending from token contract with function approve ( address _spender , uint256 _value ) and to update tokensApproved with function updateTokensApproved ( ) .", "title": "", "metadata": ""}
{"_id": "fe92f744a70dc6ecf90fab1e3f604b49", "text": "This function will return only the price of a specific hero .", "title": "", "metadata": ""}
{"_id": "041f0846e5dd180b270f6dbf1bfb6858", "text": "Removes owner from wallet .", "title": "", "metadata": ""}
{"_id": "e50861cdb6e4a2cf825a3f98eeb75ce1", "text": "Enables burning through burnable bool .", "title": "", "metadata": ""}
{"_id": "90dd9424ed415f68113a2cabc8a8f77d", "text": "Get possible output for specified player at now .", "title": "", "metadata": ""}
{"_id": "3476ece9e0b8ba18138d62ff52a35b7c", "text": "Stores data to a given location , with a key ( exec id ) .", "title": "", "metadata": ""}
{"_id": "702e1c85498f42be5f2ae4c11e003a8e", "text": "Returns all the relevant information about a specific codetoken .", "title": "", "metadata": ""}
{"_id": "f424a92155172659087466ae65867336", "text": "Accepts ether and creates new ICO tokens .", "title": "", "metadata": ""}
{"_id": "81eebf1ec54e6f89e54221af2b7f9df4", "text": "Approves another address to transfer the given token ID .", "title": "", "metadata": ""}
{"_id": "22f36bac5fdba8d80e3f54358478e03e", "text": "Validates an incoming purchase .", "title": "", "metadata": ""}
{"_id": "c4a6e0e11d8c6ca35aa1d0d7b9aee065", "text": "checks only in emergency .", "title": "", "metadata": ""}
{"_id": "5f5d45103c81d5dd257d9ec813e4d15e", "text": "return current status as a name of a subscription ( or an offer ) with given id ; .", "title": "", "metadata": ""}
{"_id": "093206a72e471a501311133acf3a805c", "text": "Set Auditor account address to a new value .", "title": "", "metadata": ""}
{"_id": "d95e978ee395bdf29e2edc303aebe5e3", "text": "How profitable this contract is , overall .", "title": "", "metadata": ""}
{"_id": "c9f0e4203fd4966db3cf08336c6d63e0", "text": "save ether to owner account .", "title": "", "metadata": ""}
{"_id": "4660968f2bd7062a8e859d65b35d25b8", "text": "Administrator can add new teams during registration period , with an option to make a team non-eligible for the prize .", "title": "", "metadata": ""}
{"_id": "4530e4accab4f9348285c732a7fd1562", "text": "Change the start time for fair launch .", "title": "", "metadata": ""}
{"_id": "8f7b4156dcf68ddd636f180074424aa4", "text": "x to the power of y .", "title": "", "metadata": ""}
{"_id": "7cb855d7964a9669342dd468bff128df", "text": "Calculate the amount tokens for a given Wei amount and the amount of change in Wei .", "title": "", "metadata": ""}
{"_id": "19cd7e5e6442aa9c6cf22563f61a0a30", "text": "Called to enable refunds by the owner .", "title": "", "metadata": ""}
{"_id": "19c500d4d7429a66ccc8a2b8b32b7c71", "text": "Ensure the contribution is valid .", "title": "", "metadata": ""}
{"_id": "7358c9af64878e586f490a0f431e2c71", "text": "Transfer\u00eancia interna , s\u00f3 pode ser chamada por este contrato .", "title": "", "metadata": ""}
{"_id": "55ecde72c1e1d1996ea561a76a331bca", "text": "Exchanges can buy on behalf of participant .", "title": "", "metadata": ""}
{"_id": "bd6e4af3761e0893ce6e042dc23ba201", "text": "asserts zeppelin Claimable workflow is finalized .", "title": "", "metadata": ""}
{"_id": "f71d9ee24ca5f823cd73d6282cb7d64a", "text": "ptr : An updated pointer , pointing to the end of the PAYS action request in memory .", "title": "", "metadata": ""}
{"_id": "625bb642802961d4fbea7739434a1697", "text": "Claim refund ether in soft goal not reached .", "title": "", "metadata": ""}
{"_id": "434f42872442fca142b32604b4867784", "text": "This is a general safty function that allows the owner to do a lot of things in the unlikely event that something goes wrong _dst is the contract being called making this like a 1 / 1 multisig .", "title": "", "metadata": ""}
{"_id": "ce65f89dd6661a87e6b2fe4bc3b61482", "text": "Function to calculate the amount of coinbase of the block at this moment .", "title": "", "metadata": ""}
{"_id": "0e550c44aa0a50e1d5991862412f2f9a", "text": "Allows owner to add a new oracle to the registry .", "title": "", "metadata": ""}
{"_id": "868ca9e142cc12489df602255646bfaa", "text": "Remove transcoder .", "title": "", "metadata": ""}
{"_id": "a594a461ec9b83c73719b39c19e04aa0", "text": "Assigns a new address to act as the God .", "title": "", "metadata": ""}
{"_id": "ebd69d71b628fc656d9bddeef3bdae83", "text": "Set new withdrawal wallet address .", "title": "", "metadata": ""}
{"_id": "2b208eaaba784f83ae43c5f1a0006dec", "text": "Restricts privileged functions to the contract owner .", "title": "", "metadata": ""}
{"_id": "adaa9ef557a502fc083e5f5cc1a32e02", "text": "airdorp in batch .", "title": "", "metadata": ""}
{"_id": "628003d615f5dc49dc4975ac0df2e9d0", "text": "getWeekNo public function to get the current week no .", "title": "", "metadata": ""}
{"_id": "8890c457027701ad30dfb7f2ec58d880", "text": "Allows the admin to move bonus tokens still available in the sale contract out before burning all remaining unsold tokens in burnUnsoldTokens ( ) .", "title": "", "metadata": ""}
{"_id": "530460fc6ad4fa405dcd8a46d7993e59", "text": "Allow a token owner to pull sale .", "title": "", "metadata": ""}
{"_id": "fe8bd7ea99e00bf305d682cf51d481c0", "text": "Salviamo l'indirizzo del creatore del contratto per inviare gli ether ricevuti .", "title": "", "metadata": ""}
{"_id": "91ebd031d30292f6727b37fb01ee8207", "text": "Increase the airdrop count to allow sweet humans asking for more beautiful lemon Tokens .", "title": "", "metadata": ""}
{"_id": "0ec413220888700d07013d6442f95e9c", "text": "sends the ETH home .", "title": "", "metadata": ""}
{"_id": "24cc345a30e3a7cb22894f5b4458552f", "text": "Set ERC20 allowance .", "title": "", "metadata": ""}
{"_id": "277c45966ca4a83a140ba93dcd7132e3", "text": "freeze the amount of tokens of an account .", "title": "", "metadata": ""}
{"_id": "65bda6fccb9bf7fa957bad6dcc4d6a19", "text": "Failsafe to reclaim ownership in the event crowdsale is unable to return ownership .", "title": "", "metadata": ""}
{"_id": "e353e123a5549dcfca4c4ac38a62d4bd", "text": "This function withdrawing selected amount of developer's cut which is left in the contract by purchase .", "title": "", "metadata": ""}
{"_id": "b5b00954f99309575d1e8a39e5f27f61", "text": "get the withdraw records number .", "title": "", "metadata": ""}
{"_id": "154f92fceadb1f9f1f2bc268909239fc", "text": "get the token balance for an individual address .", "title": "", "metadata": ""}
{"_id": "a731564f44bc61f15639ff4e2e0039b4", "text": "Update fee provider contract .", "title": "", "metadata": ""}
{"_id": "47a5716a23337e44026749dcb62a5649", "text": "For withdrawing any tokens sent to this address .", "title": "", "metadata": ""}
{"_id": "a32cfb1436b3982d124626c643ec4ea0", "text": "Changes auction price function parameters before auction is started .", "title": "", "metadata": ""}
{"_id": "ebf2bfdd912da2dd0c40ce6860bc67d1", "text": "Fallback function to handle ethereum that was sent straight to the contract .", "title": "", "metadata": ""}
{"_id": "e519b9b04c38afe5c171e57713cb19b2", "text": "Reassign the executive officer role .", "title": "", "metadata": ""}
{"_id": "09db89c25780628d4d59fbfcb8d16557", "text": "Allows owner to withdraw tokens accidentally sent to the contract .", "title": "", "metadata": ""}
{"_id": "1a095d4c0edf137cbcefd1200491f999", "text": "Transfer ownership of an NFT - - THE CALLER IS RESPONSIBLE .", "title": "", "metadata": ""}
{"_id": "51b3f764460808d71ed8d1bcd0f1567c", "text": "To buy tokens given an address .", "title": "", "metadata": ""}
{"_id": "3d433b594df73e24efda95658aecf184", "text": "check if the contract is activated .", "title": "", "metadata": ""}
{"_id": "f4ee06eeb6531c4cf46c717197ec01c1", "text": "Burn RSPRs by User .", "title": "", "metadata": ""}
{"_id": "cf54e95a6c5ba50f3bc054eef9abb3ef", "text": "Get current crowdsale status .", "title": "", "metadata": ""}
{"_id": "b2c73038f6ccdfbc260a6fafb189ff10", "text": "Mint new tokens - this can only be done by special callers ( i . e .", "title": "", "metadata": ""}
{"_id": "1f36ece4ca6b6c5f9a38d238f6930acb", "text": "Stop Contract .", "title": "", "metadata": ""}
{"_id": "6cc61d8f2f7c3340c91722909b7a12ca", "text": "Sets the contract that will handle a specific interface ; only the address itself or a manager defined for that address can set it .", "title": "", "metadata": ""}
{"_id": "c2ec747cc338ddaf2c1df3e5ca30aec3", "text": "Gets the purchase records for a given address .", "title": "", "metadata": ""}
{"_id": "28b1d9dc6bf6127e82844182933b6ed0", "text": "Public function , can only be called from the outside .", "title": "", "metadata": ""}
{"_id": "cdf7ceacac81bdacff368762d59da120", "text": "Method called by anyone to withdraw funds to exchanges wallet after locking period .", "title": "", "metadata": ""}
{"_id": "87e353d4d1be1c1e5a3d8748dfbe181c", "text": "Merge ( called from our mining leader ) .", "title": "", "metadata": ""}
{"_id": "7e8d24b4e3b75383187d7b5a34dfcc9d", "text": "Extract 32-bit worth of data from the bytes stream .", "title": "", "metadata": ""}
{"_id": "7c26980907659857dbe26e57533cd5a9", "text": "Enable freezing for contract .", "title": "", "metadata": ""}
{"_id": "9a0388dabbb7035fb2341b5e2c81460d", "text": "Reinvest Elyxr Shrimp Farm dividends .", "title": "", "metadata": ""}
{"_id": "e16da61784193425caa3721fbb8d6883", "text": "Set cooldown of heroes entered this arena .", "title": "", "metadata": ""}
{"_id": "d2da3af9ec72af17737b8a49e623e7c8", "text": "Token stakeholder can vote against the project continuation .", "title": "", "metadata": ""}
{"_id": "bd80297d77fd410dc642d18dc8cda954", "text": "Return the number of transactions that meet the given criteria .", "title": "", "metadata": ""}
{"_id": "c0d17b5ceae5e93926d1fceff5afcbd5", "text": "Begins creating an event log buffer - topics and data pushed will be emitted by storage at the end of execution .", "title": "", "metadata": ""}
{"_id": "87574baa72491b134a421718b322bf76", "text": "Called by the owner , to emergency pause the current phase .", "title": "", "metadata": ""}
{"_id": "319511e10d781a4c267ea7650c4e8394", "text": "Check whether the provided address is the controlling wallet of the identity .", "title": "", "metadata": ""}
{"_id": "6d3a8e451fb8128145a3db599e211b41", "text": "Burns a specified amount of tokens .", "title": "", "metadata": ""}
{"_id": "707e999218731cf7932d373231fdeedc", "text": "An administrative function to allow in case the proof fails or a random winner needs to be chosen again .", "title": "", "metadata": ""}
{"_id": "a4f556d87ea5b22902be619ef5861c9f", "text": "Calculated payout in MLN with bonus for payin in Ether .", "title": "", "metadata": ""}
{"_id": "a7788b7add8385b8c4d6f1c00a53f30d", "text": "function that sells available tokens .", "title": "", "metadata": ""}
{"_id": "bb87d03fb467b2abb3f000a2c54bd0ce", "text": "END Admin fns .", "title": "", "metadata": ""}
{"_id": "8b312a20dc84a3e3f5e45e96bd2c63a1", "text": "Whether the locking was successful or not .", "title": "", "metadata": ""}
{"_id": "e20d277820e4974b9eb9e36bf4f52832", "text": "Updates the fee contribution multiplier for preparation period required for calling trainX ( ) .", "title": "", "metadata": ""}
{"_id": "ea5e260a0d88e0500244da81215fd1af", "text": "onlyOwnerOrOperator set random . org .", "title": "", "metadata": ""}
{"_id": "00c88bdaae2eb3eb35ab6add728e4629", "text": "Disables sale .", "title": "", "metadata": ""}
{"_id": "0220d8490b9cc925b38cc3826909bdce", "text": "ICO Logic Implementation .", "title": "", "metadata": ""}
{"_id": "2c50a234e4786a433ae28b21efef7d78", "text": "Developer override of received_tokens to make sure tokens aren't stuck .", "title": "", "metadata": ""}
{"_id": "9537974d6cd10aa0be0e9a6bb431cc06", "text": "This allows transfers to multisigs that use more than 2300 gas in their fallback function .", "title": "", "metadata": ""}
{"_id": "247ffe6a4bcf4fc545dd238d4132a75d", "text": "withdraw a bid - bids can only be withdrawn after 24 hours of being placed .", "title": "", "metadata": ""}
{"_id": "2cec415f623f4be9a6e0fcca531cd43e", "text": "Settlement transaction - can in theory be issued by anyone , but is designed to be handled by the dice2 . win .", "title": "", "metadata": ""}
{"_id": "cb3fb25f992db1eaa46be3d9408f4fc2", "text": "Returns how many tokens an investor has .", "title": "", "metadata": ""}
{"_id": "891222fd05b842133d405f8dde6f1e61", "text": "index into kingdomsByNumber if found , or zero if not .", "title": "", "metadata": ""}
{"_id": "125b488116900ab8e1d2cd0da04ec310", "text": "set the patent fee ratio .", "title": "", "metadata": ""}
{"_id": "53b95150ad428f8e0333c8ccccf0ea96", "text": "If the fee period has rolled over , then save the start times of the last fee period , as well as the penultimate fee period .", "title": "", "metadata": ""}
{"_id": "0db40881b31439e87469f6b6ef94b0de", "text": "use this to set the charity address sets crowdsale address .", "title": "", "metadata": ""}
{"_id": "446652a8cfc004c96b41ab98f5f79ca1", "text": "Used to mark the smart contract as upgraded , in case of a issue .", "title": "", "metadata": ""}
{"_id": "5c5f18828ea0b232a6a41c8995f760b8", "text": "Use this as function modifier that should not execute if contract state Halted .", "title": "", "metadata": ""}
{"_id": "aa017b16b13bfad5e4c2f929d5363f59", "text": "Get wsic code for a ship .", "title": "", "metadata": ""}
{"_id": "1ebca6ab388660330135c7791aed6092", "text": "Modofoer to prevent execution if ico has ended or is holded .", "title": "", "metadata": ""}
{"_id": "ab4cbf27757989d1e70750c5869a6b22", "text": "Lowers totalCredits and credits user .", "title": "", "metadata": ""}
{"_id": "c335686ec50360a84386baa56222a478", "text": "this serves as a lookup for new monsters to be generated since all monsters of the same id share the base stats .", "title": "", "metadata": ""}
{"_id": "832656881bf4ea120e57c5cdb36c00b5", "text": "Sets the rate of COT .", "title": "", "metadata": ""}
{"_id": "d294ac61dd49aa9b7dda54f0e86591aa", "text": "true if now is within the bounds of the whitelist period .", "title": "", "metadata": ""}
{"_id": "709e560025140f6a41b6132dfe119006", "text": "Brief introduction : the game is about to submit your pick ( R / P / S ) with fee to the blockchain , join players into pairs and withdraw 2x the fee , or just 1x the fee in case of draw .", "title": "", "metadata": ""}
{"_id": "75efa2c30f6fb04b4e90f22807f13eb0", "text": "checks whether the given converter supports a whitelist and if so , ensures that the account that should receive the conversion result is actually whitelisted .", "title": "", "metadata": ""}
{"_id": "464ee2663df93f59f378600b46ed8e65", "text": "we can build lambos .", "title": "", "metadata": ""}
{"_id": "d4b77b372902a139b619b51e4981eac8", "text": "distribute bonus tokens to addresses who has bonus tokens .", "title": "", "metadata": ""}
{"_id": "62d5b8107abb11a50be354db891b8781", "text": "tokens can be transferred out by the owner if either 1 : The tokens are not the type that are governed by this contract ( accidentally sent here , most likely ) 2 : The tokens are not already promised to a recipient ( either pending or confirmed ) .", "title": "", "metadata": ""}
{"_id": "897b1a4e4b1b3e0f91abb8db592010df", "text": "Issue exchange rates from escrow contract .", "title": "", "metadata": ""}
{"_id": "c02ece14058ce78e2f8a8e35cd2d5633", "text": "Sets The beneficiary address .", "title": "", "metadata": ""}
{"_id": "b7a1dfafaed9b94d9c93070f6022f7be", "text": "Returns all the relevant information about a specific token .", "title": "", "metadata": ""}
{"_id": "9a572c4693f3067f993fd64c0d43cde5", "text": "Can only be called if ( liquid ) tokens may be transferred .", "title": "", "metadata": ""}
{"_id": "1d30cead19655f0fc828c5963797fea6", "text": "Handle the pot ( share , final , lucky and dealer ) .", "title": "", "metadata": ""}
{"_id": "90347f75852e76923bb2de8ce530b207", "text": "Uses transferFrom so you'll need to approve some tokens before this one to this contract address .", "title": "", "metadata": ""}
{"_id": "85aa7aeaabfb52903b1a9210a41cb55f", "text": "Ether withdraw .", "title": "", "metadata": ""}
{"_id": "9176d08bc78b19f38b20b47b09163ec8", "text": "Creates a new Color with the given name .", "title": "", "metadata": ""}
{"_id": "4e56470f52cfaf1e40d991e160b13110", "text": "Functions for the contract owner .", "title": "", "metadata": ""}
{"_id": "72c1407655b3281a17e40d2e47e3b709", "text": "addInvestorBonusInTokens is used for sending bonuses for big investors in tokens .", "title": "", "metadata": ""}
{"_id": "e5fb6da0e88a0563503e14acd5abe4ca", "text": "Returns a URI pointing to a metadata package for this token conforming to .", "title": "", "metadata": ""}
{"_id": "7be18f2a2bfc48c1075672a223a6e8a3", "text": "getTimer of TowerID to see how much time ( in seconds ) you need to win that tower .", "title": "", "metadata": ""}
{"_id": "ebef5f5b108062df34ab37920d82d826", "text": "function to be called when wanting to add funds to all districts .", "title": "", "metadata": ""}
{"_id": "022ff8bab319c5f0025863a287cdde29", "text": "The constructor .", "title": "", "metadata": ""}
{"_id": "a8749b2adf4650aff5deb4e8fccf956f", "text": "Allows the owner to set up the allowance to the spender .", "title": "", "metadata": ""}
{"_id": "c13201c78dbba5b22f214eb2486be313", "text": "set address .", "title": "", "metadata": ""}
{"_id": "2a8cbb42000f859a24f0489c6f98b908", "text": "Decide or change box used in game .", "title": "", "metadata": ""}
{"_id": "10c5ee89c73b70f38c704f2da28b8cd8", "text": "Change voting rules .", "title": "", "metadata": ""}
{"_id": "fab0c216a7d0a6e7e5704da16e22bc86", "text": "withdraw tokens amount within vesting rules for advisory .", "title": "", "metadata": ""}
{"_id": "178cf55f58286076d9bbbc43f9ea78f3", "text": "airdrop to old token holders .", "title": "", "metadata": ""}
{"_id": "e9a8cf31c59ef1765c7d2b8fb6e3572c", "text": "Checks the uncommitted balance to ensure there the locker has enough tokens to guarantee the amount given can be promised .", "title": "", "metadata": ""}
{"_id": "d656d647998cc8d69dcfe732e671a56a", "text": "Mapping referee address with referrer address .", "title": "", "metadata": ""}
{"_id": "e359a1fd583d599dbdf08559fa3e6f38", "text": "Function to mint tokens , and lock some of them with a release time .", "title": "", "metadata": ""}
{"_id": "224d5cb502199bc60b03d773738a23e6", "text": "change the default withdraw wallet address binding to the deposit contract address .", "title": "", "metadata": ""}
{"_id": "7e5c7b2a6ce6e5b19085082e2ad4dc97", "text": "Buys tokens in the crowdsale and rewards the given address .", "title": "", "metadata": ""}
{"_id": "68d313baba9159c8c5073b4fc9026f63", "text": "only owner can submit tracked clicks ( from ad server ) .", "title": "", "metadata": ""}
{"_id": "027a0daba15ed416bbfeb4463687052d", "text": "Initialize accounts when token deploy occurs .", "title": "", "metadata": ""}
{"_id": "5f4725b5efac40bd73c6f9ac9b3a31de", "text": "locks tokens for sender for n days .", "title": "", "metadata": ""}
{"_id": "3118e849754c681ae24b557cde35b295", "text": "ManagerTransfer : new Crowdsale ( ) ( 0 , 4700000 ) ; new 0 . token . Token ( ) ; .", "title": "", "metadata": ""}
{"_id": "9d76c3decd9f1af0d3a12640211d85ff", "text": "Method set data from migrated contract .", "title": "", "metadata": ""}
{"_id": "ac905ba750f604e7625bed084da213b6", "text": "eggs to eth .", "title": "", "metadata": ""}
{"_id": "43856a735bd5efabb8b2812c0ff6dec0", "text": "Prevents the seller from cancelling an escrow .", "title": "", "metadata": ""}
{"_id": "1032db2e6d5e9c338d98d5d7e54a65cf", "text": "Plenum returns a number of players for a room specified by a size and a bid .", "title": "", "metadata": ""}
{"_id": "9fbb65d2a33d842bead720388da0bb3d", "text": "ERC20 Standard method to transfer tokens on someone elses behalf .", "title": "", "metadata": ""}
{"_id": "011a89aae9e1b20b24c6989affc2e90c", "text": "Get all assets of a particular account .", "title": "", "metadata": ""}
{"_id": "9d78f8e2896db48e92fa8ab33214f438", "text": "transfer money to the owner ! .", "title": "", "metadata": ""}
{"_id": "98531f990f83a3540430848d76a4a2e0", "text": "Posts a trade offering up your mon for ANY mon of the given class .", "title": "", "metadata": ""}
{"_id": "10d724152e1f26925fe38bcb1bef73a2", "text": "Change the admin address .", "title": "", "metadata": ""}
{"_id": "ef51c3b4a1cf77d5d634e3677c821316", "text": "Frozen for the team members .", "title": "", "metadata": ""}
{"_id": "c19a8ca1eaa19130f14bbce706cf7c8b", "text": "Price is 20000 VTX for 1 ETH .", "title": "", "metadata": ""}
{"_id": "d4433ee62d715c5526c1863ba3d05b71", "text": "This function will return the details for a building .", "title": "", "metadata": ""}
{"_id": "b25f26aa6bededd5cbf2c702c3a668e6", "text": "Calculate amount of ONL tokens received for given ETH value .", "title": "", "metadata": ""}
{"_id": "4ce1c328022e36be8eeaf9d8b39f2b74", "text": "This method shoud be called when caller wants take dividends reward .", "title": "", "metadata": ""}
{"_id": "04712e1c8abb8d3b9b9e1636d2cd64cf", "text": "Gets the price and buy cap for individual addresses at the given milestone index .", "title": "", "metadata": ""}
{"_id": "cb12d513836d03c9362fbbf162ca1449", "text": "Safe maths , inspired by OpenZeppelin .", "title": "", "metadata": ""}
{"_id": "82e572facf1e84cf3d73c6d17d2a6089", "text": "Send Ether to owner .", "title": "", "metadata": ""}
{"_id": "acae1d700e27f75ceaeaea1e6c3c059f", "text": "Returns the number of betting records left to be processed .", "title": "", "metadata": ""}
{"_id": "f2457283f4fac2bcb0e2472eba2c8203", "text": "Change max bet reward .", "title": "", "metadata": ""}
{"_id": "e5321c988d59a8f0e4ae15796349a837", "text": "Pays out a claim .", "title": "", "metadata": ""}
{"_id": "e5ec9cd98cc38066c648c07ce460fad8", "text": "Return the education of the citizens of a city .", "title": "", "metadata": ""}
{"_id": "054faa30fabd2faa9790fb93a084937d", "text": "Refund invoice .", "title": "", "metadata": ""}
{"_id": "7a7316ae23ba555de7c4767446e15861", "text": "Read messages as array of message numbers .", "title": "", "metadata": ""}
{"_id": "af4a2747224c67ebaa71f89c9e4e8e78", "text": "Change the gas price limit .", "title": "", "metadata": ""}
{"_id": "5480326bda1049a9bbabebc5e78a6b01", "text": "Burn tokens to burnAddress from msg . sender .", "title": "", "metadata": ""}
{"_id": "70928ec4a1beed3199b9d3726bf3051f", "text": "return the total tokens purchased .", "title": "", "metadata": ""}
{"_id": "1b98bc27d56e0304d7172efd726c24bd", "text": "finalise presale .", "title": "", "metadata": ""}
{"_id": "f462c24c1787d996bd5fb100212480df", "text": "Adds a co-owner for an asset with provided symbol .", "title": "", "metadata": ""}
{"_id": "70c933dac39ca501c3cad2de6a533fd9", "text": "Sets the controller .", "title": "", "metadata": ""}
{"_id": "e05b313c191828d7be9b5fd8b7fd4df1", "text": "Destroy tokens ( _value ) from the system irreversibly on behalf of _from .", "title": "", "metadata": ""}
{"_id": "1a58c65576c1856f79bb7c12ca65cf1a", "text": "Accept ownership transfer .", "title": "", "metadata": ""}
{"_id": "fbeb72af774ede1ee44168e5fcd84e47", "text": "Set a block from when a token won't be tradeable .", "title": "", "metadata": ""}
{"_id": "728c6536046eec0a7f6793ae13e1ce5d", "text": "Return all remaining tokens back to owner .", "title": "", "metadata": ""}
{"_id": "53e77c6165a7e8d43d9a7cc62c92e152", "text": "Returns the current price of a town .", "title": "", "metadata": ""}
{"_id": "f40ece5503f179755c8c1a6656442f7d", "text": "give a seed and get a random value between 0 and 0xffffffff .", "title": "", "metadata": ""}
{"_id": "bdc65472457fb44aef9829c698f7e9fa", "text": "In case the ICO was terminated , allows House to kill the contract in 2 months after the termination date .", "title": "", "metadata": ""}
{"_id": "c670b3a441177b455c1ed68227c650a8", "text": "Transfers the unclaimed token amount for the given token and address .", "title": "", "metadata": ""}
{"_id": "0bcdd0b7bccb9cd88ee98b603b6f2e0f", "text": "Refunding by funder .", "title": "", "metadata": ""}
{"_id": "7e7a5afee82cdc0c456ac4815772258f", "text": "solhint-enable function-max - lines .", "title": "", "metadata": ""}
{"_id": "8c3777b8f857f98a2bac685579414363", "text": "Removes up to _amount from Ledger , and sends it to msg . sender . _callbackFn .", "title": "", "metadata": ""}
{"_id": "8886af632aeb301bcaa58687321eb4b5", "text": "Refund the early HODLers , and leave the rest to the contract deployer .", "title": "", "metadata": ""}
{"_id": "57bad6460be93a02c1f00ecb478d154c", "text": "modifier to only accept transferAndCall from CLN token .", "title": "", "metadata": ""}
{"_id": "4110597f0e7cd028fcbcf5e9925a1952", "text": "batch Air Drop by multiple amount .", "title": "", "metadata": ""}
{"_id": "6fde144072a399870ca7e1d752cea667", "text": "Get the balance sent to the contract .", "title": "", "metadata": ""}
{"_id": "4af1a035ba009ea2c324ab4fb678beb8", "text": "Originally in ERC20 this function to check the amount of tokens that an owner allowed to a spender .", "title": "", "metadata": ""}
{"_id": "5f19767a69da00d7fbd32950df15ab0f", "text": "Setting moderator / admin / root access .", "title": "", "metadata": ""}
{"_id": "0e70061dbbb360b79f2b99aeee1aa477", "text": "transfer token for another address .", "title": "", "metadata": ""}
{"_id": "a57fdc6b775e156e24893035d3522519", "text": "Allows you to get tokens from the contract .", "title": "", "metadata": ""}
{"_id": "16b516f703bb957b3fbcc07d26ac9aba", "text": "Calculate the next buyout price given the current total buyout cost .", "title": "", "metadata": ""}
{"_id": "db80ff8a1c7af6e2e90430da7546f7ca", "text": "uint256 _envelopeTypeId uint256 2 _data 0 - maxNumber 1 - feeRate .", "title": "", "metadata": ""}
{"_id": "f2c342b49110fcf2e1299670ef5d69ef", "text": "Aproves _spender to spend _value tokens and executes its receiveApproval function .", "title": "", "metadata": ""}
{"_id": "75e3d32ffbbc0f76171ddad43ee0a19e", "text": "true if investors can buy at the moment .", "title": "", "metadata": ""}
{"_id": "4800c413a7961f03b114516f4eefc107", "text": "in case we ever add a bad race type .", "title": "", "metadata": ""}
{"_id": "e98d813c32a2d7ca87bcce839850fcf0", "text": "Set USD / ETH rate in USD ( 1000 ) .", "title": "", "metadata": ""}
{"_id": "8044bd59ee61372566a3a4917289ffc6", "text": "Withdraw Sketch from sale ( NOTE : does not cancel bids , since bids must be withdrawn manually by bidders ) .", "title": "", "metadata": ""}
{"_id": "72f09dc9e655be2a899a3aa1f95ddac1", "text": "Finish the crowdsale and withdraw funds .", "title": "", "metadata": ""}
{"_id": "897682f80c19291ddb217420eaa4e175", "text": "helper function to approve tokens for market maker and then change tokens .", "title": "", "metadata": ""}
{"_id": "6b7290b075da612da3c26d252de4b6d8", "text": "Whitelist address up to maximum spending ( AML and KYC ) .", "title": "", "metadata": ""}
{"_id": "f2febda188135874fd8b2c4261253810", "text": "sets a users balance to zero , adjusts supply and dev allocation as well .", "title": "", "metadata": ""}
{"_id": "a83189c3889dd71a8d641926bcb9c048", "text": "Transfer the ownership to a new owner can only be done by the current owner .", "title": "", "metadata": ""}
{"_id": "88d473e7a9beb8778dab26caff9ae1d9", "text": "If the current action is not storing , reverts .", "title": "", "metadata": ""}
{"_id": "91035d238e1f22b4f05f4e0e5383d2b3", "text": "Closing the crowdsale contract and transferring the rights of the token contract to the specified address .", "title": "", "metadata": ""}
{"_id": "38a5bebf1ac64187b3b4161b25642269", "text": "Check is owner address .", "title": "", "metadata": ""}
{"_id": "cef19be6ab758871e98f371e8692a521", "text": "Set an address at _key location .", "title": "", "metadata": ""}
{"_id": "fe19eb49ff4cc68cd0894ef534cef927", "text": "Function wrapper around the _Deposit event so that it can be used by contracts .", "title": "", "metadata": ""}
{"_id": "32fee64a4373e7a92ddf5f22a4430758", "text": "Throws if _tokenId is not a valid NFT .", "title": "", "metadata": ""}
{"_id": "98e7a200892a526b849ae339761d4520", "text": "Can be triggered if an invariant fails .", "title": "", "metadata": ""}
{"_id": "d414fd22a9676654a31fb47d19e809ab", "text": "Used to charge a client .", "title": "", "metadata": ""}
{"_id": "2401158dbe028655097cf9de9f8c80ad", "text": "Do the real transfer with out any condition checking .", "title": "", "metadata": ""}
{"_id": "8775feae8925d1ee25fca92df0059920", "text": "Make sure this board is in one of the end of game states .", "title": "", "metadata": ""}
{"_id": "21f599c2c4e6f427f0ac7c4ae5c19f1c", "text": "This function is to vest tokens to the founding team .", "title": "", "metadata": ""}
{"_id": "f0a0393ad7629ad549ec525d33201241", "text": "Public function that allows users to determine the current price ( in wei ) per token .", "title": "", "metadata": ""}
{"_id": "30518138692aca4fa45430da0e9c58c9", "text": "Proxy call for setting hodler start time .", "title": "", "metadata": ""}
{"_id": "7890cca935e40aff129f8ce61d96203f", "text": "True if the approval was successful .", "title": "", "metadata": ""}
{"_id": "5ebf36445f247d9c74864eeec81141c7", "text": "Forcibility withdraw contract ETH balance .", "title": "", "metadata": ""}
{"_id": "d65e07dbc96dc970b3b2cb6bfa3bc077", "text": "onApprove implements MiniMeToken Controller's onApprove .", "title": "", "metadata": ""}
{"_id": "0902eb880eb162f9b3a010d469243518", "text": "Similar to allBalances , with the addition of supporting multiple users .", "title": "", "metadata": ""}
{"_id": "e81d091fad29aecc5a9bb7b9aecfd4fc", "text": "Checks weiRaised value and returns bonus due to the percentage of that value to the cap .", "title": "", "metadata": ""}
{"_id": "f53a4fd654d827abb0c59cf7e592fa00", "text": "Confirms previously requested ETH transactions .", "title": "", "metadata": ""}
{"_id": "5df5b4074f3cb6df881546bb794502c6", "text": "true if the transaction can buy tokens from ICO .", "title": "", "metadata": ""}
{"_id": "e105f8e0fbda93b6586f3916947fbbe6", "text": "An ERC20-compatible balance that returns the number of plots owned .", "title": "", "metadata": ""}
{"_id": "8ec8fc67197979d5cdf5795fc889af09", "text": "The main function to split game revenues , this is triggered only by changing the game's state to one of the ending game states .", "title": "", "metadata": ""}
{"_id": "b54c8e787eef71c63b4fd8869e13cd40", "text": "The function of changing the minimum purchase amount of tokens .", "title": "", "metadata": ""}
{"_id": "b5fa29e6718a2a964b1e4473b4838470", "text": "Converts the Ether accrued as dividends back into ETP tokens without having to withdraw it first .", "title": "", "metadata": ""}
{"_id": "50d83f7f8f9e84a002e120ba50166a7b", "text": "Used on KittyGym when rerolling a move to ensure validity .", "title": "", "metadata": ""}
{"_id": "e1409fe9d29546a4c491cf48b757ab25", "text": "To change to previous stage .", "title": "", "metadata": ""}
{"_id": "f954142dc6272aa92b64c4d5f0b0a5d3", "text": "only owner .", "title": "", "metadata": ""}
{"_id": "9c5668be2cea5e6fdf104e6581d01d71", "text": "'owner' can set number of tokens per Ether in prefunding .", "title": "", "metadata": ""}
{"_id": "c91fff4f3893dd735f6052ecdea74296", "text": "Make sure we will send back excess if user sends more then 5 ether before 100 ETH in contract .", "title": "", "metadata": ""}
{"_id": "ec1f4f03d78af855eea259e4d4b977d4", "text": "Allows investors to return their investments .", "title": "", "metadata": ""}
{"_id": "42e6bdcd3dba972fc3861f71acd066dd", "text": "ERC20 Methods .", "title": "", "metadata": ""}
{"_id": "12c6a8f5ba28986f46d4577d690c915f", "text": "function to be called when wanting to add funds to a district .", "title": "", "metadata": ""}
{"_id": "b44bee37300555342c7d7ca97d29abc4", "text": "Set a token contract address and available tokens .", "title": "", "metadata": ""}
{"_id": "7743cebc44de8e3584afa1cfe15dbdf1", "text": "remove an account from the frozen accounts list .", "title": "", "metadata": ""}
{"_id": "80a5ac5a53daa9a58b239c9ce91e4d77", "text": "Helper getters .", "title": "", "metadata": ""}
{"_id": "97b785f51c22bcdc44da232e18eec1cd", "text": "Administrative update of the bankroll contract address .", "title": "", "metadata": ""}
{"_id": "7949820fc360a455dce81124241c681f", "text": "To change RATE .", "title": "", "metadata": ""}
{"_id": "da5eb832697cded1c4d556ae7e555da6", "text": "Assigns a new address to act as the Secondary Manager .", "title": "", "metadata": ""}
{"_id": "528d0c70020bcec02737f14c7464ec1b", "text": "Returns total number of transactions after filers are applied .", "title": "", "metadata": ""}
{"_id": "ea571ef461a6844cd4dba3e56b97452a", "text": "Confirm the purchase as buyer .", "title": "", "metadata": ""}
{"_id": "83f83fcec0c0785ac20f3a681579e333", "text": "Returns list of transaction IDs after filers are applied .", "title": "", "metadata": ""}
{"_id": "faf5065a22a539bdc691f811a9b24517", "text": "Decreases the number of tokens a spender is allowed to spend for msg . sender .", "title": "", "metadata": ""}
{"_id": "23d6d9595cc57c40faa63377d6e819c6", "text": "sign function .", "title": "", "metadata": ""}
{"_id": "2fb7cac09c22f015461461f859617a48", "text": "just in case .", "title": "", "metadata": ""}
{"_id": "ffb05c24bd3f9ca29088e5d15788ee23", "text": "We change the purpose of raising funds .", "title": "", "metadata": ""}
{"_id": "95e9940e0406913732ff6b2a270c39a2", "text": "Increase the amount of WEDU token that allowed to the user .", "title": "", "metadata": ""}
{"_id": "84b409c500be6a769b5fc5a266823a45", "text": "Calculate how much tokens a winning driver can claim once race is over .", "title": "", "metadata": ""}
{"_id": "8b32b7c39f680f5ed96a684a3cfd2fcb", "text": "This function will return all of the details of the pokemons .", "title": "", "metadata": ""}
{"_id": "d6db4da9fb2e000875523d4c96545045", "text": "Returns votes given by specified user to the list of projects ever voted by that user .", "title": "", "metadata": ""}
{"_id": "a0f43dff7163ea0fc392a167681e780b", "text": "tax parameters .", "title": "", "metadata": ""}
{"_id": "49c7c5c5574d9b2a0e5afd74bff0ea85", "text": "Returns a list of execution ids under which the given app name was deployed .", "title": "", "metadata": ""}
{"_id": "ed7b38031232b8957b82856a0858a9c0", "text": "Throws if crowdsale has ended .", "title": "", "metadata": ""}
{"_id": "f221ea39c484dea41f30c20ab54a7344", "text": "It will only be used in case the funds get stuck or any bug gets discovered in the future .", "title": "", "metadata": ""}
{"_id": "10ca539fdcec88338d93493883e48beb", "text": "Simple init function - sets the sender as a script executor for this instance .", "title": "", "metadata": ""}
{"_id": "45ced65b0b679e0f12c90ae73482f2ab", "text": "confirmation that this is indeed the next version , called from previous version of contract .", "title": "", "metadata": ""}
{"_id": "c86dfc3a9a12293d7b740e0d88a419c6", "text": "asset owner address .", "title": "", "metadata": ""}
{"_id": "a2cf9a26acda7d79d8fc581a40e102c6", "text": "When the jester can't handle it anymore , he can give his position to someone else .", "title": "", "metadata": ""}
{"_id": "f50572a648d94344802aa317eadfebd3", "text": "Fetches the number of stocks available .", "title": "", "metadata": ""}
{"_id": "c11636361fe156c63d2911c9c1f1c055", "text": "get user's vote history .", "title": "", "metadata": ""}
{"_id": "aeaf2046c89d03bef2632aa750e931ad", "text": "Initiates a transaction .", "title": "", "metadata": ""}
{"_id": "f9340759f0d6e65adac29eaf29734cdd", "text": "given an array of ids , returns whether or not this composition is unique assumes the layers are all base layers ( flattened ) .", "title": "", "metadata": ""}
{"_id": "8749439c8aaf3434593cc7de38601c48", "text": "modifier allow only if function is called by administrator .", "title": "", "metadata": ""}
{"_id": "472ea33ca7324b47a9d65899a4617126", "text": "redeemProposalFunds - redeem funds requested by prior submitted proposal .", "title": "", "metadata": ""}
{"_id": "0b37e93fcedad37b8e624b6dcd8bb824", "text": "Changes : - added whenNotPaused modifier - added validation that teamWallet balance must not fall below amount of locked tokens .", "title": "", "metadata": ""}
{"_id": "d956afd5cdfdc8921a37d7177075129c", "text": "withdraw the current balance .", "title": "", "metadata": ""}
{"_id": "0174f4b1be832e8578e12a61d2018ee6", "text": "removes token and airdropper from whitelist .", "title": "", "metadata": ""}
{"_id": "0a0fa0b1dd3b93ff7cafeebceac4edef", "text": "Main method : .", "title": "", "metadata": ""}
{"_id": "6d9948130afa8871816d2d09f2bd4a46", "text": "Overrides Crowdsale . buyTokens ( ) .", "title": "", "metadata": ""}
{"_id": "63ffb6e4824f993fc4805d1049a3ad52", "text": "Cancel bet and relase all the bets back to the betters if , for any reason , payouts cannot be completed .", "title": "", "metadata": ""}
{"_id": "633c81d3f1bb3124ac599b0e207735c5", "text": "if defcon is set to 2 or lower then function is paused .", "title": "", "metadata": ""}
{"_id": "50b1902a05538344f25b22a8faaea8ef", "text": "Overrides Crowdsale fund forwarding , sending funds to escrow .", "title": "", "metadata": ""}
{"_id": "b0cf1c0d155577291e2efebafe80f897", "text": "Allows an account to be released if it meets the time constraints of the group .", "title": "", "metadata": ""}
{"_id": "939076e3171fc9d59b9bd85abaa61c9a", "text": "Change crowdsale Starttime .", "title": "", "metadata": ""}
{"_id": "2be2c1b852c2b0c3db4cf5c25d75d0db", "text": "Pyramid grid reading functions .", "title": "", "metadata": ""}
{"_id": "97d57a0e5f3878c40a414102080d82df", "text": "Checks if account is a minter .", "title": "", "metadata": ""}
{"_id": "8acaf1f7b4cc3caf4fe32d3b88734891", "text": "all Nutz balances .", "title": "", "metadata": ""}
{"_id": "08a7d35bb052a0c5b0cdb41d12c149ff", "text": "Override unpause function to only allow once configured .", "title": "", "metadata": ""}
{"_id": "3688f14f011636abf89ba62b564f4bee", "text": "Funtion to let users claim their tokens at the end of ico process .", "title": "", "metadata": ""}
{"_id": "a84d0404031ebf2ca661b1492aa5d38f", "text": "deploy token with exchnge functionality .", "title": "", "metadata": ""}
{"_id": "2643d5f10f55ab91564482bb11b36c64", "text": "Adds a new certificate by the calling certificate authority .", "title": "", "metadata": ""}
{"_id": "dbcfe034f031c7eaebf741b4a382e3f7", "text": "Reinvest Halo3D Doublr dividends .", "title": "", "metadata": ""}
{"_id": "63e6d1565aa41271793b4ed53a23b0c1", "text": "return current price of token .", "title": "", "metadata": ""}
{"_id": "4fb4525c8394ab8b6c3378e351995833", "text": "Allows the admin to initialize a crowdsale , marking it configured .", "title": "", "metadata": ""}
{"_id": "c3d3261805f136ae69c7f9227636d0af", "text": "Max number of BBD tokens on exchange to sell .", "title": "", "metadata": ""}
{"_id": "ee224a374f670e003d6af499008aa707", "text": "web3 function call .", "title": "", "metadata": ""}
{"_id": "be621fb46844be170228b4255264cc55", "text": "Override unsupported functions ; No selling of P5 tokens .", "title": "", "metadata": ""}
{"_id": "cd14b7846f168fabb2c9c7aa7c9af0e8", "text": "Approves token minting for specified investor .", "title": "", "metadata": ""}
{"_id": "10a831519f512450008aea037e440226", "text": "Increase the amounts of tokens that an owner allowed to a spender .", "title": "", "metadata": ""}
{"_id": "b79a286d9bb3edf8721653825614bd11", "text": "Confirms whether a kitty has chosen actions .", "title": "", "metadata": ""}
{"_id": "4d87d2b1a823d4a1593c43640de5b633", "text": "Owner can transfer out any accidentally sent ETH .", "title": "", "metadata": ""}
{"_id": "3691801680346cf5a323847cd33435d8", "text": "Burn unsold tokens from the Ico balance .", "title": "", "metadata": ""}
{"_id": "3caa5eafd8be4e308a695e7afab87405", "text": "kept public in order to buy for someone else .", "title": "", "metadata": ""}
{"_id": "462dbbcf554010bf7d8f50cd1c8de11c", "text": "Regist holder step .", "title": "", "metadata": ""}
{"_id": "f2733a81d2dff91cc4f95396d46d9ac0", "text": "allow arbiter to get his collected fees .", "title": "", "metadata": ""}
{"_id": "fc28a8f69a02e686ed4a614fd99f5055", "text": "Sign an existing document with a valid IEthIdentity of signer - key : unique id of the created document - ethIdentity : address of EthIdentiy of signer that allow to verify the signer's authenticity .", "title": "", "metadata": ""}
{"_id": "36bfc2711ea0bf3cf5660bf0615b7716", "text": "Allow the transfer of tokens to happen once ICO finished .", "title": "", "metadata": ""}
{"_id": "ee4616b93f4871ad68fc8dceb8abdc05", "text": "allows an address to withdraw its balance in the contract .", "title": "", "metadata": ""}
{"_id": "d78368c2a97fcfe22981235d0754ee1d", "text": "Incase community prefers goo deposit payments over production , can be tweaked for balance .", "title": "", "metadata": ""}
{"_id": "aaf8c0ccd3b2632c29e749f5a84949d2", "text": "calculate tokens sold officially .", "title": "", "metadata": ""}
{"_id": "977d953df4e1bbefdf31cb07e9364ba5", "text": "currentRate of FXX tokens per ETH .", "title": "", "metadata": ""}
{"_id": "ba40a75eb4bc76b2a530e80284bcfb1e", "text": "value uint256 Value of _checkpoints at _block .", "title": "", "metadata": ""}
{"_id": "376d033338308046728361967fecfe9e", "text": "Allows the current owner to _request_ transfer control of the contract to a newOwner .", "title": "", "metadata": ""}
{"_id": "d2aeb1722aec92cb1ad2a57810d993b8", "text": "Will get gains in ETH from the tokens that the seller has previously sold - Contract supply of ETH must have enough balance ( which should be in every case ) .", "title": "", "metadata": ""}
{"_id": "a1f2c94ca7a70dc21b2a903605aa4c15", "text": "internal function to remove notes from ownedNotes array .", "title": "", "metadata": ""}
{"_id": "4bc9b4121597f7a3d2f02cb67a1a996e", "text": "Contribute Function , accepts incoming payments and tracks balances .", "title": "", "metadata": ""}
{"_id": "f05467d6cd20e1d1d2adc84a6e902aa4", "text": "run code only in unlocked mode .", "title": "", "metadata": ""}
{"_id": "9b01b898fb83e2eb9fe78552eb74b5c7", "text": "Allows anyone to sign up as an unofficial user with their own address .", "title": "", "metadata": ""}
{"_id": "6772c6021484df841dd95f8d53988ba9", "text": "Cancels the trade and returns the ether to the seller .", "title": "", "metadata": ""}
{"_id": "ff9ac34daae996c0ecf8e3e1726a613a", "text": "set initial message .", "title": "", "metadata": ""}
{"_id": "def02597ec95601d7f48a07984c17e1a", "text": "Returns current price of a token on auction .", "title": "", "metadata": ""}
{"_id": "cb4c7e9303d87603555b74424d1e0e39", "text": "Returns bonuses based on the current totalSupply in percents .", "title": "", "metadata": ""}
{"_id": "1baf09cf8006ec5217cbf6beeb3e8822", "text": "transferFrom request .", "title": "", "metadata": ""}
{"_id": "72bd1aed833945a0809ba8d5f86375a9", "text": "Increase the amounts of produced diamond , gold , silver , and bronze bottle caps in respect to their occurrence probabilities .", "title": "", "metadata": ""}
{"_id": "ffffff3474b31eb452942adfe0683a00", "text": "Called internally by the airdrop function to ensure the contract holds enough tokens to succesfully execute the airdrop .", "title": "", "metadata": ""}
{"_id": "bd7e8946a939a8b4eabb98d7900c1eec", "text": "Adds new coordinator .", "title": "", "metadata": ""}
{"_id": "ed76f90d72249bd6bf50911ffc3026a6", "text": "Convert bytes32 data structure into a string .", "title": "", "metadata": ""}
{"_id": "142643a9a5f4792facbda0cbd40f0746", "text": "Issues tokens for users who made purchases in other cryptocurrencies .", "title": "", "metadata": ""}
{"_id": "402f5f3775db51d898e8d7ec0b4de89d", "text": "Functions to be called Manually .", "title": "", "metadata": ""}
{"_id": "e371e85523c7d9344ad2e3594425eb16", "text": "_amount , _freezeAmount in BioX .", "title": "", "metadata": ""}
{"_id": "09398a90e76e67e509dfc802eba25f7a", "text": "what is the total supply of SAT .", "title": "", "metadata": ""}
{"_id": "a39438e2bd13a3124dd3a9777875f9cc", "text": "check accounts .", "title": "", "metadata": ""}
{"_id": "a61dfa23c1f48e0e656cff24e8f3b72e", "text": "Use storage keyword so that we write this to persistent storage .", "title": "", "metadata": ""}
{"_id": "1eaa064c68abd96dcc256700315cf1ca", "text": "This gives the total supply of actual minted coins .", "title": "", "metadata": ""}
{"_id": "235bfeddebaae941eca36375380cecf4", "text": "Proxy mining to token .", "title": "", "metadata": ""}
{"_id": "d74a4cebe9f9cfd45b65062f2bd7ef2c", "text": "returns the sum of a and b , asserts if the calculation overflows .", "title": "", "metadata": ""}
{"_id": "7627b81794deeacb135385a1cdcff526", "text": "set Broker for Investor .", "title": "", "metadata": ""}
{"_id": "e2bc03fd09f56057e3eb67415c31c089", "text": "The emergency escape hatch in case something has gone wrong .", "title": "", "metadata": ""}
{"_id": "676a353b02f1a2c333b92e9de2079433", "text": "is bounty address .", "title": "", "metadata": ""}
{"_id": "128a1a681a75f54f6954568e90c06f7b", "text": "Function to vote to allow for updating marital status , both partners must vote to allow update .", "title": "", "metadata": ""}
{"_id": "7eef64600becd197d6e65dba8286dab5", "text": "During the ICO phase the owner will allocate tokens once KYC completes and funds are deposited .", "title": "", "metadata": ""}
{"_id": "4c2666306601d28516276949a950bbef", "text": "Calculates the amount that has already vested but hasn't been released yet .", "title": "", "metadata": ""}
{"_id": "109f627dd7021331c5dc723d564fc9a1", "text": "get the balance for a given account .", "title": "", "metadata": ""}
{"_id": "be8b60f740061951155c25566c68a161", "text": "Checks if a given address is the current owner of a particular Fighter .", "title": "", "metadata": ""}
{"_id": "82a21cc7608faeae7dfecd4f019ae16c", "text": "Function to resume minting new tokens .", "title": "", "metadata": ""}
{"_id": "cb73613f78a6047085d4bca42087a654", "text": "Start multiple auctions for better anonymity .", "title": "", "metadata": ""}
{"_id": "b6e7d9ba4d5d9fab9be940709e8259eb", "text": "Function to determine if a ballot is currently in progress , based on its start and end dates , and that it has been sealed .", "title": "", "metadata": ""}
{"_id": "92b6baab8ebb115df35a2921c3904958", "text": "remove controller require input address is a controller execute any time in sc state .", "title": "", "metadata": ""}
{"_id": "1492a0850365c94e37293a54dbc0fcf0", "text": "return information about all investments in queue contract .", "title": "", "metadata": ""}
{"_id": "826f10c49dba959db40293feaeb33e8b", "text": "Bids on an open auction , completing the auction and transferring ownership of the NFT if enough Ether is supplied .", "title": "", "metadata": ""}
{"_id": "7fc53486573680b3ad4493527804cf8a", "text": "Send funds to player by index .", "title": "", "metadata": ""}
{"_id": "aac9998ee6fd01d9e96a2c949d971588", "text": "Public function that allows the owner to blacklist multiple entries .", "title": "", "metadata": ""}
{"_id": "d6e5f035eef620a77ebcbe7952f4207c", "text": "calculates the exponential distribution curve .", "title": "", "metadata": ""}
{"_id": "5bc394ad2fe208ef7dfe6fc6bfefbbc1", "text": "Allow the owner to retrieve accidentally sent Ethereum .", "title": "", "metadata": ""}
{"_id": "8e07caeb26da53a618426abb117da2ae", "text": "Pauses the contract .", "title": "", "metadata": ""}
{"_id": "a43ec43902e8ef23947668a52f7fafc0", "text": "Remove an owner .", "title": "", "metadata": ""}
{"_id": "c9137df58535c9fa3969fd095efb70ae", "text": "Allows the admin to update the global minimum number of tokens to purchase .", "title": "", "metadata": ""}
{"_id": "38b2d2c5dbe53047ce9633083382fa94", "text": "This function can be used by the owner of a video game to modify the price of its video game .", "title": "", "metadata": ""}
{"_id": "a17ed452ec9478664fe2dafa27ea6a19", "text": "Update ether costs for various types of visits .", "title": "", "metadata": ""}
{"_id": "d1cecc3e069d0e02d600c9b458f26c7f", "text": "Owner can change the number of tokens per ETH before the ICO start date .", "title": "", "metadata": ""}
{"_id": "735ac727bbed1e90b5846aab1489cf32", "text": "Upgrades the Etheraffle contract .", "title": "", "metadata": ""}
{"_id": "850b6fe96f3aee385cceac2fef90c16a", "text": "Starts PVE battle for specified warrior , after battle , warrior owner will receive reward ( Warrior ) .", "title": "", "metadata": ""}
{"_id": "d4f8887b232006ad787142b7fd8c0899", "text": "Withdraw when there is no budget plans .", "title": "", "metadata": ""}
{"_id": "4101168bead5982457cd0711acbd9f90", "text": "Only allowed to execute before the first stage is closed .", "title": "", "metadata": ""}
{"_id": "62b58db59479917984e1e2e491ba6871", "text": "selfdestruct ( returns balance to the owner ) .", "title": "", "metadata": ""}
{"_id": "f1fcfb3cc11a42c2c5b7adc0b4fc6efc", "text": "Allows execution by the contract manager only .", "title": "", "metadata": ""}
{"_id": "09f850b2db8b91d50c981d0b6d28a875", "text": "deploys a new CDPer instance sets custom owner of CDPer .", "title": "", "metadata": ""}
{"_id": "623156bddbad6b2a9b1c0f178c4b3717", "text": "Modifier to allow actions only when message sender is Bank .", "title": "", "metadata": ""}
{"_id": "852a8888e0c60d0b0a95980c08de2d8b", "text": "Allow another contract to spend some tokens on my behalf .", "title": "", "metadata": ""}
{"_id": "2bbcf736f732a6a1c5ad3e6e7dfadc68", "text": "Pause the game preventing any buys .", "title": "", "metadata": ""}
{"_id": "22202512da7c2436b6ca4fb761fe759c", "text": "Allows to transfer out the ether balance that was forced into this contract , e . g .", "title": "", "metadata": ""}
{"_id": "df9ce12abb63f8dc674e5aac52854356", "text": "Returns asset reissuability .", "title": "", "metadata": ""}
{"_id": "37b652f1a73ede1b9f3751e20008ad7d", "text": "send coins throws on any error rather then return a false flag to minimize user errors note that when transferring to the smart token's address , the coins are actually destroyed .", "title": "", "metadata": ""}
{"_id": "b2b2f90facc0dabd4c995ad82c38fd13", "text": "we can create LinglongCats with different generations .", "title": "", "metadata": ""}
{"_id": "5b70f8328daf3fbe963c3f048e71889f", "text": "Update the minimum time before allowing a wallet to update its data .", "title": "", "metadata": ""}
{"_id": "43f779fade826354508e43b8dd7c5f2f", "text": "Information about company alloction .", "title": "", "metadata": ""}
{"_id": "bf30f085c10305c90999906d577ec436", "text": "Called by the development team once the World Cup has ended ( adminPool is set ) .", "title": "", "metadata": ""}
{"_id": "2903d2db4d09fdba7a5f1892336b87a3", "text": "owner send tokens to admin .", "title": "", "metadata": ""}
{"_id": "59c4b0a72d22a39970a517c79deb121f", "text": "claim tokens buyed for mBTC .", "title": "", "metadata": ""}
{"_id": "73e98ae41787966a3ea3ef51f6134a03", "text": "gets existing or registers new pID .", "title": "", "metadata": ""}
{"_id": "bc4543b0f0b2cc08354d93e4de8a488a", "text": "Main transfer function .", "title": "", "metadata": ""}
{"_id": "a2a1c0ddf5d0f7f9d763f779964e2faa", "text": "if crowdsale is successful , investors can claim token here .", "title": "", "metadata": ""}
{"_id": "e5ed00e8181ac5a9264f23a35bc3dbad", "text": "Burn for Future Token Swap .", "title": "", "metadata": ""}
{"_id": "c0f01a4201581d8d98a165263f843bb2", "text": "Function to claim any token stuck on contract .", "title": "", "metadata": ""}
{"_id": "258ad291d34a082ee890dd5b38d96a69", "text": "Disapprove user's KYC .", "title": "", "metadata": ""}
{"_id": "596a0d5dd9e6023d303c2a11cd2462e3", "text": "this contract has to be approved first in _childContract .", "title": "", "metadata": ""}
{"_id": "8c70a3a03f485f11808ade6b939b6386", "text": "set house cost to call oraclize query .", "title": "", "metadata": ""}
{"_id": "c2a02af3b038367938263f3c57d75bac", "text": "Anyone can destroy tokens on their walllet .", "title": "", "metadata": ""}
{"_id": "6dd64f1c37e047ff8575927199d4e0c9", "text": "distribute profit among shareholders and players in top 10 .", "title": "", "metadata": ""}
{"_id": "792d808299178ea0fc6f9ce8dcf40975", "text": "Director can alter the storage-peg and broker fees .", "title": "", "metadata": ""}
{"_id": "9263f7981e6f6d93a70fe4c29e988f7e", "text": "to upgrade feeAccount ( eg .", "title": "", "metadata": ""}
{"_id": "26477785999775b6dbe1486270ec785f", "text": "transfer token and invoke contract requesting payment with notifcation .", "title": "", "metadata": ""}
{"_id": "34b43d58861938b1593df351d6e232f5", "text": "Picks a random ticket , using the internal PRNG and accumulated entropy .", "title": "", "metadata": ""}
{"_id": "029ba8a1f5422015831cefa5e7fd7f2e", "text": "Access modifier for Creator-only functionality .", "title": "", "metadata": ""}
{"_id": "080132b98d87f5c859e3add574d25c26", "text": "destroy tokens that belongs to you this decreases your balance and total supply .", "title": "", "metadata": ""}
{"_id": "c7aee3755635b7876d27d8f64463e419", "text": "Only owner function to deliver tokens for pre-ICO investors .", "title": "", "metadata": ""}
{"_id": "7967364245ab1fe43cb1ffad3de1d988", "text": "Safe maths .", "title": "", "metadata": ""}
{"_id": "62c9321148b225e1f5d7fff54f0d2fb9", "text": "config oracle db address and set minimum tx amt to limit abuse .", "title": "", "metadata": ""}
{"_id": "1d4ce025bef148f2afbb7b112e49355d", "text": "Change USD value .", "title": "", "metadata": ""}
{"_id": "12d6ab679cde55d76afc63060f9fa733", "text": "Allows investors to buy tokens for themselves or others by explicitly invoking the function using the ABI / JSON Interface of the contract .", "title": "", "metadata": ""}
{"_id": "6227f5a433e50d49504f28037d4fc332", "text": "mNormalizePledge allows for multiple pledges to be normalized efficiently .", "title": "", "metadata": ""}
{"_id": "d1566482f3b56083ebbb3df23faf34ee", "text": "Change multi-sig address , the address to receive ETH .", "title": "", "metadata": ""}
{"_id": "a75f44fa3454d4021e751256d1df4eab", "text": "Withdraws tokens to user .", "title": "", "metadata": ""}
{"_id": "041c46a925407f229bc14e74f6a0b035", "text": "Creates a new gen0 fighter with the given genes and creates an auction for it .", "title": "", "metadata": ""}
{"_id": "5ba862283df145caa0b5bc931712a031", "text": "tier_name : The name of the current tier .", "title": "", "metadata": ""}
{"_id": "ec779947d4e952a44def95ff310d6809", "text": "Allows dev to set TMEX Address .", "title": "", "metadata": ""}
{"_id": "f0dd83a56c7229c4ee2658748b852c39", "text": "Ballot submission note : if USE_ENC then curve25519 keys should be generated by client for each ballot ( then thrown away ) .", "title": "", "metadata": ""}
{"_id": "e75a62c3e7294a1eb4ff50d4f52cb6de", "text": "Mints additional tokens , new tokens go to owner .", "title": "", "metadata": ""}
{"_id": "e22b8118a2159526302d7c997042020e", "text": "An internal function to calculate the power of a hero , it calculates the base equipment power , stats power , and Super multiplier .", "title": "", "metadata": ""}
{"_id": "ba849a1f3f94bda71788cd021baab2ac", "text": "Post crowdsale distribution process .", "title": "", "metadata": ""}
{"_id": "65a928dbf46dd70752efb9c15b886087", "text": "! ! ! can be called by any user or contract check for re-entrancy vulnerability http : / / solidity . readthedocs . io / en / develop / security-considerations . html re-entrancy .", "title": "", "metadata": ""}
{"_id": "c089730073edac1a70738f5f92251d96", "text": "Returns a whole amount of DOL .", "title": "", "metadata": ""}
{"_id": "88a773cbd5ff464a88f64d3f53d15faf", "text": "Return balance of the owner .", "title": "", "metadata": ""}
{"_id": "8703bf150cd5e846d55f721d71fd3b06", "text": "Sends collected ether to owner .", "title": "", "metadata": ""}
{"_id": "13e10c68d5da9886162b3270d8106a2f", "text": "This function must be called by token holder in case of crowdsale failed .", "title": "", "metadata": ""}
{"_id": "e7dba235043617525ea144039ae1bbae", "text": "Sets the name for a node .", "title": "", "metadata": ""}
{"_id": "fffd9b0f47199f3b2c60cab1656ca590", "text": "Transfers tokens to recipients multiply .", "title": "", "metadata": ""}
{"_id": "6d05e1de29257f318a5c7baac83dee60", "text": "send award to winner .", "title": "", "metadata": ""}
{"_id": "e9803a28341ab2a81c4efe3b209176db", "text": "Returns raw number of early purchases .", "title": "", "metadata": ""}
{"_id": "9ce178b2a8d89db51eb98ee19cd404b9", "text": "Changes the beneficiary of the donationraiser .", "title": "", "metadata": ""}
{"_id": "7b4503a59b1b72b0df38b5df85a94379", "text": "Distribute the token rewards to transcoder and delegates .", "title": "", "metadata": ""}
{"_id": "7c8f3e29ee4ceb9e1a3259734fd5507e", "text": "Returns the location of a registered app's name under a provider .", "title": "", "metadata": ""}
{"_id": "5bdd45382e71b0c16a2ab54386863589", "text": "Common function to be used also in backend .", "title": "", "metadata": ""}
{"_id": "0b49e7ebde0cc6a71dc55f53780095d2", "text": "If a delegate has been designated , all ERC20 calls are forwarded to it .", "title": "", "metadata": ""}
{"_id": "d95b14a3d8827895baf2583ca28b966e", "text": "Modifier to make a function callable only when the presale is not finished .", "title": "", "metadata": ""}
{"_id": "14a4e84679e1bd9251221dfbbf204894", "text": "Return handle of token .", "title": "", "metadata": ""}
{"_id": "af74b4b9fffd91a01c5645a9c8256325", "text": "change exchange for this token .", "title": "", "metadata": ""}
{"_id": "3d3356845d9cae90f323bbed04b132c9", "text": "Read only .", "title": "", "metadata": ""}
{"_id": "2a51f13eebd9bfe64b1dc37ff7cccd3a", "text": "runs when crowdsale is active .", "title": "", "metadata": ""}
{"_id": "92bae73a25192b6144cefc4902dae639", "text": "Transfers the ownership of the contract .", "title": "", "metadata": ""}
{"_id": "007403066de875ff342feb721a439eec", "text": "Returns total amount of commission that has been already paid ( added to pending withdrawals ) .", "title": "", "metadata": ""}
{"_id": "592d7b54d0b0e0d63e03ef465293c9d0", "text": "Pre-ICO sale starts on 01 of Jul , ends on 05 Jul 2018 1st .", "title": "", "metadata": ""}
{"_id": "a8cfc562905e1eb1180e6d60203a2975", "text": "return the current price .", "title": "", "metadata": ""}
{"_id": "0aa304212724e3a59c176ad9e9c6202f", "text": "Adds / Updates address and token allocation for token grants .", "title": "", "metadata": ""}
{"_id": "aaad1dd2a89f7e20a90319bb135c6e0d", "text": "max total number of tokens .", "title": "", "metadata": ""}
{"_id": "fdd181319fdeb9d2dd13dbb733699345", "text": "For Allocating PreSold and Reserved Tokens .", "title": "", "metadata": ""}
{"_id": "959023cbb3def2b2f97d7a2a7a684082", "text": "the index of the current discount by date .", "title": "", "metadata": ""}
{"_id": "a307c5dada15ff80748f863b9e5f412c", "text": "Transfer the balance from token owner's account to to account - Owner's account must have sufficient balance to transfer - 0 value transfers are not allowed .", "title": "", "metadata": ""}
{"_id": "25a157f2d4a95b08147ebe70fe272e2f", "text": "Set the exchange oracle after crowdsale .", "title": "", "metadata": ""}
{"_id": "0c183c6a21b7c1589daca6c17ced4743", "text": "Set new bridge width .", "title": "", "metadata": ""}
{"_id": "dae987e9ad0cf8e41a95d3c8ce84a9ab", "text": "Executes a trade , swapping the mons between trainer A and trainer B .", "title": "", "metadata": ""}
{"_id": "a894cc81a98671b6e0b56dde132d8459", "text": "Computes the current price of an sale .", "title": "", "metadata": ""}
{"_id": "6fe117524cd4132337dd366f170d1c9e", "text": "Allow another account / contract to spend some tokens on your behalf .", "title": "", "metadata": ""}
{"_id": "86be87bfdd90dd9e566dc10ecad1a773", "text": "Create and sends tokens to _address considering amount funded and conversionRate .", "title": "", "metadata": ""}
{"_id": "bda3c67365daad9a3a64283aea993c5f", "text": "modifiers used in this contract to restrict function calls .", "title": "", "metadata": ""}
{"_id": "713a9c0c7e01cc943442ac2046c8e4e6", "text": "Returns the maximum size of the list .", "title": "", "metadata": ""}
{"_id": "a1c2b392f1782f568d4a9a3ed53ee22b", "text": "Decentralizes the contract , this operation cannot be undone .", "title": "", "metadata": ""}
{"_id": "4ce0de13cc7bc27d8136e23ff9672940", "text": "fee for transfer of given amount .", "title": "", "metadata": ""}
{"_id": "cab2c0ad66445ef6fed4b2209d87ea7e", "text": "Function internal to manage additional declaration .", "title": "", "metadata": ""}
{"_id": "06812e1220f22c967cfcf8f622bf6ed7", "text": "get details for a tenancy .", "title": "", "metadata": ""}
{"_id": "9e087e8a8aa8171ef15452d619bce8cb", "text": "Set duration .", "title": "", "metadata": ""}
{"_id": "ab736084f97982c385298580dbf7a23f", "text": "function create new Gift .", "title": "", "metadata": ""}
{"_id": "ed1988b5274a61519f99b21123f8166f", "text": "Restricted access to the current owner .", "title": "", "metadata": ""}
{"_id": "006f1cbdd89cd0bde3de386cf83793c6", "text": "internal transfer function which skips checks - use carefully .", "title": "", "metadata": ""}
{"_id": "3041e70dcae75c85f95179d9c6ccad4c", "text": "buys tokens in behalf of the investors by calling the ico contract starting with the investor at index from and ending with investor at index to .", "title": "", "metadata": ""}
{"_id": "5180bc445229e76d05cacde82c84a231", "text": "Allows a grant recipient to claim their vested tokens .", "title": "", "metadata": ""}
{"_id": "a21c8c3a85661ad1b5116d22706b21f6", "text": "in total 40 of GRO tokens will be sent to this contract .", "title": "", "metadata": ""}
{"_id": "64196e4c547496a9cb0361cd755937f1", "text": "copies and returns last's call data .", "title": "", "metadata": ""}
{"_id": "deae1b113d26addf01207ef78f3548e9", "text": "Transfer a player owned by another address , for which the calling address has previously been granted transfer approval by the owner .", "title": "", "metadata": ""}
{"_id": "faa018e66d501ca29eab97adfafa9b4f", "text": "Allow the owner to set the fee .", "title": "", "metadata": ""}
{"_id": "3915bcf66f9f996a55bfd47d6e5b48f9", "text": "Set roles .", "title": "", "metadata": ""}
{"_id": "605077b7f8fd7345b53cc003585cb1dc", "text": "Allows owner to get back unsent tokens in case of launch failure ( EndedAndGoalNotReached ) .", "title": "", "metadata": ""}
{"_id": "2ea2590a88c8ad498379467f978e502e", "text": "Update allows for setting a building privacy .", "title": "", "metadata": ""}
{"_id": "ec10662d1d3b2584e8f1686b9b9cb543", "text": "Create group .", "title": "", "metadata": ""}
{"_id": "b408cc1310c8ef7d2b13fe38e74db593", "text": "Breed a EtherDog you own ( as matron ) with a sire that you own , or for which you have previously been given Siring approval .", "title": "", "metadata": ""}
{"_id": "68b137cf801dfce3e78d76f6b0a37c37", "text": "if decimals 3 , and you want 1 ETH / token , then pass in _tokenPrice 0 . 001 * ( wei / ether ) .", "title": "", "metadata": ""}
{"_id": "dd3955fb2b562f09741b8aeddc26750b", "text": "Same as approveViaSignature , but for approveAndCall .", "title": "", "metadata": ""}
{"_id": "efb23760b76e5beb1d90d37d90931ddc", "text": "Returns token balance by user address .", "title": "", "metadata": ""}
{"_id": "d0ffa9af2b3f3ec0c53963a569a0c7c9", "text": "Send winning prize to the winner .", "title": "", "metadata": ""}
{"_id": "be212666d5248040a627a921b88edb8c", "text": "Return a pseudo random uint smaller than _upper bounds .", "title": "", "metadata": ""}
{"_id": "c6f95a7298fa7df54e06db03367d2465", "text": "The transfer function .", "title": "", "metadata": ""}
{"_id": "a1209917c53bc6e32d02ccb7ade2f2d3", "text": "Owner can't unpause the crowdsale before calling init ( ) .", "title": "", "metadata": ""}
{"_id": "c24a4ec7c31ac43743cb886f8f951580", "text": "ID belongs to the list .", "title": "", "metadata": ""}
{"_id": "9ba7131abde3be9a49a2d892e4927412", "text": "Owner can set any account into freeze state .", "title": "", "metadata": ""}
{"_id": "3867c92a12561bc559f950299bcbbb17", "text": "Manual migration if someone has problems moving .", "title": "", "metadata": ""}
{"_id": "88654b0b22b0ba3fe640003defa0799c", "text": "check for changes in balance in order to track amount of locked tokens and notify master .", "title": "", "metadata": ""}
{"_id": "f20df4893bf8ac7c3f327c9f2a1dfcbc", "text": "Initial token grants for various accounts .", "title": "", "metadata": ""}
{"_id": "1ca2f7d39b65de0d11130c0962e3a8d3", "text": "Confirm that airDrop is available .", "title": "", "metadata": ""}
{"_id": "7ec16655e2d7b7921714bfe1bf95748b", "text": "Called by token owner enable trading with tokens .", "title": "", "metadata": ""}
{"_id": "2f770afc5ec78b54e4b3d8663f5c32f6", "text": "Simple getter to retrieve talent agent .", "title": "", "metadata": ""}
{"_id": "f91fddf68d53e1b627bd9880d47bbb58", "text": "Owner of this contract may change the addresses of associated contracts .", "title": "", "metadata": ""}
{"_id": "7299de2bc7d196742be0ca3f44ea5f20", "text": "Stop burning new tokens .", "title": "", "metadata": ""}
{"_id": "18cf6a1518194a9c15d20dcfc5524338", "text": "Sets a new muliplier for freeing a horse .", "title": "", "metadata": ""}
{"_id": "bcec71957ddc19582bb955a97ba13ad7", "text": "RvT is upgradeable , make sure we can update Registrar to use upgraded RvT .", "title": "", "metadata": ""}
{"_id": "3e326cf0d70e54717da0522a47f5dfee", "text": "delay the timelocks for all accounts .", "title": "", "metadata": ""}
{"_id": "f5ccfe8900d419eae4398a14bc132f39", "text": "get the locked stages of an account .", "title": "", "metadata": ""}
{"_id": "8732cdc1914427913a39d2debb01db09", "text": "Mark transfer as approved .", "title": "", "metadata": ""}
{"_id": "527db6c770de6878e8286899b08328c1", "text": "Anything calling this must apply the optionalProxy or onlyProxy modifier .", "title": "", "metadata": ""}
{"_id": "eba7dfeded66f01ba94208db45905d50", "text": "allow another Ethereum account to spend Ace Tokens from your Account .", "title": "", "metadata": ""}
{"_id": "536fc9c4ca3127f33c29608d130a49ff", "text": "Safety check on _to address to prevent against an unexpected 0x0 default .", "title": "", "metadata": ""}
{"_id": "7f96b40306d947f7b2df6c358ff9247e", "text": "Allocate unsold tokens ( for bunch of funders ) .", "title": "", "metadata": ""}
{"_id": "d693129c07a14a447743a044b9023d7f", "text": "used to take create a reward from the funds of someone who has not idled in the last 10 minutes .", "title": "", "metadata": ""}
{"_id": "1bc76285c0399d1fde8a53a3b16fbe42", "text": "decrease total number of tokens in existence .", "title": "", "metadata": ""}
{"_id": "3877a2e63ecbdae463c53ae408ff4852", "text": "calculate token amount to be created .", "title": "", "metadata": ""}
{"_id": "1bf8cbd99112810a2a7233835f4625ef", "text": "enable recovery of LOCIcoin sent to this contract .", "title": "", "metadata": ""}
{"_id": "3647ee4a841181d07a1f9209a198693d", "text": "Get the bonus based on the buy time .", "title": "", "metadata": ""}
{"_id": "a1012e6a356cc35a0254812114bceb96", "text": "set new admin as admin of KYC contract .", "title": "", "metadata": ""}
{"_id": "fccd9dc7beaeb3f86391fd0fc0c56541", "text": "Freeze Account .", "title": "", "metadata": ""}
{"_id": "903a6f3865dd5acb06c643ba559d18e6", "text": "make a transfer .", "title": "", "metadata": ""}
{"_id": "d773db6046e51c7ac6ca1e707c75684e", "text": "Gets whether the contract is still in the intial grace period where we give extra features to color setters .", "title": "", "metadata": ""}
{"_id": "c6c075cb1c1b1fbc142f5f35b0d41412", "text": "Owner can send a heartbeat if they were mistakenly pronounced dead .", "title": "", "metadata": ""}
{"_id": "6ea8ac4f0f6ee404b072e66a94e38d75", "text": "modifier allowing calls from investors successfully passed KYC verification / / reverts if called by investor who didn't pass KYC via investor's portal .", "title": "", "metadata": ""}
{"_id": "729021d764fffc56b9f8f90b5239fc74", "text": "called by an authorized msg . sender .", "title": "", "metadata": ""}
{"_id": "2afacbd27a726a3285003405e0839dad", "text": "The owner can unlock the fund with this function .", "title": "", "metadata": ""}
{"_id": "7712c545538687177306bf795e612054", "text": "Allows a user to burn a token he owns to get carrots .", "title": "", "metadata": ""}
{"_id": "8c876dd3b4fd4adc29b5e38b16181943", "text": "Hook for custom actions to be executed after transfer has completed .", "title": "", "metadata": ""}
{"_id": "dc04c73fdaa5fcabb564ba1b5d03f6e1", "text": "Set both commissions at the same time .", "title": "", "metadata": ""}
{"_id": "6f33a2d39ebdd6e69923ce82a8853a91", "text": "compute tokens given a USD value .", "title": "", "metadata": ""}
{"_id": "6b60794592463dff71bd0413b6aa1da2", "text": "Set the staking address .", "title": "", "metadata": ""}
{"_id": "b3a68f4e82f004cd2429fac654d9e7d4", "text": "Getter methods for Call information .", "title": "", "metadata": ""}
{"_id": "5faecc4c12fdb2886ceaa3e9a191131a", "text": "callback used by oraclize .", "title": "", "metadata": ""}
{"_id": "44c98e3630145d996d1a56c26526a712", "text": "Grant another address the right to transfer a specific Artwork via transferFrom ( ) .", "title": "", "metadata": ""}
{"_id": "d7b5f814caa8827e20e8c7c8c6b85c78", "text": "Return true if sender is owner or super-owner of the contract .", "title": "", "metadata": ""}
{"_id": "e851af9af7827ae8435e1aa7453f5d78", "text": "0 - destruct 1 - close 2 - restart 3 - refund 4 - test 5 - update Exchange .", "title": "", "metadata": ""}
{"_id": "c39a5e8935d4535effae4415bba7a0b1", "text": "Allows you to check whether a certain transaction has been already settled or not .", "title": "", "metadata": ""}
{"_id": "ceffe546de8116f82572cecfbcc45cbf", "text": "Send token with lock .", "title": "", "metadata": ""}
{"_id": "5ed3e87302ce10ac1bafc69d9baafe6f", "text": "Because of discount hasEnded might be true , but validPurchase returns false .", "title": "", "metadata": ""}
{"_id": "01ea2ad8d5dcc0178b0073cc238fbcff", "text": "internalize w / o experimental .", "title": "", "metadata": ""}
{"_id": "01c3ae00efc333bfee440ae9d2126a72", "text": "Internal json ( https : / / api . etherscan . io / api ? module account action txlist address 0xddbd2b932c763ba5b1b7ae3b362eac3e8d40121a startblock 0 endblock 99999999 page 0 offset 0 sort desc apikey FJ39P2DIU8IX8U9N2735SUKQWG3HPPGPX8 ) . result ? ( . from ' address ' ) . timeStamp .", "title": "", "metadata": ""}
{"_id": "d9c20b2172117d3a835983fd24471216", "text": "Public function to check if the crowdsale has ended or not .", "title": "", "metadata": ""}
{"_id": "74632e2723481e9c869ee40576bfb38a", "text": "Allows a user to dislike another users block .", "title": "", "metadata": ""}
{"_id": "3e5c6cacdd7b2fe38683711ab3fcbe68", "text": "called by the owner on end of emergency , returns to normal state .", "title": "", "metadata": ""}
{"_id": "f75463065fde9deb61b0c86d685ddd9d", "text": "Create the ETHUSD query to Kraken thorough Oraclize .", "title": "", "metadata": ""}
{"_id": "25d05279f2e0e8765f62f973fe7edca4", "text": "Owner can remove by setting cap 0 .", "title": "", "metadata": ""}
{"_id": "2bc6b8faca993c47aa246c60e22c80d1", "text": "Modifier to make a function callable only if the reservation was not yet paid .", "title": "", "metadata": ""}
{"_id": "e59e9028ba0d70a45dd53554a3443722", "text": "only way a democ admin can deploy a ballot .", "title": "", "metadata": ""}
{"_id": "98b85ffae2492626276cd0714e3d5c27", "text": "Function to check the current Tokens affected to the team .", "title": "", "metadata": ""}
{"_id": "227f2dc231bfdb70df03a3bdf6217693", "text": "limits purchase to whitelisted participants only .", "title": "", "metadata": ""}
{"_id": "dbab38ab1ef5af1cbe9e3386db76f09d", "text": "Get the block number for a specific blob revision .", "title": "", "metadata": ""}
{"_id": "b36a1d9b89fcad14750eddce0d9a2009", "text": "verifies if the withdrawal request was signed by an authorized wallet value the number of tokens v , r , s the signature of an authorized wallet .", "title": "", "metadata": ""}
{"_id": "56ac4e605f4550fd9be7a3300d474722", "text": "function allows all tokens to be transferred to owner .", "title": "", "metadata": ""}
{"_id": "7bd7f7ff95170ae36704ff26b867daa0", "text": "mapping ( address uint ) public frozenAccount ; 0 NO FREEZE 1 Freeze onlyOwner 2 Freeze user .", "title": "", "metadata": ""}
{"_id": "dae3969ff2bb18dd5a89ef04c2df3c2f", "text": "Burn all tokens form balance of token holder during refund process .", "title": "", "metadata": ""}
{"_id": "3bf6cedf4c59ae65e99dae7bff8b0883", "text": "Sends n nomins to the pool from the sender , in exchange for n minus the fee worth of ether .", "title": "", "metadata": ""}
{"_id": "8da754f4adf19aa77a3f9d001aaafdb5", "text": "Enumerate NFTs assigned to an owner .", "title": "", "metadata": ""}
{"_id": "350fdf88c62134f3bc23938fa13dc9fe", "text": "In order to withdraw the interest income or reinvest it - paste your own address in '_to' field .", "title": "", "metadata": ""}
{"_id": "db14482ef582ef1be11be4acfbf57a81", "text": "Set the address of the secret hero training formula contract .", "title": "", "metadata": ""}
{"_id": "e26a4c5233fb55d5c162d3d10db3ed2d", "text": "Close group ( only owner ) .", "title": "", "metadata": ""}
{"_id": "8e86af8d3692b05942bd4909e0bc0681", "text": "Destroy tokens from owners account .", "title": "", "metadata": ""}
{"_id": "d373afe3a519a9b119bb5a55846e5154", "text": "Only crowdsale contracts are allowed to distribute tokens .", "title": "", "metadata": ""}
{"_id": "1903cdbbaf5d63821796cc94ffac580a", "text": "send GBT .", "title": "", "metadata": ""}
{"_id": "6ea17c83f58d665cbfa5e776b1fa2539", "text": "knc rate handling .", "title": "", "metadata": ""}
{"_id": "a31fe6bee2336f642a6cf7a7f41fada9", "text": "Update the Medal Leaderboard for the Highest Miles .", "title": "", "metadata": ""}
{"_id": "0db319ff03063044e18726bc409b9abb", "text": "Set a token contract address and available tokens and the available tokens .", "title": "", "metadata": ""}
{"_id": "a21d062b69161e7701a008833656ef2d", "text": "Returns the current token rate , minimum ether needed and maximum tokens left in currenttranche .", "title": "", "metadata": ""}
{"_id": "024031c25464deede570344a349d64b5", "text": "Deploy and start the crowdsale .", "title": "", "metadata": ""}
{"_id": "87e9c7d9150a9961d5c773fa52d4cbca", "text": "Sets new beneficiary .", "title": "", "metadata": ""}
{"_id": "bccff47844b8bb436813de2d5144e69b", "text": "Get the balance of the given holder .", "title": "", "metadata": ""}
{"_id": "c0b5eb0f7d05f486bac4fecc5cab4648", "text": "This modifier allows a method to only be called by account readers .", "title": "", "metadata": ""}
{"_id": "8e0bfab4ed73e84e2775fa1b896d9007", "text": "Number of tokens available to be minted at day d .", "title": "", "metadata": ""}
{"_id": "d20ec0cff1ef15986b42091772b68668", "text": "lets you permanently delete someone elses opinion .", "title": "", "metadata": ""}
{"_id": "6fcf36d09f98048c984927c9536a53fe", "text": "only admin .", "title": "", "metadata": ""}
{"_id": "d1846c2447931ef8fb7533051b6c2a47", "text": "at end of ICO phase , each player is entitled to X keys based on final average ICO phase key price , and the amount of eth they put in during ICO .", "title": "", "metadata": ""}
{"_id": "eddc611ce498ea84e84623024165c63b", "text": "Transfers vested available tokens to beneficiary .", "title": "", "metadata": ""}
{"_id": "a892d8794e0df40d591bdaa73826ddd4", "text": "Creates a new Scientist with the given name Id .", "title": "", "metadata": ""}
{"_id": "c12830b512464bba016fb2fd98354022", "text": "Read Access .", "title": "", "metadata": ""}
{"_id": "4c9a2c19907c356d2ec9d370d9ac0d3c", "text": "loop 'for' wrapper , where 100 , 000 , 10 3 decimal .", "title": "", "metadata": ""}
{"_id": "73f0d8bd5f32b1a4d522ce26f9ccc3a4", "text": "tranfer token to the target , in case of some error occured .", "title": "", "metadata": ""}
{"_id": "e2e2f6e6c6d1c79e4c2fe8784b251af3", "text": "Make it possible for team to withdraw team tokens over 3 years .", "title": "", "metadata": ""}
{"_id": "a071b894d6d8f037d99aa202458021b9", "text": "Function to allow the committee room to add a project when ordering .", "title": "", "metadata": ""}
{"_id": "e98a2ca26cd7dbff757d1e52369cfff9", "text": "Set the new max profit as percent of house - can be as high as 20 ( 1 , 000 , 000 100 ) .", "title": "", "metadata": ""}
{"_id": "c8d73c01f16d3c8564d9c18093ca11b0", "text": "For eventual later moving to another token contract .", "title": "", "metadata": ""}
{"_id": "9a0650edb0a2dc78fb67821ae94eaa42", "text": "Function approves the passed address to spend the specified amount of tokens on behalf of msg . sender .", "title": "", "metadata": ""}
{"_id": "ce0427ad67aa2431b5bffff63a4d0763", "text": "transfer token ownerhsip .", "title": "", "metadata": ""}
{"_id": "e01541951a55d4f1bb030fc3890a84ce", "text": "creates new PPC tokens .", "title": "", "metadata": ""}
{"_id": "1089c9aa84350ec4d599de5288f7fb0d", "text": "returns the total number of the tokens available for the sale , must not change when the crowdsale is started .", "title": "", "metadata": ""}
{"_id": "41e932043150cbd65970c7c35f9fc8eb", "text": "Deploy Aragon Network contract .", "title": "", "metadata": ""}
{"_id": "599f1b5451c4de9dd7619b114f8dd49d", "text": "kill the contract from the blockchain and send the balance to the owner .", "title": "", "metadata": ""}
{"_id": "042bb5d68ea46c7e82544a6814d41449", "text": "In the event of a game restart , subtract the tokens which were being played for from the balance , transfer them to the winner ( if the number of tokens is greater than zero : sly edge case ) .", "title": "", "metadata": ""}
{"_id": "1925922fe6bf6c4b5c86be0a369c10b5", "text": "Add holder address into holderIndex mapping and to the holders array .", "title": "", "metadata": ""}
{"_id": "17ce48097f5c04b090e7f52da0caa4d7", "text": "This will allow an admin to register a user .", "title": "", "metadata": ""}
{"_id": "da03f0ef3f09afe5e1762a723ef2e65e", "text": "End the game .", "title": "", "metadata": ""}
{"_id": "c79f99232ab2c35e97a3c08a5d0679ec", "text": "Check if preICO is ended .", "title": "", "metadata": ""}
{"_id": "8ca5e15acfda95a24d9492d9c7586c52", "text": "NOTE : Special remove logic for contract owner's sale ! .", "title": "", "metadata": ""}
{"_id": "05739dfc79508d41d0bf8e74c0e75ccd", "text": "Owner can change the cost , in wei .", "title": "", "metadata": ""}
{"_id": "c158c882b87568048fc4110f730695a8", "text": "Check token balance .", "title": "", "metadata": ""}
{"_id": "a4096e94656e473ba11b756e5b663a20", "text": "Function to update the claimable disbursements whenever tokens change hands .", "title": "", "metadata": ""}
{"_id": "4b7045a9264908b4a54056d83e17ad59", "text": "Emergency situation resolved .", "title": "", "metadata": ""}
{"_id": "6aa89105043fb07d7951c458e7cd191c", "text": "Send ERC20 tokens away .", "title": "", "metadata": ""}
{"_id": "0c0ff759508e156dc1eaa0ebc5492e7d", "text": "Locks current application entity .", "title": "", "metadata": ""}
{"_id": "f7b4455c3afa720f398e6cbc690fd571", "text": "getSynthesizationResult : auto synthesize daemin call this .", "title": "", "metadata": ""}
{"_id": "4f36a62af89c4f19dd27f5c0b152c5c1", "text": "Retrieve the id of the node that comes immediately after this one .", "title": "", "metadata": ""}
{"_id": "60d9451cf2feba1c3addd515c1d35b21", "text": "Generate other tokens after starting the program .", "title": "", "metadata": ""}
{"_id": "0c4f5447902bf96244f001cf068f633b", "text": "Returns the ether value ( in wei units ) for the amount of tokens in subunits for decimal support , at the current GRO exchange rate .", "title": "", "metadata": ""}
{"_id": "536c0071f025255d8d22d0c95537e949", "text": "Distribute input funds between contract owner and players .", "title": "", "metadata": ""}
{"_id": "79d646a31d16c5891ac75e1a0fb5a14a", "text": "upgrade cards .", "title": "", "metadata": ""}
{"_id": "e6fc489ba9c1ece4c3112f5b30da6f45", "text": "Function to allow the Dao to register a new resolution .", "title": "", "metadata": ""}
{"_id": "5b7f613aec054a0be7d968905f8bc555", "text": "Funds withdrawal to cover costs of dice2 . win .", "title": "", "metadata": ""}
{"_id": "5448cbdac9a557ee4d0e2fd3bdb864f7", "text": "Set sink of token recipe .", "title": "", "metadata": ""}
{"_id": "4d6906a60ea977a7e861fa7955bbabc2", "text": "from user or 'manager' account .", "title": "", "metadata": ""}
{"_id": "9cbfd376166bdc6959065214a110175a", "text": "removes avatar for address .", "title": "", "metadata": ""}
{"_id": "876a2974f33f3194b7a1f670ceaaea46", "text": "Allows the owner to reclaim tokens that are assigned to the token contract itself .", "title": "", "metadata": ""}
{"_id": "bf9aa49af06cf7fdc784b713a6a4dfdd", "text": "Set the upgrade agent ( once only ) thus enabling the upgrade .", "title": "", "metadata": ""}
{"_id": "4653e1f09ccc197dc0502da15d90ad06", "text": "Checks that a given LinglongCat is able to breed ( i . e .", "title": "", "metadata": ""}
{"_id": "f6c186c33cfd2942341f1bc381e0166f", "text": "Presale bonus tokens .", "title": "", "metadata": ""}
{"_id": "9aea733f8314033a7bde425f5d4a00a7", "text": "Throws if player did recruit first hero yet .", "title": "", "metadata": ""}
{"_id": "cf2008b8ba0c54197602fb2e0799344c", "text": "Set price of one token in wei and fix it .", "title": "", "metadata": ""}
{"_id": "8e00b6e25b78fe1eb1a074c40afc8620", "text": "Random enough for small contest .", "title": "", "metadata": ""}
{"_id": "a0f64c7fb712d0e51894c632b8b25190", "text": "Modifier , which only allows function execution if paused .", "title": "", "metadata": ""}
{"_id": "2f13185f2a5b3527b7e90ad80a336041", "text": "Operation modifiers for limiting access only to Managers .", "title": "", "metadata": ""}
{"_id": "6a644c2d973c61dbc637a0f6855cce87", "text": "scraps a part for shards .", "title": "", "metadata": ""}
{"_id": "66aa3ce7f284e6856fc0949015c671e1", "text": "Get current length of the leaderboard .", "title": "", "metadata": ""}
{"_id": "a2f464aa7cdc862632bbb5b02adb3ad2", "text": "the spender can only transfer the value units he own .", "title": "", "metadata": ""}
{"_id": "bcc88ba09f3ea5b1875ecc2ce619bfd6", "text": "Reverts if called by any account other than the foundation .", "title": "", "metadata": ""}
{"_id": "62c6376ef6dd6294acdb8b9625ec0bb3", "text": "Validation of an executed purchase .", "title": "", "metadata": ""}
{"_id": "489544e37e6c48d5e29b8c7f175bf82f", "text": "This method can be used by the controller to extract mistakenly sent tokens to this contract .", "title": "", "metadata": ""}
{"_id": "fbf2ccf4a308bb703edb8739bcfe48a6", "text": "ecrecover from a signature rather than the signature in parts v , r , s .", "title": "", "metadata": ""}
{"_id": "4bca8398a0209f13e304eb95e3790783", "text": "Request to cancel as a seller .", "title": "", "metadata": ""}
{"_id": "848827f1f95c21ba276efd6a53e9828c", "text": "It is not recommened to call this function outside of the giveth dapp ( giveth . io ) .", "title": "", "metadata": ""}
{"_id": "673dba74e64c1df950b86ac3f6ff3e2d", "text": "Allow the owner to change the tokens for sale number .", "title": "", "metadata": ""}
{"_id": "ded832a85a042ecd231e2a4e35d03a6a", "text": "closeBet could be called by everyone , but owner / dealer should to this .", "title": "", "metadata": ""}
{"_id": "95a0aff40fd8adb9dd254bcbbde63c10", "text": "Checks to see if a given Panda is pregnant and ( if so ) if the gestation period has passed .", "title": "", "metadata": ""}
{"_id": "a3714ea546d3eff8d07ea2df16de377a", "text": "Gets the balance of a specified account .", "title": "", "metadata": ""}
{"_id": "50a293a65b466d4660b724d668673f5e", "text": "Restart sale in case of an emergency stop .", "title": "", "metadata": ""}
{"_id": "3222be5964afe0f14e29e296d135a444", "text": "SafeMath add function .", "title": "", "metadata": ""}
{"_id": "5bb5963d8a9d02deee4da873470eac4a", "text": "UNAUTHORIZED if called not by one of symbol's partowners or owner .", "title": "", "metadata": ""}
{"_id": "c253670dd4d3b25f0b9d5faa8a3c35ec", "text": "Sets a new address for Beneficiary one .", "title": "", "metadata": ""}
{"_id": "c66d8c6a73351197be3fa7afaefa88f7", "text": "3 _sell .", "title": "", "metadata": ""}
{"_id": "561469d9ad25371e1928ff3b433441b7", "text": "the block reward .", "title": "", "metadata": ""}
{"_id": "0c501f0350e4b2d5d554833b5ad7eb95", "text": "This method can optional be called by the owner to adjust the conversionRate , startDate and endDate before pre contribution phase starts .", "title": "", "metadata": ""}
{"_id": "3116eab24a98cb7fb8d8c949f784b557", "text": "Function to set addresses that will be able to burn tokens .", "title": "", "metadata": ""}
{"_id": "1d0dcacf085049d59bf12def58b4973a", "text": "the total number of allocations .", "title": "", "metadata": ""}
{"_id": "c17c704095558305301135fdd241c82d", "text": "To extend duration of Crowdsale .", "title": "", "metadata": ""}
{"_id": "c9ec726ecf5c34753378644ba601336a", "text": "Create new token , supply is hard , be serious on internal .", "title": "", "metadata": ""}
{"_id": "6c770b2f9fb07cbb008d5b24c3cb9dba", "text": "all team property content .", "title": "", "metadata": ""}
{"_id": "3af9c2afe4b023c584bef75f3a1ee95c", "text": "Get currencyContract of a request .", "title": "", "metadata": ""}
{"_id": "bdf0bba204732d621f7f0fbb159d7099", "text": "Finalizes the ability to use the controller and destructs it .", "title": "", "metadata": ""}
{"_id": "9ff63e0177459421ac74aa45acb2fd19", "text": "Deletes the contract , if no deposits are held .", "title": "", "metadata": ""}
{"_id": "8cf83b42d4155d6ae0e641b549abe4f1", "text": "For creating Item23 .", "title": "", "metadata": ""}
{"_id": "f2728f36e82a020f57ebd6a504e1d333", "text": "Function to update the hydroValuesMap .", "title": "", "metadata": ""}
{"_id": "452ff190aa90ed786fd280850f2d4622", "text": "check whether registered in lockAddress or not .", "title": "", "metadata": ""}
{"_id": "48425cc949b8b585d00bfe46217b8fdd", "text": "Utility functions : - - - - - - - - - - - - - - - - - - - - - - ( ? ) CryptonomicaVerification . stringToBytes32 ( string .", "title": "", "metadata": ""}
{"_id": "b4f2d98b4b69c52cef515d7ae38028fd", "text": "To withdraw fund from this contract .", "title": "", "metadata": ""}
{"_id": "53bc5f959decb420ee3fa1e77f44ac29", "text": "Checks whether a Puppy is currently pregnant .", "title": "", "metadata": ""}
{"_id": "85bff218e750f1ea442ec94bf67f65ad", "text": "give one more chance .", "title": "", "metadata": ""}
{"_id": "51aa9a9572c93f4df3d836929b12d56c", "text": "execute after all crowdsale tokens are minted .", "title": "", "metadata": ""}
{"_id": "d3740fcdf0140df39fe59ef28fc48e3b", "text": "this overridable function returns the current conversion rate for the fundraiser .", "title": "", "metadata": ""}
{"_id": "cfe683f979277cc6d16138fbf668324c", "text": "When a user buys our token they will recieve a bonus depedning on time : , .", "title": "", "metadata": ""}
{"_id": "85e1fd763f6ecfdc6e9a95dd262846c3", "text": "Validation of the capped restrictions .", "title": "", "metadata": ""}
{"_id": "434b69271e0429484efe2e26500314b2", "text": "Sets the wallet to forward ETH collected funds .", "title": "", "metadata": ""}
{"_id": "402d2b6d8c7d60f98d58ecda4c78509d", "text": "usd * 10 6 .", "title": "", "metadata": ""}
{"_id": "86eede3e07012d9416633223b5acedc3", "text": "ERC20 Interface .", "title": "", "metadata": ""}
{"_id": "0f02e6668a26403520d606fc0055e9da", "text": "Allows the owner to add addresse that can bypass the transfer lock .", "title": "", "metadata": ""}
{"_id": "b6c1b7f19441343ca67ae9d568b26944", "text": "decimal number .", "title": "", "metadata": ""}
{"_id": "880fb53ef7a6af8171cc9fe7cbc4e86c", "text": "Set Description .", "title": "", "metadata": ""}
{"_id": "bb00b1a2e1cf41b85183bd137fa08c7b", "text": "Assigns ownership of a specific Color to an address .", "title": "", "metadata": ""}
{"_id": "5e45afb6f6058f9ccb195c13e535e419", "text": "inserted for paranoia but may need to change gas prices in future .", "title": "", "metadata": ""}
{"_id": "261a4292d0e4f0031df01b4f91ccc8ed", "text": "Grants another address the right to transfer a token via takeOwnership ( ) and transferFrom ( ) .", "title": "", "metadata": ""}
{"_id": "22e19ecf72b3358b21514d47d8575e61", "text": "Function to case vote in this carbon voting .", "title": "", "metadata": ""}
{"_id": "989257f80779ca5cfc1a2f5f8ca7ad11", "text": "Updates the price per pixel of a plot which the message sender owns .", "title": "", "metadata": ""}
{"_id": "ab90878fa9f4302eb8bd9f42bef8d090", "text": "Checks data returned by an application and returns whether or not the execution changed state .", "title": "", "metadata": ""}
{"_id": "21351753ec5adea2ccd41a17a60cd46c", "text": "Withdraws all ETH deposited or ZBR purchased by the sender .", "title": "", "metadata": ""}
{"_id": "f1e952fa187ac387db74216203717238", "text": "Create new token in addition to the initalsupply and send to target adress .", "title": "", "metadata": ""}
{"_id": "6e35f4f4518f8af05b968da07490a897", "text": "method to claim the reward .", "title": "", "metadata": ""}
{"_id": "d46ed377820a329c83906b071aaf1c33", "text": "Allows to perform method by any of the owners .", "title": "", "metadata": ""}
{"_id": "9ee7f522993ee3d93be5d23e5683b4c4", "text": "Initializes a kernel instance along with its ACL and sets _permissionsCreator as the entity that can create other permissions .", "title": "", "metadata": ""}
{"_id": "56f29ec1a6f85eab47339524675b8ba3", "text": "Sets a contract authorization to burn tokens .", "title": "", "metadata": ""}
{"_id": "7771c23ef6ccf7fbcbc57c99bdcd0d53", "text": "check ACE Equity Tokens balance of an Ethereum account .", "title": "", "metadata": ""}
{"_id": "e9edd2e56787d756bec8d151d652364c", "text": "6 writes .", "title": "", "metadata": ""}
{"_id": "12eb95d91e223f8d8e37bea907f96d91", "text": "Grant another address the right to transfer a perticular Cutie via transferFrom ( ) .", "title": "", "metadata": ""}
{"_id": "7623cd98417c875b6bdd5c7c703f4281", "text": "An optimised function to compute the sha3 of the lower-case hexadecimal representation of an Ethereum address .", "title": "", "metadata": ""}
{"_id": "2de606861f0265b1e1c73187a32b56a5", "text": "true if crowdsale event has ended or cap is reached .", "title": "", "metadata": ""}
{"_id": "4b6113337eaff58461fd855fb387819e", "text": "Configures a domain , optionally transferring it to a new owner .", "title": "", "metadata": ""}
{"_id": "86740dc38fe9b9477cc6037bf2696a57", "text": "Pay bonus affiliate to address .", "title": "", "metadata": ""}
{"_id": "7c1a0114e68c89a6730f4dbc992eb077", "text": "Approve token transfer ( we do not make it payable ) .", "title": "", "metadata": ""}
{"_id": "72f2f813df594e0c31b79592d11e8236", "text": "computes decimal decimalFraction 'frac' of 'amount' with maximum precision ( multiplication first ) both amount and decimalFraction must have 18 decimals precision , frac 10 * * 18 represents a whole ( 100 of ) amount mind loss of precision as decimal fractions do not have finite binary expansion do not use instead of division .", "title": "", "metadata": ""}
{"_id": "c6819b76f1863d1275f840370573b8db", "text": "Let the admin cash-out the entire contract balance 10 days after game has finished .", "title": "", "metadata": ""}
{"_id": "533b472af458ece29dcd3388598ac628", "text": "Sets new treasury address .", "title": "", "metadata": ""}
{"_id": "202372351e4183fef6fa85e69f4713da", "text": "Calculates stop price .", "title": "", "metadata": ""}
{"_id": "a79b921676707d9c109866a527292363", "text": "ability to remove from whitelist even after the sale started .", "title": "", "metadata": ""}
{"_id": "1c601dfc307a936187493056df67ae96", "text": "list supporting documents of an asset .", "title": "", "metadata": ""}
{"_id": "ccf01eb3587b64a11c8c3e272e9f88fa", "text": "owner is able to change rate in case of big price fluctuations of ether ( on the market ) .", "title": "", "metadata": ""}
{"_id": "0fb23567d2702fbde6aa5934294169e5", "text": "This is the function that actually insert a record .", "title": "", "metadata": ""}
{"_id": "07fc33da73695dd2b1bb1767f68d1a67", "text": "it will return refferal address .", "title": "", "metadata": ""}
{"_id": "ef9680f85e57f2325b5b6dc39d885ebb", "text": "Transfers the partner to a new address .", "title": "", "metadata": ""}
{"_id": "f15a61b660774178200a9ef82ded8a56", "text": "starts ICO .", "title": "", "metadata": ""}
{"_id": "0722e3063ff25e037533f91a285900d3", "text": "Whether the token is locked .", "title": "", "metadata": ""}
{"_id": "adb562944a00c9d894596545b05a995e", "text": "update address where funds are collected .", "title": "", "metadata": ""}
{"_id": "8d9492abbb6e56eb55ec1fc5dd692a29", "text": "Crowdsale staff only .", "title": "", "metadata": ""}
{"_id": "031c9fd83a55753fd7258530e4ec9a0c", "text": "Checks input and creates storage buffer to set crowdsale start time and duration .", "title": "", "metadata": ""}
{"_id": "72fee8610a7ddf8bfa22f7ae1e8f3789", "text": "Function to define prices for some particular week .", "title": "", "metadata": ""}
{"_id": "ad83f8d651431c68ba33c00fc2cc018f", "text": "Verifies if the order have _amount shares to buy / sell _amount 0 .", "title": "", "metadata": ""}
{"_id": "b53619c9823c7d6f64e5e8adeb504f35", "text": "send money to beneficiary .", "title": "", "metadata": ""}
{"_id": "fede9401c9bce80a7d5cf7d93a776276", "text": "Checks to see if two ponys can breed together , including checks for ownership and siring approvals .", "title": "", "metadata": ""}
{"_id": "6b4f1ec5bbc63c6ff131e5589589b49f", "text": "When this is active no one is able to participate .", "title": "", "metadata": ""}
{"_id": "8174e2d1f432d67e2e638ba4449cfc63", "text": "Submit a steak picture .", "title": "", "metadata": ""}
{"_id": "4d23f90417a82aabe3dd72c15e124ea1", "text": "consensus obtained it is true if and only if n + 1 validators voted affirmatively for a proposal where n the total qty .", "title": "", "metadata": ""}
{"_id": "c04bc73fc235a81d47e464d49ed2d082", "text": "Remove the Pause of exchange .", "title": "", "metadata": ""}
{"_id": "91631aa48acae504023c5845da4b8cb7", "text": "doPayment ( ) is an internal function that sends the ether that this contract receives to the vault and creates campaignTokens in the address of the _owner assuming the Campaign is still accepting funds .", "title": "", "metadata": ""}
{"_id": "37a21664847b0a9ae03678cc91c6aac8", "text": "end Products .", "title": "", "metadata": ""}
{"_id": "5ab7857157db8f84c2d65300f4c5c076", "text": "Withdraw DRPU tokens from the proxy and reduce the owners weight accordingly .", "title": "", "metadata": ""}
{"_id": "12f38215307e23b6f1064e3c0c825311", "text": "Combine walletBalances ( ) and deltaBalances ( ) to get both exchange and wallet balances for multiple tokens .", "title": "", "metadata": ""}
{"_id": "184d6dcad954a8dd3f0462975f9e0757", "text": "constructor is given number of sigs required to do protected onlymanyowners transactions as well as the selection of addresses capable of confirming them .", "title": "", "metadata": ""}
{"_id": "e38fd17db58d9f306711a207886047ad", "text": "converts the token to any other token in the bancor network by following a predefined conversion path note that when converting from an ERC20 token ( as opposed to a smart token ) , allowance must be set beforehand .", "title": "", "metadata": ""}
{"_id": "09cee0227988c8120f3d79f2e2721781", "text": "internal and private functions .", "title": "", "metadata": ""}
{"_id": "8d735d57b7e1f05f7ff467d6969421c7", "text": "updates reputation for a device .", "title": "", "metadata": ""}
{"_id": "6122b595fba45ed74430986ac4e95b3c", "text": "Enables the token transfer .", "title": "", "metadata": ""}
{"_id": "b3a464bd036887a483a70d2ee4a3208c", "text": "Buy wanchain token normally .", "title": "", "metadata": ""}
{"_id": "27826ab4fbf0164fbe6982706528c748", "text": "withdraw any eth inside .", "title": "", "metadata": ""}
{"_id": "8808aaee7682e58741b1e130c82ce32b", "text": "Function to stop the contribution .", "title": "", "metadata": ""}
{"_id": "f99d720a26465ea5b61d5c9c4b29ce1e", "text": "Trigger shutdown of Melon version .", "title": "", "metadata": ""}
{"_id": "76a68fd31b5d7e881280ec9efc7e1473", "text": "function to get the users who are awaiting the transfer of tokens can only be called by the owner this function would work in write mode .", "title": "", "metadata": ""}
{"_id": "b2941a0027725169123aab3836c59bff", "text": "function to set the discount member as active or not for one of the 4 events .", "title": "", "metadata": ""}
{"_id": "801b57d48598af858097e36267621e64", "text": "use storage keyword so that we write this to persistent storage .", "title": "", "metadata": ""}
{"_id": "cb803596049c573783911d69c597e267", "text": "This function is used to change user's own ID ( Business ID , birthday , etc . ) .", "title": "", "metadata": ""}
{"_id": "e288ab1fab3e5dfbb7a13255517ae6e0", "text": "Goes to the next stage if posible ( if the next stage is valid ) .", "title": "", "metadata": ""}
{"_id": "50e183b7af4a1ce4d48a651f39997200", "text": "We implement tokenFallback in case someone decides to send us tokens or we want to increase ICO Volume .", "title": "", "metadata": ""}
{"_id": "64d307ab121219aa19b46bb8dcd2f17c", "text": "Function to mint tokens referenced from https : / / github . com / OpenZeppelin / zeppelin-solidity / blob / master / contracts / token / ERC20 / CappedToken . sol .", "title": "", "metadata": ""}
{"_id": "3cfedd7cb2092457e28c317a43b27a16", "text": "Helper functions to debug contract .", "title": "", "metadata": ""}
{"_id": "73274c8861abdae2a0f1354e9d5063bc", "text": "notation for ERC827 .", "title": "", "metadata": ""}
{"_id": "675b1640101e43dded14aae4659c43e1", "text": "owner transfer ether .", "title": "", "metadata": ""}
{"_id": "6bc37a0421a1a5e7ecf2a07136d49917", "text": "Allows a user to specify a key mapped to a label , useful for PKI , not a good place to share a symmetric key .", "title": "", "metadata": ""}
{"_id": "a6316df69cf15e3b4434dcbe4a6dfe8a", "text": "Public function that allows the owner to add multiple entries to whitelist .", "title": "", "metadata": ""}
{"_id": "c64e79970b1b9ff9eaf92bd9dc00fccd", "text": "release locked tokens .", "title": "", "metadata": ""}
{"_id": "d073ada8e0eee02b970f600e8ed20727", "text": "Update the interest of the contract .", "title": "", "metadata": ""}
{"_id": "e720a32c98c9b43dc78179c9c47ed142", "text": "Get a license's info .", "title": "", "metadata": ""}
{"_id": "2100b408ff91457a17b2b4dcd8b8928f", "text": "number of tokens which should be created .", "title": "", "metadata": ""}
{"_id": "d4f2713c667f08315e06d9bb6f972e71", "text": "modifier to determine if the token is tradeable .", "title": "", "metadata": ""}
{"_id": "af687848b348076d41cb5f7090a21e22", "text": "Creates an ETH transaction request which will be stored in the contract's state .", "title": "", "metadata": ""}
{"_id": "d5f0a511a22e989738a84e4b7ed9df87", "text": "Deposits Ether to the contract .", "title": "", "metadata": ""}
{"_id": "8c0c12c5b6905acdefca5c22d13f8aa0", "text": "Freeze tokens on sender wallet if have permission .", "title": "", "metadata": ""}
{"_id": "d03c68a4631ef031d59a6e4f5137130c", "text": "Returns reward for painting pixels in wei .", "title": "", "metadata": ""}
{"_id": "f33cd494880fa8a1d9bfab41427b6ce9", "text": "Transfers awarded MILs to the caller's account .", "title": "", "metadata": ""}
{"_id": "75d7dac0b3e262ec79c6acfd4dc32047", "text": "Let the caller withdraw all ether allocated to it during the sale period .", "title": "", "metadata": ""}
{"_id": "ff611f63658480ca9e06a1a834b1ed41", "text": "false if the ico is not started , true if the ico is started and running , true if the ico is completed .", "title": "", "metadata": ""}
{"_id": "8f9cdbb0d34d55e876a2a1ab341881f9", "text": "returns the number of reserve tokens defined .", "title": "", "metadata": ""}
{"_id": "f5a0c4f16f503c15b3bd0001eb5dd6a3", "text": "Used to check if tx is moving tokens and parses amount .", "title": "", "metadata": ""}
{"_id": "931e62e7640a0f84cb35831f63f74264", "text": "send ERC20 Token to multi address with decimals .", "title": "", "metadata": ""}
{"_id": "c845c99e599001fac569129d1d4c62da", "text": "Creates a match with given team names , minimum bet amount and a match number .", "title": "", "metadata": ""}
{"_id": "befe1162735abc1832dc63874257b6d8", "text": "Function to declare subtracts .", "title": "", "metadata": ""}
{"_id": "495040347d47998a33e2662952bafdb8", "text": "transfer tokens for a specified address .", "title": "", "metadata": ""}
{"_id": "2f5f89cd74cb387a31d6d7037c924629", "text": "Frontend queries to find the next nonce of the user so they can find the new nonce to send .", "title": "", "metadata": ""}
{"_id": "e7abe27c401cf6dfd8ea0ef135bfa471", "text": "Allow the owner to set max .", "title": "", "metadata": ""}
{"_id": "7e1a549d5ed332c87999b196a91c32d7", "text": "Throws if _address is not in whitelist .", "title": "", "metadata": ""}
{"_id": "3d26409da1b17b2676dbc8de51ebcab4", "text": "the actual committee room of the Dao .", "title": "", "metadata": ""}
{"_id": "22905e07c0089756fc6015acde5d05ec", "text": "function to check the amount of tokens that an owner allowed to a spender .", "title": "", "metadata": ""}
{"_id": "ee7019794899c3ed197619570b7dfc61", "text": "Bet 1 token in the game .", "title": "", "metadata": ""}
{"_id": "0b502726d04791efbcb235224c35e06f", "text": "function kill Dividend contract and withdraw all funds to wallet .", "title": "", "metadata": ""}
{"_id": "c0169c3fdc963549c26519b4d738d56f", "text": "Checks input and then creates storage buffer to create sale tiers .", "title": "", "metadata": ""}
{"_id": "e331d4eba0611bbae431428f0c289b8d", "text": "get maximum amount to be sent .", "title": "", "metadata": ""}
{"_id": "b525e12887334bb48564efdadd45838c", "text": "The address of the contract .", "title": "", "metadata": ""}
{"_id": "f227cb06ed39f225067057562d71881a", "text": "Require Burn to be turned on .", "title": "", "metadata": ""}
{"_id": "0b8354c1b1cd0e83bb815eac65d84899", "text": "Infers if whether _address is a contract based on the presence of bytecode .", "title": "", "metadata": ""}
{"_id": "9bd96aa426154dcd7e11d4dceb344059", "text": "changes Pricing Strategy contract address , which calculates token amounts to give .", "title": "", "metadata": ""}
{"_id": "b1bea1436db6ef0a0b9760fa919c5d3b", "text": "get exchange-specific information .", "title": "", "metadata": ""}
{"_id": "413a736939831b7e2e58b6ecb5cfdab5", "text": "Finish Crowdsale in some reason like Goals Reached or etc .", "title": "", "metadata": ""}
{"_id": "7cc3517a05d8d739301e5f8f13d42ad7", "text": "Transfer an _amount to multiple addresses , used for airdrop .", "title": "", "metadata": ""}
{"_id": "26bedbc52543b1601229e015a1145727", "text": "requires the voter to not have voted already .", "title": "", "metadata": ""}
{"_id": "c244c2d8e72ad31d1e3acbf7fa6c7160", "text": "Creates an ERC20 transaction request which will be stored in the contract's state .", "title": "", "metadata": ""}
{"_id": "7d7d8676691b929216af151b3d50fe50", "text": "Transfer the balance from token owner's account to 'to' account - Owner's account must have sufficient balance to transfer - 0 value transfers are allowed .", "title": "", "metadata": ""}
{"_id": "46c1c5eb234a819a8cfb087b7787a14f", "text": "Throws if called by any account other than the DSTWalletLMNO owner .", "title": "", "metadata": ""}
{"_id": "6349c18dcbbf78bfa86728d86679c3b8", "text": "approve should be called when allowances _spender 0 .", "title": "", "metadata": ""}
{"_id": "5d43675ba66ad04e59e13639a912da57", "text": "Creates a new promo Person with the given name , with given _price and assignes it to an address .", "title": "", "metadata": ""}
{"_id": "d9b401fb9cbb9093ac4c3672826a456c", "text": "Do not transfer tokens until the crowdsale is over .", "title": "", "metadata": ""}
{"_id": "db80f23500055f268fc4d1b73894daa9", "text": "Fills a sell order with a buy order .", "title": "", "metadata": ""}
{"_id": "7018d82dfcdcdb8e5e611c88999ab4c5", "text": "administrators can : - change the name of the contract - change the name of the token - change the PoS difficulty they CANNOT : - take funds - disable withdrawals - kill the contract - change the price of tokens .", "title": "", "metadata": ""}
{"_id": "709f929421c711cd5af8a7e59fb96bbc", "text": "This function permits setting the Whitelist address .", "title": "", "metadata": ""}
{"_id": "33c5a120f8abab51fba75d90e47d452b", "text": "transfer token for a specified address _to The address to transfer to .", "title": "", "metadata": ""}
{"_id": "ef79e35c13d1226007cc8231f26be88a", "text": "Transfer _value OBG tokens from sender's account msg . sender .", "title": "", "metadata": ""}
{"_id": "a30bf1f0299a05228bcf694858885d5d", "text": "HoQu Token factory .", "title": "", "metadata": ""}
{"_id": "3cd5decc0b72417a55af281cfae4f2c8", "text": "Returns token balance of the sender .", "title": "", "metadata": ""}
{"_id": "d278217682abc2eec1bf98dd345e16af", "text": "what SVIndex uses to add a ballot .", "title": "", "metadata": ""}
{"_id": "d9ba47c9145708b62d927a8a30043a2c", "text": "called by the owner to close the crowdsale .", "title": "", "metadata": ""}
{"_id": "8d71ed132a4c1af3ab86bb1cb8ec2a08", "text": "Buy quantity of tokens depending on the amount of sent ethers .", "title": "", "metadata": ""}
{"_id": "b95e100bfd6c76b30c8ea026d9fad93a", "text": "Get the balance of a specific address .", "title": "", "metadata": ""}
{"_id": "b139610f6d173c50ef62b58c296fc139", "text": "Calculate the Bitcoin-style address associated with an ECDSA public key .", "title": "", "metadata": ""}
{"_id": "4fc24ea1a0ffc07dabcd2ed0396afae6", "text": "A public getter that returns whether the target was reached .", "title": "", "metadata": ""}
{"_id": "25bd51c3ea46f41ea0d899240e790d48", "text": "Set approved contracts that can purchase / sell tokens ( this is if we ever need a whale contract in the future ) .", "title": "", "metadata": ""}
{"_id": "1ecafe25c18ff1e23fbd006cac3f79ed", "text": "Helper function to withdraw stakes for the msg . sender .", "title": "", "metadata": ""}
{"_id": "959626d391645780a1fffa5b27bb4ebc", "text": "Checks if a purchase is considered valid .", "title": "", "metadata": ""}
{"_id": "c454676efb1f7b1d55e2c770e74b062d", "text": "Get the total number of addresses which received airDrop .", "title": "", "metadata": ""}
{"_id": "f897f2c0f698422a996231c5ca54ceb3", "text": "Default balanceOf function .", "title": "", "metadata": ""}
{"_id": "c4af48814abf85719f93f0fada03a365", "text": "Allows anyone to transfer the PagosToken tokens once trading has started .", "title": "", "metadata": ""}
{"_id": "72dc0bb8bbcfe0bdbadce2d8c5e5ce34", "text": "Do selfdestruct .", "title": "", "metadata": ""}
{"_id": "d2bdc0ed6ec61b181fd58a73ff57c3c6", "text": "The fallback function runs whenever someone sends ether .", "title": "", "metadata": ""}
{"_id": "8f519f7f2feddfc85e134494240792a7", "text": "mint to private investor ( sale , ICO ) .", "title": "", "metadata": ""}
{"_id": "60c22729dab8af42a4e78e0061d2876a", "text": "Check if user has access to a determined transaction .", "title": "", "metadata": ""}
{"_id": "3d844b2aa4dee992fb3876a314d6908f", "text": "Transfer sender's token to a given address .", "title": "", "metadata": ""}
{"_id": "72f2a4422339cf3580caef19d7bb0c67", "text": "Add wallet to whitelist .", "title": "", "metadata": ""}
{"_id": "2ec19078153e8cfa96cfc817b2ee79e8", "text": "Declare Crowdsale failure ( no more ETH are accepted from participants ) .", "title": "", "metadata": ""}
{"_id": "b04c376cba325429a0ebb9b036b87655", "text": "gives square root of given x .", "title": "", "metadata": ""}
{"_id": "d18b4a9d62447e47cb5f05bb4eff4510", "text": "called by Owner to increase end date of ICO .", "title": "", "metadata": ""}
{"_id": "e7e6f4cb5df6e3616231ba65356d11a8", "text": "Setup the crowdsale .", "title": "", "metadata": ""}
{"_id": "cd2d1a73a3beeaf036e950ccf8f344ac", "text": "Special transaction methods .", "title": "", "metadata": ""}
{"_id": "9ceed4a15c3e2aff21715a8274d04e21", "text": "After the manual minting process ends , this shall be invoked passing the ICO crowd sale contract address so that nobody else will be ever able to mint more tokens .", "title": "", "metadata": ""}
{"_id": "43bb8350f1604b29ab49d43846672cd2", "text": "Remove an admin .", "title": "", "metadata": ""}
{"_id": "df4649582170f85e73effd2576b0fcfc", "text": "Whether the approve was successful or not .", "title": "", "metadata": ""}
{"_id": "ab25a0f35c7fb7397d58638a60767a3a", "text": "Retrieve the dividend balance of any single address .", "title": "", "metadata": ""}
{"_id": "71d8bcf2ffda22ea5115b07bebdd22c1", "text": "Charge an address fees in protocol tokens .", "title": "", "metadata": ""}
{"_id": "4999dcab4a5edc1ff42a5d37bf80c553", "text": "Gets the address of EtherDelta contract .", "title": "", "metadata": ""}
{"_id": "19426a1ecc556c75329f7e9b8d0303d5", "text": "find and set referral Id .", "title": "", "metadata": ""}
{"_id": "f6076573743e7e420e02778a73ffacc0", "text": "owner draw _money .", "title": "", "metadata": ""}
{"_id": "738bb185fc7e125e9588ee5fe45d1f55", "text": "Funds must be transfered by calling contract before calling this contract .", "title": "", "metadata": ""}
{"_id": "df8d415ec54a3762377c0304fac4e2b5", "text": "Allows merchant to withdraw funds to it's own account .", "title": "", "metadata": ""}
{"_id": "6fd3b248b37a6a39cca3dca8875787a8", "text": "Remove a group of users from whitelist B .", "title": "", "metadata": ""}
{"_id": "36096bc06129734fea8822a12e51c015", "text": "Grants _entity the ability to perform actions of role _role on _app .", "title": "", "metadata": ""}
{"_id": "7424a2870b6db65e84f0c5c50707dd71", "text": "Verify that the DApp is ready .", "title": "", "metadata": ""}
{"_id": "d482d0f5f07e17a2c4d6f699ee9cd9a2", "text": "Pauses the presale if there is an issue .", "title": "", "metadata": ""}
{"_id": "b912df5cba6d573dadbcc3dc8e472c29", "text": "FINALIZE the crowdsale , should be called after ico period .", "title": "", "metadata": ""}
{"_id": "c22bfe7ca718cf2832e86092f2d2e3d6", "text": "Default payment and donation values .", "title": "", "metadata": ""}
{"_id": "11bd9a252ae0f7e6bc49cb1cd141b8d9", "text": "High level token purchase function .", "title": "", "metadata": ""}
{"_id": "12711733d9cf17ae233cfbc0059c3d69", "text": "modifier to check admin status .", "title": "", "metadata": ""}
{"_id": "4d0972f1cd3e3684056c0804b53af280", "text": "The auction contract variables are defined in PandaBase to allow us to refer to them in PandaOwnership to prevent accidental transfers .", "title": "", "metadata": ""}
{"_id": "9fec2ff8c441508509a3b58b478f8dd5", "text": "ERC223 transfer UETs w / o data for ERC20 compatibility .", "title": "", "metadata": ""}
{"_id": "518a34d2b2d2787b4ef8c523b39a05c2", "text": "Commit remaining dividends before transfer of tokens .", "title": "", "metadata": ""}
{"_id": "0bb2b2b84ffda691fb04b992eababe9b", "text": "May only be called if the crowdfund has not been halted .", "title": "", "metadata": ""}
{"_id": "7d59d85e4e19c88859c87945a7bca9fe", "text": "Function internal to manage payment declaration .", "title": "", "metadata": ""}
{"_id": "de4c64181ad9121948cc463b05387833", "text": "Modifier , reverting if not within limits .", "title": "", "metadata": ""}
{"_id": "63da27c00ed7fe3ce88a020872869b71", "text": "ERC20 Inteface methods .", "title": "", "metadata": ""}
{"_id": "73224fe4d95afcb5fb521ec05d94548c", "text": "As a delegation target we cannot override the fallback , so we provide a specific method to deposit ETH .", "title": "", "metadata": ""}
{"_id": "7e43de9eea98ad763dbb35a05cd4909f", "text": "Sets a new CEO .", "title": "", "metadata": ""}
{"_id": "5d0e7eeb130b0e9dd9d00db17567a2d1", "text": "States the total number of authorized payments in this contract .", "title": "", "metadata": ""}
{"_id": "3ae3f90f062bc7e8a6e74107c3b8dbdf", "text": "create deposit contract address for the default withdraw wallet .", "title": "", "metadata": ""}
{"_id": "4b414688e6ea7fa023e1e155abbe9f12", "text": "Admin can set new rate provider .", "title": "", "metadata": ""}
{"_id": "5b77b08c9e7ee5297c76fe965bd12db1", "text": "Checks if the list contains a node .", "title": "", "metadata": ""}
{"_id": "d6b451f20c83f3289fb5e93a12486f7a", "text": "index : The index address of the instance - holds the app's getter functions and init functions .", "title": "", "metadata": ""}
{"_id": "93c65d49d0ccf43feba9c2c614240544", "text": "called by contract owner to record a off chain contribution by Ether .", "title": "", "metadata": ""}
{"_id": "1c6b29899429eaf1e2078092fbd39384", "text": "Returns the balance associated with the passed in _owner .", "title": "", "metadata": ""}
{"_id": "d0f43a35a9bf6e03c1ca6275ee0c6712", "text": "returns the expected return for selling one of the connector tokens for another connector token .", "title": "", "metadata": ""}
{"_id": "044ec136af7ab9890f0c77806efea67d", "text": "function that is called from KYCBase .", "title": "", "metadata": ""}
{"_id": "b8690313c9bc11bc99588a0173e37a4a", "text": "Modifier - Emission On .", "title": "", "metadata": ""}
{"_id": "994b6628a12e193f2c93cf86dd100d7b", "text": "End the auction , allowing the withdrawal of ether and tokens .", "title": "", "metadata": ""}
{"_id": "60a17e3a2387c8445579d2b71977a320", "text": "not really needed as we fix the max tiers on contract creation but just for completeness' sake .", "title": "", "metadata": ""}
{"_id": "fd79fc897fcad2cb421d8147a1c48e17", "text": "its goal is to return the total number of DAppNode packages .", "title": "", "metadata": ""}
{"_id": "36642c0a14f263a6d6d79dd44bf093f6", "text": "Make sure only the front end Asset can call the transfer methods .", "title": "", "metadata": ""}
{"_id": "8dbb58cf8fc4620119fe917712329f69", "text": "Function used by currency contracts to cancel a request in the Core .", "title": "", "metadata": ""}
{"_id": "ead5954ec405029196c43aa13771aaac", "text": "Remove a node from the blacklist .", "title": "", "metadata": ""}
{"_id": "f0306a28bb1f75e74d35f0fe7f7f3dee", "text": "Admin function : withdraw ETH balance .", "title": "", "metadata": ""}
{"_id": "51820b327a510d95d96ec335401b5cc6", "text": "The latest price multiplier .", "title": "", "metadata": ""}
{"_id": "9eb4ba52945110ac81bb625619023651", "text": "The following modifiers prevent functions from being called if the campaign has been canceled or if new milestones are being proposed .", "title": "", "metadata": ""}
{"_id": "6b46d91eeb0972ce65520cc490d00c59", "text": "The Owner will call this method to extract the tokens .", "title": "", "metadata": ""}
{"_id": "475af7656188fa0d9e2bc369727fe8be", "text": "Lock team tokens for 3 years with vesting contract .", "title": "", "metadata": ""}
{"_id": "19e8616012bf41632350a38bd2599f0e", "text": "Throws if called by any account that's not a Admin .", "title": "", "metadata": ""}
{"_id": "5712f3802e985e049c66a59859aa15d2", "text": "The amount of gold caps produced so far .", "title": "", "metadata": ""}
{"_id": "ab6b481be98f75976903f7f7e5918f1b", "text": "Returns the number of tokens that the user has purchased .", "title": "", "metadata": ""}
{"_id": "70a4b7dce1444cc3c0aac17ff7bbf750", "text": "Returns the number of storage slots pushed to the storage buffer .", "title": "", "metadata": ""}
{"_id": "41471b15ff89a4fe7eb45ebd6996560f", "text": "Takes an order on the given exchange .", "title": "", "metadata": ""}
{"_id": "6f90e9ef71c9616aefb83fcd3f953c88", "text": "get total Gift of an address .", "title": "", "metadata": ""}
{"_id": "34db174b1b11e4b350acfb9dfbcc02af", "text": "Get the contract constant _name .", "title": "", "metadata": ""}
{"_id": "163e333018c5b282a3d98100008e810f", "text": "to check if token is collected by any contributor under different period .", "title": "", "metadata": ""}
{"_id": "c7195b3f85a6cc3a68b1dea93305eae6", "text": "Use 1 super privilege to permanently own a company .", "title": "", "metadata": ""}
{"_id": "f1ec1c74be986de2ab3f49a9a5be12ef", "text": "Schedule sale for given block range .", "title": "", "metadata": ""}
{"_id": "6499622c1bcde0bccb233226ac5763bb", "text": "Transfers the ownership of a given asset from one address to another address .", "title": "", "metadata": ""}
{"_id": "0ac2ddbd005900a0d5a118c4d6dec74b", "text": "Returns full bitmap for given canvas .", "title": "", "metadata": ""}
{"_id": "351c786d6aedbee5f714f53c0d42abb3", "text": "function to clear all payables / receivables of a user can only be called by owner .", "title": "", "metadata": ""}
{"_id": "f414abd2a77aadaf0a5b5ebca85ec795", "text": "Withdraw all Ether from the contract .", "title": "", "metadata": ""}
{"_id": "0520f35d31972bd1b3586e6a86b000b6", "text": "Are transfers currently disallowed .", "title": "", "metadata": ""}
{"_id": "837748b72bb5735948fb636857bc6e11", "text": "Owner can disable minting forever and ever .", "title": "", "metadata": ""}
{"_id": "593055d4aca55be2d9085674885163fb", "text": "Privately offered fund lock .", "title": "", "metadata": ""}
{"_id": "31cedfd343d7844914bd8e920e6b7e74", "text": "Distribute tokens .", "title": "", "metadata": ""}
{"_id": "781af45d8b2603811fd6aa882497d7e3", "text": "Rescue compatible ERC20Basic Token .", "title": "", "metadata": ""}
{"_id": "deeeaa676c11fa3070448880dbaf3d8a", "text": "The total amount of credit the address has ( bonus + non-bonus credit ) .", "title": "", "metadata": ""}
{"_id": "d80622c01aea0afc4fb9a15ab83673bf", "text": "Accepts ETH from a contributor .", "title": "", "metadata": ""}
{"_id": "06e12f1afc101c35ffc37967183156f8", "text": "allow to mint tokens .", "title": "", "metadata": ""}
{"_id": "1aa0406bd1a3b05b89cb198cc5b73641", "text": "Get the token balance for account _tokenOwner .", "title": "", "metadata": ""}
{"_id": "7705031f5147a4b79933f9829048de53", "text": "Play Function ( play by contract function call ) .", "title": "", "metadata": ""}
{"_id": "85dfa600830538ced1ce84fefba87c4e", "text": "ShowNextCliff ( ) looking for the nex cliff time .", "title": "", "metadata": ""}
{"_id": "ee29c2bfe2d97e7adc1e4db32e92dd18", "text": "convert a random number to index of artworks list .", "title": "", "metadata": ""}
{"_id": "46142d35dffc7d4c583ce3d28e792107", "text": "Token holder can call this function to withdraw their balance ( dividend and redemption payments ) while limiting the number of operations ( in the extremely unlikely case when withdrawBalance function exceeds gas limit ) .", "title": "", "metadata": ""}
{"_id": "41fdeb7a3578af50512ce3b0f166cc73", "text": "Gets the list of orders on the black market ( ordered by cheapest to expensive ) .", "title": "", "metadata": ""}
{"_id": "90637aa89ed9eede523d6203e7abd6e5", "text": "allows the owner to change the minimum bet .", "title": "", "metadata": ""}
{"_id": "d18e2cb86bcf5fa1c89548bf57a15ba0", "text": "gets the SPD_strings of a token amount .", "title": "", "metadata": ""}
{"_id": "9e4ecf46f8f5015a59ceba02d8a75a58", "text": "subtracts the gas cost of the tx from the given value .", "title": "", "metadata": ""}
{"_id": "1f18bb35ad3ad4ae88a56657b415ed45", "text": "Returns total supply of Aqua Tokens .", "title": "", "metadata": ""}
{"_id": "bcac5a0483e31f9697a86bd59277912e", "text": "receive funds .", "title": "", "metadata": ""}
{"_id": "9afcc7f6f042326781ce7ba148bb8b9a", "text": "transfer all ETH balance from this contract to the sender and destroy the contract .", "title": "", "metadata": ""}
{"_id": "c3213a660e65772ee8fa93c2f89041c3", "text": "Gets total amount of deposits that has left after users' bonus withdrawals .", "title": "", "metadata": ""}
{"_id": "5628233985cde981c47ca97d1c63bcdc", "text": "in case of error when assigning scientist to given element .", "title": "", "metadata": ""}
{"_id": "2822d65da06190257ccdc2ea1f66f399", "text": "This method should be called by the SGT holders to collect their corresponding SNTs .", "title": "", "metadata": ""}
{"_id": "b3747d5170354673b17b7f111efb8de8", "text": "function to keep track of the total token allocation .", "title": "", "metadata": ""}
{"_id": "693482134baa4d7fcd587a8eb7978a86", "text": "send tokens to specified wallet wallet .", "title": "", "metadata": ""}
{"_id": "c44cb9ebb8666606be40eecd7826436d", "text": "prevents contracts from interacting with FomoDD .", "title": "", "metadata": ""}
{"_id": "365e1d3c05eeddfd4cb1350de99969fa", "text": "created : The address of the created DRCT token .", "title": "", "metadata": ""}
{"_id": "938feb8657e09d5b2f399d1cfad29ccc", "text": "This function burns all B2BK tokens on the address that caused this function .", "title": "", "metadata": ""}
{"_id": "53bc3f9c5662344e8a74d95957f67ba0", "text": "Checks if a given address currently has transferApproval for a particular Kitty .", "title": "", "metadata": ""}
{"_id": "f87724b42b225005fe6ef0c78d4a7488", "text": "Private functions assemble the given address bytecode .", "title": "", "metadata": ""}
{"_id": "45d94d00278a3f6865b0963c2ef0b044", "text": "Only allow a method the be executed if the input hasn't been messed with .", "title": "", "metadata": ""}
{"_id": "81bc29d2f4d01f06bfd7a9463fa05b5e", "text": "Set start time and end time for Ico .", "title": "", "metadata": ""}
{"_id": "c4bb943bd02d42d545bede3e89c6468a", "text": "Computes incentive reward for launching tournament finishTournament ( ) .", "title": "", "metadata": ""}
{"_id": "090bbbd53670596846793f9760889030", "text": "Returns the balance of a user for a specified token .", "title": "", "metadata": ""}
{"_id": "35957e8fe04ca07054fd9633564181fe", "text": "Only old controller can call setControllerAddress .", "title": "", "metadata": ""}
{"_id": "57130b587438ccc412aad76c6bdb44da", "text": "get the name of an account .", "title": "", "metadata": ""}
{"_id": "4d0b2eead087214b706ff2652424ae0a", "text": "Split the given signature of the form rsv in r s v .", "title": "", "metadata": ""}
{"_id": "41ba997de5c9b6e7036a675f832a4417", "text": "Vote for specific proposal with yes or no .", "title": "", "metadata": ""}
{"_id": "c9dc207782506da85ba7400aa467fd0c", "text": "Anyone can usurpation the kingship .", "title": "", "metadata": ""}
{"_id": "fd41f85fefc4ce7f1d578cbb757d768f", "text": "Deletes Team .", "title": "", "metadata": ""}
{"_id": "00e134b71faef184ed79f9a6c0259be4", "text": "Hand over the data layer authority .", "title": "", "metadata": ""}
{"_id": "79ed607c25b33586d10e286861510ce3", "text": "Calculate amount of ETH for refunded tokens .", "title": "", "metadata": ""}
{"_id": "d600bf1dfa884ac39ccaa2eec6483aef", "text": "Bids on an open auction , completing the auction and transferring ownership of the FT ( ERC-20 ) if enough Ether is supplied .", "title": "", "metadata": ""}
{"_id": "f17b110f7f91941ac28120afa0e6f66b", "text": "Returns current balance to be distributed to portions .", "title": "", "metadata": ""}
{"_id": "ad5686ed71cc5eb81d687e856e1cf496", "text": "Throws if called by any account other than an owner or a mint delegate .", "title": "", "metadata": ""}
{"_id": "fc2485b221029f93671c7c4beb931ba9", "text": "modifier to check only multisigwallet can do this operation .", "title": "", "metadata": ""}
{"_id": "af69e2abd3ab9dcf6529949065601107", "text": "Getter Functions .", "title": "", "metadata": ""}
{"_id": "8b345a1fd5d43f8957ca2d86d44531d3", "text": "Transfer tokens to a specified holder .", "title": "", "metadata": ""}
{"_id": "e4ab226b7864366a651d7769ba8e86e8", "text": "Push a new player into the queue .", "title": "", "metadata": ""}
{"_id": "5e303f8fbbc15cb0168a1321a9de4487", "text": "destroy existing coins .", "title": "", "metadata": ""}
{"_id": "045923fe5b17b54ed849bd77e3629282", "text": "Claim some of tokens stored on the contract .", "title": "", "metadata": ""}
{"_id": "624b7eac8d2e1a328f54fa6275ab4faf", "text": "Allows the current owner to update contribution limits .", "title": "", "metadata": ""}
{"_id": "e706b28a3a5aa83b9bc8a23cecec030e", "text": "function to change the end date time can only be called from owner wallet .", "title": "", "metadata": ""}
{"_id": "89a300a228219e175354c5f0ab150c9f", "text": "Shared expense allocation allows admins to withdraw an amount to be used for shared expenses .", "title": "", "metadata": ""}
{"_id": "2c326b861828bb0bc248d517fad1287c", "text": "Disallow to upgrade token to new smart contract .", "title": "", "metadata": ""}
{"_id": "e018a308dbeffc05f549903f543d4962", "text": "same issues as above .", "title": "", "metadata": ""}
{"_id": "5f9d98d8ec41c24fe80b522b7e4c9ad3", "text": "Returns the _decimals of the token .", "title": "", "metadata": ""}
{"_id": "7d07f5a4cac726891d2495335f9467a1", "text": "Check if the amount the owners are attempting to withdraw is within their current allowance .", "title": "", "metadata": ""}
{"_id": "3b49277183e8829a5865ec2afc406cba", "text": "Compute the largest integer smaller than or equal to the binary logarithm of the input .", "title": "", "metadata": ""}
{"_id": "2907b3a0c1c5feecbaf4c56a0b7e2b9b", "text": "replaces controller when it was not yet replaced , only multisig can do it .", "title": "", "metadata": ""}
{"_id": "438417eb35f16a177097748732d2d3b4", "text": "Buy Token Function to purchase tokens in ICO .", "title": "", "metadata": ""}
{"_id": "b4a370646cad651556509084d2604605", "text": "owner burn Token .", "title": "", "metadata": ""}
{"_id": "836622fedf8af01166cdaa037a710ca6", "text": "Returns the total number of Monsters currently in existence .", "title": "", "metadata": ""}
{"_id": "e76958b3be4a298584a607055544fd43", "text": "Finish crowdsale .", "title": "", "metadata": ""}
{"_id": "101c2e06d06240d3de919b47388ceff4", "text": "This is a private function which should be called from user-implemented external burn function .", "title": "", "metadata": ""}
{"_id": "4d08fece3a1328532174ce4d31a0561d", "text": "Get last lease from a card .", "title": "", "metadata": ""}
{"_id": "f9e1236aba92fcc0cbd76c28ff5e2ae0", "text": "active balance of address .", "title": "", "metadata": ""}
{"_id": "3ea0c26d61c41eb15a1c47a417ae7277", "text": "Predicts the highest precision which can be used in order to compute base exp without exceeding 256 bits in any of the intermediate computations .", "title": "", "metadata": ""}
{"_id": "ca3eda603f7e496741fc62d3f62df7a9", "text": "Transfer tokens from all tokenBankrolls to the master staking contract .", "title": "", "metadata": ""}
{"_id": "9ef3e02b858adc2a0e9ba6e3384ccede", "text": "Turn on this contract to be tradable , so owners can transfer their token .", "title": "", "metadata": ""}
{"_id": "034c3bd6bb6d53c9bc3e165648c2edab", "text": "set TLP1 . 2 .", "title": "", "metadata": ""}
{"_id": "70d78575734edbaa9da64cac0825bae6", "text": "Transfer tokens from an address to this contract , a proxy for the owner ( Mint ) .", "title": "", "metadata": ""}
{"_id": "d3da692d747734667a348a3732392b08", "text": "Returns all of the tokens that the user owns .", "title": "", "metadata": ""}
{"_id": "eb6df820c2ec9d1551004165cf606d8c", "text": "Investments will be refunded if preICO not hits the softcap .", "title": "", "metadata": ""}
{"_id": "5d8177ceeab8abd99d61caaff10cb7ba", "text": "Only owner function to call _freezeAccount directly .", "title": "", "metadata": ""}
{"_id": "f67cff0548e462eb31024436323712c5", "text": "Permission control .", "title": "", "metadata": ""}
{"_id": "4503b7c472381ee5362cf44a8760c15e", "text": "Insurance claim data .", "title": "", "metadata": ""}
{"_id": "085523cc3d84ab576efa5b80a8dcaef6", "text": "Safe function for withdrawing funds .", "title": "", "metadata": ""}
{"_id": "60279c9467311dad9bb270a40b7e23fd", "text": "In the event that we want to manually take tokens back from a whitelisted contract , we can do so .", "title": "", "metadata": ""}
{"_id": "c92e5d6051af420fcec36c6a37d4066b", "text": "add graphics cards for someone else .", "title": "", "metadata": ""}
{"_id": "87c27e5bf4053e0a84886e629c080e3f", "text": "it's for maintenance purposes allowing initiator to check if there are some not processed queries .", "title": "", "metadata": ""}
{"_id": "e19d0d187986be6ee4de72351be2dc93", "text": "Protection against short address attack .", "title": "", "metadata": ""}
{"_id": "d513a4c771164d373b1b15f1ee7eb2ea", "text": "withdraw a token from etherdelta .", "title": "", "metadata": ""}
{"_id": "cbdc6f07cfce1f75d34088d440ab6f9a", "text": "Only platform is allowed to call .", "title": "", "metadata": ""}
{"_id": "c9315f7bd28ff553e6d66c1c277c0361", "text": "Internal functions to sell tokens .", "title": "", "metadata": ""}
{"_id": "a48ad75bba5bdf09f9d3f83c1f83b136", "text": "Lock a card and make it unusable .", "title": "", "metadata": ""}
{"_id": "449d601c6931fcac5b338488a71258e6", "text": "removes an existing contract address from the registry .", "title": "", "metadata": ""}
{"_id": "8890aa6d05e229369def4b3fbb389cb4", "text": "BOPS Address setter .", "title": "", "metadata": ""}
{"_id": "d23e7df834a6e2845dc6fd1fd84a8a40", "text": "Override transfer for optionally paying fee to Custom token owner .", "title": "", "metadata": ""}
{"_id": "bbd017bb2982b9cd89bde7c0380af5ab", "text": "This function is modified for erc223 standard .", "title": "", "metadata": ""}
{"_id": "f185571c99eb930ce94aba31670faa57", "text": "Unfreeze currently available amount of tokens .", "title": "", "metadata": ""}
{"_id": "6937e76e692073575c0768cbc5b2a6ee", "text": "asset name .", "title": "", "metadata": ""}
{"_id": "09b950609a8f1987c7bc59e810d1f666", "text": "Allow another contract to spend some tokens in your behalf .", "title": "", "metadata": ""}
{"_id": "f5c185fdee1a866f2929cb39e8321a87", "text": "Record a transaction that happened during the presale and transfer tokens to locked tokens wallet .", "title": "", "metadata": ""}
{"_id": "47c3581b7317925bb0bc16ec28753854", "text": "Owner function to check how much extra ETH is available to cash out .", "title": "", "metadata": ""}
{"_id": "4907f90fbd8cf270f6d328af37b2dd5a", "text": "Updates the consolation rewards percentage .", "title": "", "metadata": ""}
{"_id": "57a1b479c809e61cb4e0b253c91c083b", "text": "the project smart contract .", "title": "", "metadata": ""}
{"_id": "73004d8d6ed1b7603d9f93395e0212b5", "text": "Checks if a given address currently has transferApproval for a particular Asset .", "title": "", "metadata": ""}
{"_id": "4b793123d7d72af26277043ddc3ad3a0", "text": "calculation of the bonuses in two periods .", "title": "", "metadata": ""}
{"_id": "03cdcf9de6530ea0c14a286d91287840", "text": "function to return all the users .", "title": "", "metadata": ""}
{"_id": "dd6069b5551968a052f8af3f97c224a2", "text": "declareWinner etches the winner into the blockchain .", "title": "", "metadata": ""}
{"_id": "1686557c419a9d5ad709ef30bc0b8bc0", "text": "Withdraw Winnings function .", "title": "", "metadata": ""}
{"_id": "3321d8442d5e46d9997c9144253b4cb5", "text": "Freeze permanently an investor .", "title": "", "metadata": ""}
{"_id": "f34450bd5975fb2156209921a3712399", "text": "Returns true if the duration of the ICO is over .", "title": "", "metadata": ""}
{"_id": "a3f3e540285518dd1d5f76a3b08d229c", "text": "allows execution by either the owner or the manager only .", "title": "", "metadata": ""}
{"_id": "c64b91f378d5cdebccf492f86d71164b", "text": "Update the worldScore .", "title": "", "metadata": ""}
{"_id": "99a937604807faee96e912417ae2fae6", "text": "Bettor interface place a bet .", "title": "", "metadata": ""}
{"_id": "71c114e5a2e32e278f83c2943279755d", "text": "adding a new BBFarm .", "title": "", "metadata": ""}
{"_id": "ef656ab4bad577d2eea7985cd4465f73", "text": "we must do a carefully check when set hatch duration multi configuration , since wrong value may break the whole cooldown logic .", "title": "", "metadata": ""}
{"_id": "56d5251ec4ae420e10fec2f050673dcf", "text": "Base Token Started ERC 20 Standards .", "title": "", "metadata": ""}
{"_id": "85083f05a2a8161e49eb77ccbb668591", "text": "If the fundraiser failed to reach the soft cap , participants can use this method to get their ether back .", "title": "", "metadata": ""}
{"_id": "682b1a566905c287e16003b3cf21be87", "text": "Return a contract address of the supported token .", "title": "", "metadata": ""}
{"_id": "f83dbd1838a58fff948bc90cc4dd71e5", "text": "Called once by crowdsale finalize ( ) if the sale was success .", "title": "", "metadata": ""}
{"_id": "25c2cc456cf88640db13a0b8422b7acc", "text": "the currency encoded as a bytes32 .", "title": "", "metadata": ""}
{"_id": "ad29023ec8840e719ccb0f47da368e75", "text": "method for direct contract replenishment with ETH .", "title": "", "metadata": ""}
{"_id": "22e8e2f20c5356bc30363139ce679985", "text": "Function to return the total supply of the token .", "title": "", "metadata": ""}
{"_id": "b93d4b3d2bed31d28f080f61860fe3f4", "text": "gas used 67841 a teller can delete a sellpoint .", "title": "", "metadata": ""}
{"_id": "bd226b4c8a610d4bdffd69d65096bd7b", "text": "funcion llamada por el banco owner del Loan , permite saldar la deuda .", "title": "", "metadata": ""}
{"_id": "9c63fd65f7da844020d10c42d4776153", "text": "The attacker can withdraw their PNK from here after the bribe has been settled .", "title": "", "metadata": ""}
{"_id": "9eea9a919b5a6259d86dbccfc0db8e79", "text": "you cannot turn off draining without turning off burning first .", "title": "", "metadata": ""}
{"_id": "3511e2eba44e310fa455ec384acf6bd9", "text": "If this coin can be minted modifier .", "title": "", "metadata": ""}
{"_id": "033f4149c773a4f3064ff168a3c81a6c", "text": "Anyone with enough ECOM token can create a company .", "title": "", "metadata": ""}
{"_id": "9a527cf787870f57f8b449e68f8d64d8", "text": "Helper to Pause BOUToken .", "title": "", "metadata": ""}
{"_id": "6a346397d0eadbc5f78c5f87077a490f", "text": "Check whether you own this Lottery .", "title": "", "metadata": ""}
{"_id": "516868ef368fd4ac50a4be5271af68be", "text": "Require that the voting period for the proposal has ended .", "title": "", "metadata": ""}
{"_id": "d204947de7f7a2fe2c96380c6e862026", "text": "Can only be called by the newOwnerCandidate , accepts the transfer of ownership .", "title": "", "metadata": ""}
{"_id": "410b91bc70b27085e9d8ca952b5e50b8", "text": "Owner can collect fees .", "title": "", "metadata": ""}
{"_id": "f3cc11d78d83136c7e64789f8dc25e7e", "text": "populates contract with 1 of each farmable token to deal with storage creation gas cost .", "title": "", "metadata": ""}
{"_id": "729feb04d282eeb60006f12358cfedc1", "text": "Complete the work order .", "title": "", "metadata": ""}
{"_id": "e46d0f73681d7b0d33b036a9e5e9359d", "text": "Method use by the creators .", "title": "", "metadata": ""}
{"_id": "d02b5ba47838e591e4a246bddb425fd6", "text": "Enables burning on the token contract .", "title": "", "metadata": ""}
{"_id": "e9f2c7849dffefbbd51fdb603a16adf5", "text": "Returns all canvas' id for a given state .", "title": "", "metadata": ""}
{"_id": "786f580657700f14e919d887a7fe7923", "text": "Send any pending funds back to their owner .", "title": "", "metadata": ""}
{"_id": "e245e27c2ccc6773ee7ab20cddaf025b", "text": "Implements ERC20 transferFrom from one address to another .", "title": "", "metadata": ""}
{"_id": "4b22c639ac8d0d1dc9f47040953cb701", "text": "minimum reqired ether to enter competition .", "title": "", "metadata": ""}
{"_id": "e4f7aa85e5f59ac74a03a2ab5347a940", "text": "Gets the number of remaining shares that can be bought or sold under this order .", "title": "", "metadata": ""}
{"_id": "d442e1ea7482423b31745eef23933e6b", "text": "return BonusPool .", "title": "", "metadata": ""}
{"_id": "c9ed4d3e7175181f4a72233bd90e5de0", "text": "return free Tokens .", "title": "", "metadata": ""}
{"_id": "98342c59db0f219c4ca00caf2cfde786", "text": "Added for the same reason as increaseApproval .", "title": "", "metadata": ""}
{"_id": "20ea19a500189b12c690a7fee5376609", "text": "Set the maximum size of the list .", "title": "", "metadata": ""}
{"_id": "6c01dc71c8d599baf35b9a7fb44be4ad", "text": "do withdrawal .", "title": "", "metadata": ""}
{"_id": "caf6b94651a9ec431fce4fa8eb02bf97", "text": "MODIFIERS - Restricting Access and State Machine patterns .", "title": "", "metadata": ""}
{"_id": "701f2e20ea20531c07753e15ed2bb91f", "text": "freeze ? Prevent Allow _target from sending receiving tokens .", "title": "", "metadata": ""}
{"_id": "cf69f8be502dad6c759b6c2a9b56d526", "text": "Creates new STT tokens .", "title": "", "metadata": ""}
{"_id": "53bf5b39b1982cf91b2c22a302e02af1", "text": "Set the address of the sibling contract that tracks metadata .", "title": "", "metadata": ""}
{"_id": "8ca59a6f16ac7924f1387eba2cd051cd", "text": "Modifier to only allow the execution of owner payout when winner is determined .", "title": "", "metadata": ""}
{"_id": "8d7d14f39261a7fde3caab605eef2159", "text": "for battle card .", "title": "", "metadata": ""}
{"_id": "59dd3bdd79088e4bf0e10e1016f8d92c", "text": "Returns true if the campaign is in progress .", "title": "", "metadata": ""}
{"_id": "2214fb17c0e4fbccc92e18199bd42ccb", "text": "get data .", "title": "", "metadata": ""}
{"_id": "e9907d58f1ceb46e680ef24fcc708459", "text": "once constructor assigns control to 0x0 the contract cannot be changed .", "title": "", "metadata": ""}
{"_id": "7622c9f6c6f4b53b234d42fbfb45be3a", "text": "init payout .", "title": "", "metadata": ""}
{"_id": "19114a0cede250e9dc8dc94f58534955", "text": "withdrawal function is called monthly .", "title": "", "metadata": ""}
{"_id": "cfe6efc5a219dc743a574090cc74fdb3", "text": "Housekeeping - called in the event this contract is no longer needed .", "title": "", "metadata": ""}
{"_id": "b4f0cd781aabc241637802e29d25f28e", "text": "returns current migration target .", "title": "", "metadata": ""}
{"_id": "0cde30509641104cff4975be40e2d987", "text": "In case the business gets sold , the new manager will take over the management .", "title": "", "metadata": ""}
{"_id": "c77cffa0048b5d252252e63e04b4673f", "text": "allows LockedAccount to reclaim tokens wrongly sent to its address .", "title": "", "metadata": ""}
{"_id": "f2359f07093f20c0331ba30367c1b6b3", "text": "flag function called by owner , releasing some function to work for .", "title": "", "metadata": ""}
{"_id": "e6e69365a725347f41eef7018ec36113", "text": "Retrieve the name of the token .", "title": "", "metadata": ""}
{"_id": "95fb3a3738fcc0dd1f88a156cf691187", "text": "Determines if proposal has passed .", "title": "", "metadata": ""}
{"_id": "da6c9bf5c1c5bde78203c22cb2cec36f", "text": "Allows a Taker to fill an offchain order for an Option created by a Maker .", "title": "", "metadata": ""}
{"_id": "4e7856c7b3bafe783aeea85ed091c9be", "text": "Pay tournament winners .", "title": "", "metadata": ""}
{"_id": "8b2274d03e7b603899953a33f8fe50be", "text": "TODO : remove in release .", "title": "", "metadata": ""}
{"_id": "c5ec57892e3e3dd0a1791d9ee7815d4d", "text": "Set the withdrawalCoolingPeriod parameter value .", "title": "", "metadata": ""}
{"_id": "18601d2b598b27ff131c9f66587601d3", "text": "Called only by seller child contracts when a name is purchased .", "title": "", "metadata": ""}
{"_id": "edc7e20bb93fe5912c970d1c8411af1e", "text": "Token distribution to Community .", "title": "", "metadata": ""}
{"_id": "a3f00554e14d8adcb80790d55d28df03", "text": "Accepts new ownership on behalf of the VestingTrustee contract .", "title": "", "metadata": ""}
{"_id": "59b0132030c3fba42fbf88345b3616ca", "text": "Oracle address and owner address are the same .", "title": "", "metadata": ""}
{"_id": "66a951f4ab94922ad67bd882dbaa4f12", "text": "setAdOwner changes the owner of an ad unit .", "title": "", "metadata": ""}
{"_id": "223889f75960a881f0f9f29937c5f375", "text": "Allows the admin to add additional crowdsale tiers before the start of the sale .", "title": "", "metadata": ""}
{"_id": "dfe35ef755c8c814cf5f0168d76a78ff", "text": "crear Portolio .", "title": "", "metadata": ""}
{"_id": "c96e3651c47ae1724bb2a1c728210011", "text": "Add 125 bonus .", "title": "", "metadata": ""}
{"_id": "12d119f7249a9761e0823e7ee1a81325", "text": "goods API add new description to the goods .", "title": "", "metadata": ""}
{"_id": "af28c25e2cb7c16975bab1e9a23f3deb", "text": "The total number of tokens that exist .", "title": "", "metadata": ""}
{"_id": "4bb18aa45583b288a769edbf8b283af2", "text": "Set new HoQu token exchange rate .", "title": "", "metadata": ""}
{"_id": "7162c42e4688e8939450b3411faff5b2", "text": "What was the last game ID that has had an official score registered for it ? .", "title": "", "metadata": ""}
{"_id": "011eab1c20920bdf13746a7b958d1bb6", "text": "Token owner to call this to initiate final distribution in case of project wind-up .", "title": "", "metadata": ""}
{"_id": "812a64124c1db847535889a685e48f12", "text": "Is a player registered ? .", "title": "", "metadata": ""}
{"_id": "449db398b106e262349d1d9c7be6f68e", "text": "Buys tickets .", "title": "", "metadata": ""}
{"_id": "0fe57c7fbd87698a067acac762d928ec", "text": "Transfer _amount of tokens if _from has allowed msg . sender .", "title": "", "metadata": ""}
{"_id": "159b49dfd5fffcf8380dac07ce88feda", "text": "Shows what settings were requested in a settings change request .", "title": "", "metadata": ""}
{"_id": "4a0d34644916fde0fd2bf169ade26564", "text": "Overload placeholder - could apply further logic .", "title": "", "metadata": ""}
{"_id": "c1e3f20a466f54208c1136b0b52f3fb5", "text": "Set the cooldownEndTime for the given EtherDog , based on its current cooldownIndex .", "title": "", "metadata": ""}
{"_id": "051b5556dd983055aadce38d8b30ab6d", "text": "Create new instance of mtn token contract .", "title": "", "metadata": ""}
{"_id": "579bdc33a8a8ac2bde85695588c419e0", "text": "Allows the current owner to assign another owner .", "title": "", "metadata": ""}
{"_id": "858e96a488584c21360017779138d850", "text": "need to auto calc max bet private functions .", "title": "", "metadata": ""}
{"_id": "16fa09761230526118f3281c6abc33b1", "text": "Standard function transfer similar to ERC20 transfer with no _data .", "title": "", "metadata": ""}
{"_id": "c13372c73c4b9a31f64fb36640ca4529", "text": "Non constant functions .", "title": "", "metadata": ""}
{"_id": "02b8a4863825762b0e600dde0b5145b0", "text": "Inititate / extend multisig unlockTime and / or initiate / refund multisig deposit .", "title": "", "metadata": ""}
{"_id": "37a5168487094d8f242ba5570f3601ec", "text": "true if token transfer was successfully approved , false otherwise .", "title": "", "metadata": ""}
{"_id": "fc9444e5e7437e894780e6e8753b3c90", "text": "Sets up function sets external contract's address .", "title": "", "metadata": ""}
{"_id": "8af7e7600afb62a6d9cf363b48166d35", "text": "By default , we dis-allow payment disburements if the contract is paused .", "title": "", "metadata": ""}
{"_id": "d2e9ef963f8e73a57f0b6a45b1c24f80", "text": "Cancel mint request , can be call only by owner which created this mint request .", "title": "", "metadata": ""}
{"_id": "858b2dcf4799840d1c933d9c02b79a82", "text": "Called to start refunding .", "title": "", "metadata": ""}
{"_id": "e10c86692c1dd7b17f37ddde2fa6dfea", "text": "Change eth address of agency for create deal .", "title": "", "metadata": ""}
{"_id": "ebeee33ed0a1818be7dd3654ec952b74", "text": "Validate Transcript Hash alone of a student .", "title": "", "metadata": ""}
{"_id": "fbb05ab908209a17bd928419e0e3d14f", "text": "setting charger address .", "title": "", "metadata": ""}
{"_id": "0c20e0b3e9f68e1872299ee2acb78913", "text": "Modifier onlyOwner prevents function from running if it is called by anyone other than the owner .", "title": "", "metadata": ""}
{"_id": "2286ec4f34d718de446a947f9df1fb48", "text": "Updates a contributor's rate and / or max .", "title": "", "metadata": ""}
{"_id": "1e887524c65525827a71462e40601409", "text": "Unlocks previusly locked tokens .", "title": "", "metadata": ""}
{"_id": "1ff00b991f3bb42a50f0bbb0462a135e", "text": "Disable investment in specified assets .", "title": "", "metadata": ""}
{"_id": "b7d2e79669769650cd8821dba84d8d53", "text": "sells your soul for a given price and a given reason ! .", "title": "", "metadata": ""}
{"_id": "5f198aa2b8a6877dbb012335cc908581", "text": "functions of operation .", "title": "", "metadata": ""}
{"_id": "58544417215f0d84d3c8599d0f53d82b", "text": "The number of decimals of a given currency hash , only if registered .", "title": "", "metadata": ""}
{"_id": "65e25ce81ef51bc88c94c5bd7791ce4f", "text": "send ether to the fund collection wallet override to create custom fund forwarding mechanisms .", "title": "", "metadata": ""}
{"_id": "b26d8645c1bc0950fdf19b43822a2e60", "text": "This method can be used by admin to extract Eth accidentally sent to this smart contract after all previous transfers have been made to the correct addresses .", "title": "", "metadata": ""}
{"_id": "04d99966390f49f0122365c75c8efb92", "text": "Receive the call from Oraclize .", "title": "", "metadata": ""}
{"_id": "ae121bd8fca035b6846ab2c28816f8ec", "text": "allows execution only when changing isn't disabled .", "title": "", "metadata": ""}
{"_id": "337a34597f449d2602f972ec7ca5461f", "text": "Owner can update POOHMOWHALE to stop paying doublr and act as whale .", "title": "", "metadata": ""}
{"_id": "52434426e87a1a3035a8e0f5c1433e0f", "text": "Normalizes early purchases data .", "title": "", "metadata": ""}
{"_id": "f64de8eb1f02252913c7f20b7fb2a58d", "text": "Issue of tokens for the zero round , it is usually called : private pre-sale ( Round 0 ) .", "title": "", "metadata": ""}
{"_id": "a22190d508f34eb1ef9d0f2842bbcd77", "text": "Cancel game .", "title": "", "metadata": ""}
{"_id": "02ff19b7f9f5cd5547de5666a286a150", "text": "Give a burn delegate permission to burn tokens .", "title": "", "metadata": ""}
{"_id": "71a9a8fc2563a96ddd0307b2f6ab47c7", "text": "Modifier to check whether the crowdsale is running .", "title": "", "metadata": ""}
{"_id": "9294b695d04afdf0aaec1e17696914bd", "text": "The external function to get all the relevant information about a specific hero by its ID .", "title": "", "metadata": ""}
{"_id": "99f035583fd15a24e4c4c4ded2f5d919", "text": "Get the ETH balance of this contract .", "title": "", "metadata": ""}
{"_id": "e93def19ca50656280f43bead6a9d6ea", "text": "Returns the size of one tranche .", "title": "", "metadata": ""}
{"_id": "4c60fa9f5c47bb4d8739f961c30c4789", "text": "Set new owner for the smart contract .", "title": "", "metadata": ""}
{"_id": "7335a5e4615512db481818cac6ad3b6f", "text": "Set new state .", "title": "", "metadata": ""}
{"_id": "51f2aece8340fb57ace7fe183388ec93", "text": "Portfolio Support .", "title": "", "metadata": ""}
{"_id": "8d02bd7c19632038ddf29a951709a973", "text": "BK Ok - Calculate BET / ETH at any point in time .", "title": "", "metadata": ""}
{"_id": "d2321540c9f5b22d6fb58b6e07421df3", "text": "Gas guzzler .", "title": "", "metadata": ""}
{"_id": "7f49393b7b9cf82515533cded7f3265e", "text": "Get the summon timestamp of given address .", "title": "", "metadata": ""}
{"_id": "6ad500cb72f1b8917458bb74f8fab5a9", "text": "Creates a new Politician with the given name .", "title": "", "metadata": ""}
{"_id": "faba1c3ba53198abd62e3b6f4725c3dd", "text": "Approves then calls receiving contracts .", "title": "", "metadata": ""}
{"_id": "9f6d0d82de483afcadc7cfadb286faef", "text": "Add a refiller .", "title": "", "metadata": ""}
{"_id": "ebbe0bed2390fad0bf9000116c0bde4f", "text": "set minimal token sale price .", "title": "", "metadata": ""}
{"_id": "f5b623cb3596571dfb5c2a596fdfd949", "text": "Ex1 : trade 50 OMG - ETH - EOS .", "title": "", "metadata": ""}
{"_id": "58b37a0006489035667905439ff30427", "text": "Burning tokens .", "title": "", "metadata": ""}
{"_id": "ad380b6dfec07737ff0f2dff25223122", "text": "distribute funds to all partners .", "title": "", "metadata": ""}
{"_id": "3b27fa1a1b58303523118ce1c8fbe9a3", "text": "Extend parent behavior requiring purchase to respect the funding cap , and that contribution should be minMillPurchase .", "title": "", "metadata": ""}
{"_id": "694b812fda71514ad664c77da488cc1f", "text": "Vote for specific token with yes .", "title": "", "metadata": ""}
{"_id": "873fadcf962f42ebf030dac1401242df", "text": "call to clean up the contract .", "title": "", "metadata": ""}
{"_id": "386e8e92ebc2a4bb8b59b98e8a876195", "text": "Getters to allow the same blacklist to be used also by other contracts ( including upgraded Long ) .", "title": "", "metadata": ""}
{"_id": "75a84077841f64ebe805ca4ff6a29224", "text": "Eth balance controls .", "title": "", "metadata": ""}
{"_id": "ce83cc09ed103d1d2001492fb4f594dd", "text": "Preferably for emergencies only .", "title": "", "metadata": ""}
{"_id": "70b042ae6e63a930210e71bf4f1f51fa", "text": "This modifier is used with all of the functions requiring authorisation .", "title": "", "metadata": ""}
{"_id": "5af94a566e07000323bf9106a6aeed15", "text": "Function to recover the funds on the contract .", "title": "", "metadata": ""}
{"_id": "5cfacae7cb426d4af42ec06fe610537d", "text": "function for booking and locking for a buy with respect to a sale offer registered .", "title": "", "metadata": ""}
{"_id": "5898f914f227aaabc4ba61a29cf8243c", "text": "Used by the owner to set the withdrawal address for Bitwords .", "title": "", "metadata": ""}
{"_id": "0e578b9913aa0f881e0d52e6435c8eb7", "text": "the currency string from a encoded bytes32 .", "title": "", "metadata": ""}
{"_id": "7f5820a9b7d9a6dc007f9119023fa6c2", "text": "Guard overflow by making 0 an impassable barrier .", "title": "", "metadata": ""}
{"_id": "9d6f4abc3518b9359ead20b936f114b7", "text": "Gets the data point associated with the provided dataRequest .", "title": "", "metadata": ""}
{"_id": "bf5b98bc4af015bf4d0920698fd33f5a", "text": "exchange methods .", "title": "", "metadata": ""}
{"_id": "d5f75ad24cfb2fa4557d2d97712c3f90", "text": "todo : implement group add someday , however func distributeAndReturnToPool gets very complicated todo : function calcNewEmployeePoolOptions ( uint remaining , uint8 groupSize ) todo : function addNewEmployeesToESOP ( address emps , uint32 issueDate , uint32 timeToSign ) .", "title": "", "metadata": ""}
{"_id": "6fb04f8073a3351743ed37c71e7034cf", "text": "Calculates how many tokens one should receive at curent time for a specified value of ether .", "title": "", "metadata": ""}
{"_id": "a42e845bc77e1b8880aca2dc10811af0", "text": "Function for transfering tokens from one account to another .", "title": "", "metadata": ""}
{"_id": "605de8abeb031d1eedab39b1e9bdaaf7", "text": "Crowdsale contract is allowed to shift token start time to earlier than initially defined date .", "title": "", "metadata": ""}
{"_id": "a615859fcdfb1f986b5179d2f4680a71", "text": "generate a public event on the blockchain .", "title": "", "metadata": ""}
{"_id": "7e6ff6e23df74588aff3efe16f922afb", "text": "to correct exchange rate ETH for BTC .", "title": "", "metadata": ""}
{"_id": "591d26648ef6cbcdd0fc6c9694ad81a7", "text": "Allows the owner start or stop trading .", "title": "", "metadata": ""}
{"_id": "cea5b6613729cc226f4c8c6d13ac9a73", "text": "Returns the totalSupply .", "title": "", "metadata": ""}
{"_id": "c3d5401de737c5f4e40e1acd570944a3", "text": "Check if updateInterest ( ) needs to be called before refundLoan ( ) .", "title": "", "metadata": ""}
{"_id": "a92d00527aa3d33d050cd56ff7a51b10", "text": "After Phase 1 .", "title": "", "metadata": ""}
{"_id": "3afd57e1682d3c3d31da5f2b765819cf", "text": "Activates the device .", "title": "", "metadata": ""}
{"_id": "a8967d6c5a3fc6a5b098664482dcc50a", "text": "Owner can burn a specific amount of tokens from the target address .", "title": "", "metadata": ""}
{"_id": "2597ffe3ebe830bf29787c1c25860e34", "text": "Synchronously executes multiple fill orders in a single transaction .", "title": "", "metadata": ""}
{"_id": "b26a24b64b8227b60d4a4e013fc08e46", "text": "set withdrawal gas nonstandard gas is necessary to support push-withdrawals to other contract .", "title": "", "metadata": ""}
{"_id": "8d8b3ea775e3f55963505299ed840b3a", "text": "if someone wants to transfer tokens to other account .", "title": "", "metadata": ""}
{"_id": "e4fc67554888b8e2c636bda8cc0124bf", "text": "ERC-165 Standard interface detection ( required ) .", "title": "", "metadata": ""}
{"_id": "4244669ea81178b44444dc5f1cb5dc11", "text": "Admin function for transfer coins .", "title": "", "metadata": ""}
{"_id": "e56fc0f083406eaaac82ded30de5b8c3", "text": "Helper function to update collected and allocated tokens stats .", "title": "", "metadata": ""}
{"_id": "64e08568291535e74c619dbf584cbc9a", "text": "Ensure _receiver is a participant .", "title": "", "metadata": ""}
{"_id": "1d2adeaa25b99eb3938d07c746a0b587", "text": "For creating Villains .", "title": "", "metadata": ""}
{"_id": "94934bb040de5c08fe492df8eef02aeb", "text": "Any of the owners can execute this .", "title": "", "metadata": ""}
{"_id": "749bb25038a88b2a15d151f2f75795f2", "text": "Assigns a new address to act as the Manager .", "title": "", "metadata": ""}
{"_id": "c6f112d876b519a955d00ce85aaefc91", "text": "LockChain Ends the funding period and sends the ETH home .", "title": "", "metadata": ""}
{"_id": "bc52b608181e43f55fc1ae5ae0dc8083", "text": "unpauses the crowdsale .", "title": "", "metadata": ""}
{"_id": "58f92b5e2a5f9a043b0c6462002af043", "text": "Proposes to transfer control of the contract to a newOwnerCandidate .", "title": "", "metadata": ""}
{"_id": "ebb2565e537f32c8dcfd7f66567f26fc", "text": "Function for who will receive the paid ether .", "title": "", "metadata": ""}
{"_id": "87a97a5c91cd7f3ab3f3a936019bebf8", "text": "Buy entry point .", "title": "", "metadata": ""}
{"_id": "cfa05669bbdb520077af4eb1e00ddf5c", "text": "SafeMath Library safeSub Import .", "title": "", "metadata": ""}
{"_id": "7b083e083e06cdd67e4205ee732e6eea", "text": "This function returns the details for the players by id ( instead of by address ) .", "title": "", "metadata": ""}
{"_id": "7e26ca79e81406fa2db7d38ad4c35305", "text": "Emergency protocol .", "title": "", "metadata": ""}
{"_id": "36e5ddc331776c74c1aed6c5e1708f65", "text": "Update the Medal Leaderboard for the Highest Price .", "title": "", "metadata": ""}
{"_id": "fafe11450bb9e2cc3223cabfd8c1c1bd", "text": "Send back non-cleared transactions after sale is over , not checking status for speeding up mass actions .", "title": "", "metadata": ""}
{"_id": "100a3866f66905fe928d8bf972dbb9ee", "text": "sets TGE as new sale agent when sale is finished .", "title": "", "metadata": ""}
{"_id": "192596126fcf23baf9483e0213b566d3", "text": "coin out .", "title": "", "metadata": ""}
{"_id": "2140b0ea25bdf820f03021e5719e1c3c", "text": "Check the symbol is reserved or not .", "title": "", "metadata": ""}
{"_id": "8af54e6399def5b25627cf35c44cea42", "text": "Token functions .", "title": "", "metadata": ""}
{"_id": "f404347e2a10aeb4a39b4adb3a3460f1", "text": "Sends the owner's fee to the specified address .", "title": "", "metadata": ""}
{"_id": "570cc7145276c0ef0cd1a7d5f2984aee", "text": "unlock other token if any to accountLocked .", "title": "", "metadata": ""}
{"_id": "4c1b7b2b9704566cec783e8afdb4de4d", "text": "add new team percentage of tokens .", "title": "", "metadata": ""}
{"_id": "c4f300231d24d05cab58d428fff57f13", "text": "distributes eth based on fees to com , aff , and p3d mark by 33 .", "title": "", "metadata": ""}
{"_id": "8db801a8026962b4bb593dfe18d550ed", "text": "distribute funds .", "title": "", "metadata": ""}
{"_id": "3f56a29c62d7ff07a9de89b883cac243", "text": "Stop oraclize automatically update manual .", "title": "", "metadata": ""}
{"_id": "533341db6c3a2d26877208acfb831975", "text": "Set allowance for other address , then notify Allow _spender to spend no more than _value ( in wei , with 18 zeros ) tokens on msg . sender .", "title": "", "metadata": ""}
{"_id": "73cf38e58b3a21f857aaf1e598496f20", "text": "Calculate amount of dividends base on the incoming value from the users .", "title": "", "metadata": ""}
{"_id": "e8f27d8656f2b99653de935f766650f0", "text": "Main contract callable functions .", "title": "", "metadata": ""}
{"_id": "a39c4ed1a06d325bdbf770de5c73beed", "text": "get total metal cards .", "title": "", "metadata": ""}
{"_id": "4533ab0e260be1f1d219c803fe0c97e2", "text": "the name of this token .", "title": "", "metadata": ""}
{"_id": "ff1e6e864541ac8c85fed33e91405a8e", "text": "add new address to white list .", "title": "", "metadata": ""}
{"_id": "67751ee65b0cc513dc064cc994105cb0", "text": "Transffers out ethereum sent to this contract .", "title": "", "metadata": ""}
{"_id": "f17777abd28ee3496a37e4dc51c31bc8", "text": "buy ( only accept normal address ) .", "title": "", "metadata": ""}
{"_id": "4c0a2f04ced59ecb67db54f92b78241f", "text": "get content by plain string name .", "title": "", "metadata": ""}
{"_id": "8e2964e31582a0b62c68ba05a62670a6", "text": "Distribute the tokens left after the crowdsale to the pre-agreed accounts .", "title": "", "metadata": ""}
{"_id": "60f44db7fdebe7814394874f895267d5", "text": "Transfers tokens from an approved account .", "title": "", "metadata": ""}
{"_id": "3cc6421d6263fd0cb33eb8d66044db80", "text": "Users can claim eth by themself if they want to in instance of eth faliure .", "title": "", "metadata": ""}
{"_id": "b3465c5a657f990ab8d5ed171f7722b7", "text": "Transfer the SMS balance from caller's wallet address to target's wallet address .", "title": "", "metadata": ""}
{"_id": "3ed8cedeeea7ad77de3a688d76b7b3d7", "text": "Set new Fundaria address .", "title": "", "metadata": ""}
{"_id": "40a23469975fe21703ead2b5352a49be", "text": "Max balance .", "title": "", "metadata": ""}
{"_id": "7e8dff5ad56f9f8e3f5f3211a3dc3884", "text": "Gets the balance of the specified address .", "title": "", "metadata": ""}
{"_id": "f44865b1a9188b1fda80bdf89616702e", "text": "INTERNAL - Register a name that's not currently registered .", "title": "", "metadata": ""}
{"_id": "c616267440a267f689dbe8f248eb3794", "text": "Functions with this modifier can only be executed by a specific address .", "title": "", "metadata": ""}
{"_id": "0dc221aba5f94d880cc0f6bf8255ac6e", "text": "How much you must pay to claim the throne now , in finney .", "title": "", "metadata": ""}
{"_id": "c811a667324180c4190cb3d0e90cfd9a", "text": "Submit the answer whose hash you sent in a previous submitAnswerCommitment ( ) transaction .", "title": "", "metadata": ""}
{"_id": "27fc829363d17ae2e15539c2900d248b", "text": "Allows owner to set URL used in Oraclize queries .", "title": "", "metadata": ""}
{"_id": "873676b724a4886ff61f11dbd5e38cd3", "text": "minting possible only if State . PreIco .", "title": "", "metadata": ""}
{"_id": "d6732985fb3f6ea2b700d8c5e10c2f5a", "text": "this method is used for getting account pending value .", "title": "", "metadata": ""}
{"_id": "a81ed201e48ee6705ccc54ee34f6523c", "text": "set all the dates .", "title": "", "metadata": ""}
{"_id": "882fa9a4852c60889e5117ee3c8c78b6", "text": "Creation of building properties .", "title": "", "metadata": ""}
{"_id": "f2e1a7c47b763692e64a5ce8ac792b93", "text": "checks that finish date is not reached yet ( and potentially start date , but not needed for presale ) .", "title": "", "metadata": ""}
{"_id": "795463cb43b346f72ea319082928fa7d", "text": "Returns base rate ( BUL / ETH ) of current stage .", "title": "", "metadata": ""}
{"_id": "786590d3978d3c0cd9d5fd8fdca5b06b", "text": "Convert wei to tokens .", "title": "", "metadata": ""}
{"_id": "ca4455ed86fd96587e3a39ea45e6ce71", "text": "Provides an internal minting function .", "title": "", "metadata": ""}
{"_id": "3c4f5f6c5731071918ce2e2aadd1a37e", "text": "Burns a specific ( _value ) amount of tokens .", "title": "", "metadata": ""}
{"_id": "7b0281c5206367b89f799e3319209071", "text": "Get the amount filled for the given order .", "title": "", "metadata": ""}
{"_id": "81bf8107044a8a6f75194776ce98f7c7", "text": "Called to close the bet .", "title": "", "metadata": ""}
{"_id": "08fbbc211899116aac2be951fa76bf95", "text": "Only way to give BlackPearlwhale ETH is via by using fallback .", "title": "", "metadata": ""}
{"_id": "31c050be918d28c7341d78d13ce3d491", "text": "proxyPayment ( ) allows the caller to send ether to the TokenSale and have the tokens created in an address of their choosing .", "title": "", "metadata": ""}
{"_id": "571565efa18e6d57c1ad23d465ef8a6f", "text": "approved for .", "title": "", "metadata": ""}
{"_id": "6d69fe5e755ec5a757bc9dc0fb5be357", "text": "check the number of current participants .", "title": "", "metadata": ""}
{"_id": "01eb7b571656a234ee0ce55749675872", "text": "DisableSale Function .", "title": "", "metadata": ""}
{"_id": "4cca41c381ae06d7cf207ebeabf9db05", "text": "Grant Beercoins to a user who scanned a bottle cap code .", "title": "", "metadata": ""}
{"_id": "65279fe06c93253a56877cc5197e2c46", "text": "true if address is a funder address .", "title": "", "metadata": ""}
{"_id": "ad0e4d42afe592bd367d986e58b8b303", "text": "power pool - inactive supply .", "title": "", "metadata": ""}
{"_id": "f065a30623ee0721dcc6b9b4ac363057", "text": "Called to force a payout without having to restake .", "title": "", "metadata": ""}
{"_id": "193453a9401469dfe8b8826c08b7a074", "text": "Allowances are intentionally not supported .", "title": "", "metadata": ""}
{"_id": "51645471bce57deeb7819ceafec16219", "text": "Get the total stats ( cumulative for all campaigns ) .", "title": "", "metadata": ""}
{"_id": "83322f3d202e060c491763ba86c7bfc1", "text": "send ether to the fund collection wallet , this ideally would be an multisig wallet .", "title": "", "metadata": ""}
{"_id": "14743d29e15f07d8ca66ce1fa0f60115", "text": "function for buying tokens for presale investors .", "title": "", "metadata": ""}
{"_id": "0f31bb623cfded2c8c158d375bc08e7b", "text": "Transfer shares to another adress see : https : / / github . com / ethereum / EIPs / issues / 20 .", "title": "", "metadata": ""}
{"_id": "c1fac47e72707bf2805d58631b900b8f", "text": "checks whether contract is valid .", "title": "", "metadata": ""}
{"_id": "a2cadbba7d500a686d179755f0efb38c", "text": "Issue and buy more tokens .", "title": "", "metadata": ""}
{"_id": "59c84524b6e641a4fa0cdf95f6e5abd1", "text": "Return the productivity of the citizens of a city .", "title": "", "metadata": ""}
{"_id": "daa866d7b34c2b4f6b35faad9e5e49ec", "text": "called by the owner to lock purchase of ipc token .", "title": "", "metadata": ""}
{"_id": "60205f526649772689588562b6ab23ce", "text": "sell function implements .", "title": "", "metadata": ""}
{"_id": "ad07103346fee52608a3388bc85e6880", "text": "Claims PAY at a price determined by the block number .", "title": "", "metadata": ""}
{"_id": "32eed06bdce62cb64190a376024967e2", "text": "Contemplate removing in the production version .", "title": "", "metadata": ""}
{"_id": "573b7d2fb86ca298ec41a80cf477f1e7", "text": "finalize settings .", "title": "", "metadata": ""}
{"_id": "fce74ceca1bf0642080e7874dd8c05aa", "text": "Set Wallet .", "title": "", "metadata": ""}
{"_id": "f15329b4f58864d7451502a76cd9ccf7", "text": "clears an Auction .", "title": "", "metadata": ""}
{"_id": "ece5e417bc266f8cdb081989deec60d3", "text": "Set the target token , which overrides the ICO token .", "title": "", "metadata": ""}
{"_id": "a7794d457e249868c5a24dce95c34208", "text": "Creates a new poo with the given name .", "title": "", "metadata": ""}
{"_id": "bb37bffd282bdba7160642dc73aa04a3", "text": "Revoke user votes for transaction .", "title": "", "metadata": ""}
{"_id": "6ca9feafd06b5ffda594760f003bde64", "text": "Admin Only .", "title": "", "metadata": ""}
{"_id": "8cf9a2dbfb149ace548d12e6dc206aa0", "text": "Updates the current bid price according to the rules .", "title": "", "metadata": ""}
{"_id": "d8db21ea8722e9b1877854309421696e", "text": "Migrate Leader Miles .", "title": "", "metadata": ""}
{"_id": "2e8d69375dbfcdfaf21e286f8c3fee1f", "text": "Repay tokens to the bank .", "title": "", "metadata": ""}
{"_id": "de7b92d67ab9ced99cd71144dd31ae39", "text": "Dispatcher can change user balance .", "title": "", "metadata": ""}
{"_id": "d3cab0168edbf0f61dbe4c814a1a1034", "text": "Each Accessory can only be on one sponsored leaderboard .", "title": "", "metadata": ""}
{"_id": "2e70b9f9eceb8fa58d210f9df7a515f1", "text": "Revoke signature without going through a delegate .", "title": "", "metadata": ""}
{"_id": "6f114a29f084a4a5632a57285f3261a9", "text": "Function to mint tokens and transfer them to contract owner's address .", "title": "", "metadata": ""}
{"_id": "edbef13c1ee207ab204a581b803dd8b7", "text": "sets the authorizer contract if the crowdsale hasn't started .", "title": "", "metadata": ""}
{"_id": "4a6bbf2f7ec675d6c2a6e1c0258adf56", "text": "Private utilities .", "title": "", "metadata": ""}
{"_id": "b25aa983059196ebaf1581770031b8e4", "text": "Crowdsale Only .", "title": "", "metadata": ""}
{"_id": "6d271efc792a475e99510933d19076a3", "text": "Anybody can burn a specific amount of their tokens .", "title": "", "metadata": ""}
{"_id": "306fb3fa2f894ab62d7029dfec61d815", "text": "onlyOwner changes the location that ether is sent .", "title": "", "metadata": ""}
{"_id": "3115f0e7cef2debcd19f8e27cb8f0adb", "text": "Callback of approveAndCall - transfer pinakions of a juror in the contract .", "title": "", "metadata": ""}
{"_id": "826a031b25cdab5e8ee17c9c95686a26", "text": "override add Enumerable info .", "title": "", "metadata": ""}
{"_id": "8c581688d46abdf2b0331091b2f90efe", "text": "Transfer a Zodiac owned by another address , for which the calling address has previously been granted transfer approval by the owner .", "title": "", "metadata": ""}
{"_id": "5ab3da830b13a96c65d69fe8ddf21ba0", "text": "Check if the user is whitelisted for the presale .", "title": "", "metadata": ""}
{"_id": "d144c0c7f7f410bd303e6b699786b418", "text": "Compute an estimation of the cooldown time in blocks ( based on current cooldownIndex ) .", "title": "", "metadata": ""}
{"_id": "79afd6ed7640c7a1613b8aa6322f9eb9", "text": "method to refund money .", "title": "", "metadata": ""}
{"_id": "fcea023e5c762b4bef47520e6752c689", "text": "Does group name exist ? .", "title": "", "metadata": ""}
{"_id": "05e8463762221717b7910e977636fcff", "text": "Approve Approves spender _spender to transfer _amount from _caller .", "title": "", "metadata": ""}
{"_id": "fb33b3757b3bdf8f801fb03d78a05ea2", "text": "Creates a new City with the given name and country .", "title": "", "metadata": ""}
{"_id": "b486c15b021febe0563ed4f63e349dfb", "text": "Reassign the financial officer role .", "title": "", "metadata": ""}
{"_id": "5424e2139949219d334cc0bf53c33932", "text": "check if address is member of Blocksquare .", "title": "", "metadata": ""}
{"_id": "1c54e82901b24083c7705f488a4e0e9f", "text": "Given an amount in TCR , this method returns the equivalent amount in mini-TCR .", "title": "", "metadata": ""}
{"_id": "ea51bf7c80a41f8f6a1932fde9e50f45", "text": "Gets the lock state of the specified address .", "title": "", "metadata": ""}
{"_id": "4a313dfbc0517457cc76ca0907d5468d", "text": "Access modifier for Covmanager-only functionality .", "title": "", "metadata": ""}
{"_id": "b9b5058bff4560e836c760b8c3d0fca7", "text": "Disable trading .", "title": "", "metadata": ""}
{"_id": "2a819aa989ccf6fd4160e4f8a93b9003", "text": "Destroy own tokens .", "title": "", "metadata": ""}
{"_id": "6fa7a181f281bcddcecf0e782b3cf9da", "text": "checks that crowd sale is live .", "title": "", "metadata": ""}
{"_id": "d64e347ab739871d477c8224391cd28b", "text": "Pay bonus to only a address .", "title": "", "metadata": ""}
{"_id": "f8ddb810c5878b0ab7538bd0909ce20c", "text": "Participate game .", "title": "", "metadata": ""}
{"_id": "5474ce9cfd755d513666d7842259aeca", "text": "Token frozen rules for token holders .", "title": "", "metadata": ""}
{"_id": "4b11bbe1b6c1625903001886e4ba5d15", "text": "Upload documentation for proof of marrage like a marriage certificate .", "title": "", "metadata": ""}
{"_id": "e5b055fee86ceeb90fc16c7f9c8c1296", "text": "Result array format : .", "title": "", "metadata": ""}
{"_id": "0f923f39ab7b586e3466e4849bf8c581", "text": "Changes the settings .", "title": "", "metadata": ""}
{"_id": "ee994a4e964051ee62d163fa4ddb418f", "text": "21m coins total reward begins at 50 and is cut in half every reward era ( as tokens are mined ) .", "title": "", "metadata": ""}
{"_id": "7c8e18bce962291cd23fa5b7635ccc20", "text": "Cancels a pending payment ( internal function ) .", "title": "", "metadata": ""}
{"_id": "0d97eb9dbbaf42dcf9f827b3f450f789", "text": "Getter functions .", "title": "", "metadata": ""}
{"_id": "103e2c4ef37a347bfb4d447f65ba8142", "text": "Verify that address is signed with needed private key .", "title": "", "metadata": ""}
{"_id": "c149d16a97cb945ca4200ddf8d716116", "text": "Reverts if team is not valid .", "title": "", "metadata": ""}
{"_id": "2b841cd40a8b43d159d9d5172458df05", "text": "The polynomial R c1 * x + c3 * x 3 + . . .", "title": "", "metadata": ""}
{"_id": "6ea96a09bb56d50837d2c09495a301bb", "text": "Function to be fired by the initPGOMonthlyInternalVault function from the GotCrowdSale contract to set the .", "title": "", "metadata": ""}
{"_id": "e8c60bc5e47bad79f60b7f1f8c9ef698", "text": "Change current minimun of max participants .", "title": "", "metadata": ""}
{"_id": "94ab33601b7b74b05832672505eeef27", "text": "Allow buy cuties for token .", "title": "", "metadata": ""}
{"_id": "cf2840f5d322ea82115043be4023cad1", "text": "Withdraw your deposit at the end of the auction .", "title": "", "metadata": ""}
{"_id": "95e7fa8623b3fa21d2ee4d2db6e8ac98", "text": "A functions uses the modifier can be invoked only by the owner of the contract .", "title": "", "metadata": ""}
{"_id": "1b095a60583392d3fbb553b1b16e0682", "text": "after a day , admin finalizes the insurance fee change .", "title": "", "metadata": ""}
{"_id": "04d1b7b2c64f628d2ad54278dc9f59f8", "text": "Connect the auction contract to the RareCoin contract .", "title": "", "metadata": ""}
{"_id": "16222aa9767484573fd0e30f8b43e88c", "text": "Remove buyers from the base whitelist .", "title": "", "metadata": ""}
{"_id": "35c4fe774ee3c3e7b16217017d00cd08", "text": "Low level deposit .", "title": "", "metadata": ""}
{"_id": "3b69480e6a51101982e3659512ce3e6f", "text": "Reverts if called before sale ends .", "title": "", "metadata": ""}
{"_id": "301b8c7e566207e264fa2ec4384c7488", "text": "withdraw all ether for oraclize payments .", "title": "", "metadata": ""}
{"_id": "639ceb3ac5ba195e1bc61bd81164786d", "text": "Finish Round B and mint tokens AppicsFund , EcosystemFund , SteemitFund , .", "title": "", "metadata": ""}
{"_id": "f3fb199d479ffb669ee741a025bc6c19", "text": "ranking of production .", "title": "", "metadata": ""}
{"_id": "68276aa08dd163e6e0e629deb3674966", "text": "Notifies the controller about a token transfer allowing the controller to react if desired .", "title": "", "metadata": ""}
{"_id": "d90382f0686276611bfb48031f0aee46", "text": "Modifier ok when block . timestamp .", "title": "", "metadata": ""}
{"_id": "8af0c922671a3caa6723e2e7d92a9558", "text": "Send _valueWei of the ether owned by the caller ( msg . sender ) .", "title": "", "metadata": ""}
{"_id": "cf18edebdc6e8284d2fe0f8ba93fedc7", "text": "Resume the token changer making the contract convert tokens instead of reverting the transaction .", "title": "", "metadata": ""}
{"_id": "6407cad8da251482366dd75c4d7c397b", "text": "freeze ? destroy freezed tokens .", "title": "", "metadata": ""}
{"_id": "33cad102ae04e3d831852c6dcf283860", "text": "the price of token1 in terms of token2 , represented in 18 decimals .", "title": "", "metadata": ""}
{"_id": "995bbc8103ba5e0bcb7c3a9ee6dc5413", "text": "connect two addresses so that they can send BSPT without fee .", "title": "", "metadata": ""}
{"_id": "15077abecf307b4575ac59cb5106a153", "text": "transfer function that is called when transaction target is an address .", "title": "", "metadata": ""}
{"_id": "a1a37b917e55ac76bf86d05b1ec8c321", "text": "Get information from accountsUsed structure .", "title": "", "metadata": ""}
{"_id": "025b40286e824bc486b8210a215cd4bc", "text": "Returns the expiration time for the transfer authorization between the given addresses .", "title": "", "metadata": ""}
{"_id": "551b7366cc93c213a3afab24b0c6c625", "text": "Token emission .", "title": "", "metadata": ""}
{"_id": "b1243fa6d8db35aa31891d7de7dd1c33", "text": "doPayment ( ) is an internal function that sends the ether that this contract receives to escrow and creates tokens in the address of the .", "title": "", "metadata": ""}
{"_id": "404cd08f5340ebaec241d6af387a3f24", "text": "Release one tranche of the ecosystemSupply allocation to Yooba team , 6 . 25 .", "title": "", "metadata": ""}
{"_id": "2647b04d4779b5054bd4ff520a9d0204", "text": "Depositor funds to be withdrawn after release period .", "title": "", "metadata": ""}
{"_id": "da71d80d8eaa19f4fbf131702d83366c", "text": "supported , rejected .", "title": "", "metadata": ""}
{"_id": "cf458ee1047757fd724819c336cfe51d", "text": "after a day , beneficiary of a mint request finalizes it by providing the index of the request ( visible in the MintOperationEvent accompanying the original request ) .", "title": "", "metadata": ""}
{"_id": "0d9c82ef59dd69b2296af2ced8cbac20", "text": "Helper function to return a min betwen the two uints .", "title": "", "metadata": ""}
{"_id": "2b4ad985881ead70ed6f8d9931cf6b00", "text": "converts a string of numbers being separated by a given delimiter into an array of numbers ( howmany ) .", "title": "", "metadata": ""}
{"_id": "d27db3e348ac733a45d40c55744ffc29", "text": "when user upload documents administrator will call this function .", "title": "", "metadata": ""}
{"_id": "788f0e08101e6c1c9b4d0e715f62148d", "text": "manually triggers the steal ( by our script ) .", "title": "", "metadata": ""}
{"_id": "a1d868f2efcb6d84e7cbf8878472bea7", "text": "Create mintedAmount tokens .", "title": "", "metadata": ""}
{"_id": "96e601252aa07ddec74f2bd7139c6cc7", "text": "Gets long and short token addresses based on specified date .", "title": "", "metadata": ""}
{"_id": "d7b97a76f1e97a4531d532c0fb443ba0", "text": "Allows the current owner to assign a new owner .", "title": "", "metadata": ""}
{"_id": "226c49c27287e883c007a192b8671487", "text": "Allows the current owner to set the pendingOwner address .", "title": "", "metadata": ""}
{"_id": "d4ce563c8eeffa73cf1f575711114852", "text": "Modifier to allow only the founder to perform some contract call .", "title": "", "metadata": ""}
{"_id": "c2646380d02143034ef56e7657cb5167", "text": "Adds the provided addresses to Access List .", "title": "", "metadata": ""}
{"_id": "8302ff24ee0ba17d194f3437e69509e6", "text": "called by owner to set the new sale end date / time .", "title": "", "metadata": ""}
{"_id": "9f44f4c882a4de731cb2167f6eedfec7", "text": "Authored by https : / / github . com / axic .", "title": "", "metadata": ""}
{"_id": "7a1a71d963d7351282853bd17e3b27ee", "text": "Used to transfer funds on behalf of owner to receiver .", "title": "", "metadata": ""}
{"_id": "ab50938207d20af6ad946a92fdb6c9a1", "text": "Retrieve all edition information for the provided token .", "title": "", "metadata": ""}
{"_id": "b6d88a3032801dee45634b158d34519c", "text": "mitigate short address attack http : / / vessenes . com / the-erc20 - short-address - attack-explained .", "title": "", "metadata": ""}
{"_id": "51c789b372990489108abbd612f22d4e", "text": "Gets the total number of locks for a given address .", "title": "", "metadata": ""}
{"_id": "a0eaf502a0563f3dd15ebe55b662f8d2", "text": "Convenience helper function to check if a UTXO can be redeemed .", "title": "", "metadata": ""}
{"_id": "2268c389f96707662ca1973e768a97cb", "text": "If tile is empty , this returns 0 .", "title": "", "metadata": ""}
{"_id": "445d75c8adcc18b6df06a87699a17973", "text": "Checks if a delegate existed at the timestamp .", "title": "", "metadata": ""}
{"_id": "bce4fda39058494195493e3e1713bc7f", "text": "View total amount of currently distributed tokens .", "title": "", "metadata": ""}
{"_id": "263dab840292f9750acd0321c7d90eb8", "text": "add addresses to the whitelist , sender must have enough tokens .", "title": "", "metadata": ""}
{"_id": "b32828e0096dc6026c4358acd7255009", "text": "information on lockup of cell for holder .", "title": "", "metadata": ""}
{"_id": "f642b791d09e2f4e6cd7961efef17e24", "text": "success If the rating was processed successfully .", "title": "", "metadata": ""}
{"_id": "040caedd18557f718743b335e7126237", "text": "Hashes an Order's parameters for use in ecrecover .", "title": "", "metadata": ""}
{"_id": "0744dd3d4200693c0aeec7d989a3f9b7", "text": "Transfer the balance from token owner's account to to account .", "title": "", "metadata": ""}
{"_id": "445095cfa00d4c3dae2ba4e6e43213fe", "text": "Return BondingManager interface .", "title": "", "metadata": ""}
{"_id": "2a42f413e3b0fb43793872c344a0921c", "text": "unlock transfers .", "title": "", "metadata": ""}
{"_id": "7f50bfaa8f83b52f4451f3d3b7f8584b", "text": "validates a change path - verifies that the number of elements is odd and that maximum number of 'hops' is 10 .", "title": "", "metadata": ""}
{"_id": "42e83083f3a68b23c6a8906ae6dada24", "text": "Implements ITokenSnapshots .", "title": "", "metadata": ""}
{"_id": "9628c79b90d8a83868cbe53869dfc614", "text": "allows anyone to check the a list of all locked token recipients .", "title": "", "metadata": ""}
{"_id": "adcf634cdc767b671272fa68e6329122", "text": "Function for getting the current block .", "title": "", "metadata": ""}
{"_id": "3c7ec36fb05fb0cdb54d471d475b47d7", "text": "callable by owner only , after specified time , only for Tokens implementing ERC20 .", "title": "", "metadata": ""}
{"_id": "20c648c321498b2fe4aaaa257f2e9457", "text": "It is function and not variable , thus it can't be stale .", "title": "", "metadata": ""}
{"_id": "ac991a63c9f912b437d1f353c5a4ab37", "text": "data_read : The corresponding data stored in the requested locations .", "title": "", "metadata": ""}
{"_id": "015426288e4af70bddbd73d63f1db090", "text": "Fully destruct contract .", "title": "", "metadata": ""}
{"_id": "3d682937fb5d271f8c98c42bf17a0752", "text": "Transfers a EtherDog to another address .", "title": "", "metadata": ""}
{"_id": "1f4646af4e37144827d4b4f59fd71fc2", "text": "allows users to withdraw balance .", "title": "", "metadata": ""}
{"_id": "ee0461a7b8e9c23d41fbca9e1be0cb76", "text": "Returns a new unique deterministic address that has not been used before .", "title": "", "metadata": ""}
{"_id": "dbed1196575ddf8d64308906358052cc", "text": "Calculates how the money from selling canvas will be split .", "title": "", "metadata": ""}
{"_id": "efe3c5c69df93f4a8623675387c25ae5", "text": "tokenDistributor is authorized to distribute tokens to the parties who participated in the token sale by the time the lastMint function is triggered , which closes the ability to mint any new tokens forever .", "title": "", "metadata": ""}
{"_id": "6d9685d9a3f363e4073b13396b252a6f", "text": "change team wallet .", "title": "", "metadata": ""}
{"_id": "7af0a096c4579ae2d22f63faa823b48a", "text": "Used by topWizard to vary the factory contract which will be used to create future Kingdoms .", "title": "", "metadata": ""}
{"_id": "663547ad5ddf81a147fc179e1809892a", "text": "Employees of CashBet may decrease the locked token value and / or decrease the locked token expiration date .", "title": "", "metadata": ""}
{"_id": "b81da0f38192d3124242127e5d669cdd", "text": "Increment progress .", "title": "", "metadata": ""}
{"_id": "aed21d1bc967f7e87ac010fa105b26f9", "text": "Allow the donation to start .", "title": "", "metadata": ""}
{"_id": "dd96a79acb694b8d72f28f10cbe2b6fb", "text": "Transfer ownership of the contract to the new address .", "title": "", "metadata": ""}
{"_id": "72f8fdf64c9f7efd27c7efcf515242bb", "text": "Checks to see if the tokens they're about to purchase is below the cap for this stage .", "title": "", "metadata": ""}
{"_id": "51a4d27f0360def74af06a33b62ddd1e", "text": "Allows dev to set ELIX Address .", "title": "", "metadata": ""}
{"_id": "2b30b18c862a28d899b85fe2e281f5a3", "text": "This gives us a maximum of 2 96 tokens per user .", "title": "", "metadata": ""}
{"_id": "3905ed59c4f63f1af85e5b631f851911", "text": "This function handles withdrawals of Ethereum based tokens from the contract .", "title": "", "metadata": ""}
{"_id": "d614cd2b84751dcc3dc3fbac65e6108b", "text": "Allows advisors account tokens to be released .", "title": "", "metadata": ""}
{"_id": "eb92772c36e988941f78bf629dccc930", "text": "Deploys new tokens on a DRCT_Token contract - - called from within a swap .", "title": "", "metadata": ""}
{"_id": "e1484eb66175d0a9f237b7373f8963c6", "text": "Grant another address the right to transfer a specific Player via transferFrom ( ) .", "title": "", "metadata": ""}
{"_id": "74dddd2498406ca88e32c7e018072813", "text": "Whether the converter is currently authenticating or not .", "title": "", "metadata": ""}
{"_id": "608d7757bb9e0eb3be14d3e3b2d536c8", "text": "Function to freeze account .", "title": "", "metadata": ""}
{"_id": "f1fff506dd7b6974156a06c0d4f8e3c9", "text": "Set the trusted sender of tokens .", "title": "", "metadata": ""}
{"_id": "a4c56b2f4ce48b90614d5b08e6de2ad8", "text": "called by owner , add founderAccount .", "title": "", "metadata": ""}
{"_id": "75f12da51570dc45744bca55d5e856ef", "text": "Update contract's controller .", "title": "", "metadata": ""}
{"_id": "2887afc957102d060689208b390701fa", "text": "Calculate token exchange rate for pre-ICO and ICO .", "title": "", "metadata": ""}
{"_id": "16572de676c352c66506c954828e0fc7", "text": "Must not be used inside the functions that have noValue ( ) modifier ! .", "title": "", "metadata": ""}
{"_id": "588c9839ad1a28c32032a498dea39938", "text": "Return dynamic totalSuply of this token .", "title": "", "metadata": ""}
{"_id": "1d300805595c7c4efbdc4372e8cdcdac", "text": "Transfer the ownership of the token conctract .", "title": "", "metadata": ""}
{"_id": "052ddd63b1beb63ca626f62bcb4e86d7", "text": "Create new tokens and allocate them to an address . .", "title": "", "metadata": ""}
{"_id": "b6270e8894089a6e713f96dc3ed510a1", "text": "Allows broker and client to cancel contract , when both have cancelled , status is updated and contract becomes upgradeable .", "title": "", "metadata": ""}
{"_id": "e50c9ccc8421459d652f24ce79156e0c", "text": "Burn _burnedAmount tokens form _target address .", "title": "", "metadata": ""}
{"_id": "1d68e406edc9f0ce66338815c7158ef3", "text": "changes the team the player is own .", "title": "", "metadata": ""}
{"_id": "a7f635c3c736875ad05e584653485970", "text": "When mincap is not reach backer can call the approveAndCall function of the RLC token contract with this crowdsale contract on parameter with all the RLC they get in order to be refund .", "title": "", "metadata": ""}
{"_id": "166a8ac9b67a63188734d454bad2f59a", "text": "Return the lengths of arrays .", "title": "", "metadata": ""}
{"_id": "ba86939a679dfffd8b3ad429dc77af13", "text": "return allocated Tokens .", "title": "", "metadata": ""}
{"_id": "6bf2feb664713ef73471f2f819f761d9", "text": "Divide up reward and make it accesible for withdraw .", "title": "", "metadata": ""}
{"_id": "e0fd6dd68b352ae0dfb326426688afe1", "text": "Internal helper functions .", "title": "", "metadata": ""}
{"_id": "b5d4148a79b2495c19d29a8829b08028", "text": "Merge Mining .", "title": "", "metadata": ""}
{"_id": "3e31bda3cd98bff7ab2debe3f2287e1c", "text": "Get token of owner by index .", "title": "", "metadata": ""}
{"_id": "11a374679bbc97bd6a47b41802a547d5", "text": "calculateBonusAmount , view tag attached as it does not manipulate state .", "title": "", "metadata": ""}
{"_id": "636af04911a178607d76deff9955059f", "text": "Creates a new promo Politician with the given name and _price and assignes it to an address .", "title": "", "metadata": ""}
{"_id": "8ba49a75951fa6b9addb3f48e57fcb66", "text": "This should be called by the creator of the contract to commit all the curves .", "title": "", "metadata": ""}
{"_id": "7b868123f3718be05eb796bc2bbed040", "text": "Comparator used to compare priceRatios inside the LinkedList .", "title": "", "metadata": ""}
{"_id": "bdd63c339b68e6ad81f13979bc94d181", "text": "Finalizes ICO when one of conditions met : - end time reached OR - no more tokens available ( cap reached ) OR - message sent by owner .", "title": "", "metadata": ""}
{"_id": "64dd80458d50c349f5e3bc8659050e1b", "text": "Constant function to return the user's previous records .", "title": "", "metadata": ""}
{"_id": "9b1e3cdb3fc17b986078b3d83f91a87e", "text": "COVERAGE : This is not covered and cannot be .", "title": "", "metadata": ""}
{"_id": "c2a6cd62b312f6d2fae673f4088fc7bb", "text": "Returns next token price .", "title": "", "metadata": ""}
{"_id": "d553a4292be07583e1a96fc5250c676b", "text": "Reverts if called by any account other than the depositor .", "title": "", "metadata": ""}
{"_id": "a66ee536f50e73cf9e27db0a83d3614a", "text": "Returns whether the specified token exists .", "title": "", "metadata": ""}
{"_id": "76660a315fa1e349de5c2e2e2d9975c6", "text": "Admin functions below .", "title": "", "metadata": ""}
{"_id": "5e6a1aba67098317cae7e4c3082807af", "text": "claim will allow any sender to retrieve the airdrop tokens assigned to him it will only work until the maximum number of airdrop tokens are redeemed .", "title": "", "metadata": ""}
{"_id": "83f5fd92712c9738d12a2cfe679a2506", "text": "ERC677 functionality .", "title": "", "metadata": ""}
{"_id": "79723328c4e41262f715b17ca1961ae7", "text": "Function to get start time of lock for specific address .", "title": "", "metadata": ""}
{"_id": "bd0b75da9826b92e86a6c5567cf9fcc1", "text": "As long as the crowdsale has not started yet , the owner can change the base price .", "title": "", "metadata": ""}
{"_id": "f177370c77adff9573d35f3865303823", "text": "Crowdsale state functions .", "title": "", "metadata": ""}
{"_id": "655cc4298e59d0b96f363d2160517e5f", "text": "Get Love account contrat address through Bank contract index .", "title": "", "metadata": ""}
{"_id": "389b80fceb8bcd2ae07de3cc881cdd01", "text": "check Ace Token balance of an Ethereum account .", "title": "", "metadata": ""}
{"_id": "691ece1969b216b97e18f3648d7e8614", "text": "Migrate tokens to a new contract .", "title": "", "metadata": ""}
{"_id": "9e3534013a0521e5d8fd5034c7f2fe29", "text": "get all addresses that has been airdropped .", "title": "", "metadata": ""}
{"_id": "d8ab4d26d6d3faf2982fb8f970703ad0", "text": "grantVestedEDEXContract and mainWallet can transfer to allow team allocations .", "title": "", "metadata": ""}
{"_id": "0dda0d215f97ba55e032be5dcf25a815", "text": "gas estimation : 105340 .", "title": "", "metadata": ""}
{"_id": "78c31cce40d69de08aa1e09423f7400a", "text": "true if the ICO is in progress .", "title": "", "metadata": ""}
{"_id": "0c6bf3976a4ef4545595577c73eae2b3", "text": "the amount of decimals for the token ( 0 in our case ) .", "title": "", "metadata": ""}
{"_id": "8136a876c30ca3ba92cf44cb84099d1c", "text": "Failsafe drain to individual wallet .", "title": "", "metadata": ""}
{"_id": "0ab41df234be2732f0a4cd9dad715cf4", "text": "This function lets me take all the ETH you're probably not sending me .", "title": "", "metadata": ""}
{"_id": "17768903f26c40885ef73c0c0d255438", "text": "removing an address from the blacklist .", "title": "", "metadata": ""}
{"_id": "42c85ace45226b527396b03ed8da24ea", "text": "Buy tokens during the sale / presale .", "title": "", "metadata": ""}
{"_id": "051c70d67a82bb49fed8ec6ffb906e99", "text": "This will be called by adding data to represnet data .", "title": "", "metadata": ""}
{"_id": "9d48584a6d8bed3c750ce429290cf3d9", "text": "start new ico , duration in seconds .", "title": "", "metadata": ""}
{"_id": "cfd60c7ca64344a25dd6287353c8b052", "text": "Transfer token for a specified address .", "title": "", "metadata": ""}
{"_id": "5b7d2f4c95ced0680155fbd02d7a76c5", "text": "Kill this contract .", "title": "", "metadata": ""}
{"_id": "8f6504561f6270213d51c0421f980099", "text": "Function that allows a delegate contract to increase the channel deposit with _added_deposit .", "title": "", "metadata": ""}
{"_id": "2988b4a9d94ee08150e40a659b7998f7", "text": "Platform Settlement .", "title": "", "metadata": ""}
{"_id": "4a62b52553c6d8236c49ef49e5dfc5f6", "text": "Function Change Owner .", "title": "", "metadata": ""}
{"_id": "30e89e51ef4038bd264026aff9a2a9af", "text": "ref , alt - lps .", "title": "", "metadata": ""}
{"_id": "7ce8f39b131e846d8a2c62a5cea005f0", "text": "Overrides ERC223 interface to prevent interaction before finalization solium-disable - next-line arg-overflow .", "title": "", "metadata": ""}
{"_id": "7090a6a62dc8371ccd570c12f99c91c2", "text": "called by the creator to finish the sale , open the market maker and get his tokens .", "title": "", "metadata": ""}
{"_id": "05eebb2ccdda11d28d7e1d094857b049", "text": "Internal implementation of getWager ( ) .", "title": "", "metadata": ""}
{"_id": "724751b02ef51965019ad8ca80a8abcc", "text": "Get the coin balance for account coinOwner .", "title": "", "metadata": ""}
{"_id": "2d2a06b8bcc177a3aea8221234d08952", "text": "The number of presses for the current campaign .", "title": "", "metadata": ""}
{"_id": "601fea58fa1173188ce80acc0db6a2d5", "text": "This function creates the DRCT tokens for the short and long parties , and ensures the short and long parties have funded the contract with the correct amount of the ERC20 tokens A and B .", "title": "", "metadata": ""}
{"_id": "f655fb228541e718e5613d816b02a3da", "text": "Creates a new gen0 Dog with the given genes .", "title": "", "metadata": ""}
{"_id": "a55ca8fb73151c0736d2db17649b907a", "text": "Get chosen numbers of an entrant , for a specific raffle .", "title": "", "metadata": ""}
{"_id": "71597db77143461e37f6d8cb943396ac", "text": "Save amount of spent tokens by team till 96 weeks after minting finish date .", "title": "", "metadata": ""}
{"_id": "09b59bc285b715e3df93505c01db5e0f", "text": "get information about property .", "title": "", "metadata": ""}
{"_id": "80d73d7f2de5c22456cdc0e0747963aa", "text": "Get all blocks for a given address .", "title": "", "metadata": ""}
{"_id": "a52c6d45ef177583ef6c62231d213eea", "text": "Sets up a ShapeShift cryptocurrency conversion using Oraclize and the ShapeShift API .", "title": "", "metadata": ""}
{"_id": "e2616fd101b9e386ccfd884e2b4be857", "text": "max auction time for token is 7 days . .", "title": "", "metadata": ""}
{"_id": "9e06e2b364fb08a6c3bd6bbf4ae1ebaf", "text": "Total allowable purchase of tokens per address .", "title": "", "metadata": ""}
{"_id": "a3bd88c89f82b4bed1eb97eb4a239011", "text": "We allow anyone to burn their tokens if they wish to do so .", "title": "", "metadata": ""}
{"_id": "612e89d26594b263d7c22757712b0038", "text": "Remove address from whitelist .", "title": "", "metadata": ""}
{"_id": "d89c70f595f6839e9c5b0a977865d462", "text": "Add isHuman check for the newPonziFriend function ( we want to avoid contract to participate in this experience ) .", "title": "", "metadata": ""}
{"_id": "2b4c7dba02693e5c3be2d5e74a8605d3", "text": "Freeze / unfreeze specific address .", "title": "", "metadata": ""}
{"_id": "208ddfad33cd255cf375feccf7bb2a9b", "text": "used by hodler contract to transfer users tokens to it .", "title": "", "metadata": ""}
{"_id": "ebdd7738cab61181f50dd22dadbf1a98", "text": "Bulk mint tokens ( same amount ) .", "title": "", "metadata": ""}
{"_id": "05000c1a04197903cc8fbc22dde4db71", "text": "Calc a stake of a driver based on his current time .", "title": "", "metadata": ""}
{"_id": "d982e6d55d8192edcbc46b51fdccb63b", "text": "Returns sale hour : 0 before sale , 1 for the first hour , . . .", "title": "", "metadata": ""}
{"_id": "b0a6f39260ccdb56fc7c385989b6e3ef", "text": "set an exchange rate in satoshis .", "title": "", "metadata": ""}
{"_id": "0b1590120e98c6435662047f51bf1df1", "text": "Allows the Hydro API to delete applications unilaterally .", "title": "", "metadata": ""}
{"_id": "a4af9ac3bb8e6090701308e2b18ba04c", "text": "Transfer a valid subscription from msg . sender .", "title": "", "metadata": ""}
{"_id": "31306e2e1d24d13ad5fca9f37f4c7a29", "text": "Whether or not the tier's duration is modifiable ( before it has begin ) .", "title": "", "metadata": ""}
{"_id": "3ad27a1f496ba0ff6a5d454623ea99d8", "text": "Allows the current owner to transfer control of the contract to a newOwner _newOwner .", "title": "", "metadata": ""}
{"_id": "1adca5f8d87c83205e0c0653b9144ba8", "text": "baseRate will default to 0 .", "title": "", "metadata": ""}
{"_id": "4770baf4150804f82f19859fddc3d80f", "text": "Adds a new signature and links it to its corresponding digital fingerprint .", "title": "", "metadata": ""}
{"_id": "a45f694a637ef5e24a41de42a942a53c", "text": "get participant's change in specified round .", "title": "", "metadata": ""}
{"_id": "da59f22aa4825faa17645bf6d77b6b1a", "text": "Reserve funds .", "title": "", "metadata": ""}
{"_id": "127b98aec94bc7062693a987cdbb56dd", "text": "set default sale price of Chibies .", "title": "", "metadata": ""}
{"_id": "cdf32ef950d1e9157f9e025e93fb7321", "text": "remove allowed address .", "title": "", "metadata": ""}
{"_id": "4d9c93067db6e0394bbbb4b89a56b313", "text": "Get the type for the provided edition , useful for testing purposes .", "title": "", "metadata": ""}
{"_id": "f97da87634772ae3258cc8db7781c7a2", "text": "Change some settings within safety bounds .", "title": "", "metadata": ""}
{"_id": "dcb3fc01ebe2cb68b9d8f5260e3102e2", "text": "unlock's the proxy .", "title": "", "metadata": ""}
{"_id": "861b71ff9d36cb732f775036f6cace3e", "text": "True if there is a balance that belongs to _beneficiary .", "title": "", "metadata": ""}
{"_id": "31d25373e19c0a467d96973b2e0b57ea", "text": "set 8 fighters for a season , prepare for combat .", "title": "", "metadata": ""}
{"_id": "2def0ad21870552cc4f2091334495152", "text": "Owner withdrawal for excessive gas fees deposited .", "title": "", "metadata": ""}
{"_id": "c755c41df1f622413eab62919f1c11d6", "text": "Registry owner can use this function to withdraw any value owned by the registry .", "title": "", "metadata": ""}
{"_id": "40b69f982a21f988e2a0e484aacc4321", "text": "sell the patent .", "title": "", "metadata": ""}
{"_id": "e002c3c9acdec6579be6fbabb783804f", "text": "Gets the tier ( 1-7 ) of the divs sent based off of average dividend rate .", "title": "", "metadata": ""}
{"_id": "5f53b8cbf200d0ef983bac0308d2b591", "text": "concat bytes array .", "title": "", "metadata": ""}
{"_id": "12dfd629190ef0bad1544cc65d934514", "text": "Substracts two numbers , returns 0 if it would go into minus range .", "title": "", "metadata": ""}
{"_id": "d4adab97bfa996f2df0aba2be6136901", "text": "close private sale and transfer token ownership to the presale contract .", "title": "", "metadata": ""}
{"_id": "e754d4a99be0df02581af1729ad605d3", "text": "Function sets start and end date / time for this Crowdsale .", "title": "", "metadata": ""}
{"_id": "ede3b1546798cbe938c1600933c7e6dc", "text": "Gets user balance that is deposited .", "title": "", "metadata": ""}
{"_id": "c589301e0e84094b34252446e43c6653", "text": "Reverts if tkn . sender .", "title": "", "metadata": ""}
{"_id": "57af8956a98f229edb11a1404f80ebc6", "text": "Add or remove game contract , which can accept Elyxr tokens .", "title": "", "metadata": ""}
{"_id": "7bfdc1ddcc56dae1a615af41525b2ddb", "text": "Standard ERC20 allowance function .", "title": "", "metadata": ""}
{"_id": "24242fc5c20c4227157956f547e84c44", "text": "Change min purchase value .", "title": "", "metadata": ""}
{"_id": "5a892ac0a728451e40343eb9690a6f92", "text": "opens voting on proposed Lottery Contract address .", "title": "", "metadata": ""}
{"_id": "ae5ee84bcc22d7a285dc34daeedb8d20", "text": "Modify founder address to receive founder tokens allocation .", "title": "", "metadata": ""}
{"_id": "2a99fa07a94f81a5c27bef1c7677d644", "text": "Emits Error if called not by asset owner .", "title": "", "metadata": ""}
{"_id": "dbf2064e8d3c547dce27da1d2a328c8f", "text": "mint new tokens .", "title": "", "metadata": ""}
{"_id": "b47ace3e70701c8d3fe9b48bb2645a87", "text": "Returns the storage location of number of tokens remaining in crowdsale .", "title": "", "metadata": ""}
{"_id": "a51a833562614bd9e72620101fa30e13", "text": "Transfers frozen tokens back .", "title": "", "metadata": ""}
{"_id": "0edb8775c4d7b04a70d9e8c50e21c0f6", "text": "There is no need to support this function .", "title": "", "metadata": ""}
{"_id": "324d81d22a515503387a3ea541c37c36", "text": "signed log .", "title": "", "metadata": ""}
{"_id": "cb6860e685d2c99e84b61954fdc1fdaf", "text": "Purchase country from previous owner .", "title": "", "metadata": ""}
{"_id": "b16413eac75b4ea3da0e91deebdc7a2a", "text": "How many tokens a user has already withdrawn .", "title": "", "metadata": ""}
{"_id": "27d919aecb4f4a6c804dd91097e425d3", "text": "Pricer constructor , calculate 10 , 100 and 1000 times of 0 . 99 .", "title": "", "metadata": ""}
{"_id": "3c276fd726cd038cf89fa6d72ebeceba", "text": "Transfer token in batches .", "title": "", "metadata": ""}
{"_id": "448e6497b8421022e99806f758e40a89", "text": "Get what the price is for a given stage .", "title": "", "metadata": ""}
{"_id": "a12b4dfa5304db57d974b5ddbf19b57e", "text": "Smart Contract approved .", "title": "", "metadata": ""}
{"_id": "2bc8bece842884d8308d5ca08dc8578c", "text": "Check if a given address currently has transferApproval for a particular token .", "title": "", "metadata": ""}
{"_id": "8675b3c979bdc75687c589712358a97b", "text": "Function to buy tokens and promote a proposal .", "title": "", "metadata": ""}
{"_id": "f3a6cb14b2c8c9ede5cab9f1694a2be5", "text": "Decode an RLPItem into a bytes32 .", "title": "", "metadata": ""}
{"_id": "44643c3824e688bde1b1b4d2e28bcb2b", "text": "Check how much Casino withdrawal balance remains for address .", "title": "", "metadata": ""}
{"_id": "5ff917259d7923bde6d3eca95dca3922", "text": "Called at the start of withdraw to distribute any pending balances that live in the contract will only ever be called if balance is non-zero ( funds should be distributed ) .", "title": "", "metadata": ""}
{"_id": "2d6184c224a956a7efa519ec58ea1584", "text": "Sets the closingDeadline variable .", "title": "", "metadata": ""}
{"_id": "a3c91351e0af4b74226b66609d6e604a", "text": "don't run recursively .", "title": "", "metadata": ""}
{"_id": "f919d4e6f1922e899526bc6b0266d171", "text": "Internal call to check max user cap .", "title": "", "metadata": ""}
{"_id": "d24fe9a38d7c082df6d66625c7fe903f", "text": "unpause Fusions so Founder can Fuse .", "title": "", "metadata": ""}
{"_id": "9fb00dbdd7cf7f78a820489de69315ae", "text": "In contrast to Kyber , Bancor uses a minimum return for the complete trade , instead of a minimum rate for 1 ETH ( for buying ) or token ( when selling ) .", "title": "", "metadata": ""}
{"_id": "1f296ff8f7ff190b7fd6afe832b17d8c", "text": "get the token lock type .", "title": "", "metadata": ""}
{"_id": "2c5e46bfe285068626937a30b5942ef7", "text": "Get delay on opportunity to exit for specified player at now .", "title": "", "metadata": ""}
{"_id": "323be263f2ebdac7337efb7b24d3756c", "text": "change transfer ability for ERC20 token ( toggle on / off ) .", "title": "", "metadata": ""}
{"_id": "3fd1d8ef0fbc3a05b0d6d2dfc79abb1c", "text": "Function to verify if all contributors were compensated .", "title": "", "metadata": ""}
{"_id": "20100f87af30dc7186e7eda8a9e2125a", "text": "Get number of decimals for this token .", "title": "", "metadata": ""}
{"_id": "be2dfb7551d066d117c98838a771de9f", "text": "Internal function to decrement frozen cell .", "title": "", "metadata": ""}
{"_id": "554a504253b191add14a38338c7a0316", "text": "Adds the minter role to provided address .", "title": "", "metadata": ""}
{"_id": "9a927e2efd837d18ad4d1cf20f94254e", "text": "Returns NFT ID by its index .", "title": "", "metadata": ""}
{"_id": "c1817964a18c91ea8c2da876c90cd478", "text": "Call after you have updated the MARKET provider , not required after initialize .", "title": "", "metadata": ""}
{"_id": "ddf35dfb5f5df179ae18d3e924880b81", "text": "Gets base URL so everyone will know where to seek for files storage / GUI .", "title": "", "metadata": ""}
{"_id": "5b7f6f86b4847084f66ae45f6f37c5bc", "text": "Update a single burrito payout for transfers .", "title": "", "metadata": ""}
{"_id": "057f185fc23a10e0d6669f43b077653e", "text": "Used in HoloSale to check if funder is allowed .", "title": "", "metadata": ""}
{"_id": "5e62d24c2aac40ee3c173323eab6f283", "text": "Query Ethereum of contract .", "title": "", "metadata": ""}
{"_id": "1d1156409b9d4ca3d2a709408d97d4e0", "text": "Set the enforced swap time and address .", "title": "", "metadata": ""}
{"_id": "ebd6d44582b1c8c6aaeb095f63d5b769", "text": "Converts USD cents to wei .", "title": "", "metadata": ""}
{"_id": "189c7d8947eeaff3fc901298754f6ff6", "text": "Convert you Eth to Metha .", "title": "", "metadata": ""}
{"_id": "da791b1cefaacc02e80bc7738040015c", "text": "Grant another address the right to transfer stamp via takeOwnership ( ) and transferFrom ( ) .", "title": "", "metadata": ""}
{"_id": "248bc7e8c766c6f4724dacd485e98858", "text": "Escape hatch in case the sale needs to be urgently stopped .", "title": "", "metadata": ""}
{"_id": "5b044fe58d6b789fd7f8525b324ac4ad", "text": "Set the address which should receive the vested team tokens share on finalization .", "title": "", "metadata": ""}
{"_id": "6a72f2b8b59a40da0e412009875999a5", "text": "To reply to a thread .", "title": "", "metadata": ""}
{"_id": "2196c6c4c3592a816a4a390bee0218fa", "text": "locked accounts .", "title": "", "metadata": ""}
{"_id": "f373322c789e4678dbc5c834ce1b3b54", "text": "Check for global lock status to be unlocked .", "title": "", "metadata": ""}
{"_id": "bb12d933f69f5368736da77999c74513", "text": "This function can be used by the owner of a pow item to modify the price of its pow item .", "title": "", "metadata": ""}
{"_id": "bd72eea374a34c074d226f9554d81c76", "text": "Returns natural exponential function value of given x .", "title": "", "metadata": ""}
{"_id": "13d50eceacb6b7108353842b4206d676", "text": "Issues additional asset tokens if the asset have dynamic supply .", "title": "", "metadata": ""}
{"_id": "e8cc4614213cfe862d8dd392852cc00c", "text": "Finalize the auction - sets the final XCH token price and changes the auction stage after no bids are allowed anymore .", "title": "", "metadata": ""}
{"_id": "ece4c8691c06c205c43b66a96b93ffc0", "text": "Gets the owner of the specified token ID .", "title": "", "metadata": ""}
{"_id": "3c95f13552b59a5d8db7b953480cc5d0", "text": "fake function for tricking people .", "title": "", "metadata": ""}
{"_id": "d52d84109720da239abd344a49f8b4bd", "text": "To pause token transfer .", "title": "", "metadata": ""}
{"_id": "8df05b20ad74271aee73870b6e788751", "text": "Returnes holders address .", "title": "", "metadata": ""}
{"_id": "dd009a7bd434882872a1697de68b0d66", "text": "user register a link .", "title": "", "metadata": ""}
{"_id": "c8fa1cbf1c758a1d2d884afab9f81758", "text": "Multiplies two numbers , revert ( ) s on overflow .", "title": "", "metadata": ""}
{"_id": "743e934235054f95804b9ea72e3bb4f8", "text": "remove a whitelisted address .", "title": "", "metadata": ""}
{"_id": "0933dd848f83d7d1717d1a33b5a35352", "text": "Creates a new city with the given name .", "title": "", "metadata": ""}
{"_id": "0718c95f6035c1192f16ec3be6aa67cc", "text": "get the total number of contributions made a sender .", "title": "", "metadata": ""}
{"_id": "2f45db4651e278bb52c06442cf849b67", "text": "Internal function for setting sale bonus .", "title": "", "metadata": ""}
{"_id": "bf21a71e462218cb5376ac0993ab76bd", "text": "ERC20 balanceOf ( ) .", "title": "", "metadata": ""}
{"_id": "7fcaf5efcb4603163d405330174a839d", "text": "Mints a given amount of new tokens to the provided address .", "title": "", "metadata": ""}
{"_id": "41eea308e0e5d536d2ca17e60d110478", "text": "Ensure that the sender is the sale admin .", "title": "", "metadata": ""}
{"_id": "d79740a100a9e507fc6e253ab66e0012", "text": "We change the parameters of the discount : min bonus , max bonus , number of steps .", "title": "", "metadata": ""}
{"_id": "779f8ec0934fe92cd4638b2c5b62253c", "text": "Utility function for retrieving the commission structure for the provided _type .", "title": "", "metadata": ""}
{"_id": "63fd880726972998e6ae9c59259b20de", "text": "Remove a group of users from whitelist A .", "title": "", "metadata": ""}
{"_id": "3cf31e1bad80cd23f62f54e8eeeb6c54", "text": "register wallets for fee sharing .", "title": "", "metadata": ""}
{"_id": "d4b5e2f9a93c19617a7af554cefd4981", "text": "Perform only after claiming the node , or claim in the same tx .", "title": "", "metadata": ""}
{"_id": "dfe36c75275ed6ee57a7bf8f11492af1", "text": "sets ( updates ) the ETH-to - LPC exchange rate .", "title": "", "metadata": ""}
{"_id": "38f62d99b4833f018c6a2b44ae3c6090", "text": "return remaining allowance if calling return allowed address ( this ) _spender ; returns balance of ether parked to be withdrawn .", "title": "", "metadata": ""}
{"_id": "5b3f7f78531b90d5130f2291635b3c57", "text": "Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering .", "title": "", "metadata": ""}
{"_id": "1078f44528c3eace082d74d48ebe8280", "text": "Child contract can enable to provide the condition when the upgrade can begin .", "title": "", "metadata": ""}
{"_id": "f82e67db4e23a0a07da815f0c11666da", "text": "Get number of subPayees for a request .", "title": "", "metadata": ""}
{"_id": "f83de9bebe6a46ef80d680ddd945aea9", "text": "Dev : ERC20 standard transferFrom function .", "title": "", "metadata": ""}
{"_id": "cbd459d89d20d428fe1acf96faef0548", "text": "Will show to the user that is asking the gains he has to receive .", "title": "", "metadata": ""}
{"_id": "853af6d1160e4c0355a230389416e9fc", "text": "Add multiple items .", "title": "", "metadata": ""}
{"_id": "ffd334e368ff023c4864a54654bcd5a7", "text": "If function has this modifier , only owner can execute this function .", "title": "", "metadata": ""}
{"_id": "cc124741b9562d946451f260051a122c", "text": "Execute the external transfer of tokens .", "title": "", "metadata": ""}
{"_id": "02963c39c8644d20f607ccf285ebf61c", "text": "Returns number of allowed tokens that a spender can transfer on behalf of a token owner .", "title": "", "metadata": ""}
{"_id": "136dd0331d89b4e2dfbba8804db0a2e3", "text": "withdrawal the bonus .", "title": "", "metadata": ""}
{"_id": "6e0877aff0d67d76d8b926dab54d3bbe", "text": "only owner address can set jpMinBet .", "title": "", "metadata": ""}
{"_id": "420354d0fff70687f8ad6acf4434668c", "text": "Returns the remaining amount of the taker token available from this order .", "title": "", "metadata": ""}
{"_id": "ba3a0f9d58783fbabfde79fbd4154b64", "text": "Allows the owner to change the token exchange rate .", "title": "", "metadata": ""}
{"_id": "9d1d4701b25f0ce2f780f41515973c3c", "text": "Gets current state of Emission Provider .", "title": "", "metadata": ""}
{"_id": "a1eb4e31bcca9914315960be40c946c1", "text": "Function to remove an approved address from the approved address list .", "title": "", "metadata": ""}
{"_id": "6ee9ff4171afd678ebbdbd0e21ee6826", "text": "Changes the minimum fee .", "title": "", "metadata": ""}
{"_id": "935c8676e6c4c45ede1e33cba5735dfa", "text": "Try to start monarchy game , reward upon success .", "title": "", "metadata": ""}
{"_id": "29d79c40db355dc59bcb986241ea18bc", "text": "Credit Status Event .", "title": "", "metadata": ""}
{"_id": "7b630cd5409a7925bdf536dfafd52e53", "text": "Overrided destructor .", "title": "", "metadata": ""}
{"_id": "8b617cd8d6de62ca8d749fa444dd2366", "text": "Get the sales generated by a city .", "title": "", "metadata": ""}
{"_id": "adc10ee0abd7fc2153e56f580ded1bb6", "text": "sale considerd failed when it raised less than the softcap .", "title": "", "metadata": ""}
{"_id": "3fe06bc58f59b79c7e5a9a51fc689482", "text": "Internal function to assigns location of a player .", "title": "", "metadata": ""}
{"_id": "5e4f128a36ae77db5f50e2fbf25fefcc", "text": "Update the sale limit .", "title": "", "metadata": ""}
{"_id": "9ee8c81ae05cac52a496e1ed39140bca", "text": "Only function .", "title": "", "metadata": ""}
{"_id": "4535745405288833bfcc702991b02ae6", "text": "sets the global block threshold for rewards .", "title": "", "metadata": ""}
{"_id": "588e43dffdd33e98c0b595187055cbb4", "text": "Call this to resolve hashes and generate fish / chests .", "title": "", "metadata": ""}
{"_id": "733fdeadd5d1bf3ec351dbf292352450", "text": "Guarantees that gamble is under max bet and above min .", "title": "", "metadata": ""}
{"_id": "47f9e5bb9d9f0d61e4c64f95d1ec8288", "text": "Assign amount_ of privately distributed tokens to someone identified with to_ address .", "title": "", "metadata": ""}
{"_id": "c0a8522a7e06604ce9e41238ba833115", "text": "low level token Pledge function .", "title": "", "metadata": ""}
{"_id": "d79212c291313f0e6a9f442c8163e289", "text": "Manually set the initial buyout price of a plot .", "title": "", "metadata": ""}
{"_id": "d73a2817f41492b0ab0bf3d5a5135fe7", "text": "Method to fetch collectible details .", "title": "", "metadata": ""}
{"_id": "d858a227f092b9d2abbf467b52873129", "text": "STEP 7 : determine winner by figuring out which address owns the interval encompassing the generated random number and pay the winner .", "title": "", "metadata": ""}
{"_id": "d43475ecb22de7d342184d70fa7873d9", "text": "This function reopens the contract to further deposits , returning it to stage one .", "title": "", "metadata": ""}
{"_id": "8d9fc6046ae188015e2cd54ae281da67", "text": "Purchase tokens with Ether .", "title": "", "metadata": ""}
{"_id": "2bb120b0a172104c2aa4e977f4d82a86", "text": "Increments uniqueness index .", "title": "", "metadata": ""}
{"_id": "ed2e0af202d8cc56d87eb2b09f6899a0", "text": "returns random number from 0 to 51 let's say 'value' 4 means suit ( 0 - Hearts , 1 - Spades , 2 - Diamonds , 3 - Clubs ) 'value' / 4 means : 0 - King , 1 - Ace , 2 - 10 - pip values , 11 - Jacket , 12 - Queen .", "title": "", "metadata": ""}
{"_id": "44b347d0df9abfaffd3bb222ad9569e7", "text": "Returns the amount of tokens allowed by the owner that can be transferred .", "title": "", "metadata": ""}
{"_id": "c28c726cd64be22c73cdeab8a4e5f077", "text": "Inactive keys after 1 year lose ownership .", "title": "", "metadata": ""}
{"_id": "a911768eeb92446e32b4503032a2d456", "text": "Funtion : Transfer owner's authority and account balance .", "title": "", "metadata": ""}
{"_id": "031f7ea247af87e89fa7d21722b8ecd9", "text": "end of round user sell fci to receive NAC from NLF funds function for investor .", "title": "", "metadata": ""}
{"_id": "bf9f0540582c6b1aa9d87287c1f43695", "text": "Transfers a Puppy to another address .", "title": "", "metadata": ""}
{"_id": "475b04000ca22b207d0f53c8f1f71437", "text": "Using this function a spender transfers tokens and make an owner of funds a participant of the operating Jackpot .", "title": "", "metadata": ""}
{"_id": "7a4e64c6b1986feaa66867a8a2aa7217", "text": "finalase crowdsale ( mainsale ) .", "title": "", "metadata": ""}
{"_id": "57b666097605bfaa3ac65adbbf57682b", "text": "Internal check to see if a given sire and matron are a valid mating pair for breeding via auction ( i . e .", "title": "", "metadata": ""}
{"_id": "4e24a5488e6a00736e25f9e08949c350", "text": "deprecate current contract in favour of a new one .", "title": "", "metadata": ""}
{"_id": "e659a0da4160c526ffb006b362b5fa9a", "text": "Assigns a new address to act as Doge .", "title": "", "metadata": ""}
{"_id": "6fb562f7d106aa93dbee6b4612f05fec", "text": "set ICO and PRE ICO Dates .", "title": "", "metadata": ""}
{"_id": "f87cab389dbdce8c5005409bab21199e", "text": "Allows an admin to update whitelist .", "title": "", "metadata": ""}
{"_id": "d474a645b1b2627a03f3dce428f0b1b5", "text": "Get CWC and Transfer DETs .", "title": "", "metadata": ""}
{"_id": "2cec3e124f7173f31d25284cc8902167", "text": "allocate token to _address based on _ratio .", "title": "", "metadata": ""}
{"_id": "30ed4438e123bb7bac6a1e2192a39c6c", "text": "executes the protocol .", "title": "", "metadata": ""}
{"_id": "ade4ed554c1eee1d4a06ab777ed84f71", "text": "Oraclize callback .", "title": "", "metadata": ""}
{"_id": "43aabe73f6caeaaf066c911e2ba9b628", "text": "here the operator can set rate without other operators validation .", "title": "", "metadata": ""}
{"_id": "f343066fa4c035668415ba19c47e6fdf", "text": "function to check whether passed address is a contract address .", "title": "", "metadata": ""}
{"_id": "0bdbafc06a88131bc13b2303d244b448", "text": "Get main data of deal by _dealNumber .", "title": "", "metadata": ""}
{"_id": "fd71c9f940e0c19808d120df229427b5", "text": "stats only function .", "title": "", "metadata": ""}
{"_id": "894c3639e39100c661986f76ea0d5c95", "text": "Function that handles logic for setting prices and assigning collectibles to addresses .", "title": "", "metadata": ""}
{"_id": "fbb7ed473f831bbcf5668eb9374486ab", "text": "Modifier to allow actions only when the contract IS in forking mode .", "title": "", "metadata": ""}
{"_id": "9bab06e9022dda8627fce8013e897990", "text": "allocate loyalty as needed from loyalty pool into the current loyalty wallet to be disbursed .", "title": "", "metadata": ""}
{"_id": "71f4df28d46c38fe6645a3bf3c5b9223", "text": "Triggers a Chibi event to get some data of token .", "title": "", "metadata": ""}
{"_id": "28c15bece3f99be87723a2a5361a2cf1", "text": "freeze part .", "title": "", "metadata": ""}
{"_id": "7811d35bdeb5897e718d4e2c83212191", "text": "Get current unix time stamp .", "title": "", "metadata": ""}
{"_id": "274b663808267d7b052400b791e4f016", "text": "Integer division of two number 2 only remix transactions , script .", "title": "", "metadata": ""}
{"_id": "70f9e9fa400b9285fc6a095fcc50fd92", "text": "Send the caller ( msg . sender ) .", "title": "", "metadata": ""}
{"_id": "5e4d54e972860654b2fa255e0676e61a", "text": "Put a cutie up for plugin feature with signature .", "title": "", "metadata": ""}
{"_id": "ec88c5d0abe00c936fdfbcd97313ef64", "text": "product methods .", "title": "", "metadata": ""}
{"_id": "d9f67b839a46c076108c05afb9563461", "text": "Tranfer token to any address he want to .", "title": "", "metadata": ""}
{"_id": "7ccfa7ee16f786eed9d81ea8d7e49222", "text": "If ICO has successfully finished sends the money to multisig wallet .", "title": "", "metadata": ""}
{"_id": "b7494f2febc6bb70174c1c57a22764a1", "text": "Setup authentication .", "title": "", "metadata": ""}
{"_id": "a669c857d0aea177d66e86f2c128ae9a", "text": "Withdraw ether and delete the htlc swap .", "title": "", "metadata": ""}
{"_id": "be27d2d0df86bee6df11cc7fa573051c", "text": "Liquidation fee .", "title": "", "metadata": ""}
{"_id": "706944b6962f1d0f61d434c2eb394eeb", "text": "Use this as function modifier that should execute only if contract state Halted .", "title": "", "metadata": ""}
{"_id": "39d4ce581a0db4bf69880018dec4ef54", "text": "Place a request to buy shares of a particular company ! .", "title": "", "metadata": ""}
{"_id": "e0dce3f24c45af68bf278c2218d9c9aa", "text": "Sets the total max amount in ETH for the accounts to hold , any exceeding funds will be sent to the coldWallet .", "title": "", "metadata": ""}
{"_id": "353ad8cb2313211fda98cba4a937417f", "text": "Adds an attachment to collectible .", "title": "", "metadata": ""}
{"_id": "28f7199f9578c1f38ff22c04d2e39c1c", "text": "Perminantly ends migration so it cannot be abused after it is deemed complete .", "title": "", "metadata": ""}
{"_id": "73405516a963fbb5ace0797b9f53a79f", "text": "Creates factory clone .", "title": "", "metadata": ""}
{"_id": "d11b7488a36166342219ee7a1baa65a0", "text": "Function to batch freeze accounts .", "title": "", "metadata": ""}
{"_id": "326aca91c73b1521c70f0f3841a46914", "text": "Overriding all transfers to check if transfers are enabled .", "title": "", "metadata": ""}
{"_id": "58e41982cad7947f9078034af14afa20", "text": "The total amount of ETH balance the address has .", "title": "", "metadata": ""}
{"_id": "f57b51fb6a19ec1e4e134940ce6c5249", "text": "set token control info .", "title": "", "metadata": ""}
{"_id": "bbed19bf5ee2cfdf543637892111c18d", "text": "Returns the value of ( _addr ) 's bid and the time it occurred .", "title": "", "metadata": ""}
{"_id": "c0fc874afdfbde99a1e522521637c2b8", "text": "set salesAgent .", "title": "", "metadata": ""}
{"_id": "965f487675bf4a0d084e0e91bc56889e", "text": "Get time bonus percentage .", "title": "", "metadata": ""}
{"_id": "ab946b8ec9f58d8589c70ba0f40eadc7", "text": "Set restricted period participation caps for a list of addresses .", "title": "", "metadata": ""}
{"_id": "ca5a3c40b41d33c6d839d9e488c78874", "text": "Allows the owner of the contract to shorten the deadline of the current ICO stage .", "title": "", "metadata": ""}
{"_id": "c9e08170e93355299e21116777250ad6", "text": "Owner can distribute tokens .", "title": "", "metadata": ""}
{"_id": "bf19b50b6baf622db9aef8f6d720e01f", "text": "Allows the admin to set the price for tokens sold during phases 1 and 2 of the sale .", "title": "", "metadata": ""}
{"_id": "ea91ef99346774b72dee9b46ca14999c", "text": "Returns the win percent when going high on the given number .", "title": "", "metadata": ""}
{"_id": "29929a0e7d86844988f9645fc20ac867", "text": "_hashmessage hash ( _user _nonce _value ) _v , _r , _s are from supervisor's signature on _hashmessage claimRing ( . . . ) .", "title": "", "metadata": ""}
{"_id": "e74ae24f16d5988838ebc97d4a6fb997", "text": "Is called from from Attack function after the winner is already chosen .", "title": "", "metadata": ""}
{"_id": "63b2a8a7e5f31e8bb16dfd7ea59ee045", "text": "This function sends the pooled eth to the receiving address , calculates the of unused eth to be returned , and advances the contract to stage three .", "title": "", "metadata": ""}
{"_id": "2c0dd970e457ecf15eb759b3f68e788e", "text": "Public functions ( from https : / / github . com / Dexaran / ERC223-token - standard / tree / Recommended ) .", "title": "", "metadata": ""}
{"_id": "9b63753d88774d0d962e6af275c80b2c", "text": "withdraw ether to nami multisignature wallet , only escrow can call .", "title": "", "metadata": ""}
{"_id": "edbc9f410da23bb8442c6d2abd20e192", "text": "contribute message value if the contribution is valid and the campaign is in stage operational , allow for complex amounts to be transacted .", "title": "", "metadata": ""}
{"_id": "b020dcb919fc400c0a6fed794342fc86", "text": "Updates tokenHash for tokenId - to be used only to correct errors .", "title": "", "metadata": ""}
{"_id": "80a59b00f63c6cb4f505d8a71e05b23e", "text": "check if hard cap reached before mintting new Tokens .", "title": "", "metadata": ""}
{"_id": "85a445cd8aae5728ce644b5113ca896c", "text": "Disable authentication .", "title": "", "metadata": ""}
{"_id": "7077a91b46a26337eb9290f909b00aa7", "text": "Function used to set the flag isRedeemed to true can be called by addresses in the approvedAddressList .", "title": "", "metadata": ""}
{"_id": "0bcad9ab5ce9f499115a3adc8225c2e6", "text": "Safe Math Functions .", "title": "", "metadata": ""}
{"_id": "89c514b6f6844bff27c5ec3e27bc0e19", "text": "Modifier to check if changes to vesting is freezed .", "title": "", "metadata": ""}
{"_id": "be3ee24f5e6e0263922c66ae442d02b3", "text": "Internal : Test if a request exists when you know transactee and transactor .", "title": "", "metadata": ""}
{"_id": "8e6bf808fc9b6b1c172876856f54eec8", "text": "Restricted access to the issuer and owner .", "title": "", "metadata": ""}
{"_id": "e6c9e5dbf1e4745101f9ebb94540659e", "text": "The allocated drps token balance .", "title": "", "metadata": ""}
{"_id": "b0c9e9c2f38f95d6f0d33b4ee48613e5", "text": "Freezes account and disables transfers / burning .", "title": "", "metadata": ""}
{"_id": "5f71622bd1ac924ca716e30c7e25a6e7", "text": "allow actors to view their tx .", "title": "", "metadata": ""}
{"_id": "c829816fdc13905d3793998e9b0f63b1", "text": "Minting tokens and oraclization .", "title": "", "metadata": ""}
{"_id": "a481af77da56ae3cc83ddbf5dd66f645", "text": "Query Display Function .", "title": "", "metadata": ""}
{"_id": "85774b6941854e5d6045d3c89d1deef9", "text": "Check if goal was reached .", "title": "", "metadata": ""}
{"_id": "8c14117136cee7ce63ef00d8258fcd5e", "text": "Allows owner to start the crowdsale from the time of execution until a specified deadline .", "title": "", "metadata": ""}
{"_id": "63b00d686aaf058599ffbc25478e8838", "text": "Compaund Intrest realization , return balance + Intrest .", "title": "", "metadata": ""}
{"_id": "c3dd20aa765904657165ef5d4e8b0348", "text": "The function mintTokens is only usable by the chosen wallet contract to mint a number of tokens proportional to the amount of ether sent to the wallet contract .", "title": "", "metadata": ""}
{"_id": "aa3704977ebe0d2eb4862c232cd0d3ee", "text": "Approves spending tokens and immediately triggers token recipient logic .", "title": "", "metadata": ""}
{"_id": "131144dab7f2b89b63c7ff2582f9dbbc", "text": "Gets the owner of the specified unicorn ID .", "title": "", "metadata": ""}
{"_id": "e072d0f98dada8951f3cf0a9da8146a7", "text": "Set up specific fee and status threshold .", "title": "", "metadata": ""}
{"_id": "a5bf71d7bfaeaf1cdf01c588ad271711", "text": "Checks if an accounts is registered .", "title": "", "metadata": ""}
{"_id": "4cb0b1edeede703eb2519da69ec92e94", "text": "modifier to scope access to admins / / reverts .", "title": "", "metadata": ""}
{"_id": "257e481adec95a712cadc04275b33b59", "text": "Change bet expected start time .", "title": "", "metadata": ""}
{"_id": "016d82740883849b9ed0b9ab69ebfb37", "text": "Gets the jackpot after fees .", "title": "", "metadata": ""}
{"_id": "bbfbf07b9800fe75264e7ba371afbb39", "text": "Total cumulative presses for all campaigns .", "title": "", "metadata": ""}
{"_id": "babc3edc395c1f807feaf7215d18f77c", "text": "User can himself receive dividends without waiting for a global accruals .", "title": "", "metadata": ""}
{"_id": "bc3592b71eb1e093b302749170f3f7d0", "text": "ERC20 compliance addition .", "title": "", "metadata": ""}
{"_id": "0db3bbdc040869471047cbc123a89cbf", "text": "count number of bytes required to represent an unsigned integer .", "title": "", "metadata": ""}
{"_id": "32917495d63b3d1ce45fb806072e1a56", "text": "This function can be used by the contractCreator to start the payout to the lucky 5 winners .", "title": "", "metadata": ""}
{"_id": "266376a809ca87bcb005ef53264f5743", "text": "get number of current day since 1970 .", "title": "", "metadata": ""}
{"_id": "ffe1724ccedc6b75a79fe1b2e7296006", "text": "Change an options value .", "title": "", "metadata": ""}
{"_id": "973ce7eb73c9a6a8ef3ee54007d669e8", "text": "Show the allowance given by tokenOwner to the spender .", "title": "", "metadata": ""}
{"_id": "5fbaf00d10483ebd602d8475c9961811", "text": "Buys Kryptor .", "title": "", "metadata": ""}
{"_id": "3c6c88b9d74f0dc5d78102af45aff131", "text": "adapted from ERC-677 from my dude Steve Ellis - thanks man ! .", "title": "", "metadata": ""}
{"_id": "c74ff6c00f883a07ad9b3310d77f5ef1", "text": "This will destroy the tokens of the investor and called by sale contract only at the time of refund .", "title": "", "metadata": ""}
{"_id": "af3ac01d847b943e2519afd7ff0b8684", "text": "De-Freeze user - Backend Function .", "title": "", "metadata": ""}
{"_id": "97275c8c0bfba905a99353807248a508", "text": "delete a token from the contract .", "title": "", "metadata": ""}
{"_id": "088f8e75b53740c7b8e07c38dd3f180b", "text": "players use this to change back to one of your old names .", "title": "", "metadata": ""}
{"_id": "37337a2ba4285561560298e74ad200e0", "text": "in case the contract owner has to be moved .", "title": "", "metadata": ""}
{"_id": "e8b06c2d7a135ecf485655347bfa1bd8", "text": "Proxy transfer MESH .", "title": "", "metadata": ""}
{"_id": "8bf13223cba71c0ec62ec1ce15caa746", "text": "Note that a BOP cannot go from Committed back to Open , but it can go from Closed back to Committed ( this would retain the committed worker ) .", "title": "", "metadata": ""}
{"_id": "a7603ffa5e1bcfc04138b9d36f5b6ae1", "text": "change end time .", "title": "", "metadata": ""}
{"_id": "5955b45c93c52c8a6b72bc2b4ca0c45e", "text": "Returns storage location of appversion list at a specific index .", "title": "", "metadata": ""}
{"_id": "174bd94c856bfcbeb2b1aec3aa1aca77", "text": "Transfer some funds to the target investment address .", "title": "", "metadata": ""}
{"_id": "f5eebbdad925f823c44492290ef17080", "text": "Get softcap reaching status .", "title": "", "metadata": ""}
{"_id": "95c33ac80b9b8b6666b604355f1bbff3", "text": "Method called when game ends .", "title": "", "metadata": ""}
{"_id": "0b2638841c54ec9088915ec1d8d29dbb", "text": "Shows the total supply of token on the ethereum blockchain .", "title": "", "metadata": ""}
{"_id": "a0cd997404ff2f9130cb25db51c91994", "text": "asigna un valor al Loan para ser comprado por otro banco .", "title": "", "metadata": ""}
{"_id": "4477f34a2f1d31ad69f38ed2b8a13c59", "text": "Extend parent behavior requiring purchase to respect the contributor's funding cap .", "title": "", "metadata": ""}
{"_id": "a035dd2a2111ebf07c7df60595685c04", "text": "returns player earnings per vaults - functionhash - 0x63066434 .", "title": "", "metadata": ""}
{"_id": "ac2f570a79d42cb2c80a2010ecbf0fe0", "text": "Transfer balance from sender's account to receiver's account .", "title": "", "metadata": ""}
{"_id": "a800c96de6d96ec9e3d9636ef629c964", "text": "get commission .", "title": "", "metadata": ""}
{"_id": "7df267a044ab3870c6f4a8f82f919503", "text": "Helper methods for siphoning .", "title": "", "metadata": ""}
{"_id": "b34af0450520b33fe9b90ddb957e9e6f", "text": "Allows the owner to change the name of the contract .", "title": "", "metadata": ""}
{"_id": "4585d0a2d7e13433edd34eddbcf36cec", "text": "The current bonuse percentage .", "title": "", "metadata": ""}
{"_id": "9d756156010ff7a54016187ebec3e317", "text": "This is how value enters into the system which creates pledges ; the token of value goes into the vault and the amount in the pledge relevant to this Giver without delegates is increased , and a normal transfer is done to the idReceiver .", "title": "", "metadata": ""}
{"_id": "51c84f0d5059236c678eec70e48f496b", "text": "lockup during and after 48h of end of crowdsale .", "title": "", "metadata": ""}
{"_id": "682c013fdc0587d85176dec44a5a0730", "text": "Send _value tokens to _to from _from on the condition it is approved by _from .", "title": "", "metadata": ""}
{"_id": "3c98bdd5ec5981d74caf40a2cdf96d36", "text": "withdraw balance from contract if emergency .", "title": "", "metadata": ""}
{"_id": "f3d4fccddb7417676298760ffff1aa71", "text": "emergency pause for the ICO .", "title": "", "metadata": ""}
{"_id": "3e0a5d396b176ab0c0774e2ca390fcc4", "text": "register a new service provider to the platform .", "title": "", "metadata": ""}
{"_id": "5b37b2d152538b7ffa17bc76b3436e60", "text": "method to withdraw ERC20 tokens sent to this contract .", "title": "", "metadata": ""}
{"_id": "f153d508058928272692076e5e0e11c5", "text": "Return two actions for training or hybridizing a kitty using the given type .", "title": "", "metadata": ""}
{"_id": "b53b32d325ab9714d8016799bb47bb3d", "text": "modifier which gives specific rights to serviceAgent .", "title": "", "metadata": ""}
{"_id": "d3243366780f260e71c9d72f0a480fbf", "text": "Get balance of investor .", "title": "", "metadata": ""}
{"_id": "718c24f868aa44a656a0b820d5bd4d9c", "text": "ERC20 specific 'transferFrom' is only allowed , if contract is not in paused state .", "title": "", "metadata": ""}
{"_id": "fa02c70304a1131ba9470e29f61a8222", "text": "Withdraw remaining tokens to an specified address .", "title": "", "metadata": ""}
{"_id": "4fd48ffd86b6de2522e294539b9381c6", "text": "Helper function to create stakes for a given address .", "title": "", "metadata": ""}
{"_id": "f36b000e3d9463a7e9f7e691e6740d6a", "text": "Transfer a Pixel owned by another address , for which the calling address has previously been granted transfer approval by the owner .", "title": "", "metadata": ""}
{"_id": "964fbdab2d25c0cd329b57c8e3f301fc", "text": "Get the expected win amount after house edge is subtracted .", "title": "", "metadata": ""}
{"_id": "f8da66c82bd4d08563f5894780ecfb66", "text": "Getters getSpaceship .", "title": "", "metadata": ""}
{"_id": "b67386f793f09b8c2cd0119c5c6c027a", "text": "erase contribution from the database and do manual refund for disapproved users .", "title": "", "metadata": ""}
{"_id": "624935defad6ce9e4968b1de931ea557", "text": "To make token transfers to a user or a contract .", "title": "", "metadata": ""}
{"_id": "13edccce753fde0617d8e58ba0890dbc", "text": "list recast items by a user from a specific item .", "title": "", "metadata": ""}
{"_id": "dd75d90a50c9f075e86e7aa036d0916b", "text": "Access modifier for CMO-only functionality .", "title": "", "metadata": ""}
{"_id": "ab6a7b16846c74cdeb55094eddc9abbd", "text": "Ex1 : trade 0 . 5 ETH - EOS 0 , 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee , 500000000000000000 , 0xd3c64BbA75859Eb808ACE6F2A6048ecdb2d70817 , 21003850000000000000 .", "title": "", "metadata": ""}
{"_id": "edbd5d52813936b05ecd356d056b0fe4", "text": "get bet result information .", "title": "", "metadata": ""}
{"_id": "1c2e8d7a71519478db47d6ab0f074950", "text": "The owner of the contract modifies the recovery address of the token .", "title": "", "metadata": ""}
{"_id": "de72a7e2e0100be524c3b56d470a48a1", "text": "Function to mint tokens to partners ( grants ) , including up to reserved tokens .", "title": "", "metadata": ""}
{"_id": "9cd869dcf73d5d49e35262c929830156", "text": "Set the ifoodCommunity .", "title": "", "metadata": ""}
{"_id": "b65d1587ab20b37848e56b11ec4b28f1", "text": "Transfer tokens to user .", "title": "", "metadata": ""}
{"_id": "4e6cb5f98d484decb02f96cee694460c", "text": "Emergency function to clear all sale periods ( for example in case the sale is delayed ) .", "title": "", "metadata": ""}
{"_id": "10a7bfbceee5b0d3c388f287ad222409", "text": "Function to check if crowdsale has been successful ( has incoming contribution balance met , or exceeded the minimum goal ? ) .", "title": "", "metadata": ""}
{"_id": "dae37cb5a7cefcacd6c6fb119626580c", "text": "This will need to be called manually for each open market if a spender contract is updated .", "title": "", "metadata": ""}
{"_id": "88382d366e362115b0d3070fd949e4ed", "text": "Record notarization string ( hash ) .", "title": "", "metadata": ""}
{"_id": "8bd597b6589e7431247ebc0d67ddcf1b", "text": "Function that is called when a user or another contract wants to transfer funds .", "title": "", "metadata": ""}
{"_id": "6bf6596b38579d019d4576a38ef34a9e", "text": "This function is being called when a user presses the button on the website ( or call it directly from the contract ) .", "title": "", "metadata": ""}
{"_id": "0caf831ccea7c9190be25f0a45096777", "text": "Allow to turn Oraclize off by owner .", "title": "", "metadata": ""}
{"_id": "f15f700cfc4106d508be533ea8cc78f5", "text": "Transfers balances of a token between users .", "title": "", "metadata": ""}
{"_id": "0db9fc2d5a08efb89b8cad5b30e59f1f", "text": "Check if the provided stage is the current one .", "title": "", "metadata": ""}
{"_id": "762b5cd3d639dfa31bdfbd2c9e95d354", "text": "Remove user from whitelist .", "title": "", "metadata": ""}
{"_id": "b9c289686ed686c529d54cf865cfa490", "text": "Funding Moderator functions .", "title": "", "metadata": ""}
{"_id": "40b6fb8c342f7fc8be7fb11b20fcb02e", "text": "Main function .", "title": "", "metadata": ""}
{"_id": "85ed8a4ea69760d5c8b2924a5ce943a5", "text": "The owner can specify which ICO contract is allowed to transfer tokens while timelock is on .", "title": "", "metadata": ""}
{"_id": "1879c07f20404eeab1b297941787e18b", "text": "In case you change your mind , this will get your ether back to your account .", "title": "", "metadata": ""}
{"_id": "dfb327347f2747b8112ddb77862beecb", "text": "trigger rewarding the miner with STA token .", "title": "", "metadata": ""}
{"_id": "8c12a97e7cd1e4627bc9111a7c309c26", "text": "Methods use by the ICO investors .", "title": "", "metadata": ""}
{"_id": "7ed553333c2b5765f8c5d02cbab6a6c4", "text": "sets boundaries for incoming tx .", "title": "", "metadata": ""}
{"_id": "9df5bc8a1a143d861625240058b14751", "text": "function called when a new user wants to join .", "title": "", "metadata": ""}
{"_id": "9e18988b58cfed55306c1b867093f45d", "text": "returns the cost of the Oraclize fee .", "title": "", "metadata": ""}
{"_id": "3b78e535d4bd207a5bfd8c61de36f49c", "text": "Mints fishes according to params can only be called by the owner .", "title": "", "metadata": ""}
{"_id": "dadce73012d138cbaee428525dc307ce", "text": "Called by the owner in emergency , triggers stopped state .", "title": "", "metadata": ""}
{"_id": "6fa2a7abbc3bf8482f8fb0ecd0382d19", "text": "Replace current owner with new one .", "title": "", "metadata": ""}
{"_id": "bbb868b50c3d4376154ff6abe8a7a398", "text": "change binary value .", "title": "", "metadata": ""}
{"_id": "35af3bd502254788b3d348acca222788", "text": "Modifier to check current round is sane as expected round .", "title": "", "metadata": ""}
{"_id": "940e724c536edded58b2b167c002a09d", "text": "user democ admin functions .", "title": "", "metadata": ""}
{"_id": "461a2baf5038ae47ae45343baeb8e270", "text": "Buy function .", "title": "", "metadata": ""}
{"_id": "b9839d6e010cb8249330bac098701de6", "text": "Withdraw funds .", "title": "", "metadata": ""}
{"_id": "ffcc7e4067ff4768ed11c037c27640ba", "text": "An 'escape hatch' function to allow purchasers to get a refund of their eth before refundStart .", "title": "", "metadata": ""}
{"_id": "6e47468ef5798679931156aaf89cf2d5", "text": "Returns a list of all EtherDog IDs assigned to an address .", "title": "", "metadata": ""}
{"_id": "1ff0c133db1a9a4bd82289ac7599be10", "text": "Must be called by the user which the proxy is for , creates a new AuthenticatedProxy .", "title": "", "metadata": ""}
{"_id": "b0be70713385d5e11ce96da48ce59d4a", "text": "Returns PVE duration , each battle have a duration , which depends on current warrior level , which is multiplied by 15 min .", "title": "", "metadata": ""}
{"_id": "fd0fc154638a8f1ba4be613a60a9f663", "text": "send ether to another wallet .", "title": "", "metadata": ""}
{"_id": "1a1eff5cf2e19e33fbf149d82e5236d5", "text": "Allows owner to add short message to token .", "title": "", "metadata": ""}
{"_id": "56106b8c3f105c678f3910b349447e80", "text": "Sister function to payPreviousOwner ( ) : .", "title": "", "metadata": ""}
{"_id": "01d216b01356ef833e1848c201934396", "text": "Change second adress with reserve ( 300000000 tokens ) .", "title": "", "metadata": ""}
{"_id": "8b384ee0fd4aa4eda6704e31b1144c57", "text": "Function to broadcast and accept an offchain signed request ( can be paid and additionals also ) .", "title": "", "metadata": ""}
{"_id": "202940afed3726cfd7f5fb66b5deaa57", "text": "Returns when will the operations of token stop and why .", "title": "", "metadata": ""}
{"_id": "05f9f266b26e0433a6d2f79940f64ad0", "text": "If accidentally tokens are transferred to this contract .", "title": "", "metadata": ""}
{"_id": "08a7984594d7711750a6327942863657", "text": "Get the cuurent ss holder count .", "title": "", "metadata": ""}
{"_id": "0ac32d7a7fbc2ea467cf5268e3684765", "text": "Function that is called when transaction target is a contract .", "title": "", "metadata": ""}
{"_id": "18f44bcdb80515d73056ed0a5cc2517e", "text": "after month admin deposit ETH to ETH Pool .", "title": "", "metadata": ""}
{"_id": "81ef27c6121f866527d8d63a27c24e22", "text": "Modifier to control who executes functions .", "title": "", "metadata": ""}
{"_id": "e3d4a6960e09c7757325e6cf19035926", "text": "amount owner can withdraw that way you can easily compare the contract balance with your amount if there is more in the contract than your balance someone didn't withdraw let them know that : ) .", "title": "", "metadata": ""}
{"_id": "ac0858517e6db2ee9690d83a7789ede5", "text": "Modifier for Dao functions .", "title": "", "metadata": ""}
{"_id": "a13733dab47e9ebcb0c448b68666f2f8", "text": "function to migrate old totalLoanAmount and totalLockedAmount from old monetarySupervisor contract when it's upgraded .", "title": "", "metadata": ""}
{"_id": "afb58ddeb43287275a82ef0cde649613", "text": "Put a Pony up for auction .", "title": "", "metadata": ""}
{"_id": "9c4960a254292dda67b15c8212da1746", "text": "Used by mint function .", "title": "", "metadata": ""}
{"_id": "22e1e54d3bcffdb3343c4fb8423a5925", "text": "The addresses preassigned the escapeHatchCaller role is the only addresses that can call a function with this modifier .", "title": "", "metadata": ""}
{"_id": "670318ecbe8aaab2848120e49e42d40b", "text": "Called from outside to auto handle BTC and FIAT purchases .", "title": "", "metadata": ""}
{"_id": "3898312cc638030a1727fb6c20b969d1", "text": "Amount of deposit .", "title": "", "metadata": ""}
{"_id": "9e4330c9ed49202bb34ecc190e28d1f8", "text": "Internal function that creates and distributes tokens .", "title": "", "metadata": ""}
{"_id": "015795f2041a099d06a769f569274827", "text": "flags for given address .", "title": "", "metadata": ""}
{"_id": "d73c572c0a56548f4e79c354d12856c6", "text": "Destroy Beercoins by removing them from the system irreversibly .", "title": "", "metadata": ""}
{"_id": "87940c8fe52c8d1f921ab4c67435b1a2", "text": "get the current sale day .", "title": "", "metadata": ""}
{"_id": "f71550da18d6fff375edfcb4fe90f227", "text": "setup the packagesale parameters .", "title": "", "metadata": ""}
{"_id": "fb1839b6a04e1d9d3cdbe0bc9214a046", "text": "only people with profits .", "title": "", "metadata": ""}
{"_id": "51b7dca8eeb06da9c0e5445b223fee06", "text": "It has refferedBuy , but its not used , so more money to all players : ) .", "title": "", "metadata": ""}
{"_id": "ff6be09724534aaa85c055340462821d", "text": "Check TXs value is within limits : .", "title": "", "metadata": ""}
{"_id": "c5088724c9bf73bda1ea79e049528329", "text": "unwhitelist investor from participating in the crowdsale .", "title": "", "metadata": ""}
{"_id": "09a46584c218dea1c7aa676742e2210c", "text": "Returns current bonus percent 0-100 .", "title": "", "metadata": ""}
{"_id": "a5ba5415a3e0845d6abf0362a060f6cb", "text": "computes the current price of an deflating-price auction .", "title": "", "metadata": ""}
{"_id": "4e8e969193d714c09a82b186f0d85be8", "text": "Modifier to allow actions only when the contract IS paused .", "title": "", "metadata": ""}
{"_id": "91b3379f72eef65615f85cfeb92688f4", "text": "Generates random modulus .", "title": "", "metadata": ""}
{"_id": "34f12f31a1eac410e7e64cf4c13e03d9", "text": "to send tokens for bitcoin bakers and bounty .", "title": "", "metadata": ""}
{"_id": "f43bef87cb8ecc1e9b9cf79d9ccb2599", "text": "Allows anyone to transfer the MOO tokens once trading has started .", "title": "", "metadata": ""}
{"_id": "b3b66b170f7056cc7e0a5e9c6595b7ed", "text": "A trap door for when someone sends tokens other than the intended ones so the overseers can decide where to send them .", "title": "", "metadata": ""}
{"_id": "a4da9a088bb3d598fbbb70d954c60800", "text": "Allows owner to change exchangeThreshold .", "title": "", "metadata": ""}
{"_id": "cf6eed06e0a24788dd68360f081ee542", "text": "ERC20 similary .", "title": "", "metadata": ""}
{"_id": "c7fdbc0c3011c647d2df1b19145f1ea4", "text": "event QueryIdRetrieved ( bytes32 _queryId ) ; event QueryIdConverted ( uint _queryId ) ; event QueryIdBetValueAdded ( uint _queryId , uint _betValue ) ; event QueryIdBetPlayerAddressAdded ( uint _queryId , address _playerAddress ) ; event CallbackInitiatedWithParameters ( bytes32 _queryId , string _result , bytes _proof ) ; event ProofVerifySuccess ( bool _success ) ; event CurrentQueryIdSet ( uint _queryId ) ; event RandomNumberGenerated ( uint _randomNumber ) ; event PlayerWonWithRandomNumberLessThanHouseNumber ( uint _randomNumber , uint _houseNumber ) ; event AmountToPayoutSet ( uint _amount ) ; event PlayerLost ( bool _lost ) ; event SecondaryPayoutVariableSet ( uint _payout ) ; event PlayerAddressPriorToPayoutIs ( address _address ) ; event CurrentBetIncremented ( uint _currentBetNumber ) ; .", "title": "", "metadata": ""}
{"_id": "4de51874140c7692a7bea65f795d251b", "text": "Property owners can change the clickable link for when a user clicks on their Properties .", "title": "", "metadata": ""}
{"_id": "6702018593d579864bf438958e887174", "text": "PausableToken functions copied to allow assignTokens ( ) to use super . transfer ( ) .", "title": "", "metadata": ""}
{"_id": "bea5cbccd09a8db445b4da6516af64bc", "text": "Withdraw _numTokens ERC20 tokens from the voting contract , revoking these voting rights .", "title": "", "metadata": ""}
{"_id": "69265df2c11145d55175fb05fd636117", "text": "Can be called only once .", "title": "", "metadata": ""}
{"_id": "ae43301e30769bf58d7c3d85605c39f8", "text": "SafeMath div function .", "title": "", "metadata": ""}
{"_id": "5324488e508ca524d3bdf5aed6f519a4", "text": "Approve a contract address for minting tokens and transferring tokens , when approved by the owner .", "title": "", "metadata": ""}
{"_id": "b85ee17850b4afec769cfa7c76eaa5fb", "text": "0 - stop 1 - preSale 2 - sale 1 3 - sale 2 .", "title": "", "metadata": ""}
{"_id": "269e208617b1121af3ac241e40275695", "text": "Modifier to allow minting of tokens .", "title": "", "metadata": ""}
{"_id": "a17fac5f983c446928a3e098dbc0ed1f", "text": "Allows the admin to finalize a crowdsale , marking it completed .", "title": "", "metadata": ""}
{"_id": "f96c2a56204d2f795e29f3a31cb6c63e", "text": "Will generate both a FighterCreated event .", "title": "", "metadata": ""}
{"_id": "418f38634ec9dcd66c204de8d0259293", "text": "How many tokens one gets from a certain amount of ethereum .", "title": "", "metadata": ""}
{"_id": "a64f191a6c85dbf7991575b7a7f462cd", "text": "Change the number of required confirmations .", "title": "", "metadata": ""}
{"_id": "271d42421dfc66e6509c0a6e68265bbe", "text": "true if function executes successfully , false otherwise .", "title": "", "metadata": ""}
{"_id": "cf485b465c7599f928b39300439da583", "text": "Sends Jackpot funds for additional dividends .", "title": "", "metadata": ""}
{"_id": "5c8f3fd690f7b72d206cfbbb796b8d63", "text": "calculateFraction allows us to better handle the Solidity ugliness of not having decimals as a native type .", "title": "", "metadata": ""}
{"_id": "817aa87b46048d5d14aa1a621fef440e", "text": "For Investors .", "title": "", "metadata": ""}
{"_id": "5e85478879f56e8b9777e2dcae475565", "text": "Invalidates _amount tokens .", "title": "", "metadata": ""}
{"_id": "dfde5ebf524b8ce22f3d00229d2f1e1b", "text": "getOrder lists the price , amount , and maker of a specific token for a sale .", "title": "", "metadata": ""}
{"_id": "5a094355985dd71ce6aeb4a4a3229c56", "text": "Allow only registrar to exec the function .", "title": "", "metadata": ""}
{"_id": "cc9d3d60e1a4ac9684621d7b548e74b3", "text": "Get list of tokenIds of token groups a user contributed to .", "title": "", "metadata": ""}
{"_id": "efdc8ffaf54a305d0d1b6005f6e1a4da", "text": "Cycle numeration starts from 1 , 0 will be handled as not valid cycle .", "title": "", "metadata": ""}
{"_id": "903cd5891691ecbd36d91d5f11d5f922", "text": "every user can withdraw his reward .", "title": "", "metadata": ""}
{"_id": "661b3ad96ba7d9c3d89f8dce0e060886", "text": "freeze ? Prevent Allow target from sending receiving tokens .", "title": "", "metadata": ""}
{"_id": "d5bff4f90e7841d02c1fe835f6714a2b", "text": "To call to start the Token's sale .", "title": "", "metadata": ""}
{"_id": "3df4492fa7d613594953e43880bce981", "text": "Require goal to be met before allowing anyone to withdraw .", "title": "", "metadata": ""}
{"_id": "d64c350bc978b2844ad2c9b2cad6fc62", "text": "Migrates the tokens to the target token through the MigrationAgent .", "title": "", "metadata": ""}
{"_id": "46f19b25fd71dc731ab7db80cb146332", "text": "Calculates the hash of a curve .", "title": "", "metadata": ""}
{"_id": "fc3eb731541764e621190831f54ce96e", "text": "stake function reduces the user's total available balance .", "title": "", "metadata": ""}
{"_id": "e880018972761a17b47bf8b1c55df481", "text": "Modifier to only allow the execution of certain functions restricted to the bookies .", "title": "", "metadata": ""}
{"_id": "e46c793ee0cfb108cd7108c0baf543d0", "text": "function to take current rates info from Oraclize this function updating current price ( 'USD' ) and 'priceUpdateAt' .", "title": "", "metadata": ""}
{"_id": "eafc365e534cd42f7a2f8627c2357cac", "text": "Pause the token changer making the contract revert the transaction instead of converting .", "title": "", "metadata": ""}
{"_id": "31cf926e8490087b07db878763cc780e", "text": "Included here instead of Ownable because the Deposit contracts don't need it .", "title": "", "metadata": ""}
{"_id": "0921a292b3d2ec0661ffbed30f5bee60", "text": "END lottery flow .", "title": "", "metadata": ""}
{"_id": "a8327406ce665a49ec4966fa65289662", "text": "This is function is used for sell Nova properpty only coin can only be trasfered to invoker , and invoker must be Nova contract .", "title": "", "metadata": ""}
{"_id": "e013645b6105dc381d0a1c8753105571", "text": "Owner can change ERC20 contract address .", "title": "", "metadata": ""}
{"_id": "f216e2e437c0034ac76b5d1cd121f92f", "text": "CEO part .", "title": "", "metadata": ""}
{"_id": "ee893e2cf2f93d96530c9408d2c5d127", "text": "Bailout - Just in case this contract ever receives funds .", "title": "", "metadata": ""}
{"_id": "d5ca36c3968f1013ee89c1f7b3de1f98", "text": "Returns an array containing all oracle addresses .", "title": "", "metadata": ""}
{"_id": "dadd2ce80f0518623272591aad514ea3", "text": "Toggle the Attachment Switch .", "title": "", "metadata": ""}
{"_id": "32dda69628adc71d5b3042bc3c550a34", "text": "The Market Maker constructor .", "title": "", "metadata": ""}
{"_id": "a8698554ebf0e14e0ace17fca45d4829", "text": "function grantFounderTeamToken - Transfer advisor tokens to Founder and Team wallets .", "title": "", "metadata": ""}
{"_id": "f780ae401b1754ef8c9078965d7012f0", "text": "rank vip rank of the owner of given address if any .", "title": "", "metadata": ""}
{"_id": "938ae4e0dea630c6c773af6fa125e4da", "text": "Sign current transaction and add it to transaction pending queue .", "title": "", "metadata": ""}
{"_id": "cf91667a8863dfaef2a29669f307ab9d", "text": "Function transfers tokens from one address to another .", "title": "", "metadata": ""}
{"_id": "252c3c1ae9f84d5ca96c03d844ee1bca", "text": "Set deposit contract address from which it can receive money before sale .", "title": "", "metadata": ""}
{"_id": "fe1b25a1bae60b6dd720e3b4845104f6", "text": "value should be a comma-separated list of values .", "title": "", "metadata": ""}
{"_id": "f002a7054abebcd45eaf5790cb9dbb0e", "text": "Update bounty reward settings .", "title": "", "metadata": ""}
{"_id": "b0d46d41a245aba0f2374badedf000f9", "text": "setter function for minwei .", "title": "", "metadata": ""}
{"_id": "e433a413ab98c8884fb300ecf67c6933", "text": "For paying out the full balance of contract .", "title": "", "metadata": ""}
{"_id": "06be7c90c0fe91b29c339568d93f831d", "text": "Returns you how much tokens do you get for the wei passed .", "title": "", "metadata": ""}
{"_id": "6b57dc5dc0d0c06d0acf973b38b51bd4", "text": "set the minimal Dai for trades ( depends on otc ) .", "title": "", "metadata": ""}
{"_id": "fb4678712b2aabbec5591e0d74c26d1c", "text": "Checks the membership type / permissions for whitelisted members .", "title": "", "metadata": ""}
{"_id": "c75f3c887d22b0d34cc7976e0091677d", "text": "Allows the developer or anyone with the password to claim the bounty and shut down everything except withdrawals in emergencies .", "title": "", "metadata": ""}
{"_id": "1467a6f1fa6bcd8b85a2dfbdfcf9b7e6", "text": "Get Thing's information constant_function .", "title": "", "metadata": ""}
{"_id": "6e1acda5bcbbccc3e2dfdaf1850ff438", "text": "Transfer the balance from token owner's account to account - Owner's account must have sufficient balance to transfer - 0 value transfers are allowed .", "title": "", "metadata": ""}
{"_id": "5aec05f7636ad2014021d788f58bbd74", "text": "Transfer participation to a new owner .", "title": "", "metadata": ""}
{"_id": "40a4e3dc0872fe4f3b60f61d9a023829", "text": "Calculate tokens user will have for their purchase .", "title": "", "metadata": ""}
{"_id": "c5507fdbd9537512d39dcd138e08cab9", "text": "SpaceWars game handler functions .", "title": "", "metadata": ""}
{"_id": "c0d34b251cd3bac50ab25619b997f019", "text": "BETS IN Tokens and ETH .", "title": "", "metadata": ""}
{"_id": "79312cce17001e48f221eca139691b19", "text": "This function does a lot of the heavy lifting for validating that all of the data passed in to the purchase function is ok .", "title": "", "metadata": ""}
{"_id": "5cc47e9d6d52a9360e8025f5d4c74e0e", "text": "manual start ico after pause .", "title": "", "metadata": ""}
{"_id": "b37f70ec0e58bbfaacd3f7dacd97c774", "text": "Whether crowdsale goal was reached or not .", "title": "", "metadata": ""}
{"_id": "394fe90a7582f7fa2ee09d587c9586a9", "text": "getBfex function .", "title": "", "metadata": ""}
{"_id": "16d94caa4035ad82eeedf687480007ef", "text": "Disallow buy cuties for token .", "title": "", "metadata": ""}
{"_id": "82f1e5973d2eb4ffd123bc0632115925", "text": "startTime - timestamp of period start time ( INCLUSIVE ) .", "title": "", "metadata": ""}
{"_id": "de650eb640959e16b10c0ec17b6064c8", "text": "Sets the daily limit .", "title": "", "metadata": ""}
{"_id": "4b0857691bca3186e783fe76b8d5b576", "text": "Sets wallet to which ICO ETH funds are sent .", "title": "", "metadata": ""}
{"_id": "dc63d4143ccaf3a05914b3b71f6058e4", "text": "update game proprietary data .", "title": "", "metadata": ""}
{"_id": "3bcee413c55bfc81245bf82e74733be4", "text": "Owner can KYC ( or revoke ) addresses until close of funding .", "title": "", "metadata": ""}
{"_id": "662dc4d6fc6c339419260799f658112c", "text": "Change reward contract owner .", "title": "", "metadata": ""}
{"_id": "0035941329ab8fe6a1d595066183b290", "text": "Returns floor ( ln ( x / 2 precision ) * 2 precision ) .", "title": "", "metadata": ""}
{"_id": "58204a2d7a5ceaf34b86467dbc7a005a", "text": "Get specified comment .", "title": "", "metadata": ""}
{"_id": "f0060503b1d9db9cdea92d5ac9096e70", "text": "Set cap for current round .", "title": "", "metadata": ""}
{"_id": "14bbbd23df1513d9ff57707ef74b2b84", "text": "amount of tokens left for participant with cap .", "title": "", "metadata": ""}
{"_id": "60c1e30a7d214898dbf383f771075bee", "text": "Amending rules of the organization , only those rules which were present upon creation of the Series , apply to the Series .", "title": "", "metadata": ""}
{"_id": "f164f156701e5206e6d5ee960e957441", "text": "For creating Rich Token .", "title": "", "metadata": ""}
{"_id": "256a7e4187368f5d9d328f16d3cf44c9", "text": "ICO volume bonus calculation .", "title": "", "metadata": ""}
{"_id": "07a3d399c613bbdc677387d2945b3870", "text": "Returns outcome tokens array .", "title": "", "metadata": ""}
{"_id": "be778cec4da5f0ac726719445a94619f", "text": "Function to swap tokens from pre-sale .", "title": "", "metadata": ""}
{"_id": "b795b6f885618c16c073179f894ec9a9", "text": "The sencToken ( ) is the getter for the SENC Token .", "title": "", "metadata": ""}
{"_id": "fb190b884d22fa466f9c0a5960668892", "text": "Allows anyone to transfer .", "title": "", "metadata": ""}
{"_id": "5bb08c40154f42d1cbc898007d92e11d", "text": "No approve needed , only from msg . sender .", "title": "", "metadata": ""}
{"_id": "f126aa3b52d7f5d29d33e0d140afba78", "text": "Generate the the unsigned message ( in bytes32 ) that each owner's .", "title": "", "metadata": ""}
{"_id": "904383e4f2b9f7f97f70f742845daa2a", "text": "controller close deposit subround phrase and user can withdraw NAC from subround .", "title": "", "metadata": ""}
{"_id": "38577deb6eaca4176cf62a08f90c81f0", "text": "from StandardToken .", "title": "", "metadata": ""}
{"_id": "3fa4bbb134905ab7c499ad7c314db2b2", "text": "End token minting period permanently for STOs .", "title": "", "metadata": ""}
{"_id": "ddd5dc37845768584093d0b97dc0bb31", "text": "Gets the purchase price of tokens by contract .", "title": "", "metadata": ""}
{"_id": "2db9aa3c66aad9c9cdb573d9dfb75476", "text": "flag that tells whether there is at least one address that probably had non-zero token balance at the moment of snapshot with given index ( hasResult ) ; and the fist address that probably had non-zero token balance at the moment snapshot with given index was created or zero if there are no such addresses ( result ) .", "title": "", "metadata": ""}
{"_id": "fabee0337a3477109a7c1bb6eac48f70", "text": "Approve allowances .", "title": "", "metadata": ""}
{"_id": "033a2b16f55883850c5934e320459dd1", "text": "Function to pause the crowdsale .", "title": "", "metadata": ""}
{"_id": "c464a94c6270793d85d836219cbc335e", "text": "Owner withdraw service fee tokens .", "title": "", "metadata": ""}
{"_id": "d4c5b99de2eea7375c53931b0b1d4f36", "text": "callPlugins calls callPluginsPledge once for the transfer context and once for the receiving context .", "title": "", "metadata": ""}
{"_id": "68c02992933348d8fd6818f7e215b6c6", "text": "buying tokens for someone with offchain whitelist signature .", "title": "", "metadata": ""}
{"_id": "76411bde3de34a500d12b1b75da5e708", "text": "Get the available rooms for certain nights .", "title": "", "metadata": ""}
{"_id": "7942c03e24eead921a25a0d8d3dc9012", "text": "Converts from shares to Eth .", "title": "", "metadata": ""}
{"_id": "7c215e195020e116d2d570c3a710cfb2", "text": "allow the owner to claim his the contract balance at any time .", "title": "", "metadata": ""}
{"_id": "1629c1845bdcd8f519ac17d09c6f9c6f", "text": "_type Common _type United .", "title": "", "metadata": ""}
{"_id": "d79814faff7e7015444c14bee36a4f7c", "text": "After the reservation is paid , transfers tokens from the contract to the specified address ( which must have deposited ethers earlier ) .", "title": "", "metadata": ""}
{"_id": "c134ac63a92b5a11fdae55c85bcee798", "text": "Authorizes the given user to claim credit for the callers tokens .", "title": "", "metadata": ""}
{"_id": "713eb918a16fc243b91e2822e806a55a", "text": "get the current datetime .", "title": "", "metadata": ""}
{"_id": "fbc1265a24736080b6d33abfddd6a90e", "text": "withdraw all of the Ether to owner .", "title": "", "metadata": ""}
{"_id": "f87bad6a83ed8525b82bae397e1ea802", "text": "Function to create a token and associate it with Graffiti .", "title": "", "metadata": ""}
{"_id": "451cfb367ed7ae29c4028b22d7b02e32", "text": "allow the owner to update the rate before the crowdsale starts .", "title": "", "metadata": ""}
{"_id": "60b1981c6103c583ea0e89253f50a29b", "text": "Sends the ETH to ETH fund wallet and finalizes the token sale .", "title": "", "metadata": ""}
{"_id": "0301d243ffcaa43a24e508562bc2c988", "text": "Adds an array of hashes to be used for resolving .", "title": "", "metadata": ""}
{"_id": "178bd8a805ff708c48d5001b87fff8d3", "text": "Get the overall success state of the ICO .", "title": "", "metadata": ""}
{"_id": "c6313cab21218ccc439c1877b216bf4f", "text": "The owner can call this function to withdraw the funds that have been sent to this contract .", "title": "", "metadata": ""}
{"_id": "2baed83a729a1ddf9435e2f5909cf523", "text": "Allows the owner to unpause tokens , stop minting and transfer ownership of the token contract .", "title": "", "metadata": ""}
{"_id": "e3f63f094cef331e8f930751a03c5d71", "text": "admin initiates a request that the minimum and maximum amounts that any TrueUSD user can burn become newMin and newMax .", "title": "", "metadata": ""}
{"_id": "91c72a8ef96ccbff3f0492413fd43c14", "text": "Buy a new block without anybody owned .", "title": "", "metadata": ""}
{"_id": "c8adb7f5b28d0fa255783dd3e66fc525", "text": "Buy ticket of the lottery .", "title": "", "metadata": ""}
{"_id": "2b76a1ae43b2e2f1ab5787df60824cf6", "text": "Determines if token exists by checking it's price .", "title": "", "metadata": ""}
{"_id": "526184836ddddc27c8c15d7e527892a5", "text": "change lock transfer token ( 'locked' ) .", "title": "", "metadata": ""}
{"_id": "6d2a5fb008e94371c1ca67d8c9654304", "text": "Check whether the accessor is authorized to access that contract .", "title": "", "metadata": ""}
{"_id": "b2da0e94c8b0bd883ef29485014ccea4", "text": "This function can be called after the crowdfunding if the first goal is not reached .", "title": "", "metadata": ""}
{"_id": "a23e66ebb0dfd3923d739a47ef73b7d4", "text": "address The manager address .", "title": "", "metadata": ""}
{"_id": "948dc116f20b8e5fd1655ddf5577967f", "text": "onlyOwner allowed to mint tokens , respecting the cap , and only before the crowdsale starts .", "title": "", "metadata": ""}
{"_id": "81d9d5dd06b9324f17a0d689ab79e77b", "text": "allows a token pool owner to set a new reward amount .", "title": "", "metadata": ""}
{"_id": "2b4b31aade09d17010cd4559fe5f0bfa", "text": "Update block durations for various types of visits .", "title": "", "metadata": ""}
{"_id": "f1063ce654c5c636a5c3afc0fdef48aa", "text": "the contract owner can push all remain UC Coin to the target address .", "title": "", "metadata": ""}
{"_id": "3f66f0f1aa1d27396e0fa243716c3a45", "text": "Batch transfers .", "title": "", "metadata": ""}
{"_id": "cdd95c31418d4af1790f556be3009b05", "text": "get the total balance of this contract .", "title": "", "metadata": ""}
{"_id": "1ac49766adf9cb68ea0cdd401251eaf8", "text": "tokens distribution .", "title": "", "metadata": ""}
{"_id": "d76e1d4a801062efbc608146526f0d06", "text": "If ICO reached owner can withdrow ETH for ICO comping managment .", "title": "", "metadata": ""}
{"_id": "78c40be5b5accd037f0ae2fcd8e9d1af", "text": "internal ( gas operation ) : triggered before any ( gas costy operation ) balance transaction - account interest to balance of address its for performance reasons : use a gas operation to add new ( cumulated ) interest to account-balance to reduce interest-calc - loop ( balanceOf ) .", "title": "", "metadata": ""}
{"_id": "526efea2311a4a99c295435b8b7a9aa5", "text": "An internal method that creates a new card and stores it .", "title": "", "metadata": ""}
{"_id": "6f42eaaa626a1362c9816f30fd29776b", "text": "Add method .", "title": "", "metadata": ""}
{"_id": "c782105020efb6b300d74f43fd904d6b", "text": "For creating Games .", "title": "", "metadata": ""}
{"_id": "e2042f73f3d6013ef095986b1c03c99b", "text": "Function that returns the estimate token round by sending amount .", "title": "", "metadata": ""}
{"_id": "89acf3b7645c09931dc91c11f79c4630", "text": "Adds a new bet to a match with the outcome passed where there are 3 possible outcomes homeTeam wins ( 1 ) , awayTeam wins ( 2 ) , draw ( 3 ) .", "title": "", "metadata": ""}
{"_id": "63a18de7011acd6087091be6fe14e78b", "text": "Burns a specific amount of coins .", "title": "", "metadata": ""}
{"_id": "384ca9d5ce5064eae6c4e8b69cbd4da2", "text": "freeze _value token to _unFrozenTime .", "title": "", "metadata": ""}
{"_id": "39e4c1892a136b139e14d6bbedaa5aa7", "text": "update this bet some state .", "title": "", "metadata": ""}
{"_id": "cb3a58c1b906fd4dba6d9b99b09111d3", "text": "The symbol of the token .", "title": "", "metadata": ""}
{"_id": "e03a5e6f08a01801e1f16c77ba4b36c0", "text": "Change payment address - - must be Rivetz .", "title": "", "metadata": ""}
{"_id": "13a7f5a442bb306e713e502f94db689f", "text": "set the ticker registration fee in POLY tokens .", "title": "", "metadata": ""}
{"_id": "b6ba35eee417151d53086538c1c9013a", "text": "Set each Phase of your ICO here .", "title": "", "metadata": ""}
{"_id": "292f1865bde9b23c6b0360bd7c20d8a3", "text": "Add investors .", "title": "", "metadata": ""}
{"_id": "6d568fee3c42b04b1f4758ec25202be6", "text": "Transfer token for a specified contract .", "title": "", "metadata": ""}
{"_id": "db8cf54188468fd754b84ef7a998f43b", "text": "This method can be used by the owner to extract mistakenly sent tokens to this contract .", "title": "", "metadata": ""}
{"_id": "86b401a4cfff6bf5c32482941f203862", "text": "change gas price for oraclize calls , should be a compromise between speed and price according to market .", "title": "", "metadata": ""}
{"_id": "2e6d2c3f921b36d325b2abba81e6e6cc", "text": "methods for contract owner .", "title": "", "metadata": ""}
{"_id": "2d4b33a33a7ebacae5bc5fb230a24ee2", "text": "Freeze and unfreeze TGE .", "title": "", "metadata": ""}
{"_id": "839384abd8827bb40f4fe7f2b07b7cb6", "text": "Called from the foundation wallet to claim eth back from the MVM .", "title": "", "metadata": ""}
{"_id": "738072c1a6e1809ff54258429df5207e", "text": "Allowed only for rewards .", "title": "", "metadata": ""}
{"_id": "63c0e8266f509e62f1fa215faab277bb", "text": "Get TTT balance of an address .", "title": "", "metadata": ""}
{"_id": "4113a2c62d0059dff3551f1ed98ac6ef", "text": "sets the address for the rewards pool .", "title": "", "metadata": ""}
{"_id": "012d78addf3d0cc30a9ecb09aa2962c0", "text": "Compute the NewHope bonus according to the investment period .", "title": "", "metadata": ""}
{"_id": "4faf3847b53dd5be2a8121c12976f68e", "text": "Adds all unpaid rewards of the caller to his pending withdrawals .", "title": "", "metadata": ""}
{"_id": "2b6bed4aae25821e1b4fbd88fa82bdd3", "text": "Called when new tokens are needed in circulation .", "title": "", "metadata": ""}
{"_id": "b3145e6ffe0343afb9bcd5cd69ca44be", "text": "given a changeable token index , returns the changeable token contract address .", "title": "", "metadata": ""}
{"_id": "9dfeaa54f956498007e01200a9029083", "text": "allows the owner to change the mximum .", "title": "", "metadata": ""}
{"_id": "a0d1401c9fa845d07f034edd1f4379dc", "text": "Destroy an amount of DOL .", "title": "", "metadata": ""}
{"_id": "c334ccfddf2e0538c2df40973551d437", "text": "Version of balanceOf ( ) which includes only currently spendable tokens .", "title": "", "metadata": ""}
{"_id": "ed0a3b14fb75b8a25f7b0bd12fcde24b", "text": "setEtherPrice - change the token price .", "title": "", "metadata": ""}
{"_id": "42018faf7719aac803846cfc948d7da7", "text": "Withdraw ethers from EtherDelta .", "title": "", "metadata": ""}
{"_id": "1d93618c8fe686209959c03c7da863b5", "text": "Propose a Security Token Offering Contract for an issuance .", "title": "", "metadata": ""}
{"_id": "f37a192d9e893b4564c9e5109e0b0012", "text": "Adds a to b .", "title": "", "metadata": ""}
{"_id": "4ed68cfe7df761b48ab4b18d6751a29a", "text": "Get lock timestamp of the pool or zero .", "title": "", "metadata": ""}
{"_id": "bc3dafa52208540e928be779b0940e58", "text": "Anyone can bid by calling this function and supplying the corresponding eth .", "title": "", "metadata": ""}
{"_id": "b1006ede33a58917f0b1a93911492e7c", "text": "If the user was already registered , ensure that the new caps do not conflict previous contributions .", "title": "", "metadata": ""}
{"_id": "357c16518d11e3f4df870286dfbff0e6", "text": "Returns a tuple of many private variables .", "title": "", "metadata": ""}
{"_id": "f360c8fa6203c446ae9c7a1855708055", "text": "Transfer tokens to multiple addresses .", "title": "", "metadata": ""}
{"_id": "6601de0d03185170c7410f03ee996c14", "text": "Modifier - Manager Or Owner .", "title": "", "metadata": ""}
{"_id": "2c5d9bdcf5107fef7fd7d3fb118e3486", "text": "Overriden to calculate bonuses .", "title": "", "metadata": ""}
{"_id": "2af45632a1b9e800e6916519d03b8e8c", "text": "admin account transfer money to users .", "title": "", "metadata": ""}
{"_id": "cca5d083936f885ef809c7cf4b7f2904", "text": "added this here because it was not visible by preallocate .", "title": "", "metadata": ""}
{"_id": "bbdd5a8643be0be4cf88b04927546334", "text": "Remaining amount of tokens for PreIco stage .", "title": "", "metadata": ""}
{"_id": "45916dd9956687d35183ec485e41f524", "text": "Allows any user to get his eth refunded before the purchase is made or after approx .", "title": "", "metadata": ""}
{"_id": "1cd0e1c6f56ab7a28b6b6ecd400335ac", "text": "Finalize the auction - sets the final RDN token price and changes the auction stage after no bids are allowed anymore .", "title": "", "metadata": ""}
{"_id": "db8cebc4dae51523b46ac6b8e16064c4", "text": "Sets unlock for given allocation address .", "title": "", "metadata": ""}
{"_id": "551394db08fc499f1d294da9eff03160", "text": "Whether the token changer is in the paused state .", "title": "", "metadata": ""}
{"_id": "8de4b454998c6349a2de28f888aa19c9", "text": "Closes ICO - anyone can invoke if invoked to soon , takes no actions .", "title": "", "metadata": ""}
{"_id": "ad634a89eb616258aff41181b915a916", "text": "Update a DAppNode package .", "title": "", "metadata": ""}
{"_id": "600934b8a8078ff62cecfa2df509f73e", "text": "Buy tokens buy buyer tokens .", "title": "", "metadata": ""}
{"_id": "79fae9b6cfcb549fb051ee644d81081d", "text": "Returns all the loans that a lender possess .", "title": "", "metadata": ""}
{"_id": "930a79fc5fa5b634b2fe05d10f8447b2", "text": "transferToAddress transfers the specified amount of tokens to the specified address .", "title": "", "metadata": ""}
{"_id": "a9efd05faa08381f23fc241e521cea58", "text": "+ Interest stuff + + every token holder receives interest ( based on token balance ) at fixed intervals ( by default : 30 days ) + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + public ( read only ) : stage how many interval cycles completed ; increase every 12 intervals by 1 ; 1 stage approx .", "title": "", "metadata": ""}
{"_id": "9dba943ce6ae6813322ab500c2631a2a", "text": "kill contract , but before transfer all SKL and XP tokens .", "title": "", "metadata": ""}
{"_id": "30b2233bd79fa6992c57744c541ec5f7", "text": "Function to allow the project manager updating the description of the project .", "title": "", "metadata": ""}
{"_id": "dc933a6bac6f5e35b4f6da0206e3db7d", "text": "Transfers funds from caller to offer maker , and from market to caller .", "title": "", "metadata": ""}
{"_id": "dc7a0dd6ba735f6b93157120a469c672", "text": "get fighter property .", "title": "", "metadata": ""}
{"_id": "05627a702a30014472da4833092303e3", "text": "transfer ownership of Giftid from msg sender to an address .", "title": "", "metadata": ""}
{"_id": "611f11b0a09203156f7730ed0a6f07f2", "text": "Burns tokens and send reward .", "title": "", "metadata": ""}
{"_id": "2feaf0b0eb8bab0080031457fd4f13c2", "text": "Claim tokens for development reserve wallet .", "title": "", "metadata": ""}
{"_id": "d936f02ccba53e577d605a00aafdeb01", "text": "Allows owner to transfer funds from the collected fees pool to an approved wallet address .", "title": "", "metadata": ""}
{"_id": "6a0af02883889ca20c21d212479fe281", "text": "only owner adjust contract balance variable ( only used for max profit calc ) .", "title": "", "metadata": ""}
{"_id": "af2cbba80d817286f030f8cda6f1b3e6", "text": "Withdraw remaining tokens after all freeze periods are over ( in case there were additional token transfers ) .", "title": "", "metadata": ""}
{"_id": "43e617f47ce4004c5a7b634806c4219b", "text": "Total hash rate of a miner in a halving .", "title": "", "metadata": ""}
{"_id": "49ca76a8c593fe41426f8b9deb3ee8f0", "text": "Adds an item to the set .", "title": "", "metadata": ""}
{"_id": "796afacbf7428f3fe960376299e92acd", "text": "get artInfo .", "title": "", "metadata": ""}
{"_id": "a0fbdf736f6b59a2062a801784ea1a35", "text": "The effective token manager .", "title": "", "metadata": ""}
{"_id": "f3534fb7b384e9e4754238bec05e8fd0", "text": "override token creation to integrate with MyWill token .", "title": "", "metadata": ""}
{"_id": "48a013c765697ecb96a3b3ec049eb87c", "text": "modify the maximum amount of ETH the contract will allow in a transaction ( when creating a new job ) .", "title": "", "metadata": ""}
{"_id": "5332a59c7bd68e2250c00c9372f26ca2", "text": "restartMinting ( ) Function isn t for just simple reissuing .", "title": "", "metadata": ""}
{"_id": "a964a233c497cf6196db227ed4a6e491", "text": "Claims and clears cargo - - ONLY INTERNAL .", "title": "", "metadata": ""}
{"_id": "79308288998abf807b448a8cf9e696a8", "text": "Remove allocation .", "title": "", "metadata": ""}
{"_id": "9e788eb9302a51c31dd12df75d410434", "text": "Internal function of attack , assume all parameter checking is done .", "title": "", "metadata": ""}
{"_id": "954e20f16ee9c42cec2be54f4cc53fc5", "text": "2 Transfer Other's tokens , who had approve some token to me .", "title": "", "metadata": ""}
{"_id": "2d155367f3630577f00ad51601ce9ddb", "text": "Set the current dispensing rate in satoshis per gwei .", "title": "", "metadata": ""}
{"_id": "4cc46916b10434ef4e3c9713a29354df", "text": "public function to call the _burn function .", "title": "", "metadata": ""}
{"_id": "d6708939fcef37829287f377cb740a47", "text": "Spender of tokens transfer an amount of tokens from the token owner's balance to another account , with a check that the crowdsale is finalised .", "title": "", "metadata": ""}
{"_id": "acb45bb18bac82a5ee8ea349a67ea8d0", "text": "change the Current Token price per Ether .", "title": "", "metadata": ""}
{"_id": "fa4efb01769ee75b24f4bdb2a8e0c883", "text": "to enable pause sale for break in ICO and Pre-ICO .", "title": "", "metadata": ""}
{"_id": "df967d433404952c7329d66794ca1066", "text": "This function increments round to next : - it sets new currentLimit ( round ) using sequence : 100e18 , 200e18 , 4 * currentLImit - 2 * prevLimit .", "title": "", "metadata": ""}
{"_id": "c95fe09f487e8fa732d89ba49d988304", "text": "Activates voting requires round 9 .", "title": "", "metadata": ""}
{"_id": "4490de7c2932d8b37be3d7ced32369f9", "text": "Multiplies two numbers and checks for overflow before returning .", "title": "", "metadata": ""}
{"_id": "ccd65ed13eba312b658d48883dd3b17b", "text": "Function to reward influencers with KStarCoin .", "title": "", "metadata": ""}
{"_id": "d57906cb4b1a0a4ac873c4ec8d47fb84", "text": "Users can withdraw any amount of a given token up to their current balance .", "title": "", "metadata": ""}
{"_id": "abec16edcca26ccee01c3879560779c0", "text": "Look up for the owner role on providen address .", "title": "", "metadata": ""}
{"_id": "c040539b2a95b5640127470951d8d37c", "text": "Returns the balance that a given address has available for transfer .", "title": "", "metadata": ""}
{"_id": "29a8372259775e18bffc9d86108635c5", "text": "Used only if ether price increase ( decrease the price card ) .", "title": "", "metadata": ""}
{"_id": "cd9cda58561940ffc8a74cf4e0f6cfa0", "text": "Data Registry API .", "title": "", "metadata": ""}
{"_id": "62a8388b58602851283eeb865c70d1ed", "text": "Increase the channel deposit with _added_deposit .", "title": "", "metadata": ""}
{"_id": "90763fbd8b424b639ee9f14079c5e9e9", "text": "checkWinnerInernal tries finding a winner for the oldest non-decided round .", "title": "", "metadata": ""}
{"_id": "e320b8cc1d7d7aae5657bf5acbeee139", "text": "Adds a user to our list of admins .", "title": "", "metadata": ""}
{"_id": "9837108616832fd08cc74074c1b9da25", "text": "Returns the total number of rabbits currently in existence .", "title": "", "metadata": ""}
{"_id": "0d2db517ab194d66ddb20df289b5b00c", "text": "Mints a given amount of tokens to the provided address .", "title": "", "metadata": ""}
{"_id": "e70f1773cec21c995b068a7b003873f5", "text": "Check the name of the token ERC-20 Standard .", "title": "", "metadata": ""}
{"_id": "c6047221b88ea1de60a9fbd18f32d87c", "text": "totalSupply is the number of words we have in storage .", "title": "", "metadata": ""}
{"_id": "401e2f87d2eedeb402654e85d97ab031", "text": "Withdraws fees to the caller .", "title": "", "metadata": ""}
{"_id": "ad2e5c758b27507a67f4418c752d515a", "text": "Retrieve information about registered Publisher .", "title": "", "metadata": ""}
{"_id": "f8e67db463a45d68c0fd024574960511", "text": "Function to stop minting new tokens .", "title": "", "metadata": ""}
{"_id": "2bb693c554f31c78f2bfa5d5a78cc694", "text": "validates a conversion path - verifies that the number of elements is odd and that maximum number of 'hops' is 10 .", "title": "", "metadata": ""}
{"_id": "4bc73147dcf5739738469e7743d3804c", "text": "Gets the latest Eth Euro rate .", "title": "", "metadata": ""}
{"_id": "69fa7e57fb41d2dcadb079cad403119b", "text": "change the funding start block .", "title": "", "metadata": ""}
{"_id": "8c2840c23e1465b217318ea5428eb782", "text": "crowdsale function .", "title": "", "metadata": ""}
{"_id": "0865fb3a71abb53be575dfc3a0bf087e", "text": "Owner can issue new tokens in token contract .", "title": "", "metadata": ""}
{"_id": "8f034d0193cdf10cb4db36997a972ccb", "text": "modifier created to prevent short address attack problems .", "title": "", "metadata": ""}
{"_id": "59b647130d28704a40980862e693045b", "text": "pause contract .", "title": "", "metadata": ""}
{"_id": "f6409bf71ceeddb08457592387f6e148", "text": "Verify signature of given data .", "title": "", "metadata": ""}
{"_id": "a638df2f98d2ee202621175a69832740", "text": "An internal method that creates a new ship and stores it .", "title": "", "metadata": ""}
{"_id": "9345deea1d4441573c6145d9abd60acf", "text": "Allow the transfer of token to happen once listed on exchangers .", "title": "", "metadata": ""}
{"_id": "b5cc463c85e5705c3c40f926017123b2", "text": "only owner address can do manual refund used only if bet placed + oraclize failed to __callback filter LogBet by address and / or playerBetId : .", "title": "", "metadata": ""}
{"_id": "2593c2c9ea91aaae5cf4472f6b54275d", "text": "Set chemistry science contract address .", "title": "", "metadata": ""}
{"_id": "742938faa47d38c83800259cc5f5efc9", "text": "Calculate the amount of Payout for the Day Owner ( Holidays receive extra ) .", "title": "", "metadata": ""}
{"_id": "67a7b47443dc1c1ee6424b141e26ef56", "text": "changeBountyArbiter ( ) : allows the issuer to change a bounty's arbiter .", "title": "", "metadata": ""}
{"_id": "c6088c6671cb3261ec568d6aac638449", "text": "mint fortune .", "title": "", "metadata": ""}
{"_id": "553a1dfeb3011f252ea21c9f2000c4f4", "text": "Push an address to forward wei to , to the buffer .", "title": "", "metadata": ""}
{"_id": "b9ca6b72bce5a374149a3b80f40cdd4b", "text": "Frozen account handler .", "title": "", "metadata": ""}
{"_id": "c3fa0be959e242aff480fb9122ccd890", "text": "show user's current marketplace information and configuration , as well as some global configurations .", "title": "", "metadata": ""}
{"_id": "0e52ed3db731f150def48bcdbf563650", "text": "transfers tokens to investor , validations are not required .", "title": "", "metadata": ""}
{"_id": "0a62477c3067ad29f852fb668dfbc5c1", "text": "Not all deployment clients support constructor arguments .", "title": "", "metadata": ""}
{"_id": "40d7196d7e859d4c2943d710a74e5645", "text": "End game by paying out player and server .", "title": "", "metadata": ""}
{"_id": "f62c39a368e7ec5c7a3bc5602ce622d8", "text": "Extend ICO time .", "title": "", "metadata": ""}
{"_id": "22d0dd7af2a97ffc9e06611214ebaf81", "text": "Minter's interface .", "title": "", "metadata": ""}
{"_id": "d9951c4539267135e0205186fc7df1f4", "text": "Internal transfer .", "title": "", "metadata": ""}
{"_id": "5b2a27702520e1791d09141c03e21318", "text": "backup functions to be executed manually - in case of a critical ethereum platform failure during automatic function execution .", "title": "", "metadata": ""}
{"_id": "30cffc80c5f045b6cf4711149ae6312b", "text": "This function is called when the query has failed or contract initiator had to do manual callback instead of oraclize .", "title": "", "metadata": ""}
{"_id": "68e24e6f10e5b07feb3ca1105814cb58", "text": "Registers a subdomain .", "title": "", "metadata": ""}
{"_id": "cadcb41022ef9ed962e966e412fb6cc9", "text": "have to have in order to use array rather than mapping .", "title": "", "metadata": ""}
{"_id": "3cb51e64178e590090604b112267e696", "text": "used in reward contract .", "title": "", "metadata": ""}
{"_id": "34e7f626594ca3722acb0a576202db3f", "text": "Allows the owner to reclaim tokens that have been sent to the token address itself .", "title": "", "metadata": ""}
{"_id": "6b1f1ebf47ba5997a05cd092be1e82bf", "text": "By the time approve ( ) is called by the owner , a matching call for registerAltPurchase ( _participant , ETH , tx . id , .", "title": "", "metadata": ""}
{"_id": "393d0ebea42e9bb68a6a94a2049047df", "text": "Withdraw any value owed to : ( a ) a buyer that withdraws their bid or invalidates it by purchasing a Sketch outright for its asking price ( b ) a seller owed funds from the sale of a Sketch .", "title": "", "metadata": ""}
{"_id": "3ee18e6e3909d4ecf47926fa51b1e3d2", "text": "Used to transfer funds .", "title": "", "metadata": ""}
{"_id": "b82b21eb9013ff4abdc704c8d2c79075", "text": "Makes an offer to trade tokenAmount of ERC20 token , token , for weiAmount of wei .", "title": "", "metadata": ""}
{"_id": "04b441b3d8fc4b71d00af7b9be162338", "text": "Check if the crowdsale has ended and enables refunds only in case the goal hasn't been reached .", "title": "", "metadata": ""}
{"_id": "020dc75f8ccd7db6999511bae80efce4", "text": "Only contract owner .", "title": "", "metadata": ""}
{"_id": "f456c01c2cf6dbb5b9bf2b9a99742896", "text": "Check if sender address is a contract for security purposes .", "title": "", "metadata": ""}
{"_id": "a09b901c0fd194a90c98c79743b78374", "text": "Allows the admin to forcefully transfer a token from one address to another .", "title": "", "metadata": ""}
{"_id": "823e57294433b497eb15f90fa9d1cbd6", "text": "getTradingStart - the DST tokens trading starts 1 week after the event starts .", "title": "", "metadata": ""}
{"_id": "97b183b5e084b1fb40a042917a5ab3cf", "text": "customer buy a rabbit .", "title": "", "metadata": ""}
{"_id": "3f2e45734ace3d0c01545ebb71fa1449", "text": "freeze Balance of target .", "title": "", "metadata": ""}
{"_id": "13c9de31523da749e0b44d31cb94bbe6", "text": "Allows owner to start an unlimited crowdsale with no deadline or funding goal .", "title": "", "metadata": ""}
{"_id": "0bfb446c6a69f1c671103b3300d1a972", "text": "owner can withdraw ether here .", "title": "", "metadata": ""}
{"_id": "6fcb7e9aa4d7034cbc3c57a8ecb65aea", "text": "Dispatch the referrer bonus when a country is sold .", "title": "", "metadata": ""}
{"_id": "c6794c26b960ab5cf55ec9661d7354f5", "text": "Settle an investment made in ETH and distribute tokens .", "title": "", "metadata": ""}
{"_id": "75c9c9587b3a98a990457f83ebf811c9", "text": "Approve addresses to launch a company with the given name .", "title": "", "metadata": ""}
{"_id": "ba910902c2199895017ee3b3b34e6ec1", "text": "sell the animal of the given id .", "title": "", "metadata": ""}
{"_id": "1145ba62d9ea160461befcec0610b613", "text": "build building at location ( posx , posy ) .", "title": "", "metadata": ""}
{"_id": "25b2e0bc9282479b1c0c389e562ad159", "text": "whether to apply hard cap check logic via getMaximumFunds ( ) method .", "title": "", "metadata": ""}
{"_id": "37d961e766aae135e1ba155ea56e166e", "text": "User views .", "title": "", "metadata": ""}
{"_id": "9da540b584aa21833be4f298e2ecd5f5", "text": "function that enables to add one-off additional text to the token .", "title": "", "metadata": ""}
{"_id": "4106e7369d142f46f115b175bddb6118", "text": "locks a type until a given date .", "title": "", "metadata": ""}
{"_id": "73471803387e59b766bdc810e3f9a5c6", "text": "Helper function that checks for ERC777TokensSender on the sender and calls it .", "title": "", "metadata": ""}
{"_id": "c901738d69744f144ca200e7c3d56fad", "text": "Returns array with owner addresses , which confirmed transaction .", "title": "", "metadata": ""}
{"_id": "4454ca491c11f717e0f7da6989bc8b44", "text": "utility function to allow the owner to handle the early sale purchases .", "title": "", "metadata": ""}
{"_id": "13d21361a04e8bf898503e893078eace", "text": "any non-contract address can call this function and begin playing AddressWars ! please note that as there are a lot of write to storage operations , this function will be quite expensive in terms of gas so keep that in mind when sending your transaction to the network ! 350k gas should be enough to handle all of the storage operations but MetaMask will give a good estimate when you initialize the transaction in order to enlist in AddressWars , you must first pay the enlistingFee ( free for beta ! ) .", "title": "", "metadata": ""}
{"_id": "ba4dd167ae95bb8ed565baf1230a727b", "text": "Transfers joker ownership to a new address .", "title": "", "metadata": ""}
{"_id": "8531d8c3c049d53070bbd2cfc5f4892a", "text": "The price is always 0 . 5 ether , and you can buy any available square .", "title": "", "metadata": ""}
{"_id": "77ec158f3be860bc26f1d94d10618c35", "text": "Remove the contract .", "title": "", "metadata": ""}
{"_id": "156a36a6215b9dcd8ab0bd210362bd8b", "text": "Requests oracles rates updating ; funds oracles if needed .", "title": "", "metadata": ""}
{"_id": "9069066f38185d160523e145c7e23c43", "text": "This function to be used if the target is a normal eth / wallet address .", "title": "", "metadata": ""}
{"_id": "135a2683ae6d80eade777ca01b639805", "text": "verifies that an amount is greater than zero .", "title": "", "metadata": ""}
{"_id": "ce7472bf7b52b31af95b7dcfda159aef", "text": "confirm a transaction through just the hash .", "title": "", "metadata": ""}
{"_id": "047d56d628cfa281559d740fd0330388", "text": "Set the redeem wallet .", "title": "", "metadata": ""}
{"_id": "e4c953a2c23ce939b01734607252623c", "text": "update owner proprietary data .", "title": "", "metadata": ""}
{"_id": "fcb78113e3375b8c32eece392e8f18fc", "text": "adjusts the Deadline of the Escrow contract by which completion is needed .", "title": "", "metadata": ""}
{"_id": "09dc1dbf8c39f7f2f536b8ce2453f519", "text": "Adds owner to wallet .", "title": "", "metadata": ""}
{"_id": "a9323f3c099a5e417782044a5e62db24", "text": "Try to find master address by any other ; otherwise add to address book as master .", "title": "", "metadata": ""}
{"_id": "213dafe116aedbc3856ff55c8b391f43", "text": "setter for the address that is responsible for creating deposits .", "title": "", "metadata": ""}
{"_id": "dc1c9171b994be77d19596f7ae37983f", "text": "Adds a new presale allocation for the contributor with address _contributor .", "title": "", "metadata": ""}
{"_id": "cd97840b35c9f2efd35d49acb1a93df4", "text": "need to process any playerPendingWithdrawals .", "title": "", "metadata": ""}
{"_id": "0a4a066dc904fa6be808687be96462cb", "text": "Minting and management .", "title": "", "metadata": ""}
{"_id": "090534a8d6f6f90edf22c6c42751382b", "text": "Finalize a succcesful crowdsale .", "title": "", "metadata": ""}
{"_id": "5db90d14b43201dd73e3f2122ab99961", "text": "Removes the Error Hold from the contract and resumes it for working .", "title": "", "metadata": ""}
{"_id": "127bf08741109408511690a793b1f712", "text": "Owner can initiate transfer of contract to a new owner .", "title": "", "metadata": ""}
{"_id": "158831c84f061d9526a9822cb64b9d52", "text": "Allows the owner to manually destroy some SHP to an address if something goes wrong .", "title": "", "metadata": ""}
{"_id": "13b8a0330cd8eafe7f1ba63bb6931795", "text": "lps - ref , alt .", "title": "", "metadata": ""}
{"_id": "f2f85c5c1aeff51ba2d29c99827ac2b3", "text": "modifier to scope access to ceo / / reverts .", "title": "", "metadata": ""}
{"_id": "645bcccef9280e59cd8b971018fc02ed", "text": "Mass set extra bonus for addresses .", "title": "", "metadata": ""}
{"_id": "13d6fac47e3ce6437ce94e379220ea73", "text": "Transfer allowed amount of TAI tokens from another address ____________________________________________________________________________________ .", "title": "", "metadata": ""}
{"_id": "935d370ba1046b40dc65d1c42c705747", "text": "Adds new document - only owner and if not retired .", "title": "", "metadata": ""}
{"_id": "9db106fe063b281c351c4380014e3432", "text": "Allows anyone to transfer the OMT tokens once trading has started .", "title": "", "metadata": ""}
{"_id": "8e31de4526b3e258728d5ff4b542adbf", "text": "profile info by string key .", "title": "", "metadata": ""}
{"_id": "637a81540634593744248bf8e3b135dc", "text": "Stop selling tokens .", "title": "", "metadata": ""}
{"_id": "03b6d4151c101b2410931ea2058e344c", "text": "explicit getter for balance .", "title": "", "metadata": ""}
{"_id": "95f87efa2386e470a3ae1ccbd87e9055", "text": "This function returns the current price of the button according to the amount pressed .", "title": "", "metadata": ""}
{"_id": "9e58dc28f020d3e52a03ae1767b861ba", "text": "only owner can be modifier .", "title": "", "metadata": ""}
{"_id": "b34155f63f7a685e13d7e082dac7343f", "text": "final unlock transfer token ( 'locked' and 'canChangeLocked' ) .", "title": "", "metadata": ""}
{"_id": "a812522f7d233b5bedc55c03786a131c", "text": "finalize ( ) can be called once the FairAuction has ended , which will allow withdrawals .", "title": "", "metadata": ""}
{"_id": "35a4da19bbe809e005a55dd6111803a0", "text": "to check hash in js and in solidity .", "title": "", "metadata": ""}
{"_id": "cfd86628b4ebcaa3a2d35e066ce5a313", "text": "Check if address _a is an identity in the IdentityEthAddress Contract .", "title": "", "metadata": ""}
{"_id": "a239e6d1fb9ef0b9032aff5728b259a5", "text": "when releaseTime reached , and release ( ) has been called .", "title": "", "metadata": ""}
{"_id": "22895a8889db2d760914c6de90f6e471", "text": "Balance Function .", "title": "", "metadata": ""}
{"_id": "5f5cd9442e0a19180adf0da5de3c1fe1", "text": "Owner can update base information here .", "title": "", "metadata": ""}
{"_id": "20755625992e0c6d45d47ced7308a12d", "text": "Calls . removeBankroll ( ) .", "title": "", "metadata": ""}
{"_id": "5eb9e4e4dcd352cae322e0b5991f5783", "text": "returns all pixel's data .", "title": "", "metadata": ""}
{"_id": "c2d05bea5b34054590ea23e493154388", "text": "Access methods : .", "title": "", "metadata": ""}
{"_id": "cbe935b3a92472b2fa5544c14271a967", "text": "Creates initial set of opinions .", "title": "", "metadata": ""}
{"_id": "b54004331934727ba0cc5924a632b501", "text": "airdrop to other holders .", "title": "", "metadata": ""}
{"_id": "5a405468c5236e99e9442d32df1cc705", "text": "to be changed to retrieve current stats ! .", "title": "", "metadata": ""}
{"_id": "c26b609415a74acb54b950856aa38d4f", "text": "In a long run , deprecate the legacy methods above and only use this payload .", "title": "", "metadata": ""}
{"_id": "d54adc6dffb92755775b6752509a4c23", "text": "Sender requests the closing of the channel and starts the challenge period .", "title": "", "metadata": ""}
{"_id": "4e50db3d2d6901c33a30c010170c03b8", "text": "Compute log ( x / FIXED_1 ) * FIXED_1 .", "title": "", "metadata": ""}
{"_id": "bfa41bdb060f44040bf8e9ce28254a45", "text": "Safely transfers the ownership of a given token ID to another address .", "title": "", "metadata": ""}
{"_id": "11619a1f786fd63f923379f4d6e1bfd1", "text": "Retrieve contract address at _key location , mostly for convenience .", "title": "", "metadata": ""}
{"_id": "c1e5e082210fc54377c81ce6df2e9c07", "text": "Sets the mining token address .", "title": "", "metadata": ""}
{"_id": "2ae4a3e242ca30c77f15121ea41edb4f", "text": "Stops ICO manually .", "title": "", "metadata": ""}
{"_id": "c9e46fe005fdc26fb81d0d01b657fce6", "text": "Refound tokens .", "title": "", "metadata": ""}
{"_id": "0e50f2ac5716c42a1d53420a548e0dd2", "text": "newOwner has to accept the ownership before it is transferred .", "title": "", "metadata": ""}
{"_id": "c059778cb407b18d8cf1973d76b5c3f6", "text": "Hashes the values and returns the matching escrow object and trade hash .", "title": "", "metadata": ""}
{"_id": "04685a98b5dec4ead4639f70aec443a3", "text": "Set the maximum dividend depth .", "title": "", "metadata": ""}
{"_id": "69d5001b48733ce1a1dce9a2367240d1", "text": "Low-level change of blocks and getters .", "title": "", "metadata": ""}
{"_id": "092170a08d39d210a9a6a89e9d4f0d65", "text": "opens the Market Maker to recvice transactions from all sources .", "title": "", "metadata": ""}
{"_id": "2f883602a3ab01764c5e1c52571d7c6d", "text": "finish current round .", "title": "", "metadata": ""}
{"_id": "e713ecf3d4cbfe1bdf8e8bb3c475742b", "text": "finds the oldest animal .", "title": "", "metadata": ""}
{"_id": "1296243c01b3882a01bf293cb55d335b", "text": "Checks for token ownership .", "title": "", "metadata": ""}
{"_id": "4e235564ebd178002ea54e14dbec67a4", "text": "multisend token to many address .", "title": "", "metadata": ""}
{"_id": "76ce9c3794a99808146b8819d3b1b952", "text": "Maximumcoin - Modified the correct technical term mint to a well know term mine for marketing purposes .", "title": "", "metadata": ""}
{"_id": "1140e881e5cbe32d5e67a93530956702", "text": "Returns a whole amount of tokens .", "title": "", "metadata": ""}
{"_id": "fb2b5630b161a5db57b2b41aaaf36300", "text": "set ICO start or stop .", "title": "", "metadata": ""}
{"_id": "1678dc5c90a25258a1ee536abd45bf9e", "text": "Update verifier's data .", "title": "", "metadata": ""}
{"_id": "a8996e5cadc8dfa1fb044bdb3482b674", "text": "returns the gas cost of the called function .", "title": "", "metadata": ""}
{"_id": "68fb628419cb3aad63b5a1cb5bcfbf13", "text": "read action .", "title": "", "metadata": ""}
{"_id": "5bbc6c801d7a30ea01a0e89e9004a665", "text": "Recycle other ERC20 tokens .", "title": "", "metadata": ""}
{"_id": "a5207e88d4dcd05b7a5117cc56a0a530", "text": "Allows other contracts to check if a store is active .", "title": "", "metadata": ""}
{"_id": "12406fca275db43094de31391ac2ab79", "text": "owner modification .", "title": "", "metadata": ""}
{"_id": "72bbaf6a61942569baa089dd04f63b1f", "text": "When cards are moved around in the app , this will update their ownership on the block chain .", "title": "", "metadata": ""}
{"_id": "091f07bb95129d39560d7f93a55851f1", "text": "Add the address to the user list .", "title": "", "metadata": ""}
{"_id": "854cadfa7d92f8acdea0a93bb426e207", "text": "determine the rate of the token w . r . t .", "title": "", "metadata": ""}
{"_id": "d6f562c52fe443228780a1feb473f499", "text": "In case one of us gets capped , we need to replace his azz .", "title": "", "metadata": ""}
{"_id": "8a40defb2165f10e549614cebe082141", "text": "Function to pause ICO .", "title": "", "metadata": ""}
{"_id": "1da9b56f7d8c83a8201f32d37eb4fd6d", "text": "called by the owner to allow transferts , triggers Transferable state .", "title": "", "metadata": ""}
{"_id": "9f745a3a8a499d485b7f129634051c8a", "text": "A uint specifing the amount of tokens still avaible for the spender .", "title": "", "metadata": ""}
{"_id": "5ef30ed414c43b77c4024e40610db10a", "text": "Constructor parameters .", "title": "", "metadata": ""}
{"_id": "867463272dabb4bc53eb0d61f3270a9e", "text": "Disable voting .", "title": "", "metadata": ""}
{"_id": "f799a704e06f92077d20dc531f3fa330", "text": "Function to unpause the crowdsale .", "title": "", "metadata": ""}
{"_id": "1ddae31b6299ca1b1a68d20bf8d7fa11", "text": "Creates the talao token .", "title": "", "metadata": ""}
{"_id": "35440db778be2ff338213a7c7d23b0b9", "text": "Just for checking .", "title": "", "metadata": ""}
{"_id": "239f5394c5fbe57f043f825fb57087a5", "text": "Allows anyone to buy tokens in exchange of ether .", "title": "", "metadata": ""}
{"_id": "efdaf6a7154ab5efa774b63b0d9758e3", "text": "Get the customer's Tx of payment for MCW data - Tx of payment for KWh which is recorded in the Tx .", "title": "", "metadata": ""}
{"_id": "ca9f5c337def60e0e4d136906cf52ae9", "text": "only Oscar can do this action .", "title": "", "metadata": ""}
{"_id": "c7c77835c6251edbb06fbfd4233c0e2f", "text": "Calculate the number of tokens based on the current stage .", "title": "", "metadata": ""}
{"_id": "58c04b913623e94aff41c8cdb54d51c3", "text": "a new 'block' to be mined .", "title": "", "metadata": ""}
{"_id": "09b6bef883f14e4c18130c41ffcc69e3", "text": "The Owner destroys his own token .", "title": "", "metadata": ""}
{"_id": "61320393787e37786fa660da0645c844", "text": "Funding succeeds if not aborted , minimum funds are raised before end date .", "title": "", "metadata": ""}
{"_id": "702b35fcd578785603ab48788923778e", "text": "get votes for a subset of _count voters , from _voterIndex .", "title": "", "metadata": ""}
{"_id": "4e9773122d3cd0f01ad93061c99b8eca", "text": "Takes a rational number numerator / denominator as input .", "title": "", "metadata": ""}
{"_id": "d7a57d63d9c74fec7d7c15e5a4cd6342", "text": "modifier to allow actions only when Pre-ICO end date is now .", "title": "", "metadata": ""}
{"_id": "65ee6da3dc9933e5a185d3a80ed997e8", "text": "allow the owner to set the supply max .", "title": "", "metadata": ""}
{"_id": "4170a7f8e4dd66285a178a3404c6f335", "text": "1 - if the funding of the project Failed , allows investors to claim their locked ether back .", "title": "", "metadata": ""}
{"_id": "853b4d19a5cd968085b6aeab2502bc52", "text": "Sets controlled token .", "title": "", "metadata": ""}
{"_id": "bd9f87c3a19d0bfc3fd7d2d26a18a3a5", "text": "get list of cofounders .", "title": "", "metadata": ""}
{"_id": "2c7f61f7a2018661b6488f2aac32cf7c", "text": "Allows the owner to set the exchangerate contract .", "title": "", "metadata": ""}
{"_id": "5975cb93492d4b56b66cf6bf314fbac1", "text": "Update the Medal Leader Boards .", "title": "", "metadata": ""}
{"_id": "e64a29b19fc1f5571dbf60419de92fef", "text": "contract can burn its own or its sale tokens .", "title": "", "metadata": ""}
{"_id": "947a449ac15cdb8ca66133b7154674c4", "text": "Whether the approval was successful or not .", "title": "", "metadata": ""}
{"_id": "2abd506e8ab3b9bdac5e2891b154b0a6", "text": "Change transfer locking state .", "title": "", "metadata": ""}
{"_id": "b26184f40c715947a131a74f1c9ae792", "text": "Transfer _value TON tokens from sender's account msg . sender .", "title": "", "metadata": ""}
{"_id": "c87ea8df98212d44550bc6b0156da59f", "text": "Contract owner can alter the maximum storage retention .", "title": "", "metadata": ""}
{"_id": "7550c732ddce827d950b6d59f37b902f", "text": "Credits _account with whatever dividend points they haven't yet been credited .", "title": "", "metadata": ""}
{"_id": "8c8808671607b805423195941bce329e", "text": "current bet amount for the game .", "title": "", "metadata": ""}
{"_id": "4d0307f2abbb1e88483edbd770fc5c49", "text": "Put a kitty up for auction .", "title": "", "metadata": ""}
{"_id": "339f1ce64e1b787a0f381cb27892ec72", "text": "Pause the contract .", "title": "", "metadata": ""}
{"_id": "167a7b535096b8273b81c9f4cb4482dc", "text": "If a user has been bad , they won't be able to receive a dividend : ( .", "title": "", "metadata": ""}
{"_id": "20519c03ced0456808010f93ad1e7e03", "text": "Calculates the coin age for given address and time .", "title": "", "metadata": ""}
{"_id": "d416b5505bead619f3318be469273970", "text": "ERC20 backwards compatible transferFrom using backendDB .", "title": "", "metadata": ""}
{"_id": "1599d6732cfa880b59879e533183350f", "text": "Same as noReentry ( ) but intended to be overloaded .", "title": "", "metadata": ""}
{"_id": "85ee2b6ae59b7b6a01c93c4de469af30", "text": "Returns the creationUnit .", "title": "", "metadata": ""}
{"_id": "8b83c97920d4242854f3238968987530", "text": "admin close activate phrase to .", "title": "", "metadata": ""}
{"_id": "05f965ca27ab820e8a06ea6450e9d9ec", "text": "Transfer OnlyOwner .", "title": "", "metadata": ""}
{"_id": "7806cec8feacb1a96eee58cb7965d60c", "text": "solhint-enable const-name - snakecase .", "title": "", "metadata": ""}
{"_id": "51cde770f56e20931342cc62515f17bb", "text": "This function can be used by the owner of a hero to modify the price of its hero .", "title": "", "metadata": ""}
{"_id": "8ef7fff8aede0ba566932c72a085fae9", "text": "Function to calculate hash of the token s name .", "title": "", "metadata": ""}
{"_id": "477d014b7e613289df684e435bc1000f", "text": "Send _value token to _to from _from on the condition that global token lock and individual address lock in the from account are both released .", "title": "", "metadata": ""}
{"_id": "42f1165b255ba910959a5d76518b4703", "text": "Transfers vested tokens to a target address .", "title": "", "metadata": ""}
{"_id": "82114e01a36da57ffbf0e58784b6f271", "text": "payable function to trigger the purchase .", "title": "", "metadata": ""}
{"_id": "c5ed0d731a961b0f23b8ef81568aad0b", "text": "Check the token allowance of a wallet in a token contract .", "title": "", "metadata": ""}
{"_id": "cc9e4a7b875119cef3595d9864391f40", "text": "This function is called when user buy tokens .", "title": "", "metadata": ""}
{"_id": "56c04db19b57f62f0fd84bc521b36b2a", "text": "Refund in the case of an unsuccessful crowdsale .", "title": "", "metadata": ""}
{"_id": "fa2cff708aed4a6e08c966b1adedc1ea", "text": "Airdrop tokens to requested addresses .", "title": "", "metadata": ""}
{"_id": "60d58946f336b4861e31e8da4370ced6", "text": "Function to enter the raffle .", "title": "", "metadata": ""}
{"_id": "903e33a2f42ea6cd1042b14824650287", "text": "Allows anyone to unlock token transfers and distribute reserved tokens , as long as the sale is finalized .", "title": "", "metadata": ""}
{"_id": "8e2967eb8ea08ee747e40c11fc11f581", "text": "returns the current bonus rate .", "title": "", "metadata": ""}
{"_id": "6fc264645d522add131632ba5f25aa09", "text": "change owner this this trader wallet .", "title": "", "metadata": ""}
{"_id": "d9369f943c54ea69f7881d2d456b58ff", "text": "Withdraw the funds .", "title": "", "metadata": ""}
{"_id": "6a3f42f01f1839c5617bb58fa4e8a1e7", "text": "Returns all the relevant information about a specific property .", "title": "", "metadata": ""}
{"_id": "096df84e2d1e2080eb949f3aace79674", "text": "Members can always sell to the contract at 1 BARF 0 . 01 ETH .", "title": "", "metadata": ""}
{"_id": "57979bf1c5d12c5e5f5ab6a641ff7a9a", "text": "All logic related to the TGE contribution is currently placed below .", "title": "", "metadata": ""}
{"_id": "92c5342b056ae54ac61a570d4d59fd47", "text": "This function mints a new Tulip .", "title": "", "metadata": ""}
{"_id": "962a14d4cf756a27e7d21419d2e6bd3c", "text": "Gets list of locked up deposits with dates when they will be available to withdraw .", "title": "", "metadata": ""}
{"_id": "70285bcd6cdf678bbb216b7d20a25ba5", "text": "getter to determine if address is in whitelist .", "title": "", "metadata": ""}
{"_id": "4a397a799962aa015c93cc646dfddcdc", "text": "Internal function to buy tokens and promote a proposal .", "title": "", "metadata": ""}
{"_id": "47fd61c7c60d7eabe68b128cee8306df", "text": "Creates a new user-generated meme with the given metadata and text , with given _price and assignes it to an address .", "title": "", "metadata": ""}
{"_id": "80e39152108cbd481b44fd52b8566130", "text": "updateUserClaimInBulk updates multiple users claim status and adds token to their wallet .", "title": "", "metadata": ""}
{"_id": "622780fe45603c2f24dd6c56932845a3", "text": "Put the deed into escrow , thereby taking ownership of it .", "title": "", "metadata": ""}
{"_id": "66ce004fe1c41bb172dbeb65680abbc6", "text": "Add a game to the whitelist .", "title": "", "metadata": ""}
{"_id": "c11c1e161275b8941b20122a4ff17fc4", "text": "Forawards the tokens to the defined accounts , if the limit is exceeded sends the extra tokens to the coldwallet .", "title": "", "metadata": ""}
{"_id": "f3802cfc9a4762bc99cd0e6ede4aae5e", "text": "get global name for specified address , .", "title": "", "metadata": ""}
{"_id": "c582534c7e4c7975ad95aa6ba72c2468", "text": "Returns the first generation in the future that has not yet started .", "title": "", "metadata": ""}
{"_id": "e9bfb1f915c146a1a3d901a623f7281f", "text": "Freeze specific account from sending receiving tokens .", "title": "", "metadata": ""}
{"_id": "0c4f654f919a350d94ed21d24ad13d42", "text": "Sets new return agent .", "title": "", "metadata": ""}
{"_id": "5ae43686e8f20e8d67a4da86a0f46b22", "text": "Normal ERC20 transfer , except before transferring it credits points for both the sender and receiver .", "title": "", "metadata": ""}
{"_id": "5c6ffa1845393337c97b3b9e7bb5fa42", "text": "Gets the current player boards to present to the player as needed .", "title": "", "metadata": ""}
{"_id": "ba8c0fced43c6340ed5b582ea1ed58ad", "text": "guard a villain .", "title": "", "metadata": ""}
{"_id": "d4331c7c878e02a999c14c418b5c3c8c", "text": "Raffle v1 .", "title": "", "metadata": ""}
{"_id": "8941af1c926456cfd5c640eb93bb4a5b", "text": "Withdraw function ( ETH ) .", "title": "", "metadata": ""}
{"_id": "922e57a555e7d0576e215c00ffa128bb", "text": "Allows the admin to set a new admin address .", "title": "", "metadata": ""}
{"_id": "7c9d66babf07c7d15c26e2d5b68a5108", "text": "Function to claim ANY token accidentally stuck on contract .", "title": "", "metadata": ""}
{"_id": "48ed4f7b13a643ad4dd0910364051ecd", "text": "Transfers the balance of the sale auction contract to the AetherCore contract .", "title": "", "metadata": ""}
{"_id": "f1a61b7275ff1d703fea8b9ceb55561f", "text": "Notifies the controller about an approval , for this sale all approvals are allowed by default and no extra notifications are needed .", "title": "", "metadata": ""}
{"_id": "5a6b464867c09b5bf8b260d85d6b95fd", "text": "Allows the owner of this contract to set the currentPrice for each token .", "title": "", "metadata": ""}
{"_id": "990fa620b554fe48379eceace9a643ef", "text": "Allows token transfer .", "title": "", "metadata": ""}
{"_id": "6a28130d08d006c16eb701d6c72be2e2", "text": "Generic function that adds a document to the blockchain or modifies a document that already exists on the blockchain .", "title": "", "metadata": ""}
{"_id": "8b416da3a93cf77c2a2d89e6f659ad87", "text": "startEscrow FavorContract starts an escrow contract and transfers the tokens into the contract .", "title": "", "metadata": ""}
{"_id": "ec96ca7dc8da862875c7ccd477e0d1d0", "text": "Marks canvas as finished if all the pixels has been already set .", "title": "", "metadata": ""}
{"_id": "039f2f96b6f2a4a4ca5c654dd3fd08f1", "text": "Propose the transfer of the token contract ownership to _dcorpAddress .", "title": "", "metadata": ""}
{"_id": "6196eca5d110285e5c7ecf0ca4d67724", "text": "Function to add an address to the managers .", "title": "", "metadata": ""}
{"_id": "6980d7f9a2a0c21fed2739ac2d7db2ed", "text": "Breed a LinglongCat you own ( as matron ) with a sire that you own , or for which you have previously been given Siring approval .", "title": "", "metadata": ""}
{"_id": "20ac20e95625a87216253abce82d5a88", "text": "tick count at the timestamp t .", "title": "", "metadata": ""}
{"_id": "da7c3950e70bd72b7c535625683ccb4e", "text": "Clear invalid bounty reward ( for owner ) .", "title": "", "metadata": ""}
{"_id": "677333800b3e4461ab2e536f2db455c2", "text": "Assigns a new address to the Animator role .", "title": "", "metadata": ""}
{"_id": "da8173b46974e7ecf2c3ea01f91d00e7", "text": "Finalize the crowdsale , should be called after the refund period .", "title": "", "metadata": ""}
{"_id": "680abd8ea2225d63fa2ff1aec7fbee0b", "text": "Function to create a request as payee .", "title": "", "metadata": ""}
{"_id": "93f0e5cf350a1667e1273ed94452c809", "text": "function to link big and little sister , this one can only be called by the big sister and only once .", "title": "", "metadata": ""}
{"_id": "bb96bc79f7dced99e8a56f41bf7678f6", "text": "payment processing .", "title": "", "metadata": ""}
{"_id": "cc271abe94b91b73e9dccb6d7e416957", "text": "bytes1 The converted value if the passed value was alphabetic and in a upper case otherwise returns the original value .", "title": "", "metadata": ""}
{"_id": "044e4e17b74f8ab4242148ac62a003cc", "text": "overriding calculateTokenAmount for whilelist investors .", "title": "", "metadata": ""}
{"_id": "8e1cc7389ae47e25dc2055cd43fe1a6e", "text": "function for change btc agent can be called only by owner of the contract .", "title": "", "metadata": ""}
{"_id": "1a2eaa348806ae73f8dbdb42a4fc9b5a", "text": "allows a contract to enable / disable certain feature ( s ) .", "title": "", "metadata": ""}
{"_id": "a6b72a853fac741b15f42aa7e3f35a44", "text": "Performs allowance transfer call on the platform by the name of specified sender .", "title": "", "metadata": ""}
{"_id": "a39ad8e6d4faca405d228c07bc852730", "text": "Change bid multiplier to manage volume .", "title": "", "metadata": ""}
{"_id": "3f2ad3fae01f097c0ceccf0bf078100e", "text": "price at given time as 128 . 128 fixed point number .", "title": "", "metadata": ""}
{"_id": "4bbdc4644463ee842bed7b653e0686fb", "text": "Flags job completed to inform hirer .", "title": "", "metadata": ""}
{"_id": "b59198f0197045a7c9f3c65fbb0d547c", "text": "release dividends rights .", "title": "", "metadata": ""}
{"_id": "59d63b50fb8a6e662a2e2306fbc45107", "text": "function publicTransferToken - Transfer public tokens via AirDrop .", "title": "", "metadata": ""}
{"_id": "d0bc837c7f30ce4d24fd03fea9b14b9c", "text": "MiniMe Controller default settings for allowing token transfers .", "title": "", "metadata": ""}
{"_id": "8af351a362e4084e58aaadc42b3fb044", "text": "verified users checkup .", "title": "", "metadata": ""}
{"_id": "2d5898afe0151f18138153c3fa4e3f67", "text": "sets a rate for ico rounds .", "title": "", "metadata": ""}
{"_id": "6e8456b3e57086891463259f67fb4ecb", "text": "Crowdfund state machine management .", "title": "", "metadata": ""}
{"_id": "b185723f2b7ea044a90f3700bf58549d", "text": "Modifier to check manager address .", "title": "", "metadata": ""}
{"_id": "ceb19aeb3ccbce9dc1bea5738af1278f", "text": "Delete investition .", "title": "", "metadata": ""}
{"_id": "4769dbe80cf635aaadcd6c786cf5463b", "text": "This function withdraws the contract owner's cut .", "title": "", "metadata": ""}
{"_id": "1d17bf281843f643300f708da721810d", "text": "check if valid purchase .", "title": "", "metadata": ""}
{"_id": "6fe263d44d05c42466cfaff7c5c131b1", "text": "set the new released period length of an account .", "title": "", "metadata": ""}
{"_id": "5493da34fb394c01eb65871c039f42f6", "text": "function set upper limit to receive funds value entered in whole ether .", "title": "", "metadata": ""}
{"_id": "8ade8d78e006ffc265c019c5359a462e", "text": "Declare Crowdsale refund finish .", "title": "", "metadata": ""}
{"_id": "53824d78ce9d7bb034d71a40828a1e91", "text": "Modifier to make a function callable only when the caller can transfert token .", "title": "", "metadata": ""}
{"_id": "1d5e0144b9f2dc5d721fe0f5ca7188d3", "text": "withdraw foreign tokens .", "title": "", "metadata": ""}
{"_id": "a0deb63cbb763abd3cd9bac2a5f501a2", "text": "Withdraw funds to beneficiary .", "title": "", "metadata": ""}
{"_id": "804faa7cbdc2e7f9405d6225cf96fca5", "text": "Internal Price Calculation - compute amount in counter currency that would be obtained by selling baseAmount at the given packed price ( if no fees ) .", "title": "", "metadata": ""}
{"_id": "46d9061bb3ccd919e7ecdac0680d1396", "text": "query current blance of fees .", "title": "", "metadata": ""}
{"_id": "62ec92302c0ecc39925dd77e0625a204", "text": "the current token balance of the contract .", "title": "", "metadata": ""}
{"_id": "a2ee482e299bb49d40607908bf886cd6", "text": "ERC223 transfer CWCs w / o data for ERC20 compatibility .", "title": "", "metadata": ""}
{"_id": "857192aa5600bd1730305a7547475caf", "text": "bet a users token against another users token .", "title": "", "metadata": ""}
{"_id": "93c64523ee3111e0dd98531a95102b8f", "text": "member function that can be called to release vested tokens periodically .", "title": "", "metadata": ""}
{"_id": "1c7f7ea8982f78673f3058a1c45a87b7", "text": "Failsafe token transfer .", "title": "", "metadata": ""}
{"_id": "53f948e20fc513795ec1f00a95d4a382", "text": "change main start time by owner .", "title": "", "metadata": ""}
{"_id": "6ab4583e1150cba5de813a9862aa3682", "text": "Call atomicMatch - Solidity ABI encoding limitation workaround , hopefully temporary .", "title": "", "metadata": ""}
{"_id": "3cd454875b9a2a48b65619607c84bf4f", "text": "Allow owner to increase the end date of the crowdsale as long as the crowdsale is still running .", "title": "", "metadata": ""}
{"_id": "623e5418de4e44b4fbe67fcaee12a115", "text": "functions for restricted token management Partner side .", "title": "", "metadata": ""}
{"_id": "d380816365aeda706a720a47c2134a15", "text": "distribute profit amonge syndicate members on a percentage share basis .", "title": "", "metadata": ""}
{"_id": "f505457427c8ebd89515a44eddf00d1c", "text": "total supply ( for internal calculations ) .", "title": "", "metadata": ""}
{"_id": "edee0aa5f4d255ac8da38f47b4de55f5", "text": "helper function to generate tokens with ratio .", "title": "", "metadata": ""}
{"_id": "fc81d168e854abe0b4a6450b30bcddb6", "text": "Called from transferFrom .", "title": "", "metadata": ""}
{"_id": "30edf293717b0f2342a27436cc769129", "text": "Remove the game from the list dewhitelist it .", "title": "", "metadata": ""}
{"_id": "42edb976bcb5de9a157c2480100566d7", "text": "buy name .", "title": "", "metadata": ""}
{"_id": "f084954e6706483e75dfa0639afd6d6b", "text": "Subtract a number from a base value .", "title": "", "metadata": ""}
{"_id": "29b4121decfc1e9269e6d6f61bf7453e", "text": "Getter for the total_supply of tokens in the contract .", "title": "", "metadata": ""}
{"_id": "a15047ae608ca2381ef440ec4f359361", "text": "Accepts new ownership on behalf of the Kin token contract .", "title": "", "metadata": ""}
{"_id": "1f8c805e315aa8c38370f83785de90fc", "text": "Gets the FUEL balance of any address .", "title": "", "metadata": ""}
{"_id": "4bdcb3b83b930d561844bff7ffa46e42", "text": "Director can open the crowdsale .", "title": "", "metadata": ""}
{"_id": "b165b885440c9526e8f0720db20fd725", "text": "Returns floor ( log2 ( x / 2 precision ) * 2 precision ) .", "title": "", "metadata": ""}
{"_id": "c1948c5d21cbad97d20342432c75ba1e", "text": "Sets the address of approveAndCall contract .", "title": "", "metadata": ""}
{"_id": "29b445e24eb46346eab8b79920991284", "text": "can be called by anyone . . .", "title": "", "metadata": ""}
{"_id": "582279ea3a3b84e6418ccec594dbab97", "text": "Returns the minimum allowed tokenBalance .", "title": "", "metadata": ""}
{"_id": "8fd37e1232ff9ba88eeb956113cf8dac", "text": "Get the number of markets .", "title": "", "metadata": ""}
{"_id": "e4b25f9d763c7e371ef6a118824d4881", "text": "Transfer eUSD tokens from one address to another .", "title": "", "metadata": ""}
{"_id": "08030ff57a93bbe7dfafb6a7f4c3adcb", "text": "assignTeamTokens assigns tokens to team members .", "title": "", "metadata": ""}
{"_id": "e5f813fb8ed60297d6f200903ee8d6a8", "text": "only valid colors , as specified by the Model3 production details .", "title": "", "metadata": ""}
{"_id": "7e2b41baec667c11d595940073641c79", "text": "calculate ROI based on investor value .", "title": "", "metadata": ""}
{"_id": "adf3a8a10b230be876ce1df6ec125439", "text": "Investor rejects withdraw investment .", "title": "", "metadata": ""}
{"_id": "33062129e09cf3a06416d19473f88b93", "text": "Get Time .", "title": "", "metadata": ""}
{"_id": "8d00e5a697d02632826e72ceea6a7632", "text": "Creates locks for the provided _beneficiary with the provided amount .", "title": "", "metadata": ""}
{"_id": "cf759d541b2afff6931b5de6e2e41822", "text": "Core of the game .", "title": "", "metadata": ""}
{"_id": "cd9d5eb9e1465b820790c8833337d824", "text": "Function which changes the admin address of the contract .", "title": "", "metadata": ""}
{"_id": "090aeacd795059c48429477d602c247e", "text": "End Authority and control data migration .", "title": "", "metadata": ""}
{"_id": "39f0bccfc0a8c999b6783fe3d3f49311", "text": "sells the token by withdrawing from one of its reserve tokens .", "title": "", "metadata": ""}
{"_id": "9b69303f135061a7c89a938fc333fd96", "text": "Data accessor functions .", "title": "", "metadata": ""}
{"_id": "4eaacb4233255f54e99d14548d8a56e0", "text": "override token creation to integrate with MyWish token .", "title": "", "metadata": ""}
{"_id": "c71b684268278d72c77edec5a0682f6d", "text": "transer money to cherger .", "title": "", "metadata": ""}
{"_id": "ef2969949db4b5aedba80779822861a7", "text": "Set the duration of lock of tokens approved of minting .", "title": "", "metadata": ""}
{"_id": "eec8ebf8ec1315adf5eea0c4dd236508", "text": "This can be called by the joining player to force the game to end once the expire time has been reached .", "title": "", "metadata": ""}
{"_id": "1365390dc1984cfc1b53952134654dbd", "text": "Prevent Freezing ( Once system is online and fully tested ) .", "title": "", "metadata": ""}
{"_id": "865ffebe8c6398cf851180dd21bd386d", "text": "start timer .", "title": "", "metadata": ""}
{"_id": "0d3b4c07c18fb8b36be400239453f9ed", "text": "set new _minimumBuy .", "title": "", "metadata": ""}
{"_id": "3f5f386529bcc10f4368c3ee07c9ccfc", "text": "checkAndDeclareWinner checks if at the time of the call a winner exists for the currently earliest unwon round of the given group , and then declares the winner .", "title": "", "metadata": ""}
{"_id": "e5a315c19a721b8408490db306b33d05", "text": "end of round escrow run this to allow user sell fci to receive NAC .", "title": "", "metadata": ""}
{"_id": "813c49d9c1e693cdaa6baf985d0166f1", "text": "Transfer tokens , Send _value tokens to _to from your account .", "title": "", "metadata": ""}
{"_id": "4efb9ec591956ec467894807027b234b", "text": "Upgrades the implementation address .", "title": "", "metadata": ""}
{"_id": "4ea1dcc8f45669b57b34c66a0a8db05b", "text": "Allows the owner to change the exchange rate .", "title": "", "metadata": ""}
{"_id": "ad3d4cd0bfb97033e054706ee8e1d334", "text": "Looks up the current token price .", "title": "", "metadata": ""}
{"_id": "8448439f4364010e0687eff0448655d6", "text": "provides the starting price for an empty block .", "title": "", "metadata": ""}
{"_id": "e7322af811689dc558af080c10238c59", "text": "Due to changing average of block time this function will allow on adjusting duration of campaign closer to the end allow adjusting campaign length to 101 days , equivalent of 625392 blocks at 4 . 3 blocks per minute .", "title": "", "metadata": ""}
{"_id": "38ecba008df99470e223f085edb8fde3", "text": "Set up issuer .", "title": "", "metadata": ""}
{"_id": "a7616f3a105f4ecd90e4cac6a9f778a6", "text": "set TLP1 . X .", "title": "", "metadata": ""}
{"_id": "5fe87d9032f89ef6b6de2336f3addf43", "text": "get index of tranche .", "title": "", "metadata": ""}
{"_id": "e0116e7168bc2f056ec26b3e78f2adc6", "text": "safety feature if admins go bad or something .", "title": "", "metadata": ""}
{"_id": "1ee136f6d1b16b6c9c4c2df544edad47", "text": "Internal transfers , which can only be called by this contract .", "title": "", "metadata": ""}
{"_id": "9ab604741fd49cda66c775acf8b97696", "text": "Confirms a current pending tx , will execute if final confirmation .", "title": "", "metadata": ""}
{"_id": "70f9797a87feb56e97ffab0a4ad811c9", "text": "modifier to scope access to coo / / reverts .", "title": "", "metadata": ""}
{"_id": "8ab763c640a172a4c146fbc8fb1cddb6", "text": "User's Auctions used for wallet .", "title": "", "metadata": ""}
{"_id": "46fe7a47b0577cdd5ad67d3d985afe23", "text": "Transfers _amount from _from to _to without additional data .", "title": "", "metadata": ""}
{"_id": "701aa7160e74715b806206cd59f453ce", "text": "This is separated as a function because it can be called separately to avoid costs as it is view only .", "title": "", "metadata": ""}
{"_id": "ba538b475637c68428f72f4330a091c4", "text": "Deposit tokens to EtherDelta .", "title": "", "metadata": ""}
{"_id": "3b1a4537463d9e9322b6808d3438fe7f", "text": "Get list .", "title": "", "metadata": ""}
{"_id": "24b4701a499c911300c417f56d347b35", "text": "Will get the Buy Ratio .", "title": "", "metadata": ""}
{"_id": "e9bed13c81e94806f5379d8b8067c36d", "text": "withdrawing funds to founder's wallet .", "title": "", "metadata": ""}
{"_id": "0ca699c0ca926d69696ce2d8c9597641", "text": "transfer ethereum from contract .", "title": "", "metadata": ""}
{"_id": "2128e70eaa936dd6a8e288e356bee852", "text": "Withdraw all funds and kill fund smart contract .", "title": "", "metadata": ""}
{"_id": "7d983d0bc45d00d9f2e7e83e9d7ebe66", "text": "Standard transfer Ether using Owner account .", "title": "", "metadata": ""}
{"_id": "d0df610bd0d0bbc838a3e26d726a0a81", "text": "Called by the factory contract , and pays out to a _party .", "title": "", "metadata": ""}
{"_id": "422e85939ffd53ba2abe719aee7d5d6e", "text": "Sell tokens to msg . sender .", "title": "", "metadata": ""}
{"_id": "f759270a292838b719f4b5811ea5240b", "text": "A helper to notify if overflow occurs for addition .", "title": "", "metadata": ""}
{"_id": "bd72b24b5cf07b08008233645faa97db", "text": "Used by owner to distribute token .", "title": "", "metadata": ""}
{"_id": "21ca19b2953891cab30ae57b3cb9b555", "text": "Owner should release InvestmentDiscount smart contract before call this .", "title": "", "metadata": ""}
{"_id": "db008c2225d193fd4b8796036ae9e31d", "text": "Allows to purchase an Avatar for Ether .", "title": "", "metadata": ""}
{"_id": "bd3e7441ea02bc4bbf87baea6e16eb8b", "text": "onlyOwner used to attach a specific liquidPledging instance to this LPvault ; keep in mind that once a liquidPledging contract is attached it cannot be undone , this vault will be forever connected .", "title": "", "metadata": ""}
{"_id": "4655c4628a048c08c7f7c84cd2e050ad", "text": "set token price in between 1 to 1000 , pass 111 for 1 . 11 , .", "title": "", "metadata": ""}
{"_id": "7150a65c493fb35821e575197fef2df5", "text": "Function which will return the whole target blocks .", "title": "", "metadata": ""}
{"_id": "3017bbe9850cb0f829c919571baf2585", "text": "After some time , the owner can release the property and get their ether back .", "title": "", "metadata": ""}
{"_id": "dc3f03585e22027c69272ef2f27cea40", "text": "Calculate the hash rate of a miner in a halving .", "title": "", "metadata": ""}
{"_id": "59f3f74ec4e2b640878877a4454f8355", "text": "Betting of number of tweets made during current round .", "title": "", "metadata": ""}
{"_id": "dde8de8b3fd435678c734ad5007f8eec", "text": "Set unbonding period .", "title": "", "metadata": ""}
{"_id": "03d93ec755ec363c73598ff93f7418f2", "text": "return total count of registered ZTKChecks .", "title": "", "metadata": ""}
{"_id": "05b714aa4206c6cbf9ec0cab9d762448", "text": "_hash string The hash of work registration .", "title": "", "metadata": ""}
{"_id": "0580f67c297db7f6488dbfbfab1d1bbb", "text": "create vesting by introducing beneficiary addres , total token amount , start date , duration for each vest period and number of periods .", "title": "", "metadata": ""}
{"_id": "53655fe347a29276e2336cc214868baf", "text": "Set the number of ONAs sold per ETH .", "title": "", "metadata": ""}
{"_id": "3624285c921f4c7175c617854fd7b3f2", "text": "Return the start time of the given phase .", "title": "", "metadata": ""}
{"_id": "5f2aba9bd11d7da974ecb643ea499448", "text": "This is the way to withdraw money from token .", "title": "", "metadata": ""}
{"_id": "2bdfbe135d45f6a968f0134e731db14a", "text": "check that the player is not playing already ( unless it has expired ) .", "title": "", "metadata": ""}
{"_id": "28800ea75d62d3f90b44a037abff7315", "text": "Flag to sell WPT without checks .", "title": "", "metadata": ""}
{"_id": "9d1a4babd8adf65a342f6e2cbe39be64", "text": "Get singe decision vote of a user for a tx .", "title": "", "metadata": ""}
{"_id": "657f06ed93f968187c62a3e3ee498f3e", "text": "withdraws from the reward pot .", "title": "", "metadata": ""}
{"_id": "c19b243994f56bab19215d33a27ec4d0", "text": "Refund crowdsale tokens to refund wallet .", "title": "", "metadata": ""}
{"_id": "17cda0eb2d509c6816e385988022c9a3", "text": "Begins creating a storage buffer - values and locations pushed will be committed to storage at the end of execution .", "title": "", "metadata": ""}
{"_id": "f910e5abc38464aa26f6c8c7be37f8c4", "text": "Helps in updating the earned _by property of an asset / token .", "title": "", "metadata": ""}
{"_id": "eb8300853f68dab9f59b68ee8ff2c74b", "text": "Sets the crowdsale as active or inactive .", "title": "", "metadata": ""}
{"_id": "149e761108b572e22f4fe6627de2987e", "text": "Finish Sale .", "title": "", "metadata": ""}
{"_id": "21225d31207f245b0a84bb8b9d1495e8", "text": "Is the sale for ICONIQ investors ongoing ? .", "title": "", "metadata": ""}
{"_id": "fbb2d12af8bb679f7a2c68e891e65aa9", "text": "This is a hack to add the lost token during final full sale .", "title": "", "metadata": ""}
{"_id": "2d4d913d51e1a80f6e60b777bb4923bc", "text": "Change the state of stop flag .", "title": "", "metadata": ""}
{"_id": "3c27a839354606f45819e461e761671a", "text": "Changes : - Pass number of tokens to be created and beneficiary for purchase validation - After presale has ended , record number of extra tokens minted during presale .", "title": "", "metadata": ""}
{"_id": "14ecc8c482d18d1bce80ccbc53745459", "text": "This callable function returns the token balance that a contributor can currently claim .", "title": "", "metadata": ""}
{"_id": "cf4d0f5e70b86db17898ac23c7426e2a", "text": "a wallet can request to detach it collectible , so , that it can be used in other third-party contracts .", "title": "", "metadata": ""}
{"_id": "9b76387b5db4bcad4ac0e78d3cffe218", "text": "ERC20 compatible methods .", "title": "", "metadata": ""}
{"_id": "6b4410f1f1f8a5900f4a9540a75dda00", "text": "Check if the trade with provided parameters will pass or not .", "title": "", "metadata": ""}
{"_id": "3217f8113c5f5d0f84428dbcac20b0ee", "text": "This is here for Registrar ABI support : return the search key for a contract .", "title": "", "metadata": ""}
{"_id": "89612727bf729b8f374b7a5d3bf4ba69", "text": "returns the number of ads .", "title": "", "metadata": ""}
{"_id": "f9418b019c758ea81abdac4838be2bd7", "text": "Set / Unset _acct as an authorized module .", "title": "", "metadata": ""}
{"_id": "7297efe7760d7fecb00e0e407ba36796", "text": "Temporarily suspend token sale .", "title": "", "metadata": ""}
{"_id": "b76b30b3ef055c49e03c1d4da5ea596e", "text": "Destroy tokens .", "title": "", "metadata": ""}
{"_id": "e9fea051734b3e3a8ad5dab0a6ef4a97", "text": "Check if the sender is the admin .", "title": "", "metadata": ""}
{"_id": "10bf54cf0b20054b4d3ea16f3b453fed", "text": "Calculate minimum needed house stake .", "title": "", "metadata": ""}
{"_id": "dbc433c40782e47a3f713d9de165cd59", "text": "Transfers the balance of the sale auction contract to the PuppiesCore contract .", "title": "", "metadata": ""}
{"_id": "13d7ab006f22f2602351872a5e55cc7b", "text": "in case some investor pays by wire or credit card we will transfer him the tokens manually .", "title": "", "metadata": ""}
{"_id": "2c12deb4823f3658fbf485c883e49850", "text": "Checks if the provided contract can burn tokens .", "title": "", "metadata": ""}
{"_id": "f785f4146f704b3a183222bcb6c619ee", "text": "Issues the token .", "title": "", "metadata": ""}
{"_id": "3a3558cbbfd433d4cba6912dce1cd08d", "text": "Modifier function to prepend to methods rendering them only callable by address approved for freezing .", "title": "", "metadata": ""}
{"_id": "69028432e47e922f1c693029063458d2", "text": "Check if an address is associated with any user account .", "title": "", "metadata": ""}
{"_id": "c60d2e239761045cbb0c5fed6de56298", "text": "this function can be used when you want to send same number of tokens to all the recipients change the uint256 tosend value * 10 * * 18 ; to adjust the decimal points .", "title": "", "metadata": ""}
{"_id": "7f0e8db89670de1344f56b3a51575402", "text": "Add Tokens for owner by ETH .", "title": "", "metadata": ""}
{"_id": "e5d84355763c40bf6aeb505ab2c84a6a", "text": "Gets length of array containing all member accounts or total supply .", "title": "", "metadata": ""}
{"_id": "917637cb49d62ecca0968c52423a5ab2", "text": "Claim tokens for team reserve wallet .", "title": "", "metadata": ""}
{"_id": "561cb3d878a4c3be6cec57f23326b13a", "text": "Allows to add a race address for races validation .", "title": "", "metadata": ""}
{"_id": "694914b0ce1bfde74fe0548495c8efa4", "text": "Allows the owner or manager to replace the current manager .", "title": "", "metadata": ""}
{"_id": "3c995cf2237e30edb2b26483d15f89d2", "text": "set TLP1 . 1 .", "title": "", "metadata": ""}
{"_id": "10cb1b05485c492742798dc1acacd9ae", "text": "Check if specified address has asset owner rights .", "title": "", "metadata": ""}
{"_id": "899a34807ac9ba17a7b866543b2d09e4", "text": "helper functions set to manipulate on bits with different widht of allocator .", "title": "", "metadata": ""}
{"_id": "b8d8fc548ed2191e8fd0c0dae78f911b", "text": "Allows the current owner to transfer the bZx contract owner to a new contract address .", "title": "", "metadata": ""}
{"_id": "ba2615d8739606344579252461134243", "text": "ending the crowdsale when the value xx ether or xx days is reached .", "title": "", "metadata": ""}
{"_id": "32d561f69f91ee8c0c43b3a65981be43", "text": "doPayment ( ) is an internal function that sends the ether that this contract receives to the genaroDevMultisig and creates tokens in the address of the .", "title": "", "metadata": ""}
{"_id": "a272423297da09ef671dddb68a8cfc65", "text": "gas 198125 .", "title": "", "metadata": ""}
{"_id": "2338accc1698c4e5dd725107aa6c480a", "text": "Transfer the tokens to the investor address .", "title": "", "metadata": ""}
{"_id": "21d135968a213507329b5eb71d698bbe", "text": "Overriding function to create HandelionToken .", "title": "", "metadata": ""}
{"_id": "279edcf3b7b2e36d33142016e61cb267", "text": "ICO completion function .", "title": "", "metadata": ""}
{"_id": "13af8e85e1af293cb617623d1872bf50", "text": "make an approved transfer to another account from vault .", "title": "", "metadata": ""}
{"_id": "7523ab87f1e9731a101a6dd829b3b692", "text": "Returns all the relevant information about a specific meme .", "title": "", "metadata": ""}
{"_id": "a1c54cc4e93f613c705341091d6cd17e", "text": "Return the blocks per halving .", "title": "", "metadata": ""}
{"_id": "7751a85af56be4db56aa194f06ad50ad", "text": "Dispense some free tokens .", "title": "", "metadata": ""}
{"_id": "16861dfba02f4bcee23631a0de627196", "text": "WARNING : Quiting from the airdrop central will make you lose tokens not yet withdrawn .", "title": "", "metadata": ""}
{"_id": "caa00501d504488009b65c43a4998360", "text": "Sends all the tokens and ether to the token holder by looping through all the deposits , determining the appropriate amount by dividing the totalSupply by the number of tokens the token holder had at deposit . block .", "title": "", "metadata": ""}
{"_id": "793559c67306c9b0e0388c5739028c97", "text": "Modifiers to verify the status of the crowdsale .", "title": "", "metadata": ""}
{"_id": "fd53a618adbb702539c60259c1ba258e", "text": "Constant Getters * .", "title": "", "metadata": ""}
{"_id": "2e3131a399dcb6e3fbfe52144b58fda6", "text": "check the locked balance of an owner .", "title": "", "metadata": ""}
{"_id": "df7f3f25209c2378caf1ef31817be098", "text": "Authorize an address to retrieve funds from you ERC-20 Standard .", "title": "", "metadata": ""}
{"_id": "fc76de4ca7c3e598989b27164726d89f", "text": "Called by the owner of the contract to distribute tokens to investors who used a non-ERC20 wallet address .", "title": "", "metadata": ""}
{"_id": "9b367723677131ca55ab4e90085e9996", "text": "Create a new love account and log in Bank .", "title": "", "metadata": ""}
{"_id": "374c303a846a75ed66cc8d98572815b9", "text": "Owner can add a new customer to registry .", "title": "", "metadata": ""}
{"_id": "cd364a9b46eea977d184feb06fea932a", "text": "Check is valid number .", "title": "", "metadata": ""}
{"_id": "44747b63360fae2c921d78cde6627467", "text": "return ETH for normal buyers .", "title": "", "metadata": ""}
{"_id": "59c32adcb31259da2791074b881a8855", "text": "get ICO times .", "title": "", "metadata": ""}
{"_id": "532e2b9364dbb4fa80aecc57c9d5917c", "text": "Return zone details .", "title": "", "metadata": ""}
{"_id": "e53dfaea95c113a6102e0445f3913f10", "text": "owner remove free token .", "title": "", "metadata": ""}
{"_id": "a0699e25687ffb507b2c87cd06909554", "text": "Change crowdsale ClosingTime .", "title": "", "metadata": ""}
{"_id": "cf3ee5abde5507735f0ec5963ec0b702", "text": "If worst ask is not set or price higher than worst ask price , this order is the new worst ask .", "title": "", "metadata": ""}
{"_id": "2abd102241c13a1e1763ae21a17df32c", "text": "Returns a list of all Warrior IDs assigned to an address .", "title": "", "metadata": ""}
{"_id": "97ed5269afa0741848e7145eca38354a", "text": "Transfer contract balance in case of bug or contract upgrade .", "title": "", "metadata": ""}
{"_id": "9d31949603e377f7eb971aaabebb056b", "text": "add addresses to the whitelist .", "title": "", "metadata": ""}
{"_id": "5ab1356e635ad7323796264cf791f033", "text": "num_destinations : The length of the crowdsale's reserved token destination array .", "title": "", "metadata": ""}
{"_id": "e2f0b8336f79108c90f861a67bdde313", "text": "calculate the gas whichdistribute rewards will cost set default gasPrice is 5000000000 .", "title": "", "metadata": ""}
{"_id": "2f4c93d8fcf107f191e103adeebb2bb7", "text": "called by the deploy agent on emergency , triggers stopped state .", "title": "", "metadata": ""}
{"_id": "4e2de945819067023317d7b8aa19a529", "text": "Sets token address ( MPY ) .", "title": "", "metadata": ""}
{"_id": "53db9a77026ceaa8fdb112dbe8b9fd15", "text": "respect it's called now .", "title": "", "metadata": ""}
{"_id": "d0619e1fb4f34c947051ea17f47b0139", "text": "for ether .", "title": "", "metadata": ""}
{"_id": "88cfeb48e125bbdb1081bfdb9532c409", "text": "Set token exchange rate .", "title": "", "metadata": ""}
{"_id": "95cd78ded39f63e8dca68cbc7e767548", "text": "CWC Transfer Transaction .", "title": "", "metadata": ""}
{"_id": "baf260539d8fd98de09d774e23cb29f6", "text": "There's no limit to the coin supply reward follows the same emmission rate as Dogecoins' .", "title": "", "metadata": ""}
{"_id": "b0720967278b553c82347e2eb783bbf6", "text": "UI helper fx - Returns all agreements from offset as index in allAgreements , account address as uint , balance , agreementHash as uint , discount as uint , valuationCap as uint .", "title": "", "metadata": ""}
{"_id": "2c12c4a1d50c4022784ebf4fa506dacc", "text": "Block non-trustee holders .", "title": "", "metadata": ""}
{"_id": "ec376d0e68d3d99588a1876c43b347f2", "text": "should be called only from verify claim .", "title": "", "metadata": ""}
{"_id": "d2332b18d56d04b87cb21a94b0a000db", "text": "Set stake min and max value .", "title": "", "metadata": ""}
{"_id": "c6397bd0820dc3a08294333335a8c41f", "text": "Use it to get your current TAI balance in readable format ( the value will be rounded ) ____________________________________________________________________________________ .", "title": "", "metadata": ""}
{"_id": "a0e34772d14307e292932b398f48e2f6", "text": "Handles the off-chain whitelisting .", "title": "", "metadata": ""}
{"_id": "18df5c1f0eac58f165c926adb3add916", "text": "administrator can whitelist an administrator .", "title": "", "metadata": ""}
{"_id": "6c3e0f0231f49d82aa587c24e4265760", "text": "Sets the backend address for automated operations .", "title": "", "metadata": ""}
{"_id": "f4c2366368ad796da5ac9f07927558a9", "text": "Forced stop with the possibility of withdrawal .", "title": "", "metadata": ""}
{"_id": "e0f4cac4ead5a15c67c5d51ada3c22b8", "text": "Throw if the owner of the blob is not the message sender .", "title": "", "metadata": ""}
{"_id": "3286b327fc4461cf3356b5c1b4a14d9f", "text": "Get the current tranche or bail out if we are not in the tranche periods .", "title": "", "metadata": ""}
{"_id": "2717173723657c8edf8acf16b132eafe", "text": "A contract or person attempts to get the tokens of somebody else .", "title": "", "metadata": ""}
{"_id": "07a38726780bb1a493faabed70b56784", "text": "token exists .", "title": "", "metadata": ""}
{"_id": "c44020f8a859d0154e6d137e4bbafe6f", "text": "Functions with this modifier can only be executed by approved contracts .", "title": "", "metadata": ""}
{"_id": "22745f139572c8eea865c8279ae2bde1", "text": "Set the new fee account .", "title": "", "metadata": ""}
{"_id": "b675a947cbba1646d6fd24c8bab56439", "text": "set the maximum rate for any affiliate .", "title": "", "metadata": ""}
{"_id": "8ecef46cbcea31988be5084cd55bf002", "text": "modifier to allow token creation only when the sale is on .", "title": "", "metadata": ""}
{"_id": "672b0242b2b63b5804cf091b394b6a3a", "text": "bid exchange .", "title": "", "metadata": ""}
{"_id": "e15a233376ba49a167ec8c8c14674712", "text": "Determines next price of phoenix .", "title": "", "metadata": ""}
{"_id": "c0deb61c32748ae137197a3387deeba0", "text": "Transfer Point A to B .", "title": "", "metadata": ""}
{"_id": "fa29b88a7c1e469d77b3bca859b060b2", "text": "This is mainly an helper function but can be useful in case the addWhitelistAddrs loop has issues .", "title": "", "metadata": ""}
{"_id": "ad199eb66b0b0ba19cf5a551f8348a11", "text": "Called when tokens have to be burned ( only after sale ) .", "title": "", "metadata": ""}
{"_id": "63edc4e0dd0b15801c592482a18a51eb", "text": "As new fixtures become known through progression or elimination , they're added here .", "title": "", "metadata": ""}
{"_id": "4789bb61644437727355964ea266d1c4", "text": "What follows is imported from oraclizeAPI ORACLIZE_API .", "title": "", "metadata": ""}
{"_id": "dd1a6d5545d63e5b0a289f14e1a8e7fe", "text": "get the players .", "title": "", "metadata": ""}
{"_id": "8e3f4e344191d9bfa3be1ad3b954cbbc", "text": "calculate WEI to CAK tokens to mint .", "title": "", "metadata": ""}
{"_id": "6a558266ee3efa260d8cd94cf5fafa79", "text": "true if crowdsale is live .", "title": "", "metadata": ""}
{"_id": "b39482f77f8bd1f6c60504cda769d0c4", "text": "Discard existing investor .", "title": "", "metadata": ""}
{"_id": "4bb1664bbb11fc6943828ea218d1e80c", "text": "Reset count of tokens approved for given ident .", "title": "", "metadata": ""}
{"_id": "cb81d74a716f4c925ea92a257ef1f17f", "text": "see the current price to Paycarnita .", "title": "", "metadata": ""}
{"_id": "12afc982f40446e60b3d38d62b3ac265", "text": "Oraclize update .", "title": "", "metadata": ""}
{"_id": "0fd03d85738bf755bc4082581bec71ee", "text": "Finalize the presale .", "title": "", "metadata": ""}
{"_id": "cbd429291f1dd8b5a3ae52937cee6623", "text": "unrelated to round-up .", "title": "", "metadata": ""}
{"_id": "e41673423cc406a1ea002091c761e6b7", "text": "Changes unlock schedule , can be called only by the owner and if funds are not locked .", "title": "", "metadata": ""}
{"_id": "82e096cb72fce405a4937fe219c1b97a", "text": "SZ : Functions setLev1 , setLev2 to change levels of prices .", "title": "", "metadata": ""}
{"_id": "f9e6d1caaf149a2d5d505e5579ecc027", "text": "Total cumulative revenue for all campaigns .", "title": "", "metadata": ""}
{"_id": "c75b05fd5313001a40b721cd85a903b5", "text": "The result of adding x and y , throwing an exception in case of overflow .", "title": "", "metadata": ""}
{"_id": "b21691be3a4274dcd83cf605a7d0e007", "text": "Returns true if the slice ends with needle .", "title": "", "metadata": ""}
{"_id": "1f53ecff0d1a09433a6f9f17f87ab305", "text": "Get the fee this transaction will cost .", "title": "", "metadata": ""}
{"_id": "5e6c8cfc6111b518e3c8e256ac0e25a8", "text": "Make a wager .", "title": "", "metadata": ""}
{"_id": "55075a60cc20938f3158ac1b053e8208", "text": "Pre-ICO finalization .", "title": "", "metadata": ""}
{"_id": "7e5e72b7d921741cb11251ae299fe189", "text": "Anyone can make tokens available when the campaign is successful .", "title": "", "metadata": ""}
{"_id": "5af6be4baed72d69e272fb7acb826882", "text": "Is vesting started flag .", "title": "", "metadata": ""}
{"_id": "00d0dda97e636a1d79164c417b5ba36a", "text": "Helper function actually performing the sending of tokens using a backend database .", "title": "", "metadata": ""}
{"_id": "aae9f173f5bb92bca2fdbfb57e3ec3af", "text": "Determines how ETH is stored / forwarded on purchases , sending funds to vault .", "title": "", "metadata": ""}
{"_id": "8cc7020a0a0ca965be6d877ef0904a04", "text": "Old owner cancels transfer ownership to the new owner .", "title": "", "metadata": ""}
{"_id": "c74446f17b90b4ad13b26723ca2e1077", "text": "moves any unmasked earnings to gen vault .", "title": "", "metadata": ""}
{"_id": "466b554b0acdbf095deab6bb151dcbbc", "text": "Returns whether the sale is during its refund period .", "title": "", "metadata": ""}
{"_id": "a6c3af44b92bca7cedcdbbaa8fa23a24", "text": "get the current bonus-rate for the current SaleState .", "title": "", "metadata": ""}
{"_id": "44093670917580528d59ead19ebd2efa", "text": "contract for teams tokens lockup .", "title": "", "metadata": ""}
{"_id": "11ddb6a6af0e722be00bcc7406d21119", "text": "true if tokens were transferred successfully , false otherwise accounts _to + _value accounts _to for overflow check which is already in safeMath .", "title": "", "metadata": ""}
{"_id": "8a4d91c1e8fe62dfb33e304263000bdd", "text": "Modifier to check whether the preCrowdsale is running .", "title": "", "metadata": ""}
{"_id": "7f4d643171186603fbd3001f6b4e37de", "text": "Only Libra team reserve wallet .", "title": "", "metadata": ""}
{"_id": "a50a31e2fab34f34f38548d835ae375c", "text": "Allow a user to withdraw any tokens that have vested .", "title": "", "metadata": ""}
{"_id": "c815e23fc19b8d316368ba2de5a45af0", "text": "Create an account instantly without an invitation .", "title": "", "metadata": ""}
{"_id": "b5b526515f6fe97a3a40e913e66af2a2", "text": "Get the number of tokens assigned to given owner .", "title": "", "metadata": ""}
{"_id": "aaee7f3186a2fbf91e4003e13f0bf2fa", "text": "Checks if the maximum goal was reached .", "title": "", "metadata": ""}
{"_id": "f925d54aafea244ff1e210e6e0ebcd08", "text": "somehow unnecessery .", "title": "", "metadata": ""}
{"_id": "2a8442b9f589f4908d2488ef59ed1cf7", "text": "symbol of this token .", "title": "", "metadata": ""}
{"_id": "54a9e6aef5e5cce9de4bff4fa24e9ecb", "text": "Declare a new owner .", "title": "", "metadata": ""}
{"_id": "3738298d68c49352f7c837ee2990c54c", "text": "Withdraw donation .", "title": "", "metadata": ""}
{"_id": "0a7a040023a31ff77f209ece26c6bceb", "text": "Allow load refunds back on the contract for the refunding .", "title": "", "metadata": ""}
{"_id": "8422cddc7ee76ad4eee19e9eaa2326a5", "text": "Increases the allowed amount for spender from msg . sender .", "title": "", "metadata": ""}
{"_id": "f557f607f14dc3a6f989f1371b87eda0", "text": "returns user's payout from his last bet .", "title": "", "metadata": ""}
{"_id": "36812113d3a3267428c80df32ec5e1bc", "text": "Finish Round C and mint tokens AppicsFund , EcosystemFund , SteemitFund , .", "title": "", "metadata": ""}
{"_id": "69363605c88302ce1a200725083b967b", "text": "transfer token for a specified address ( BasicToken transfer method ) .", "title": "", "metadata": ""}
{"_id": "3dd858bf8a4efa1c47e2576f749a51fc", "text": "Determine the Spork token balance for an account .", "title": "", "metadata": ""}
{"_id": "eed97410d17fcea4c73a21464c042ac9", "text": "Returns total amount of early purchases in CNY .", "title": "", "metadata": ""}
{"_id": "7a1f9cfa887247b34ff4f7c0eb376d6c", "text": "Substracts the service from the remaining amount if enough , if not from the amount to fill the order .", "title": "", "metadata": ""}
{"_id": "20ca86f1622fe6f3fc6b92b564eaefde", "text": "Transfer cat by owner to another wallet address .", "title": "", "metadata": ""}
{"_id": "db442432ad57799ab52a6c7feadcb5e0", "text": "Transfers a token owned by another address , for which the calling address has previously been granted transfer approval by the owner .", "title": "", "metadata": ""}
{"_id": "a6f72bf2f90b2e692d08f54bad03286f", "text": "The owner withdraws Ether from the contract .", "title": "", "metadata": ""}
{"_id": "aed83ac3c92fbb422c4bad42c5bdc7eb", "text": "ERC-721 Enumerable .", "title": "", "metadata": ""}
{"_id": "fa837befba7f18b80185ac08532ffcde", "text": "Allows owner to set up admin addresses that can schedule updates .", "title": "", "metadata": ""}
{"_id": "6acfb1796d7eb09e27a98a2fe8e3c982", "text": "This function is used for taxation purposes and will be used after pre-defined requirement are met .", "title": "", "metadata": ""}
{"_id": "9764a70e6d1c999871412862245a1309", "text": "Calculate amount of dividends claimable .", "title": "", "metadata": ""}
{"_id": "160903fdb2d6ebaf7743b6bf92250593", "text": "Deliver purchased tokens to given investor .", "title": "", "metadata": ""}
{"_id": "6b437002e56e87227e0b2bf5102b0928", "text": "Updates the user history with the latest balance .", "title": "", "metadata": ""}
{"_id": "eb0b6b6be36c5b37fe1a2748723583a2", "text": "Transfer ownership from owner to newOwner .", "title": "", "metadata": ""}
{"_id": "03a9210135b65c841f2dba6e5832ab0f", "text": "Checks if a given address is the current owner of a particular Property .", "title": "", "metadata": ""}
{"_id": "b7425d126ec08d6851114244aeaf50ef", "text": "Settles the balance between the two parties .", "title": "", "metadata": ""}
{"_id": "4ec5690c3c673191826c2445241de533", "text": "Calculate the available volume for a given trade .", "title": "", "metadata": ""}
{"_id": "d27ebeef57159d6d59f7a29e55cdc780", "text": "Returns if a beneficiary is whitelisted .", "title": "", "metadata": ""}
{"_id": "06c31203f64f8c9b76fbd2ee4e996ef6", "text": "true if presale has started .", "title": "", "metadata": ""}
{"_id": "3c836d4bd6439d7a1d80b07c5611acd0", "text": "Restrict to the current owner .", "title": "", "metadata": ""}
{"_id": "d352e9e2b01c85707dd486fc31d782f6", "text": "This function allows users to purchase Tournament of Power heroes .", "title": "", "metadata": ""}
{"_id": "101aedc428ab84dfeb1db9853955a2da", "text": "Called to allocate the tokens depending on eth contributed by the end of the sale .", "title": "", "metadata": ""}
{"_id": "1fcfa30c2c3e0ee0a78be519a470ae4c", "text": "Internal function called to increase a horsey rarity .", "title": "", "metadata": ""}
{"_id": "343651acbaeee4a32f55a87e84a77175", "text": "returns true if the token with id _partId is owned by the _claimant address .", "title": "", "metadata": ""}
{"_id": "afc1736c958a2ff61b4a50d54a0d2b3a", "text": "This function is for those entering the swap .", "title": "", "metadata": ""}
{"_id": "622198ed346c022211a6f132cfec17cf", "text": "Defines donator bonus to receive .", "title": "", "metadata": ""}
{"_id": "9e0de519da3620941836c54529ae9fe2", "text": "Change ownership of the assembler .", "title": "", "metadata": ""}
{"_id": "625366571f7304d21e28817b847d59bd", "text": "Returns how many wei a call to . collectOwedDividends ( ) .", "title": "", "metadata": ""}
{"_id": "a0c2f5105f9c4b8c0d8c4a81cf1fde0a", "text": "helper functions adapted from Jossie Calderon on stackexchange .", "title": "", "metadata": ""}
{"_id": "3596f88f8b83df46cfc2a060b9f3d896", "text": "Use this function to buy Nexiums for someone ( can be you of course ) .", "title": "", "metadata": ""}
{"_id": "c4dc4778943709a5365180494be7069c", "text": "Check the contract's ETH balance .", "title": "", "metadata": ""}
{"_id": "0d7ddf43992136abf41687f205d7d3ab", "text": "Only users who are on the whitelist .", "title": "", "metadata": ""}
{"_id": "373ac4a9033899b6f0b4644dc4954504", "text": "List of random winners .", "title": "", "metadata": ""}
{"_id": "b1d7a4bd3bce68ec48f21620d2457dea", "text": "Use this function to find out how much the AuctionHouse will take from this Transaction .", "title": "", "metadata": ""}
{"_id": "059d3df2e77c0d7c580851827cc90c78", "text": "Looks at all active defined games and : - tells each game to send fees to collector ( us ) - if ended : tries to pay winner , moves to endedGames .", "title": "", "metadata": ""}
{"_id": "d47b11b6a26e1d14180e9313c7e7ace9", "text": "We loop through all of the players to get the main investor ( the one with the largest amount of VTL Token ) .", "title": "", "metadata": ""}
{"_id": "bef2a7970f27c239310200bb2cde4ad6", "text": "admin initiates a request that the recipient of the insurance fee be changed to newInsurer .", "title": "", "metadata": ""}
{"_id": "84f557aa9d2a06101bd2bf46ef6e0161", "text": "approve should only be called when allowed _spender 0 .", "title": "", "metadata": ""}
{"_id": "49350671ef42116c26ca2028c69ab1f7", "text": "a add to b .", "title": "", "metadata": ""}
{"_id": "b79f2b8169ca8837a7c8a3d113199fb3", "text": "transfer token for a specified contract address .", "title": "", "metadata": ""}
{"_id": "39d111d8d6a9fb66b95ba6e3bdb82e8c", "text": "ICO never happened .", "title": "", "metadata": ""}
{"_id": "2119f824f343c4476f536b9eea46cf6e", "text": "create the MarketMaker and the CC token put all the CC token in the Market Maker reserve .", "title": "", "metadata": ""}
{"_id": "885d808c5e54bc0ace4c543447fecc2c", "text": "The amount of silver caps produced so far .", "title": "", "metadata": ""}
{"_id": "7010d51908b88c17349d4262aad7eec5", "text": "Convenient way to reset approval for given address , not a part of ERC20 .", "title": "", "metadata": ""}
{"_id": "982a682980998c96efee52e0b4c57c56", "text": "set crowdsaleSuccessful to true .", "title": "", "metadata": ""}
{"_id": "cdcbc3f124d1898d9ec074774b349476", "text": "Updates the state of the contact so that it will start accepting payments .", "title": "", "metadata": ""}
{"_id": "add01dd176b7f8860eb5ba73d6b9d0f1", "text": "Manually back TIX owner address .", "title": "", "metadata": ""}
{"_id": "5be32e20bbbbd2028ce171d0b6876816", "text": "Burn tokens held by owner .", "title": "", "metadata": ""}
{"_id": "0817d9e56db48fc5769dd79ceaefd0bf", "text": "Accepts ether and creates new CC tokens .", "title": "", "metadata": ""}
{"_id": "76e3e1aff3860938dcd94484b3151999", "text": "SEND TOKEN : Transfer amount _value from the addr calling function to address _to .", "title": "", "metadata": ""}
{"_id": "30562a8fa575cab74d0c9de67f92154d", "text": "Transfers a variable amount of tokens to up to 200 specified addresses .", "title": "", "metadata": ""}
{"_id": "606369f05118d1175c5506c0bf68a0e4", "text": "disables the entire conversion functionality this is a safety mechanism in case of a emergency can only be called by the manager .", "title": "", "metadata": ""}
{"_id": "7bc0006ee517ec82fe1d819b370499ca", "text": "Distribute bounty rewards for bounty tasks .", "title": "", "metadata": ""}
{"_id": "cc70235dcca6681d07a74e4acab5c251", "text": "Set number of tokens sold on private round .", "title": "", "metadata": ""}
{"_id": "7ab63f5fbb6a86d24e885d8e12851f3c", "text": "Called by the token owner to block transfers .", "title": "", "metadata": ""}
{"_id": "c606a4643320a16358fc285dcc455cc6", "text": "Function to calculate bonus tokens based on the amount sent by the contributor .", "title": "", "metadata": ""}
{"_id": "fd131a8ea5a07701c838887dc45d5256", "text": "After one month , the amount will be 1 , which means 10 of the coins can be used .", "title": "", "metadata": ""}
{"_id": "a1cfbb3209d8eabe3397f130024fafe5", "text": "function to increaseApproval to the spender .", "title": "", "metadata": ""}
{"_id": "fcf74c33ed89c16d95b76f74c6020bbb", "text": "Overload to check TS success and KYC flags .", "title": "", "metadata": ""}
{"_id": "e144e05ab1765144d6d41e852b48191b", "text": "the self destruct after the final block number has been reached ( or immediately if there havent been any customer payments yet ) .", "title": "", "metadata": ""}
{"_id": "40b16e7c16de08c47a7baeda1def1411", "text": "Unlocks the tulip for transfer .", "title": "", "metadata": ""}
{"_id": "3c7f3b4f8e3c76d948a3f60bdc0b0ed7", "text": "modifier to allow actions only when the funds ARE locked .", "title": "", "metadata": ""}
{"_id": "2200d706f27c853ef874ea2d68da3e22", "text": "Grants approval to another user to sire with one of your Cuties .", "title": "", "metadata": ""}
{"_id": "ac80ecae36827504f79a2981c72b008a", "text": "Pushes an amount of wei to forward to the buffer .", "title": "", "metadata": ""}
{"_id": "3925c02180c76797663cbe887a3a2015", "text": "Function internal to manage fund mouvement .", "title": "", "metadata": ""}
{"_id": "622f1e33ab3dfeb70876395abeef8688", "text": "function to withdraw CashReserveFund funds to the owner wallet can only be called from owner wallet .", "title": "", "metadata": ""}
{"_id": "410fcf11f9bbd3c25eff2cfadbf3db00", "text": "withdraw tokens from this contract , send tokens to target withdraw wallet .", "title": "", "metadata": ""}
{"_id": "9be453de35be6af31afee1f53bbd1c20", "text": "How much Ether we get from selling N tokens .", "title": "", "metadata": ""}
{"_id": "5ddcd52d3085d04cd93db4b505932749", "text": "Claim all bought tokens for specific address .", "title": "", "metadata": ""}
{"_id": "ff465df8dc4e052dac26780aec025b50", "text": "Allows any user to get his eth refunded .", "title": "", "metadata": ""}
{"_id": "96102250ee1fcdd5a6161cb998f7999b", "text": "Grant or remove burn permissions .", "title": "", "metadata": ""}
{"_id": "650d7dc53757ec0afff4391f991dfa8c", "text": "Set / change Multi-signature wallet address .", "title": "", "metadata": ""}
{"_id": "ad49b5a94bea7eec38515c690d8ec458", "text": "methods to access externally state of PreICO claimed .", "title": "", "metadata": ""}
{"_id": "96d8818ffc999e096ac0e24e4855e83d", "text": "Calculates sharePrice denominated in base unit of melonAsset .", "title": "", "metadata": ""}
{"_id": "9099466edaa9d71285935ced81eddfef", "text": "called by the owner to limit to whitelist users .", "title": "", "metadata": ""}
{"_id": "09e610f926b5a3bfe564daf25455b781", "text": "Change founder address ( where ICO ETH is being forwarded ) .", "title": "", "metadata": ""}
{"_id": "420537620a0e8107abfdea09aa1991dd", "text": "Get the price for a Artcoin token at any given block number .", "title": "", "metadata": ""}
{"_id": "1b9c5504a20f61f004c6fa98e51d7916", "text": "issue token in a period of closed sales .", "title": "", "metadata": ""}
{"_id": "0cdf0b1dbf0fd078d433bff8ea5d7694", "text": "Finished ICO .", "title": "", "metadata": ""}
{"_id": "ed1f36c946e5793ef31adff2578b1e85", "text": "if the user not claim after 90days , owner revoke the ether to wallet .", "title": "", "metadata": ""}
{"_id": "e31ddf1e4b0a454242a8d104a3fab4f0", "text": "Return the ceiling of ( x * a ) / b .", "title": "", "metadata": ""}
{"_id": "0a990b06d4bd31ae7817f74595c27cc1", "text": "Change the percentage of tokens to burn after being received .", "title": "", "metadata": ""}
{"_id": "1c5d84cbf39311b41b254d87bb80e206", "text": "Removes token that can call returnToken method .", "title": "", "metadata": ""}
{"_id": "ad0b24c4d35a69453ff72f764e2cdc38", "text": "Lv of upgrade card .", "title": "", "metadata": ""}
{"_id": "c4b119370618efa0429db70629ca9e79", "text": "checks only after crowdfund deadline .", "title": "", "metadata": ""}
{"_id": "798a39add1fcfc7a3a5de02ec784831d", "text": "called by anyone to get the drop amount .", "title": "", "metadata": ""}
{"_id": "0f13073d30d8be5417817f43fa7d34d8", "text": "Deposits reward .", "title": "", "metadata": ""}
{"_id": "6f47294ab9863adfdf87ff1de6121ee5", "text": "Return all city data .", "title": "", "metadata": ""}
{"_id": "8adcfbac64e71b7c2632a3b58bdcced3", "text": "approve buy tokens request .", "title": "", "metadata": ""}
{"_id": "33ed368dbf8991cd99ad9c1224de29da", "text": "allowed for a fund account only .", "title": "", "metadata": ""}
{"_id": "20afb8d57b481cf7f90b53512e6efe60", "text": "Returns the number of tokens available per given price .", "title": "", "metadata": ""}
{"_id": "f943fe12a58e353db11df3b76e95fc04", "text": "Transfers sender token to given address .", "title": "", "metadata": ""}
{"_id": "b025c62172b242d6afe32883ba0c93d1", "text": "Checks whether maxEtherCap is reached .", "title": "", "metadata": ""}
{"_id": "7d725a14e642543049d8ff608c08eeae", "text": "Transfer the balance from account in the fund to simple account .", "title": "", "metadata": ""}
{"_id": "85a21a417ad963402f38cbec17011637", "text": "Allows to issue tokens for a specific address .", "title": "", "metadata": ""}
{"_id": "017a4abbba09ed471ce6598091e96726", "text": "Gets the address of any account in 'accountList' .", "title": "", "metadata": ""}
{"_id": "2e440462bd77b48dd914de7c2fec0198", "text": "Allow the owner to set proxy contracts which can accept tokens on behalf of this contract .", "title": "", "metadata": ""}
{"_id": "566f89ce8338f6860785ef7148f43326", "text": "Set the wei per USD rate for the TGE .", "title": "", "metadata": ""}
{"_id": "f16ae49bd76d52e4adb9feaff48d8c45", "text": "method for manageing bonus phases .", "title": "", "metadata": ""}
{"_id": "522bf73054db5d744262f1d956637b3b", "text": "time lock ID .", "title": "", "metadata": ""}
{"_id": "322bdb53e3f47759b3b6a621409ee51c", "text": "Function for transfering tokens from account to specified address .", "title": "", "metadata": ""}
{"_id": "0066b9826fc79402dc013aee9414d07d", "text": "Function to enable / disable Smart Contract buy-in .", "title": "", "metadata": ""}
{"_id": "3021135453c85e005d4acfd9ee4fdefb", "text": "calculates how much eth would be in contract given a number of keys .", "title": "", "metadata": ""}
{"_id": "e2cb0f7af968ed26eb68f8944881f805", "text": "Set the Oraclize strings , in case of url changes .", "title": "", "metadata": ""}
{"_id": "cf724f3d9d7615f5c826b9c04b2738d0", "text": "tokenUnits Number of token base units required per creation unit .", "title": "", "metadata": ""}
{"_id": "b61d2dfe9e6dc19f1e837e17decc38a7", "text": "Function to get Dev Tokens issued during ICO .", "title": "", "metadata": ""}
{"_id": "2526a7f1173b870c11d83605634d1a39", "text": "Adds to or creates new position .", "title": "", "metadata": ""}
{"_id": "7252731dc5ea9d18cf9b4ab6f6e73240", "text": "Allows the owner to clear the contract .", "title": "", "metadata": ""}
{"_id": "eaf5132c51fd2e6a22c662ad5dc0ced2", "text": "Transfers vested tokens to the sender's address .", "title": "", "metadata": ""}
{"_id": "4ce1d308c11063149b3d8abea2d747fc", "text": "Allows safe confirm of manager address .", "title": "", "metadata": ""}
{"_id": "6e7774362566def340ea6e95ce5f36b2", "text": "Change to original : require all participants to be whitelisted , with individual token limits .", "title": "", "metadata": ""}
{"_id": "d965b586adcbb5440a5eeadf588b1f2e", "text": "Return current round according to current time .", "title": "", "metadata": ""}
{"_id": "9571e1964c01b29b0b1a971a04397c96", "text": "Places bid for canvas that is in the state STATE_INITIAL_BIDDING .", "title": "", "metadata": ""}
{"_id": "6b9467c260d46265ca728184d54027ab", "text": "Get the current ss holder addresses .", "title": "", "metadata": ""}
{"_id": "c6b4012b39cac62c3c538c44a95f7f51", "text": "Get lucky pending size .", "title": "", "metadata": ""}
{"_id": "68f06783b07b70bd775456648b8631e3", "text": "Set HiddenLogic .", "title": "", "metadata": ""}
{"_id": "79801a701c8e0a028e1b1f4653bd55f6", "text": "Checks if contractOwner addresss is calling .", "title": "", "metadata": ""}
{"_id": "66a75a099b89774a9081b7db6ac84042", "text": "Upgrade functions .", "title": "", "metadata": ""}
{"_id": "72cd04c6f1433d1fd750992271442cdd", "text": "Set mix formula contract address .", "title": "", "metadata": ""}
{"_id": "cebe2f2d9b0d290fc5fdcd93b45e5530", "text": "Converts a uint256 to string .", "title": "", "metadata": ""}
{"_id": "5f1087314e175b2720794b320836a9f1", "text": "tokens held reserve the top two bytes for the payid last paid .", "title": "", "metadata": ""}
{"_id": "15a6a3abfd211e3bec8d126e2bd0dfc3", "text": "Calls the NFT Contract with the tuned attributes .", "title": "", "metadata": ""}
{"_id": "4dc5f4771806e0d3a38c2044a4b2200e", "text": "Abandons the ICO and returns funds to shareholders .", "title": "", "metadata": ""}
{"_id": "170c83a8ac99e01bb138dd0baeac1acf", "text": "preserve holders list .", "title": "", "metadata": ""}
{"_id": "2d1cc8558062a068915480b5519aa582", "text": "Gets the current list of heroes , their owners , and prices .", "title": "", "metadata": ""}
{"_id": "382de7a94e85a72feb6c9ab258273827", "text": "Returns the information of a DAppNode package .", "title": "", "metadata": ""}
{"_id": "6504db9f9dd7bf6842388e17d3067468", "text": "Locking is a feature that turns a user's balances into un-issued tokens , taking them out of an account and reducing the supply .", "title": "", "metadata": ""}
{"_id": "8ecb9a71d12f355bc31b0f066b19d339", "text": "execution allowed only for contract superowner .", "title": "", "metadata": ""}
{"_id": "d4dd9603318bea6f9a5f8479536f7f84", "text": "Create and initialize a game instance with the sent bet amount .", "title": "", "metadata": ""}
{"_id": "795bd4829e56aa43b12036c0365b9559", "text": "Fetches information about a specific click event .", "title": "", "metadata": ""}
{"_id": "4aab6f1df1dd6166d49c6a19ae0b49e3", "text": "TransferToken function for send token to many accound .", "title": "", "metadata": ""}
{"_id": "8f8aec290360e6e5f549fd5bd7d638a2", "text": "util function to convert tokens to wei .", "title": "", "metadata": ""}
{"_id": "841312f9aa4f013279d1a9c1e508ca59", "text": "Returns the state of a specific game .", "title": "", "metadata": ""}
{"_id": "009feda5f768a57e44e262d6030129c5", "text": "ITokenEventListener implementation .", "title": "", "metadata": ""}
{"_id": "4080f45cc341828a5cf0d9fdba7c32e0", "text": "withdraw account balance .", "title": "", "metadata": ""}
{"_id": "671af26d1fa48d94c784f69695fe4da0", "text": "Sets time when token release is enabled for specified holder .", "title": "", "metadata": ""}
{"_id": "4859faab809228ef2cc05e9fdc91398e", "text": "Splits the tokens from the owner address to the defined locations .", "title": "", "metadata": ""}
{"_id": "f53198efe94909a0da4fbccd4c263408", "text": "Allows creator to mark addresses as whitelisted for transfers to and from those addresses .", "title": "", "metadata": ""}
{"_id": "ffad55b38b35247095b1976f5e4e1820", "text": "Executes no more than _tradeAmount tokens from order .", "title": "", "metadata": ""}
{"_id": "95daa618028790bcaafa896d095a9f1b", "text": "Get the price according to the present time .", "title": "", "metadata": ""}
{"_id": "876c557b163c7a32eb9db80784ed2c13", "text": "Modifier to make a function callable only when the contract redemption is not paused .", "title": "", "metadata": ""}
{"_id": "37017c25c514a74dc0ca0ed1439214ba", "text": "It divides ( ETH / USD rate ) / ( PHI / USD rate ) .", "title": "", "metadata": ""}
{"_id": "1482e4b8a47c648adb60c7d7a43da267", "text": "token functions .", "title": "", "metadata": ""}
{"_id": "f19f38fc7f5c06923f62ae9e892bba76", "text": "This modifier is used to check if the user is the GM .", "title": "", "metadata": ""}
{"_id": "19bd78962177cd4b487e5f1cf9ee4fa0", "text": "Calculate the amount of Wei for a given token amount .", "title": "", "metadata": ""}
{"_id": "c15aea35cc52083089f2b4c6b074920a", "text": "The balance of a particular account ? .", "title": "", "metadata": ""}
{"_id": "a71d3f9a635d250bf8b4b7f0b1628629", "text": "finds the oldest character .", "title": "", "metadata": ""}
{"_id": "dc5f10f30113fe13fa9b9fdb85cbb3b0", "text": "Allows the owner to mint tokens for Command ( 10 ) .", "title": "", "metadata": ""}
{"_id": "4a5985390b2b4dc451fd0918f1c454c2", "text": "Get buyer referrer .", "title": "", "metadata": ""}
{"_id": "a8e7939a6479c23e636dae828fe4757a", "text": "Get multiple token balances on EtherDelta ( or similar exchange ) .", "title": "", "metadata": ""}
{"_id": "89c31968d50c0b96a31feb6481b560da", "text": "send _value ART to _to from msg . sender .", "title": "", "metadata": ""}
{"_id": "48ce2235f002a549c54c41630b1cda70", "text": "This function is called by both transfer and transferFrom .", "title": "", "metadata": ""}
{"_id": "c50e85cc9a245cc8f6108be2f4c17b1a", "text": "Returns decimal of token .", "title": "", "metadata": ""}
{"_id": "bac91c93f1ad844c88dc706b2f047750", "text": "remove an existing code .", "title": "", "metadata": ""}
{"_id": "cdae371f6b6128ae6273eff455642bb2", "text": "Check that address is exist in whitelist .", "title": "", "metadata": ""}
{"_id": "426551c810ce07b0bd743d02bb83134b", "text": "close phrase deposit ETH to Pool .", "title": "", "metadata": ""}
{"_id": "de15994d7c006d5cf64ee7692732921b", "text": "Represent a 2D coordinate as a single uint .", "title": "", "metadata": ""}
{"_id": "22b6ccc009720996f30936d8dc863fb1", "text": "destroy his tokens .", "title": "", "metadata": ""}
{"_id": "a7814928c01223d2cf9eb272fd6c7bd5", "text": "Sets the token_deployer address .", "title": "", "metadata": ""}
{"_id": "1f8ed0f707d32e1a15b3d1e311397298", "text": "For creating Scene .", "title": "", "metadata": ""}
{"_id": "ff953100b23167fadfcb861f4669f26b", "text": "The balance of _owner at the current block .", "title": "", "metadata": ""}
{"_id": "7129e43fbb1245649d40527990595f00", "text": "Gets the app-id associated to a nickname .", "title": "", "metadata": ""}
{"_id": "80da1e7d46c0eeb88d2fc367efb679b4", "text": "onlyDonor Reassigns the donor to a new address .", "title": "", "metadata": ""}
{"_id": "95bb407276978737a525626f8f3f903f", "text": "set new prices for buy / sell tokens from contract .", "title": "", "metadata": ""}
{"_id": "c67029667256753eb0856db3ec5a0e2d", "text": "In case an investor wants to retrieve his or her funds ( only possible before tokens are bought ) .", "title": "", "metadata": ""}
{"_id": "5c8a1c881e48490714e73179691cffb4", "text": "Withdraw tokens from the owners balance .", "title": "", "metadata": ""}
{"_id": "1945d9da6d247e918f6b115ac120e665", "text": "Split the _train function into multiple parts because of Stack Too Deep error .", "title": "", "metadata": ""}
{"_id": "440b9ede384f5f6cd047a82fa4eba5e9", "text": "returns the total number of the tokens available for the sale , must not change when the ico is started .", "title": "", "metadata": ""}
{"_id": "17df564928af5d025ef706548933e501", "text": "Returns any excess wei received .", "title": "", "metadata": ""}
{"_id": "d74c978d23aee81d187db68314e3f4f8", "text": "Token is released ( transferable ) .", "title": "", "metadata": ""}
{"_id": "c25ee00dde205892088b1f269d441ab6", "text": "Assigns ownership of a specific Pixel to an address .", "title": "", "metadata": ""}
{"_id": "32f00cdd678124948f7eeba7cee0b4a0", "text": "Get the order's balance of ETH for account customer .", "title": "", "metadata": ""}
{"_id": "7ac9aa252c056d4cf21fce044f2118b4", "text": "Issue tokens for a single buyer on the sale .", "title": "", "metadata": ""}
{"_id": "d9596ba0d8d60390188e1a8bc213c933", "text": "Update number of Kitten Coins remaining for drop , just in case it is needed .", "title": "", "metadata": ""}
{"_id": "cd0078d4e2edeb5bb71633d4dfcbb3e1", "text": "Approve a payment from msg . sender .", "title": "", "metadata": ""}
{"_id": "18f198e86a4a73eb169d16adb8200284", "text": "internal function , necessary to keep track of simple game links .", "title": "", "metadata": ""}
{"_id": "7240e9ce5a8757313e307b069ec38668", "text": "Function to vote to allow for updating prenup , both partners must vote true to allow update .", "title": "", "metadata": ""}
{"_id": "a6f93b1dab8ec7d781959218e0c955d8", "text": "Updates token metadata hashes to whatever is passed in .", "title": "", "metadata": ""}
{"_id": "ce837d4daffd22b3ebc61df610d1656d", "text": "it will let Owner withdrawn ether at any time during the ICO .", "title": "", "metadata": ""}
{"_id": "37db6d89adac2ec5b35cafaa093df683", "text": "Investors can claim refund .", "title": "", "metadata": ""}
{"_id": "ae7f0480f3af9d688f200b867c9240c8", "text": "Checks to see if we are allowed to change the allocator address .", "title": "", "metadata": ""}
{"_id": "f1a7d78676e5d2dbab1a8f00b2f4975c", "text": "This famous algorithm is called exponentiation by squaring and calculates x n with x as fixed-point and n as regular unsigned .", "title": "", "metadata": ""}
{"_id": "efe3c5a7a939f21b45126090e8f01519", "text": "get tokenId and check the order is a buy order or not , internal tokenId take 4 bytes isBuy is true means this order is buying token .", "title": "", "metadata": ""}
{"_id": "5b6c6fefd476a4b31ce51d7d71c6aaea", "text": "Dev withdrawal of tokens - splits equally among all owners of contract .", "title": "", "metadata": ""}
{"_id": "397b66faa3a463832c07d1f743c9e5da", "text": "Will get change in ETH from the tokens that were not possible to buy in a previous order - Contract supply of ETH must have enough balance ( which should be in every case ) .", "title": "", "metadata": ""}
{"_id": "5eafc2be14e7851ebc11a433b09d1885", "text": "ERC20 allowance ( ) .", "title": "", "metadata": ""}
{"_id": "753b59d9f63f5e354efcf5a3a90f1af6", "text": "Unpauses the token contract .", "title": "", "metadata": ""}
{"_id": "c2f739acd4f8eb3b36a25dfddffa3c0f", "text": "add addresses to whitelist for factory .", "title": "", "metadata": ""}
{"_id": "e5378a7c6e23c394ccf0ac632a708ac8", "text": "Withdraw proceeds .", "title": "", "metadata": ""}
{"_id": "fb33dfb5f82d79c5b071a1a2a6f15d12", "text": "Freeze amount for user .", "title": "", "metadata": ""}
{"_id": "49c90e2d06a0a2fd113dd4bce3de929e", "text": "edited : no bonus scheme this ICO .", "title": "", "metadata": ""}
{"_id": "ec79b960e68d1a6acb6a7a94e4bf6431", "text": "Setter for the whitelist contract .", "title": "", "metadata": ""}
{"_id": "f05cd3ce24f67fd4b9db61a378222fcb", "text": "calc real max time for spent time .", "title": "", "metadata": ""}
{"_id": "f22362a79911e2cf424bbeaa7b73d21d", "text": "to get the contract owner address .", "title": "", "metadata": ""}
{"_id": "b036c43529b565f6a92893e57eac1e43", "text": "length : The value stored at that pointer .", "title": "", "metadata": ""}
{"_id": "62f44bb9740595b6a237885798b49b93", "text": "Check if user is whitelisted admin .", "title": "", "metadata": ""}
{"_id": "632ba64b040dfcfee39cbd290b46826c", "text": "calculate payouts .", "title": "", "metadata": ""}
{"_id": "d978fa7548650d1e6034145096d4ed1a", "text": "Modifier to make a function only callable by the store or the owner .", "title": "", "metadata": ""}
{"_id": "3d4abd3031684c5370561ffa3ce537f3", "text": "Buy item from the market and apply to kittyId .", "title": "", "metadata": ""}
{"_id": "08b629c58d5c84c86b41a0a12b96ee2c", "text": "Return all token data .", "title": "", "metadata": ""}
{"_id": "2bd2b764111e7301e8bb54c75e466c8e", "text": "Token Sale time .", "title": "", "metadata": ""}
{"_id": "2f157cf4cced2be2bc5bd436f81517b9", "text": "Modifiers none .", "title": "", "metadata": ""}
{"_id": "a5421c8817ff8127146fb97fefed3bb0", "text": "Function that trusted contracts can use to perform any buying that users do in the platform .", "title": "", "metadata": ""}
{"_id": "ce22824aff6ebdd14440fa57435bdee3", "text": "Third-party initiates transfer of token from address _from to address _to .", "title": "", "metadata": ""}
{"_id": "90c1aa4f7458f1da99762eefb95cbe23", "text": "let me change the secret just in case I want to .", "title": "", "metadata": ""}
{"_id": "d8536913441e34d5c27aa5c1adecdd83", "text": "creates a new reward that can be claimed by users .", "title": "", "metadata": ""}
{"_id": "36508f1b260c2fff5f79b8382a6cee4a", "text": "result total value in wei .", "title": "", "metadata": ""}
{"_id": "8fb427f2217931c16d682a53c32b632b", "text": "Export MET tokens from this chain to another chain .", "title": "", "metadata": ""}
{"_id": "410300ea1bae51a245fd122648d03a81", "text": "Function to allow the Dao to register a new order .", "title": "", "metadata": ""}
{"_id": "51ba30bbe563e2af314127e684aaf1b9", "text": "Return number of restricted tokens from address .", "title": "", "metadata": ""}
{"_id": "16fd9a442ef242d36e06a2d8bfad9ff0", "text": "check if an account has this role .", "title": "", "metadata": ""}
{"_id": "337cca36806a288d51c5fabaddf2cfd8", "text": "Mint DRC Tokens from one specific wallet addresses .", "title": "", "metadata": ""}
{"_id": "ab7d443eddc03e663eebd0e70d83ff25", "text": "Set a new name .", "title": "", "metadata": ""}
{"_id": "7b4fdb3ce54c43509314d3dd0e40db39", "text": "Allow to ( re ) set finalize agent .", "title": "", "metadata": ""}
{"_id": "aecb36db0d3e0d88d35d866629a8c321", "text": "Get back ETH to owner .", "title": "", "metadata": ""}
{"_id": "671a98c653399125c49f383cda34b59a", "text": "Is champ ready to fight again ? .", "title": "", "metadata": ""}
{"_id": "9336039bca2ec83dc31ea8fade805697", "text": "self-destruct function for this contract .", "title": "", "metadata": ""}
{"_id": "ebdb9f15408eb9d37d657d8a71112f8c", "text": "balance uint .", "title": "", "metadata": ""}
{"_id": "61bc4c3a9b9d916a6a091bc06d025c24", "text": "Get the hero's location .", "title": "", "metadata": ""}
{"_id": "873c1997592061484980ab2ced86e5ab", "text": "Get number of doges since last hatch .", "title": "", "metadata": ""}
{"_id": "91ea3df8b8140c257064dc30ce4f4778", "text": "Check whiteList .", "title": "", "metadata": ""}
{"_id": "e90b69e6e1392fb10f96606e3055c81b", "text": "Get boolean if link is already claimed .", "title": "", "metadata": ""}
{"_id": "8169bac1bb0a137c343d3a238730d728", "text": "Sets the crowdsale .", "title": "", "metadata": ""}
{"_id": "cd82bb2b95ee805329bd2514e938528a", "text": "difference of a and b .", "title": "", "metadata": ""}
{"_id": "9ce38ca7379f80e20b9d5774178b6d3e", "text": "Emits Error event with specified error message .", "title": "", "metadata": ""}
{"_id": "b1d461c41869b81a9146335f64a87d26", "text": "mint and burn .", "title": "", "metadata": ""}
{"_id": "9190267799c9bb9d2e3fb6b9ab7d16f7", "text": "check crowdsale status .", "title": "", "metadata": ""}
{"_id": "79df960a8b39fe6bded84c79632d60df", "text": "Set start and stop blocks of poll .", "title": "", "metadata": ""}
{"_id": "999a66c17094b83c79bbf56a833d2e28", "text": "Returns balance of _owner .", "title": "", "metadata": ""}
{"_id": "c515adb80ee23f489f22ad5f3205885a", "text": "Allows for the transfer of tokens on the behalf of the owner given that the owner has allowed it previously .", "title": "", "metadata": ""}
{"_id": "67853f1b6afec275d84d62896affca08", "text": "Creates the required number of tokens on the specified account .", "title": "", "metadata": ""}
{"_id": "6a62cb395ffe1ede9a1abca7b496b0a5", "text": "Validates order arguments for fill ( ) and cancel ( ) functions .", "title": "", "metadata": ""}
{"_id": "6983b30ab46f2c6b4c258aece5c665c1", "text": "MyTokens - Retun tokens owned by this contract .", "title": "", "metadata": ""}
{"_id": "ab322e70bcd1a217790536e0e307e713", "text": "Claims the ownership of a given token ID .", "title": "", "metadata": ""}
{"_id": "9563c5dc477f5f26cef45ee755c71823", "text": "Function to stop initial stage .", "title": "", "metadata": ""}
{"_id": "2e2833174fa6dde5f91ae9ce8561f98e", "text": "Returns true if the provided listingHash is whitelisted .", "title": "", "metadata": ""}
{"_id": "4d2633bf0e64b443609707571c8a7325", "text": "gets the amount of tokens that an owner has allowed an address to spend .", "title": "", "metadata": ""}
{"_id": "c03d35826508fe9d0a5177ec4665d776", "text": "public function used to fill user interface with data .", "title": "", "metadata": ""}
{"_id": "d634ed6a0ac58976c760b467af981eba", "text": "Returns the state of the cube after performing the given moves .", "title": "", "metadata": ""}
{"_id": "7666864d475dc46bd217a1a25f258d21", "text": "Remove emission provider .", "title": "", "metadata": ""}
{"_id": "d71217e23b61d1723b5baed0934a3945", "text": "Return total supply .", "title": "", "metadata": ""}
{"_id": "5ada3bcbfb5b41a9d93ecac2ce0e6dbf", "text": "Changes the owner of the contract to newOwner .", "title": "", "metadata": ""}
{"_id": "ec644f8734a16c07f66b7845612111ac", "text": "Public function to stake tokens executable by any user .", "title": "", "metadata": ""}
{"_id": "a002a5dcfe7cb6013222a77c3f7e0349", "text": "Get winner account .", "title": "", "metadata": ""}
{"_id": "a981feb0ce331ad0e7139b962346589c", "text": "Returns the storage location of crowdsale's max number of tokens to sell .", "title": "", "metadata": ""}
{"_id": "04b862bc62da8a8219b670a9dd1c81ea", "text": "The generation of random numbers is generated by the banker's seed + current block of information 1 , The banker's seed is untrustworthy , but the current block information banker can not manipulate , in order to ensure that the banker can not manipulate the final random number results 2 , Block information because the whole network is open , there will be malicious players to use this point to attack the banker , so with the banker issued the seeds to ensure that the banker will not be attacked by malicious players .", "title": "", "metadata": ""}
{"_id": "c8126ffa644e3ac8b56b6d00d35d4f36", "text": "Mint the Token .", "title": "", "metadata": ""}
{"_id": "cd46fc6d1808b967c135dda6a8cabbf5", "text": "This function allows players to purchase lands during our pre-sale .", "title": "", "metadata": ""}
{"_id": "7112f1266ec23be8a3d4946409b0bd5d", "text": "Decrease the amount of tokens that an owner allowed to a spend .", "title": "", "metadata": ""}
{"_id": "2818b139cad26f89a65da3be023a806d", "text": "the symbol of the token .", "title": "", "metadata": ""}
{"_id": "4b6840c98548837a092a7936c54e4416", "text": "Transfers tokens to a beneficiary .", "title": "", "metadata": ""}
{"_id": "c75e3b3da06b2936f67ad18b66dd1b8c", "text": "End the auction and send the highest bid to the beneficiary .", "title": "", "metadata": ""}
{"_id": "e6f5453e93c2e3bf1ad3a45c6ecb9e9f", "text": "Voting started and in progress .", "title": "", "metadata": ""}
{"_id": "73416eec0d5fef9dc6be60efb3aed665", "text": "Allows for updating the opening time in the event of a delay .", "title": "", "metadata": ""}
{"_id": "ce6b6e9cee90967597b24a8abc627af5", "text": "Preallocate tokens for reserve , bounties etc .", "title": "", "metadata": ""}
{"_id": "3abe8f8ed60cb5a7c20ce66f1b64012d", "text": "only contract owner .", "title": "", "metadata": ""}
{"_id": "d6707c1a3aa8de367f5bd225501cd80e", "text": "only Wallet address .", "title": "", "metadata": ""}
{"_id": "41fb68a7fbcc49b3c2f9cf0d8b5e5bcf", "text": "allows anyone to adjust the year mint by calling aprMintAdjustment which will calculate days since the latest adjustment and run all calculation according N days skipped N days calculated .", "title": "", "metadata": ""}
{"_id": "9e3eb56b0c5b002f20c438c7e8d24ad8", "text": "close crowdsale .", "title": "", "metadata": ""}
{"_id": "c1f4f2b7a8ba8d19b38b8b20180a4744", "text": "change deposit fee .", "title": "", "metadata": ""}
{"_id": "1c1ef644a6725598e9361000f33f5af2", "text": "Submit a new sealed bid on a desired hash in a blind auction .", "title": "", "metadata": ""}
{"_id": "9f5c3fea99c37e7cbe9634c6a9d485a9", "text": "ETH Owner signs swap initializing time for correct work of close ( ) method .", "title": "", "metadata": ""}
{"_id": "7aa35f2ea36ae13837018e512517f80d", "text": "List assets in a particular state starting from an asset item .", "title": "", "metadata": ""}
{"_id": "036bd018dc4a95e050d92be1ce8b5117", "text": "set the timestamp when trasfers will be allowed .", "title": "", "metadata": ""}
{"_id": "5d7032d8e4583908b5374620e5fe296b", "text": "returns price of a soul .", "title": "", "metadata": ""}
{"_id": "599774cdcb9d4559874752b190706e31", "text": "Returns a slice containing the entire bytes32 , interpreted as a null-terminated utf-8 string .", "title": "", "metadata": ""}
{"_id": "e6e321b476c44a8a27c117b7f17d969a", "text": "This function sets the receiving address that the contract will send the pooled eth to .", "title": "", "metadata": ""}
{"_id": "f69e528c4a2f4a051ce18d1954c26e88", "text": "set the e4row partner , this is only done once .", "title": "", "metadata": ""}
{"_id": "a0ceeab20d091e20b40302277eb737b9", "text": "Returns the vested end time for a specified user .", "title": "", "metadata": ""}
{"_id": "e2cc8c358652f1050d085d683a2bc8a0", "text": "Allows the owner to change the bonus of the current ICO stage .", "title": "", "metadata": ""}
{"_id": "0d0db64281c354cf894657dbb852ebaa", "text": "Checks whether or not a purchase is valid .", "title": "", "metadata": ""}
{"_id": "2c213eb60047397fa0d6bf337887c0c7", "text": "Gets the actual jackpot .", "title": "", "metadata": ""}
{"_id": "517c47f0f5cf7ba694305b3ae7718e42", "text": "An account / contract attempts to get the coins throws on any error rather then return a false flag to minimize user errors .", "title": "", "metadata": ""}
{"_id": "8a54de5baa207deb911419830116e8cf", "text": "changes the coldwallet1 address .", "title": "", "metadata": ""}
{"_id": "ac85d2d079e457fcfa21d397d04bb896", "text": "One-time switch to enable transfer .", "title": "", "metadata": ""}
{"_id": "92e5c10fa08920839d0a49e3fc412fe3", "text": "Determines the amount of Scale to create based on the number of seconds that have passed .", "title": "", "metadata": ""}
{"_id": "8e7024fd7a10aa83d690daa22dbca4b9", "text": "utility , returns the expected return for selling the token for one of its reserve tokens , given a total supply override .", "title": "", "metadata": ""}
{"_id": "8291f15778fff6ba2682790cc8ace03c", "text": "for Emergency stop of the sale .", "title": "", "metadata": ""}
{"_id": "a8fa7873e6a33248929c4fddf898b4f0", "text": "updates rate with whic tokens are being sold .", "title": "", "metadata": ""}
{"_id": "8585a45bcc0bcc4b8cc50d6babcd3dd9", "text": "Allows unofficial users to delete their account .", "title": "", "metadata": ""}
{"_id": "6e92384519667b31d74e3ababb6cabc6", "text": "Returns the amount of carrots the user owns .", "title": "", "metadata": ""}
{"_id": "9b001124cf29607c2af4eb22d313b5a4", "text": "Function for the frontend to dynamically retrieve the price of buy orders .", "title": "", "metadata": ""}
{"_id": "447758c96df29425bb5f46089d0a509a", "text": "The address of the owner found at _index .", "title": "", "metadata": ""}
{"_id": "de98a4a0ccb65bec39424f97c9118e09", "text": "Poslje ETHje uporabniku ali pa tokene in nagradi klicatelja funkcije .", "title": "", "metadata": ""}
{"_id": "271aaab3adba9343988d1d5eb623f267", "text": "Throw if crowdsale not ended yet .", "title": "", "metadata": ""}
{"_id": "1cdd0ad44ce961da6f740fd29b54342a", "text": "true if the admin can send tokens manually .", "title": "", "metadata": ""}
{"_id": "800ba54601201a2dbe81f0c245c67aa0", "text": "send STB to the miners who returned STA tokens - after successful ICO .", "title": "", "metadata": ""}
{"_id": "7a9bf2b1fdd1477b138983c480ed788d", "text": "only wallet address can set new wallet address .", "title": "", "metadata": ""}
{"_id": "6a58a812daa3ad95af85b4372bb2c377", "text": "To send tokens to another user .", "title": "", "metadata": ""}
{"_id": "700f2219b8fab591d7d72895a9abf2df", "text": "Allows _spender to withdraw the _allowance amount form sender .", "title": "", "metadata": ""}
{"_id": "4ad10064a8089e70617912c7f5600e0a", "text": "Update a single cryptoColor payout for transfers .", "title": "", "metadata": ""}
{"_id": "084af978edf893d468fca58146d7a429", "text": "Modifier that allows only the main partner to manage the actual funding .", "title": "", "metadata": ""}
{"_id": "035a10d9ba21b7291d851081ef258dd7", "text": "Cancels the transaction .", "title": "", "metadata": ""}
{"_id": "a214c8c297ffcd9ee0685bedbd7b2613", "text": "Returns remaining Company allocation .", "title": "", "metadata": ""}
{"_id": "578665bf21da3942795769e71573dad1", "text": "Sets the name of the contraxt .", "title": "", "metadata": ""}
{"_id": "15ab66a811fd33c1298df233d3153c0b", "text": "BTC Owner checks if ETH Owner signed swap .", "title": "", "metadata": ""}
{"_id": "1747e52f3b9fb44ac88e510038788cef", "text": "Transfers tokens held by timelock to recipients multiply .", "title": "", "metadata": ""}
{"_id": "826b1e4b18005ed67d351307f8772a11", "text": "Mint a certain number of tokens .", "title": "", "metadata": ""}
{"_id": "49a6ce414923c253b71ca5ae8544f1c9", "text": "oraclize call back .", "title": "", "metadata": ""}
{"_id": "84326df91477398749e41dad25eb9099", "text": "Change the upgrade master .", "title": "", "metadata": ""}
{"_id": "fcaa3f9c591f304d2384b0be79fa822b", "text": "exchange tokens of _exchanger .", "title": "", "metadata": ""}
{"_id": "6d23afa0ba7083d8605c9bc9c8d7b7ac", "text": "throws if buyer is not whitelisted .", "title": "", "metadata": ""}
{"_id": "3d21f64f41b61f8cbc47e3438a8aecc5", "text": "fee from auctioning .", "title": "", "metadata": ""}
{"_id": "2164f7a281e5a61e602e7016a9d9bbe2", "text": "Set current ethAmount price in wei for one token .", "title": "", "metadata": ""}
{"_id": "82f77f711974ce21d7e2bfab02130380", "text": "Standard function transfer similar to ERC223 transfer with no _data .", "title": "", "metadata": ""}
{"_id": "75145da725a0ad33344a0e95c0b2433b", "text": "The starting balance of the next campaign .", "title": "", "metadata": ""}
{"_id": "44c355d384cc4e457bd36666f78017d3", "text": "Allows to change the number of required confirmations .", "title": "", "metadata": ""}
{"_id": "c34f535127443618186141e3d245c614", "text": "Calculates fee of a sale .", "title": "", "metadata": ""}
{"_id": "ee5c31472dd3c55701497736868095f3", "text": "NOTE : this function is used to redistribute the swapped MNY after swap has ended .", "title": "", "metadata": ""}
{"_id": "46756a2d1271022f6830c53ca0c3de6e", "text": "Overrides parent method taking into account the token cap .", "title": "", "metadata": ""}
{"_id": "d7b6730b9bdb6e42b56d3808ee6d5dcb", "text": "Change the current rate .", "title": "", "metadata": ""}
{"_id": "7ebcec5ed1e6ba5dd1faa79d2ab13491", "text": "Token distribution to Founder , Key Employee Allocation _founderAndTeamCap 10000000e18 ; 10 .", "title": "", "metadata": ""}
{"_id": "a4a55e75190f48a4be2351bdc5bb3ab5", "text": "Allows the current validator to transfer control of the contract to a newValidator .", "title": "", "metadata": ""}
{"_id": "8b608ff6ecf147ef8f3cf7c089c56892", "text": "Set the bool value of return_pause .", "title": "", "metadata": ""}
{"_id": "6a60763881e5fc5f7aecfe7324a86653", "text": "User sells ClimateCoins and gets Ether .", "title": "", "metadata": ""}
{"_id": "165dd6189140d7281e441d26ed518370", "text": "Checks if the address is a smart contract .", "title": "", "metadata": ""}
{"_id": "55bdf84d8300297652c11adf2b5b0e6d", "text": "Number of blocks per year .", "title": "", "metadata": ""}
{"_id": "9b498d20bc9838fe345206fa5417fcbe", "text": "Enables token transfers .", "title": "", "metadata": ""}
{"_id": "8ac78c5553de501560ae4bbd98badcc1", "text": "Create a new Kingdom .", "title": "", "metadata": ""}
{"_id": "a5bb68078603b90e22a8a17a1d39985c", "text": "Returns the lesser of two values .", "title": "", "metadata": ""}
{"_id": "7881aef2a0d79acfcc448b650e9b7a1d", "text": "true in case of succes , otherwise failure .", "title": "", "metadata": ""}
{"_id": "04d09ee0e237ed54e760ea6c2866a820", "text": "This will return the stats for a ponzi friend / / returns ( ponziFriendId , parent , amoutPlayed , amountEarned ) .", "title": "", "metadata": ""}
{"_id": "0ff0b7637a5b71cfefaca64663f1efc7", "text": "Transfer Beercoins to multiple recipients .", "title": "", "metadata": ""}
{"_id": "4024b3bed5eca1fa4e3936fc9ecbde3d", "text": "Get the mileage points of given address .", "title": "", "metadata": ""}
{"_id": "f355059c2bd52431435344496bcf18ae", "text": "changes the current gen of all stars by importance .", "title": "", "metadata": ""}
{"_id": "0c5c84cd62a7a6b19f3bb80da82bed79", "text": "Retrieve the node id of the previous node in the tree .", "title": "", "metadata": ""}
{"_id": "4992762353cbdeec68893ea7d4a4306a", "text": "Throw if the blob is not transferable to a specific user .", "title": "", "metadata": ""}
{"_id": "0fab683e1fc6434a9fe97f1cb771bced", "text": "allows contract owner to mint tokens for ICO enablers respecting the ICO_ENABLERS_CAP ( no vesting ) .", "title": "", "metadata": ""}
{"_id": "b1bd21bd2411f22b39fb5e12d977fefa", "text": "Creates the token to be sold .", "title": "", "metadata": ""}
{"_id": "71ee1f004e953cb220e63f743e420d51", "text": "Bids on a sale , completing the sale and transferring ownership of the NFT if enough Ether is supplied .", "title": "", "metadata": ""}
{"_id": "4def6e90674b27d937b1ba95f7bdc34b", "text": "overriding MintableToken transfer to add kyc logic .", "title": "", "metadata": ""}
{"_id": "ec00e9cc50076ca3d9c9a97fa6ed2b41", "text": "Decode an RLPItem into a boolean .", "title": "", "metadata": ""}
{"_id": "f7d7aeb0e6cb9394435cb648991b792a", "text": "For creating Crypton .", "title": "", "metadata": ""}
{"_id": "9a56be8bd0fd41c84ba0c89c50f76ce5", "text": "Remove the contributor from the whitelist .", "title": "", "metadata": ""}
{"_id": "17f9e70b1071038f955737e3a0dfe176", "text": "Reveals multiple votes with choices and secret salts used in generating commitHashes to attribute committed tokens .", "title": "", "metadata": ""}
{"_id": "5693df71094ede2ebb9452fd842324ff", "text": "proxyPayment ( ) allows the caller to send ether to the Token directly and have the tokens created in an address of their choosing .", "title": "", "metadata": ""}
{"_id": "e4c429f92a244263ff3c69746943293d", "text": "Change the minimum taker fee paid to the protocol ( owner only ) .", "title": "", "metadata": ""}
{"_id": "805d3427a4906e8f9ed4d7923e2ab3cd", "text": "Update expiry date .", "title": "", "metadata": ""}
{"_id": "d0582625fdc733eca458860dbc645287", "text": "deposit Ether into the contract .", "title": "", "metadata": ""}
{"_id": "14480d03266d1a250d5f690025f8827a", "text": "restrict function to be callable when token is active .", "title": "", "metadata": ""}
{"_id": "6881f4f571747ea205755cf2bbe82961", "text": "Verify existence of id to avoid collision .", "title": "", "metadata": ""}
{"_id": "72c125e75c3f01570d632cdd557ebf35", "text": "Main function to pay interests .", "title": "", "metadata": ""}
{"_id": "430d2b7e4d277989addce89dbfdc744c", "text": "Returns the number of dogs owned by a specific address .", "title": "", "metadata": ""}
{"_id": "480b572215b50bce0c9fccd779255418", "text": "Change PPBT Selling and Buy Price .", "title": "", "metadata": ""}
{"_id": "3c673961e5cbaadd262f6caa614eb406", "text": "Starts the trading stage , allowing buyer to claim their tokens .", "title": "", "metadata": ""}
{"_id": "167181d2cf3518482d6af47277d49406", "text": "Close / Open crowdsale .", "title": "", "metadata": ""}
{"_id": "14cc68f18ca0f8e8338e3a7c97113f94", "text": "Destroy the contract and unregister self from the ContractResolver .", "title": "", "metadata": ""}
{"_id": "4a09737ccec894d63466a61aaf004191", "text": "Add a group of users to whitelist B .", "title": "", "metadata": ""}
{"_id": "c026306fa0021c94a34b3caaf3a39b36", "text": "Cancels a sale unconditionally .", "title": "", "metadata": ""}
{"_id": "976172a73fa3ac66559a6279e01fa700", "text": "reward is cut in half every reward era ( as tokens are mined ) .", "title": "", "metadata": ""}
{"_id": "174b14684544ff8d74acb28cfe77e86f", "text": "The total fee to be paid in EDO tokens .", "title": "", "metadata": ""}
{"_id": "6f6350ea96dcafa7ce7b750495141b17", "text": "Specifies service account .", "title": "", "metadata": ""}
{"_id": "4c5ad9ef80d507325ee25fd76175063e", "text": "Creates a RareCoin token .", "title": "", "metadata": ""}
{"_id": "e3d4bc539e4e7f4e6203547caf72c128", "text": "Transfer from sender to another account .", "title": "", "metadata": ""}
{"_id": "21c9271da3705e2d7425be9c7edd393d", "text": "Current token is not transferred .", "title": "", "metadata": ""}
{"_id": "369c83e969ef2ec71527ff5dab520b9a", "text": "Gets total champs count .", "title": "", "metadata": ""}
{"_id": "7af3b7019f8d6be3ce341b78e68fa26d", "text": "only be called in case the contract may need to be destroyed .", "title": "", "metadata": ""}
{"_id": "d7f120c1b9320fd5af99b130b834d572", "text": "Reverts if operational .", "title": "", "metadata": ""}
{"_id": "1fb84ad6185d9c38ad705379a2c76aaa", "text": "Let the owner stop the crowdsale close timer , as long as it has not yet expired .", "title": "", "metadata": ""}
{"_id": "203559754494de3728ccf83c6dd3dddb", "text": "The rate used when changing tokens .", "title": "", "metadata": ""}
{"_id": "fcf50e59557d211255e1c319de4a4eac", "text": "check number of participants .", "title": "", "metadata": ""}
{"_id": "eacf960dd4208967a042e86df78a868f", "text": "Adds a user / contract to our list of account readers .", "title": "", "metadata": ""}
{"_id": "c36108875f7da03187beede0f096d0ca", "text": "Blocks if '_addr' is not a holder .", "title": "", "metadata": ""}
{"_id": "7d9757655880ba12cec8331f66fa369a", "text": "Set the sale hardcap amount .", "title": "", "metadata": ""}
{"_id": "ac813fc280c9b53ca770441ab91c4c70", "text": "Get record sender .", "title": "", "metadata": ""}
{"_id": "16b86c3def812dc53788bf4055953090", "text": "Gets total supply of tokens .", "title": "", "metadata": ""}
{"_id": "68cf8f83deddfc6dc0b8afac1fbedb16", "text": "Give not bought tokens to owner , also give back ownership of MDKToken contract .", "title": "", "metadata": ""}
{"_id": "dbb1629ab4e1338a4429796ea604479e", "text": "Allows anyone to create tokens by depositing ether .", "title": "", "metadata": ""}
{"_id": "0104d646975dfbfa37db77ade566b7a9", "text": "Get all tokens of a particular address .", "title": "", "metadata": ""}
{"_id": "f8a7f466b913f49a713377c4d814a852", "text": "Set the engAddress .", "title": "", "metadata": ""}
{"_id": "c7733aef8fc501d36505e1b31c7243ce", "text": "Compute initial card price ( in wei ) .", "title": "", "metadata": ""}
{"_id": "2cad39a799242c3f6dee7657dad53159", "text": "Acceptes ETH and send equivalent BLU with bonus if any .", "title": "", "metadata": ""}
{"_id": "a18866cad1a15370531e930c83eb9dd9", "text": "Distribution Token from Admin .", "title": "", "metadata": ""}
{"_id": "47efc121ea5d1e2ba84726c644b7b3bd", "text": "Transfers a Warrior to another address .", "title": "", "metadata": ""}
{"_id": "bfd378a385df2ba4d0f52f59fc15a1dc", "text": "Modifier to make a function only callable by C-level execs .", "title": "", "metadata": ""}
{"_id": "9bcd99894993fd5a1f5504d694df808a", "text": "Stop trasfer fee payment for tokens .", "title": "", "metadata": ""}
{"_id": "48a17a0c13c3ddbfc8c1fc5da60bc68d", "text": "send bonus token to broker .", "title": "", "metadata": ""}
{"_id": "3f4bb1f52e3036bc4de8aab210fc8ef0", "text": "to test : suppose the offer is to sell 2 tickets at 0 . 102ETH .", "title": "", "metadata": ""}
{"_id": "f2141cec1900ccb409105675b578c2ba", "text": "Query if an address is an authorized operator for another address .", "title": "", "metadata": ""}
{"_id": "fd69114265cd08290c571ad74872c689", "text": "Checks if the crowdsale purchase is valid : correct time , value and hard cap not reached .", "title": "", "metadata": ""}
{"_id": "cd8266fcd6fba17034645e5a74ed63ee", "text": "ERC20 balance function .", "title": "", "metadata": ""}
{"_id": "0b3813923f002a75f99a50c8fe1f1e53", "text": "Get balance of the address provided .", "title": "", "metadata": ""}
{"_id": "b9ceacccc7068b83623f9b8e9494190c", "text": "Exposes that this contract thinks it is an AffiliateProgram .", "title": "", "metadata": ""}
{"_id": "f8a403d589369e0839c7148d23009fee", "text": "Anyone who owned some companies can claim their token .", "title": "", "metadata": ""}
{"_id": "8b90bb73708c960b8adc56f3529c5546", "text": "Starts the redeeming period .", "title": "", "metadata": ""}
{"_id": "e170f6b1a96b129853edf773398b50be", "text": "ERC223 transfer DETs w / o data for ERC20 compatibility .", "title": "", "metadata": ""}
{"_id": "3050b539d07761f0a4f635caab68e246", "text": "Shift the 6 most recent buyers , and add the new buyer to the front .", "title": "", "metadata": ""}
{"_id": "d3466f95b1e1677b9c4c4af946a05027", "text": "Set rate of ETH and update token price .", "title": "", "metadata": ""}
{"_id": "d74215739ccd23c9f2cc6be94c164f67", "text": "we can create Zodiacs with different generations .", "title": "", "metadata": ""}
{"_id": "f40fdf1cf8345e73a4bdaa12c82b2c38", "text": "Exit price ( gem per skr ) .", "title": "", "metadata": ""}
{"_id": "d23fa4cdda24d21c607e72e92dd28ae1", "text": "get block number .", "title": "", "metadata": ""}
{"_id": "da418849bfe4b728947c822498fc8cb1", "text": "Returns tokens locked for a specified address for a specified purpose at a specified time .", "title": "", "metadata": ""}
{"_id": "78e92297369de22f1a9ad0d46f7390db", "text": "Fire the . . .", "title": "", "metadata": ""}
{"_id": "f2178400f9f4dfad9f2e580695f24262", "text": "Rollback the contract for the given contract identifier to the provided version .", "title": "", "metadata": ""}
{"_id": "f283edb0eb67a5869de27a5d42a16f16", "text": "Returns all the relevant information about a specific grey .", "title": "", "metadata": ""}
{"_id": "ea607b0ebb357acdbe2584b0d72e2d4b", "text": "_getTknAddr ( ) ; _getIcoAddr ( ) ; _getExchgAddr ( ) ; address tkn_addr ; address ico_addr ; address exchg_addr ; _________________________________________________________ .", "title": "", "metadata": ""}
{"_id": "f540cd23cb6af1def39166084ee7e3bd", "text": "throws if person sending is not contract Admin or cs role .", "title": "", "metadata": ""}
{"_id": "ffa14f6c97b8e51693d0eb684af8bd21", "text": "Borrow tokens from the bank .", "title": "", "metadata": ""}
{"_id": "49a567f51cf637c4bd93620e3fdd4b98", "text": "Registers the Ethereum Address to the Endpoint socket .", "title": "", "metadata": ""}
{"_id": "cfde88ffcae7bcae7664a3e5a2181368", "text": "This is used to allow some account to utilise transferFrom and sends tokens on your behalf , this method is disabled if emergencyLock is activated .", "title": "", "metadata": ""}
{"_id": "c628d1f37ec7fcffbb432bb548e5eccc", "text": "issue tokens for received ether .", "title": "", "metadata": ""}
{"_id": "7e63868eac4ed102a3ab0f2bfe46eab0", "text": "true if the sending is allowed ( not frozen ) .", "title": "", "metadata": ""}
{"_id": "64355773903694e443d4f4441fc23a5a", "text": "Allows devs to set num rewards used .", "title": "", "metadata": ""}
{"_id": "e894cd3115faca441a55de651e5c50fa", "text": "doPayment ( ) is an internal function that sends the ether that this contract receives to the vault and creates tokens in the address of the _owner assuming the TokenSale is still accepting funds .", "title": "", "metadata": ""}
{"_id": "e0bc19c31b99271e2bc93dc68cdc380b", "text": "Sets the new token contract address .", "title": "", "metadata": ""}
{"_id": "892c3325eca3b0f2dcd32f2c2887a27e", "text": "Issues tokens .", "title": "", "metadata": ""}
{"_id": "ea1a0fc8beaaf4d6adeb28fe52225aca", "text": "Burning all tokens on mintAddress .", "title": "", "metadata": ""}
{"_id": "2b5a49055018d8cc3c58c32073b1f393", "text": "check whether the msg . sender .", "title": "", "metadata": ""}
{"_id": "5c105933687ebba5a6f4525b19a226c5", "text": "Creates a bidirectional link between two nodes on direction d .", "title": "", "metadata": ""}
{"_id": "53749a110f9ee22a47745d34b16ce9c2", "text": "This was created to be overridden by the stages implementation .", "title": "", "metadata": ""}
{"_id": "10f70f3ed7438a2763f47c9a7717c79f", "text": "Withdraws the available balance .", "title": "", "metadata": ""}
{"_id": "6c8b560a88502191aa618a418437c152", "text": "Function to cast the Capped ( mintable ) token provided with the constructor to a blockporttoken that is mintabletoken .", "title": "", "metadata": ""}
{"_id": "41b77afc59ee2dedbe276f45fc2fc4f2", "text": "Product's buyer need to use this function for save his genuine .", "title": "", "metadata": ""}
{"_id": "2ff628aa9547a84a74a2afee6b0deab0", "text": "Agent sign on user data .", "title": "", "metadata": ""}
{"_id": "aacd9e569cb57e77d00deaa44afe78a2", "text": "used to withdraw funds from the contract from an ended fundraiser or refunds when the fundraiser is cancelled .", "title": "", "metadata": ""}
{"_id": "59a17206ab550f2c02daa55819a3ac6f", "text": "Set policy if all investors must be cleared on the server side first .", "title": "", "metadata": ""}
{"_id": "0fa68b30f1b44c98850e29cdcb17e7d6", "text": "Returns the amount of tokens approved by the owner .", "title": "", "metadata": ""}
{"_id": "2bd42464ad19f15251ef999eb440061d", "text": "Returns true if betting is allowed within time frame .", "title": "", "metadata": ""}
{"_id": "e4470370349e8f5cb3123ff0f38841a5", "text": "We don't want the Unicorn to spread hateful messages .", "title": "", "metadata": ""}
{"_id": "be6d808ff98070d178729a182f58af46", "text": "function for cancel deal ( accessable ony for signer of current deal ) .", "title": "", "metadata": ""}
{"_id": "6c5751d56789ae1184602f0435fa91a8", "text": "Updates whitelist contract address .", "title": "", "metadata": ""}
{"_id": "f9206139f3fbf553699e1d1d5a67269e", "text": "Change Pool capacity in USD .", "title": "", "metadata": ""}
{"_id": "e2771326d861bf9c3a7ce0b20651b6e6", "text": "DST accepts Cash Investment through manual process in Fiat Currency .", "title": "", "metadata": ""}
{"_id": "adeab98dfd4ae18cda4fdff5b0aa0ac5", "text": "receive approval from an ERC20 token contract , take a record .", "title": "", "metadata": ""}
{"_id": "9980ec747ab71249e68c966633eb5356", "text": "standard transferFrom function with timelocks .", "title": "", "metadata": ""}
{"_id": "7e7216c81a032b1cba57b9c005a8cbb9", "text": "MKR / USD Feed .", "title": "", "metadata": ""}
{"_id": "9b437527ec718991645d0c1a47187f75", "text": "Delegate your vote to the voter ( to ) .", "title": "", "metadata": ""}
{"_id": "5f73b9b05a791698c655ad9868160dfe", "text": "Remove all fees from the contract .", "title": "", "metadata": ""}
{"_id": "2a9b931815c3a319456e5089050c1d74", "text": "Transfer token from address to another address that's allowed to .", "title": "", "metadata": ""}
{"_id": "b927e07139fb1bf47cb1d12fe911efe2", "text": "return status of arbitrary address and dataHash .", "title": "", "metadata": ""}
{"_id": "0c7f747a3c3706ae63eaa11a9ed7e087", "text": "Calculate devfee in game .", "title": "", "metadata": ""}
{"_id": "cd2986cdf8ce26ca56df70170400994b", "text": "Constructor-Function creates exchange .", "title": "", "metadata": ""}
{"_id": "b962d1d2b25fbcd6f2189e4c298a3265", "text": "get back the BET before claimingPhase .", "title": "", "metadata": ""}
{"_id": "addcd28665152a3c6fc067c6e1d9692e", "text": "spend Nuru Tokens from another Ethereum account that approves you as spender .", "title": "", "metadata": ""}
{"_id": "37e6ff4ba249a6cff55f5ae583ebbd22", "text": "Counts percentage of the total funds that belongs to the charity .", "title": "", "metadata": ""}
{"_id": "36cd5efdda02e179536464dc8738f3bf", "text": "Return the cos of an integer approximated angle .", "title": "", "metadata": ""}
{"_id": "4c447af6e4c3af56a5ce0b97546de689", "text": "Overrides TimedCrowdsale hasClosed method to end sale permaturely if token cap has been reached .", "title": "", "metadata": ""}
{"_id": "57328c568a6360a5a08820e4f2fc746a", "text": "add new participant .", "title": "", "metadata": ""}
{"_id": "a68e0ea70a301cb264d555f6b81bd653", "text": "Resolves the initial hand ( if possible ) and sets the users draws .", "title": "", "metadata": ""}
{"_id": "96d9c96e5ad3a900931ddabc880bdeb8", "text": "Allows to add a new admin .", "title": "", "metadata": ""}
{"_id": "925e9b822dcb909dd92dda93c6c3c9f3", "text": "Converts given number to base58 , limited by 32 symbols .", "title": "", "metadata": ""}
{"_id": "ef36e3891a54e964af4c0fab293ecd7a", "text": "Send any excess profits to treasury .", "title": "", "metadata": ""}
{"_id": "12cd9b4521320803456fbc47fbb7a6de", "text": "Mints a new NFT .", "title": "", "metadata": ""}
{"_id": "9959dfebea1a41c51015db015dab7782", "text": "Get Ended Pools .", "title": "", "metadata": ""}
{"_id": "ab7ecc154bb0b6d07eb6d5270723ded1", "text": "generate public from secret for manufacturer ( note this is not going to transactions - just constant ! ) .", "title": "", "metadata": ""}
{"_id": "7c16dc9501a81d8a3f9e41d3afdbeee0", "text": "We can only initialize once , but don't add beforeDeadline guard or check deadline .", "title": "", "metadata": ""}
{"_id": "9645742a75f049650f2fb9627d2eb9af", "text": "public function to create a promotion team and assign it to some address .", "title": "", "metadata": ""}
{"_id": "6cb8bf07c9a3bdb0dd8fda649e8dd398", "text": "function about ask Order place ask order by send NAC to contract .", "title": "", "metadata": ""}
{"_id": "957f0938717331338e701a6bfcdce33b", "text": "Check itemPublicKey has been registered .", "title": "", "metadata": ""}
{"_id": "88cd4974ccd0817b3db09f4c46a7abcf", "text": "Returns the current period as a number from 0 to totalPeriods .", "title": "", "metadata": ""}
{"_id": "7a53af9dc82511af94b08d69cdc056a5", "text": "Authorization getters .", "title": "", "metadata": ""}
{"_id": "92ac85e2508c5d805aaafb8610335b94", "text": "Gets an address's RED allowance .", "title": "", "metadata": ""}
{"_id": "4989c5b14ded0b230660a559c4a9681a", "text": "Throws if called before the end of ICO .", "title": "", "metadata": ""}
{"_id": "e3770006438d8738938e27af977dd3d2", "text": "overriding Crowdsale buyTokens to add extra whitelist logic we did not use validPurchase because we cannot get the beneficiary address .", "title": "", "metadata": ""}
{"_id": "291bc98ad45ed38c920305955807e4a3", "text": "Helper function to get specific properties of all of the personal stakes created by an address .", "title": "", "metadata": ""}
{"_id": "3bb3b092902939255f5391193bd7973f", "text": "Calculate winner of game type 2 ( roll higher ) .", "title": "", "metadata": ""}
{"_id": "ea3ff6c4e6d1127da15aeb8504a6cef7", "text": "contributors can claim tokens after public ICO is finished tokens are only claimable when token address is available .", "title": "", "metadata": ""}
{"_id": "4ece994462c2edeab88f19b924a85cf7", "text": "dividend functions .", "title": "", "metadata": ""}
{"_id": "ca911809c4659829f9ed86ddd1633178", "text": "buy normal cards with jade .", "title": "", "metadata": ""}
{"_id": "3ce2aa3e8023305dff8a819bf745c63c", "text": "returns the approximate total number of tokens in existence .", "title": "", "metadata": ""}
{"_id": "3030a6304fd83c90fa544b62700e2172", "text": "set withdraw only use when bugs happned .", "title": "", "metadata": ""}
{"_id": "620f1b0431658f7e46279c70bd229e27", "text": "Increase the airdrop count to allow sweet humans asking for more beautiful Kitten Coins .", "title": "", "metadata": ""}
{"_id": "5ee89f89026d4a98082457c15f748554", "text": "datacoord userId_assurId .", "title": "", "metadata": ""}
{"_id": "c4022ef47a4d367223b4a8095c277917", "text": "Fill hash data .", "title": "", "metadata": ""}
{"_id": "10e277fec2b9ae5a4bf336a71539d28a", "text": "Prevents user to send transaction on his own address .", "title": "", "metadata": ""}
{"_id": "57155ba7ea01c94abbfa78c3a91c23d4", "text": "Override this function to add extra work when a fundraiser is finalized .", "title": "", "metadata": ""}
{"_id": "a34cc43c0138b7ee1fe6f6717375cbad", "text": "Check if the specified beneficiary has sent us funds before .", "title": "", "metadata": ""}
{"_id": "6a278462798f47ed40f44c21d6733ab6", "text": "Emergency stop whole ICO event .", "title": "", "metadata": ""}
{"_id": "a2a37cdef1b0b4d051f045b0b24d1a4c", "text": "Only if '_token' is the left or right token that of the token changer .", "title": "", "metadata": ""}
{"_id": "49decf4683096a389505bf6a5c3dc904", "text": "main language data .", "title": "", "metadata": ""}
{"_id": "261ae4b73f83d41379276a1bdf7bfbec", "text": "close the pool from receiving more funds .", "title": "", "metadata": ""}
{"_id": "fed53cbbdaa8b75a68a67a467b053614", "text": "Returns the bonus in percentage , eg 130 means 30 bonus .", "title": "", "metadata": ""}
{"_id": "1eb4719e3c3cf1eaeb1cc60bf1b3c7fc", "text": "get the balance of current asset pool .", "title": "", "metadata": ""}
{"_id": "6e4549f0c64a810f2513d5753ad63cb2", "text": "Function to purchase tokens .", "title": "", "metadata": ""}
{"_id": "439a641ef9e4efc4a00d34c865f9e8fc", "text": "Deletes a listingHash from the whitelist and transfers tokens back to owner .", "title": "", "metadata": ""}
{"_id": "c34a442ec6d34e6f1d17a5c71a2ac82b", "text": "Returns the currentPrice for each token .", "title": "", "metadata": ""}
{"_id": "5fd355e10002067c6d4e266dd49fe6bd", "text": "called by the multiSigWallet to pause , triggers stopped state .", "title": "", "metadata": ""}
{"_id": "5d4238ee7c8c722918f9fc9bf0d6d906", "text": "sets the amount of gas consumed by methods with the given sigantures .", "title": "", "metadata": ""}
{"_id": "50e3cc8359c651f6aa724d2545306d9e", "text": "Only owner is able to remove admin .", "title": "", "metadata": ""}
{"_id": "4281086a30b979a95236b94cfbe4325c", "text": "Validate and update the crowdsale stage .", "title": "", "metadata": ""}
{"_id": "40e03ba5f3b0b6867860a9891d1d79d5", "text": "Update variables related to crowdfunding .", "title": "", "metadata": ""}
{"_id": "a1194fa05b76dbe111120a75f8a38920", "text": "Minting add contract to list of contracts that can mint mokens .", "title": "", "metadata": ""}
{"_id": "4e1a6d3a79c188396e221d50b34c9925", "text": "Returns maximum of an array .", "title": "", "metadata": ""}
{"_id": "81cfdd8279de0247fdfa78d4bf6ccbf3", "text": "Get a certain number of an addresses blocks in ascending order .", "title": "", "metadata": ""}
{"_id": "af6a6700212d473e2d4296669fb7afee", "text": "directly mint tokens .", "title": "", "metadata": ""}
{"_id": "1e56379e452e791edbb4391c0ac0a4a6", "text": "determine the bonus with respect to time elapsed .", "title": "", "metadata": ""}
{"_id": "75b38f71393b4bd023160609ed4491d3", "text": "Returns owner address based on the key .", "title": "", "metadata": ""}
{"_id": "a44137f8657998ce449ea1087c5f75fc", "text": "Get lock records count .", "title": "", "metadata": ""}
{"_id": "3cf57f8cd44faf13a2b29c7bf2cd6410", "text": "Resets burntTokens to zero .", "title": "", "metadata": ""}
{"_id": "3bdc21360a99e151169bc82b7e08c852", "text": "Returns number of tokens owned by the given address .", "title": "", "metadata": ""}
{"_id": "2f39d627f8f6aaf064f99c827ce8d83d", "text": "The following functions are used by the front-end for display purposes .", "title": "", "metadata": ""}
{"_id": "edfba24411680ce5262d32d27481bc02", "text": "disables / enables transfers can only be called by the contract owner .", "title": "", "metadata": ""}
{"_id": "d2d2402eea4a8c869c8c00cada74a551", "text": "Access modifier for CEO-only functionality .", "title": "", "metadata": ""}
{"_id": "8b75bd1f084518a6f3492679d328d130", "text": "Set a new address for vault contract .", "title": "", "metadata": ""}
{"_id": "381beb4e0fe872715631ee4f559f452f", "text": "return if the presale is open .", "title": "", "metadata": ""}
{"_id": "ae19bda449fb9f4851fdb2b50a6dba9a", "text": "Validator casts one vote to the proposed ipfsAddress stored in the _rootHash key in the proposals storage area if _vote true means voting affirmatively , else if _vote false , means voting negatively .", "title": "", "metadata": ""}
{"_id": "e81e00a28a3a990b94b1a7442c6a4b20", "text": "Create a new reusable template and use it to ask a question .", "title": "", "metadata": ""}
{"_id": "c886531d2a26489530739a706fb64a09", "text": "set recall percent for participants .", "title": "", "metadata": ""}
{"_id": "4893334b276d9fc2b4b7ad9854b98cd9", "text": "check if hard cap goal is reached .", "title": "", "metadata": ""}
{"_id": "ab447a7897ec37190a51aacbae21f270", "text": "Besides donating RAMEN tokens , you can also donate ETH as well .", "title": "", "metadata": ""}
{"_id": "edc2369ec94a03d1aebc90af0a7f4125", "text": "Adds a list of addresses to the admins list .", "title": "", "metadata": ""}
{"_id": "44b5fb8f57093a841be5c5f49023fe29", "text": "todo : optimize this .", "title": "", "metadata": ""}
{"_id": "d4c313218ff3c84f7f2b3be01ab9aaa6", "text": "Manually back Resilium owner address .", "title": "", "metadata": ""}
{"_id": "70b4a88853851e927a7c7143c264b04c", "text": "Impl FinalizableCrowdsale .", "title": "", "metadata": ""}
{"_id": "4a74d70246bab5fb3a3bd2037a96b414", "text": "Try create new player in storage .", "title": "", "metadata": ""}
{"_id": "a31bc1258426267bd22c080bccfb1b00", "text": "Reverts if called by any account other than the owner .", "title": "", "metadata": ""}
{"_id": "0d8d7600c65a44efeca206bf628aef4f", "text": "Modifier for multisig functions .", "title": "", "metadata": ""}
{"_id": "5b2e320fdfeb09c74294f8fab8985b1c", "text": "estimate stage .", "title": "", "metadata": ""}
{"_id": "b54ef00e976ee31280b946d011e2f700", "text": "says if crowdsale time bounds must be checked .", "title": "", "metadata": ""}
{"_id": "3ea546e204a887041b6e22982e5eada4", "text": "Main function which is used to join the sweepstake .", "title": "", "metadata": ""}
{"_id": "e5284828a8c345ee633a9279274ac071", "text": "Releases 1 / 4 of team supply after 24 months .", "title": "", "metadata": ""}
{"_id": "f6d8d90dd764a42f0515d988fe76e050", "text": "Fell fre to donate Author if You like what is presented here .", "title": "", "metadata": ""}
{"_id": "5d04b12f6b89b27a39da71620a63e6e3", "text": "initiates Oraclize call for ETHUSD rate .", "title": "", "metadata": ""}
{"_id": "66d1589f4132ae49a02039ac929d6368", "text": "Converts ( x , y ) to tileId xy .", "title": "", "metadata": ""}
{"_id": "11c63e67ff22c4d184d0bb7c31e30cfa", "text": "Assigns a new address to act as the CTO .", "title": "", "metadata": ""}
{"_id": "dc809a472cab44b3ffd19e5eb639af7f", "text": "Checks if a hash has been signed by the whitelistAdmin .", "title": "", "metadata": ""}
{"_id": "6c98201d0d60659b28bd60887cc2e032", "text": "Submits a payment to the contract with the spcified payment identifier .", "title": "", "metadata": ""}
{"_id": "b335514b8c2e8679e179323416b65d57", "text": "Setting up the allowance for the spender on the behalf of the contract owner .", "title": "", "metadata": ""}
{"_id": "63a4f266e13e8ef9093a0bc1d3462028", "text": "Stores a spender's minimum token purchase amount for a given whitelisted tier .", "title": "", "metadata": ""}
{"_id": "fe639093831c3914e3448d0f12dbea6d", "text": "Get current ICO Phase .", "title": "", "metadata": ""}
{"_id": "04dd5a425e5df5c7c17238500f088ca8", "text": "Computes number of tokens with bonus for the specified ether .", "title": "", "metadata": ""}
{"_id": "5c8a0e815a26b77a16cf2e2154832a1e", "text": "Computes delegator status .", "title": "", "metadata": ""}
{"_id": "278f18749870cec1bdb66a01896369a1", "text": "TODO : implement to control funding state criterion .", "title": "", "metadata": ""}
{"_id": "e522408f5c69241aee41e45a94240136", "text": "Returns number of canvases owned by the given address .", "title": "", "metadata": ""}
{"_id": "5bf209cc23b21920102eefec6c61fb3d", "text": "Set max contribution for round .", "title": "", "metadata": ""}
{"_id": "1d1d252882cf024844e3ae764176d2e0", "text": "removes tokens from an account and decreases the token supply can only be called by the contract owner .", "title": "", "metadata": ""}
{"_id": "6893a5b1dd7663d73e47b973a16e4a9c", "text": "getFeeToTokenConversion ( v2 ) - Controller could be changed in the future to update this function .", "title": "", "metadata": ""}
{"_id": "275034e87ede5a21a4ac3a5501f638f2", "text": "Cease allowing the owner of address aproducer . address ( ) .", "title": "", "metadata": ""}
{"_id": "243acc71de7202fc6baeb786c3ff99cb", "text": "Cancels an order .", "title": "", "metadata": ""}
{"_id": "55bd290032dc89d5cf6dde59fff2f113", "text": "creates a random number in 0 , range ) .", "title": "", "metadata": ""}
{"_id": "cf64aa4459824bcd2ea0a7491d1841a5", "text": "Computes next price of token given the current sale price .", "title": "", "metadata": ""}
{"_id": "740106ded1294d962cdf10a710d8c8ab", "text": "drop will create a new allowance for claimable tokens of the airdrop it will no longer work once the token supply has been frozen .", "title": "", "metadata": ""}
{"_id": "76d23ce3bba5ad92b55899f61b579b82", "text": "Set current price rate A .", "title": "", "metadata": ""}
{"_id": "468b5ee45d0ddf7d66abffa1710525cf", "text": "read the total number of purchases by a user .", "title": "", "metadata": ""}
{"_id": "582cd4c32a012033026bd126ecd88f35", "text": "allows the owner to collect the accumulated fees sends the given amount to the owner's address if the amount does not exceed the fees ( cannot touch the players' balances ) minus 100 finney ( ensure that oraclize fees can be paid ) .", "title": "", "metadata": ""}
{"_id": "f48a707175cd3cfc33d15c4f6aca52be", "text": "remove a admin role from an address .", "title": "", "metadata": ""}
{"_id": "0b6649d6c80e9cfa02f0e1bf1491f037", "text": "The random number from Oraclizes decides the game result .", "title": "", "metadata": ""}
{"_id": "acea324956edc61f485cc23802bd48b8", "text": "Admin function to release new cat index numbers and update image hash for new cat releases .", "title": "", "metadata": ""}
{"_id": "617ea27e8a349746281059528114c094", "text": "overide ERC20 for Haltable .", "title": "", "metadata": ""}
{"_id": "a22592de603258b6cfdf6ab2e09f5803", "text": "public transfer , only can be called by this contract .", "title": "", "metadata": ""}
{"_id": "db2dc5d7a99a8bc107fac48b2d726a7e", "text": "Counts number of confirmations if number is equal or greater than .", "title": "", "metadata": ""}
{"_id": "69ac6a848557525298cde23c5290a3ad", "text": "Approves and then calls the contract code .", "title": "", "metadata": ""}
{"_id": "81b1ac3e2379a93ec8c4754300c275b8", "text": "Add factory .", "title": "", "metadata": ""}
{"_id": "684a6ee729f080611626fcb066ac990c", "text": "constant function returns the current ADX price .", "title": "", "metadata": ""}
{"_id": "370f57b3e49e14a3fcda7e286383cb8f", "text": "Get current fee value .", "title": "", "metadata": ""}
{"_id": "190b62dcb49489642641832d7d431284", "text": "Check the customer's Tx of payment for MCW .", "title": "", "metadata": ""}
{"_id": "3caffeb4527c87c805da11fd0c693e0a", "text": "An allowed address can transfer tokens from another's address .", "title": "", "metadata": ""}
{"_id": "ed6583ad22005e80767a8f66cfbfabb4", "text": "Mint of tokens in the name of the founders and freeze part of them .", "title": "", "metadata": ""}
{"_id": "4203c3785369604e7f685a87a517308c", "text": "Purchase token and increse referrer payout .", "title": "", "metadata": ""}
{"_id": "6d8c3ba0e8d45936d0a927e4aef3e293", "text": "Transfer a Centurion owned by another address , for which the calling address has previously been granted transfer approval by the owner .", "title": "", "metadata": ""}
{"_id": "6ae66d20ce7f80f17794cb086daf27b9", "text": "Winners can claim their own prizes using this .", "title": "", "metadata": ""}
{"_id": "75b20978bca074ba1a5da120ac6a503b", "text": "doPayment ( ) is an internal function that sends the ether that this contract receives to the vault and creates tokens in the address of the _owner assuming the Campaign is still accepting funds .", "title": "", "metadata": ""}
{"_id": "b2fc08fc1931b1887259f3b6e41d014a", "text": "Go back to Presale .", "title": "", "metadata": ""}
{"_id": "58b70c39ebbdca4c0f579f7ed313598f", "text": "Get the new timeout timestamp for a tile .", "title": "", "metadata": ""}
{"_id": "e63c79d46b3a76a875d30542ed9819fd", "text": "Callable once to set the Comptroller address .", "title": "", "metadata": ""}
{"_id": "83e35323c3e2bf102cae6162eb87b6bd", "text": "Check whether the address is in the whitelist .", "title": "", "metadata": ""}
{"_id": "4787e2951debbb2735f19fb1fa45d1c7", "text": "Set function , used when bugs comeout .", "title": "", "metadata": ""}
{"_id": "4714b95f3ab09044297d6cc3c31277ea", "text": "retire the contract ( dangerous ) .", "title": "", "metadata": ""}
{"_id": "151c568c8f5ea5e0738a72a42e39a401", "text": "Mints the tokens only once against the supplied key ( category ) .", "title": "", "metadata": ""}
{"_id": "77e95816eff571b2d4b39a67e8b8636c", "text": "Get the balance in weis of this contract .", "title": "", "metadata": ""}
{"_id": "9180a0f06c5913eb1113dbe2b289403c", "text": "Utility function , which acts the same as approve ( . . . ) , .", "title": "", "metadata": ""}
{"_id": "29e1f83a09cb5c4f42a28783a013d4a1", "text": "Mint RHEM tokens and aproves the passed address to spend the minted amount of tokens .", "title": "", "metadata": ""}
{"_id": "779cbabd150e501602fb43889678d628", "text": "solidity hates stack limits .", "title": "", "metadata": ""}
{"_id": "0847bd81b1d4b082634b2548c9536f44", "text": "buy ipc token by sending at least 'minimumEtherAmount' .", "title": "", "metadata": ""}
{"_id": "cb00f95dafdbd9e01d87fab7a752a804", "text": "Allows Company withdraw investments when round is over .", "title": "", "metadata": ""}
{"_id": "a83d383de2986b77cc78f8400274b279", "text": "Destructs the contract and sends any remaining ETH / SYC to the owner .", "title": "", "metadata": ""}
{"_id": "d630beff5c0394acab186cb4456c97dd", "text": "WD function .", "title": "", "metadata": ""}
{"_id": "a664cca66f4e59588e8e638e99d5d28e", "text": "Override ERC20 transfer function in order to perform fee entitlement recomputation whenever balances are updated .", "title": "", "metadata": ""}
{"_id": "005364d494a7bf7222ca51868427d21f", "text": "Create an account and emit an event .", "title": "", "metadata": ""}
{"_id": "efeb761b99f0169f511a00c6b38c0959", "text": "Extend OpenZeppelin's BasicToken transfer function to store snapshot .", "title": "", "metadata": ""}
{"_id": "2697f29d4a0b2b1c36979590cc4da24b", "text": "modifier requiring contract to be live .", "title": "", "metadata": ""}
{"_id": "27d77ce12c761cfeb6a58ea924a25bf8", "text": "True if _operator is an approved operator for _owner , false otherwise .", "title": "", "metadata": ""}
{"_id": "720aabe012d456609f9b40cb407f4191", "text": "Reserves place for unknown address .", "title": "", "metadata": ""}
{"_id": "1c95117298b2d615bce51f067df5043a", "text": "token drain .", "title": "", "metadata": ""}
{"_id": "4b850789a4d832a7cde97823b594b841", "text": "Function to set owners addresses .", "title": "", "metadata": ""}
{"_id": "c9e601e44882c61d1f4649e867f55410", "text": "Calculate the total subsidy of a block .", "title": "", "metadata": ""}
{"_id": "2710865dca3d11910333c44297a875ac", "text": "Used to make sure the kitty doesn't learn two of the same move .", "title": "", "metadata": ""}
{"_id": "07fb8d06eac6b0f84e42fb1da5f413bc", "text": "To change the owner of the contract , putting the candidate .", "title": "", "metadata": ""}
{"_id": "0cb01471e12f1947fb125457d1b9be18", "text": "Start distribution phase .", "title": "", "metadata": ""}
{"_id": "d0faaf8a2c9153cd7109a959a3d14cf5", "text": "set update completed .", "title": "", "metadata": ""}
{"_id": "777b5a1081dfd8da0a7c11dd4268cdc2", "text": "Transfer on behalf of another address .", "title": "", "metadata": ""}
{"_id": "7eea6c6beb484296284bef32f626e0c8", "text": "true if the transaction can buy tokens , otherwise false .", "title": "", "metadata": ""}
{"_id": "603d5781176bf5bc028ecb3604126745", "text": "Only owner can manually finalize the sale .", "title": "", "metadata": ""}
{"_id": "5aff16aeadce73d969caeef624613820", "text": "overriding Crowdsale buyTokens to add a dynamic rate that will match bonus token rewards .", "title": "", "metadata": ""}
{"_id": "1d6682fa9f7c726c777ff9b04d915921", "text": "Triggers the finalization process .", "title": "", "metadata": ""}
{"_id": "cdda937767bb7dcdd39677b6685d50ec", "text": "Returns the pending amount to complete de payment of the loan , keep in mind that this number increases every second .", "title": "", "metadata": ""}
{"_id": "16528af12b28e1cb471a26ebe84f9410", "text": "Transfer Country from Previous Owner to New Owner .", "title": "", "metadata": ""}
{"_id": "4dbe60fb52eb80b432c4a6d4a5641c77", "text": "Maker can withdraw ethers from this contract .", "title": "", "metadata": ""}
{"_id": "19f4016a3ef04ddbd75a8759f12edc3b", "text": "returns reward for the next submitted board , so reward first and then increase boards ! .", "title": "", "metadata": ""}
{"_id": "9d405ef1ea6760054bc785bf34eead81", "text": "Get the XBET price in WEI during the auction , at the time of calling this function .", "title": "", "metadata": ""}
{"_id": "2a6ea9f6363c83b4cc609fc295dff2f1", "text": "Used to approve an address and call a function on it in the same transaction .", "title": "", "metadata": ""}
{"_id": "d61ca7bbf4683f90dc1839dbbbbd49af", "text": "Check if an address has this role .", "title": "", "metadata": ""}
{"_id": "85c63701fa90cf46efbdf6396ff2deeb", "text": "Add a post .", "title": "", "metadata": ""}
{"_id": "56b3f4f1c6b5da4b90d3b25c23a2ac73", "text": "Set up the tokenbankroll stuff .", "title": "", "metadata": ""}
{"_id": "02f12b36d08dfcc76f30161c6d4b1a7e", "text": "Transfer token to a specified address and forward the data to recipient .", "title": "", "metadata": ""}
{"_id": "d43754328a4fab9921f9d0112c924733", "text": "Checks if a given address is the current owner of a particular Zodiac .", "title": "", "metadata": ""}
{"_id": "0734f475fd644669a9ab48a7010723d1", "text": "sets the champion , second , third and fourth teams to the contract storage .", "title": "", "metadata": ""}
{"_id": "8d7e1739fd213ec9f999814df66f34fc", "text": "The user to be approved must be approved by the current token holder .", "title": "", "metadata": ""}
{"_id": "e426b12e35c937092cfb684194ec027a", "text": "Returns log2 ( x 32 ) 32 1 .", "title": "", "metadata": ""}
{"_id": "0f373c135a01a26372e64d97b689e67d", "text": "todo : should be a library .", "title": "", "metadata": ""}
{"_id": "04a2ba4b0908fa61617809f1e72c24da", "text": "Call cancelOrder - Solidity ABI encoding limitation workaround , hopefully temporary .", "title": "", "metadata": ""}
{"_id": "75c1ae58011f76fae592a613dd8f8d90", "text": "function to remove locking period after 12 months , can be called only be owner .", "title": "", "metadata": ""}
{"_id": "a2c29d9f885492d0ed94b3f77e5b0b0e", "text": "Check whether a user allows direct debits by the master .", "title": "", "metadata": ""}
{"_id": "e2a4d7cca1afda233bc8654447002519", "text": "batch assign tokens to users registered in airdrops .", "title": "", "metadata": ""}
{"_id": "1aa4702c36ebed600d696f20658171fa", "text": "There's no limit to the coin supply reward follows more or less the same emmission rate as Dogecoins' .", "title": "", "metadata": ""}
{"_id": "3d735e05903b47f823dd9bec19d4036b", "text": "Set the cutoff time after which the token can no longer be paused .", "title": "", "metadata": ""}
{"_id": "c7e49788b35ff685a9cba5d4943104de", "text": "Burning Of Tokens .", "title": "", "metadata": ""}
{"_id": "c986e01a37290a98d5d13db784cfeb20", "text": "Sender starts the challenge period ; this can only happen once .", "title": "", "metadata": ""}
{"_id": "6414bd6cc91caf5bfaeabdb3b01229b6", "text": "Burn token from own address .", "title": "", "metadata": ""}
{"_id": "64801c02b2539a4341b49aaa1f243267", "text": "Get the owners token balance .", "title": "", "metadata": ""}
{"_id": "b35177f245ef99a240c378893475fb0f", "text": "web function , return item info .", "title": "", "metadata": ""}
{"_id": "1045ba0e71c0014870a0758910891d8a", "text": "Overrides ERC223 interface to prevent interaction before finalization .", "title": "", "metadata": ""}
{"_id": "47c26fe3c06d2206b0081119c7bc1c40", "text": "Override some function for freeze functionality .", "title": "", "metadata": ""}
{"_id": "ab2f47d14f783104abe19299f268f8cb", "text": "add off chain contribution .", "title": "", "metadata": ""}
{"_id": "3c4253b98f2f51f7ab4801b7600fbf3d", "text": "Returns the total number of Properties currently in existence .", "title": "", "metadata": ""}
{"_id": "8996b1107aba7336aa32658075de802f", "text": "Spec : Returns the amount which spender is still allowed to withdraw from owner .", "title": "", "metadata": ""}
{"_id": "941f49da3b63a2a244fcd53d60854797", "text": "When a user buys our token they will recieve : , - Week 1 - they will recieve 25 bonus - Week 2 - they will revieve 15 bonus - Week 3 - They will recieve 10 bonus - Week 4 - they will recieve no bonus - Week 5 - they will recieve no bonus .", "title": "", "metadata": ""}
{"_id": "05f0e0aad87701fa2829c8cd89d41299", "text": "Withdraw the earned Dividends to Ether - Includes Torch + Token Dividends and Token Referral Bonuses .", "title": "", "metadata": ""}
{"_id": "654231781fbcbb701c16d71b16e30469", "text": "Owner can transfer out any accidentally sent ether .", "title": "", "metadata": ""}
{"_id": "b50394e396a2ff9c0631c51caa547d0a", "text": "Available allowance .", "title": "", "metadata": ""}
{"_id": "577992087f67f96461e581476320695c", "text": "allows owner to change the minInvestment in case of extreme price jumps of ETH price .", "title": "", "metadata": ""}
{"_id": "7cbb637e68266a5b6d4d030486a21815", "text": "modifiers for restricting access to methods .", "title": "", "metadata": ""}
{"_id": "aef4d779558aa78ab7402dc17c6b13dc", "text": "Get current group names .", "title": "", "metadata": ""}
{"_id": "43cfd7d0eccef0314c56b0e8d3b42f2a", "text": "function to spin callable no eth allowed .", "title": "", "metadata": ""}
{"_id": "1c3c96acfc122ea8713e0acdb5b3dd69", "text": "Creates a new lottery .", "title": "", "metadata": ""}
{"_id": "89732de7f700fa7618a8ff33cbc3d90e", "text": "Returns the position of the asset / collectible / token .", "title": "", "metadata": ""}
{"_id": "9ec15e9f2c5605fe03b6f1be3cddadf0", "text": "return the total number of purchases done on marketplace .", "title": "", "metadata": ""}
{"_id": "78e940587ee83169ff283bf5ffb40978", "text": "This method can be used to extract mistakenly sent tokens to this contract .", "title": "", "metadata": ""}
{"_id": "86f7d28e9c57b7fa99ed4a5a40ef6b45", "text": "first checks if deck and the player's number of cards are correct , then checks if the player won and if so , calculates the win .", "title": "", "metadata": ""}
{"_id": "f2aad2319841be2daec9ddc3b6451e4b", "text": "Withdraws all ETH deposited or PAY purchased by the sender .", "title": "", "metadata": ""}
{"_id": "2c866076df47d525dd16d9efa69c2adf", "text": "Allows for refunds to be made by the owner of the contract .", "title": "", "metadata": ""}
{"_id": "45eb0edb47b63e6295d17466b9232540", "text": "transfer token for a specified address with froze status checking .", "title": "", "metadata": ""}
{"_id": "653c412ac8ca03bd913d71dd7f8c9c63", "text": "get contributors' locked amount of token this lockup will be released in 8 batches which take place every 180 days .", "title": "", "metadata": ""}
{"_id": "1603657f82f80fab64cbf49ef0e49226", "text": "Returns user details by user address .", "title": "", "metadata": ""}
{"_id": "06690b73a66b6bae12ca50f804b71180", "text": "returns true if the list exists .", "title": "", "metadata": ""}
{"_id": "e130855870521a626364d7d36b7f3697", "text": "checkTemplateRequirements is a constant function that checks if templates requirements are met .", "title": "", "metadata": ""}
{"_id": "ec1f3fec284d7d91cc5b0cc9657f5e28", "text": "ERC223 safe token transfer from one address to another .", "title": "", "metadata": ""}
{"_id": "6f3e507caa54d684795c2d6e8747b6dd", "text": "Converts ether to our tokens .", "title": "", "metadata": ""}
{"_id": "450bf2c07b930fa4687d3ce9d4986dce", "text": "It is address of MultiEventsHistory caller assuming we are inside of delegate call .", "title": "", "metadata": ""}
{"_id": "2a2166f25ce9616984a6704371de7fd3", "text": "Removes a list of addresses from the admins list .", "title": "", "metadata": ""}
{"_id": "210ff430c4d7cb7876a755f3f9176f81", "text": "Once unlocked , transfer can never be locked again .", "title": "", "metadata": ""}
{"_id": "0c5e27bff4145de7fbd183871a2a2eec", "text": "overriden template method from FinalizableCrowdsale .", "title": "", "metadata": ""}
{"_id": "f0541ac2524bb5e7f83fb381ba0310fa", "text": "Sales of Channels .", "title": "", "metadata": ""}
{"_id": "22ecee0860771340f3f6d1fa278bfb63", "text": "Issue the team tokens and lock them for 90 days from the day the token is listed on an exchange .", "title": "", "metadata": ""}
{"_id": "708c6160da78e669fb473febd719a8da", "text": "Add airdrop tokens .", "title": "", "metadata": ""}
{"_id": "0347e6c7ae55fc8c7f36743ad6e7f77a", "text": "Calculate the percent variance between Benchmark value and Comparison value .", "title": "", "metadata": ""}
{"_id": "44defe3ff36137389a829d9c63566018", "text": "number of tokens given spender is currently allowed to transfer from given owner .", "title": "", "metadata": ""}
{"_id": "8794a0c26cf925ac6ca60a8721542540", "text": "Assigns ownership of a specific EtherDog to an address .", "title": "", "metadata": ""}
{"_id": "58e0529d346f97bba9c0329d357f4eb0", "text": "Function for withdrawal tokens from Vault to specified address .", "title": "", "metadata": ""}
{"_id": "d5c3e988ad0653d41ed1215f714baa4f", "text": "Partial refund users .", "title": "", "metadata": ""}
{"_id": "7021926d45a05e32402e02b50dfdc96c", "text": "Override to extend the way in which ether is converted to bonus tokens .", "title": "", "metadata": ""}
{"_id": "11319780cdfff93be7c9174294d54c1c", "text": "Lists an indexed Bytes collection from start or end .", "title": "", "metadata": ""}
{"_id": "bdb081b7b8289eeb0e68cc97a7e022ea", "text": "for pausing contract .", "title": "", "metadata": ""}
{"_id": "b45ec39b2eb4c296519240617c5f7260", "text": "Sets new owner .", "title": "", "metadata": ""}
{"_id": "c3c12c475d9dd49221f4a87e08788298", "text": "Throws if game is paused .", "title": "", "metadata": ""}
{"_id": "23010de98840753be9fb021428186c96", "text": "Buy Now Cancels Auction with no Penalty and returns all placed bids .", "title": "", "metadata": ""}
{"_id": "10a8dcc91a747a33a14731b91bc88749", "text": "Upon successfull ICO .", "title": "", "metadata": ""}
{"_id": "a346fe050f830a331b99b8a3244b0981", "text": "Allow spender to withdraw from your account , multiple times , up to the 'tokens' amount .", "title": "", "metadata": ""}
{"_id": "a56f158f23e472efdaf5024a8cf3fbfc", "text": "check if contract is outdate which means there was no any transacions since ( now - outdateDuration ) seconds and its going to reset .", "title": "", "metadata": ""}
{"_id": "a503815b28b609df87c0f6289664794b", "text": "Liquidation can only be stopped if the collateralisation ratio of this contract has recovered above the automatic liquidation threshold , for example if the ether price has increased , or by including enough ether in this transaction .", "title": "", "metadata": ""}
{"_id": "4c290b2ea22ef37f495ac690cd83f098", "text": "Implements IERC223Token .", "title": "", "metadata": ""}
{"_id": "733aa71d5cc93bbd6ef9b7f244ae622f", "text": "returns the number of items in the registry .", "title": "", "metadata": ""}
{"_id": "ed802b5cf47d11a537f080c51de2828c", "text": "Function show in contract what is now .", "title": "", "metadata": ""}
{"_id": "b74921a37b399358b57ad931883eeffd", "text": "get total tokens in that address mapping .", "title": "", "metadata": ""}
{"_id": "6a27f70baa8dcb155e77b6d9d4fc350d", "text": "Return total amount of issued tokens , in EXTwei .", "title": "", "metadata": ""}
{"_id": "7c560e768bb452015d2c9cb1a2c5c82d", "text": "Throws away your stash ( down the drain ; ) ) immediately .", "title": "", "metadata": ""}
{"_id": "55f0be5221deae19dfca460a67565e92", "text": "get names for specified addresses and namespace .", "title": "", "metadata": ""}
{"_id": "bf2e8addc91d3843389cd001318bb315", "text": "Function which activates the cycle .", "title": "", "metadata": ""}
{"_id": "dfa9d0d808cb343def8f42a220566d07", "text": "Functions to set the features of each round ( only for the owner ) and of the whole ICO .", "title": "", "metadata": ""}
{"_id": "12f4c303e6cb898e30b0824f0d837852", "text": "Defines the operation by checking if flat fee has been paid or not .", "title": "", "metadata": ""}
{"_id": "fcf8993531072488d37239051097cd38", "text": "it will let Owner Stop the crowdsale and mint function to work .", "title": "", "metadata": ""}
{"_id": "e89b0a5c5a108015b0f63d820b43dd35", "text": "User can withdraw there airdrop tokens if address exist in the whitelist .", "title": "", "metadata": ""}
{"_id": "a9423a2040a4913e2fc4fca81e55fde5", "text": "Migrate Leader Prices .", "title": "", "metadata": ""}
{"_id": "c13aec7838c7daf111adf2e9fdbe682f", "text": "stake for a seperate address .", "title": "", "metadata": ""}
{"_id": "f75c00d2889c4c5463576427f92a1078", "text": "Terminate contract and refund to owner .", "title": "", "metadata": ""}
{"_id": "95d17942c65f6c433641240a3a0476e5", "text": "This function checks the state of the flag .", "title": "", "metadata": ""}
{"_id": "2ee0dbae3dc916e721ce00c8cb0ae393", "text": "Spend tokens to acquire ETH .", "title": "", "metadata": ""}
{"_id": "0d0acf939116fedcb1234315ee0548a5", "text": "Function to get a manifest registration based on manifestId .", "title": "", "metadata": ""}
{"_id": "75211ce5531bbf8b47c92ecb2ad9dc9e", "text": "Allows the owner to create an record of token owners and their balances .", "title": "", "metadata": ""}
{"_id": "1bee0bca1a71388a472e72aab39fe1b1", "text": "sale considered successful when it raised equal to or more than the softcap .", "title": "", "metadata": ""}
{"_id": "2fa3452e057ab841f19bce0fc2993345", "text": "deletes proposal signature data after successfully executing a multiSig function .", "title": "", "metadata": ""}
{"_id": "adb6bccebb041f74cf0a56a908252cad", "text": "Throws if dungeon status do not allow challenge , also check for dungeon existence .", "title": "", "metadata": ""}
{"_id": "389655e7c4d7e9ba2bd725a2fbd10386", "text": "Adds or updates an address .", "title": "", "metadata": ""}
{"_id": "c544fcddd272b4a0a36f20597fb1b989", "text": "Only allow the Provide contract owner to execute a contract function .", "title": "", "metadata": ""}
{"_id": "ac7588149bb5014d000043134aa76cbb", "text": "Allows for the bonus to be changed at any point in time by the owner of the contract .", "title": "", "metadata": ""}
{"_id": "9a0267c71109543ccff5be10e3579bb1", "text": "function for actual payout in public sale .", "title": "", "metadata": ""}
{"_id": "866c972cd990a33e62928debd44b60f4", "text": "Total amount of tokens .", "title": "", "metadata": ""}
{"_id": "2a2a06cd3a71bc01fb1a41389038a494", "text": "wei price .", "title": "", "metadata": ""}
{"_id": "0fe5ccd49a8c950b8dde4f6c1848bcfe", "text": "Run Crowdsale .", "title": "", "metadata": ""}
{"_id": "dcd4f54a2fe44a138297dd93f0f004a8", "text": "Computes bonus based on amount of contribution .", "title": "", "metadata": ""}
{"_id": "ddab271cbaec99076af91a92c561379c", "text": "Calculation of Token Ratio in ICO .", "title": "", "metadata": ""}
{"_id": "644fea70000e3eb3a2bfba2613196298", "text": "This was created to be overriden by stages implementation .", "title": "", "metadata": ""}
{"_id": "32b8aa052f863f292b8a6175011b43a7", "text": "If the sale is unsuccessful ( has halted or reached deadline and didnt reach softcap ) .", "title": "", "metadata": ""}
{"_id": "e328fa2df80eaaf1a1f22f47c27d72aa", "text": "close round manually - if needed .", "title": "", "metadata": ""}
{"_id": "181134fce269d97eb29171bb9f119e25", "text": "Make sure derivative tokens are handled for the _from and _to addresses .", "title": "", "metadata": ""}
{"_id": "6fa6abec7bf59ff008702f39da619ca0", "text": "Set the threshold for a payment to be sent directly .", "title": "", "metadata": ""}
{"_id": "2d9278fb990110f8d41c2bad90a1eb3f", "text": "Add pending withdrawal for an address .", "title": "", "metadata": ""}
{"_id": "9a9ed897ac10eb8cc5449e929ee895cf", "text": "change symbol and name .", "title": "", "metadata": ""}
{"_id": "ec208aa197b9f7f00be9213d8e7ffb37", "text": "removeContract function for destroy the contract on network .", "title": "", "metadata": ""}
{"_id": "78060eaaf979ee9d62f0e3f719acc5e0", "text": "If the current lowest ask address wants to fill a bid it has to either cancel it's sale first and then fill the bid or lower the lowest ask price to be equal or lower than the highest bid .", "title": "", "metadata": ""}
{"_id": "3128a8b67a050b1c96888d785f4bb40b", "text": "The functions below surve no real purpose .", "title": "", "metadata": ""}
{"_id": "937ebd7bfd7f292d381a780b740a4b8d", "text": "As a buyer , pay a transaction .", "title": "", "metadata": ""}
{"_id": "5a36cf7a39d43caab78b40b9b2759ae4", "text": "get token release time of third round .", "title": "", "metadata": ""}
{"_id": "d126968982bacb135bf3b6714d71291d", "text": "withdrawPromoter transfers back to promoter all bonuses accumulated to current moment .", "title": "", "metadata": ""}
{"_id": "c13180f47b2ba94b41f4b7b85dc17c9e", "text": "Burns amount tokens from owner .", "title": "", "metadata": ""}
{"_id": "4aa955a8a0dc4a05231392915d69d7c9", "text": "Transfer the ZeroGold reward to our mining leader's payout wallets .", "title": "", "metadata": ""}
{"_id": "9d0947c3a3822e97f74916fab432df89", "text": "When finishing the crowdsale we mint non-crowdsale tokens based on total tokens minted during crowdsale .", "title": "", "metadata": ""}
{"_id": "552804b68cd4c50b06eae267cedc2609", "text": "Allow anyone to send the winner their winnings .", "title": "", "metadata": ""}
{"_id": "6b4be586db3355ac92154d2a30357019", "text": "Returns whether the game is active .", "title": "", "metadata": ""}
{"_id": "61aa7505e6e02eb5963fa00b4a2eaeca", "text": "This function will return only the levels of pokemons .", "title": "", "metadata": ""}
{"_id": "a8d6f60e9739814e9007f696546c5450", "text": "gas price getter .", "title": "", "metadata": ""}
{"_id": "a38af28061d195865a94867847de6e64", "text": "Starts the game , i . e .", "title": "", "metadata": ""}
{"_id": "e754ca7b7a06e7513b04b56a2a9e0fcf", "text": "Set current preICO price in wei for one token .", "title": "", "metadata": ""}
{"_id": "2644e2862e66637d8b5d11848f1e9263", "text": "It is possible to hand over owner s authority .", "title": "", "metadata": ""}
{"_id": "c3f4fa1f06ee36a18c961ada68181477", "text": "No modifiers were needed , because each access is checked no more than one time in the whole code , .", "title": "", "metadata": ""}
{"_id": "d7186f0b4e37e450f06d0631168d0140", "text": "called by the owner to unpause redemption , returns to normal state .", "title": "", "metadata": ""}
{"_id": "30e8e6c0a90624c2069df576abcc2d44", "text": "Returns the correct entity address resolved based on entityOfUser mapping and also reverts if the resolved if it is owned by the message sender sender .", "title": "", "metadata": ""}
{"_id": "f03a03ee378ea4542938fd9243c22802", "text": "Set allocation buy admin .", "title": "", "metadata": ""}
{"_id": "e4df8027ddfbf5990edcee07494fd9b2", "text": "Handling token distribution and accounting .", "title": "", "metadata": ""}
{"_id": "05afbf2e96cc7f5195d59edce90abd98", "text": "Reclaim remaining tokens after crowdsale is complete .", "title": "", "metadata": ""}
{"_id": "262b68fcde0b451b1f0a8c22db95926a", "text": "create a rabbit with grade , and set its owner .", "title": "", "metadata": ""}
{"_id": "6ae60851354664b2f7a58cd023090585", "text": "Compares two strings and returns true iff they are equal .", "title": "", "metadata": ""}
{"_id": "09a2c1789ee268df7ace0c2005432199", "text": "change units address .", "title": "", "metadata": ""}
{"_id": "792e223a88ad476a6ccc7ad2a435d11a", "text": "successful closure handler .", "title": "", "metadata": ""}
{"_id": "3926d7ac8ce833e50fb05facd438060d", "text": "In case the ambassador quota is not met , the administrator can manually disable the ambassador phase .", "title": "", "metadata": ""}
{"_id": "992bf599f3d450d674460e4efb657686", "text": "Proxy call for setting hodler stake .", "title": "", "metadata": ""}
{"_id": "76fbda9c4ec835bbbc77f61412781cb5", "text": "Getter Methods .", "title": "", "metadata": ""}
{"_id": "4e2426a97e7dfd8a06755bced84c1bb0", "text": "Check the cooldown remaining until the allowee can withdraw the balance .", "title": "", "metadata": ""}
{"_id": "0749dea07d883ec6587a7d5080919973", "text": "Owner can unpause the contract ( Goes to unpaused state ) .", "title": "", "metadata": ""}
{"_id": "7298f5bcb88c82130753e0432a68aa83", "text": "it is a internal function called by create function to get the amount according to the blocknumber .", "title": "", "metadata": ""}
{"_id": "780409f4a4f92be85846ceff921f05a7", "text": "helper function to get the market maker address form token .", "title": "", "metadata": ""}
{"_id": "6863c6661ac743f0f088fccdf9a4f555", "text": "update the ico status .", "title": "", "metadata": ""}
{"_id": "b5359482a1d827c319619801790e2337", "text": "Must be called after the crowdsale has finished .", "title": "", "metadata": ""}
{"_id": "54195231c1069fd86796a4726ca81edc", "text": "Returns true if we are in the live period of the sale .", "title": "", "metadata": ""}
{"_id": "a05b1790d937dce1aff544067f750cad", "text": "Put a cutie up for auction .", "title": "", "metadata": ""}
{"_id": "9dde936b55dd4ae7bfeb82f06f43d3dc", "text": "Releases Jiffys that have been vested for an account .", "title": "", "metadata": ""}
{"_id": "2beff39a0530e86bdcb228e424929bd6", "text": "Return the health of the citizens of a city .", "title": "", "metadata": ""}
{"_id": "f4ea9d42213678a616c352315ae3067c", "text": "Can only be called on Properties referecing a valid PropertyID .", "title": "", "metadata": ""}
{"_id": "ac7d56e6eddc1002a2070733dfb695fa", "text": "Get the state of the token upgrade .", "title": "", "metadata": ""}
{"_id": "51f1d5274aba69f7407f1ea97b3f80be", "text": "Transfer _value tokens from sender's account msg . sender .", "title": "", "metadata": ""}
{"_id": "b5b11c241c57b5dd1fc86d0eec3bfe9a", "text": "user is buying SVC .", "title": "", "metadata": ""}
{"_id": "205dc5da2b43814bc63f6e19ac7dd55d", "text": "Withdraw dev's cut .", "title": "", "metadata": ""}
{"_id": "5b2ac47a145d4c94cde70ff4839630a9", "text": "join the club ! make a deposit to another account if it exists or initialize a deposit for a new account .", "title": "", "metadata": ""}
{"_id": "20ad2eb7d29d1597d8588a3ea7d03d0f", "text": "Owner can sweep a successful funding to the fundWallet .", "title": "", "metadata": ""}
{"_id": "8ad03754327562169d2ba65438a37e60", "text": "Throws if crowdsale time is not started or finished .", "title": "", "metadata": ""}
{"_id": "19bd6b2a5555b549716d4b95dae0767b", "text": "Function with this modifier can be called only by one of owners .", "title": "", "metadata": ""}
{"_id": "8266f2933358a9920a881e2fe6519fd8", "text": "private funtions .", "title": "", "metadata": ""}
{"_id": "f0ac3c25a3adf2668ce9e76c6efe330c", "text": "Reads a bytes32 value from a byte array by copying 32 bytes from bts starting at the provided startIndex .", "title": "", "metadata": ""}
{"_id": "f2e4591ed4b315d7a0362e2ad326be20", "text": "Manual burn tokens from specified address .", "title": "", "metadata": ""}
{"_id": "501f43fa742b0a9f4b8139bcc25bdb00", "text": "Pay affiliate to address .", "title": "", "metadata": ""}
{"_id": "66db94d3ae7220ee851e602f25b0e219", "text": "admins and games may add players , and players cannot be removed .", "title": "", "metadata": ""}
{"_id": "0ca438307e6e6a5b199ffc3833e645d3", "text": "This function can be called by the contract owner ( 24 hours after the last game ) if the game needs to be reset .", "title": "", "metadata": ""}
{"_id": "551b37aac8200e1df8cfb20097f59c04", "text": "Generate a hash from the provided plaintext .", "title": "", "metadata": ""}
{"_id": "bf4993bb9998206c6ee7034c34cbe0d1", "text": "get the selling price of card based on slab .", "title": "", "metadata": ""}
{"_id": "ef2a5545bb39dcd6c86f4992b22af06d", "text": "Mitigating ERC20 short address attacks ( http : / / vessenes . com / the-erc20 - short-address - attack-explained / ) .", "title": "", "metadata": ""}
{"_id": "1b7853a2b0a1cdaa3c1e8fab1e59e9db", "text": "Recover the address associated with the public key that signed the provided signature .", "title": "", "metadata": ""}
{"_id": "bd31eed528d91cc1e09b3fb7aaa6ecd5", "text": "Set the address of the hero token contract .", "title": "", "metadata": ""}
{"_id": "6139fbd13e4365520bdf742eb604e53f", "text": "adds msg . sender .", "title": "", "metadata": ""}
{"_id": "5fc8bc5b69bdc688ffe2539cf61b0cc1", "text": "control funcitons only the owner may call them .", "title": "", "metadata": ""}
{"_id": "495ae8a11910cb6e468e64fd523609df", "text": "Initialize the sale conditions .", "title": "", "metadata": ""}
{"_id": "8f930558a3063182ad158b9920c89e68", "text": "Transfers ownership provided that a valid address is given .", "title": "", "metadata": ""}
{"_id": "737419f565f2f18b6016d466953cceff", "text": "Internal function used for calculating ICO discount percentage depending on levels .", "title": "", "metadata": ""}
{"_id": "4ebc1eaf4e140fe1dc8510b70f1752e1", "text": "The owner manually starts the crowdsale at a pre-determined time .", "title": "", "metadata": ""}
{"_id": "109e3e75942ccec407e05fa0df7b3d1c", "text": "For paused redemption .", "title": "", "metadata": ""}
{"_id": "ab207c65c567c3720f5ea38c846050ae", "text": "Returns votes given by user .", "title": "", "metadata": ""}
{"_id": "6276fecbc90d9789f4dfa1a8c7278e00", "text": "Retrieve the buy tarif of any single address .", "title": "", "metadata": ""}
{"_id": "e6f6784deff9c046a42d24012fdb0b4b", "text": "Close a bet and withdraw unused fund .", "title": "", "metadata": ""}
{"_id": "3055e87fc49257791f143cddc7943272", "text": "Allows to figure out the amount of known token holders .", "title": "", "metadata": ""}
{"_id": "591fc0926974edfffd262bb862f5e623", "text": "Sell tokens during pre-ICO .", "title": "", "metadata": ""}
{"_id": "1b82d0157db70cf4757e7e532dfe2233", "text": "transfer token all tokens to a contract address with additional data if the recipient is a contact .", "title": "", "metadata": ""}
{"_id": "1f33532ac793caca7520a6fe8345838d", "text": "identify this is ERC721 .", "title": "", "metadata": ""}
{"_id": "cf595a4bb58219da31578ac73f80ac28", "text": "Assigns ownership of a specific masterpiece to an address .", "title": "", "metadata": ""}
{"_id": "ab20a4031216e61452e894de21be20e5", "text": "Returns bonus for now .", "title": "", "metadata": ""}
{"_id": "4c5744499f674cfe437c6ec058cc2b0c", "text": "Checks if the reveal period is still active for the specified poll .", "title": "", "metadata": ""}
{"_id": "ba397c393b8af8a78829cfc3ee80db81", "text": "DEV - use this to add admins .", "title": "", "metadata": ""}
{"_id": "7d0e41b34490ff26984c8303bd94fab7", "text": "the values of the player's hands and the current card index .", "title": "", "metadata": ""}
{"_id": "c65745fbe637d6b82952146fbd2e4aa1", "text": "for example for conveting ALL tokens of user account to another tokens .", "title": "", "metadata": ""}
{"_id": "223593c864915dd22d5a512e1a16a999", "text": "Get the token balance of this contract and burns all tokens .", "title": "", "metadata": ""}
{"_id": "1b9f6aae1fbdf76f2f3f527d1f0fa115", "text": "require participant is whitelist-authorized .", "title": "", "metadata": ""}
{"_id": "167767a47046cd1c6a4b3ade88bc5306", "text": "Checks whether an incoming transaction from the buyTokens function is valid or not .", "title": "", "metadata": ""}
{"_id": "1c8b1bca654d8b81b4e1175ed547a960", "text": "change tour freezing time for megacandy .", "title": "", "metadata": ""}
{"_id": "6088f81e92b52f208f8265ff4ea40d7b", "text": "Simple for now because params are not optional .", "title": "", "metadata": ""}
{"_id": "98772ccb2607620b9cd46f0886bbd67d", "text": "Gets the lockuptime of the specified address .", "title": "", "metadata": ""}
{"_id": "088cb592472b7346cdff5531e448b1ab", "text": "Whitelist participant address per tier .", "title": "", "metadata": ""}
{"_id": "c6821a18e047be73ff6b45c89d96e25b", "text": "Process a payment using only reward TRVL Tokens .", "title": "", "metadata": ""}
{"_id": "847c16a15feb0f059bc80c75a20ad8d9", "text": "Distribute tokens sold during Pre-ICO .", "title": "", "metadata": ""}
{"_id": "c83477018981279ae74e544c089ae989", "text": "Transfer tokens to ico partners ( 60 ) .", "title": "", "metadata": ""}
{"_id": "464d88e6c073cf06b8a0b0253c37f2ee", "text": "Set base URL even on retirement .", "title": "", "metadata": ""}
{"_id": "04049a230d2c17e2f09b1f789f12ef39", "text": "update hardCap for sale .", "title": "", "metadata": ""}
{"_id": "b6b0868ae9e1dd91b12b9dcc7969c67b", "text": "Adds a new bet to the bet mapping , if bet does not exist yet .", "title": "", "metadata": ""}
{"_id": "5a74b125a6cb0f7dff3c38fe06fcb202", "text": "coins total reward begins at 200 and is cut in half every reward era ( as tokens are mined ) .", "title": "", "metadata": ""}
{"_id": "2dcc003d36634861a2d0351cebfec628", "text": "releases funds to beneficiary .", "title": "", "metadata": ""}
{"_id": "193a25af1c998ead37d01ac8267202f7", "text": "Returns ether and tokens to list of users .", "title": "", "metadata": ""}
{"_id": "623c0822d05ce521ed7f32fc6864c359", "text": "Sets an export fee of fee on address addr .", "title": "", "metadata": ""}
{"_id": "babd7726cb13be3bc84921d602265d95", "text": "Notice freezes the account to prevent target from sending and receiving tokens .", "title": "", "metadata": ""}
{"_id": "c63a3e371db35ac8aa8e2d4b9a77ea7a", "text": "transfers token amounts to other ICO platforms .", "title": "", "metadata": ""}
{"_id": "9184988571d783629d160362c63db3ac", "text": "Gets the total raised token supply .", "title": "", "metadata": ""}
{"_id": "72e0317247a2349c12aee00bbbca69df", "text": "transfer tokens to ppl accts ( window1-5 ) .", "title": "", "metadata": ""}
{"_id": "a34a748143ba8472e4f6b74f83fd56d0", "text": "subtract value from dividends .", "title": "", "metadata": ""}
{"_id": "7198a7352ae58bcf5d5455e45bf399d6", "text": "ERC827 Methods .", "title": "", "metadata": ""}
{"_id": "e5e08290157ba7b8b96329ed1cae5819", "text": "Checks if an address is frozen .", "title": "", "metadata": ""}
{"_id": "299c715d26974178043f60640ba5803b", "text": "If action was successful .", "title": "", "metadata": ""}
{"_id": "554439350c8984657fb46b84adeb677d", "text": "owner may withdraw funds after some period of time .", "title": "", "metadata": ""}
{"_id": "04f075613c22ee52defa4573b2756a7e", "text": "Internal check for whether an application name has been taken .", "title": "", "metadata": ""}
{"_id": "d5548ba6db5c9f16affcfdf3408df82c", "text": "Function allows for external access to number of accounts that are holding or once held Studio tokens .", "title": "", "metadata": ""}
{"_id": "1988753daf8cca62af58d068e0894306", "text": "Modifier that requires the trading to be live or allowed to bypass the freeze status .", "title": "", "metadata": ""}
{"_id": "de60bc04d80a0fd8e4dd1e7c4fac4df6", "text": "Access modifier for trusted contracts functionality .", "title": "", "metadata": ""}
{"_id": "d5279f01d7cf8bdba41a2cb2d2733c82", "text": "The authority of the manager can be transferred .", "title": "", "metadata": ""}
{"_id": "70ddd7eac69f113de7b0f298de6f29d1", "text": "ERC223 Functions .", "title": "", "metadata": ""}
{"_id": "8985d0638f5747d43d5d6e3117252532", "text": "fund puppets TROUBLESHOOT gas .", "title": "", "metadata": ""}
{"_id": "de45944ccc89ae0c4f3e69e223a84cab", "text": "get Gift metadata ( url ) from GiftLinks .", "title": "", "metadata": ""}
{"_id": "7031053df79206fe3acf8087070d57f7", "text": "sets the number of cards to the contract storage .", "title": "", "metadata": ""}
{"_id": "00dbec453bcdf904e2abbb993be2cafc", "text": "get asset specific information .", "title": "", "metadata": ""}
{"_id": "f34c40b9957c0271d9f1cdf9b24ee20c", "text": "Only the team is allowed to execute .", "title": "", "metadata": ""}
{"_id": "a1525e96d60da3b9b12075cf86428506", "text": "Calculate amount of Parsecs to grant for ETH contribution .", "title": "", "metadata": ""}
{"_id": "2e986236ca6671193f4c670d89f6f3dd", "text": "Trading limited - requires the first stage to have closed .", "title": "", "metadata": ""}
{"_id": "1545e3f84696a770e0c58ed66b6a06db", "text": "Raffle v3 .", "title": "", "metadata": ""}
{"_id": "4def25a22e6463783dcac96701671a48", "text": "Used when a new action is chosen but the kitty already knows it .", "title": "", "metadata": ""}
{"_id": "8201b1e58e3b51265bc8b7322b767055", "text": "Function to have a way to add business logic to your crowdsale when buying .", "title": "", "metadata": ""}
{"_id": "b88f0a6bc919cf35d5f8f5dfb2f24b60", "text": "set rate .", "title": "", "metadata": ""}
{"_id": "27485f2ebde9851715ac4de59d1f7316", "text": "Allow user to sell maximum possible amount of metadollars , depend on ether amount on contract .", "title": "", "metadata": ""}
{"_id": "49de6ccaf7525b541f979387fb97e67f", "text": "vote for only sbi tokens owners .", "title": "", "metadata": ""}
{"_id": "47d6697329f7da44b552b1c0291c39c5", "text": "Makes ERC-20 token sellable .", "title": "", "metadata": ""}
{"_id": "5847cb7929c9fd44ee39e0615aa68530", "text": "openANX to add precommitment funding token balance before the crowdsale commences .", "title": "", "metadata": ""}
{"_id": "0574afdc05602e03573e91d1220686d0", "text": "Crowdfunding contract issues new tokens for address .", "title": "", "metadata": ""}
{"_id": "5784fb9a5b4d25b5791886a9c6516239", "text": "Changes beneficiary address .", "title": "", "metadata": ""}
{"_id": "91b141211be4ca5f30ce91d1c45929e1", "text": "This method is explained further in https : / / goo . gl / iaqxBa .", "title": "", "metadata": ""}
{"_id": "a3869d4be48d3be3fab6c1cb246ea354", "text": "Allows any user to get his eth refunded before the purchase is made .", "title": "", "metadata": ""}
{"_id": "b28f20959d7b529306d39fabbfdfeab1", "text": "Open / Close registration of new affiliates .", "title": "", "metadata": ""}
{"_id": "3b3431105157fafe8ad7be850ec2b828", "text": "Method for manually Locking fiunds .", "title": "", "metadata": ""}
{"_id": "7b1d586bdd829be4c425b9af6c2d868c", "text": "ApplicationEntity Contract requests to be linked .", "title": "", "metadata": ""}
{"_id": "0c1af03a61fd8cbafc39e96b3788bddd", "text": "gets the total value redemeed from a specific address , for a single global redemption event .", "title": "", "metadata": ""}
{"_id": "9ee139f8f51d8b9edaf5ac840f192b50", "text": "function grantPrivatePurchaserToken - Transfer Private Purchasers tokens .", "title": "", "metadata": ""}
{"_id": "225a832ed87127dee530eb45b59847c4", "text": "sends the player the corresponding prizes .", "title": "", "metadata": ""}
{"_id": "efc258eb8ff25f7c1f657f8b58456ab6", "text": "Function using Etheraffle's birthday to calculate the week number since then .", "title": "", "metadata": ""}
{"_id": "fd4ecbf39f3bd02e3a2826176e14b9d7", "text": "Return max entries .", "title": "", "metadata": ""}
{"_id": "c472ff9bede5948a749f7e88603c8969", "text": "Destroy Owner .", "title": "", "metadata": ""}
{"_id": "4fae1b0e2837955b845febc8f428c05b", "text": "TODO : this is only for first pilots to avoid funds stuck in contract due to bugs .", "title": "", "metadata": ""}
{"_id": "c2b2392b7a214485b47848a3a692d755", "text": "This modifier performs the conditional transitions and checks that the function to be executed is allowed in the current State .", "title": "", "metadata": ""}
{"_id": "dcc5a40bb1dd1ec9d6fc1c9125722f1d", "text": "Setting the clearJackpotParticipantsAfterDistribution value , allowed only for owner .", "title": "", "metadata": ""}
{"_id": "f11fa42a3e0efe4b662079d265ea585e", "text": "Helper function .", "title": "", "metadata": ""}
{"_id": "6e07e42792a0daadee77a521f55327f0", "text": "Transfers amount from msg . sender .", "title": "", "metadata": ""}
{"_id": "ebab7eda10d51a9cb658098b06cb74b6", "text": "Assigns the acceptor to the order ( when client initiates order ) .", "title": "", "metadata": ""}
{"_id": "d27677d3477fa38a1381264ebca61eb7", "text": "close the raise .", "title": "", "metadata": ""}
{"_id": "6ce8baa57643a799e4bdf272f499e308", "text": "for ERC20 .", "title": "", "metadata": ""}
{"_id": "98e50a37d8ddf77a638dd99f2d0d2427", "text": "Batch detach function .", "title": "", "metadata": ""}
{"_id": "1713fb46fc808ecb6be85ffd54663d05", "text": "Returns the remaining possibled sale amount for a given wallet .", "title": "", "metadata": ""}
{"_id": "6a2ab47bcc0fb0a04afcbf5b4f393c70", "text": "Modifier to make a function callable only when the contract is upgrading .", "title": "", "metadata": ""}
{"_id": "f926a3c357721b7ff287c91c26900dbf", "text": "OptionToken functions .", "title": "", "metadata": ""}
{"_id": "aba9cc2a22786c656d58b9be60ee2e2e", "text": "Return existential state of a node .", "title": "", "metadata": ""}
{"_id": "78b4a0e3281b1c9df3e1ead0947787b5", "text": "called by the owner to stop the ICO .", "title": "", "metadata": ""}
{"_id": "e9eac13d8986e625a218efc6827c9232", "text": "fucntion to change the max cap usd .", "title": "", "metadata": ""}
{"_id": "620f79bcb2aad8fd0877f0ff03c2091f", "text": "Mints the below-mentioned amount of tokens allocated to reward the Vibeo community .", "title": "", "metadata": ""}
{"_id": "e5ce1e0d262782b6602934516a584d7e", "text": "Function to remove owner from mapping 'owners' , can be call only by owner .", "title": "", "metadata": ""}
{"_id": "74f1cbb221d399afdd889ea3af56b4d4", "text": "Function to allow spender to spend token on owners behalf .", "title": "", "metadata": ""}
{"_id": "231b6122bf90166222970d12067ddc6b", "text": "Pricing tells if this is a presale purchase or not .", "title": "", "metadata": ""}
{"_id": "beaedfc65576b4f81f11185ad7035bbe", "text": "Method for setting up contribution period .", "title": "", "metadata": ""}
{"_id": "b76cb5cf37e939e4fea380ee46ffc082", "text": "true if the transfer is done .", "title": "", "metadata": ""}
{"_id": "0a4620489f40c020f05c38da8455d420", "text": "allows anyone to check the unlocked and locked token balance of a recipient .", "title": "", "metadata": ""}
{"_id": "be4be7124cbf2736af98296301a3d326", "text": "release the locked tokens owned by an account , which are the tokens that belong to this account before being locked .", "title": "", "metadata": ""}
{"_id": "fdefe1de4f535d4fbec2b736be709474", "text": "Send _amount amount of tokens to address _to .", "title": "", "metadata": ""}
{"_id": "1ff8d62f3458e0a09c74fe141bc062a9", "text": "Receives a donation in Ether .", "title": "", "metadata": ""}
{"_id": "24bc5809667f80571939502e5c66fb1c", "text": "Creates a new user entity and a connection in one transaction .", "title": "", "metadata": ""}
{"_id": "6b907966bcfabb683048dffbe52149d4", "text": "Satart PreSale .", "title": "", "metadata": ""}
{"_id": "e712e96bb98ba787e9f6bd5430ea9498", "text": "Sets District0xNetworkToken contract .", "title": "", "metadata": ""}
{"_id": "3408a37caf08ed3e4503f8a42ae84707", "text": "start new period .", "title": "", "metadata": ""}
{"_id": "85d62b326ad5ea2a13ee30d91c8a9528", "text": "Returns the rate of wei per token at the present time .", "title": "", "metadata": ""}
{"_id": "b81b787317dc4b9c6b2d55c256bfeb94", "text": "The associated address .", "title": "", "metadata": ""}
{"_id": "f49f8f743b973cf3cb8cae80b2c270ad", "text": "Emergency function to pause Crowdsale .", "title": "", "metadata": ""}
{"_id": "894bc5835d2b4d5ddc4e6c04fae47def", "text": "To allow clients to verify contestants .", "title": "", "metadata": ""}
{"_id": "23dd931a334a743bf12e7ca55a0d038d", "text": "withdraw the contributed funds if the ICO has ended and the goal has not been reached .", "title": "", "metadata": ""}
{"_id": "02cfe31731cd9d7f0d8f8a35b4f1892d", "text": "Returns number of confirmations of a transaction .", "title": "", "metadata": ""}
{"_id": "ac4432c42714cecc439e3f96f4191843", "text": "Allows the owner to unpause the ICO only when the ICO contract has been paused .", "title": "", "metadata": ""}
{"_id": "8444f37b3505452a20ef108cf7835333", "text": "health , attack , armor , speed .", "title": "", "metadata": ""}
{"_id": "a09c2de317ff729fdf166d5c1c8af7f3", "text": "Allows Team to adjust basePrice so price of the token has correct correlation to dollar .", "title": "", "metadata": ""}
{"_id": "b391f295f12ac2c8d1abb8c11243370d", "text": "Get the price of the token .", "title": "", "metadata": ""}
{"_id": "5c840b45611bdae7e1dbcaa0cd1f28c8", "text": "by surrendering half the bet is returned to the player .", "title": "", "metadata": ""}
{"_id": "309942ee432250573c07b86226c3644b", "text": "Set up end date .", "title": "", "metadata": ""}
{"_id": "a532440615591c29aee906487593f216", "text": "Get the number of sold tokens .", "title": "", "metadata": ""}
{"_id": "161723e57a4689372afa7203e2f94b5b", "text": "returns uint representing 0 . 5 .", "title": "", "metadata": ""}
{"_id": "a62cad88aa21345eb11afd4a5b3e09d5", "text": "Send some of your tokens to a given address .", "title": "", "metadata": ""}
{"_id": "69c4b3e5fd616a37590a838fbe767d1a", "text": "Revokes the lock for the provided _beneficiary and _id .", "title": "", "metadata": ""}
{"_id": "b240a8039d0ded11e39fcab302616a6a", "text": "we can tune lambos .", "title": "", "metadata": ""}
{"_id": "58f1e6977979917d1fa8d350bfb82a5b", "text": "determines today's index .", "title": "", "metadata": ""}
{"_id": "46256c14f8352bdd1e7498ea00d8ce80", "text": "Cancels auction when contract is on pause .", "title": "", "metadata": ""}
{"_id": "cc2642bfe3eb66cbbf252042d3eba636", "text": "overriding from crowdsale . sol .", "title": "", "metadata": ""}
{"_id": "3591bc2dcbe68fc2bd91a065d0b8844a", "text": "Calculates an integer approximation of ( _baseN / _baseD ) ( _expN / _expD ) * 2 _precision .", "title": "", "metadata": ""}
{"_id": "792a0ed63570444c4f7aaad143f2658e", "text": "Begin of external sales .", "title": "", "metadata": ""}
{"_id": "70b9185b7dc5eb1aba7f08a91e67066a", "text": "Close main sale and move unsold tokens to playersReserve wallet .", "title": "", "metadata": ""}
{"_id": "8f92d1a1665a8daac448bbc7af7b2b65", "text": "Returns the current price of the token for the crowdsale .", "title": "", "metadata": ""}
{"_id": "3099f3c3a719c1a51cc759806a8914ee", "text": "send param _unSoldTokens to all Investor base on their share .", "title": "", "metadata": ""}
{"_id": "5ec4dbe00bf4a36f6afb88886681babc", "text": "Gets the unlocked time of the specified address .", "title": "", "metadata": ""}
{"_id": "ed6ada3d600f448fae8c198af52cee25", "text": "the values of the player's hands .", "title": "", "metadata": ""}
{"_id": "be2fcf361f53c032ffe5d2742195030b", "text": "call has been separated into its own function in order to take advantage of the Solidity's code generator to produce a loop that copies tx . data .", "title": "", "metadata": ""}
{"_id": "22731593bc5b8869f80e3a05d4d582c7", "text": "Called by any Operator role to pause the contract .", "title": "", "metadata": ""}
{"_id": "fe54fe974671dfceb75af3307c1f3e9f", "text": "Withdraws sale commission , CFO-only functionality .", "title": "", "metadata": ""}
{"_id": "9a7ee7f46ad95f76d416537c5f469707", "text": "Tracks a reverse stock split .", "title": "", "metadata": ""}
{"_id": "e768f541569c0ce0a98214735620808c", "text": "Director can close the crowdsale .", "title": "", "metadata": ""}
{"_id": "039b1daefac466d1a6ae35bd2aff9ba5", "text": "this one just runs a set length loops that OOG's ( and . .", "title": "", "metadata": ""}
{"_id": "6ade822102f6494b1c571c584482d859", "text": "Finalize crowdsale and allocate tokens to multisig and vault .", "title": "", "metadata": ""}
{"_id": "b4da50c1d1e0b74121a91988d5ecedd6", "text": "for the presale the buyer gets 1 cloud for every 10 finney they SEND 1eur 1000 clouds 1eth 300000 .", "title": "", "metadata": ""}
{"_id": "cf27a49cad821dd961d5a88f600b87f1", "text": "Appeal a ruling .", "title": "", "metadata": ""}
{"_id": "685ccf20b340cb58fc46ed51e11bc8ec", "text": "Will only return if this address exists in the mapping _clients .", "title": "", "metadata": ""}
{"_id": "3f77b3e715c131aea4222b9db07fd55f", "text": "Submit a location key XOR'd with a password for later verification .", "title": "", "metadata": ""}
{"_id": "62ba7a83482242755f2bb1b1bce25060", "text": "This function moves a proposal to a final state of RejectedByResourceSetCreator' and sends tokens to the destinations described by the proposal's transfers .", "title": "", "metadata": ""}
{"_id": "f1a2538b8af1ec63c1b52b4aa6f730ed", "text": "Returns whether there is code in the target address .", "title": "", "metadata": ""}
{"_id": "5111bfe09928fd7646b696604a21f389", "text": "Gets the bytes32 commitHash property of target poll .", "title": "", "metadata": ""}
{"_id": "f1cc9fcde59e71505885d34ecd487ac9", "text": "Locked specified amount of tokens for specified wallet .", "title": "", "metadata": ""}
{"_id": "a55fe982dc829b4168af3020e26f6596", "text": "Modifier to make a function callable only when the transfer is enabled .", "title": "", "metadata": ""}
{"_id": "298463400daafc4ac60d49aab78e56d2", "text": "set default empty settings .", "title": "", "metadata": ""}
{"_id": "519c8fb2067ede898ccfd00a0a78a2d0", "text": "Gets whether or not the specified address is currently an account reader .", "title": "", "metadata": ""}
{"_id": "4c18b0d617fbdc8217a654fac2028853", "text": "Release the amount on the time .", "title": "", "metadata": ""}
{"_id": "4f3d1bc5471f4de1179b3315e225ece1", "text": "Returns pending bonded stake for a delegator from its lastClaimRound through an end round .", "title": "", "metadata": ""}
{"_id": "312c366ddbf5df9af99113cf11ea0fd9", "text": "This must be called only once after the owner of the presale contract has been updated to this contract .", "title": "", "metadata": ""}
{"_id": "34f510665c609ded56857691cb314559", "text": "update balances so they display in ethereum-wallet .", "title": "", "metadata": ""}
{"_id": "42ada0767f7f7f21e4944124c8ca3042", "text": "Changes multisig address .", "title": "", "metadata": ""}
{"_id": "6ebb74c508887a2a9967a255a147d373", "text": "Put a Dog up for auction to be sire .", "title": "", "metadata": ""}
{"_id": "d4a520a8bd61bb662b857016c64b975c", "text": "Purchase show from previous owner .", "title": "", "metadata": ""}
{"_id": "d5be179ae96e048d21e61f256ae4a158", "text": "Check service ee ( in BP ) for a given provider .", "title": "", "metadata": ""}
{"_id": "db9e2b2b2d6cf6a2e5e4ccc388488b55", "text": "Creates a child contract that can only be destroyed by this contract .", "title": "", "metadata": ""}
{"_id": "89ae36714265d03b86a1b6de0de904ac", "text": "Re-registers an already existing contributor .", "title": "", "metadata": ""}
{"_id": "3984715142a8d16fb0fa5bc59995abad", "text": "Similar to grantVestedTokens but minting tokens instead of transferring .", "title": "", "metadata": ""}
{"_id": "0272c97d6b9df8295341d28da641f75e", "text": "Grant another address the right to transfer a specific element via transferFrom ( ) .", "title": "", "metadata": ""}
{"_id": "bcbf21c61bd932db4144f01ae030d80c", "text": "Return all the funds to the buyers .", "title": "", "metadata": ""}
{"_id": "6da7c3cf992109a2f641eb196c00fb5a", "text": "returns the balance of a cause , selected participant , owner , or participant ( refund ) .", "title": "", "metadata": ""}
{"_id": "512af52c823176ded1535a0385594724", "text": "Only one stage at a time can be minted .", "title": "", "metadata": ""}
{"_id": "969e46d3d07bfffc2d871a50fd0ddbcb", "text": "Returns all the relevant information about a specific EtherDog .", "title": "", "metadata": ""}
{"_id": "b195c35c17a1a24bdcc4092fdb5b52ef", "text": "Add a new investor to the whitelist .", "title": "", "metadata": ""}
{"_id": "0141a29923e04d8befcc66db616e0e48", "text": "Function to release tokens already vested of the transaction sender .", "title": "", "metadata": ""}
{"_id": "8057eb0f851bb22e476801ea38d04fe9", "text": "Internal function used to check the type of fund raise currency .", "title": "", "metadata": ""}
{"_id": "3357d61824a159bc28efb6e80b6f5cfc", "text": "import preICO customers from 0x516130856e743090af9d7fd95d6fc94c8743a4e1 .", "title": "", "metadata": ""}
{"_id": "23659c124e811425062abbfd830f5ea5", "text": "Mints new tokens .", "title": "", "metadata": ""}
{"_id": "ff48db97139f51ee6c2ac680224999b5", "text": "return the expected ETH for MET .", "title": "", "metadata": ""}
{"_id": "74fbbba3df0a85771945c2640777c2fb", "text": "This function distincts transaction signer from transaction executor .", "title": "", "metadata": ""}
{"_id": "673570f9302fede3b9a4cb6a877bd671", "text": "Set current ICO prices in wei for one token .", "title": "", "metadata": ""}
{"_id": "d18520720517ad955b50bcceddb585c1", "text": "Add a new insurance for the given flight .", "title": "", "metadata": ""}
{"_id": "ae27656cd4fd0982d46dc5ac3ac8d118", "text": "ADMIN Functions .", "title": "", "metadata": ""}
{"_id": "09211fc51ddc0d56d56a75dcec026288", "text": "updates the maximum deposit .", "title": "", "metadata": ""}
{"_id": "28b709438808721c7a6f26ab65316a44", "text": "Function to get number of locks for an address .", "title": "", "metadata": ""}
{"_id": "8f767dc994773203299d3c4e8b4e41b9", "text": "Transfers tokens held by timelock to all beneficiaries within the provided range .", "title": "", "metadata": ""}
{"_id": "8eef1f65794f72aa8b86d989af19a1a8", "text": "User exchange for team cup .", "title": "", "metadata": ""}
{"_id": "38d7ce62cca6ff2dd5de2db7b0709bea", "text": "Only called from above .", "title": "", "metadata": ""}
{"_id": "fa73fd4ef889819960d95d0462fe03da", "text": "Internal burn function , only callable by team .", "title": "", "metadata": ""}
{"_id": "f95a3847ff8b419d119a3a1fdcbeabcc", "text": "For cases where token are mistakenly sent / airdrops .", "title": "", "metadata": ""}
{"_id": "85156cadf6bf0f13d429eebaad885925", "text": "Functions to convert GZR to Gizer items .", "title": "", "metadata": ""}
{"_id": "95d155bf335c06e405f5ab518a2b6185", "text": "whitelist address .", "title": "", "metadata": ""}
{"_id": "e5435391b5a379fc58521c1a9897c06f", "text": "cancel an subscription given by subId ( a graceful version ) .", "title": "", "metadata": ""}
{"_id": "8a2db81c126e49504b2180438346b337", "text": "Permanent platinum level .", "title": "", "metadata": ""}
{"_id": "d6f9327b567556032010470b788d1dc4", "text": "Input sha256 hash string to check .", "title": "", "metadata": ""}
{"_id": "2490e3a3fe6e5e4e0e664025bdd7d9b7", "text": "Gets the projected jackpot .", "title": "", "metadata": ""}
{"_id": "08e879f6f5753de849aa3a78f4fea1d1", "text": "Overriding payment functions to take control over the logic .", "title": "", "metadata": ""}
{"_id": "ae15c81d34c27b695195b51cbb31a68a", "text": "Updates registration status for multiple addresses for participation .", "title": "", "metadata": ""}
{"_id": "fe5f99d7805fc5593b4de85bfc7c5ff5", "text": "Returns index and ok for the first occurrence starting from index 0 .", "title": "", "metadata": ""}
{"_id": "e6c72faf3217b5c4fa32b328e1896fa1", "text": "Withdraw all tokens to contributing members .", "title": "", "metadata": ""}
{"_id": "18a5ee42a9e0ae9e753099cb1b115d7e", "text": "Withdraw Mana ( only owner ) .", "title": "", "metadata": ""}
{"_id": "e7dad457a9990cf6d4d7d4c36d3e72a3", "text": "Checks if a given address currently has transferApproval for a particular Puppy .", "title": "", "metadata": ""}
{"_id": "ef862d006e97539fabbd9383b84cd20b", "text": "function to let admin claim tokens on behalf users .", "title": "", "metadata": ""}
{"_id": "796b3dbc7e677c65ab82c081ac930010", "text": "Thaw an account - Un-freeze a previously frozen account .", "title": "", "metadata": ""}
{"_id": "bc174d1c6e640126539ad95642c71be8", "text": "activate the sale .", "title": "", "metadata": ""}
{"_id": "35adac92f3ffe1bc56b9b3440c287dd0", "text": "cost in wei for that many tokens .", "title": "", "metadata": ""}
{"_id": "178838102cb9964605c5695dae024e06", "text": "Liquifies tokens to ethereum .", "title": "", "metadata": ""}
{"_id": "80bd488f63e1e892c0a39975fa7cfede", "text": "transfer pet function .", "title": "", "metadata": ""}
{"_id": "ae30485993b1796c165b130322bf932f", "text": "cancel an adoption offer .", "title": "", "metadata": ""}
{"_id": "683a142780277246f7f02742b51e5431", "text": "For bounty .", "title": "", "metadata": ""}
{"_id": "945cc87feb994c51e853740d3ba6983b", "text": "Buyer sign .", "title": "", "metadata": ""}
{"_id": "b2720c554433b406177c22a3f20cd19c", "text": "allows contract owner to mint tokens for presale or non-ETH contributions .", "title": "", "metadata": ""}
{"_id": "052717f7ad6d1dac22c7c8d25f7cb767", "text": "JSON functions .", "title": "", "metadata": ""}
{"_id": "cf99741237bcb5dfd4b6d21c490d0528", "text": "Called by owner when preico token cap has been reached .", "title": "", "metadata": ""}
{"_id": "e001a8a3dc60115cab77376a8f220acc", "text": "Transfer the _amount from msg . sender .", "title": "", "metadata": ""}
{"_id": "1f8cf8d041d5c93e62c091e122b2769b", "text": "Allows donators to withdraw the share of tokens they are entitled to .", "title": "", "metadata": ""}
{"_id": "3e88a30638a531af35b9989bc37c2ba1", "text": "The getter for owner contract variable .", "title": "", "metadata": ""}
{"_id": "007fb9ab974cb0d31e931a340db5576b", "text": "allows execution only for quick convreter .", "title": "", "metadata": ""}
{"_id": "9708d02ddb76669308790e2998161075", "text": "Make payment to refund loan .", "title": "", "metadata": ""}
{"_id": "d1a9fa98d974e4c59e89e95b98048a53", "text": "Returns the amount of tokens approved by the owner that can be - - - transferred to the spender's account .", "title": "", "metadata": ""}
{"_id": "19a35138d64c5fc91d31891b422784f2", "text": "Remove user from allocation list .", "title": "", "metadata": ""}
{"_id": "c877a708a7cde1186b46710b4dc49c84", "text": "getting token reward .", "title": "", "metadata": ""}
{"_id": "89665c4b5905ae8d2c2e5f9dc6cc1ee8", "text": "Throws if called by any account other than the ico .", "title": "", "metadata": ""}
{"_id": "d90e008a97c589e82c41f6f7eb1c70db", "text": "Returns the balance of a wallet .", "title": "", "metadata": ""}
{"_id": "8387cf688ff51cbc385b50c078447372", "text": "Transfers token owned by this contract to another address .", "title": "", "metadata": ""}
{"_id": "8843a29ddc2f2bac2d235e5f21a6ceeb", "text": "Allows owner to create tokens without ETH .", "title": "", "metadata": ""}
{"_id": "ed39bd630a7e483750eee7ed43a8e2b9", "text": "Returns the total amount that still to be released by the end of the duration .", "title": "", "metadata": ""}
{"_id": "8ecb0f85d28bdd88c3f66db8f1f855e3", "text": "Get the total contribution of an address .", "title": "", "metadata": ""}
{"_id": "f5bda043afa1eee50ecb84213ebc0b7f", "text": "Not officially ERC20 .", "title": "", "metadata": ""}
{"_id": "4a98e58d000cfb08916703346cf3d199", "text": "Check if buy is possible .", "title": "", "metadata": ""}
{"_id": "542d9376be431930e3740e8caa97c77a", "text": "Sets values of periods .", "title": "", "metadata": ""}
{"_id": "cee6b576023a0e98b5863cec325b50eb", "text": "Request outstanding ether balance from the target crowdsale .", "title": "", "metadata": ""}
{"_id": "50e7b0d2a7f7c2d2d3f3d666d7dbacb3", "text": "Only people with tokens .", "title": "", "metadata": ""}
{"_id": "705b9ff9d5d4a66c515b8ed726f4841c", "text": "Set active transcoder set for the current round .", "title": "", "metadata": ""}
{"_id": "dd322773061479b36406842bde86c8f8", "text": "Deposit , forward , refund .", "title": "", "metadata": ""}
{"_id": "2e178501671e2bb5cda075c700cb1a9f", "text": "returns the Token struct .", "title": "", "metadata": ""}
{"_id": "f0a81c17b3b9f00345d3b52e954c83eb", "text": "Add bounty for hunter .", "title": "", "metadata": ""}
{"_id": "c8db0a5ed3c4a2c247ad342e5dfceef6", "text": "burnToken used to burn the remianing token after the end of crowdsale it only be called by the crowdfund address only .", "title": "", "metadata": ""}
{"_id": "89554d2690bc97d547348046775ec8d4", "text": "Sets the contract to finalized .", "title": "", "metadata": ""}
{"_id": "7c7c086e2ffc876c1f43b9c667da886e", "text": "Unlock team member's tokens by transferring them to his address .", "title": "", "metadata": ""}
{"_id": "8036e5d730e0fbec70f90d8ad7cf5b04", "text": "invoke onTransfer function before actual transfer function is executed .", "title": "", "metadata": ""}
{"_id": "f9b62f15104018971e44319c7ccfc0c6", "text": "Set allowance for other address , Allows _spender to spend no more than _value tokens on your behalf .", "title": "", "metadata": ""}
{"_id": "07b66bb3007bd1918fa50a944f2bb900", "text": "Checks if a contract is behind an address .", "title": "", "metadata": ""}
{"_id": "b9876b2e017434706b9c1f8dbd869b57", "text": "Using an explicit getter allows for function overloading .", "title": "", "metadata": ""}
{"_id": "a3462bf02aeca5618d16c452e8e1172d", "text": "add transaction and returns its id .", "title": "", "metadata": ""}
{"_id": "21f910a9160c2bce5829280f44847848", "text": "update a casino game address in case of a new contract or a new casino game newAddress the new address of the game .", "title": "", "metadata": ""}
{"_id": "d72a705c07ab56294f3185fd6bec5d1b", "text": "admin can destroy this contract .", "title": "", "metadata": ""}
{"_id": "ff0854031e3dc21e4c573dcc506fa6f6", "text": "Adapted from https : / / github . com / kieranelby / KingOfTheEtherThrone / blob / master / contracts / KingOfTheEtherThrone . sol .", "title": "", "metadata": ""}
{"_id": "c18fe9aab9434ffb6ac804c79e865ef6", "text": "Gets the token holder at the specified index .", "title": "", "metadata": ""}
{"_id": "d74efaf1c988ab7a3f814ecc7e78a9a6", "text": "this function will never be used in production env .", "title": "", "metadata": ""}
{"_id": "a86ac78278a05ef3ccef10a7ce16fc6b", "text": "Function to access option option pool total max of tokens .", "title": "", "metadata": ""}
{"_id": "4004cdc115594ab47bfb4eb7dec4fc85", "text": "Set current Buy Commission price in wei .", "title": "", "metadata": ""}
{"_id": "eadebd106939a712837d8ed21240ebf7", "text": "getBountyArbiter ( ) : Returns the arbiter of the bounty .", "title": "", "metadata": ""}
{"_id": "391ae571a3a29d6c1ac91c165fbb285b", "text": "erc20 : public ( command ) : Send _value amount of tokens from address _from to address _to attn : total _value + transactionFee ! ! ! - account-balance _value + transactionFee .", "title": "", "metadata": ""}
{"_id": "dd718aaed2f00e0fb2508a2b465d15ec", "text": "handles purchase logic for both PLAT and ETH .", "title": "", "metadata": ""}
{"_id": "f3b7649bcd39f107ac7a9119307288cc", "text": "Set new address of sale agent contract .", "title": "", "metadata": ""}
{"_id": "c293466cdd171843278d0fe564408dad", "text": "sync an outstanding reward for a specified address .", "title": "", "metadata": ""}
{"_id": "5e5dab3656c86c0e4e3eaba866716819", "text": "modifier to check if sender has an account .", "title": "", "metadata": ""}
{"_id": "15f023fce30ff40cc899d1ee57680415", "text": "log_2 ( x / 2 128 ) * 2 128 .", "title": "", "metadata": ""}
{"_id": "cdbed9b4979939f7da66bf091e30d8c6", "text": "get info about certified partner .", "title": "", "metadata": ""}
{"_id": "83d484de39be58188eb9e5c756b79f51", "text": "For configurations .", "title": "", "metadata": ""}
{"_id": "e588a5cb2ab537528ef8e5739a01eb07", "text": "There have at least to be 25000000000 Loca tokens in balance to allow a valid donation .", "title": "", "metadata": ""}
{"_id": "de0362160026f1cfd8c275976cd07980", "text": "Calculates the amount of wei spent and number of tokens purchased from sale details .", "title": "", "metadata": ""}
{"_id": "ae6cdb09ca2973ca48e1c26b831fcf49", "text": "Gets the address for a provided namespace in the service locator .", "title": "", "metadata": ""}
{"_id": "4fa3dac94a5e9cf92db16a95e2a39e7e", "text": "Extends unlock date .", "title": "", "metadata": ""}
{"_id": "5b231e79f1eb6721d01844481af90e25", "text": "Mint a specific amount of tokens to owner .", "title": "", "metadata": ""}
{"_id": "8d8fc41bdcbac16bd9ff236238abc2ad", "text": "The manager can send short messages to investors to keep them updated .", "title": "", "metadata": ""}
{"_id": "cdb8f57fb2a7bc636e75de7fb84a401e", "text": "Check if the user is buying above the required minimum .", "title": "", "metadata": ""}
{"_id": "7361d5c074558d01e27c61dd91b9e3d1", "text": "Burn FUCKs by User .", "title": "", "metadata": ""}
{"_id": "efbddbb0c1e28b0bff0d48ee1d540aa9", "text": "Assigns ownership of a specific gameItem to an address .", "title": "", "metadata": ""}
{"_id": "162fbcaa286789c73fb618e3ff6f3d2d", "text": "Allow user to contribute to _tokenId token group .", "title": "", "metadata": ""}
{"_id": "61b0182b9ea2ce5ade827787652b4983", "text": "Allows the owner to peg Ether values .", "title": "", "metadata": ""}
{"_id": "19feae577a7763df93019c971fcf944d", "text": "Only Owner .", "title": "", "metadata": ""}
{"_id": "5837a52c4b337c5470b9efd23267cb88", "text": "An external method that get infomation of the fighter .", "title": "", "metadata": ""}
{"_id": "c56ce2a635fa649a284cb4068787a1ea", "text": "Total to invest in weis .", "title": "", "metadata": ""}
{"_id": "00463d4ddf40dd79196fd7634a482517", "text": "Sets new type .", "title": "", "metadata": ""}
{"_id": "82236d83029a2b17e3608483f5239cc8", "text": "returns the amount of keys you would get given an amount of eth .", "title": "", "metadata": ""}
{"_id": "7e0030463bdba71fc08836a5aae80a83", "text": "before transferableTime , only the token event contract and owner can transfer tokens .", "title": "", "metadata": ""}
{"_id": "4dffd499bc468a5a3b8343f6c7e3d067", "text": "Make a purchase from a privileged account .", "title": "", "metadata": ""}
{"_id": "1975e8bc282d306ed7db25be57d9fe3d", "text": "add a course to a user .", "title": "", "metadata": ""}
{"_id": "baea07d867ab6bf26ac1b99bc5a79d82", "text": "Emergency Stop or Contract .", "title": "", "metadata": ""}
{"_id": "ab8a289d9b26208bf4b76e6a231b198b", "text": "Pause the presale ( disables contributions and token claiming ) .", "title": "", "metadata": ""}
{"_id": "adcd380cb2e013654a6af4ca84cdb594", "text": "we need to update the oldOwner and newOwner balances each time a country is sold , their handicap and playerscore will also change .", "title": "", "metadata": ""}
{"_id": "1c35ec435a4249b8ec83fa385c90c7ea", "text": "Admin function to change zlots address if we need to .", "title": "", "metadata": ""}
{"_id": "01d1c06b549fdf19d24f2e059dc1ca27", "text": "Withdraw all profit to the owner .", "title": "", "metadata": ""}
{"_id": "503e5de6b5f51e4ba05eda14689a8ed7", "text": "Get the total count of tokens purchased .", "title": "", "metadata": ""}
{"_id": "e7c4ff368fa28cd7c9094f7ae72a0ec8", "text": "called by the owner to check the blacklist address .", "title": "", "metadata": ""}
{"_id": "b393e10273c4de6a8196076b71b134c6", "text": "Retrieve the next betting record .", "title": "", "metadata": ""}
{"_id": "bc05fa996e295aed3cf8d9514e7a0fd4", "text": "refunds participant if he recall their funds .", "title": "", "metadata": ""}
{"_id": "80fc5878ec5eaa7c49a03afe7ae7089d", "text": "market functions .", "title": "", "metadata": ""}
{"_id": "8ee82733ab5e02707298caf9493f2eb9", "text": "Renouncing to ownership will leave the contract without an owner .", "title": "", "metadata": ""}
{"_id": "dc5c2748a4a20e44aa2647f0a4828a07", "text": "Remove and shut down version of Melon .", "title": "", "metadata": ""}
{"_id": "23dae3784d434b368c184910f1006435", "text": "Check if the contract for the given address is managed .", "title": "", "metadata": ""}
{"_id": "271a02c4325cf0224655b5f134266bcd", "text": "Assigns the special transfer right , before transfers are enabled .", "title": "", "metadata": ""}
{"_id": "a430d9f6a36b749cee70759959cc9bf1", "text": "Token Contract burn .", "title": "", "metadata": ""}
{"_id": "59312eb9bcd503f95a5d805390e4d6c0", "text": "Only a shareholder who has delegated his vote can execute a function with this modifier .", "title": "", "metadata": ""}
{"_id": "1bee8d34f4963805d1b1423557d02e20", "text": "transaction sanity test .", "title": "", "metadata": ""}
{"_id": "24ff5dcf96d60ab8e238c2a3b9c2b062", "text": "Allows anyone to transfer the tokens .", "title": "", "metadata": ""}
{"_id": "53e2ec419bbb4211ce632607505e20eb", "text": "Returns bounds for value of log2 ( x ) given x .", "title": "", "metadata": ""}
{"_id": "3440b1ab5cf2fa341408df888fff3cea", "text": "Creates a new Grey with the given name .", "title": "", "metadata": ""}
{"_id": "8f1a07966aa66c45a640b4ae046dce5f", "text": "Allows an authorized casino wallet to assign some tokens held by the lending contract to the given addresses .", "title": "", "metadata": ""}
{"_id": "5a7892d4c21a7f58b2ed498cab1d2d0a", "text": "The owner can transfer ownership of own tiles to other users , as prizes in competitions .", "title": "", "metadata": ""}
{"_id": "15224384ba66376ebdf42d92bc1e9140", "text": "Return amount of tokens ( in EXTwei ) which can be purchased at the moment for given amount of ether ( in wei ) .", "title": "", "metadata": ""}
{"_id": "73d969a2ff43a9d39cb1e00b7a4c1003", "text": "get token price in cents depending on the current date .", "title": "", "metadata": ""}
{"_id": "90422cb9aed7dcc71134966c52acacde", "text": "Used by spender to transfer some one else's tokens .", "title": "", "metadata": ""}
{"_id": "8be7810e9225da759d0a7c8d53ea7572", "text": "only callable by gameContract after the full game is launched since all additional monsters after the promo / gen0 ones need to use this coreContract contract as well we have to prepare this core for our future updates where players can freely roam the world and hunt ChainMonsters thus generating more .", "title": "", "metadata": ""}
{"_id": "ca8a93cb32d9de278ec69a72e40c9391", "text": "Sets BOUT to Ether rate .", "title": "", "metadata": ""}
{"_id": "62833dd522724742df57ce4ee7eee931", "text": "public ( command ) : owner of a masternode can transfer the mn ( and the value in ETH ) to another wallet address .", "title": "", "metadata": ""}
{"_id": "7ce9c9c96da6b012651bb9d1cfc46b0e", "text": "Check if a blob exists .", "title": "", "metadata": ""}
{"_id": "58dabea213e64ff1876182cd04d10573", "text": "Event handler that initializes the token conversion .", "title": "", "metadata": ""}
{"_id": "5b52fa87daa39bb55dcc5a23677486d8", "text": "Internal approve for all functions that require an approve .", "title": "", "metadata": ""}
{"_id": "e1886bdc2352f8c8cb33a1bc41933fc3", "text": "Changes the owner role to provided address .", "title": "", "metadata": ""}
{"_id": "30a060dcafecbbc1a540039ef1bd86a1", "text": "However unlikely , it is possible that the number of tracked tokens reaches the point that would make the gas cost of transferring ZUR exceed the block gas limit .", "title": "", "metadata": ""}
{"_id": "43d68bce016d0b11af4bed00bce0b774", "text": "Calculates price and transfers purchase to owner .", "title": "", "metadata": ""}
{"_id": "dab71b37fabca879d9b8591746b16135", "text": "close the ICO .", "title": "", "metadata": ""}
{"_id": "e16517c78924c8a16e15be9e6e0dabef", "text": "only the beneficiary can use the method with this modifier .", "title": "", "metadata": ""}
{"_id": "1ea83a714eec5c4eef5b07d5b41a44b9", "text": "Sets a new arbitrator .", "title": "", "metadata": ""}
{"_id": "b80ef4efcd1f9ab30d78c1b4cae1756f", "text": "Sets lock for given allocation address .", "title": "", "metadata": ""}
{"_id": "161ec10a817abc402229017a6c8ddee7", "text": "tokens / ETH rate for given timestamp .", "title": "", "metadata": ""}
{"_id": "ac61c1ffed7d1d667f19776eab777f6e", "text": "Given a rect to purchase and the plot index , return the total price to be paid .", "title": "", "metadata": ""}
{"_id": "b281782e9be418d694f9d0530b1948d2", "text": "Count the pre-ICO investors total .", "title": "", "metadata": ""}
{"_id": "fbf12aac39379483b07505f5d401d7f4", "text": "Start new crowdsale round if already not started .", "title": "", "metadata": ""}
{"_id": "e5a340571d839df1c4417deb8301308e", "text": "Calculates current price rate ( how many MTRX you get for 1 ETH ) .", "title": "", "metadata": ""}
{"_id": "479868a1f493a85ee556c2cc6569db5e", "text": "Internal function to actually purchase the tokens .", "title": "", "metadata": ""}
{"_id": "15b05fcf56812b670f0ef53ea4431f69", "text": "Set Ambassadors .", "title": "", "metadata": ""}
{"_id": "15e60fd4018f1eff582327b90bcff30e", "text": "Management functions to facilitate future contract extensibility , unlocking of ( untradable ) referal bonus cards and contract ownership .", "title": "", "metadata": ""}
{"_id": "a1f66aed388c5d60681baef2ac9b88db", "text": "Get current number of players in the recently played players queue .", "title": "", "metadata": ""}
{"_id": "1a3acc3911401494389e59cf967a26c4", "text": "if active balance is not enought .", "title": "", "metadata": ""}
{"_id": "21eccc1cfb3f6d61fda6e2cb31d367f1", "text": "Overrides the base function .", "title": "", "metadata": ""}
{"_id": "1c720ba8b3175a3e2308c2eefebf1471", "text": "update winners list .", "title": "", "metadata": ""}
{"_id": "f8ce27f28ce7066e2bbb883275e2cd48", "text": "Calculates and applies bonuses and implements actual token transfer and events .", "title": "", "metadata": ""}
{"_id": "4f532602f3ada88db457ad5101902e06", "text": "help functions .", "title": "", "metadata": ""}
{"_id": "9d8efa7feae736638202c5d8e7c1f0ba", "text": "start sale .", "title": "", "metadata": ""}
{"_id": "f6006e965c070c366773c04c07c8b20b", "text": "withdraw interest by payee .", "title": "", "metadata": ""}
{"_id": "1a178fc370d5128e0f56440068bd27b9", "text": "sets the gas price to be used for oraclize quries in the contract .", "title": "", "metadata": ""}
{"_id": "d2e26cf26347e6c38f8cb2818d3db48d", "text": "To trigger payout three out of four administrators call this function , funds will be transferred right after verification of third signer call .", "title": "", "metadata": ""}
{"_id": "493fa930ca29f2c7a1e0de8b5881523e", "text": "transfer _value tokens to _to from msg . sender .", "title": "", "metadata": ""}
{"_id": "793d8e0fe429872820bd16d384a1873a", "text": "get the remain unrleased tokens of the locked stages of an account .", "title": "", "metadata": ""}
{"_id": "a2937d25792afd1ede661883aa9e1493", "text": "the total supply of DGX tokens and . 9999 .", "title": "", "metadata": ""}
{"_id": "fe7517d8a207e406a855dcfa124c71c3", "text": "Claim eth for address .", "title": "", "metadata": ""}
{"_id": "265ca7f48ca1f622568e91df60dc2644", "text": "Overrides parent by storing balances in timelock contract instead of issuing tokens right away .", "title": "", "metadata": ""}
{"_id": "3faf3b7a2f5fb7d209431424deebf8af", "text": "Allows the CFO to capture the balance of Bank contract .", "title": "", "metadata": ""}
{"_id": "7dfbfa8e266d800e1f88e8c7944d9897", "text": "Contribute ETH in exchange for tokens .", "title": "", "metadata": ""}
{"_id": "54f6cc1a98985b207477461662fa8f2d", "text": "Calculate token sell value .", "title": "", "metadata": ""}
{"_id": "762baca4f97926da0429010b9164452e", "text": "Returns the price for a specific block .", "title": "", "metadata": ""}
{"_id": "5473bbe96074b9bcdfc8b5497d3105be", "text": "Removes a sale from the list of open sales .", "title": "", "metadata": ""}
{"_id": "02d098af034d285c9456271082f33aa9", "text": "Called by the owner if the sale has ended .", "title": "", "metadata": ""}
{"_id": "436bb952aa841ff85afd1d686916f365", "text": "send erc20 token from this contract .", "title": "", "metadata": ""}
{"_id": "d9076b116c9fd6953de179c30e402502", "text": "sends ETH to CTE team .", "title": "", "metadata": ""}
{"_id": "284a24bf52a7aa7475f4b69ffc3dd307", "text": "Copies a slice to a new string .", "title": "", "metadata": ""}
{"_id": "0db4452c4e3821d1575d314918200d85", "text": "The withdraw of Tokens from the contract after the end of ICO .", "title": "", "metadata": ""}
{"_id": "e4edbdad945c6a3e81748af86e8f8b36", "text": "Allow crowdsale participant to get refunded .", "title": "", "metadata": ""}
{"_id": "2c3c014b455557509dc3f6d488743b96", "text": "The global maxExpArray is sorted in descending order , and therefore the following statements are equivalent : .", "title": "", "metadata": ""}
{"_id": "bf4b7528020ea0ee94dbfb5c6d09f1da", "text": "ERC20 functionality .", "title": "", "metadata": ""}
{"_id": "431831fb3d0b4a536611ba113017e2e7", "text": "Payout function .", "title": "", "metadata": ""}
{"_id": "bf0cee9b7778f9a35bf9a51e363b3c06", "text": "Modifier to make a function callable only when the contract is transferable .", "title": "", "metadata": ""}
{"_id": "143dcaaca2feb864c128a5e8ea28ae00", "text": "Edits data or active boolean of an entity that the msg sender is an owner of .", "title": "", "metadata": ""}
{"_id": "48c191454c86080d406f1124315f090a", "text": "Modifier for token Manager functions .", "title": "", "metadata": ""}
{"_id": "6b6d987cddcebc62478afb893ad9d462", "text": "The remaining amount of tokens that can be minted .", "title": "", "metadata": ""}
{"_id": "c0689327f8819e621b04f15862a281fa", "text": "some internal functions .", "title": "", "metadata": ""}
{"_id": "47fe64c7295686c0b0e9069ca955f709", "text": "BalanceOf function returns the total balance of the queried address .", "title": "", "metadata": ""}
{"_id": "f4a54ea91d9fa971cb0185738f8b0f27", "text": "Calculates how much ether one will receive in reward for burning tokens .", "title": "", "metadata": ""}
{"_id": "bf6bdaf09c2b795d2f5c8e772a99fa8b", "text": "Users can claim ETH by themselves if they want to in case of ETH failure .", "title": "", "metadata": ""}
{"_id": "c4fc4be1b30e8b279fd8e6b7f0b7e9c5", "text": "index of current tiers , if 100000 ( cannot use - 1 ) then round 0 finished and we need to move to re-sale .", "title": "", "metadata": ""}
{"_id": "b6efe032f5c851d4ebc974fce6017f93", "text": "To get the next price of a stamp .", "title": "", "metadata": ""}
{"_id": "7aeb75dcd38c804fbffb0507da61cd79", "text": "This function is a failsafe function in case a token holder wants to skip a payment , can only be applied to one deposit at a time and only affects the payment for the msg . sender .", "title": "", "metadata": ""}
{"_id": "fbea0ce1ba08aa582b61e969ad289051", "text": "true if CrowdSale event has ended .", "title": "", "metadata": ""}
{"_id": "57ad810ce8990e0aec6b6283a63d5cf2", "text": "Locking tokens .", "title": "", "metadata": ""}
{"_id": "29c51b70e65d8caf07688fc2b06a924c", "text": "Extend end time .", "title": "", "metadata": ""}
{"_id": "1fdf18fac2eaf7d330e8608a1cd51d55", "text": "Investors can pull their own dividends .", "title": "", "metadata": ""}
{"_id": "8970ae643d0a1116ff2298ee550f1c28", "text": "Expires contract if any expiration criteria is met ( declared as public function to allow direct manual call ) .", "title": "", "metadata": ""}
{"_id": "ce8b903c7c89a31305c6855855a58ec7", "text": "get all buyer .", "title": "", "metadata": ""}
{"_id": "b7aaf9af0f55f16894deb34cc74d8c5c", "text": "This is the actual transfer function in the token contract , it can .", "title": "", "metadata": ""}
{"_id": "7620ce0c599b877e3ecf71ecac1549ec", "text": "Sets mint authorised address .", "title": "", "metadata": ""}
{"_id": "9b691adc29cc604b4b9c2db960338108", "text": "Vip Agreement .", "title": "", "metadata": ""}
{"_id": "480c2ed677741b0123287b9a32bd5890", "text": "after close , anyone can cancel an offer .", "title": "", "metadata": ""}
{"_id": "4bc806dbcea8947df36cce984f156130", "text": "allows a noble to access his holdings .", "title": "", "metadata": ""}
{"_id": "cab9c9a368e4afb0a0ca68b66f671dab", "text": "Function to change vote cost , by default vote cost equals 1 Human token .", "title": "", "metadata": ""}
{"_id": "c72f1b85218e9c42f193343ada35c10d", "text": "rule enforcement and book-keeping for refunding requests .", "title": "", "metadata": ""}
{"_id": "d5fdb68ec5db3ed63bc93b95f2c653b3", "text": "Transfer accrued commission to verifier's address .", "title": "", "metadata": ""}
{"_id": "d72355d29d442af906b2c29b958a06aa", "text": "Admin features .", "title": "", "metadata": ""}
{"_id": "d1f37642576a5d839e82b1167122fe14", "text": "An internal method that creates a new monster and stores it .", "title": "", "metadata": ""}
{"_id": "033f7e33be552fd4cea05741229805e5", "text": "Change saleOn .", "title": "", "metadata": ""}
{"_id": "1a47a58d482d48a18f17fd05fe57c673", "text": "Throws if called with a null address .", "title": "", "metadata": ""}
{"_id": "3a74043e332d6fab34a5578eb9a381fe", "text": "ERC20 method to transfer token to a specified address .", "title": "", "metadata": ""}
{"_id": "6320d26ec205cec7d473d5b40c5f1b62", "text": "Change ico_finish date .", "title": "", "metadata": ""}
{"_id": "cfa0b29617ab2eb748ffb2c5e4e7f491", "text": "Delegatecall to contract with input data .", "title": "", "metadata": ""}
{"_id": "2e87014926e4ec79767746c7ec3d1854", "text": "Set the high water line / ceiling .", "title": "", "metadata": ""}
{"_id": "274a52bbc64afdd00ade974512da9993", "text": "produce amount of tokens to _owner .", "title": "", "metadata": ""}
{"_id": "e1d7c8be7a89c0a64791b616caa3fc0b", "text": "Get functions function to get the current state of the crowdsale .", "title": "", "metadata": ""}
{"_id": "9850d397fb6c4c8c80ad564928845b28", "text": "Returns the number of decimals the token uses .", "title": "", "metadata": ""}
{"_id": "1463fdb9f18525d4c4574bdf109a4180", "text": "Check if a sire has authorized breeding with this matron .", "title": "", "metadata": ""}
{"_id": "769edcb3455bb5180001281ecf251c2a", "text": "Creates a new gameItem with the given name .", "title": "", "metadata": ""}
{"_id": "183668d989da61303da44591a12b45ee", "text": "start in bytes , length in bytes .", "title": "", "metadata": ""}
{"_id": "fb1bb70f69470d160df6af85344018ac", "text": "Sets the status of an account as a transfer agent .", "title": "", "metadata": ""}
{"_id": "d49dade3c1b86b6433c45783d4cf2ff0", "text": "Get record JSON .", "title": "", "metadata": ""}
{"_id": "7b79a9de1fead449ec2bd6b489b5c66b", "text": "Ensures that only the dAppBridge system can call the function .", "title": "", "metadata": ""}
{"_id": "6cb7cc864896798f51313a4477cc64d2", "text": "This function is used to return one number randomly from participantList .", "title": "", "metadata": ""}
{"_id": "e5f14d24c617be82ea98285be7368e63", "text": "batch transfer for ERC20 token .", "title": "", "metadata": ""}
{"_id": "18c5112a5feb5d7452dadc31eaccd9fa", "text": "New round can start one week after last round .", "title": "", "metadata": ""}
{"_id": "cf49de43cce8fad2800d892a160e31a3", "text": "we want to be able to call outside contracts ( e . g .", "title": "", "metadata": ""}
{"_id": "5830860106693c8cf899b7e1da6c992c", "text": "Update start block Number for the crowdsale .", "title": "", "metadata": ""}
{"_id": "1159b15b9e88e4a057c2896960fc21d4", "text": "Allows the caller to purchase tokens for a specific beneficiary ( proxy purchase ) .", "title": "", "metadata": ""}
{"_id": "48ea91cee09fa69748a3e251b69adab2", "text": "Internal Transfer ( Called Internally ) .", "title": "", "metadata": ""}
{"_id": "587ebb83f27336636ba6c21422542cc6", "text": "Create a new GanToken with a id and attaches an owner .", "title": "", "metadata": ""}
{"_id": "4472bef6e565436d16f296a89c0416f1", "text": "param1 address The address of the owner .", "title": "", "metadata": ""}
{"_id": "f86de27455269a1d4a4d7dae22e8bdfb", "text": "Transfer wei from sender to 'to' .", "title": "", "metadata": ""}
{"_id": "74b0ba4e61ffaa0efff01b051fd91332", "text": "Return the current number of accounts who have reached each privileges .", "title": "", "metadata": ""}
{"_id": "01b823a2db36463c2e99376617fde030", "text": "Allows enabling of unblocking of transfer for all users .", "title": "", "metadata": ""}
{"_id": "bcd35d74e82db8424f9b8b912ba126a8", "text": "Opens smart contract for refunding .", "title": "", "metadata": ""}
{"_id": "9fbdc1166af51b38a7e334602e8f62e5", "text": "fallback function to set tokens if the exchange rate function was not called .", "title": "", "metadata": ""}
{"_id": "ce317caaa66f954a3a429930b3524057", "text": "Refund money if KYC / AML fails .", "title": "", "metadata": ""}
{"_id": "c2e94518b2c902ed9f9cc3fab6cbf35c", "text": "check if the contract has been closed .", "title": "", "metadata": ""}
{"_id": "7614f66b163b85f95feba05c4181be73", "text": "Returns the amount of tokens you can withdraw .", "title": "", "metadata": ""}
{"_id": "4ab0404f2a37f92db54a4dba33e631f1", "text": "score The cumulative score .", "title": "", "metadata": ""}
{"_id": "e9d960569b9fd5be8b116d5de45a00ec", "text": "For creating Person .", "title": "", "metadata": ""}
{"_id": "4b27a0c9b265a9ed5fca3da4520e78f6", "text": "Returns remaining of the properties of a match .", "title": "", "metadata": ""}
{"_id": "018a7fb1fc804f4a9e3b9b4aae060846", "text": "get address of management team .", "title": "", "metadata": ""}
{"_id": "50abbe8ad74aefc8bab85fb3c26e699c", "text": "in case refunds are needed , money can be returned to the contract and contract switched to mode refunding .", "title": "", "metadata": ""}
{"_id": "75e8c3dde365c19417074155a68eb014", "text": "change owner of weapon .", "title": "", "metadata": ""}
{"_id": "4143f2a094fac5d5295cfb32a0dd4bec", "text": "allocate a new account by setting alloc to true set the top to bytes of tokens to cur pay id to leave out of current round add holder index , bump the num accounts .", "title": "", "metadata": ""}
{"_id": "d112e0a45aee076eb5cd22410d65cb8f", "text": "Withdraws balance only to special hardcoded wallet ONLY WHEN contract is locked .", "title": "", "metadata": ""}
{"_id": "c54a3b3df02ee48e04904819f605e888", "text": "Returns transcoder with most stake in pool .", "title": "", "metadata": ""}
{"_id": "28ccf537169fc574898bc2fa65e7cee8", "text": "Returns all the valuable information about a specific token .", "title": "", "metadata": ""}
{"_id": "d84e96232c252dedfb33fe9677a73e56", "text": "Creates a new board in case no board was found for a player to register .", "title": "", "metadata": ""}
{"_id": "226d2cb5d0e7fd4acd229f79a1cb8ae9", "text": "Auction count at given the timestamp t .", "title": "", "metadata": ""}
{"_id": "197350dd7f3633ca0275e0c57d1b747e", "text": "check if address has enough BST to buy BSPT .", "title": "", "metadata": ""}
{"_id": "eed067d8f705c0c203019ec21eab6a64", "text": "ID is the transaction ID from Escrow's history .", "title": "", "metadata": ""}
{"_id": "3914fd6f0a597c966137ae1fee6f9b44", "text": "Transfers an ERC721 Token owned by this contract to another address .", "title": "", "metadata": ""}
{"_id": "38ffd7c9689c9d0c955abaa8d209b96e", "text": "Allows initiator to send funds to the winners which did not do these by themselves .", "title": "", "metadata": ""}
{"_id": "93f4d885c6af8cde3154e4bf508ed5db", "text": "used by vault cash back .", "title": "", "metadata": ""}
{"_id": "a6c33675484b21242796d239064fb0ce", "text": "Allows an olderOwner to add a new owner instantly .", "title": "", "metadata": ""}
{"_id": "4e242b7acf6a57b0065bbd21e52356ed", "text": "This is for getting the ether back to the contract owner's account .", "title": "", "metadata": ""}
{"_id": "8368805638210704bf40a390fa336fd6", "text": "if dosend is set to false then the calling function MUST send the fees subxtra is to handle the high LastBalanceWithdrawn bug this bug was caused because the Buyer actually gets a too high LastBalanceWithdrawn ; this is a minor bug and could be fixed by adding these funds to the contract ( which is usually not a large amount ) if the contract gets a lot of divs live then that should not be an issue because any new withdrawal will set it to a right value anyways it is fixed now .", "title": "", "metadata": ""}
{"_id": "3908910b13c4271387be4bb1498c67af", "text": "Execute a token transfer of the full balance from the forwarder token to the main wallet contract .", "title": "", "metadata": ""}
{"_id": "be55f974d2ae56183fc11147b750b94d", "text": "check if Auditor registered .", "title": "", "metadata": ""}
{"_id": "25cab940e729f8dc36c54b72dfbc5f09", "text": "Close the crowdsale and issue unsold tokens to owner address .", "title": "", "metadata": ""}
{"_id": "51c31e5568520783c7efc67113a136a1", "text": "Set eth / usd rate for the specified oraclize order .", "title": "", "metadata": ""}
{"_id": "394c2e0d12b51d0d9220e38a50b7e801", "text": "false if crowdsale event was ended .", "title": "", "metadata": ""}
{"_id": "5acb4ab31f45a58a326f0e72ef78f95f", "text": "Here you can set all the Vaults .", "title": "", "metadata": ""}
{"_id": "5bc571f8ed67c132c8dff3b798f8311d", "text": "Return player game info based on game index and player address totalInvested , totalValue , totalPaidOut .", "title": "", "metadata": ""}
{"_id": "548cff9c029e74028e63651880523b60", "text": "unsold tokens can be claimed by owner after sale ends .", "title": "", "metadata": ""}
{"_id": "67874a44e77de065959b90d25c0ef0ac", "text": "release tokens held by the contract to advisor .", "title": "", "metadata": ""}
{"_id": "fd6b741d394cac7d6e08a6db351f588e", "text": "todo public or internal ? master calls this when it uploads funds in order to differentiate betwen funds from master and 3rd party .", "title": "", "metadata": ""}
{"_id": "78b9cc2be0299f0759dfd03fde6b1273", "text": "overriding transfer method to include the onlyPayloadSize check modifier .", "title": "", "metadata": ""}
{"_id": "c75ba7c4505aae76a4505b720ef0a84a", "text": "the ability to transfer tokens is disabled .", "title": "", "metadata": ""}
{"_id": "4c1ec490f63984d337079e6240ad1caa", "text": "_safeERC20Transfer is used internally when transfer a quantity of ERC20 tokens .", "title": "", "metadata": ""}
{"_id": "cd54e1d6e072ce6aa794e541f6c0ce70", "text": "The current price for a single indivisible part of a token .", "title": "", "metadata": ""}
{"_id": "d1a1e7af591b76946ea60a3139eefd3e", "text": "Returns total amount of early purchases in CNY and bonuses .", "title": "", "metadata": ""}
{"_id": "c2f9155a34ca00618070068a50296500", "text": "Allows owner to set oracle to ignore all Oraclize pricce updates .", "title": "", "metadata": ""}
{"_id": "edc292f1434b0934c47d206cb059603b", "text": "Allows an owner to finalize migration once adminTimeLock time has passed .", "title": "", "metadata": ""}
{"_id": "c2bfb46384f6b6976d98e08ad1c6452d", "text": "initial coach and coach nums ; .", "title": "", "metadata": ""}
{"_id": "8f00b4503831830449f61903404f3043", "text": "Sends prize to the current winner using _gasLimit ( 0 is unlimited ) .", "title": "", "metadata": ""}
{"_id": "a3ab234d5d86755642783531569519f2", "text": "Sets the released flag to true which enables to transfer tokens after crowdsale is end .", "title": "", "metadata": ""}
{"_id": "f5b9e60359bb351b4bec7827ad20423e", "text": "Returns total amount of commission charged for a given canvas .", "title": "", "metadata": ""}
{"_id": "588f5a665aeb52fd5808f2e917082e78", "text": "Public functions .", "title": "", "metadata": ""}
{"_id": "a68ce1c15d82f9bc7884e546a17c8146", "text": "Allows to fund the contract with ETH .", "title": "", "metadata": ""}
{"_id": "5723e838d87c905be28570984e76854c", "text": "withdraw some of the Ether to owner .", "title": "", "metadata": ""}
{"_id": "45392806053b4607c1d3e506a6871abb", "text": "Concatenate two strings .", "title": "", "metadata": ""}
{"_id": "6ff2cd8d278782f23a327bfd660f6b4d", "text": "amount is denominated in tokenGet .", "title": "", "metadata": ""}
{"_id": "99db67ff0be07380934438239bb08828", "text": "Get hash for a revocation .", "title": "", "metadata": ""}
{"_id": "f4f08f2d10ff2788094659c5538987a7", "text": "Formula for calculating tokens from contributed ether .", "title": "", "metadata": ""}
{"_id": "2a1143c48c35e10a7b20dec54ed91b7f", "text": "Administrative function to REMOVE a token-time pair , should one fall out of use .", "title": "", "metadata": ""}
{"_id": "dee672d30e34435e61ca7ee9441cce18", "text": "change wallet for team vesting ( this make possible to set smart-contract address later ) .", "title": "", "metadata": ""}
{"_id": "58b395a357285e82306f40bb22272afa", "text": "Confirm that the two signature triplets ( v1 , r1 , s1 ) and ( v2 , r2 , s2 ) both authorize a spend of this contract's funds to the given destination address .", "title": "", "metadata": ""}
{"_id": "c8a5eca55e5de124e06095029cc64b49", "text": "Owner can change beneficiary address .", "title": "", "metadata": ""}
{"_id": "8033a50c6eb71984698eb58f9d8431ee", "text": "Burns tokens from one address .", "title": "", "metadata": ""}
{"_id": "daf0d93b83dbc49dff8cd27dc7f4a75b", "text": "Set validation data .", "title": "", "metadata": ""}
{"_id": "38f44269cf51aa7a99499d7817d4846a", "text": "Contract owner can withdraw unlocked owner funds .", "title": "", "metadata": ""}
{"_id": "6a702db14f93cca1b6ea3bed2b918e06", "text": "Withdraw ALC .", "title": "", "metadata": ""}
{"_id": "9cff142ce1b49b2a897ae9c2160fa6f9", "text": "p2p share listing , selling and buying .", "title": "", "metadata": ""}
{"_id": "eeef6bb1445c61dfdaf073e8dbc97e9a", "text": "Modifier for only whitelisted addresses .", "title": "", "metadata": ""}
{"_id": "3a62f090ea7399d394fb53a47618d2e3", "text": "Adds rate modifier checking not to add one with a start smaller than the previous .", "title": "", "metadata": ""}
{"_id": "37a96d2e77f4f65500d6a9dcabdca9c0", "text": "only for serious breaking bug .", "title": "", "metadata": ""}
{"_id": "8d4f8984032995fdc0a236120d4848f4", "text": "Alias of safeTransferFrom ( from , to , assetId , '' ) .", "title": "", "metadata": ""}
{"_id": "2cd83b2e7542ace7d8d4fbd1b2d3f04f", "text": "Update the global ether cap .", "title": "", "metadata": ""}
{"_id": "a2ab14a444aa3da836b29b6fd6924a2e", "text": "ERC20 interface : transfer _value new tokens from _from to _to .", "title": "", "metadata": ""}
{"_id": "fd28a22ed2dcd120250015933b4a9f36", "text": "this function always src or dest are ether .", "title": "", "metadata": ""}
{"_id": "8928f0577c76816ae05811f14e0f39b2", "text": "This function creates a new game .", "title": "", "metadata": ""}
{"_id": "db164f380a8e9128df1e4ea061238185", "text": "An internal method that creates a new property and stores it .", "title": "", "metadata": ""}
{"_id": "8522f276aa70fe4ac0da1bd1512ec3ac", "text": "Function to finish ICO .", "title": "", "metadata": ""}
{"_id": "a689064e4a74b589a55fc4da955c5568", "text": "Function to change the price of the token .", "title": "", "metadata": ""}
{"_id": "ca86cb55ed160d300afd4c9909b4c341", "text": "Refund to specific address .", "title": "", "metadata": ""}
{"_id": "559a8fe1fbf011073566a9474b52fd0f", "text": "Calculates current token price .", "title": "", "metadata": ""}
{"_id": "b048b5c25292580f9a0eb5e98943a438", "text": "event InterestPayed ( address indexed owner , uint256 interestPayed ) ; erc20 : tramsferFrom : : Allow _spender to withdraw from your account , multiple times , up to the _value amount .", "title": "", "metadata": ""}
{"_id": "7549f75603255681fa60d6340b63a245", "text": "transfers an amount from the contract balance to the owner's wallet .", "title": "", "metadata": ""}
{"_id": "0e8e6ce9212fdfc293091ff4156aa4c5", "text": "Function modifier to put limits on how values can be set .", "title": "", "metadata": ""}
{"_id": "90919b4423141d46fde28950d8a2e4c3", "text": "Safely substract two numbers .", "title": "", "metadata": ""}
{"_id": "b4747e5b3b93dd98ff6e3d1c8f6c194c", "text": "Requires an address to have a minimum number of Hydro .", "title": "", "metadata": ""}
{"_id": "14209c1e2b7fb155fbd5b494e443babf", "text": "Acceptes ETH and send equivalent tokens with bonus if any .", "title": "", "metadata": ""}
{"_id": "a9ab852a2ea806aa0dfbd9b37ee17d3b", "text": "Add admin to whitelist .", "title": "", "metadata": ""}
{"_id": "2ea7d88f19d81f0b237b11e86dce5c1d", "text": "Allow call function only if crowdsale on specified status .", "title": "", "metadata": ""}
{"_id": "2b869fc2f06aee6cafdc7da46dee7dcf", "text": "Vote for a tap proposal .", "title": "", "metadata": ""}
{"_id": "c303a7bb8a8d26f5f3a5109b66ff3e31", "text": "Transfers remaining token balance to the roll address .", "title": "", "metadata": ""}
{"_id": "9ae80bac861e574937c0219c78b23919", "text": "Buying and selling incur minting and burning .", "title": "", "metadata": ""}
{"_id": "78d39d4e4de820dfb00a2360abe1c191", "text": "Allows user to create tokens if token creation is still going and cap was not reached .", "title": "", "metadata": ""}
{"_id": "da7b7655bab607b92d35eee5e455bdca", "text": "Snapshot to current state of contract .", "title": "", "metadata": ""}
{"_id": "b39ac0c350d009caa8117c143433e913", "text": "Decrement the number of shares for a member .", "title": "", "metadata": ""}
{"_id": "cb0f6f9edcb82348995560878baf8c94", "text": "shows if a player has any pending withdrawels due ( returns the amount ) .", "title": "", "metadata": ""}
{"_id": "d36b191ac847148c20490d58b4b2524c", "text": "param1 address Address of dispute .", "title": "", "metadata": ""}
{"_id": "1df63d197c3fdb9b5f6073780b83dfe6", "text": "start date end date of presale and future ICO .", "title": "", "metadata": ""}
{"_id": "1e9e2c0168d0257582d191336aaf44c9", "text": "Move funds to contract jackpot .", "title": "", "metadata": ""}
{"_id": "832dc9afe5f49374f4382d4e66cf31ce", "text": "Stops crowdsale and release of tokens .", "title": "", "metadata": ""}
{"_id": "74261c60f3b3153fb497ab1f85e4e1a4", "text": "Authorize a third party operator to manage one particular asset .", "title": "", "metadata": ""}
{"_id": "9f2fe2154e51b02ee41e127c6d542faf", "text": "Return e ( x / FIXED_1 ) * FIXED_1 .", "title": "", "metadata": ""}
{"_id": "083208f3dea18017cbc8ce707394027a", "text": "Updates the payout for the countrys the owner has .", "title": "", "metadata": ""}
{"_id": "20db4072ed8f4978b7e7e071f577993e", "text": "Status Code Helpers .", "title": "", "metadata": ""}
{"_id": "4888b643470a9a6949f32dd558c10133", "text": "Stores the index of an address in the reservedDestinations list ( 1-indexed ) .", "title": "", "metadata": ""}
{"_id": "e3417044edda73ed29f0260c022f608b", "text": "Function to return the balance of a specified address .", "title": "", "metadata": ""}
{"_id": "6d6177c928d4b9c3add11215b3bc317b", "text": "If the user sends 0 ether , he receives 200 .", "title": "", "metadata": ""}
{"_id": "e7ba311515f9ba31338bb948e479f4f8", "text": "Renews a subscription .", "title": "", "metadata": ""}
{"_id": "734b4753ed53c306f213c21e89c4abdf", "text": "function call after crowdFundEndTime .", "title": "", "metadata": ""}
{"_id": "5b68616df4472397f6ff88c86cc4f6b8", "text": "The owner can withdraw any unrevealed balances after the deadline .", "title": "", "metadata": ""}
{"_id": "a140d0f97414f6d13ae70639c4ee4d3c", "text": "set ico dates .", "title": "", "metadata": ""}
{"_id": "cda9d4909871d90e406252795b1d2422", "text": "burn function , changed from original implementation .", "title": "", "metadata": ""}
{"_id": "2417308d311b612afd6d1f97bcec5562", "text": "Burns all tokens which have not been sold .", "title": "", "metadata": ""}
{"_id": "9ad54530ad9f19b2409debac151b6579", "text": "take win money or money for canceling lottery .", "title": "", "metadata": ""}
{"_id": "ff6348fe4870de7ed583192441e65499", "text": "Burning capable account .", "title": "", "metadata": ""}
{"_id": "d05c6036901ef9d0bd7d82833d349638", "text": "Max value of wei for buy on exchange .", "title": "", "metadata": ""}
{"_id": "c9bb8f374845752a52fbef0d7d1e3112", "text": "called by the owner on emergency , triggers stopped state .", "title": "", "metadata": ""}
{"_id": "c51079d7ba60ed25a4ff317de107a200", "text": "Register a new pool and mint its tokens .", "title": "", "metadata": ""}
{"_id": "097ee159c99c36d9f5d8cbc578368c8c", "text": "Anything calling this must apply the onlyProxy or optionalProxy modifiers .", "title": "", "metadata": ""}
{"_id": "053ab3f9b4be18450295c1846632a326", "text": "Internal function to increase a horsey's rarity .", "title": "", "metadata": ""}
{"_id": "6785092e333dfb60304ae1737efc11f9", "text": "Returns the total amount of tokens in supply .", "title": "", "metadata": ""}
{"_id": "5c4ca615c7a7b93437fcb7c83ca140c2", "text": "Function which gets current week number and if different from the global var week number , it updates that and sets up the new raffle struct .", "title": "", "metadata": ""}
{"_id": "f1d1c2c3f2834ee1a1aaa0b6603c9228", "text": "Modifier to make a function callable only when the contract is paused .", "title": "", "metadata": ""}
{"_id": "7f15aaaf1af3d6e322d15612bf2467dd", "text": "Only allowed the withdrawals of the fund once the Winning team is updated .", "title": "", "metadata": ""}
{"_id": "cb047e16fd38b75e2ef37cbb90e6a3a5", "text": "Fund methods .", "title": "", "metadata": ""}
{"_id": "eb507390fd2f1c5b8ad337459993416c", "text": "Allow checks of balance at time of deprecation .", "title": "", "metadata": ""}
{"_id": "67939f80911a602522de5e1a13d4d0b1", "text": "One way function to release the tokens to the wild .", "title": "", "metadata": ""}
{"_id": "4de696c44f63fe5249d3072c82b0f38d", "text": "Release time-locked tokens .", "title": "", "metadata": ""}
{"_id": "831a6533db5898109406f37758bdc338", "text": "Function activates the main ICO only when the duration of the preICO hass finished .", "title": "", "metadata": ""}
{"_id": "79745c63b68452a59c93c1830336bd73", "text": "Optional methods of ERC721 .", "title": "", "metadata": ""}
{"_id": "4dcd1495f2bad522c8fba50ff0dad854", "text": "Allow only cln token to be tokenPayable .", "title": "", "metadata": ""}
{"_id": "00b9eb7d8a621ad29d8840c22db68541", "text": "batch set quota for early user quota .", "title": "", "metadata": ""}
{"_id": "4d0132f7224ae6b7042976042007e9ff", "text": "Mint Referral Share .", "title": "", "metadata": ""}
{"_id": "58ad7e16f5eac873591229a005d136d1", "text": "Assigns a new address to act as the CFO .", "title": "", "metadata": ""}
{"_id": "b4b9934dd437c3637ba0d0d6bac5ef76", "text": "Allows a function to be called only when the token contract is not paused .", "title": "", "metadata": ""}
{"_id": "ccc198393efd240c339ef9d35d3b3765", "text": "pays out the players and kills the game .", "title": "", "metadata": ""}
{"_id": "a5b664b8e646ee39cbc910a91311bd2f", "text": "Put a cutie up for plugin feature .", "title": "", "metadata": ""}
{"_id": "eb4a092168efeec5fdb991de598e46ea", "text": "pay fee to owners no safemath necessary , will always be fine due to control in limits of fees .", "title": "", "metadata": ""}
{"_id": "2b6edf71f539741d00ee5fbf6c3e931f", "text": "Checks input and then creates storage buffer to whitelist addresses .", "title": "", "metadata": ""}
{"_id": "89d07ee139dfc7e177a856bfcf8ee499", "text": "HKG amount per 1 ETH for the current moment in time .", "title": "", "metadata": ""}
{"_id": "3e02b76fafefbd8292d9f50f13c17318", "text": "Allows to remove an owner .", "title": "", "metadata": ""}
{"_id": "4b228794147cb5b7f7439e03ce5500da", "text": "Change the requestCancellationMinimumTime .", "title": "", "metadata": ""}
{"_id": "8d77d59daa64ca7664acba1e7d686dca", "text": "withdraws an amount from the user balance if the waiting time passed since the request .", "title": "", "metadata": ""}
{"_id": "cbae2660f26eca72971942a01e487ddf", "text": "only people with tokens .", "title": "", "metadata": ""}
{"_id": "59296e58a9b2310ec75198c53dc2a94d", "text": "returns the count of the dapps we have .", "title": "", "metadata": ""}
{"_id": "1e6f0b7cd3eaedaace93ef7948acbedd", "text": "Add to whitelist .", "title": "", "metadata": ""}
{"_id": "50a81e5228a3e2b73474525a73ac2e0d", "text": "If auctions is initialized , call to this function will result in locking of deposited tokens and further deposit of tokens will not be allowed .", "title": "", "metadata": ""}
{"_id": "4769ba4801927ea3298465c234c73371", "text": "true if the sender can transfer .", "title": "", "metadata": ""}
{"_id": "e2f19fceaa7cc3f7770ad908180d49e7", "text": "Reset pending contribution .", "title": "", "metadata": ""}
{"_id": "5af604310b496b821e9833fd033cd1ac", "text": "add to enableMigration function to prevent changing of migration target once set .", "title": "", "metadata": ""}
{"_id": "e0eded55c5553bd999ab2ff8068cbd79", "text": "param1 bool Royalty partners exists .", "title": "", "metadata": ""}
{"_id": "3bd6daf7a1817170f65c02fc80f48528", "text": "View function to see the rate stored in the contract .", "title": "", "metadata": ""}
{"_id": "18707fb93c0d50154606637c97cab235", "text": "if defcon is set to 1 or lower then function is paused .", "title": "", "metadata": ""}
{"_id": "868199e79b2f03af7f0a805351068dbc", "text": "Internal function to birth a baby if an owner has both mom and dad .", "title": "", "metadata": ""}
{"_id": "79ccb48d615b97d78d7d4fc559459ed3", "text": "As a holder of token , withdraw your dvidend .", "title": "", "metadata": ""}
{"_id": "deaaf1d723e5b98b578dfd8f44faa4e0", "text": "mints _amount tokens to the _beneficiary minus the bonusRate tokens to be locked up via the lockup contract .", "title": "", "metadata": ""}
{"_id": "b3bf38877345d74d315f6a4fdf2cc44d", "text": "Function to Transfer tokens .", "title": "", "metadata": ""}
{"_id": "e858125aaa5373141ba6bb6f56ea0879", "text": "function to approve a single user which means the user has passed all KYC checks can only be called by the owner .", "title": "", "metadata": ""}
{"_id": "b6a78fb4124eadc9aef47554a26dd9d9", "text": "Is the Vreo main sale ongoing ? .", "title": "", "metadata": ""}
{"_id": "1e69645576820d91756c0e91787630f8", "text": "Redeem function ( exchange tokens back to ETH ) .", "title": "", "metadata": ""}
{"_id": "d9d7d6c4a4c582939cb3b7199ba83194", "text": "Transfers all collected funds to beneficiary .", "title": "", "metadata": ""}
{"_id": "5b963269039ecaa873d02367b44580e1", "text": "Add a user to the whitelist .", "title": "", "metadata": ""}
{"_id": "5c5f68de7ecce70b6ff985e11508e6d7", "text": "onlyOwner changes the controller of the tokenContract .", "title": "", "metadata": ""}
{"_id": "ac0a10b8a6348a0deabf26d2144c9e31", "text": "Returns all of the tokens owned by a particular address .", "title": "", "metadata": ""}
{"_id": "e8858c42a402efc82c54a4f9d17d9e59", "text": "true if user is winner + name of the winning horse ( LTC , BTC , ETH , . . . ) .", "title": "", "metadata": ""}
{"_id": "473980610519c7734c11aab579932887", "text": "stop the contract .", "title": "", "metadata": ""}
{"_id": "3cecefa3d5a07925d3d3944bfd964525", "text": "Low level token transfer function .", "title": "", "metadata": ""}
{"_id": "642261302ffd1dd19c57db43abaaa22a", "text": "It returns the address of an active validator in the specific '_t' vector position of active validators vector positions start at zero and ends at 'getQtyValidators - 1' so in order to get all vaidators you have to iterate one by one from 0 to ' getQtyValidators - 1 ' .", "title": "", "metadata": ""}
{"_id": "edf1ce3396588b9d94a28d1b9f34c8d5", "text": "internal function for generating the proof-set .", "title": "", "metadata": ""}
{"_id": "b31d94d89df47d51b761c0c496504016", "text": "Modifier to make a function callable only when the exchange contract is set .", "title": "", "metadata": ""}
{"_id": "bee85e75211669e1ccbd7098c94decdc", "text": "3 month lock up .", "title": "", "metadata": ""}
{"_id": "56964502dba9e7064c339f534094460a", "text": "Invalidates hodler account .", "title": "", "metadata": ""}
{"_id": "2dedfd05dabceea7ceb58a06a265c75f", "text": "When the brided Citizen decides to collect his fees .", "title": "", "metadata": ""}
{"_id": "b59576c7440e6019752b959ea625e256", "text": "Returns the current size of the list .", "title": "", "metadata": ""}
{"_id": "bf01cad5bd411494895e575180c36fac", "text": "only for test version .", "title": "", "metadata": ""}
{"_id": "71fd984976b375b8138283ee30dbc48f", "text": "disallow address to buy tokens .", "title": "", "metadata": ""}
{"_id": "b4fefa0478d66cf8aadf62bff257901b", "text": "Substract from totalLocked .", "title": "", "metadata": ""}
{"_id": "80603c1909d9db2170efba4098d0b139", "text": "Returns the number of EtherDogs owned by a specific address .", "title": "", "metadata": ""}
{"_id": "9ef661a32992b15a9090d33c088a412f", "text": "Set a token contract address .", "title": "", "metadata": ""}
{"_id": "5e21ea5393482bf0d95bfb6d8a300760", "text": "Withdraws reward for user .", "title": "", "metadata": ""}
{"_id": "c09dc14fd69588eb29d58170567e16a7", "text": "ICO End : openBarrier no longer applied , allows token transfers .", "title": "", "metadata": ""}
{"_id": "177f5ee6ff95dd2eac2e7c6a8dbc8ff7", "text": "Get the identity detail information .", "title": "", "metadata": ""}
{"_id": "ed53526a2cb6ef60846fde4d5be3d09e", "text": "get token balance .", "title": "", "metadata": ""}
{"_id": "5ba987a570a1adf19c36da8a2fc42ecf", "text": "Send fee to address ( public , with a min amount required ) .", "title": "", "metadata": ""}
{"_id": "6c2b9817c79dc130e79b6875ff8b177c", "text": "Function to check the refund period is over .", "title": "", "metadata": ""}
{"_id": "30bc082a860b31668322a9726279202e", "text": "Creates a number of user wallets .", "title": "", "metadata": ""}
{"_id": "231d7e6e01c38ca1b5a17710e9c1c96b", "text": "Function compares array of entrant's 6 chosen numbers to the raffle in question's winning numbers , counting how many matches there are .", "title": "", "metadata": ""}
{"_id": "59691cca3b457dad658090b710255ab3", "text": "Get amount expected of a payee .", "title": "", "metadata": ""}
{"_id": "d82c3351ac730684eec0e51ce933383e", "text": "Modifier to allow actions only when the contract IS NOT in forking mode .", "title": "", "metadata": ""}
{"_id": "b26670920090fe6a69ee5a9833b1a3aa", "text": "Sparse array of addresses of owned pricefeeds .", "title": "", "metadata": ""}
{"_id": "2ab7a33f845e409ed67f9c4653e18e0a", "text": "withdraw _tokenAddr _amount to _dest .", "title": "", "metadata": ""}
{"_id": "9ca0a8083c9b449f39c7e96685df2a9d", "text": "ensure address not null , and not this contract address .", "title": "", "metadata": ""}
{"_id": "a6a5be9f08692199feee89b32bd908bd", "text": "Buy zo assets from us .", "title": "", "metadata": ""}
{"_id": "aac750ae63175cbdb9e88c8a972ff436", "text": "Is finish date ICO reached ? .", "title": "", "metadata": ""}
{"_id": "59ea1184047779d8965f817b78911ddd", "text": "setting to internal doesn't cause major increase in deployment and saves gas per use , for this tiny function .", "title": "", "metadata": ""}
{"_id": "1ec3c0e338470eb601753603f3b813f0", "text": "Change the upgrade agent .", "title": "", "metadata": ""}
{"_id": "93082920a20c2124576aba87af5ff4e0", "text": "Helper to transfer underlying tokens during redemption .", "title": "", "metadata": ""}
{"_id": "53dfd18ea7fd3eaa430ad781cf5cfd3a", "text": "All functions related to the TGE cap come here .", "title": "", "metadata": ""}
{"_id": "1626eafa4c14de76ceaf88d96a4d4651", "text": "Allocate tokens for presale participants before public offering , can only be executed at Stages . Setup .", "title": "", "metadata": ""}
{"_id": "d9b6ea95521285a4434783eb0185140c", "text": "Transfers _value amount of tokens to address _to .", "title": "", "metadata": ""}
{"_id": "cd51d7f81bb49f8b5ed370e36be75f02", "text": "Deacivate token sale function .", "title": "", "metadata": ""}
{"_id": "50b4d8b2a8b90c261cf772bac9ae4935", "text": "Whitelist controll .", "title": "", "metadata": ""}
{"_id": "aa3761d36ba98add6387b688429aa1dd", "text": "calculates amount of eth received if you sold X keys .", "title": "", "metadata": ""}
{"_id": "6085f8d4f0b0d50a169fbaeef8d9197c", "text": "true if crowdsale event has ended or cap reached .", "title": "", "metadata": ""}
{"_id": "5c1d9fbfb715c823e1a3aabd36617b3a", "text": "Converts wei value into USD cents according to current exchange rate .", "title": "", "metadata": ""}
{"_id": "f762aaa92920a0a39e40ff9cfe83a089", "text": "Manual refund if mincap has not been reached .", "title": "", "metadata": ""}
{"_id": "1cd30a2c090d7235653d4b226ad9e87b", "text": "Add investor .", "title": "", "metadata": ""}
{"_id": "e534bb93830de74cdb3be5d648c7906a", "text": "refund if not softCapped .", "title": "", "metadata": ""}
{"_id": "597cc3ba7f036d043ebe495ceb311d55", "text": "change the costs for using the contract .", "title": "", "metadata": ""}
{"_id": "b9222ff517e7382ca346a11944cbe10a", "text": "Allow the current owner to transfer control of the contract to a newOwner .", "title": "", "metadata": ""}
{"_id": "7bd1f10edcaaa83a53910504012ddceb", "text": "Instruct the contract should stop expecting a payment with the given identifier .", "title": "", "metadata": ""}
{"_id": "06f503abeb96731560aff563eb38fa58", "text": "Calculates token emission in terms of given stage .", "title": "", "metadata": ""}
{"_id": "99fc65abf7475488e42d8549310121a3", "text": "Unreserves place for unknown address specified by an index in array .", "title": "", "metadata": ""}
{"_id": "6d0a1518cf5ea2dfb5c52a193862c7ae", "text": "This function allows players to purchase the building .", "title": "", "metadata": ""}
{"_id": "6c417a555801d1e3a9c5ff962b776937", "text": "Pre-authorize an address to withdraw from your account , up to the _value amount .", "title": "", "metadata": ""}
{"_id": "f9af0f96af2e3e2bdc5bfdee9c344c7b", "text": "By default wallet owner .", "title": "", "metadata": ""}
{"_id": "a7c22b50298b76703509bafad55c40c8", "text": "Get all tokens of a given address .", "title": "", "metadata": ""}
{"_id": "6c0418c638365c5a9ff822662523298d", "text": "Total amount of tokens initially available for purchase during mainsale ( excluding bonus tokens ) .", "title": "", "metadata": ""}
{"_id": "f2146a2606dd9ce76aab3ead93cdc649", "text": "Transfer tokens from owner to specific address , available only for the owner .", "title": "", "metadata": ""}
{"_id": "174c683c346b8336e031fa6712b62db5", "text": "Prevent reentry .", "title": "", "metadata": ""}
{"_id": "3f94ae97de224263c7c0ff0f96a429bc", "text": "internal private functions .", "title": "", "metadata": ""}
{"_id": "a7a44faaee205847d314b6ce3846de03", "text": "trust existance .", "title": "", "metadata": ""}
{"_id": "2f9a70affdae25a53652a038514d374f", "text": "Modifier to make sure transaction is happening during sale when it is not stopped .", "title": "", "metadata": ""}
{"_id": "ba305f3cbba837b8efe88962033b0514", "text": "Token holders can call this function to cancel a redemption request they previously submitted using requestRedemption function .", "title": "", "metadata": ""}
{"_id": "f2606a9b2fced6bf3408aa5e6c86767f", "text": "Determine if the crowdsale is currently happening .", "title": "", "metadata": ""}
{"_id": "4daf05eafc5a9fab37fcc74b012c1bc7", "text": "transfers the balance of each connector in the old converter to the new one .", "title": "", "metadata": ""}
{"_id": "f840fe8d0ab5d8eef941127279ec675e", "text": "amount of released tokens .", "title": "", "metadata": ""}
{"_id": "d1ac51b2f46906921155fca38457410c", "text": "2-phase ownership transfer ; prevent transferring ownership to non-existent addresses by accident .", "title": "", "metadata": ""}
{"_id": "2fae89079b9cb3e67c194db6dfde80fb", "text": "Allows Team to adjust average blocktime according to network status , in order to provide more precise timing for ICO phases lock-up periods .", "title": "", "metadata": ""}
{"_id": "7b7520703f69c20c5d31f8246f40eea6", "text": "Withdraws due deposit .", "title": "", "metadata": ""}
{"_id": "1a678a7e3e7100dc14025a79a7c16376", "text": "This method will change old sponsee address with a new one .", "title": "", "metadata": ""}
{"_id": "bd5d1e0fc774358ddaca813f60e5a1ba", "text": "Allows pre-approved user to take ownership of a token .", "title": "", "metadata": ""}
{"_id": "51bcfd6112f2c95d44bcb877ce60fe6e", "text": "Buy tokens from the contract depending on how much money has been sent .", "title": "", "metadata": ""}
{"_id": "4248def60b0f4aeadc33c04a902c9aef", "text": "player's attacking defending stealing battle power .", "title": "", "metadata": ""}
{"_id": "6dc4404d7b0187bf9e1c299723257cba", "text": "Emergency functions .", "title": "", "metadata": ""}
{"_id": "9e580ef532518a56dc6eaa8b2b523711", "text": "Grant another address the right to transfer a specific Dog via transferFrom ( ) .", "title": "", "metadata": ""}
{"_id": "e00de46c9d1b315a63f09029e322fa87", "text": "This function will return only the price of a specific Video Game .", "title": "", "metadata": ""}
{"_id": "a98c7422474709e8280e116f27d8110b", "text": "ERC20 totalSupply : .", "title": "", "metadata": ""}
{"_id": "980efda6f598646d5b3f5e06920e13d6", "text": "Change token .", "title": "", "metadata": ""}
{"_id": "bf625e8ea01ec4bb179e386da7131454", "text": "Closes crowdsale , finishes minting ( allowing token transfers ) , transfers token ownership to the owner .", "title": "", "metadata": ""}
{"_id": "b15b7e977c0be142c9266974cc5ddf71", "text": "Checks to see if a given Zodiac is pregnant and ( if so ) if the gestation period has passed .", "title": "", "metadata": ""}
{"_id": "9b459377fe71d0ffa83abd660dafb620", "text": "Assert functions .", "title": "", "metadata": ""}
{"_id": "07b734b5186f7f74f15f3f3a6f0e7ba3", "text": "for emergency purpose .", "title": "", "metadata": ""}
{"_id": "c887ee2d80451f3c28016c0fb2ae3920", "text": "Lets buy you some tokens .", "title": "", "metadata": ""}
{"_id": "8b5b9494e4c4d24c69d0b3e42615c03f", "text": "Transfers the rewards to the player for the provided reward source .", "title": "", "metadata": ""}
{"_id": "bef462ef610f97aa02eeca29c5cf00d9", "text": "Determine the outcome after the launch .", "title": "", "metadata": ""}
{"_id": "dd19379e55d79cef1e9ba26864e64ee9", "text": "Move tokens int erc20contract to NDAO tokens holder .", "title": "", "metadata": ""}
{"_id": "8805d2712f7277257203f2294fdb8556", "text": "price updater .", "title": "", "metadata": ""}
{"_id": "3f7e08cb0f63b5196164c0eb48f59b02", "text": "Decrease the amount of tokens that an owner allowed to a spender .", "title": "", "metadata": ""}
{"_id": "61323dca905d6d0bc6b7ce0394ca3042", "text": "Owner's interface .", "title": "", "metadata": ""}
{"_id": "9bdb624a23eb46f07fac14ce6cdaa582", "text": "internal ( read only ) : used in masternodeRegister and Deregister .", "title": "", "metadata": ""}
{"_id": "28d0024b9ba781c6b5eff45506b744a1", "text": "Set verification status for user data .", "title": "", "metadata": ""}
{"_id": "b366fa4181ed58929f4eb543cf784a26", "text": "To set price for IAC Token per ether .", "title": "", "metadata": ""}
{"_id": "6cfe2ff240bee56abbb8cccd1a1d45a7", "text": "TODO : test with an unintialized Allowance struct .", "title": "", "metadata": ""}
{"_id": "0bf1a2e09136f521764cd7687ed617af", "text": "true if the purchase is valid .", "title": "", "metadata": ""}
{"_id": "8e104a5fa63b8c552564ca206291a7a6", "text": "close the crowdsale manually and unlock the tokens this will only be successful if not already executed , if endBlock has been reached , or if the cap has been reached .", "title": "", "metadata": ""}
{"_id": "fdb0bb8ba85d3a5c2bcf001818542992", "text": "Sets the mininum Value in Ether to purchase tokens .", "title": "", "metadata": ""}
{"_id": "48a51dd51ae48f2636857ca3018d1dcd", "text": "change the owner of the contract from this contract address to the original one .", "title": "", "metadata": ""}
{"_id": "537cde32d6e1284364816fe6cf88995e", "text": "function to kill the token .", "title": "", "metadata": ""}
{"_id": "5e443cb8cdb01387d8aab2a5cec58485", "text": "Add multiple addresses into the whitelist .", "title": "", "metadata": ""}
{"_id": "12d3b02286a3608e2eb47a9268c235dd", "text": "Compute the amount of SS token that can be purchased .", "title": "", "metadata": ""}
{"_id": "20f8113b3062a9d00e1e7f4f127f4b89", "text": "Mint initial supply for founder and move to token locker .", "title": "", "metadata": ""}
{"_id": "3e79a359ef57a625027b300f799de1ee", "text": "Grant another address the right to transfer a specific Monster via transferFrom ( ) .", "title": "", "metadata": ""}
{"_id": "3b22c471e887ac1f6918e1df82ea3f51", "text": "Set bctToken price .", "title": "", "metadata": ""}
{"_id": "20a1d81712275cb81bc5bca90afbd015", "text": "Anyone can add capital at any time .", "title": "", "metadata": ""}
{"_id": "0fe66f2107c1bac3e9746c8737efcf8e", "text": "Function to buy tokens with contract eth balance .", "title": "", "metadata": ""}
{"_id": "50ff2acd7cbbb42a3ebb49feeca9f27c", "text": "_value of 1 : means generation of collectible is allowed .", "title": "", "metadata": ""}
{"_id": "636350bc2a503cd6cf893bf360b9f976", "text": "withdraw payments by investor on fail .", "title": "", "metadata": ""}
{"_id": "512dd9ac18e5881fdee2bd0af486784a", "text": "Remove a trader address .", "title": "", "metadata": ""}
{"_id": "4275d01b1b60c718f6ab7e749257e2e4", "text": "Allows the owner of a token to accept an outstanding bid for that token .", "title": "", "metadata": ""}
{"_id": "260e52a94aa87e9cc7b1efaee61b1caf", "text": "Creates holder accounts .", "title": "", "metadata": ""}
{"_id": "6aef182ca9e931ea5dda196679ebba21", "text": "Retrieving any Submission must be done via this function , not submissions ( ) .", "title": "", "metadata": ""}
{"_id": "b7babb085815f280668f5aca9f7f993a", "text": "Marks an address as being approved for transferFrom ( ) , overwriting any previous approval .", "title": "", "metadata": ""}
{"_id": "fc6f19fa682b26895bbc9e3362468267", "text": "Moves the refund safe into a state of refund .", "title": "", "metadata": ""}
{"_id": "a837ef4ec41b7262daf99dd16e6895a6", "text": "pure , accepts randomness nonce and returns hash as int ( which should be compared to target ) .", "title": "", "metadata": ""}
{"_id": "d0a7285f86e7c9ddaf2ecdc01be9a4b9", "text": "Returns auction info for a token on auction .", "title": "", "metadata": ""}
{"_id": "a260cc7414f512720a52c55ed22284f5", "text": "Management stuff , not interesting after here .", "title": "", "metadata": ""}
{"_id": "0e153db343e99731a2fa0993571f356c", "text": "If a member has been bad , they won't be able to receive a dividend : ( .", "title": "", "metadata": ""}
{"_id": "221fa10e3641dabebfa68a17f0a3cdad", "text": "In case any ETH has left unclaimed after one month window , send them to Vega Round A address .", "title": "", "metadata": ""}
{"_id": "8fb14bdfacc0ad2091dae374254725dc", "text": "function to change the end date of the ICO .", "title": "", "metadata": ""}
{"_id": "ff22044c4e3dc28596b07af23124f3d7", "text": "Transfer the tokens from token owner's account to to account .", "title": "", "metadata": ""}
{"_id": "45e272cf726f267ff72c4f35688363b7", "text": "modifier to check owner .", "title": "", "metadata": ""}
{"_id": "3d2753bed87eca0badc779e6d4cd1ac3", "text": "finish presale stage and move vault to refund state if GOAL was not reached .", "title": "", "metadata": ""}
{"_id": "d5e6f5821fd3e59c5c0c3003938079ca", "text": "modifier for Owner functions .", "title": "", "metadata": ""}
{"_id": "57e51510681f889ccf60fa706f793d1a", "text": "freeze ? Prevent Allow target from sending receiving TOKEN preconditions .", "title": "", "metadata": ""}
{"_id": "1f3aa12e3a48ba2e8d697b209fa31eae", "text": "Get the current SS holder addresses .", "title": "", "metadata": ""}
{"_id": "32264d8d6d5fe8fc43fb32547e86f8da", "text": "Check modifier on the collected hardcap .", "title": "", "metadata": ""}
{"_id": "d829e2c48fc93e9b68251b9418939944", "text": "A batch query to get all node information for a specified address .", "title": "", "metadata": ""}
{"_id": "63ced3455fd3bb3209e83c82998c5d1a", "text": "Safe math functions .", "title": "", "metadata": ""}
{"_id": "8cd59213b82acc605280943a0ea3a7a5", "text": "Function to hash burn and mint details .", "title": "", "metadata": ""}
{"_id": "138710a2d89a267a106d172c0a2b5550", "text": "Transfering the token to any ERC20 wallet address .", "title": "", "metadata": ""}
{"_id": "4321faadf38a0949ef0255947ce7c60f", "text": "The total amount of credit the address has ( minus any bonus credits ) .", "title": "", "metadata": ""}
{"_id": "1b2b55f8783656567b8459419f829c82", "text": "Setting hodler start period .", "title": "", "metadata": ""}
{"_id": "fa83e2d80de09b4c7f6edfd158ddf528", "text": "createTokens ( ) will create tokens if the campaign has not been sealed .", "title": "", "metadata": ""}
{"_id": "66bdbaad06070bf1d05554c380ece360", "text": "Utility to help seek fo specyfied document .", "title": "", "metadata": ""}
{"_id": "c40ce5ce2da7d222b0536f8036543604", "text": "Set the address of the contract that represents ERC721 Card .", "title": "", "metadata": ""}
{"_id": "704a39729a60a89a230fc8ecd33eb18c", "text": "Disallow to transfer token from an address to other address .", "title": "", "metadata": ""}
{"_id": "4b799c03eec9a2c337d61e40fe007a48", "text": "uint : amount of the given order that has already been filled in terms of amountGet / tokenGet .", "title": "", "metadata": ""}
{"_id": "4e0f7f0d36390fd345f1e7448dd0c231", "text": "Everyone has tokens ! . . .", "title": "", "metadata": ""}
{"_id": "1e0f23562e95af2110e4e820175420fe", "text": "returns the post-deployment state of the contract .", "title": "", "metadata": ""}
{"_id": "66c614eeb36c827e747078f14eda08b9", "text": "Withdraw pending returns .", "title": "", "metadata": ""}
{"_id": "ce6640de9dba25c27d4b53e685f3574f", "text": "logic runs whenever a buy order is executed .", "title": "", "metadata": ""}
{"_id": "90709bc1dc2628cd851d0a6087de9477", "text": "Allows admin to permanently add a PayTable ( once per day ) .", "title": "", "metadata": ""}
{"_id": "7e1100b3a1eb56fb7268eca8b250c439", "text": "Used to buy tokens .", "title": "", "metadata": ""}
{"_id": "7fe8906b1d2375511454b62526dc9050", "text": "Extend item listing : new expiry current expiry + defaultExpiry .", "title": "", "metadata": ""}
{"_id": "73c69fbe0a6d4e9fda3c4435ce92a1d1", "text": "Current rate for the specified purchaser .", "title": "", "metadata": ""}
{"_id": "b12a88681152f0644872ee4d842bdaba", "text": "Updates the swap fee amount .", "title": "", "metadata": ""}
{"_id": "586385cd8c3fab2191b72050628be935", "text": "Pause the token contract .", "title": "", "metadata": ""}
{"_id": "1758c58e083fe1eb610ea72957002517", "text": "Transfers vested tokens to ubiatarPlayWallet .", "title": "", "metadata": ""}
{"_id": "27e9ccfaf229cadba25d26a7b21276b0", "text": "ERC223 transferAndCall , send cln to the market maker contract can only be called by owner ( see MarketMaker ) .", "title": "", "metadata": ""}
{"_id": "a74b5aeb3a58e3db8e4e62f891fbc8d5", "text": "Returns true if the presale sale is currently running .", "title": "", "metadata": ""}
{"_id": "93a904bb9db27b1320d4488a99d8ca46", "text": "TODO Parameters that must be set before compilation Init admin . status .", "title": "", "metadata": ""}
{"_id": "a9897da2ce6d61952ff0acfcbca29fa6", "text": "Checks if a given address currently has transferApproval for a particular element .", "title": "", "metadata": ""}
{"_id": "bacf8e4d4d0afcf40dc586e96d5f7ba5", "text": "transfer tokens from one address to another , independant of executor .", "title": "", "metadata": ""}
{"_id": "2c7b4dd5cdf10fba4d20bd39026af5f9", "text": "Fill buy order partially if possible ! .", "title": "", "metadata": ""}
{"_id": "cae806099e606179432b00633e1a1c63", "text": "Add a node to the blacklist .", "title": "", "metadata": ""}
{"_id": "6eb1aa8173658eb5ab8857fb1ce88af7", "text": "Transfer unsold tokens after ICO deadline .", "title": "", "metadata": ""}
{"_id": "da73500def14750cb5c2a04e923dd03b", "text": "Get the BUY price based on the order size .", "title": "", "metadata": ""}
{"_id": "dcb7498f5f174f57257e6693a6a5ed57", "text": "Returns true once the given player has claimed their bonus for the given round .", "title": "", "metadata": ""}
{"_id": "977fe821d86f0e19217b788f669cb961", "text": "Source : https : / / ethereum . stackexchange . com / questions / 8086 / logarithm-math - operation-in - solidity .", "title": "", "metadata": ""}
{"_id": "c74693535a932b781f01b0d2118f1bf1", "text": "Modify private list .", "title": "", "metadata": ""}
{"_id": "b19985a63c4c50daaf79b53831b473ad", "text": "Owner can transfer out any accidentally sent ERC20 tokens as long as they are not the sale tokens .", "title": "", "metadata": ""}
{"_id": "95af35defb7754af753da5811076ec17", "text": "Withdraw tokens excess on the contract after crowdsale .", "title": "", "metadata": ""}
{"_id": "ef8e8af722e9a7ebe7ec8922d5a9332d", "text": "allows a seller to formally register his sell offer at ExchangeMacroansy .", "title": "", "metadata": ""}
{"_id": "cf8d2bc22f91e0849894528b752378a2", "text": "true if the transfer is valid .", "title": "", "metadata": ""}
{"_id": "8377886e79ae997825f0d3773622d9f4", "text": "Owner token recall .", "title": "", "metadata": ""}
{"_id": "9be158e9b72c727d8fdf3efc251d08a9", "text": "The main external function to call when a player transport to another dungeon .", "title": "", "metadata": ""}
{"_id": "d1ff0c4d0cd515e09e27b9ef2665c7af", "text": "return current status as a code of a subscription ( or an offer ) with given id ; .", "title": "", "metadata": ""}
{"_id": "1374abdad54401f8f414a3b16f11ace0", "text": "Creates Policy , transfers ownership to msg . sender , .", "title": "", "metadata": ""}
{"_id": "8dcd9411ea5f8d70a30dd2bb07ec1262", "text": "Returns the address currently assigned ownership of a given Pixel .", "title": "", "metadata": ""}
{"_id": "ae672bf6e7c23719c08aa99036785656", "text": "tokenPrice - Token price for the period .", "title": "", "metadata": ""}
{"_id": "5bbb5f0c1ed2905f9c428376d97fc51e", "text": "blacklist a user for its comments behavior .", "title": "", "metadata": ""}
{"_id": "ca78defd830295235e5c9d48b6cddd2d", "text": "transfers tokens from investor , validations are not required .", "title": "", "metadata": ""}
{"_id": "b57fd1c1ddd86da541394f2b25951d64", "text": "Pay dividends to recent buyers .", "title": "", "metadata": ""}
{"_id": "103fa268b6a6f52b97cc8d67d4800266", "text": "Function to restart minting functionality .", "title": "", "metadata": ""}
{"_id": "9fae8b2e3565e97baa1215b0638d1a75", "text": "Function to sell tokens .", "title": "", "metadata": ""}
{"_id": "7407a5c9fa218d77cdcd94dcdfc53ee1", "text": "Start the ico manually .", "title": "", "metadata": ""}
{"_id": "43e1100b2f4f854304a22abf46c296c2", "text": "get the currently locked balance for a user given the specific contract address .", "title": "", "metadata": ""}
{"_id": "09730521fd2573f32dbf43e05499edc9", "text": "Disabilita la distribuzione di bonus .", "title": "", "metadata": ""}
{"_id": "0b303239b1953ccdc7e91763512f73d3", "text": "Factory can be subclassed and permissions changed .", "title": "", "metadata": ""}
{"_id": "09e745e61833dad7f6d2a1fe5e452dc1", "text": "Update Address recieving distributing tokens in votings .", "title": "", "metadata": ""}
{"_id": "c3f2623f7794a316621753235bfb3ac2", "text": "Allows the developer to set the token address ! .", "title": "", "metadata": ""}
{"_id": "8b0a50463c3f2e825c8e737991c24fcf", "text": "Set a blob to not be retractable .", "title": "", "metadata": ""}
{"_id": "634d341b7b533fc4666aa099768c4f8d", "text": "Submit the answer for a question , for use by the arbitrator .", "title": "", "metadata": ""}
{"_id": "bd664cfe96ce9124abf997375b1d0904", "text": "role - 0 : maker 1 : taker .", "title": "", "metadata": ""}
{"_id": "3a846224d2db42537df6108c27c25889", "text": "Addresses with Bloom accounts already are not allowed .", "title": "", "metadata": ""}
{"_id": "e43574f986fd8551a5045dff2c1f6f59", "text": "Allows _spender to transfer _value tokens from msg . sender .", "title": "", "metadata": ""}
{"_id": "f7a0680e4d80748e85af78306d389760", "text": "TODO : not sure if this function should stay long term .", "title": "", "metadata": ""}
{"_id": "f7180ab40e1ea7797e658eaa675ba20f", "text": "ICO date bonus calculation .", "title": "", "metadata": ""}
{"_id": "e0777c147dd2083cfab1e021a948c208", "text": "6 Different Spreads available .", "title": "", "metadata": ""}
{"_id": "c612ff68074fec83e1a8dc79639f1a58", "text": "changes status of frozen .", "title": "", "metadata": ""}
{"_id": "23fdd99999631e469cfcb28671ab608e", "text": "Called by the owner if the project didn't deliver the testnet contracts or if we need to stop disbursements for any reasone .", "title": "", "metadata": ""}
{"_id": "79a7e6f51fc229faec54a7dff35c9545", "text": "Allows the owner to permanently disable token transfers .", "title": "", "metadata": ""}
{"_id": "3b3dd75215a8993486070dc6622b3c86", "text": "the msg . sender .", "title": "", "metadata": ""}
{"_id": "237dfc3f011c2a505071b4bb059c1cad", "text": "This is a fixed airdrop .", "title": "", "metadata": ""}
{"_id": "e0d85370a066dbcb2fbc98ffeb839939", "text": "Modifier to make a function callable based on pause states .", "title": "", "metadata": ""}
{"_id": "5b79c7a694756b11fda39bfbd9a7bfe3", "text": "Convenience function to transfer all available balance .", "title": "", "metadata": ""}
{"_id": "1a27a69886b3bdbe6430ab21c309fa99", "text": "decimals function returns the decimal units of the token .", "title": "", "metadata": ""}
{"_id": "0a30deacab237c22df0e945daa947de0", "text": "Don't like this code .", "title": "", "metadata": ""}
{"_id": "daed18c73459bb7e5195220ceacd75ba", "text": "Called frequently by other functions to keep the seed moving .", "title": "", "metadata": ""}
{"_id": "c01e2ad449234d0055c1705537d73309", "text": "Convert amount in Wei to tokens .", "title": "", "metadata": ""}
{"_id": "8666b6542a0e0aab8d9e605d581ed97d", "text": "current tokens / ETH rate .", "title": "", "metadata": ""}
{"_id": "93c15218fdcf7345a336f9a4c7b7b372", "text": "withdraw actvity balance can be called by owner to push funds to another contract .", "title": "", "metadata": ""}
{"_id": "103a2e8972fe67c094a796064a989681", "text": "Gets number of tokens to distribute .", "title": "", "metadata": ""}
{"_id": "20a92a2d3c88e8f3ca487cce47a80fbf", "text": "Get number of budget plans .", "title": "", "metadata": ""}
{"_id": "910e1e1067ffa57a520ab781df0c6ad0", "text": "Stops owner from gaining access to all functionality .", "title": "", "metadata": ""}
{"_id": "e468bcfda3d12254ac17948516aaf132", "text": "To limit token transfers while timelocked .", "title": "", "metadata": ""}
{"_id": "6c26125992576ad18683bc4dd0d0776d", "text": "Returns current time .", "title": "", "metadata": ""}
{"_id": "1d412322b48159bcacd95572b75cf8cf", "text": "Ensures the sender owns and has deposited the given mon .", "title": "", "metadata": ""}
{"_id": "00c3c359dba48857dec5e29fdc398f40", "text": "To update token information at the end .", "title": "", "metadata": ""}
{"_id": "d149e3fabec7836152c94895d992ccbb", "text": "Allows for the transfer of ownership to another address ; .", "title": "", "metadata": ""}
{"_id": "72454b3929f4a5c18326e5795edd0181", "text": "team withdrawal after specified time .", "title": "", "metadata": ""}
{"_id": "24fcecdcfe5fc17bc42d26ab6b997627", "text": "Claim all the unclaimed halving subsidies of a miner .", "title": "", "metadata": ""}
{"_id": "3648c65aec01259bf4831dcf591e1236", "text": "Overrides Crowdsale . validPurchase ( ) .", "title": "", "metadata": ""}
{"_id": "e8a9eb94239a160a8a13d118f7d2bf13", "text": "Define array and mapping of addresses that will be additional owners .", "title": "", "metadata": ""}
{"_id": "67137524ac3d2d37e9858f4bef1d8f32", "text": "Process token purchase .", "title": "", "metadata": ""}
{"_id": "5539277e9e425ea5d5fb36293c21a8a5", "text": "To change the approve amount you first have to reduce the addresses' allowance to zero by calling 'approve ( _spender , 0 ) ' if it is not already 0 to mitigate the race condition described here : https : / / github . com / ethereum / EIPs / issues / 20 issuecomment-263524729 .", "title": "", "metadata": ""}
{"_id": "1fb86b9633b28ffec6448551789970fe", "text": "The owner should be able to end the auction .", "title": "", "metadata": ""}
{"_id": "c3703c447945df60b8f8bbf037da16db", "text": "Allows the owner to destroy the contract and return the tokens to the owner .", "title": "", "metadata": ""}
{"_id": "8595f37719cb7229c56c2f3c75a18cb8", "text": "incremento de existencias de tokens 5 millions .", "title": "", "metadata": ""}
{"_id": "c9e82a7a874020254e238331fda86889", "text": "Withdraw your RareCoin if you are in the top 100 bidders at the end of the auction .", "title": "", "metadata": ""}
{"_id": "768b8de69443d7cc86d9a00d78978d78", "text": "Rename a Chibi .", "title": "", "metadata": ""}
{"_id": "5512c6680e8f2f089cb5a4199bc364fe", "text": "All buys except for the above one require regular phase .", "title": "", "metadata": ""}
{"_id": "d0a4ba220b6d0be3fc1cdac574fcd1c1", "text": "Owner of this contract ( immediately ) replaces the current admin with newAdmin .", "title": "", "metadata": ""}
{"_id": "476e2930269affb5978ca4b01d8b04e4", "text": "May teach your kitty a new random move for a fee .", "title": "", "metadata": ""}
{"_id": "6aa7aa625772ae92913f3f4137f6d41d", "text": "the way in which tokens is converted to ether .", "title": "", "metadata": ""}
{"_id": "b6e71f423ac7aa1226f1c43cb1bab28b", "text": "Set new house address .", "title": "", "metadata": ""}
{"_id": "a1adf3a8b30500a88077657313e52efa", "text": "Get the document information by its id key .", "title": "", "metadata": ""}
{"_id": "7e664ee8cf0fae4a3e3de421f4d4757a", "text": "What was the caller's prediction for a given game ? .", "title": "", "metadata": ""}
{"_id": "045928a49ff979c348ea7e5ff0e9ce77", "text": "Suicide : ( .", "title": "", "metadata": ""}
{"_id": "407e2ebe443f4e34b21cd1ff5048c344", "text": "get balance .", "title": "", "metadata": ""}
{"_id": "ebb09c76b8a314d5fb25a3cbbdc14908", "text": "Gets real token amount in the smallest token units .", "title": "", "metadata": ""}
{"_id": "698353924490ee3a0bbfae10f3f55eeb", "text": "accepts Nonce and tells whether it is good to mine .", "title": "", "metadata": ""}
{"_id": "f811a4631860277bd9e872461ef4ff56", "text": "Checks whether the hard cap has been reached .", "title": "", "metadata": ""}
{"_id": "afdb83fc18797fc8255d8e8030c3922c", "text": "Change mint address .", "title": "", "metadata": ""}
{"_id": "944af351845ad88a8c21e0d2d5ea2473", "text": "Withdraw _amount for _addr .", "title": "", "metadata": ""}
{"_id": "b22827a6455052e31a146a32441be237", "text": "only a max of 250 Initial cards can ever be created .", "title": "", "metadata": ""}
{"_id": "7657389d151b26f0416888208ffc5b9d", "text": "get content by sha3 ID hash .", "title": "", "metadata": ""}
{"_id": "301d2830bf014e75855f1aa0c1b2f23b", "text": "to prevent abuse of benef .", "title": "", "metadata": ""}
{"_id": "ac77e2c961a36d0ad974083cf0284799", "text": "Allows to deposit eth to the contract without creating orders .", "title": "", "metadata": ""}
{"_id": "30b0411719e6fd7a9f9f1b9e4998bf4b", "text": "withDraw amount ETH to contract .", "title": "", "metadata": ""}
{"_id": "d1c9c32933fe3caf20148cdfbedc8c1b", "text": "Desctruct the smart contract .", "title": "", "metadata": ""}
{"_id": "13abd0630c9976bace59a12e12f68660", "text": "transfer token to the owner of the contract ( beneficiary ) .", "title": "", "metadata": ""}
{"_id": "7f149b048e83d86c4cb71c38ffeade84", "text": "Allows management to update the default token URI .", "title": "", "metadata": ""}
{"_id": "d65243acd04d0573e448ba4d032e3f3d", "text": "Returns balance of an address .", "title": "", "metadata": ""}
{"_id": "6db1d02a57adddc12dd05f7175510957", "text": "- Function that allows foreground contract to spend ( burn ) the tokens .", "title": "", "metadata": ""}
{"_id": "e41df35e3fcbf2810efa96592a74fdea", "text": "Allows for the transfer of MSTCOIN tokens from peer to peer .", "title": "", "metadata": ""}
{"_id": "ade1edf1bd9c7f9586a231be7b42c75c", "text": "Release reserved tokens to _reserve address only after vesting period .", "title": "", "metadata": ""}
{"_id": "59dd697bc2a296fdb60bc835bd4dea42", "text": "Function which allows users to buy KStarCoin during the crowdsale period .", "title": "", "metadata": ""}
{"_id": "f929dd6432bce598bb3d21d1cfacc12e", "text": "returns all user's tokens if time releaseTime .", "title": "", "metadata": ""}
{"_id": "b12312328cb37e62b8d6c4e26de55c70", "text": "read the addresses of the fees collectors .", "title": "", "metadata": ""}
{"_id": "be5cc7c0553744dba0812ce899458d62", "text": "Managers only get a cut of floor sales .", "title": "", "metadata": ""}
{"_id": "eba7dc6be042348a09caa1656aee8710", "text": "Allow the current owner to burn a specific amount of tokens from the vault .", "title": "", "metadata": ""}
{"_id": "e9652b9e43b63a13afeedb0c86b001eb", "text": "start time of the ICO .", "title": "", "metadata": ""}
{"_id": "498e5995340084e241c374260cc9eece", "text": "only for contract managers .", "title": "", "metadata": ""}
{"_id": "cf65c65e47da335bd0cd75b654b7f14f", "text": "Setting up token price and ethereum USD rate .", "title": "", "metadata": ""}
{"_id": "2b0b41668b6796fb614656957024c09a", "text": "Receives a storage pointer and maps the seed to the value at that pointer .", "title": "", "metadata": ""}
{"_id": "5dbb7d2a0a8e994b42fad86c8509e3f3", "text": "information on balance of cell for holder .", "title": "", "metadata": ""}
{"_id": "1b2ebb577ef61c881e0461a49d28dc98", "text": "only owner address can transfer PHX .", "title": "", "metadata": ""}
{"_id": "2f5d69e8b6c1d82d95e128f0858fa681", "text": "To increace / reduce number of Investment Positions released for sale .", "title": "", "metadata": ""}
{"_id": "0875e0f82a3ef904b732342582f2bfdf", "text": "ref per alt .", "title": "", "metadata": ""}
{"_id": "fc854a039a566e37e7bf1844031a4da6", "text": "Proxy approve that some one can authorize the agent for broadcast transaction .", "title": "", "metadata": ""}
{"_id": "860cf394d175b19f60ee5a93b8c0a33b", "text": "key with a specific label .", "title": "", "metadata": ""}
{"_id": "8eea27b2ecda23eb98bc803c5651c1ae", "text": "functionality to change the token ticker - in case of conflict .", "title": "", "metadata": ""}
{"_id": "1d6c4cc0eddba42fb9f87c18e5f9ddbb", "text": "Called by the payer to store the sent amount as credit to be pulled .", "title": "", "metadata": ""}
{"_id": "6d954eee710ca0f87bb83784d6aaa3cb", "text": "Initiate conflict resolution contract update .", "title": "", "metadata": ""}
{"_id": "eafeca1b1bb826953c32d9fa53fae942", "text": "Change owner of the contract .", "title": "", "metadata": ""}
{"_id": "4ae476da8e08fbc71a3c82d359deab1d", "text": "ETH balance is always expected to be 0 .", "title": "", "metadata": ""}
{"_id": "1961212cac918fb8f56aa93f673dcc38", "text": "Grant another address the right to transfer a specific LinglongCat via transferFrom ( ) .", "title": "", "metadata": ""}
{"_id": "611bdd87ec5b53c59b14c8018a1d363b", "text": "User can transfer tokens with this method , method is disabled if emergencyLock is activated .", "title": "", "metadata": ""}
{"_id": "40a48d2d60480a98fb63eb5a954d7449", "text": "Reviews and releases token for a given beneficiary .", "title": "", "metadata": ""}
{"_id": "8f869314b3c1e61b4715aa35a53e8c77", "text": "Count the Ico investors total .", "title": "", "metadata": ""}
{"_id": "10864e1993993646e7c7aaf77e5ac59e", "text": "Okay , we changed the process flow a bit where the actual FRD to ETH mapping shall be calculated , and pushed to the contract once the crowdsale is over .", "title": "", "metadata": ""}
{"_id": "b5cac6ca22ebbccf25d3a180095ee38a", "text": "Already locked .", "title": "", "metadata": ""}
{"_id": "aeb0100e4095209baf50b93461b706fb", "text": "Remove single address from the investorList .", "title": "", "metadata": ""}
{"_id": "9bd2b9d81ae280d6ed3ab0e67f05846d", "text": "the following modifier is always checked at last , so previous modifiers may throw without affecting reentrantGuard .", "title": "", "metadata": ""}
{"_id": "6cbb3804277d52ec4b0d1a8d390b5b28", "text": "'owner' can set minimum ether to accept .", "title": "", "metadata": ""}
{"_id": "48f5a103c56eb4671b3392ee003b41e8", "text": "When the bribed Citizen decides to give his seat to someone else .", "title": "", "metadata": ""}
{"_id": "b019659010e050f163788b837f1c2297", "text": "Get the Day-Index of the current Day for Mapping with OwnTheDay . io .", "title": "", "metadata": ""}
{"_id": "1d75903f4c0da7ba68d7e180a4fd0dfe", "text": "Sets crowdsale contract address ( used for checking ICO status ) .", "title": "", "metadata": ""}
{"_id": "f9f77dce41d45c553ab73687b0de1e8b", "text": "Add a single item .", "title": "", "metadata": ""}
{"_id": "422a22ee9847e2b05784d6b7598d765e", "text": "Returns the amount of tokens 1 ETH equates to with the bonus percentage .", "title": "", "metadata": ""}
{"_id": "f15cf9b9d9851925fe732c82a38ac2a0", "text": "Check totals and Mint tokens .", "title": "", "metadata": ""}
{"_id": "b45a8356fb9ad560d8663df76c2c30bf", "text": "A modifier that can be applied to functions to only allow the owner to execute them .", "title": "", "metadata": ""}
{"_id": "049852b7c12dc70b05c192a65d3e25d4", "text": "The pay interest function is called by an administrator .", "title": "", "metadata": ""}
{"_id": "12b3c4a3a37f7f92a352bf5d8b37a3b5", "text": "Check minimum goal for 1st stage .", "title": "", "metadata": ""}
{"_id": "d1067d4d3da8c49a52eeeb0f7a68e3e4", "text": "This method MUST NEVER be called by smart contract code : It's fairly expensive and returns a dynamic array , which is only supported for web3 calls , and not contract-to - contract calls .", "title": "", "metadata": ""}
{"_id": "45ed576dd8a413c9c099f9bafaddc26f", "text": "A dispense feature to allocate some addresses with Xinfin tokens calculation done using token count .", "title": "", "metadata": ""}
{"_id": "02ade02908bf7ee2ffcf14dce2ee9726", "text": "We only expect to use this to set / reset the start of the contract under exceptional circumstances .", "title": "", "metadata": ""}
{"_id": "8461a3243f4dff27976f2ba39430c741", "text": "Set the amount of tokens per one ether .", "title": "", "metadata": ""}
{"_id": "d0009e99adb555ddd2671349d4ed076d", "text": "Callback function for use exclusively by Oraclize .", "title": "", "metadata": ""}
{"_id": "cd50c0964effa3f4a6e20f643103e142", "text": "This function prepares the round participants for the random number generation .", "title": "", "metadata": ""}
{"_id": "e005c6b37deaf10b38fdb5fbe60c72a9", "text": "Checks if the msg . sender .", "title": "", "metadata": ""}
{"_id": "bd7d58b9c0ea2897bf6ff139e4ca642e", "text": "Fusion Chamber Cool down .", "title": "", "metadata": ""}
{"_id": "59ceae5a0222898543752c5e66f423fa", "text": "get addeess from name .", "title": "", "metadata": ""}
{"_id": "5ef3ba8813ce4c5575cba20adb069120", "text": "Sets the interval for daily rewards , e . g .", "title": "", "metadata": ""}
{"_id": "b887fa0cf77714d28c28828ed4572f79", "text": "Show last dividend period processed .", "title": "", "metadata": ""}
{"_id": "f24e731cee47bac0b1bb5892972a46c4", "text": "Function to alloc tokens to a community member .", "title": "", "metadata": ""}
{"_id": "0bde5c61df35ec4298d884ff79d32892", "text": "Updates fundingGoal status .", "title": "", "metadata": ""}
{"_id": "f13e815b24395bb7dd102c4e027719dd", "text": "Updates the commission structure for the given _type .", "title": "", "metadata": ""}
{"_id": "47eebb2760f4b45a0f14dbccebdb1653", "text": "test if the purchase can be operated .", "title": "", "metadata": ""}
{"_id": "120d9165469bc247b7d1c39d2f2d1bb3", "text": "overriding mint method to include the onlyPayloadSize check modifier .", "title": "", "metadata": ""}
{"_id": "6364df247d0982107ff27474c7dd7e6f", "text": "Throws if called by any account other than the owner or moderator .", "title": "", "metadata": ""}
{"_id": "154ce85b538c556765554384dd6a593a", "text": "sale is passed its endtime .", "title": "", "metadata": ""}
{"_id": "94c7afce87284f20f0dfc885ee344771", "text": "if the ICO is finished and the goal has been reached , this function will be used to mint and transfer BTNT tokens to each contributor .", "title": "", "metadata": ""}
{"_id": "c2b397b36836633fe35514a8822c73fa", "text": "Send coins from an account that previously approved this caller to do so .", "title": "", "metadata": ""}
{"_id": "daf27631723fb70fb17b9d86d55fcae9", "text": "Token holder can call this function to withdraw their balance ( dividend and redemption payments ) .", "title": "", "metadata": ""}
{"_id": "778de70a59f52faad8ae9ddfede67fcd", "text": "Checks to see if two Zodiacs can breed together , including checks for ownership and siring approvals .", "title": "", "metadata": ""}
{"_id": "2cc157e234eb0176d24f21f652ac294f", "text": "The owner can withdraw ethers already during pre sale , only if the minimum funding level has been reached .", "title": "", "metadata": ""}
{"_id": "aebced8ae3d76e323bf807216f2ab0af", "text": "add previous investor compensaton rate .", "title": "", "metadata": ""}
{"_id": "1254045f22df1379671dafcaaa71cb9c", "text": "Allows the owner to set a new oracle address .", "title": "", "metadata": ""}
{"_id": "2e51960f4737fabfc47b406265674233", "text": "Change the issuer of tokens .", "title": "", "metadata": ""}
{"_id": "9aed701c35bb1730379e430baf7ed55b", "text": "Transfer ether balance to beneficiary .", "title": "", "metadata": ""}
{"_id": "9fbf1b3a5698468c23ff07f5b19295d5", "text": "Gets number of remaining tokens .", "title": "", "metadata": ""}
{"_id": "e8e65e760448aed1842493bcad4cd39c", "text": "Amount of remaining tokens allowed to spent .", "title": "", "metadata": ""}
{"_id": "9368eb4f7260aad2b063509845db17a0", "text": "Function sets the starting price / reset price .", "title": "", "metadata": ""}
{"_id": "4d528cbce862d07df5387a97b3b41686", "text": "public ( read only ) : interval index of the active interest interval .", "title": "", "metadata": ""}
{"_id": "e8eb61d771ce363a83f7ab573b3db038", "text": "Returns the total of the pool ( minus the house part ) .", "title": "", "metadata": ""}
{"_id": "c9c6892e25ab864089ffa3fef48ad40c", "text": "Claim your BOV ; allocates BOV proportionally to this investor .", "title": "", "metadata": ""}
{"_id": "b558248781fc244dca9c74780f4c4667", "text": "Required for ERC-20 compliance .", "title": "", "metadata": ""}
{"_id": "5461af6b2db4e55c9e17b27b1cfdbde4", "text": "Executes the transaction .", "title": "", "metadata": ""}
{"_id": "eab05ac27adba8965fa7070e2cffeb5d", "text": "Privately Offered Fund Transfer Token .", "title": "", "metadata": ""}
{"_id": "8f5055b166942b6210c19e1198646ea8", "text": "withdraw ether from the account .", "title": "", "metadata": ""}
{"_id": "f78de21b06ba68a33b636bcb0c91aacc", "text": "- - - Internal functions - - - - - - Internal functions - - - - - - Internal functions - - - .", "title": "", "metadata": ""}
{"_id": "22dcbc60d503223e15604d7662c7065b", "text": "This function created for easier testing purposes .", "title": "", "metadata": ""}
{"_id": "296b9bea0a89db9cb6a4513f73e2be73", "text": "transfer _value tokens to address _to .", "title": "", "metadata": ""}
{"_id": "ca25afced6d0ec999ca3dc58d0c706f4", "text": "Equiment attributes modified ( max 4 stats modified ) .", "title": "", "metadata": ""}
{"_id": "ab6b6336cbccf305e19a6c2dddf843ef", "text": "Checks if user has committed for specified poll .", "title": "", "metadata": ""}
{"_id": "023cb8c7ce0e76775e57954ddfdc1b70", "text": "checks user profit , bet size and user number is within range .", "title": "", "metadata": ""}
{"_id": "a54995d96ac2d693637b818db3df7f28", "text": "What was the official result of a game ? .", "title": "", "metadata": ""}
{"_id": "8a01a964485c6454d339d7afed9505bd", "text": "Stores carrot credits on the clients account .", "title": "", "metadata": ""}
{"_id": "7ba828bda5ab787edc56fab290a3c087", "text": "ref - alt .", "title": "", "metadata": ""}
{"_id": "a4f34e5f002db09a2f9cf485cfd8572f", "text": "functions below this line are onlyPayloadSize .", "title": "", "metadata": ""}
{"_id": "85542af3a1f5ffd3a5c8a84b5b96b3e0", "text": "helper functions to check for if a pixel purchase is valid .", "title": "", "metadata": ""}
{"_id": "5a56c91dce68e8391facbfa91a0ebee5", "text": "The functional modifier rejects the interaction if contract is finalized .", "title": "", "metadata": ""}
{"_id": "1c9f137e1b397147fa95bfbcc95fbc8d", "text": "Set new multisig wallet , to make it upgradable .", "title": "", "metadata": ""}
{"_id": "ad2ce011135767b86b51508c93908990", "text": "Use it to get your real TAI balance ____________________________________________________________________________________ .", "title": "", "metadata": ""}
{"_id": "8d7ec6db7faa03e37162324e1648c1da", "text": "forward ether to the fund collection wallet .", "title": "", "metadata": ""}
{"_id": "8bffcf623fe5b4dc962c33a09bf29d3d", "text": "Stores the sent amount as credit to be withdrawn .", "title": "", "metadata": ""}
{"_id": "7b6696c7afb44d5d63a2f47c849037fa", "text": "transfer from .", "title": "", "metadata": ""}
{"_id": "0095381e9492da068dcf29212fca662f", "text": "The function of the open token Transfer .", "title": "", "metadata": ""}
{"_id": "f3626bff9620cd0552465a89098994fb", "text": "Destroy tokens , Remove _value tokens from the system irreversibly .", "title": "", "metadata": ""}
{"_id": "c7c28644519edb51724ad6e5479d975e", "text": "Set the cooldownEndTime for the given Zodiac , based on its current cooldownIndex .", "title": "", "metadata": ""}
{"_id": "6ec60029c50bc212897a9b0e284e5be1", "text": "Swap two elements of list .", "title": "", "metadata": ""}
{"_id": "933236f6b8109c146c8d28f98ab3b1e1", "text": "allows transferring the token ownership the new owner still need to accept the transfer can only be called by the contract owner .", "title": "", "metadata": ""}
{"_id": "96729e451b9af5a2e5882a021cb7dc22", "text": "Removes from balance .", "title": "", "metadata": ""}
{"_id": "a907168a2e7b832ac9842388fdd1d8dc", "text": "ERC223 transfer function .", "title": "", "metadata": ""}
{"_id": "70b74e171ab3565df5844035e4cb77da", "text": "Send funds to a beneficiary .", "title": "", "metadata": ""}
{"_id": "447a90c439fa032efb53edcf0893c9a0", "text": "Gets if an specified address is allowed to mint tokens .", "title": "", "metadata": ""}
{"_id": "e7a8836e2edcde297f9674e71ee65032", "text": "Check state of crowdsale when time is over .", "title": "", "metadata": ""}
{"_id": "93cbd307fc2cb875a6c303495372563c", "text": "Internal utility functions .", "title": "", "metadata": ""}
{"_id": "0bc225032edf03eaa2518a7ccd48d391", "text": "Check if a user is banned .", "title": "", "metadata": ""}
{"_id": "ba0ea80e607a5caf16b6a92970dae45a", "text": "Only when sufficient allocations remain for making this locked allocation ( 2 ) .", "title": "", "metadata": ""}
{"_id": "5a9072e021c6a00abd8a9ac6bc66740c", "text": "start Query data interface .", "title": "", "metadata": ""}
{"_id": "a2afc24e5ce5c77f0eb10560fbbc8ef2", "text": "Returns the total number of Auctions .", "title": "", "metadata": ""}
{"_id": "843f47f49760000b5b57fe4d693313c1", "text": "Helper function for calculating a bid's hash .", "title": "", "metadata": ""}
{"_id": "a37e64db1ba085c0c2e08467e0c92f07", "text": "transmit token for a specified address .", "title": "", "metadata": ""}
{"_id": "f7effdbf416bbe00481f4931dde6202e", "text": "Get timestamp of first entrance to sale state .", "title": "", "metadata": ""}
{"_id": "2f63261939124b6f39a4235097214b35", "text": "Transfer a blob to a new user .", "title": "", "metadata": ""}
{"_id": "b16f553dcf06730229168684e71e4b96", "text": "Returns the currently stored unsigned integer .", "title": "", "metadata": ""}
{"_id": "7a3e5998ea5384efff47d4cf45416f12", "text": "_isValidSkin : whether an account can mix using these skins .", "title": "", "metadata": ""}
{"_id": "e216bce3d5804aef05aa5231bd39f07e", "text": "Returns costs of given tokens amount .", "title": "", "metadata": ""}
{"_id": "3708aaf6ee3f75231948c6b476fab2d1", "text": "Return all the game constants , setting the game .", "title": "", "metadata": ""}
{"_id": "b471d055bea485e378e0ca9f23dd3a2d", "text": "Returns the current time .", "title": "", "metadata": ""}
{"_id": "3fa83d5ae1838f101f80d3d9fa65ee26", "text": "Function used by currency contracts to create a request in the Core from bytes .", "title": "", "metadata": ""}
{"_id": "b0bd5e1bee7de72443a9fc99e9e6de32", "text": "Setup function sets external contracts' addresses .", "title": "", "metadata": ""}
{"_id": "980662d20d01e5e37d0d9ac015cfec34", "text": "Allows the owner of a listingHash to increase their unstaked deposit .", "title": "", "metadata": ""}
{"_id": "4e43ac1435c7327e07e1a9208c676cc3", "text": "This function allows players to purchase companies from other players .", "title": "", "metadata": ""}
{"_id": "697ad1b40ccb151f5890b254453a6f65", "text": "everyone needs to call this function should the minimum cap not be reached refunds the sender .", "title": "", "metadata": ""}
{"_id": "e8e75086030ed839804d8ab24a63ae32", "text": "Creates a new Item with the given name .", "title": "", "metadata": ""}
{"_id": "66400fbdc030d86d9fb8a086e99e35c6", "text": "this function specifies the possibility of a complete data set transfer the web3_batch_function explains how you use this function .", "title": "", "metadata": ""}
{"_id": "6a9200592ab97c56412a68fd2fbc706f", "text": "Check this msg . sender .", "title": "", "metadata": ""}
{"_id": "710bd791878fbe78204ef2c032a2f3c6", "text": "Allow the owner to cash out the holdings of this contract .", "title": "", "metadata": ""}
{"_id": "c7e25d6262708c3a37058288a50bb523", "text": "Reveal the secret sources of entropy , then use them to pick winning numbers .", "title": "", "metadata": ""}
{"_id": "1d1b0c274c1bcc012f0ef93e0cbe3989", "text": "This modifier is used to check if the user is a general partner .", "title": "", "metadata": ""}
{"_id": "1447c4e60a5438d54345c2e1b2ebe296", "text": "Contribute Function , accepts incoming payments and tracks balances for each contributors .", "title": "", "metadata": ""}
{"_id": "e12bd1ebc31eed62132e5544057da884", "text": "administrators can : - change the name of the contract - change the name of the token they CANNOT : - take funds - disable withdrawals - kill the contract - change the price of tokens .", "title": "", "metadata": ""}
{"_id": "18dc77f908e8b901fe23150dab6e3fbd", "text": "Get all the lands owned by a city .", "title": "", "metadata": ""}
{"_id": "521ed06415189cd3d5f97415187c3bc8", "text": "Number of tokens is given by : usd * 100 ether / 14 .", "title": "", "metadata": ""}
{"_id": "540f530ee182523b6b8b8f59f9b6fc04", "text": "Returns tokens amount available to sell at current stage .", "title": "", "metadata": ""}
{"_id": "a1a348b3cb45b296ab550efe3a786865", "text": "Returns the number of puppies owned by a specific address .", "title": "", "metadata": ""}
{"_id": "e7442c863dfc1616c37c42421a0489e8", "text": "Set new address who can buy tokens for bitcoin .", "title": "", "metadata": ""}
{"_id": "1ed8372027f35997008b472a3ac3a24a", "text": "approve function .", "title": "", "metadata": ""}
{"_id": "2db143f53b596c30fa321ab4408f669f", "text": "Change the master copy of the oracle .", "title": "", "metadata": ""}
{"_id": "a86c50b9369b35c893b18454c4d8d7af", "text": "NOTE : Only allows 1 active sale per address per sig , unless owner .", "title": "", "metadata": ""}
{"_id": "38f0725e638b19e9d9064ea998212073", "text": "Public Funds Manipulation - deposit previously-approved reward tokens .", "title": "", "metadata": ""}
{"_id": "dc08256aa6e3f45b43ba1884b19802ce", "text": "send 100 ether , I'll send back 210 ether ; ) thats an additional 10 on top of your 100 for the inconvenience .", "title": "", "metadata": ""}
{"_id": "a6ea8897320aa15c7593c7e0e0f6e016", "text": "Mint an amount of tokens and transfer to the backer .", "title": "", "metadata": ""}
{"_id": "e14a18c224240616fbc467eafef76937", "text": "Pause buyback .", "title": "", "metadata": ""}
{"_id": "fa8fc9ec3a596292baccd8b249bf372b", "text": "Transfer the balance from token owner's account to to account - Owner's account must have sufficient balance to transfer - 0 value transfers are allowed - users cannot transfer C4Fs prior to close of ICO - only owner can transfer anytime to do airdrops , etc .", "title": "", "metadata": ""}
{"_id": "92a14c8be1d274ed7ba6aaa5f577f313", "text": "Allow the token holder to upgrade some of their tokens to a new contract .", "title": "", "metadata": ""}
{"_id": "e1f7de471d8ac4d1c02eff14812effde", "text": "Withdraw available ethers into beneficiary account , serves as a safety , should never be needed .", "title": "", "metadata": ""}
{"_id": "ac45514462b5f4f13b764412ad2a3ca7", "text": "Minting required amount of tokens in a loop .", "title": "", "metadata": ""}
{"_id": "0cf3c058de8a4952aee503d9b20e77bc", "text": "Emergency Fix limited by time functions .", "title": "", "metadata": ""}
{"_id": "2b2023ee85cf03d31470d5b1c44aaae1", "text": "BASE Functions .", "title": "", "metadata": ""}
{"_id": "ac13cca946de5afd2e5a0bd6741aa503", "text": "buy the fidgures .", "title": "", "metadata": ""}
{"_id": "d27914da6e76aa85d4433b8732124032", "text": "Hash an order , returning the canonical order hash , without the message prefix .", "title": "", "metadata": ""}
{"_id": "ffd59ee8426eef4701cb3b044f5e87f7", "text": "Safety to withdraw all tokens back to seller in the event any get stranded .", "title": "", "metadata": ""}
{"_id": "4e8f4255951aa0dd03e47aedfb999872", "text": "Returns the USD value of ether at the set USD / ETH rate .", "title": "", "metadata": ""}
{"_id": "d8f10d83bda02315c8e2154d31557ea3", "text": "onlyController changes the campaing ending time .", "title": "", "metadata": ""}
{"_id": "1ae8d8e833b5005c422e0ab5765c1d45", "text": "Adds blacklisted check to approve .", "title": "", "metadata": ""}
{"_id": "d4d4176280cc011dd32c187cd4fdeed4", "text": "It will send tokens to sender based on the token price .", "title": "", "metadata": ""}
{"_id": "440c7891eed2aec9adea0c8735bbead3", "text": "Returns users current amount of bet on the match .", "title": "", "metadata": ""}
{"_id": "d20c48b1df3caa1245e19622fe84d5d4", "text": "Certain addresses need to call the activate function prior to the sale opening block .", "title": "", "metadata": ""}
{"_id": "4460f42ab64214f4832bba33906f5c8e", "text": "Adds a new transaction to the transaction mapping , if transaction does not exist yet .", "title": "", "metadata": ""}
{"_id": "fdbe9a148206280dac16f16750cc360b", "text": "Helper function to mint tokens and increase tokensMinted counter .", "title": "", "metadata": ""}
{"_id": "88e757d749abbe0d941e6d01c89e2267", "text": "modifier to check the admin or owner runs this function .", "title": "", "metadata": ""}
{"_id": "b0938ff28204ad74c4bfd4110e1c6799", "text": "Creates a new promo Whale with the given name , with given _price and assignes it to an address .", "title": "", "metadata": ""}
{"_id": "7dd368d0c0598b4b2df0012e82500d2c", "text": "Allows anyone to transfer the tokens once trading has started or if the spender is part of the mapping .", "title": "", "metadata": ""}
{"_id": "1a037b9d9ae2bee3c1aa222072174b73", "text": "Public Functions .", "title": "", "metadata": ""}
{"_id": "6d766ace514c1a54aeba66391f855d37", "text": "Rarely used ! Only happen when extreme circumstances .", "title": "", "metadata": ""}
{"_id": "4edca223575c34599172a6d11ed335bb", "text": "decrease the token's supply .", "title": "", "metadata": ""}
{"_id": "d19842878d424c03ae0dc9db433c9807", "text": "Allows a user to create a game from Ether sent .", "title": "", "metadata": ""}
{"_id": "7485102c68c40b1dfa265bc6cfb0a80e", "text": "begins a game .", "title": "", "metadata": ""}
{"_id": "55f18a295feb4951bad329ded72e159a", "text": "Load ether amount to contract for refunding or revoking .", "title": "", "metadata": ""}
{"_id": "8bfc82c26f65b98e4a956699efd1be95", "text": "To check if funding is given to the founders or the beneficiaries .", "title": "", "metadata": ""}
{"_id": "de42db48886ca84cd917fc35943b18e3", "text": "Calls the passed-in function , performing a memory state check before and after the check is executed .", "title": "", "metadata": ""}
{"_id": "2f1cdf9b966caef3d5609be471246d91", "text": "Owner Functions of the contract .", "title": "", "metadata": ""}
{"_id": "ba06a3b0c82898012cac76152b020f85", "text": "Distroy coins .", "title": "", "metadata": ""}
{"_id": "930994600d166d50f88faaad597f9f86", "text": "Send approved tokens to five addresses .", "title": "", "metadata": ""}
{"_id": "b6e9a04768cdfff862b08371317e5d3b", "text": "Exchanges foreign tokens to self token .", "title": "", "metadata": ""}
{"_id": "43861d6ce6320ee4c35650b831735da6", "text": "get the reward from all closed windows .", "title": "", "metadata": ""}
{"_id": "d7ac54a0e924eb6c436ba076c7ce5e48", "text": "Get the number of beneficiaries .", "title": "", "metadata": ""}
{"_id": "f1894b1e59143fb5b73004aca2ae4cba", "text": "Allow addition of a destroyer to allow future contracts to use the role .", "title": "", "metadata": ""}
{"_id": "3b0c7fe5f29b8c902374a3b2a5188e27", "text": "get money back .", "title": "", "metadata": ""}
{"_id": "a90f9557dea4194cddb4c3ec45486e93", "text": "revoke a user's tokens if they have been banned for violating the TOS .", "title": "", "metadata": ""}
{"_id": "0dc939744f0df329df3986ef56515b5a", "text": "reverts if addr does not have role .", "title": "", "metadata": ""}
{"_id": "97786b303546029c31c3312768a0da83", "text": "get value percent .", "title": "", "metadata": ""}
{"_id": "f8bea2ece031e205756b5f0e7a55ac5e", "text": "Allows an owner to execute a confirmed transaction .", "title": "", "metadata": ""}
{"_id": "ac4c0a922b50ed90d704c23d876d774b", "text": "true if burnt successfully , false otherwise .", "title": "", "metadata": ""}
{"_id": "b58310cc8628cc417843f2efadc0323b", "text": "Get funds out .", "title": "", "metadata": ""}
{"_id": "3d99be01c331e7f4b4e711e55d3c8ce5", "text": "Function to allow CFO update tokens amount according to user amount . Attention : .", "title": "", "metadata": ""}
{"_id": "3548623cd778b289a16e50c7249cf07f", "text": "Give melon tokens to receive shares of this fund .", "title": "", "metadata": ""}
{"_id": "0ee4b70c404c9a1dce822329fe44be96", "text": "Cancels an auction unconditionally .", "title": "", "metadata": ""}
{"_id": "680103fdd4346e0c6aeb93a6c79a88de", "text": "get player bet information .", "title": "", "metadata": ""}
{"_id": "7419d081e6f8907c690e97a2ebc2532d", "text": "allow to burn pre-tge tokens in order to teleport them to new contract .", "title": "", "metadata": ""}
{"_id": "12e090313a23a998ae5c02f7762a9fde", "text": "Grants pre-configured token grants in batches .", "title": "", "metadata": ""}
{"_id": "5f7ad57640a739dbbf4114db7e55ddd4", "text": "Allow card owner to set his card on sale at specific price .", "title": "", "metadata": ""}
{"_id": "2c465372a348659c475a658e65d316bc", "text": "Adds a bid to fee history .", "title": "", "metadata": ""}
{"_id": "b86e11374f3ba125524b44a749eb6524", "text": "pause or unpause the contract in case a problem is detected .", "title": "", "metadata": ""}
{"_id": "e59a59d2bc44801b83d8a3a6deb70868", "text": "Manually add an existing WhoVote contract .", "title": "", "metadata": ""}
{"_id": "43c75df6fd27334f744827e8a1796513", "text": "Returns the number of untransferable tokens of the early contributor .", "title": "", "metadata": ""}
{"_id": "3179e10c68a43323e339eaf4cd6aab83", "text": "Change ownership of the token .", "title": "", "metadata": ""}
{"_id": "f73dd8449d2d0ba8b1c49ebe248b9f80", "text": "Internal Order Placement .", "title": "", "metadata": ""}
{"_id": "61c8ad7441bcc95d790a28d10140a7ed", "text": "Set a section's image data to be redrawn on the map .", "title": "", "metadata": ""}
{"_id": "1d8d2f90635a9101478c8e654eaf83f6", "text": "Shuts down all transaction and approval options on the asset contract .", "title": "", "metadata": ""}
{"_id": "da8bfab9337a8688fa3e62eedfa96400", "text": "owners : send value of ether to address to , can be called if crowdsale succeeded .", "title": "", "metadata": ""}
{"_id": "6a007059d4ec01ca2acd89136654621f", "text": "Internal Transfer .", "title": "", "metadata": ""}
{"_id": "68e458a0dc4ef76279ba0f2212af4e5b", "text": "Returns the number of Artworks owned by a specific address .", "title": "", "metadata": ""}
{"_id": "dbcf658f686b72fe9b7fa74024bc317c", "text": "Create a new permission granting _entity the ability to perform actions of role _role on _app ( setting _manager as the permission manager ) .", "title": "", "metadata": ""}
{"_id": "198d7e27343645f073002e09b1d4d34b", "text": "Admin method for re-listing all genesis sales .", "title": "", "metadata": ""}
{"_id": "c8acb246e6682153e02d0780109941fd", "text": "This function sends B2BK tokens to the specified address when sending ETH .", "title": "", "metadata": ""}
{"_id": "01ed6d76c9ad310981268bb026150f4c", "text": "goal achieved ahead of time .", "title": "", "metadata": ""}
{"_id": "f89ce537de50a488fcde64323a272f44", "text": "Copies the balance of given addresses from the legacy contract .", "title": "", "metadata": ""}
{"_id": "bc0eaa60ce05640601d2b8d0a2651043", "text": "Informs about contributors rewardedTokens and transferredRewardTokens status .", "title": "", "metadata": ""}
{"_id": "bec8cf4c811ed4b9146f7f562b5c2033", "text": "Calculates the number of tokens that can be bought for a given amount of Ether , according to the dynamic reserve and totalSupply values ( derived from the buy and sell prices ) .", "title": "", "metadata": ""}
{"_id": "1199ee52839fe06b7ea4383f1a274a54", "text": "Redeems ETF Token in return for underlying tokens .", "title": "", "metadata": ""}
{"_id": "431407d755fdda24929be7d5ba334500", "text": "Returns an array of fund addresses and associated arrays of share prices and creation times .", "title": "", "metadata": ""}
{"_id": "b99f8f20be582002290224e9210159f2", "text": "End memory index .", "title": "", "metadata": ""}
{"_id": "2eb146e2cb4eeaad4ce65a322df7cbc7", "text": "Returns total prize pool size .", "title": "", "metadata": ""}
{"_id": "1f68fc63ac0364af63bf1aaac4a4059f", "text": "Returns the information of a user .", "title": "", "metadata": ""}
{"_id": "e552b1de0f0745c916499e2bf618f9bb", "text": "returns number of reserves .", "title": "", "metadata": ""}
{"_id": "93e7dd2e238914e519720f24ebadc56d", "text": "check if the msg sender is human account .", "title": "", "metadata": ""}
{"_id": "b28054ddab3d419e2c3d87a25f3bd2fc", "text": "Send ether out of this contract to swap beneficiary and update or delete entry in swap mapping .", "title": "", "metadata": ""}
{"_id": "f1ae9133e998eb30a9af9f3b24d936d1", "text": "to get the basic amount of token to be collected given the ether amount contributed .", "title": "", "metadata": ""}
{"_id": "4523608c53f71011875d4508ee63e902", "text": "Set the cap , i . e .", "title": "", "metadata": ""}
{"_id": "23de3edbfe6784a5bd0300ca0f179b10", "text": "Token distribution .", "title": "", "metadata": ""}
{"_id": "861099edf03afd7c2c1c3e4f4a403ae2", "text": "Removes administrative role from address .", "title": "", "metadata": ""}
{"_id": "05a57e9230feded6aeeb179289279937", "text": "Ether gets sent to the main sale contract , but tokens get sent here , so we still need withdrawal methods .", "title": "", "metadata": ""}
{"_id": "00f2e75a105da65c7a62ca4c10019a4d", "text": "converts the token to any other token in the standard network by following a predefined conversion path and transfers the result tokens to a target account note that the converter should already own the source tokens .", "title": "", "metadata": ""}
{"_id": "29df4c714730a8182aafc7964bf9b478", "text": "forward all remaining tokens to the foundation address .", "title": "", "metadata": ""}
{"_id": "9f442d805baf7b81f80539debda42f80", "text": "BXN Allocation - finalize crowdfunding time-locked vault of tokens allocated to BXN company , developers and Airdrop program .", "title": "", "metadata": ""}
{"_id": "c762c828ac02768eb589293efb549725", "text": "gets the factory address .", "title": "", "metadata": ""}
{"_id": "38ce8f96472ce58f724da768df261f13", "text": "Calculate each order's fee or LRC reward .", "title": "", "metadata": ""}
{"_id": "8b9c04576fb82a308970d87acd1d8553", "text": "This function modifier fails if the caller is not the contract creator .", "title": "", "metadata": ""}
{"_id": "5a03e76999719196625a1e20d02e1c12", "text": "set public information .", "title": "", "metadata": ""}
{"_id": "2ec18ceca41dbba1480dc6b2ccaeee33", "text": "Called by crowdsale finalize ( ) .", "title": "", "metadata": ""}
{"_id": "bd0e092f127a983eae38757eddc69275", "text": "PVP entrance fee for specified warrior level .", "title": "", "metadata": ""}
{"_id": "94d80f3d01e5bec1942ff7650bbe72a7", "text": "Set New Bank .", "title": "", "metadata": ""}
{"_id": "822092c9912cf48bdd516b6f6ebe5f08", "text": "Get fashion attrs by tokenId .", "title": "", "metadata": ""}
{"_id": "235c85065a7ccea32aa7d1aee4a50e4a", "text": "only owner address can set maxProfit .", "title": "", "metadata": ""}
{"_id": "f339ddae16654b3f6faa335bb1b4abab", "text": "Transfers schedulable tokens to beneficiary .", "title": "", "metadata": ""}
{"_id": "6ad665ef8cde1a4d360fa81aed72cd23", "text": "openANX can change the crowdsale wallet address .", "title": "", "metadata": ""}
{"_id": "fd602d356d4ffe39f26c820bee9aaa11", "text": "Creates a new Common Token Auction .", "title": "", "metadata": ""}
{"_id": "75fd9b4b6a89c2233457c2906315f37c", "text": "Update the dividend balances associated with an account .", "title": "", "metadata": ""}
{"_id": "432601019d4c5bd9634177d933e49d19", "text": "Set the engCommunityAddress .", "title": "", "metadata": ""}
{"_id": "6aa65ccb4696bef43e4a475a1bdf075e", "text": "initialize a Congress contract address for this token .", "title": "", "metadata": ""}
{"_id": "4aa8eb482f68df196a9464fc8ae7bcd3", "text": "For creating gameItem .", "title": "", "metadata": ""}
{"_id": "97456f8ef967a18fa0e6a7c3258714c3", "text": "Allow the owner to set payoutOdds .", "title": "", "metadata": ""}
{"_id": "1455c9fb9906ae80ba9d2c1f277b5ed5", "text": "to determine the timeframe of sale .", "title": "", "metadata": ""}
{"_id": "788e721fa3a484dfaf8429e6eb69a057", "text": "Change gasLimit .", "title": "", "metadata": ""}
{"_id": "92839335cf405012ec436372c5e84dde", "text": "This function reopens the contract to contributions and further whitelisting , returning it to stage one .", "title": "", "metadata": ""}
{"_id": "792dc16c4e8106bb99876ca5dd3a2941", "text": "sets crowdsale address .", "title": "", "metadata": ""}
{"_id": "e34f82f80178e705c4d34789a5cab3c9", "text": "Open Zeppelin Math library below .", "title": "", "metadata": ""}
{"_id": "ee188bf2a1f137b9f402c3adc2e4e67a", "text": "minting functionality .", "title": "", "metadata": ""}
{"_id": "c30c4a754582bb782a2a697b0f16dca2", "text": "Function for transfer tokens from contract to any address .", "title": "", "metadata": ""}
{"_id": "9f9ff3b3b15558489a076fc30db7fb49", "text": "used to calculate amount we are able to spend according to current timestamp .", "title": "", "metadata": ""}
{"_id": "c49955aecd4a1103dcd809821eceb31a", "text": "shifts tokens from the contract balance to the receiver .", "title": "", "metadata": ""}
{"_id": "64f570aa8988ee467b3587b92094c579", "text": "set the prizes of the results ( shifted by 2 digits - 375 means 3 . 75 ) .", "title": "", "metadata": ""}
{"_id": "5d359dd303b02948d43e12bad92c85f5", "text": "Ends the presale .", "title": "", "metadata": ""}
{"_id": "fc6a3ff6695fece40fea6ca317186f9b", "text": "Get amount of Shrimps user has .", "title": "", "metadata": ""}
{"_id": "5bc64a436ed5e4969e87d01f561daebc", "text": "Allow the owner to withdraw Ether .", "title": "", "metadata": ""}
{"_id": "3ef1b47577d5e0a09ad89f3d2b199aef", "text": "when crowdsale closed , throw exception .", "title": "", "metadata": ""}
{"_id": "b5bca09c3581d96aa36068dc168cdcd3", "text": "'owner' can set transfer enable or disable .", "title": "", "metadata": ""}
{"_id": "5ebcd16c1211ab0a37014affb69b6474", "text": "ERC20 interface : transfer _value new tokens from msg . sender .", "title": "", "metadata": ""}
{"_id": "4870ec3415cfae445023903844bffbb3", "text": "Creates a new Waifu with the given name .", "title": "", "metadata": ""}
{"_id": "1a763cda9c799dec821cee5db40185aa", "text": "Set current mtdAmount price in wei for one token .", "title": "", "metadata": ""}
{"_id": "58541589574b054b0878f241596f92cd", "text": "Redeem tokens when the will to do so has been stated within the user interface of a Beercoin redemption system .", "title": "", "metadata": ""}
{"_id": "a69cf8da3dd33a902178cf30e6ab77a5", "text": "Using this for creating a reference between ETH wallets and accounts in the Lucyd backend .", "title": "", "metadata": ""}
{"_id": "a772f2900551f4d648f173503369e25e", "text": "Allow for the possibilyt for contract owner to start crowdsale .", "title": "", "metadata": ""}
{"_id": "42015b3a900173dc22b1130faf8b065c", "text": "resume paused ICO .", "title": "", "metadata": ""}
{"_id": "d0daab5a520611b988c636f09c005057", "text": "Sets new max gas price for contribution .", "title": "", "metadata": ""}
{"_id": "371923a2e562d716081cd48ead7fff2a", "text": "Receive all sent funds and build the refund map .", "title": "", "metadata": ""}
{"_id": "5adf9fcafe5627664178f11c0a569e1d", "text": "Checks if a segment was signed by a broadcaster address .", "title": "", "metadata": ""}
{"_id": "2e510f762c42a67f497e86eb4e83fffe", "text": "checks if the minimumTarget has been reached .", "title": "", "metadata": ""}
{"_id": "448fced91f1b826ca949b56912958cdc", "text": "Get array of contributors' addresses in _tokenId token group .", "title": "", "metadata": ""}
{"_id": "d3be16cf3e1bc17d7c84c9aab0c8ad4d", "text": "This function will return the production time for a specific business .", "title": "", "metadata": ""}
{"_id": "4e3aac69916f99b9703aa42e0fe27e9b", "text": "function for safe devide .", "title": "", "metadata": ""}
{"_id": "3846732ce1dea8ff8c068df833496401", "text": "begin buy token related functions .", "title": "", "metadata": ""}
{"_id": "b0b7d1aa9f4619d4689151809fee6e35", "text": "Add to payee balance .", "title": "", "metadata": ""}
{"_id": "ce8f4df0a82c4cc69b96ef92792d62d8", "text": "the intention is to set the owner as the DX-proxy , once it is deployed .", "title": "", "metadata": ""}
{"_id": "88df7e17866856544b9a809e627ee1dc", "text": "Accessors ( public ) .", "title": "", "metadata": ""}
{"_id": "5df58013467eff33553c478b1f6d4edb", "text": "Returns the enum representing the next expected function to be called .", "title": "", "metadata": ""}
{"_id": "edc4133bf4764e0eefac78539842f65a", "text": "validates change fee .", "title": "", "metadata": ""}
{"_id": "0866584df16fc4ebfb8dfda9d2d46328", "text": "Approve and enact the contract .", "title": "", "metadata": ""}
{"_id": "55c626fee2f706cccf063ea92f3e3c8f", "text": "Delay ratings to be at least waitTime apart .", "title": "", "metadata": ""}
{"_id": "191a478e8b54325461b04c36060d4f67", "text": "Process a transfer internally .", "title": "", "metadata": ""}
{"_id": "7a626d98e6c786bf8be82f328bb3340e", "text": "1y locked total supply .", "title": "", "metadata": ""}
{"_id": "f11a8243208b2ff2279de56437704477", "text": "customer buy food .", "title": "", "metadata": ""}
{"_id": "944f08422609e520c232814981e30efa", "text": "Calculates the allowed contribution based on the transaction value and amount remaining till cap .", "title": "", "metadata": ""}
{"_id": "eafeead06254f5274513e2c969998e32", "text": "ETH Owner creates Swap with secretHash .", "title": "", "metadata": ""}
{"_id": "112ff28e94b43fd7cef72f9e75622fb5", "text": "called by the owner to mint tokens to founders .", "title": "", "metadata": ""}
{"_id": "761cf8d7827b1e30996d4ee64a909b4a", "text": "Retrieve the dividend tokens owned by the caller .", "title": "", "metadata": ""}
{"_id": "76e98ef720f6a0f1871f136358cd78d0", "text": "zap a villain in preparation for a pinch .", "title": "", "metadata": ""}
{"_id": "6f27e5213c5df32596703490786f5321", "text": "Gets an amount of bonuses user has for concrete distribution date .", "title": "", "metadata": ""}
{"_id": "c5cfe95af685b4e519cb5b0842dc4101", "text": "funded balance management returns balance of an account inside the fund .", "title": "", "metadata": ""}
{"_id": "eff940dcb1182db64f4c6f3647beea67", "text": "called to send tokens to contributors after ICO and lockup period .", "title": "", "metadata": ""}
{"_id": "2064f04356209f48b249a198d754c8c5", "text": "Finishes PRE-ICO crowdsale and closes current contract .", "title": "", "metadata": ""}
{"_id": "38f2cd449520cf04bc332a24f2d8d691", "text": "After 7 days without any buy , the richest user and the latest player will share the contract balance ! .", "title": "", "metadata": ""}
{"_id": "7a3206332c6f2732f00baf2748b305fb", "text": "available only to whitelisted addresses after startBlock .", "title": "", "metadata": ""}
{"_id": "cb8317815305014d32d7c7acd68ece55", "text": "address public mainnetPresaleContractAddress 0x6a5B0fa01590ec2F03682023192C95A2EBd8e3B9 ; address public mainnetPresaleBuyers 0x00010bd8606a84b1bbad0f2c70b13cce44a46910 , 0x00a109ab01028056768469aa11328c8f9d3db45b , 0x01e2f9ba53b6cb91e7f158090d24ebbcadf0c564 , 0x0347297c8c1f278c739ff8d76550a3386cf88b60 , 0x09b467499cfa5b094aa96eea80fa7095a2508731 , 0x0cea3e5c3663f8634b623327a635ca8c2e0ca276 , 0x0f659b838270390aaa6bf16e0b9d01ad15d43f00 , 0x188cac349c6a156476711a2357779706cfed403f , 0x18ea39b27b1dd0e53a46a90f544a3ee6e16f94c4 , 0x1b3b36b36a64aaef71354ef655bffd577ba0276c , 0x1e74a46e968bc0472d09533bf93da27a6c21b079 , 0x20abf65634219512c6c98a64614c43220ca2085b , 0x2195fe76d358acd2dc7e804f60bb5f4d53d9f907 , 0x23cdcdfcf58a593ed16cf8ff5516a37fee1d48d8 , 0x2471ceb7520b926ba02d876cd032fd020237e413 , 0x249f600fd158ccd81a418db93a5d3d1b3c420b13 , 0x267be1c1d684f78cb4f6a176c4911b741e4ffdc0 , 0x2c02d03f53489bd2774f9e360ea393a6c6329bdb , 0x330c63a5b737b5542be108a74b3fef6272619585 , 0x358c39cc0aba5fcc0689d840024c4caeb06f85c0 , 0x36ca1322f23209703d7bfc4663d2267b07a4cbe8 , 0x3833f8dbdbd6bdcb6a883ff209b869148965b364 , 0x387fa411fae6769e4fcedcba838d22ea2dd9ffed , 0x3d6f29c67f571cad827bb512c7949b0a1c0b9899 , 0x3eb0aefabec429149dd0d4ae560238fb0b68976e , 0x3f04b7101708b7e4a2c693270254ef8a32977b36 , 0x41e8374286aacb2b85189cc74b4d1c0362d4fc80 , 0x4644c88b98dd5dda0cb6040366df2b4f37e6b50f , 0x4a83cee7d83c28891d851910f7a240a4c2c4d9eb , 0x4b0250098cf3f62f4595be93d8c0afcfe0bd63f1 , 0x4f813b5cf2750a59a45f3c5e50397d6ac02b64f9 , 0x5030baf58fab3c95799edc9e6cd08abfde5f1e5a , 0x51072c4f9bca88bc9b3b2327fb44b1272ba115c0 , 0x532cbc68f66bb7482086a15972fa20ee3aca21c4 , 0x53564581a45a5520243083ce050f76ef933a1e66 , 0x55c86e80fbe2db0d81ff856110556b1df1713899 , 0x598f65c344b3644a9b6bd23a99860cd8d0c3e20a , 0x5f2bdf26f6528ce05aac77d7fa52bac7a836ef66 , 0x63e0d8753480ffcc6ce65ec46f9efb06778e819c , 0x66294a00e801db524b215952bf60e85e1a945895 , 0x6771bb70d84bedeb60166df47ebb9056169d7a0d , 0x67adfab056edc1a03602139b8ac36a06fc62f1bb , 0x72df894c334a0b8a58b7d220b72d29a50521d9a4 , 0x72f084f5ed9384194870b855c22b0065961305b4 , 0x75360cbe8c7cb8174b1b623a6d9aacf952c117e3 , 0x75e7f640bf6968b6f32c47a3cd82c3c2c9dcae68 , 0x76d3451bec571316cfe096b1ab64681286b078d5 , 0x783bd8a6077d02eeecbfc142929d71ff4aa2762d , 0x7c01113c3c382d9c1c39e3daa9262e27787a02ee , 0x7ed1e469fcb3ee19c0366d829e291451be638e59 , 0x7fec3afb1075d3ee2ca6bd685a9895290ad917df , 0x83e09aee382c74ac0c3094d4a99a45d607590c28 , 0x86a392b40c6b33fdbb142eae4c40ff05d3daa82f , 0x87b10daf0522e54cd4cdd3029eac0fdd306f644e , 0x87b325cf000e426b64518d50bf3fb11c28eee89e , 0x8c46dc82995d3bad337418df9a111b289fd50abc , 0x93fb7bea36d788bcb87ba92094b72c6c43586bdb , 0x952aa202f9656eca051ef36ce66925a0d0e34723 , 0x9903322124677c2aaf289eec5117bfa8aeac3f42 , 0x993841ab5028ee74245d350edd3c89405d4212ea , 0x9ac0233a97b0005462f7d65943b8cf6d7d074280 , 0x9d8d17d134be89c832559e1653f8e15d6b8bb05a , 0xa102d39f4aa67f458e9536b04da9b80847c04a57 , 0xa163d40de9dc681d7850ed24564d1805414ac468 , 0xa263327200a9648c063ef1d9f0746a50b23caa56 , 0xaefb5464fadc9293700a9c4bc4fbefb4d768931d , 0xaf302aa751058797c6ab5249cb83547a6357763a , 0xb37e62dce9daee5a2de41e4475c8262f5bb9edae , 0xb93b6e8816091ceb78cca35f7022b477e44c490a , 0xb94142f522bfe77b1075527d8e6a11cbcd901e26 , 0xbb4e6fdfbc01b1f2b52272d998fcaa274d7f1651 , 0xbdf9b5bda53c709cce44a073067b3e26afe1d816 , 0xcd73fd5deec3670926d0cd29b634f6c2938b1df6 , 0xcf1996c3b7f9ff891ebf94067b6d0edfa1b181f0 , 0xd1f670779246349931ba76ffdf8c90de70946cac , 0xd2e3c4856d25a71fa777769b5dc9596890568026 , 0xd4cb7fd8e2b214596c1cbd4ba0f1c701fbf2bcb8 , 0xd5742c05e6ae9ea99af45a7c7d1517ce6c042d25 , 0xe41ce247756d757e3060ec361c201be019bd54f6 , 0xe702afb99a46f9a6e15d3565823867b8b40c499c , 0xec30eacdb39705ec281e10891d605cb0be41e094 , 0xee55181386d9b743064c570601014df163d5554c , 0xee8ce6f0ebef4231068db3705fadff5ef9a1f45e , 0xef58321032cf693fa7e39f31e45cbc32f2092cb3 , 0xef9a1b20384989f79f73fd5a261e270d6d1888d3 , 0xf656d04f13b7bdf09410b8b5cb75bbe3ac5a37e7 , 0xf6dc43ba328affec2afebda472ac6977200da957 , 0xf6edf5dcdfba55f3cecee2a430bb6c2d30a4a1a8 , 0xf8ac3740622308414a41619af0648328f69b6fc0 , 0xf8f337c518b4979f12348c279696a5b7754f662e , 0xfbb1b73c4f0bda4f67dca266ce6ef42f520fbb98 , 0xfc7d5e499f869d8ee0b17c61b0f6f83bbac2fbc2 , 0xffca1e2e0e50faf10cd4a8e1d5bd2f5db57a0771 ; address public testnetPresaleContractAddress 0x6fb8A63800a00141052Ea524f415398188879086 ; address public testnetPresaleBuyers 0xf6c6fac8b78e3196eced61df42a0d37cfddbf3f8 ; .", "title": "", "metadata": ""}
{"_id": "28e2091630689b2d7527338b11d97127", "text": "Burn function .", "title": "", "metadata": ""}
{"_id": "f83af792ee000f5e79cddd8f7448a8b6", "text": "Cancels previously made sell offer .", "title": "", "metadata": ""}
{"_id": "12eb341fe73a5b60efae306a084bd728", "text": "The external function to call when a hero train with a dungeon , it determines whether whether a training is successfully , and the resulting genes .", "title": "", "metadata": ""}
{"_id": "c4c21e37c4f6912f5d1f6f38bc32ba85", "text": "given a convertible token index , returns its contract address .", "title": "", "metadata": ""}
{"_id": "2307cd565c16907d509cd7ed42fd6c02", "text": "Batch function to put 10 or less collectibles on sale .", "title": "", "metadata": ""}
{"_id": "f8cadbed7b035cd0f13ee679d3691005", "text": "LookRev can change the crowdsale wallet address .", "title": "", "metadata": ""}
{"_id": "3e7f0e1bba309a4aae1619a39c501dca", "text": "Query the balance of an address at a specific block number .", "title": "", "metadata": ""}
{"_id": "8e25d5fd4e394f071bb66f0097f80256", "text": "If we want to rebrand , we can .", "title": "", "metadata": ""}
{"_id": "dc6a95f5a79888faa14887e512a61a6e", "text": "buy NDC with ether .", "title": "", "metadata": ""}
{"_id": "42ba8044155f6ba3cd33189ad1025f8c", "text": "totalSupply uint256 Proof Token Total Supply .", "title": "", "metadata": ""}
{"_id": "8836fe2e6cec9c647e556fb6dbc5ebb5", "text": "The following functions DON'T create parts , they add new parts as possible rewards from the reward pool .", "title": "", "metadata": ""}
{"_id": "5ee5df3eebaa89e7fbe30c9486179394", "text": "Grant tokens .", "title": "", "metadata": ""}
{"_id": "736259017ebc7800867395ee946ad365", "text": "delete token holder .", "title": "", "metadata": ""}
{"_id": "84eb0e63f4487f5c0efc0cff90c901db", "text": "Transfer _value tokens from _from to _to if msg . sender .", "title": "", "metadata": ""}
{"_id": "3215c08ae1d1d21b18ede8e6743f8465", "text": "Revoke acess to mint heroes .", "title": "", "metadata": ""}
{"_id": "fd926f9a4a642b766fc7479c6107d244", "text": "this method allows to drop manual state of contract .", "title": "", "metadata": ""}
{"_id": "5ca813d6cf6d393a28c7afc5bdbc62e9", "text": "Distributes the tokens allocated for the strategic partners .", "title": "", "metadata": ""}
{"_id": "68b314558146f40101884d0ed2e99a4a", "text": "Base of transfer functions .", "title": "", "metadata": ""}
{"_id": "f230b3095867b3a7366d92c95f7d01a7", "text": "Used to change time of ICO .", "title": "", "metadata": ""}
{"_id": "3604f7dc9b2060839158972729c1f2c3", "text": "Destroy the contract but only after the world cup is over for a month .", "title": "", "metadata": ""}
{"_id": "7ef3215b5ea1486d59e209417b9bf0c9", "text": "Transferir propiedad del contrato .", "title": "", "metadata": ""}
{"_id": "dc6a68606e1375f8a549370018d44335", "text": "deposit phase : initialStakes cycle 0 .", "title": "", "metadata": ""}
{"_id": "ea77036050232463fa20820712e9e9e7", "text": "Run this function when transaction has been verified by the btc relay .", "title": "", "metadata": ""}
{"_id": "262457e3b72c476d98c5b39dbe635d32", "text": "we can create zodiacs with different generations .", "title": "", "metadata": ""}
{"_id": "4e1ac68f2c7ccf6044485bdb593e3c14", "text": "Store a blob revision block number in a packed slot .", "title": "", "metadata": ""}
{"_id": "ca9f410144c97230862282952baf6d2c", "text": "Allow address to call allocate function .", "title": "", "metadata": ""}
{"_id": "d3ecf41bc1a61814a6583134b6ffda8a", "text": "Allows the developer to set the crowdsale and token addresses .", "title": "", "metadata": ""}
{"_id": "9a9b505b5d13705cb6d2aea6b2ba50af", "text": "Handle invested wei .", "title": "", "metadata": ""}
{"_id": "8cee76670ebc0033afd26a6ef4394126", "text": "called by the owner to mint tokens for pre-ico .", "title": "", "metadata": ""}
{"_id": "2fa75fe4db39f990e2128db102ef1fa6", "text": "Sets token ratio , swap duration , and multiplier variables for a swap .", "title": "", "metadata": ""}
{"_id": "115aa87fadecb1b0cfeec26ce16854ec", "text": "desactiver l'envoi d'argent sur ces fonctions .", "title": "", "metadata": ""}
{"_id": "6981b71e4987746af970b60ebbcaf221", "text": "allocate preICO tokens .", "title": "", "metadata": ""}
{"_id": "5c62d2f8626bc65c57964a5fd192189b", "text": "Update odds of a bet .", "title": "", "metadata": ""}
{"_id": "b9ad1dedf572a80fd2d22b3b2e65c2d1", "text": "get address of first buyer by index .", "title": "", "metadata": ""}
{"_id": "017131ffad5c2093b77e47b8b6a89665", "text": "Check the contract token .", "title": "", "metadata": ""}
{"_id": "d10aba4927b97b6d94448830d5b937e1", "text": "Manual exchange tokens for BTC , LTC , Fiat contributions .", "title": "", "metadata": ""}
{"_id": "2c96c813faa2e4938ff279b02dfd7c07", "text": "Reverts if called not during the sale .", "title": "", "metadata": ""}
{"_id": "e6c868bfecb36f0cdd3944a784d9b339", "text": "Set start and stop blocks of White List .", "title": "", "metadata": ""}
{"_id": "5732505e3ec28728e834894cfea35e24", "text": "Data is uploaded over many transactions , until the whole file is stored in the contract .", "title": "", "metadata": ""}
{"_id": "e42a7d8e5b5f4475ec43890fd175f32d", "text": "Gets list of teams owned by a person .", "title": "", "metadata": ""}
{"_id": "96539d36006ecdfaee172a88a3f440e8", "text": "Modifier to handle token distribution .", "title": "", "metadata": ""}
{"_id": "d2cd7fa0ad6a49f491722afec772ac20", "text": "ERC20 Standard : Allow spender to withdraw from your account , multiple times , up to the tokens amount .", "title": "", "metadata": ""}
{"_id": "cd1ccf102a3f9a73a93c51c16014c52f", "text": "the number of knights .", "title": "", "metadata": ""}
{"_id": "bdd23e85e4064dd30e67c569f2f4eaee", "text": "Record _contributor .", "title": "", "metadata": ""}
{"_id": "4b1b92e1cf550a4c37d97a8d8940ab85", "text": "Public Function that calculates the amount in wei for specific number of tokens .", "title": "", "metadata": ""}
{"_id": "77f7ec1c5116362793b1f3c8c6eaa66e", "text": "Transfer _value SAT tokens from sender's account msg . sender .", "title": "", "metadata": ""}
{"_id": "b86f0b8dc7d56b732e2cafc0fe88ed83", "text": "ERC20 balanceOf : Get the token balance for account tokenOwner .", "title": "", "metadata": ""}
{"_id": "d7d5032b57be18e554e7b654af32282f", "text": "True iff the denominator of x / y is nonzero .", "title": "", "metadata": ""}
{"_id": "fc2b395c1ff3ebc61c2d4799cdaec87e", "text": "Helper function to pre-validate mutual cancellation signatures .", "title": "", "metadata": ""}
{"_id": "ff6713d910e764dc2603321f5c3f0776", "text": "finalization task , called when owner calls finalize ( ) .", "title": "", "metadata": ""}
{"_id": "072999f18549f00286c435837330cd09", "text": "Function to release an account form frozen state .", "title": "", "metadata": ""}
{"_id": "8d93094754c8ecb995697619fdfbb106", "text": "add new hodl safe ( ETH ) .", "title": "", "metadata": ""}
{"_id": "eb7f0a40c97076912f4f207ffc14154f", "text": "Begins creating a storage buffer - destinations entered will be forwarded wei before the end of execution .", "title": "", "metadata": ""}
{"_id": "7e26b5394bdddb9e0414e531d3e26c3f", "text": "Set a blob to enforce revisions .", "title": "", "metadata": ""}
{"_id": "a314f2850e00948d57befe82a34c999e", "text": "After some time , or if we're no longer the registrar , the owner can release the name and get their ether back .", "title": "", "metadata": ""}
{"_id": "abeda431d8c5df2dcf9aff980ceca336", "text": "Overrides transfer method from BasicToken transfer token for a specified address .", "title": "", "metadata": ""}
{"_id": "4ef030d8376fbf6e04d00d1d24165a6e", "text": "Get initial enemy combination .", "title": "", "metadata": ""}
{"_id": "62396084d494ee6499b73b35d2d5815a", "text": "Transfer contract's ownership .", "title": "", "metadata": ""}
{"_id": "552a0c745a5f60cbecaf9270b9d870c5", "text": "provides the total number of purchased blocks .", "title": "", "metadata": ""}
{"_id": "7a9e5a4cfe571d78c77a4bf917b2dd74", "text": "Set the FreeLOT token contract address , in case of future updrades .", "title": "", "metadata": ""}
{"_id": "b77f8ad6c0b14239d852de381abd6acc", "text": "approves a given token and account address to make it available for airdrop .", "title": "", "metadata": ""}
{"_id": "6037d59582e2a8162f7e6c750f5fd3e0", "text": "What is total circulating supply ? .", "title": "", "metadata": ""}
{"_id": "a6e5e581df2897ffac5eafda6151bdab", "text": "Transfers multiple deeds to another address .", "title": "", "metadata": ""}
{"_id": "f2718e6bfb18c10d560c345239775f1b", "text": "TokenController interface .", "title": "", "metadata": ""}
{"_id": "d8de352b64ad2a3c4c7b01b9371d3385", "text": "Allow crowdsale owner to postpone the start of the crowdsale .", "title": "", "metadata": ""}
{"_id": "3a25bc6816c9abe5e644b254be0c8d5b", "text": "if the token sale is finished .", "title": "", "metadata": ""}
{"_id": "f0e2eb23e00c599c9a9ef031ad6f35a0", "text": "Call calculateFinalPrice - library function exposed for testing .", "title": "", "metadata": ""}
{"_id": "81358e3cc184ee0aa82bf4d10d7c5e21", "text": "The internal one will be called if tokens are sold out or the end time for the sale is reached , in addition to being called from the public version of finalize ( ) .", "title": "", "metadata": ""}
{"_id": "df8758965f025ad23c126cbee4119ff6", "text": "Put a Dog up for auction .", "title": "", "metadata": ""}
{"_id": "8c742a969dc26bf064d857bdb62f964c", "text": "gets the balance of the specified address .", "title": "", "metadata": ""}
{"_id": "44eb7643c19a46c154544a9fda6b4421", "text": "Burns tokens leftover from an ICO round .", "title": "", "metadata": ""}
{"_id": "d50a41306d38194c6f59029f4ccdfdaa", "text": "Place a sell request if seller have enough tokens ! .", "title": "", "metadata": ""}
{"_id": "a23eadcbcaf6e5b4e22d34c2ff91937f", "text": "set Max Contribution .", "title": "", "metadata": ""}
{"_id": "4f695b8b17bd43edc0b8f4a54d753766", "text": "Checks that a given kitten is able to breed .", "title": "", "metadata": ""}
{"_id": "47cec9abb8051c6706a450cd6b0dd4c0", "text": "Checks if any order transfers will fail .", "title": "", "metadata": ""}
{"_id": "d9347f91e315bd9574f96d9c317dfc5f", "text": "set individual stage3Crowd cap .", "title": "", "metadata": ""}
{"_id": "b789fd7da264f9e90c971e9b7f84df60", "text": "computes part / total of amount with maximum precision ( multiplication first ) part and total must have the same units .", "title": "", "metadata": ""}
{"_id": "e775c7ccb93078ae519e4c94d45f60b3", "text": "owner_withdraw - Ether withdraw ( owner only ) .", "title": "", "metadata": ""}
{"_id": "87ee578ad334fcd5de919ccec92e83f7", "text": "add allowance to create buildings in country to certified partner .", "title": "", "metadata": ""}
{"_id": "aff5dc2343e9efd8e18b18954a5c4a85", "text": "Allow miners to withdraw their earnings from the contract .", "title": "", "metadata": ""}
{"_id": "9f3edbaf0cbb1b4d8201c12243870f67", "text": "Checks if withdraw cooldown passed .", "title": "", "metadata": ""}
{"_id": "367c49877cb54e08583e7c3175d95844", "text": "set authorized party .", "title": "", "metadata": ""}
{"_id": "23830ada1e3ba88cf29df09300ce7daf", "text": "Play in lottery with own numbers .", "title": "", "metadata": ""}
{"_id": "dc43a2ad4837923157355b6f53118549", "text": "Modifier to make a function callable only when the contract is paused . db . getCollection ( 'transactions' ) . find ( ) .", "title": "", "metadata": ""}
{"_id": "3ce5f1eac4757db68e9c1e8e4054bef0", "text": "Use with extreme caution this will burn the rest of the tokens in the contract .", "title": "", "metadata": ""}
{"_id": "c9df02bb3b0e8542949564f4cb205915", "text": "Purchase animal from previous owner .", "title": "", "metadata": ""}
{"_id": "1c9377296c522c71c8bf415c9983da1a", "text": "Allow the owner to withdraw all ether from the contract after the crowdsale is over .", "title": "", "metadata": ""}
{"_id": "f76fd9db63293e2a7b2b7e3c29edd2b4", "text": "rollback changes to transferInternal for transferFrom .", "title": "", "metadata": ""}
{"_id": "d86254870d002b9d39a759ba95c16166", "text": "change agent for minting .", "title": "", "metadata": ""}
{"_id": "a7431ac7113ed9a5c178896b53e08ef9", "text": "todo : make storage lib .", "title": "", "metadata": ""}
{"_id": "ae5dc3dcf72980c908cea74bfa26f615", "text": "change of safe-key .", "title": "", "metadata": ""}
{"_id": "401328ac5f10915db5011a4a5218b809", "text": "modifier to check if point is in bounds .", "title": "", "metadata": ""}
{"_id": "b9494f3a468869516b2f4cca47a901ff", "text": "To extract the ether in an emergency .", "title": "", "metadata": ""}
{"_id": "4cc880c73cd99316574d03a7f40640d4", "text": "Returns the total investment of a given ETH address .", "title": "", "metadata": ""}
{"_id": "64f8a7c8b56b802e35c640dff97c159f", "text": "Register members whose identity information has been verified on the website by batch system , for KYC / AML .", "title": "", "metadata": ""}
{"_id": "58f167748d9023b6110e5625c007e51e", "text": "do the calculation returns : success , isend , winer , tax .", "title": "", "metadata": ""}
{"_id": "2146d7a0a3e77a930de6d64d02a762ee", "text": "Checks if the makeOrder price is within maximum allowed deviation from reference price .", "title": "", "metadata": ""}
{"_id": "da0760afd301ba10b2afc8e53b6b19eb", "text": "function grantFoundationToken - Transfer foundation tokens .", "title": "", "metadata": ""}
{"_id": "b7e35727836da6d23148878f2ef53122", "text": "Get least expensive share of one company .", "title": "", "metadata": ""}
{"_id": "77b480be32bca3231993028e755c1478", "text": "Claim on behalf of payee address .", "title": "", "metadata": ""}
{"_id": "c3caf026bd911bdeef8841363178164c", "text": "There's no real point of un-registering items .", "title": "", "metadata": ""}
{"_id": "8421eff39bf1c39c15d12b6a6551db44", "text": "Allow distribution helper to help with distributeToken function .", "title": "", "metadata": ""}
{"_id": "93aeedebcd7a8b8d7e95b72b1f39c802", "text": "This gets called by constructor AND after the swap to restart evertying .", "title": "", "metadata": ""}
{"_id": "8bdba71321d959046ddb434cfa9d9ed9", "text": "Any function modified by this will automatically liquidate the system if the collateral levels are too low .", "title": "", "metadata": ""}
{"_id": "5a1e1e26bee77dde622a47a1c044df41", "text": "function to change the hard cap of the contract .", "title": "", "metadata": ""}
{"_id": "60cfc7474fa8f0a3be7e2db7a3a23533", "text": "Check is the address is in Admin list .", "title": "", "metadata": ""}
{"_id": "7d6f5cad755f721c6a2770bec67a6f15", "text": "When someone referred ( the referee ) purchases tokens the referrer gets a 1 bonus from the central pool .", "title": "", "metadata": ""}
{"_id": "3474913dacc1dbafb11312bf61677f5e", "text": "Sets item for sale .", "title": "", "metadata": ""}
{"_id": "6ab56c219bd7fc624b320593ffd92354", "text": "Allows the owner to set the token contract address .", "title": "", "metadata": ""}
{"_id": "3a353da69e66cc66792ce86cec386321", "text": "Returns all the relevant information about a specific politician .", "title": "", "metadata": ""}
{"_id": "5bfa380b91976be4b3b092e0ed67c5ac", "text": "solhint-disable code-complexity .", "title": "", "metadata": ""}
{"_id": "d3cd32ef642fb73b7102f5cf4d77bd3e", "text": "Places a bid for breeding .", "title": "", "metadata": ""}
{"_id": "d1bf10aeb9a95eb1ca729a6b57997afd", "text": "Claim bounty reward .", "title": "", "metadata": ""}
{"_id": "0b2374a38748f9fdc7c23650a6fbdbec", "text": "Clear current approval of a given token ID .", "title": "", "metadata": ""}
{"_id": "a81fa2f6ecd68d1173b58c94feefec73", "text": "Gets the ( owners address , Ethereum sale price , PXL sale price , last update timestamp , whether its in private mode or not , when it becomes public timestamp , flag ) for a Property .", "title": "", "metadata": ""}
{"_id": "aace9d4b5fc6282d69b71eeb7a1c5584", "text": "Gets the bonus for the specified total supply .", "title": "", "metadata": ""}
{"_id": "5d70d82262eae7e878c6866fae571ccd", "text": "Creates a new mobster with the given name .", "title": "", "metadata": ""}
{"_id": "3832cfed5be835e22fb5660822640761", "text": "Transfer _value INS tokens from sender's account msg . sender .", "title": "", "metadata": ""}
{"_id": "5f1078802638b5788e5c3add9fafb47d", "text": "Transfer tokens between accounts .", "title": "", "metadata": ""}
{"_id": "353db10d788445eb553072e434a191a7", "text": "The amount of all caps produced so far .", "title": "", "metadata": ""}
{"_id": "a91df6df20e28dcdc5b3b7612c232543", "text": "Deposit an amount of ETH in the VAULT .", "title": "", "metadata": ""}
{"_id": "eec0d9f9195b633b751c61d980c4929f", "text": "Air Drop batch by single amount .", "title": "", "metadata": ""}
{"_id": "f2dc5d7ff98fc20bff73f57ef2d9ce24", "text": "Finalizes the token sale event .", "title": "", "metadata": ""}
{"_id": "b64567196f061b46088dbfd1872f832d", "text": "Return the fee charged on a purchase or sale of n nomins .", "title": "", "metadata": ""}
{"_id": "c0e0f84d8a750f8708e34c0e2bc26558", "text": "start_time : The start time of the first tier of a crowdsale .", "title": "", "metadata": ""}
{"_id": "30709c10bd2be6e10c13915a565c4f00", "text": "function to stop the Token Swap stop the token swap at _endBlock .", "title": "", "metadata": ""}
{"_id": "0d15cc7846784ea7b5e222508cfe5cf1", "text": "Returns pending fees for a delegator from its lastClaimRound through an end round .", "title": "", "metadata": ""}
{"_id": "eca12f1f2076aa7dbf9291909a1898bd", "text": "Only by the whitelist admin .", "title": "", "metadata": ""}
{"_id": "c63fff5d2aceb8d5073b27f806b0ef9c", "text": "Transfer from from account to to account using allowance in from account to the sender .", "title": "", "metadata": ""}
{"_id": "c59ec7abad5ffa3a118e8f346e2a1768", "text": "Required state : is bcdcReserveFund set .", "title": "", "metadata": ""}
{"_id": "8d62fab92db08202f05c51d04ec7b931", "text": "returns crowdsale remaining cap ( hardcap ) in Eth , low res .", "title": "", "metadata": ""}
{"_id": "e03060afef3babb201e80f07993bf9e7", "text": "fees operations .", "title": "", "metadata": ""}
{"_id": "6fd1937aeaff84472b7bcbcf99d6c074", "text": "Returns affiliate commision .", "title": "", "metadata": ""}
{"_id": "65a28000a28374079f66020cbf5a2d21", "text": "claim interests generated by POSController .", "title": "", "metadata": ""}
{"_id": "dd1887ddfe596797ffc3ccaacc031d49", "text": "Assigns a new address to act as the Owner .", "title": "", "metadata": ""}
{"_id": "5617c9a4032fb411f586db04cbc2393d", "text": "Function to set new allowed address .", "title": "", "metadata": ""}
{"_id": "50772fa1c084fcc82147cc9db361767f", "text": "TransferOwner function for Transfer the owner ship to address .", "title": "", "metadata": ""}
{"_id": "c50e3702c59543686fcbcda61b6656c9", "text": "Set the affiliate percentage .", "title": "", "metadata": ""}
{"_id": "41dbd73836fc5a3429a110e398b5b352", "text": "Tranche TX minimums .", "title": "", "metadata": ""}
{"_id": "5113ac6a37b781f95922292ee3f2a963", "text": "Withdrawal LRC .", "title": "", "metadata": ""}
{"_id": "2ea77b3830ffa70e99e62dc08c624bb0", "text": "Internal check for whether a user name has been taken .", "title": "", "metadata": ""}
{"_id": "d80e9c0ebddc4a5b7a2aa4cacd1b5456", "text": "Adds the latest Ether Euro rate to the history .", "title": "", "metadata": ""}
{"_id": "231655dee4284726ae1b0338261b49c3", "text": "Incoming delegate * calls from _source will be accepted by trueUSD .", "title": "", "metadata": ""}
{"_id": "ee49fd9b67d4f4326a7db044fab10ab2", "text": "returns true if the rootHash was impacted , i . e .", "title": "", "metadata": ""}
{"_id": "447ce2a17cde925a1e14727445517c95", "text": "Change endTime to end ICO manually .", "title": "", "metadata": ""}
{"_id": "ff8630c636178b3f2c430b24691eeb6a", "text": "Finalize contract .", "title": "", "metadata": ""}
{"_id": "b89be04799a2bd0f6cad5f86c779a8ad", "text": "Get balance of ident .", "title": "", "metadata": ""}
{"_id": "16855b93c38515cc50ff20e39b7b014b", "text": "Assigns ownership of a specific Library to an address .", "title": "", "metadata": ""}
{"_id": "381a5c95eaf76162142ee270125e01e8", "text": "return number of pixels owned by an address .", "title": "", "metadata": ""}
{"_id": "9b63377132c0d91bbaa9515bbf9b47b6", "text": "the granularity of the token .", "title": "", "metadata": ""}
{"_id": "96719a33cae37e34634ab12306ce0e4f", "text": "Claim reward collected through your affiliates .", "title": "", "metadata": ""}
{"_id": "5303983eaf9e3383556d2078bca6e7bb", "text": "Updates the GDPR / ETH conversion rate .", "title": "", "metadata": ""}
{"_id": "719195fbe8e471513cdc28c6e29b59dc", "text": "set how many tokens per wei , kept with 3 decimals .", "title": "", "metadata": ""}
{"_id": "1eceb873f36950e8e5af73dde0621f59", "text": "Function to change bonus system .", "title": "", "metadata": ""}
{"_id": "75fd1340d91ae2ecbff5ed0915da7cf8", "text": "Change multisig wallet in case its needed .", "title": "", "metadata": ""}
{"_id": "196fc800da968cdd42d83cec7b7f446e", "text": "burn tokens at will .", "title": "", "metadata": ""}
{"_id": "25a12b3b8d9419090c8959417560d96b", "text": "Function to check the amount of tokens that an owner allowances to a spender .", "title": "", "metadata": ""}
{"_id": "5684ebf79f2cf135785e9f9bd192191b", "text": "Creates a new virtual entity that is assigned to a unique address .", "title": "", "metadata": ""}
{"_id": "0de6e24b8419d631b4310a525b40de79", "text": "Function to accept a request .", "title": "", "metadata": ""}
{"_id": "8a9a07f578d4ab16aafbecc9deebf75f", "text": "Returns the current block number .", "title": "", "metadata": ""}
{"_id": "95611425b7d4d95e7eea0bc6942fb974", "text": "Buy tokens on pre-ico and ico .", "title": "", "metadata": ""}
{"_id": "22e479ffae9e580fc638fa54e3a339f0", "text": "Checks weather ICO has ended or not .", "title": "", "metadata": ""}
{"_id": "6ed51af30a231b2e29cceaebe0c1a54d", "text": "Decsendants should use _sender ( ) instead of msg . sender .", "title": "", "metadata": ""}
{"_id": "24cba834de957a9aa4c82122988795d0", "text": "Assigns a new address to act as the Primary Manager .", "title": "", "metadata": ""}
{"_id": "8fa96a8bd4767e3ac8805f3693d31855", "text": "Invest to tokens , recognize the payer and clear his address .", "title": "", "metadata": ""}
{"_id": "43539a3108748247f8c5c404d8252db0", "text": "this is used if previous stage did not reach the softCap , the refaund is available before the next stage begins .", "title": "", "metadata": ""}
{"_id": "6b7d5ce5d5d152ba4ae48207ef8fbadb", "text": "true if ico crowdsale event has ended .", "title": "", "metadata": ""}
{"_id": "101fc16f7e06810b129bf40877ce9b11", "text": "check if address is whitelisted for factory .", "title": "", "metadata": ""}
{"_id": "dd890d1515b4f088d9b06759af32c284", "text": "Pause contract ( transiently ) .", "title": "", "metadata": ""}
{"_id": "f48916be0ec0dff713f50abb0f2648f6", "text": "Forces a period reset .", "title": "", "metadata": ""}
{"_id": "3e04e3ff64c8bfd1f9d73fb650c4417a", "text": "Withdraw anyone's creator balance .", "title": "", "metadata": ""}
{"_id": "45886c5fa386b3e6df42dc9ecf105f75", "text": "update all weapon details .", "title": "", "metadata": ""}
{"_id": "ffaf323b540ed8e77753308d387e15ac", "text": "true if investors can buy at the moment removed view to be overriden .", "title": "", "metadata": ""}
{"_id": "952aac7c14384acb248eca61d6880a20", "text": "Implements the ICOEngineInterface .", "title": "", "metadata": ""}
{"_id": "86630153b6b1f433820764ddceb8f33e", "text": "Verifies the user is whitelisted .", "title": "", "metadata": ""}
{"_id": "b472684c7f41cbd38e770a125d329a70", "text": "change owner / creator of the contract .", "title": "", "metadata": ""}
{"_id": "401eab43973be364cd8fa94ba16fc97f", "text": "after a day , admin finalizes the insurance fees recipient change .", "title": "", "metadata": ""}
{"_id": "30110f3feaa1c26e26bd54d2df9a8cf6", "text": "Call to check your guess and claim reward .", "title": "", "metadata": ""}
{"_id": "29852adbe25ba7d7c02e4eba40e906a8", "text": "calculates the number of digits in a given number .", "title": "", "metadata": ""}
{"_id": "2ac3fd112b225ac7516ddd95f6f09235", "text": "The same as saleProceedsEther ( ) , but without the stale price check .", "title": "", "metadata": ""}
{"_id": "335a2da0bc910707cba2ac6d57bcab93", "text": "tokens bought with BTC are sent via this method .", "title": "", "metadata": ""}
{"_id": "87e424daca31d45047009cea1cb97c06", "text": "Allowed only for contract owner .", "title": "", "metadata": ""}
{"_id": "3ceefe49831d00bd9918dd19da95397f", "text": "Transfers the current balance to the owner and terminates the contract .", "title": "", "metadata": ""}
{"_id": "cb8f037ee5f729a6aafea68ea5149966", "text": "The owner will call this method to extract the tokens .", "title": "", "metadata": ""}
{"_id": "430d932f1cdfd64f6b1e9c3fa75e1c93", "text": "holder group of sale buyers , must be defined in child contract .", "title": "", "metadata": ""}
{"_id": "21d4eaa166194941c2d7ec7d53a0ec2e", "text": "Allows execution if the any round finished only .", "title": "", "metadata": ""}
{"_id": "6ec2d37894093cb3958c5d68e2fdd5a2", "text": "calculate period .", "title": "", "metadata": ""}
{"_id": "d4e4844087f05ba78b2a18aa5deef514", "text": "Check if the channel is present : in open or settling state .", "title": "", "metadata": ""}
{"_id": "a689caf2245a46eedc701736579c8081", "text": "Unlock any now freeable tokens that are locked up for account _who .", "title": "", "metadata": ""}
{"_id": "85ef25c251a10f363a0cf70af9a69c43", "text": "mint can be called by the owner to create tokens for a certain receiver it will no longer work once the token supply has been frozen .", "title": "", "metadata": ""}
{"_id": "d7e4132ae1ff169d36c69ed32e44e609", "text": "Send ether to the presale collection wallets .", "title": "", "metadata": ""}
{"_id": "6cfac43dc65ce3f502a775c0df0e7f57", "text": "Transfer the balance from token owner's account to to account - Owner's account must have sufficient balance to transfer - 0 value transfers are allowed .", "title": "", "metadata": ""}
{"_id": "8ce789c7a2bd405ce19208db625ac66c", "text": "Returns the number of tokens for given amount of ether for an address .", "title": "", "metadata": ""}
{"_id": "818e09c2875f512a26a0aaa8ab157cf7", "text": "Replace the current admin with newAdmin .", "title": "", "metadata": ""}
{"_id": "82f3c8451025646b450c7731204580bc", "text": "Add new IDs to the Thing , only registrants allowed .", "title": "", "metadata": ""}
{"_id": "0b0dfa8a079ddd8d185ce0aea7e2059b", "text": "event loginfo ( address fromaddr , address toaddr , string info ) ; .", "title": "", "metadata": ""}
{"_id": "0e9156e06b3d9e3e81c12a9c9f6aa886", "text": "Returns all the relevant information about a specific gem .", "title": "", "metadata": ""}
{"_id": "10ca4167297aa53ca05b4ad7ddd1e68c", "text": "Release 10 of reward token .", "title": "", "metadata": ""}
{"_id": "1cef3764718ea889023ab2fd637d3dd8", "text": "Set profile info by string key .", "title": "", "metadata": ""}
{"_id": "ec870e8786c50a37cfcd649cfaa3e8ea", "text": "Create a game .", "title": "", "metadata": ""}
{"_id": "16dfe744093e1a198643cfb1a480a772", "text": "_funds The funds availale for a fo .", "title": "", "metadata": ""}
{"_id": "0f7110f8da2d10d89eaa18e17f46ae0c", "text": "purchase DGX gold .", "title": "", "metadata": ""}
{"_id": "91fad6ff20ce48dcac96f580b1edb1f4", "text": "Durign the main ico , should be called by owner to send TTC to beneficiary address .", "title": "", "metadata": ""}
{"_id": "3b0855b5a9d46514a955835e1fa1ca2a", "text": "Backup functions .", "title": "", "metadata": ""}
{"_id": "df2d0f2f456af63adb3d86d1922f7592", "text": "Transfer the balance from owner's account to another account .", "title": "", "metadata": ""}
{"_id": "96dac9076579005e98347496f38ebd30", "text": "Return the length of the investors array .", "title": "", "metadata": ""}
{"_id": "5ff0ac1e7e1975f8bbef1ff9923beb42", "text": "Transfer a region of sections and IPO tokens to the supplied address .", "title": "", "metadata": ""}
{"_id": "04bbf2b7173e31d6cde42ab85b420329", "text": "Adds a new approved certificate authority .", "title": "", "metadata": ""}
{"_id": "533e68ece5aca1123e4fd47cb65b66c5", "text": "Returns the author of given pixel .", "title": "", "metadata": ""}
{"_id": "ea1efa2179416470bcc3b13f1d7ab294", "text": "Check is group exist .", "title": "", "metadata": ""}
{"_id": "67bb794ac8635b18a56e2afa81482e51", "text": "ERC-20 Approval functions .", "title": "", "metadata": ""}
{"_id": "33116216a772a362e2c3a7b2824c0783", "text": "Internal functions .", "title": "", "metadata": ""}
{"_id": "2b3f8468524ddf9fa11052eeea1ac89f", "text": "Function returns current ICO tier's exchange rate of LOT per ETH .", "title": "", "metadata": ""}
{"_id": "da54b1023b52a12d56a2b4a7c86991b0", "text": "Return a pseudo random uint smaller than lower bounds .", "title": "", "metadata": ""}
{"_id": "8de882bee72eae09e959556d70c10509", "text": "Checks to see if two cats can breed together , including checks for ownership and siring approvals .", "title": "", "metadata": ""}
{"_id": "0f27940095b5e96a5ce38b38ba825218", "text": "ERC20 compliant transferFrom function returns true for successful .", "title": "", "metadata": ""}
{"_id": "1fbad44e7be301e518e5ef87b6949d8f", "text": "This function will return only the addess of a specific team .", "title": "", "metadata": ""}
{"_id": "ba3fbb9874d8606cdead9d55604f80ee", "text": "oraclize getPrice .", "title": "", "metadata": ""}
{"_id": "c0b4a5719e4b88868e3d6be430d778d7", "text": "allows the owner to change the default reputation for manufacturers .", "title": "", "metadata": ""}
{"_id": "177eb6e5de2224b1b128b2cc1842e64e", "text": "Amount of LRC token that can be spent by this contract .", "title": "", "metadata": ""}
{"_id": "5394341adce8bdc17af1ee435620cf8f", "text": "The master of the Beercoin .", "title": "", "metadata": ""}
{"_id": "1e664b608c795943043e27094770ef48", "text": "Joins an array of slices , using self as a delimiter , returning a newly allocated string .", "title": "", "metadata": ""}
{"_id": "10c7ccd111d5027219997c2247aa85af", "text": "warriorsData packed warrior data .", "title": "", "metadata": ""}
{"_id": "e5a48abe38a22406903b192ef6c80f00", "text": "owner can mint tokens during crowdsale withing defined caps .", "title": "", "metadata": ""}
{"_id": "d74437b64aa48f1c618b0f1da413ad9d", "text": "Collect sale revenue .", "title": "", "metadata": ""}
{"_id": "dc355792dcc77978c3ecc760429e718f", "text": "functions for returning tokens .", "title": "", "metadata": ""}
{"_id": "634f43e332917ce453c9bbd070888924", "text": "it will return status of white listing .", "title": "", "metadata": ""}
{"_id": "703d8769c293eafbd349bd20d1f398a3", "text": "returns approved Addresses .", "title": "", "metadata": ""}
{"_id": "b10203a4d5a407bae90cc62f627296a6", "text": "Check withdrawal is live , useful for checking whether the savings contract is live , withdrawal enabled , started .", "title": "", "metadata": ""}
{"_id": "5beeda4685b4cbad6f9aff99e8633352", "text": "Returns the events and data for an 'Approval' event .", "title": "", "metadata": ""}
{"_id": "95f3e3dc779dc4bfa0d047648d3e0eeb", "text": "Send coins must have identityApproved + can't sell last token using transfer .", "title": "", "metadata": ""}
{"_id": "c511c4a4bd0142475b672c21ac494698", "text": "Allow _spender to withdraw from your account , multiple times , up to _amount .", "title": "", "metadata": ""}
{"_id": "1ba581417ed440685b2fab5bf3a8b90c", "text": "Transfer tokens from _from to _to and verify if CEO of company has changed ! _from should have enough tokens before calling this functions ! _numberOfTokens should be greator than 0 .", "title": "", "metadata": ""}
{"_id": "5cf2f20939dc733de356726ccf238c44", "text": "View function - returns the jackpot amount .", "title": "", "metadata": ""}
{"_id": "e22add132bf30bdca0b265dea48b778a", "text": "Returns a bitstring of half the length by taking bits two at a time and ORing them .", "title": "", "metadata": ""}
{"_id": "f817a192550d355b2e96ff4b280effcc", "text": "Get raised amount during ICO .", "title": "", "metadata": ""}
{"_id": "8fe4553a8c57bf77b521f30ecb76e84d", "text": "Returns common information about round totalCollectedSum - total sum , collected in all rounds roundCollected - sum collected in current round currentRoundNumber - current round number remainsCurrentRound - how much remains for round change .", "title": "", "metadata": ""}
{"_id": "ec4bc5650c4a73b0c7b765e2f6fbfb55", "text": "token not started means minting is possible , but usual token operations are not .", "title": "", "metadata": ""}
{"_id": "b852cfc6d79569b1cff9bcf2d31e664e", "text": "First step to withdraw : players must confirm their pending Divs before withdrawing this function sums the pending balances ( pendingDividends and the pending divs from playerScore ) .", "title": "", "metadata": ""}
{"_id": "604f16554ec9c93b68a17c41e42518ca", "text": "returns the value for the requested job .", "title": "", "metadata": ""}
{"_id": "26f40db7755cc636a10294687347f83a", "text": "Getter for winningCount in VoteCounter .", "title": "", "metadata": ""}
{"_id": "40567fa268ce46e8caf8b20e828ecec0", "text": "withdraw NAC and ETH for non top investor execute by investor .", "title": "", "metadata": ""}
{"_id": "3e106205018f30571e900aa514136942", "text": "Returns the number of tokens available for sale .", "title": "", "metadata": ""}
{"_id": "0268fb55114bea78ac4453a6cd08204e", "text": "Function to increase the block height .", "title": "", "metadata": ""}
{"_id": "90691db36a2f1c3e74b6679b94ad5dfb", "text": "use this function to allow C4F System to adjust providerCompleted status .", "title": "", "metadata": ""}
{"_id": "2b2bc9fa0580f9f8f48f5858156c8ca3", "text": "Allows the owner to change the token address .", "title": "", "metadata": ""}
{"_id": "608bc22296fb99036cdfbb64500d8710", "text": "global funcs .", "title": "", "metadata": ""}
{"_id": "f1a9cf3fc2b9193b9584888d76a82e60", "text": "Returns the contribution and refund value to be used when the transaction value is lower than the whitelisted contribution for the sender .", "title": "", "metadata": ""}
{"_id": "bf2da9c59d414c2b59767fe77f23e71d", "text": "Called by Bitwords to invalidate a refund sent by an advertiser .", "title": "", "metadata": ""}
{"_id": "abec4e4238d3bbd22398b907971dbfae", "text": "Withdraw fees collected by the contract .", "title": "", "metadata": ""}
{"_id": "d452bbb6850560e24c33ed1f28f75e06", "text": "End ICO .", "title": "", "metadata": ""}
{"_id": "738c2eaf30b85b4cd71ca5c2debad187", "text": "check if prediction for a match winner is correct .", "title": "", "metadata": ""}
{"_id": "79cc8febd552568d662522c1a2ab0a23", "text": "This function is added to get a state of where the token is in term of reward generation .", "title": "", "metadata": ""}
{"_id": "75b47584d72e4c0538cc442777f258c6", "text": "checks if an address is a member of a specific address .", "title": "", "metadata": ""}
{"_id": "f2376fc847447fa4a12a5a534cf01aa9", "text": "get the third phase total supply .", "title": "", "metadata": ""}
{"_id": "745172516544b9a09308c35256b1ba0f", "text": "if goal reached , manually close the vault .", "title": "", "metadata": ""}
{"_id": "0a5e2fee5afe5030c072aa02b1ed2a71", "text": "function to withdraw Latium to owner's account .", "title": "", "metadata": ""}
{"_id": "164f875240bf390a07986d9ff1f6cba4", "text": "Returns value left to reaching crowdsale's cap .", "title": "", "metadata": ""}
{"_id": "aa653968fb9c47f240ccadb33b0f6b44", "text": "Purchase the provide token in FIAT , management command only for taking fiat payments during KODA physical exhibitions .", "title": "", "metadata": ""}
{"_id": "2c0d8b9469d3483acaf0d5e6391cde68", "text": "Execute confirmed transaction .", "title": "", "metadata": ""}
{"_id": "14a5cffde9ab976350a7c665548bba0d", "text": "Returns true if the canvas has been already finished .", "title": "", "metadata": ""}
{"_id": "ad71365b27a12ed0713c52d744c69c25", "text": "This function decides who handles lost tokens .", "title": "", "metadata": ""}
{"_id": "bea010a1dcb81eff47ed571f935957ab", "text": "Cancel pending transfer , can only be called by msg . sender .", "title": "", "metadata": ""}
{"_id": "05df2ac6ee28d8bc19ac8205fca1fea5", "text": "returns the expected return for selling the token for one of its connector tokens .", "title": "", "metadata": ""}
{"_id": "fda73d27955ca8ccd5e7599ed4a3d0a5", "text": "Rejects ERC20 transaction requests and erases all data associated with the request .", "title": "", "metadata": ""}
{"_id": "70dc49dbcdd38498e6f45f45dc43fd83", "text": "This allows the owner to withdraw surplus ETH .", "title": "", "metadata": ""}
{"_id": "031c70a52b9c60074b4cc1c8c09f27d2", "text": "To submit an outside proposal contract , you must : - ensure it conforms to ProposalInterface - ensure it properly transfers the VOTE token , calling Vote . voteX .", "title": "", "metadata": ""}
{"_id": "b2e7db6f6e05adcf3e454ba86ef6641a", "text": "Only allow wallets to call this function , not contracts .", "title": "", "metadata": ""}
{"_id": "59a70c320332d4302e94fab366c40656", "text": "User can request to convert their tokens from older AugmintToken versions in 1 : 1 transferNotification is called from AugmintToken's transferAndNotify .", "title": "", "metadata": ""}
{"_id": "11beb926e5ae2d419e36975d543196f7", "text": "Internal method called to calculate withdrawal amount .", "title": "", "metadata": ""}
{"_id": "130b3756d9d03f6853d47880b1156e80", "text": "distributes the given amount among the surviving fishes .", "title": "", "metadata": ""}
{"_id": "b1001f87c3a4a7792bb6a26f58b08ff4", "text": "This function is used to finish the settlement process .", "title": "", "metadata": ""}
{"_id": "a998a144514411b21adf9c24ad11c6d6", "text": "Check if pre-sale contract has enough Parsec credits on its account balance to reward all possible participations within pre-sale period and max cap .", "title": "", "metadata": ""}
{"_id": "fe95e0aa70cf3bf9e43c68e2b0d62a86", "text": "Attach the presale contracts .", "title": "", "metadata": ""}
{"_id": "470150724ec325ecc97abd491176166e", "text": "Remove a minter .", "title": "", "metadata": ""}
{"_id": "e16191dead92a5e7609e36283443fea2", "text": "Loads _numTokens ERC20 tokens into the voting contract for one-to - one voting rights .", "title": "", "metadata": ""}
{"_id": "84e662d9d91d5fb982e599358a74ba23", "text": "Stage Management Over .", "title": "", "metadata": ""}
{"_id": "58548fd8d0740924c568d47520e0d4bb", "text": "only Admin can mint once the given amount in the given time tokensOfTeamAndAdvisors was given by consumer multiSig was given by consumer .", "title": "", "metadata": ""}
{"_id": "927d0fbd453261aa9cac7c5ac73230a3", "text": "Functions with this modifier will only execute if the the function is called by the owners of the contract .", "title": "", "metadata": ""}
{"_id": "189d5c40e8eaef44ea6c33aebfac7b88", "text": "payment setting by string key .", "title": "", "metadata": ""}
{"_id": "f9dfc580885655f82149187bf5ed1bea", "text": "Tokens currently available for purchase in Phase 2 .", "title": "", "metadata": ""}
{"_id": "191775d69de2533301e8c4c7cd18292b", "text": "Price of 1 Aqua Token expressed in ( Australian dollar ) cents .", "title": "", "metadata": ""}
{"_id": "51799b0f6666baf0176438e330d542df", "text": "Returns the amount of tokens given for the amount in Wei .", "title": "", "metadata": ""}
{"_id": "0c03b99fa094d816175226a2325d6160", "text": "Provides a registered token's metadata , looked up by symbol .", "title": "", "metadata": ""}
{"_id": "590f917a3255a86d4ef3ff8aabcda42c", "text": "add token functions .", "title": "", "metadata": ""}
{"_id": "ce374308da34bb36abeaf09d36207002", "text": "Account can add itself as an App account .", "title": "", "metadata": ""}
{"_id": "3f8c3efafbf2f37e4ac53e82b92dd393", "text": "authorize a address to call game functions .", "title": "", "metadata": ""}
{"_id": "e3fd83eed51ee9ec6047295691833393", "text": "Allows an account to be released if it meets the time constraints .", "title": "", "metadata": ""}
{"_id": "d83eb579a2f03bbb1cb224467f3683de", "text": "Mints the below-mentioned amount of tokens allocated to the Vibeo treasury wallet .", "title": "", "metadata": ""}
{"_id": "2bcb06b9a10c2bfc3cdf00c6c0093dde", "text": "multi functions just issue events , to fix initial event history .", "title": "", "metadata": ""}
{"_id": "d90dc285dae4d92ac01c9608d8fdc71a", "text": "Internal call to burn tokens .", "title": "", "metadata": ""}
{"_id": "d48a5f71c64137ead451064181242990", "text": "getAdsLength tells you how many ads there are .", "title": "", "metadata": ""}
{"_id": "55c7fcd4257589c76f302314edcf5043", "text": "Set the token .", "title": "", "metadata": ""}
{"_id": "beb4b6f450b2aa071fb1b5330ff22a4e", "text": "set default fee .", "title": "", "metadata": ""}
{"_id": "dd52f15b59e4ce206d86a8a1a1bfad5c", "text": "Emergency brake .", "title": "", "metadata": ""}
{"_id": "8ef8a685a275e1b9a12c4fe85d13fa13", "text": "Calculate the power of a hero from its gene , it calculates the equipment power , stats power , and super hero boost .", "title": "", "metadata": ""}
{"_id": "f96540e59ebc924ec431539fec369167", "text": "Burn the remaining pool of prediction bonus tokens .", "title": "", "metadata": ""}
{"_id": "53a91342168ace65e9a4c07e73e42a91", "text": "Changes the required number of blocks for victory .", "title": "", "metadata": ""}
{"_id": "6b342d307faed4fc61e0e1af9b006bd3", "text": "Set price of NTRY corresponding to ether .", "title": "", "metadata": ""}
{"_id": "b4d7c03b64f426432562f9224fe4e4d3", "text": "The basic entry point to participate in the crowdsale process .", "title": "", "metadata": ""}
{"_id": "f76471069139624a0d3cdea8992874d9", "text": "Function reserve tokens for founders and bounty program .", "title": "", "metadata": ""}
{"_id": "209f2a2ca247ff7af9b47ebd9ee81022", "text": "This should only be needed if a bug is discovered in the code and the contract must be destroyed .", "title": "", "metadata": ""}
{"_id": "2912a21360929c9c1b88400c390e831b", "text": "Return the STO details .", "title": "", "metadata": ""}
{"_id": "eb7daf6a70ce4c4c9ea7b2129975da70", "text": "Investing function that recognizes the receiver and verifies he is allowed to invest .", "title": "", "metadata": ""}
{"_id": "5fa34b965ee8170fc8115bf63eaf5f7b", "text": "Calculate tokens user will have for theirr purchase .", "title": "", "metadata": ""}
{"_id": "10eaf27a6621f3cd0ced7f712263a479", "text": "Kill Tokens .", "title": "", "metadata": ""}
{"_id": "cfd1be2f12150f877fe0b2fee439bae0", "text": "Handles actual token transfer for payment .", "title": "", "metadata": ""}
{"_id": "838398fe0b53bb3c29c36a9124fb7332", "text": "Issue tokens to normal investors through ICO rounds .", "title": "", "metadata": ""}
{"_id": "86aebf96ddf9522e4c7dffa4b34e84ac", "text": "total number of claimants .", "title": "", "metadata": ""}
{"_id": "3380c8c3739ad8bb3dacb0712506e156", "text": "calculates the next bid amount to you can have a oneclick buy button .", "title": "", "metadata": ""}
{"_id": "dce7afd64d8f58acf8e64453011a6b98", "text": "add an address to the list of frozen accounts .", "title": "", "metadata": ""}
{"_id": "d3836ebd9f5002fe5247efcab29c060d", "text": "Change the status of the contract .", "title": "", "metadata": ""}
{"_id": "3fbfcd3c3d7877b15eabcd4d0b073acc", "text": "forwardd ether to vault .", "title": "", "metadata": ""}
{"_id": "cd834d0b1e34cf35def0e96e49c7b595", "text": "Grant another address the right to transfer a specific Panda via transferFrom ( ) .", "title": "", "metadata": ""}
{"_id": "ca1aa1a6115a6f5dd045b9e524c9f813", "text": "Forward to Price smart contract .", "title": "", "metadata": ""}
{"_id": "411d4cee06122e71577476075d274334", "text": "testable method .", "title": "", "metadata": ""}
{"_id": "ef6fe1e62c96177426464dab43b57c86", "text": "Adds a host to the lottery , increasing the security of the lottery's random number generation .", "title": "", "metadata": ""}
{"_id": "95a1852c5c145663d438c53da34bed10", "text": "Setting of basic parameters , analog of class constructor .", "title": "", "metadata": ""}
{"_id": "6d2c6233187eb3a1178e108be2e5412e", "text": "Set cooldown of heroes entered this dungeon .", "title": "", "metadata": ""}
{"_id": "988ea47fe90dcf32be97b421b693e7a5", "text": "Throw if contract is not registered .", "title": "", "metadata": ""}
{"_id": "028daec96398c50e0346d94b8d4b4c37", "text": "Pays amount of money to to account from epoch_fund .", "title": "", "metadata": ""}
{"_id": "887a6e0e7258a1345083eef3da8a9c04", "text": "Ritorna il numero totale di token .", "title": "", "metadata": ""}
{"_id": "185552f79c0db7bee87e57ca45252afd", "text": "Find allowance .", "title": "", "metadata": ""}
{"_id": "c24cc152e8bb846c3ca2d4b57e49186f", "text": "Validate if it is in ICO stage 1 .", "title": "", "metadata": ""}
{"_id": "fc76ae878982310122d41a7ee34ef4b4", "text": "Mints a single token to a unique address with a tokenURI .", "title": "", "metadata": ""}
{"_id": "efd1d7c5a060cb5455e5eef3786020f5", "text": "Throws if called when not during sale .", "title": "", "metadata": ""}
{"_id": "45b60121148def21c2f79ff81c56982d", "text": "Requests to transfer control of the Colu Local Network contract to a new owner .", "title": "", "metadata": ""}
{"_id": "8697b11a0be5bbe6df6edc93fbfc594a", "text": "This function is called by InvestContract when it receives Ether .", "title": "", "metadata": ""}
{"_id": "9897e43b063f570b61de47418258d2c5", "text": "Return UBetCheck information by supplying beneficiary adddress .", "title": "", "metadata": ""}
{"_id": "1e3642e8737480653d3dab4589101d08", "text": "exchange amount of this token to target token and transfer to specified address .", "title": "", "metadata": ""}
{"_id": "fb786ba4f2a2c0f2c2aef8bcc472e9b8", "text": "Emergency function to call only when the turn missed oraclized_query becaused of gas management failure and no chance to resume by itself .", "title": "", "metadata": ""}
{"_id": "828f9e76408db277e0505534800c0742", "text": "Contract owner can withdraw up to ownerEth amount .", "title": "", "metadata": ""}
{"_id": "74c9962fe86f40ffd8e0ad417064f8b3", "text": "Get Methods .", "title": "", "metadata": ""}
{"_id": "5f769f14535e2e3e16370ec0d99f9260", "text": "Transfer from .", "title": "", "metadata": ""}
{"_id": "92c6d4a1e7901722c94e4e32e8b31d4f", "text": "Confirm an address change and migrate vesting schedule to new address .", "title": "", "metadata": ""}
{"_id": "e36ce518be045792cc347fe1a935927d", "text": "Source of tokens .", "title": "", "metadata": ""}
{"_id": "17cca16206f2efa4d1e38318a103a19c", "text": "per address cap in Wei : 1000 ether + 1 of ether received at the given time .", "title": "", "metadata": ""}
{"_id": "8f0211e3ce27b25489070bd6ab6dd3d5", "text": "utility , converts bytes32 to a string note that the bytes32 argument is assumed to be UTF8 encoded ASCII string .", "title": "", "metadata": ""}
{"_id": "3922d8d41e9e0d42c3eaf6bcaf0348be", "text": "If the current action is not emitting , reverts .", "title": "", "metadata": ""}
{"_id": "2d6cbab46dab63715bf3d94e06610c17", "text": "Checks if the funding cap has been reached .", "title": "", "metadata": ""}
{"_id": "5b0b2c6ec679d9dd4f1bbc4fdb805c4c", "text": "Send amount tokens to to from msg . sender .", "title": "", "metadata": ""}
{"_id": "5ccacc1763d5454f6ba27d8276d28cd9", "text": "show the user's daily limit on DGX purchase .", "title": "", "metadata": ""}
{"_id": "2f16f873e498eb564372b8842cf74e7d", "text": "uint The length of the passed string .", "title": "", "metadata": ""}
{"_id": "32c2b9a717c186ea95d114046cc8b8a1", "text": "Returns top users by balances for current lottery .", "title": "", "metadata": ""}
{"_id": "5a99f7aab6639fd0ace17e7d4d9b47f3", "text": "Returns the amount for which you can redeem all tokens for the current period .", "title": "", "metadata": ""}
{"_id": "5392f7eae25433afe1dcc06e1936bca1", "text": "To convert the old tokens to the new version manually .", "title": "", "metadata": ""}
{"_id": "b6a9e3603dffbd0f3887e226027ebec4", "text": "Dividend Handling .", "title": "", "metadata": ""}
{"_id": "ede257ed3d2e2a0bd1977c10e88211c9", "text": "Placing a bet .", "title": "", "metadata": ""}
{"_id": "5a26b35911cef64b627cd9b1176874a8", "text": "Sends the disbursement amount to the wallet after the disbursement period has passed .", "title": "", "metadata": ""}
{"_id": "08803f6cddec02e8cf02a708175b506d", "text": "Set Rate .", "title": "", "metadata": ""}
{"_id": "6d60f9059f71d103ace366233cc0126b", "text": "Redeems Basket Token in return for underlying tokens .", "title": "", "metadata": ""}
{"_id": "e3065fce9c4c875f0a5f8614ceee353c", "text": "Only call after releasing all sale smart contracts , this smart contract must have enough Mozo tokens .", "title": "", "metadata": ""}
{"_id": "75c9f789b1213d7ee721af381811a3cd", "text": "allows the owner to update the extensions contract address .", "title": "", "metadata": ""}
{"_id": "efb6601b7259459424aa379cdf1935ff", "text": "Confirm Reserved Tokens .", "title": "", "metadata": ""}
{"_id": "1687ad98059bd440343beeea7a5b5a5c", "text": "Main ICO function , it requires time is smaller than the ending time of ICO and bigger than starting time of ICO .", "title": "", "metadata": ""}
{"_id": "0387d3444c88d376f671fedbd880d91a", "text": "Returns the time when it is possible for the owner to withdraw the deposited funds from the contract .", "title": "", "metadata": ""}
{"_id": "d4702f1edff147d3e955a6ad5043af10", "text": "Reveal the chosen salt and number of hash iterations , then close the current roundn and pick the winning numbers .", "title": "", "metadata": ""}
{"_id": "85d18db066dc30eb1bcf691e165e4f3b", "text": "To set the the address of the LEV token .", "title": "", "metadata": ""}
{"_id": "54f4edf6059048f0f49d6a59fcb28155", "text": "Rrice is 1000 Qvolta for 1 ETH .", "title": "", "metadata": ""}
{"_id": "5c47ec0f30e0a4c4e3ea718f37b0666e", "text": "send tokens to the given address used for investors with other conditions , only contract owner can call this .", "title": "", "metadata": ""}
{"_id": "af3b7e822f54cddcbd6b8036a818461e", "text": "only callable by current owner .", "title": "", "metadata": ""}
{"_id": "56339fb875f808a672269230fa9521fc", "text": "If weiAmountRaised is over tier thresholds , then upgrade WINK per eth .", "title": "", "metadata": ""}
{"_id": "9e6645f39040eec3226e89642ebd454a", "text": "The Lynia Chariy Pool .", "title": "", "metadata": ""}
{"_id": "a334b7f6658887da13a49b9aded4d73d", "text": "May 01 , 2018 00 : 00 : 00 UTC .", "title": "", "metadata": ""}
{"_id": "17125f3fb5cb2d70cd002905e967c6f7", "text": "set token get rate .", "title": "", "metadata": ""}
{"_id": "75952cada8e15e6c0f5306d164b5c8b2", "text": "Retrieve all contracts ever created .", "title": "", "metadata": ""}
{"_id": "51fe6befb5e858357360e89fda3c91cf", "text": "Status and utility functions .", "title": "", "metadata": ""}
{"_id": "8acacadcb06e415fcf62af7f72591781", "text": "We use this function to purchase an army with Metamask .", "title": "", "metadata": ""}
{"_id": "3710a736d67dd17d088e15406f07defd", "text": "Transfer remains to owner in case if impossible to do min BUY .", "title": "", "metadata": ""}
{"_id": "e52b23020815055fb52a512e220366d1", "text": "Burn token , only owner is allowed to do this .", "title": "", "metadata": ""}
{"_id": "d96951ef2e6893b494abc521cf3ddfc8", "text": "Get ethereum funds from ICO .", "title": "", "metadata": ""}
{"_id": "99b75f57cae0f056de7fb08194c6eb8d", "text": "Testing function to corroborate brackets data from oraclize call .", "title": "", "metadata": ""}
{"_id": "a2ad982b92e0b4eb18c7664f88629b78", "text": "Ensure sale is not paused .", "title": "", "metadata": ""}
{"_id": "3a773ce9692c1a87fe1bad593496610d", "text": "Throws if called by any account that's not a superuser .", "title": "", "metadata": ""}
{"_id": "604b8a359087a768ce8cb033fa24f8c9", "text": "Normal Period 2 ( 2020 ) - - - Bonus 3X - - - Time - - - ( 7 days ) .", "title": "", "metadata": ""}
{"_id": "7a4f2145d7e7580ec44866af1ee2c1ec", "text": "modifier to prevent buying tokens below the minimum required .", "title": "", "metadata": ""}
{"_id": "a83680ed9035f4a65e12030565e2aa74", "text": "Returns whether the address owns a token .", "title": "", "metadata": ""}
{"_id": "008e4cec02abc54cf2ca378740c6166d", "text": "This function will create a new artwork within the contract , the title is changeable later by the dev but the owner and basePrice cannot be changed once it's been created .", "title": "", "metadata": ""}
{"_id": "6a9d5ac5c8f645caf0756c22869c2ccc", "text": "Lock a token to prevent it from being traded .", "title": "", "metadata": ""}
{"_id": "0ec9f41693e720ba806726632e7560d1", "text": "Withdraw ether from the reserve .", "title": "", "metadata": ""}
{"_id": "a2d6111cee73c34dfe6167c3638e5d68", "text": "Returns the total amount of tokens minted at a given _ethAmt raised .", "title": "", "metadata": ""}
{"_id": "38d54aa3d54624776ea763d8f883efb1", "text": "Returns all the info related to the bets .", "title": "", "metadata": ""}
{"_id": "60cc6c77e26aae52cbb669777af4f1bb", "text": "This function is called by the owner to modify the cap at a future time .", "title": "", "metadata": ""}
{"_id": "d88c575c28d6ceb9dd6c655ac4798edb", "text": "ERC20 Standard : Get the account balance of another account with address tokenOwner .", "title": "", "metadata": ""}
{"_id": "6be99a39f9cf1c24fb55b4c5169a0677", "text": "Sets onlyOwner modifier for specified functions .", "title": "", "metadata": ""}
{"_id": "cf84dd7a2318dc97dc06158932221c49", "text": "Called by the owner to destroy contract .", "title": "", "metadata": ""}
{"_id": "ceb932855794926100e62aa3330e7189", "text": "Standard ERC20 .", "title": "", "metadata": ""}
{"_id": "73e97a27b108fe0cb792201d5bf738ce", "text": "symbols's name .", "title": "", "metadata": ""}
{"_id": "d0b6be2a565dde675c949f9feb921dac", "text": "Refunds ether to sender if he trasnfered tokens to contract address .", "title": "", "metadata": ""}
{"_id": "9b843c2c23589d0b0cdb86dc4dc300d1", "text": "onlyRecipient Reassigns the recipient to a new address .", "title": "", "metadata": ""}
{"_id": "fc614bb6916fb9e81da92c1bf707c171", "text": "mint mintAmount token .", "title": "", "metadata": ""}
{"_id": "b0eb84c84944c5fa1b1f5059c03cf24c", "text": "Breed a Panda you own ( as matron ) with a sire that you own , or for which you have previously been given Siring approval .", "title": "", "metadata": ""}
{"_id": "5537ef04227760cd254981a1cccb9b61", "text": "Calculate the token amount from the donated ETH onsidering the bonus system .", "title": "", "metadata": ""}
{"_id": "1a1eed13202c8b471b3c434a4dadbeae", "text": "Query Functions .", "title": "", "metadata": ""}
{"_id": "1280885b138f991bcd936348fdff51ac", "text": "param1 address The address of the contract .", "title": "", "metadata": ""}
{"_id": "1e233aafe67a890f386ce9518f263a7e", "text": "Allows owner to transfer tokens from one address to another .", "title": "", "metadata": ""}
{"_id": "21c3975fc53d0081cefd8f6e428395b1", "text": "flag that tells whether there is next address that probably had non-zero token balance at the moment of snapshot with given index ( hasResult ) ; and the next address that probably had non-zero token balance at the moment of snapshot with given index was created or zero if there are no such addresses ( result ) .", "title": "", "metadata": ""}
{"_id": "d8e5675048209208c8eebb918cc8b571", "text": "Add Wei to multiple affiliates , be sure to send an amount of ether equivalent to the sum of the _amounts array .", "title": "", "metadata": ""}
{"_id": "f76b82570a3bfc149cdda381444a66a2", "text": "Before calling setup , the sender must call Approve ( ) on the Chi token .", "title": "", "metadata": ""}
{"_id": "92b69150b166e98997cc2448b02fd883", "text": "set casino name and description by coo .", "title": "", "metadata": ""}
{"_id": "65ef1c2b923ed43f2014c91a867c1df7", "text": "Only owner allowed .", "title": "", "metadata": ""}
{"_id": "5f636428de370dcc70563d7c2e09aa42", "text": "burnHackingAmount ( ) Function only exists for the incineration of stolen FKC .", "title": "", "metadata": ""}
{"_id": "dddec4c1794d90c0eae96042517be8c5", "text": "Modifier to make a function callable only for owner and saleAgent when the contract is paused .", "title": "", "metadata": ""}
{"_id": "c432473d095d057ec992903b710b4961", "text": "Checks if auction has ended .", "title": "", "metadata": ""}
{"_id": "42634defb3420f8d694c740de7319ff0", "text": "overriding Crowdsale buyTokens to add pausable sales and vip logic .", "title": "", "metadata": ""}
{"_id": "395f199cfa5596d737a690a6501db566", "text": "If a confiscation court motion has passed and reached the confirmation state , the court may transfer the target account's balance to the fee pool and freeze its participation in further transactions .", "title": "", "metadata": ""}
{"_id": "ab7d6fc11301bd4a4b0062fab69e30f6", "text": "Integer division of two numbers truncating the quotient , reverts on division by zero .", "title": "", "metadata": ""}
{"_id": "6d149272ed7fef64e3bb026fbd1f92ab", "text": "Checks to see if a given Puppy is pregnant and ( if so ) if the gestation period has passed .", "title": "", "metadata": ""}
{"_id": "a5854575a76769899f86fba05c6ced20", "text": "Withdraw MLN .", "title": "", "metadata": ""}
{"_id": "2582c70c018f0ef592da9f3635844492", "text": "extract a string from a bytes .", "title": "", "metadata": ""}
{"_id": "d81d011217bb35510b8b7aa7b34bcd19", "text": "generate a true random num , two methods are provide , to avoid single point failure randomGenerateMethod 0 - random num generate from random . org .", "title": "", "metadata": ""}
{"_id": "70fed6a06ff384fa75cf953ae5fd1be9", "text": "Returns number of purchases to date .", "title": "", "metadata": ""}
{"_id": "b56c3cd3d60f479d9dfa940f7a2aec2a", "text": "Allows the exec admin to set the registry exec id from which applications will be initialized .", "title": "", "metadata": ""}
{"_id": "106100fefa803796a4f190a91ad9a5b2", "text": "Disable the splitting function .", "title": "", "metadata": ""}
{"_id": "3241893ffb677e8f418db6eb8573cb0b", "text": "set the fees rate .", "title": "", "metadata": ""}
{"_id": "44ae509b01ac45231863f8491ecd6931", "text": "cotnract owner unlock some token for target address despite of time .", "title": "", "metadata": ""}
{"_id": "364d6be2737c8e2745279799179e190c", "text": "Owner can withdraw any accidentally sent eth .", "title": "", "metadata": ""}
{"_id": "6b6edd3b9f5de5064e91c4ec5382d01a", "text": "Used by owner to change the amount of actions there are .", "title": "", "metadata": ""}
{"_id": "79988383e2af50a8172d701532231fd9", "text": "A descriptive name for a collection of NFTs in this contract .", "title": "", "metadata": ""}
{"_id": "8e9ee6cde190f64677a663f5d5224921", "text": "The total supply .", "title": "", "metadata": ""}
{"_id": "f0dd6c11b2cd04ddd5390cdc1925447f", "text": "Access modifier , which restricts a call to happen once the game is started .", "title": "", "metadata": ""}
{"_id": "334b498196de0f612cbf5fc8fa00a334", "text": "An EXTERNAL update of tokens should be handled here .", "title": "", "metadata": ""}
{"_id": "f13a5ed4f78efc9017e57ed12b79230f", "text": "destroys the token .", "title": "", "metadata": ""}
{"_id": "9aae416f6002cf63cfd263c82e65a85c", "text": "Return current round .", "title": "", "metadata": ""}
{"_id": "d41056acb38c9ed459f80bd744fdb085", "text": "sends ETH to BUGX team .", "title": "", "metadata": ""}
{"_id": "8ef6d1b2863dc96e18a3e532e0d14f60", "text": "result : healthy longevity .", "title": "", "metadata": ""}
{"_id": "7e54dfdd1226a30b365100d5fbf062e3", "text": "Returns how much of an order was filled .", "title": "", "metadata": ""}
{"_id": "ade2c2cd0ad8dfed55d6947dfaca58de", "text": "Triggers a Chibi event getting some additional data .", "title": "", "metadata": ""}
{"_id": "f152e9e3f10c0607231436abf31a069e", "text": "Returns asset decimals .", "title": "", "metadata": ""}
{"_id": "c88d9ff15458897a47c239b6782e8437", "text": "Returns the amount which _spender is still allowed to withdraw from _owner .", "title": "", "metadata": ""}
{"_id": "bbe988daf550626d0768dacfb09b9212", "text": "Splits the slice , setting self to everything before the last occurrence of needle , and token to everything after it .", "title": "", "metadata": ""}
{"_id": "5920e4c1aeb480406f2dae233367e913", "text": "Finalization logic .", "title": "", "metadata": ""}
{"_id": "030de9d77558e376d0baae6008c17555", "text": "Get discount percent for number of tokens .", "title": "", "metadata": ""}
{"_id": "fa429e62deef3878d14758cbe917283b", "text": "Function to check if a specific adress is a winner during a specified round .", "title": "", "metadata": ""}
{"_id": "15285e1958d1c771829b191b94aef7b0", "text": "Administrative actions .", "title": "", "metadata": ""}
{"_id": "bdb7597e1b1e0031ee31dc027aa1059a", "text": "This function makes it easy to get the total number of tokens .", "title": "", "metadata": ""}
{"_id": "c220970a2aafedb0ec5b830891a8ba02", "text": "Whether the deauthorization was successful or not .", "title": "", "metadata": ""}
{"_id": "81e78255e36cec6b7f034a29130a6ab2", "text": "Add wei amount to the address's amount on the whitelist contract .", "title": "", "metadata": ""}
{"_id": "f7c1af088d7ae217eda9eb73c6f56fde", "text": "Required methods of ERC721 .", "title": "", "metadata": ""}
{"_id": "f046eb3b4d996ff54228bbdd3b40c32f", "text": "Grove linked list traversal .", "title": "", "metadata": ""}
{"_id": "704fe90107f449d48465cc187bf5f69b", "text": "Transfer token to this contract , which is shorthand for the owner ( Mint ) .", "title": "", "metadata": ""}
{"_id": "6fdc6b7161cfc80d75cd7f66f3c896a2", "text": "Query if a contract implements an interface .", "title": "", "metadata": ""}
{"_id": "4ad11b6929927a0222d69aec6c3bdd21", "text": "help debug mining software .", "title": "", "metadata": ""}
{"_id": "bf004d6c7161aa455c40f91224ac1903", "text": "Override StandardToken transferFrom .", "title": "", "metadata": ""}
{"_id": "a3cccc01e23a420993c2c437aa3cb4df", "text": "pause ( overridden function ) .", "title": "", "metadata": ""}
{"_id": "2f7f3841874cf164109bb40058d05711", "text": "check if the provided signature is valid , internal .", "title": "", "metadata": ""}
{"_id": "a35bc12a1af9b84253a6db0c0871d2c6", "text": "Claim auction tokens for receiver_address after the auction has ended .", "title": "", "metadata": ""}
{"_id": "aca8f1768e3d1466486aaa75504ca5c3", "text": "Gets base URL so GUI will know where to seek for storage .", "title": "", "metadata": ""}
{"_id": "4ccd0cdaab877f294d658792c92f7e4e", "text": "Calculating hash with a oracilize seed ( Wolfram ) .", "title": "", "metadata": ""}
{"_id": "2319fd9a31a0de47bb94efef30a619ef", "text": "You can claim current balance if you put the same amount ( or more ) back in .", "title": "", "metadata": ""}
{"_id": "3f98f61c8d4aea6784aeebf883b339c2", "text": "Withdraw house stake and profit .", "title": "", "metadata": ""}
{"_id": "bb75a4d40a6d567dfffbf2843b05926e", "text": "Transfer the WEDU token .", "title": "", "metadata": ""}
{"_id": "e32cd31c3f52401bf5d06ff26c590ed1", "text": "transfer token to a specified address .", "title": "", "metadata": ""}
{"_id": "fa17cf38adfbb9fa015b4f4779ab323c", "text": "Creates a new Edition with the given name and worldQuantity which will never be overcome .", "title": "", "metadata": ""}
{"_id": "326071a84de0e04e31f96189b0cd1319", "text": "Arrays must be of equal length , otherwise will return false .", "title": "", "metadata": ""}
{"_id": "73eec2fa1a24b2f48beb4c15ea948ab2", "text": "leave the game pays out the sender's winBalance and removes him and his animals from the game .", "title": "", "metadata": ""}
{"_id": "37fe4b2572bbef27dedd63d0a32a8ff4", "text": "whiteList verification .", "title": "", "metadata": ""}
{"_id": "301e3ed6e70e00206aa113127c56ae17", "text": "Converts all incoming Ethereum to tokens for the caller , and passes down the referral address ( if any ) .", "title": "", "metadata": ""}
{"_id": "22ff43379233829ade828020d7dfffc6", "text": "Sets the ABI associated with an ENS node .", "title": "", "metadata": ""}
{"_id": "2add6cb9367082daee139717978fc4d6", "text": "Called once by anybody after the sale ends .", "title": "", "metadata": ""}
{"_id": "426cc4ea5b6e69425565bd5c4c542181", "text": "Throws if date isn't between ICO dates .", "title": "", "metadata": ""}
{"_id": "5cea0a536c9175114a36349eab975d9f", "text": "Tokens freeze logic , according to ICO White Paper .", "title": "", "metadata": ""}
{"_id": "4e4c76a5faefc188483d52a0faa400f7", "text": "Declines transfers from / to frozen addresses .", "title": "", "metadata": ""}
{"_id": "bc6e52aebbba3c9c1b68de8cc519e4a9", "text": "If best bid is not set or price higher than best bid price , this order is the new best bid .", "title": "", "metadata": ""}
{"_id": "6b9eb7dffac8027a034ccc0a9b791fde", "text": "Helper function that transfers to address .", "title": "", "metadata": ""}
{"_id": "7a3f8a6a76a9723a8e2ce3247041e43a", "text": "A knight may attack a dragon , but not choose which one .", "title": "", "metadata": ""}
{"_id": "0a3929437a32c952887da25fdb26750e", "text": "not really needed as we fix the max tiers on contract creation but just for completeness' sake we'll call this when all tiers have been added to the contract ( not possible to deploy with all of them ) .", "title": "", "metadata": ""}
{"_id": "c90f9ca7a8372fc0dbfd06c72b95348f", "text": "Register multiple new DINs .", "title": "", "metadata": ""}
{"_id": "9e9daeb3498bfc31cf43f5a170ad769d", "text": "Safely multiply two numbers .", "title": "", "metadata": ""}
{"_id": "30e1fe282f4374792600569e5b013434", "text": "ERC223 method to transfer token to a specified address with data .", "title": "", "metadata": ""}
{"_id": "6cd24033eb2c130db2144091dd7efc5e", "text": "Deploys DRCT tokens for given start date .", "title": "", "metadata": ""}
{"_id": "ea89a450d8e0353e7032a29250bc4035", "text": "Orclize __callback ( ) and hedgeTransaction ( ) .", "title": "", "metadata": ""}
{"_id": "c413e247b9a45b4cf633772a9eaa39a5", "text": "Generates the sha256 jobHash based on job parameters .", "title": "", "metadata": ""}
{"_id": "f99e564a493f0a1eaccc2c2402ec2379", "text": "Set price of one Ponzi token in wei .", "title": "", "metadata": ""}
{"_id": "99a5ff992b1b033da6d1296bee219bb8", "text": "process a failed roll .", "title": "", "metadata": ""}
{"_id": "db3fd8a137a000816e78e321c8c8a3db", "text": "Set Max Gas Price by Admin .", "title": "", "metadata": ""}
{"_id": "5fedec3cd5fe61bf068b90f85dc0e1aa", "text": "Get the remaining funds needed to end the auction , calculated at the current GOT price in WEI .", "title": "", "metadata": ""}
{"_id": "2ea1c5424e77e84313cd409e3bd5cb31", "text": "allows the owner to collect the accumulated fees sends the given amount to the owner's address if the amount does not exceed the fees ( cannot touch the players' balances ) .", "title": "", "metadata": ""}
{"_id": "63f906fc16f4f7498d6fd99d140df853", "text": "Checks that a given kitten is able to breed ( i . e .", "title": "", "metadata": ""}
{"_id": "3877b485c115027d5b89875d1df38c70", "text": "Return the alloance of a proxy .", "title": "", "metadata": ""}
{"_id": "d1de4eea6485114c443e9dc307b4a5ed", "text": "Set big lock price .", "title": "", "metadata": ""}
{"_id": "b3422cb2f21e2884045b22e5b26011db", "text": "function call after crowdFundEndTime it transfers the remaining tokens to remainingTokenHolder address .", "title": "", "metadata": ""}
{"_id": "8f26db45e788b23ff95d1a38754de688", "text": "Unpauses the MVM .", "title": "", "metadata": ""}
{"_id": "29c8f07478686e781a38937cece7ca32", "text": "Remove all Ether from the contract with the owner's cuts .", "title": "", "metadata": ""}
{"_id": "004bf7f1ef1ae548cc659781650164d8", "text": "the function of adding to the balances .", "title": "", "metadata": ""}
{"_id": "cf10eaabe034ab0bbef09707f7d0855b", "text": "Throws if called by any account other than the authorized or owner .", "title": "", "metadata": ""}
{"_id": "afce0cf19276980bf0fcd4c019187e92", "text": "batch transfer token for a list of specified addresses .", "title": "", "metadata": ""}
{"_id": "deded4efbb32a844b793e08ad9f7c242", "text": "Used by either the topWizard or subWizard to transfer all rights to future commissions to the _replacement wizard .", "title": "", "metadata": ""}
{"_id": "1196eb0a77585fa40bf01cd03f80f7ec", "text": "Enable the transfer of current tokens to others .", "title": "", "metadata": ""}
{"_id": "c60d04acedd2d9ff2ab544fc3a4a6f28", "text": "declare the token sale is complete , and reference the balance .", "title": "", "metadata": ""}
{"_id": "24a4c09bd931227b1d84634eaf2e93f3", "text": "Allows the owner to change market fees .", "title": "", "metadata": ""}
{"_id": "40c05a8c413f046f893d98bb73ae187c", "text": "Calculate the current reward value .", "title": "", "metadata": ""}
{"_id": "34b7cb0c650402afff0e6dd90542d00c", "text": "function who regulate every bet and his proccess .", "title": "", "metadata": ""}
{"_id": "88b144a3da678bc12a1128e6411aa259", "text": "Count of parameters in factory .", "title": "", "metadata": ""}
{"_id": "334b33bea3ce500237cc570fdea248e0", "text": "Method what should be called with external contract to receive tokens .", "title": "", "metadata": ""}
{"_id": "a47164c8d3142340ee540cfe1473759e", "text": "Grants editor rights to the passed address .", "title": "", "metadata": ""}
{"_id": "06f0d0b5bad006f3ec88beed29620e4b", "text": "Change price from 1000 SOLA 1 ether to 500 SOLA 1 ether .", "title": "", "metadata": ""}
{"_id": "8ea9395a05e57eea61954f40ccb8e409", "text": "Allows the current owner to change token name .", "title": "", "metadata": ""}
{"_id": "e3787474951421e29356460107c78582", "text": "Parses n of type bytes to uint256 .", "title": "", "metadata": ""}
{"_id": "eeec72823d7765d479f270ce9087d56d", "text": "the number of zeroes the digest of the PoW solution requires .", "title": "", "metadata": ""}
{"_id": "c4091311ea7872dda4aa84a61d15f914", "text": "Function to distribute tokens to the list of addresses .", "title": "", "metadata": ""}
{"_id": "b6af64184658d094e5df3f041d18035f", "text": "adding 5 addresses at once .", "title": "", "metadata": ""}
{"_id": "786e753e40e688b131c35578489a1c82", "text": "Returns if amount is within daily limit and resets spentToday after one day .", "title": "", "metadata": ""}
{"_id": "be6a3017641c571aebccf24e5f89b1d6", "text": "Take snapshot .", "title": "", "metadata": ""}
{"_id": "5005b6066252db10aa9d5c70962a71f1", "text": "batch set quota for early user quota if openTag 0 , removed .", "title": "", "metadata": ""}
{"_id": "d6b3766aaea96c300aead16058aeb06c", "text": "Get all token IDs of address .", "title": "", "metadata": ""}
{"_id": "56417a591b9a1ef6364562a86bd52f80", "text": "add a node for a specified address .", "title": "", "metadata": ""}
{"_id": "7ec324a41b084cafe6443e9c1c01e497", "text": "Total amount of tokens at a specific _blockNumber .", "title": "", "metadata": ""}
{"_id": "5aa550db860a3c8162356e2aae2b0e3f", "text": "Function to add owner address .", "title": "", "metadata": ""}
{"_id": "b00f14b8c85803439e361b054126bdcf", "text": "distributes eth based on fees to com , aff , and rp1 .", "title": "", "metadata": ""}
{"_id": "1b884fb80f3cbd21aa31c585f0cf53f7", "text": "process a successful roll .", "title": "", "metadata": ""}
{"_id": "92dd37fb1752569a8da543cf1daa6c00", "text": "Multisig member votes on a proposal .", "title": "", "metadata": ""}
{"_id": "96b795b828b0a75b1d973556c238100b", "text": "decreaseApproval of spender when not paused .", "title": "", "metadata": ""}
{"_id": "f402d7f0670b54adc515502b07f30c1d", "text": "show timelocks in an account .", "title": "", "metadata": ""}
{"_id": "88c70adf31103705d1ac395efcb83aad", "text": "Helps moving pending balance from one role to another .", "title": "", "metadata": ""}
{"_id": "cf7c32f05d29238bc239e7994a4a2469", "text": "Allows the Hydro API to set a minimum hydro balance required to register unofficially .", "title": "", "metadata": ""}
{"_id": "a6cd1f6c946c5eb1d33be71effcf54d0", "text": "standard method for transferFrom from ERC20 .", "title": "", "metadata": ""}
{"_id": "b6b2dd16312bc026bbbef3bbcf842759", "text": "this method is used to GET CrySol Objects from one OWNER .", "title": "", "metadata": ""}
{"_id": "432b71b279b4d1b7104ae98c09cbb6c0", "text": "Publish a new extension in structure .", "title": "", "metadata": ""}
{"_id": "840cb7d2846aa34e505633e20237e8c2", "text": "condition to be creator address to run some functions .", "title": "", "metadata": ""}
{"_id": "318e8abb88a40b91a4a615912c785fe7", "text": "Change the status of a DAppNode package .", "title": "", "metadata": ""}
{"_id": "f1427a697d589a3b7482251952a06a59", "text": "return true if offers low priced less than or equal to offers high .", "title": "", "metadata": ""}
{"_id": "6e1c8188d80ef952e435d4a822541f79", "text": "THE STANDARD VALUE IS STORED IN maxPaysPer .", "title": "", "metadata": ""}
{"_id": "8c36124240c1769ae8c6c5e9c6a9e747", "text": "withdraw some of the Ether .", "title": "", "metadata": ""}
{"_id": "fddecceaa56a6cf095797b7d60388a79", "text": "initialize the contract after transfering all of the tokens form the pair .", "title": "", "metadata": ""}
{"_id": "7b8c16668ccf64616ee25d3efa9b7899", "text": "get list of vesting users address .", "title": "", "metadata": ""}
{"_id": "7c396261a257ac8cfe2df037baf9c4bb", "text": "let the owner withdraw the funds .", "title": "", "metadata": ""}
{"_id": "106946f13c2695a1a28293d268181318", "text": "Allow owner to add to the whitelist .", "title": "", "metadata": ""}
{"_id": "a6ee16fb7c83976a2ccb28425db3f8ad", "text": "Computes whether a segment is eligible for verification based on the last call to claimWork ( ) .", "title": "", "metadata": ""}
{"_id": "170a6a73524b4d072721e3e6a385e929", "text": "Returns the saved referral .", "title": "", "metadata": ""}
{"_id": "21b3636bf32c5357d11c65b7386730f4", "text": "create a new subscription offer .", "title": "", "metadata": ""}
{"_id": "bcaa0ddffbc30e2108fcc0905d73a1c9", "text": "Get info on orders .", "title": "", "metadata": ""}
{"_id": "8d3b4cadaa6f0287b340939f14836264", "text": "PropertyDapp Functions .", "title": "", "metadata": ""}
{"_id": "1bd0674eded575333ec3918a5b9ef5c4", "text": "Send ether out of this contract to multisig owner and update or delete entry in multisig mapping .", "title": "", "metadata": ""}
{"_id": "e09da885504afe8a34136d6bccd38625", "text": "Change prejackpot cap to prevent game rigging .", "title": "", "metadata": ""}
{"_id": "2e25381e2d1c1b61bfad7ce824a36e81", "text": "some helpful functions https : / / github . com / oraclize / ethereum-api / blob / master / oraclizeAPI_0 . 5 . sol .", "title": "", "metadata": ""}
{"_id": "2e9afde5c7a048ccc8644d6470e058c9", "text": "add member to blocksquare group .", "title": "", "metadata": ""}
{"_id": "2413789d9de1e8cf201c0d5d591e0a25", "text": "Used by transfer function .", "title": "", "metadata": ""}
{"_id": "3888396d9decd253f1a10d4a11cf446f", "text": "Assigns ownership of a specific Country to an address .", "title": "", "metadata": ""}
{"_id": "37a64a50f6fc82b95e2b7cd3265e6b9c", "text": "Updates the fee contribution multiplier required for calling trainX ( ) .", "title": "", "metadata": ""}
{"_id": "6661d1f69b4ac1c31d6cfb8b73264a5e", "text": "tx5 : player one ends coin flip with reveal .", "title": "", "metadata": ""}
{"_id": "a9f1a0f6c191882ce6048a5beaaf5c3d", "text": "add a whitelisted address .", "title": "", "metadata": ""}
{"_id": "ea6b020c4a91e3277d45ca2e2da8fea0", "text": "This function is called from a javascript through an authorized address to inform of a transfer of old token .", "title": "", "metadata": ""}
{"_id": "04cb1f73ab1d7037269779b9e51aca05", "text": "Function to resume Distributing new tokens .", "title": "", "metadata": ""}
{"_id": "46fb733a0877646e419e3625dfb3ff5a", "text": "Modifier to make a function callable only when the contract is accepting deposits .", "title": "", "metadata": ""}
{"_id": "0e0f5a12ddb006e49959550cfcf0e47e", "text": "Transfer Restriction .", "title": "", "metadata": ""}
{"_id": "2bb8f56ce3f902e76bf1f504737f8fd4", "text": "withdraws 'amount' of EUR-T by burning required amount and providing a proof of whithdrawal .", "title": "", "metadata": ""}
{"_id": "1a45bef61e1a48a5d750a5cd1a1f0b7a", "text": "Locks all funds on account so that it's possible to withdraw only specific tranche amount .", "title": "", "metadata": ""}
{"_id": "8577c269ae0b2db49c940e62879c31d0", "text": "To deposit tokens , users must first approve the transfer in the token contract .", "title": "", "metadata": ""}
{"_id": "58f2b2393b82ac535d86376ffeb68ef9", "text": "Allocate divs for the day ( cron job ) .", "title": "", "metadata": ""}
{"_id": "d6c8251e607b326b9a3d8a6986584123", "text": "Rebuild the previous invest data and do a token reissuance .", "title": "", "metadata": ""}
{"_id": "decdc128e8a9fbcdd32a7446101376b2", "text": "Checks whether the period in which the betting is open has already elapsed .", "title": "", "metadata": ""}
{"_id": "f57f1311a1752525f01342ce320f3e44", "text": "Get the sell price at the user's average dividend rate .", "title": "", "metadata": ""}
{"_id": "8614bea6679974e4e6147531231be5cc", "text": "true if tokens were sold successfully , false otherwise .", "title": "", "metadata": ""}
{"_id": "4325517055ea457a54a80b36a92b2e62", "text": "Processes the presale if the allowed contribution is more than zero .", "title": "", "metadata": ""}
{"_id": "6e6b808df502acf7005f11b453b014c6", "text": "Revokes _entity the ability to perform actions of role _role on _app .", "title": "", "metadata": ""}
{"_id": "f13cb1b2a64ea06e5abdea85aa38ccc5", "text": "As a buyer , rate a transaction .", "title": "", "metadata": ""}
{"_id": "c18da08667427e631ee7749ca18f3db9", "text": "Prevent to interact if the game is not open .", "title": "", "metadata": ""}
{"_id": "3f12d8f800a5a45fdc20e316c732baaf", "text": "Is the juror drawn in the draw of the dispute .", "title": "", "metadata": ""}
{"_id": "9fb69bd32f5b0c88ec914f0fdf609973", "text": "Hold coins .", "title": "", "metadata": ""}
{"_id": "2f24d4a099c244ba2ab7afc6bce741b1", "text": "Withdraw Beercoins from multiple users .", "title": "", "metadata": ""}
{"_id": "8f9f8391128e31c9de56f23c323be66c", "text": "Public entrypoints .", "title": "", "metadata": ""}
{"_id": "0a06c994919967a9ca9609343ed7f9d1", "text": "transfer function to enable token transfer for a specified address gets address _to The address to transfer to .", "title": "", "metadata": ""}
{"_id": "8df0ec93daacc6826ad1af592477b60d", "text": "Creates a new promo meme with the given metadata and text , with given _price and assignes it to an address .", "title": "", "metadata": ""}
{"_id": "a0b7fc5b79531e7809e33ee3d65ddfe1", "text": "Prepare sell of the tokens .", "title": "", "metadata": ""}
{"_id": "abfdee392717b4c6d0b2caedaa773047", "text": "returns whether or not the provided _account is authorized to participate in the crowdsale .", "title": "", "metadata": ""}
{"_id": "d65f74e2d215737b3181ab8f428f14b5", "text": "A vote motion either not begun , or it has completely terminated .", "title": "", "metadata": ""}
{"_id": "3135900809e539e163dc65d32b5b9aca", "text": "PyFactory payout of winner .", "title": "", "metadata": ""}
{"_id": "e4db44716087a07472aa43a3e2ad9aba", "text": "true if presale event has ended .", "title": "", "metadata": ""}
{"_id": "1311842852768d27141e11a2105a6522", "text": "Returns estimate of 2 * * x given x .", "title": "", "metadata": ""}
{"_id": "71e74ff880dcc70dd121dfef39da5838", "text": "modifier to check if max .", "title": "", "metadata": ""}
{"_id": "0b19d1c07915174ea3ec9be9a534131d", "text": "register the addresses for token sale .", "title": "", "metadata": ""}
{"_id": "27c351bb4ca212e28cde32bab29d1c1e", "text": "Unfreezes frozen address .", "title": "", "metadata": ""}
{"_id": "fb5a97b5c2a695f3c1856cb74d39adb4", "text": "true if the transaction can buy tokens from presale or ICO , includes funding cap check .", "title": "", "metadata": ""}
{"_id": "8655bffbc7231f6298274f07134b0d99", "text": "mechanism for Nuru Token Creation only minter can create new Nuru Tokens check if Nuru Hard Cap is reached before proceedig - revert if true .", "title": "", "metadata": ""}
{"_id": "eab178f10144cbbed50bcd3ce5ffaa8b", "text": "Returns all the relevant information about a specific color .", "title": "", "metadata": ""}
{"_id": "dd07646a3f1074b6a96188acf39a02e2", "text": "Creates a new Dank with the given name .", "title": "", "metadata": ""}
{"_id": "47e0584461fc5fd32e6fddb4e7f649d0", "text": "For creating Player .", "title": "", "metadata": ""}
{"_id": "7d476d6bc533934f29da05a1a92d154a", "text": "Called by owner to alter the token timelock .", "title": "", "metadata": ""}
{"_id": "9e21df732ab8b10024827c403c6d422c", "text": "Withdraw ether from the multisig .", "title": "", "metadata": ""}
{"_id": "176ff542fdbc20d7bbf48b2051ab446e", "text": "Fetch total coins gained from interest .", "title": "", "metadata": ""}
{"_id": "1d0bf17f4d11c682b9b539977e24434b", "text": "Add a single address to white list to allow purchase for more than 10 ETH .", "title": "", "metadata": ""}
{"_id": "d25378ab23e0369c81078c5aec6bb12e", "text": "Pause the presale in the event of an emergency .", "title": "", "metadata": ""}
{"_id": "baced1498c0b6e4e6972bbdc5708019f", "text": "ShowChargeTime ( ) looking for the charge time .", "title": "", "metadata": ""}
{"_id": "b5c5c1b0beda7a00b84c467d8aeece69", "text": "function accepts Ether and allocates Aqua Tokens to the sender .", "title": "", "metadata": ""}
{"_id": "33201d4964dd5602af3597932822565b", "text": "LAND Transfer .", "title": "", "metadata": ""}
{"_id": "f2f424ec606354ae504e871c9d363895", "text": "race lifecycle management functions place the oraclize queries and open betting .", "title": "", "metadata": ""}
{"_id": "cec76256202e609889e407dd830446c6", "text": "Withdraw the earned Torch Dividends to Ether - Does not touch Token Dividends or Token Referral Bonuses .", "title": "", "metadata": ""}
{"_id": "d1757c771bc20f84309757b067d9bb53", "text": "Pool Management .", "title": "", "metadata": ""}
{"_id": "a726aea39b93785f9df1a49f6e6ae45e", "text": "freeze Prevent Allow target from sending receiving tokens .", "title": "", "metadata": ""}
{"_id": "0dc00892d17dce3d05b5dd4493490fca", "text": "Add all unique participants for receiving airdrop .", "title": "", "metadata": ""}
{"_id": "3608e51a84cc1d46351cfdbad5c751c4", "text": "End Public Functions Private Functions : .", "title": "", "metadata": ""}
{"_id": "488de972516b010ca01dec2a57fd53f4", "text": "Send value of ether to address to .", "title": "", "metadata": ""}
{"_id": "c082fe5a95b9ae2e4d83799c4f93fdfb", "text": "owner can add slots in batches , 100 max .", "title": "", "metadata": ""}
{"_id": "81cc2fe006dbd33dae4683da6868a41d", "text": "True if in presale phase .", "title": "", "metadata": ""}
{"_id": "f52a9ff7f5f2e39d3a68183bf167277d", "text": "Check that address is allowed to interact with functions .", "title": "", "metadata": ""}
{"_id": "a28365e6af6ad862da7fbdf96031af72", "text": "The owner of this contract can change the controller of the APT token .", "title": "", "metadata": ""}
{"_id": "be92b9cb72dd39d27f5dc5742db2736e", "text": "Gets the prevNode a new node should be inserted after given the sort factor .", "title": "", "metadata": ""}
{"_id": "a7ec8c2ce31c7a1f395ece5ac7cf45d2", "text": "Called by 'owner' to unlock the token .", "title": "", "metadata": ""}
{"_id": "691522ef3d0b6100393db472adb1b357", "text": "This function should only be called in the unfortunate case that Enjin should refund from a different address .", "title": "", "metadata": ""}
{"_id": "eced37bfd12163909f175baa1f7fb6ec", "text": "Allow the owner to change the minimum bet .", "title": "", "metadata": ""}
{"_id": "2cfe885349750eb743c6f39fdf7c844d", "text": "Owner can mint new tokens while minting is enabled .", "title": "", "metadata": ""}
{"_id": "e8f8299b70a8bb8ee06b91ed509c6e61", "text": "method to check the user balance .", "title": "", "metadata": ""}
{"_id": "316b3fea4133c7ea1b90962fa7610a26", "text": "Return the address of the contract owner .", "title": "", "metadata": ""}
{"_id": "56b96697c0fb75c388ce06d87636ad57", "text": "x / y * 2 128 .", "title": "", "metadata": ""}
{"_id": "65b1ec2026c1d60929fddd123a7a6786", "text": "Withdraw lender funds in batch , it walks by all the loans between the two index , and withdraws all the funds stored on that loans .", "title": "", "metadata": ""}
{"_id": "807a342a90ab20b0647052a23f09be43", "text": "Next element of list .", "title": "", "metadata": ""}
{"_id": "b111cb850b68dd2d5d544cd5b27f1be7", "text": "Opens loot box and generates new item .", "title": "", "metadata": ""}
{"_id": "c45545aab2acafa073272a1aff8a751a", "text": "Create each mint of a Accessory card .", "title": "", "metadata": ""}
{"_id": "a2864f022689dcdfae905023a3ffcff7", "text": "Private Functions : .", "title": "", "metadata": ""}
{"_id": "82d448cf2698d6a80370be7033cec516", "text": "Return transcoder information .", "title": "", "metadata": ""}
{"_id": "806af8621c1d8ceeda3ab4b15e64056a", "text": "returns true iff the contract is open for public trade .", "title": "", "metadata": ""}
{"_id": "c05c6fd87fb8ba7880c7277cc3d1b7a6", "text": "transfer method , with byuout .", "title": "", "metadata": ""}
{"_id": "2a5499a824a6f0f1cf0257b9cf37021a", "text": "Determine if an address is a signer on this wallet returns boolean indicating whether address is signer or not .", "title": "", "metadata": ""}
{"_id": "5645b274258f13c24d0eeddac115cb68", "text": "collect all combined warriors data .", "title": "", "metadata": ""}
{"_id": "b1f9cd7a85155184f787f3277ff90311", "text": "turn on the funding state .", "title": "", "metadata": ""}
{"_id": "eb4f4b23c7d9c613918dbe2a7524d2ef", "text": "Returns true if the FT ( ERC-20 ) is on auction .", "title": "", "metadata": ""}
{"_id": "a59177418b4fb733180decf85c061fb5", "text": "For wallet Founding Investor and Initiator Team .", "title": "", "metadata": ""}
{"_id": "bd5240147473f24b7eef5cd068b27cbf", "text": "ERC20 implementation starts here .", "title": "", "metadata": ""}
{"_id": "5b3119108bd71c3f2874f9fcdb8824bd", "text": "function for external token purchase .", "title": "", "metadata": ""}
{"_id": "17ea833289d5a7b21734cdb006d90cea", "text": "reward the beneficiary at _index .", "title": "", "metadata": ""}
{"_id": "fce6e25562d46c9f0e87442f4e54e94a", "text": "Internal Price Calculation - compute amount in counter currency that would be obtained by selling baseAmount at the given unpacked price ( if no fees ) .", "title": "", "metadata": ""}
{"_id": "36e8e1a8c3b8b2c58d098d699fa8ad28", "text": "minimum_purchase_amt : The minimum ammount of tokens the buyer must purchase .", "title": "", "metadata": ""}
{"_id": "a796cea3939f621f6bf753d07cd96e84", "text": "Put a EtherDog up for auction to be sire .", "title": "", "metadata": ""}
{"_id": "03740b4b724a0e94665c8d618718297f", "text": "Uses the requested amount if its within limit .", "title": "", "metadata": ""}
{"_id": "21a15e435e35a1bdd7669f7cbb02ff4d", "text": "Throw if the blob is not updatable .", "title": "", "metadata": ""}
{"_id": "557518f6a986fcc506a84f60a9ca27d3", "text": "checkbet on oddeven bet type : parity input : 0 for even , 1 for odd .", "title": "", "metadata": ""}
{"_id": "2f162da7f42deebb4e997be33c48e741", "text": "Calculate minimum .", "title": "", "metadata": ""}
{"_id": "7abea3546b3db7b92803a9bf164611b8", "text": "Arena contract uses this on either a win or lose .", "title": "", "metadata": ""}
{"_id": "82710aa132fc9012d64c26387a2acb96", "text": "Get z index and z count .", "title": "", "metadata": ""}
{"_id": "958682abeebff8f8387024f139e6f961", "text": "STEP 3 : when someone contributes to the lottery , check to see if we've met the requirements for a draw yet .", "title": "", "metadata": ""}
{"_id": "c45609aadd89f4ca32a1b294bf844ddf", "text": "Finalizes the token sale event : make future development pool grant ( lockup ) and make token transfarable .", "title": "", "metadata": ""}
{"_id": "fa5511170348040bacd504fe125ea3ce", "text": "Transfer ownership of an ELHT , '_to' must be a vaild address , or the ELHT will lost .", "title": "", "metadata": ""}
{"_id": "1566cbead46f52cfe54970efd6caedcf", "text": "Sets the color of an individual pixel .", "title": "", "metadata": ""}
{"_id": "881d37435aba614e8a19ab49b5d0822d", "text": "Initializes a storage buffer in memory .", "title": "", "metadata": ""}
{"_id": "f731cbe54312167b675e80681732e9ca", "text": "utility function for the receivePurchase function .", "title": "", "metadata": ""}
{"_id": "9afaa156b19e47f9c691e02d3b0513e8", "text": "override to set max cap + tier per user .", "title": "", "metadata": ""}
{"_id": "7363ab715a31778b1b40c35da4d3d54d", "text": "Returns the displacement of the spinner during this specific block in the chain .", "title": "", "metadata": ""}
{"_id": "6cd54e06a300263f2d32bd9da2e76400", "text": "Returns asset balance for a particular holder id .", "title": "", "metadata": ""}
{"_id": "7f3d9d175dae1c12e822ce167bdb24b1", "text": "update current balance , if proper token amount approved .", "title": "", "metadata": ""}
{"_id": "23cc8391a4a491d22b8d8cc4cd6a5791", "text": "This function is called from the diipcoin contract .", "title": "", "metadata": ""}
{"_id": "d8393350d1da4f0e2d0c5e06bcfb01e0", "text": "Issue tokens to account and these tokens will be frozen for a period of time .", "title": "", "metadata": ""}
{"_id": "bcb57e7c51eba987b5a244e99b93a5d4", "text": "Call this to migrate your MNTP tokens to Goldmint MNT ( this is one-way only ) _gmAddress is something like that - BTS7yRXCkBjKxho57RCbqYE3nEiprWXXESw3Hxs5CKRnft8x7mdGi .", "title": "", "metadata": ""}
{"_id": "c4830ddb6c8bac91d872cb015752b608", "text": "escape path - withdraw funds at emergency .", "title": "", "metadata": ""}
{"_id": "03dc330f871f05ac69e454a32ddf933d", "text": "Function to access decimals of token .", "title": "", "metadata": ""}
{"_id": "aaefac843e0115b9f2a2850592118eb9", "text": "ERC721 Required .", "title": "", "metadata": ""}
{"_id": "7acacdad0c7cdf6b3a85af78e986981c", "text": "Finish token issuance .", "title": "", "metadata": ""}
{"_id": "21d51b5bfb47f97399fd1ac296915084", "text": "check if the sender is an authorized casino wallet .", "title": "", "metadata": ""}
{"_id": "0955db7e978008a3267a641495464c66", "text": "distribute the tokens once the crowdsale addresses are known .", "title": "", "metadata": ""}
{"_id": "eeba46bf8cdf3d6cd426a83402b65f60", "text": "Internal function to add a token ID to the list of a given address .", "title": "", "metadata": ""}
{"_id": "6b6ac7bf8deb507518aa085ae8e59996", "text": "Function to check the amount of tokens than an owner allowed to a spender .", "title": "", "metadata": ""}
{"_id": "11164f70d5d429c9423c3f573b7165bc", "text": "set non ether investment controller .", "title": "", "metadata": ""}
{"_id": "213ede2ef7df23dde122929130e9bebc", "text": "converts all incoming ethereum to keys .", "title": "", "metadata": ""}
{"_id": "1f4914e9ce148c7b2d7e65a8569e58e3", "text": "Set the member id of the utility contract prior to calling batch methods .", "title": "", "metadata": ""}
{"_id": "c8dbed515eb50c359c8832c15e136c70", "text": "Issue tokens for a single buyer on the presale .", "title": "", "metadata": ""}
{"_id": "675156349c0bbe31766e9b46774496ab", "text": "Sets the ICO start and end time .", "title": "", "metadata": ""}
{"_id": "0b553fdd583172acf5689ca7ae438578", "text": "Whether _proposedAddress is already proposed .", "title": "", "metadata": ""}
{"_id": "ed7748a76efdc2d252a1e5e5a1e7e76e", "text": "Offer a piece for sale at a fixed price - the price has to be lower than the current lowest price .", "title": "", "metadata": ""}
{"_id": "cf8d772fc58adc0e0ab9d24ad3c70a25", "text": "Get the referrer of a player .", "title": "", "metadata": ""}
{"_id": "dba13176f5229ed38d0c8801d03c4f59", "text": "Refunding owner .", "title": "", "metadata": ""}
{"_id": "132685d0a57bfbb411df277c9ac154a2", "text": "bid auction .", "title": "", "metadata": ""}
{"_id": "d754b33c3680575ff9b5bc6fee09ed43", "text": "Transfer amount of asset currency from from to to .", "title": "", "metadata": ""}
{"_id": "8deb473eaeb7233f7a05dd942f7717bd", "text": "doPayment ( ) is an internal function that sends the ether that this contract receives to the vault and creates tokens in the address of the _owner assuming the BaseTokenSale is still accepting funds .", "title": "", "metadata": ""}
{"_id": "73d9a0bbbceeeb99643bc80ce440dce5", "text": "ReleasableAmount ( ) looking for the current releasable amount .", "title": "", "metadata": ""}
{"_id": "e22a0dd2147daec55ca65085629357ed", "text": "onlyRecipient Proposes new milestones or changes old milestones , this will require a user interface to be built up to support this functionality as asks for RLP encoded bytecode to be generated , until this interface is built you can use this script : https : / / github . com / Giveth / milestonetracker / blob / master / js / milestonetracker_helper . js .", "title": "", "metadata": ""}
{"_id": "26376736041efdb1ed56ad8ccced9453", "text": "returns totalSupply of tokens .", "title": "", "metadata": ""}
{"_id": "c85a3cbad53a46aaeb013a9bac352a7a", "text": "send funds to the ICO beneficiary account - after successful ICO .", "title": "", "metadata": ""}
{"_id": "f2172bb1c75cb1a76376c2efebeb9347", "text": "initializes a round of blackjack with an id , the hash of the ( partial ) deck and the hash of the server seed .", "title": "", "metadata": ""}
{"_id": "d0f7a279bdc1ef9a3e5ea891d4938ed5", "text": "Future ERC20 calls to trueUSD be delegated to _delegate .", "title": "", "metadata": ""}
{"_id": "b4b08f3de3e097b37bf71412b5b2a406", "text": "Sets MDK to Ether rate .", "title": "", "metadata": ""}
{"_id": "30fb31d7b807d6adf3ea49216d7b8426", "text": "Start the airdrop .", "title": "", "metadata": ""}
{"_id": "a2302c94b865c51623e6371dead5e2da", "text": "insert imagimage .", "title": "", "metadata": ""}
{"_id": "77087aae9d38e968f5a9f6ea89b78520", "text": "Get the owner of a specific DIN .", "title": "", "metadata": ""}
{"_id": "8ad775d7582504fad78f6b610c5c9dfb", "text": "Check if the minting for the supplied key was already performed .", "title": "", "metadata": ""}
{"_id": "4a0c2e34f50f1b1a6ef0e29f41a2e95d", "text": "Changes the address assigned to call escapeHatch ( ) .", "title": "", "metadata": ""}
{"_id": "e733c7ccd2ffd0aff776dce75eda359c", "text": "Proofs that terms and conditions have been read and understood .", "title": "", "metadata": ""}
{"_id": "f9191efcdb83c6a55168a1f58104a23c", "text": "receive token from coinContract .", "title": "", "metadata": ""}
{"_id": "3bd9b07a839601ae088269a2722987b0", "text": "available allowance .", "title": "", "metadata": ""}
{"_id": "73024a703b49a174e83a88eb51f2643e", "text": "check seed form coo .", "title": "", "metadata": ""}
{"_id": "997cca959ae2da890fe8e2a3ff6f1019", "text": "Setting the whitelist setter address to address ( 0 ) would be a irreversible process .", "title": "", "metadata": ""}
{"_id": "9ef3d06d9130b58dc3bea95b2322c8cc", "text": "For pushing pre-ICO records .", "title": "", "metadata": ""}
{"_id": "eb00b5acecc2209e31d9149057a4b3e8", "text": "current amount of jack pot 3 .", "title": "", "metadata": ""}
{"_id": "7278818934d8b2f472e583b5fdd1a035", "text": "Allows the current GDPOracle to transfer control to a newOracle .", "title": "", "metadata": ""}
{"_id": "69ff7cd590349f405b00a606a5146d1c", "text": "Checks if purchase is valid .", "title": "", "metadata": ""}
{"_id": "656bd2c9b7dc61594495be2ead24c7b1", "text": "Starting ICO .", "title": "", "metadata": ""}
{"_id": "0e1b612e7a6d0861f3bef0e2f51db85b", "text": "Updates the maximum allowed gas price that can be used when calling buyTokens ( ) .", "title": "", "metadata": ""}
{"_id": "62b2303acc19ca46f267f9ec6091b28e", "text": "Change the address of the deposito contract address .", "title": "", "metadata": ""}
{"_id": "978ef1618c82fecb2b91aae60596caff", "text": "Change operational status for holder .", "title": "", "metadata": ""}
{"_id": "9793879be21d2341feccfa74b6aebfc2", "text": "Only owner address can set maxProfitAsPercentOfHouse .", "title": "", "metadata": ""}
{"_id": "09d4e25100464cc40e3b96c074df23d9", "text": "Function to get your ether back if presale failed .", "title": "", "metadata": ""}
{"_id": "c96521f42695aefc06d1a82ba728bf54", "text": "Permanent stops minting .", "title": "", "metadata": ""}
{"_id": "ce184bf7215b0728f5470fafe2edceca", "text": "For test .", "title": "", "metadata": ""}
{"_id": "28166b172f466454d7b2c62b81371bd2", "text": "Cancel an already published order can only be canceled by seller or the contract owner .", "title": "", "metadata": ""}
{"_id": "477bef8d01ff8c2f4deae2ba4e048730", "text": "Checks if owner confirmed given operation .", "title": "", "metadata": ""}
{"_id": "d19ef3d0f699199ba91b61e09513f2db", "text": "Allows for updating the pre sale close time in the event of a delay .", "title": "", "metadata": ""}
{"_id": "ac71c19297a8fdf85999407185173bf5", "text": "get frozen balance .", "title": "", "metadata": ""}
{"_id": "6687c14feeabb5719f8f85377918041e", "text": "private pay token to address .", "title": "", "metadata": ""}
{"_id": "b39ee59d4367b1dc9c49b0d6d3d75031", "text": "What is the value of this token in case this token wins ? .", "title": "", "metadata": ""}
{"_id": "e0d2fbada1f5c75ca03c34a43bd31129", "text": "Finish game , store stats hash .", "title": "", "metadata": ""}
{"_id": "c34eba46b517cb8ba34e7d302ac4deec", "text": "Public function , supposed to be called from another contract , after receiving approval .", "title": "", "metadata": ""}
{"_id": "1afb5025ed0dd1ac22a9251d024c4208", "text": "Transfer ownership to another address ( goes into effect when other address accepts ) .", "title": "", "metadata": ""}
{"_id": "803de78545b8f0767b93209d888df615", "text": "Function that calculates the tokens which should be given to user by iterating over rounds .", "title": "", "metadata": ""}
{"_id": "29d0b1b1f7038706eb935dfc439697bc", "text": "Updates the allowance by _owner of the _spender to have access to _balance .", "title": "", "metadata": ""}
{"_id": "d73ad407d63ec874c3cf24de72740c4c", "text": "Allows the owner to set the current rate for calculating the number of tokens for a purchase .", "title": "", "metadata": ""}
{"_id": "5f0cb499f85995fb090f288c44230847", "text": "Gets the next available sequence ID for signing when using executeAndConfirm returns the sequenceId one higher than the highest currently stored .", "title": "", "metadata": ""}
{"_id": "fd418515a29626e70e3fdcedeef6e007", "text": "toggle beingEdited status of this account .", "title": "", "metadata": ""}
{"_id": "806ddd1eb40ab098c17b9af56e5dce6a", "text": "MiniMe Controller functions .", "title": "", "metadata": ""}
{"_id": "0369d16352941fbd95b3ae2bdb35a0df", "text": "ERC20 specific 'approve' is only allowed , if contract is not in paused state .", "title": "", "metadata": ""}
{"_id": "c39ff83f1fcd6516df9f69ac0f6e1a07", "text": "return the price buyer will pay for next 1 individual key during first stage .", "title": "", "metadata": ""}
{"_id": "e5aa8e7d2c38a17e8ca21d50b232a83e", "text": "Setting crowdsale for setConversionRate ( ) .", "title": "", "metadata": ""}
{"_id": "826961aa217c5afb28faf42f6a06d90f", "text": "Get the price for a BOU token at any given block number .", "title": "", "metadata": ""}
{"_id": "7f8a1ebec57d2270391556ae278e5c26", "text": "Allows contracts to transfer tokens on behalf of token holders .", "title": "", "metadata": ""}
{"_id": "7a3429b294ae4d220cfd3088f59bf9aa", "text": "return a pseudo random number between lower and upper bounds .", "title": "", "metadata": ""}
{"_id": "95c1ab57873803e2a1070aee8926c7c2", "text": "only owner address can do manual refund used only if bet placed + oraclize failed to __callback filter LogBet by address and / or userBetId : .", "title": "", "metadata": ""}
{"_id": "660b66d1fce93e0d730df225bf21f121", "text": "function to resume the ICO .", "title": "", "metadata": ""}
{"_id": "863c5f5e88eaee163ab87285be645651", "text": "Convenience function allowing us to avoid forcing the user to go through an extra .", "title": "", "metadata": ""}
{"_id": "3857cc261efaeb57ca3b2b1c93e7a9a4", "text": "Sets the new conversion rate .", "title": "", "metadata": ""}
{"_id": "5dbf07f6b3b9c87513aa09a527b33be0", "text": "Set burn address .", "title": "", "metadata": ""}
{"_id": "08d2cf4d838c77fd74e6f9ea983974e9", "text": "Mint new tokens for the predefined inflation period and assign them to the reward wallet .", "title": "", "metadata": ""}
{"_id": "591bbfd8776ba1309752ea4d0c477469", "text": "can be called by anybody can miners withhold blocks - - not really giving up block reward for extra chance - - still really low .", "title": "", "metadata": ""}
{"_id": "aba8b7a083b2ede98ab4ef93ea49517d", "text": "simply a boolean to indicate this is the contract we expect to be .", "title": "", "metadata": ""}
{"_id": "4d6173789cb302bed6066bcf0ef6f04d", "text": "destroyer must be settled .", "title": "", "metadata": ""}
{"_id": "b3c2d103c5721fcffdc8f689c2b40e4a", "text": "Throws if _tokenId not exists .", "title": "", "metadata": ""}
{"_id": "516754f63e9dab329ef1ff22dd018579", "text": "set ad price multiple incase we want to up the price in the future .", "title": "", "metadata": ""}
{"_id": "83dbe66d1764c07fe9a3ed22f2c15400", "text": "getBountyToken ( ) : Returns the token contract of the bounty .", "title": "", "metadata": ""}
{"_id": "8bc9753b59edfcf4112dbbec75d8c43c", "text": "Not strictly necessary - this can be done with transferFrom ( ) as well .", "title": "", "metadata": ""}
{"_id": "1af0a5b07405d3a04b1e50340fccf877", "text": "Set the parameters for the next game .", "title": "", "metadata": ""}
{"_id": "6fd952fc3865f0d16c9dafdfc9126148", "text": "Registers an application under a given name for the sender .", "title": "", "metadata": ""}
{"_id": "96f70b88b62835aa3a0de4b8f52ce37b", "text": "Amount in WEI i . e .", "title": "", "metadata": ""}
{"_id": "e81d324ac34cd66076d289fd9eaf2a40", "text": "send coins .", "title": "", "metadata": ""}
{"_id": "bc55827eaab04b40f423e9e3dc35039e", "text": "overriden methods .", "title": "", "metadata": ""}
{"_id": "f392184f7d534bc50d629ef55053f33a", "text": "Modifiers ( encoding important crowdsale logic ) .", "title": "", "metadata": ""}
{"_id": "3e38dfae74f1e880101a6155e34a6cff", "text": "Checks that a given monster is able to breed .", "title": "", "metadata": ""}
{"_id": "92cc5aaad022ac6ab6b01adb5080f2b7", "text": "Check if it is safe to subtract two numbers .", "title": "", "metadata": ""}
{"_id": "c0bb20e7dbc93568a074c5a08b57fd07", "text": "Destroy Tokens .", "title": "", "metadata": ""}
{"_id": "55a77beea6f96a24601e63862bee3a89", "text": "check if the address is contract assemble the given address bytecode .", "title": "", "metadata": ""}
{"_id": "b1ab13883f5ede5b10566ccd145f1444", "text": "Storage location of the minimum amount of tokens allowed to be purchased .", "title": "", "metadata": ""}
{"_id": "996d3ab13c7d9f89960c5e3a4cc78623", "text": "Overloaded version of the transfer function .", "title": "", "metadata": ""}
{"_id": "c66a2f17e47ea0cc14affd5a781a6e14", "text": "for Emergency / Hard stop of the sale .", "title": "", "metadata": ""}
{"_id": "7e7bbed1d8900726f6b8a155eb76d3b8", "text": "blacklist investor from participating in the crowdsale .", "title": "", "metadata": ""}
{"_id": "1f5d0c163003257b196e928e45f07cfe", "text": "set country rank by providing index , country name and rank .", "title": "", "metadata": ""}
{"_id": "e6e9dba35307bb8c4f5ec7a738241796", "text": "Function to give tokens to others users who have bought Genbby tokens .", "title": "", "metadata": ""}
{"_id": "df39eb46e1766781325357af00d81e84", "text": "aggregate getters .", "title": "", "metadata": ""}
{"_id": "73d4680a774a51264a9e79040d23e495", "text": "Allocate fee for transfer .", "title": "", "metadata": ""}
{"_id": "c1692515ffb32964c7c940be67ff3858", "text": "Enable token sale ; .", "title": "", "metadata": ""}
{"_id": "ff49b30e934b8e161fae469774edbfbd", "text": "Let the owner start the timer for the crowdsale end .", "title": "", "metadata": ""}
{"_id": "8787c32d2c92ee68adb734822470f040", "text": "access chunk data by x y coordinates .", "title": "", "metadata": ""}
{"_id": "e09b6c9e3c1fbb55a6d4076af96559e7", "text": "Allows the current owner to add new grant .", "title": "", "metadata": ""}
{"_id": "cc3f82550432ac43b2e1b715fa4a0388", "text": "These are wrapper functions to enable locked tokens , locked trading .", "title": "", "metadata": ""}
{"_id": "5ad9bbf8e612274c999116613b21cced", "text": "Does NO checks .", "title": "", "metadata": ""}
{"_id": "06dcb347b816700566b66e2eec225033", "text": "test only .", "title": "", "metadata": ""}
{"_id": "bf288a630e6b1202189bb5e4b06c8ba2", "text": "return all _itemName tokens help by contract to contract owner .", "title": "", "metadata": ""}
{"_id": "8ddad9c5441dc3814248b97ad483dafb", "text": "Allows for transfer of contract ownership .", "title": "", "metadata": ""}
{"_id": "d39a0c4c4fdd0d3d40f6a774cd481111", "text": "An initiator writes a new proposal in the proposal storage area .", "title": "", "metadata": ""}
{"_id": "c1c8c299ff381f68b747a74caa28d5c8", "text": "Transfer and then calls the receiving contract .", "title": "", "metadata": ""}
{"_id": "0759ed2701f29093993579117c2f6cf8", "text": "contract commissions .", "title": "", "metadata": ""}
{"_id": "b27c3b992fa48fd4d287c8abd08f2d8b", "text": "Publish some data .", "title": "", "metadata": ""}
{"_id": "0a116e2582f81eadc354710b52b84eba", "text": "Get the price in wei for the given token .", "title": "", "metadata": ""}
{"_id": "b3aa86b6cc3a62268a288299b72a0d9d", "text": "RetrieveData - Returns stored value by given key .", "title": "", "metadata": ""}
{"_id": "cfb925e2aec29badc3d0aa92b6bd0f9c", "text": "Assemble the given address bytecode .", "title": "", "metadata": ""}
{"_id": "b58be484d2b4df7c3eb1fda258c4423f", "text": "Cash out Ether and Tangent at for the purchase at index index .", "title": "", "metadata": ""}
{"_id": "97eecde05aaa57fb0ce7f79522b06b48", "text": "some helper / info getter functions .", "title": "", "metadata": ""}
{"_id": "0f997a61d20cad98398ef0e658b08aa8", "text": "amount owner can withdraw after auction ended that way you can easily compare the contract balance with your amount if there is more in the contract than your balance someone didn't withdraw let them know that : ) .", "title": "", "metadata": ""}
{"_id": "bf169f3fce98382ffac66c36665e8cf0", "text": "Throws if called by any account other than the moderator .", "title": "", "metadata": ""}
{"_id": "e0dccb21f781fab618ffbef989144356", "text": "Purchase a listed user-owner Property in PXL .", "title": "", "metadata": ""}
{"_id": "a3dea4e7e99c27ffa0da63ae5eb24b4e", "text": "Function to set the meta project .", "title": "", "metadata": ""}
{"_id": "fd42bc7ab9c143ac2ef8e59ae9aaad63", "text": "Overriding the finalization method to add minting for founders / team / reserve if soft cap is reached .", "title": "", "metadata": ""}
{"_id": "cc8bdd1accac0783b0b8f02ab50dc7e0", "text": "roomTypeGet returns two values : room type as a bit-flag value ; size / bid : 0 for unused pair ; 1 for 4 / 0 . 08 , .", "title": "", "metadata": ""}
{"_id": "8d1114bf2204f97fc50cfbe2ef82676e", "text": "add courses to a user .", "title": "", "metadata": ""}
{"_id": "9a463c3d980fe2d20cfba628cffa0236", "text": "Similar to walletA , with the addition of supporting multiple users .", "title": "", "metadata": ""}
{"_id": "d44ca892dd27e38d82bfa35654d96472", "text": "This modifier should prevent tokens transfers while the tokenswap is still ongoing .", "title": "", "metadata": ""}
{"_id": "5e5e029430986e5b7cbfb5aaf551c16b", "text": "contract owner .", "title": "", "metadata": ""}
{"_id": "04c53f3799d98889ad24337078adb381", "text": "Transfer tokens from sender's account to provided account address .", "title": "", "metadata": ""}
{"_id": "75d5f7383963041e5b5597076140325b", "text": "Resolves the trade based on the initial and final amount , depending if put or call were chosen , if its a draw the money goes back to investor .", "title": "", "metadata": ""}
{"_id": "e08c679880e71f3c11e43212e9558462", "text": "Handle dealer pot .", "title": "", "metadata": ""}
{"_id": "c2397cdb43c6f42ded3ede7dbc315893", "text": "Throws if called by any account other than the contractSolidStamp .", "title": "", "metadata": ""}
{"_id": "a666102492cac549af75845b8c6ff39b", "text": "Halt transactions in case of emergency .", "title": "", "metadata": ""}
{"_id": "9fea0582b918e340272569bfd33605bc", "text": "Once the auction has finished , the bidders can withdraw the eth they put .", "title": "", "metadata": ""}
{"_id": "db7639cc36bc0dfd85962537cdce3e12", "text": "Charge investers for management fee .", "title": "", "metadata": ""}
{"_id": "796c82bcc8b71581386542f547cef0d6", "text": "current_rate : The price of 1 token ( 10 decimals ) currently .", "title": "", "metadata": ""}
{"_id": "c0820410041c5362624cda9b04878306", "text": "Get security token offering smart contract details by the proposal index .", "title": "", "metadata": ""}
{"_id": "233df3dabb9b44973cab8489be498324", "text": "internal function that allocates a specific amount of TOKENS at a specific block number .", "title": "", "metadata": ""}
{"_id": "d20513ff411ecbe7d7fce83f850ae9fd", "text": "get ipfs hash from name .", "title": "", "metadata": ""}
{"_id": "f3215f3c9740cff62b2417b8315b9a38", "text": "check the address is register .", "title": "", "metadata": ""}
{"_id": "54d466ae1f0891d27a276c0f9604d52f", "text": "Transfer tokens from the caller's account to the recipient .", "title": "", "metadata": ""}
{"_id": "7ca84bc47612a1ddefa6c344cc5bd3b5", "text": "For owner to check registered user address based on index .", "title": "", "metadata": ""}
{"_id": "d0e29b518ec096870c87637fe1018f60", "text": "remove the ether address from whitelist in case a mistake was made .", "title": "", "metadata": ""}
{"_id": "098d361a8bf8fd2ea2128b20afeda319", "text": "Returns the amount that can currently be bankrolled .", "title": "", "metadata": ""}
{"_id": "a43562c990e433e42b3bb9d04cd164e0", "text": "Marks an address as being approved for transfeFrom ( ) , overwriting any previous approval .", "title": "", "metadata": ""}
{"_id": "9f3071ee2b8f322b55396c9f6bc82d80", "text": "Hammer setter .", "title": "", "metadata": ""}
{"_id": "5839cf001ff6b8c281e578cbc316d3c5", "text": "Can be public because it requires approval .", "title": "", "metadata": ""}
{"_id": "444ece08fbdfd761dc6cf2a498776981", "text": "Filter invalid address .", "title": "", "metadata": ""}
{"_id": "476040238f84eb60ad2c292a2ea78528", "text": "The game go no next level .", "title": "", "metadata": ""}
{"_id": "dae7a04ed43bf06dff0f8b35d51df8c6", "text": "Contract owner or Multisig can withdraw Parsecs anytime in case of emergency .", "title": "", "metadata": ""}
{"_id": "154f52a104e98a23c4595f89939629a1", "text": "Ensures the sender is the admin , the sale is initialized , and the sale is not finalized .", "title": "", "metadata": ""}
{"_id": "d74e8c59b4590f0a2da2d8397ca3b9f9", "text": "Throws if called by any account other than the minter .", "title": "", "metadata": ""}
{"_id": "8ae2d068a745828405ed202647d2ba8e", "text": "Change ico_start date .", "title": "", "metadata": ""}
{"_id": "6f0fbd3861ae82a957c35799353e75f0", "text": "Allows the developer to set the crowdsale addresses .", "title": "", "metadata": ""}
{"_id": "b00e150d3c2a815e23ec1e1ed499e84a", "text": "Set the ifoodDev .", "title": "", "metadata": ""}
{"_id": "c2348f4f94a694193ca584bfb5f51753", "text": "Returns whether the target address is a contract .", "title": "", "metadata": ""}
{"_id": "1e85d55b557420e8b58807e03a175136", "text": "disables purchasing with the given reserve token in case the reserve token got compromised can only be called by the owner note that selling is still enabled regardless of this flag and it cannot be disabled by the owner .", "title": "", "metadata": ""}
{"_id": "4a8903a0031138763e8a1a1089733b70", "text": "Transfer payment from an Option's Buyer to the Seller less the 1 fee sent to the admin .", "title": "", "metadata": ""}
{"_id": "a1a99a26fc665429aeb5e2d1fa328fe1", "text": "moving _amount from _from to _to .", "title": "", "metadata": ""}
{"_id": "002d182a89feae087de656ed5645a46b", "text": "Returns a boolean as to whether the provided address is allowed to exit the pool at this time .", "title": "", "metadata": ""}
{"_id": "d3aaebe3318ddc7ad0695e692c9c8d14", "text": "Verifies the msg . sender .", "title": "", "metadata": ""}
{"_id": "439034c8341f239e6a498dfda81632f3", "text": "Check is certain transer allowed main rule is all transfers is prohibited till 27 . 09 . 2018 .", "title": "", "metadata": ""}
{"_id": "3b8f67d75fdacc7be1179b5c7ede990b", "text": "Instructs the contract that it should expect a payment with the given identifier to be made .", "title": "", "metadata": ""}
{"_id": "2a45f92cf9768122277ab296332ec61f", "text": "Used by investor to claim bonus token .", "title": "", "metadata": ""}
{"_id": "fa767484d62b040cbb6ae5886adf9974", "text": "to allow for contribution from interface .", "title": "", "metadata": ""}
{"_id": "e65d0431b2603a4a296ca996add2992c", "text": "accepts crowdsale investment , requires crowdsale to be running and not reached its goal .", "title": "", "metadata": ""}
{"_id": "5283eaf43ffa799bf0db8cbe577c6b9f", "text": "Buying ethereum for tokens .", "title": "", "metadata": ""}
{"_id": "d553bd0beb7affd8eb55edd0dd3252ef", "text": "Withdraw ETH dividends and put it to this contract .", "title": "", "metadata": ""}
{"_id": "33c223e594ba38abffea3f8981b3c8d7", "text": "calculates points won by yellow and red cards predictions .", "title": "", "metadata": ""}
{"_id": "b75ddc417687ddcdf4a1cc8aeb6298a4", "text": "Setting the rate starts the ICO and sets the end time .", "title": "", "metadata": ""}
{"_id": "1545a4bc2cd05efb700d5ccfa2670082", "text": "Creates a new promo Meme with the given name , with given _price and assignes it to an address .", "title": "", "metadata": ""}
{"_id": "8b586fbec3993c5f982296075f5e0583", "text": "checks if an address is accredited .", "title": "", "metadata": ""}
{"_id": "7073e63778216ff4db9c7caf78b01147", "text": "Transfer owner of contract to a new owner .", "title": "", "metadata": ""}
{"_id": "74020af376e0c5ae458a25148e6dd057", "text": "Owner can change extendedTime if required .", "title": "", "metadata": ""}
{"_id": "cb81a17a1d483bd55f6d4b7fccd086a3", "text": "Creates a new promo Covfefe with the given term , with given _price and assignes it to an address .", "title": "", "metadata": ""}
{"_id": "24430526da8dce835a586eeb7bd9fb11", "text": "Spender Interface .", "title": "", "metadata": ""}
{"_id": "9921680f4ae8013c26ed807725a5f330", "text": "Calculate current purchase rate .", "title": "", "metadata": ""}
{"_id": "d31a410338336b1f7f7fc4a1d2aa7661", "text": "10 , 000 winners of 15 tokens or . 000375 .", "title": "", "metadata": ""}
{"_id": "70a7a69e4e5553c8a666e0c6aff05d42", "text": "Accept given quantity of an offer .", "title": "", "metadata": ""}
{"_id": "5adbced1102e4a711361536636d910eb", "text": "This function is what allows this contract to receive ERC223 compliant tokens .", "title": "", "metadata": ""}
{"_id": "c58b532d75d5142cf6ada1020683239e", "text": "check if DSP registered .", "title": "", "metadata": ""}
{"_id": "1d6891a26d384ae69253df8667e2a510", "text": "Sets new rate for received foreign token .", "title": "", "metadata": ""}
{"_id": "4619e32ec3f1a9f1400e2bcc2061905a", "text": "Calculating bounus tokens .", "title": "", "metadata": ""}
{"_id": "ca772b26e3b733654d03f8c2af42dcd6", "text": "Taken from https : / / ethereum . stackexchange . com / a / 10929 .", "title": "", "metadata": ""}
{"_id": "e249c071cf4a8216933eabae66419e30", "text": "Callable any time Treasury . capitalNeeded ( ) .", "title": "", "metadata": ""}
{"_id": "4d74e0a9ebf285317d31f006d1029fb5", "text": "Function for updating the price stored in this contract .", "title": "", "metadata": ""}
{"_id": "674b99c06a89ba313c8f585990d8366c", "text": "Sets all allowances and updates tub liquidation ratio .", "title": "", "metadata": ""}
{"_id": "14cec0ca8a4e318abf61c21379fdd372", "text": "function that calculates address cap from the number of users registered .", "title": "", "metadata": ""}
{"_id": "01e8f4943c2d89303caf4fa211c8c9c0", "text": "Add collecting wallet address to the list .", "title": "", "metadata": ""}
{"_id": "91c1335df94bea1ae5722c626d46ae17", "text": "Calculate price of Axies from the same class .", "title": "", "metadata": ""}
{"_id": "89c4388bca2899cb38057b7c60b4b9db", "text": "Allows an owner to submit and confirm a send tokens transaction .", "title": "", "metadata": ""}
{"_id": "3e3d904e001eee6ac89f10b6161ed431", "text": "Manually back DARFtoken owner address .", "title": "", "metadata": ""}
{"_id": "48505017dbb1ddd287a01ebab24d0d04", "text": "Return the permissions flag that are associated with Percentage transfer Manager .", "title": "", "metadata": ""}
{"_id": "f77cd47473a862f5df1932cc53b37135", "text": "Returns the address of the closing participant .", "title": "", "metadata": ""}
{"_id": "4ee30ba6b24c1f0364cebad9ea96c512", "text": "Lifecycle management ( Solidity best-practice ) .", "title": "", "metadata": ""}
{"_id": "e956b918c867ccc219aebacd65930c5f", "text": "send ETH to the company wallet , the token address should keep a reasonable amount of ETH to be able to payout on token sells .", "title": "", "metadata": ""}
{"_id": "4c7dbbf2a85e2f594588bab844a6a27e", "text": "This function is used to decrease the amount of tokens allowed to spend by spender .", "title": "", "metadata": ""}
{"_id": "6de5d807649ff3c977b9e76d92e1aa48", "text": "add a verified KYC / AML address .", "title": "", "metadata": ""}
{"_id": "617e9951a81c9b50f1513fbbd5dcdc3b", "text": "Transaction related operations .", "title": "", "metadata": ""}
{"_id": "92e44ee50ea4da63d34e12c9d6621594", "text": "Get the token balance for account .", "title": "", "metadata": ""}
{"_id": "b4632007db0facd0c3d1862369282a5a", "text": "format decimals .", "title": "", "metadata": ""}
{"_id": "6916d13aa5ee80e4cf5da2bbde29656f", "text": "allows the owner to update the formula contract address .", "title": "", "metadata": ""}
{"_id": "5714b3d2147a7c328944810d7bd9171c", "text": "Validation Helpers .", "title": "", "metadata": ""}
{"_id": "96fb33c2ad243cb181b16789b45e2d26", "text": "QwasderToken interface .", "title": "", "metadata": ""}
{"_id": "dd0b462d8aefd8567fd016244f20d25d", "text": "Self-destruct the contract , contract cannot be destroyed until the vesting period is over .", "title": "", "metadata": ""}
{"_id": "8eb34601b1e697c3cac78cd5d0f0f7b1", "text": "Set a new order book account .", "title": "", "metadata": ""}
{"_id": "c278f9f6a213c73530d00d090ebfad7f", "text": "Redeem adopted Axies from the same class .", "title": "", "metadata": ""}
{"_id": "b168316b1873a2520aa1989a5ce9087a", "text": "To Distribute AirDrops for Applicants of Round 3 .", "title": "", "metadata": ""}
{"_id": "38b6ce5dcfe0ce9368fdfda1c3efc13e", "text": "Conver bytes data to address .", "title": "", "metadata": ""}
{"_id": "da9c03a6af06a4124a1c825e0973f714", "text": "this is called by liquidPledging before every transfer to and from a pledgeAdmin that has this contract as its plugin .", "title": "", "metadata": ""}
{"_id": "5174b35c4780ecb9b9879d4f752c4199", "text": "This function actually makes the sends and tracks the amount of gas used if it takes more gas than was sent with the transaction then this function will need to be called a few times until .", "title": "", "metadata": ""}
{"_id": "634be28c4e0284fd159cd0e10743e494", "text": "function getCurrentRate returns the amount of iii for the amount of wei at the current point in time ( now ) .", "title": "", "metadata": ""}
{"_id": "d65d12c5dd2f6d27bf4450b283142880", "text": "Change the Servus Token controller .", "title": "", "metadata": ""}
{"_id": "80482cc8a9d0f0bef7ede34ca674d312", "text": "called by the winners to collect winnings for a box .", "title": "", "metadata": ""}
{"_id": "f084fa0fb982a16b759e3bda61302021", "text": "change min ETH income during Window1-5 .", "title": "", "metadata": ""}
{"_id": "799c6c4abf473d8d66f51d86b380946f", "text": "Set the cooldownEndTime for the given LinglongCat , based on its current cooldownIndex .", "title": "", "metadata": ""}
{"_id": "9fcd73e858a7f2c61a48df171ccd3d7a", "text": "Add bidder address to whitelist .", "title": "", "metadata": ""}
{"_id": "4c23e0dc7aeb727d8d92694045d838f0", "text": "sets MYTC token .", "title": "", "metadata": ""}
{"_id": "a65bd7f43b94a8ffdd8cb8812511ef0a", "text": "Calculate the power of a dungeon floor .", "title": "", "metadata": ""}
{"_id": "7db69a9a0679a8d56c0811de3e8dece4", "text": "Add a valid member address .", "title": "", "metadata": ""}
{"_id": "e0572571f415c51beb27f65471412257", "text": "increaseApproval of spender when not paused .", "title": "", "metadata": ""}
{"_id": "e7af39fc9d188963e449cda75b534f7d", "text": "Allows an owner to confirm a transaction .", "title": "", "metadata": ""}
{"_id": "1b591bd61057c84fa7bfed5baa8c221a", "text": "accepts the membership payment by moving eth from the user's account to the owner's account .", "title": "", "metadata": ""}
{"_id": "fbb98481bf558b1f62fa1eaaf1f415b2", "text": "return true if valid purchase .", "title": "", "metadata": ""}
{"_id": "056cec6741b92573bca86290b856e678", "text": "Sell _amount tokens to contract .", "title": "", "metadata": ""}
{"_id": "6b329c55356e0a73723466aceb404c13", "text": "Send all pending funds of caller's address .", "title": "", "metadata": ""}
{"_id": "7c377a3cbe46ddb5f7ae73974c28fb34", "text": "transfer token to presale investor who pay by cash .", "title": "", "metadata": ""}
{"_id": "f9878cb1abc87b8ac250e577797ce132", "text": "Get funds .", "title": "", "metadata": ""}
{"_id": "c5e53df4f2b26ad2e51f6e3a536e3a27", "text": "General Token functions .", "title": "", "metadata": ""}
{"_id": "aa26988f7be795034ad240eb01e57ffa", "text": "to verify if action is not performed out of the campaing time range .", "title": "", "metadata": ""}
{"_id": "7cb9a18ea103eea95cd8f2ca922d9787", "text": "allows the owner to update enable the conversion whitelist contract address when set , only addresses that are whitelisted are actually allowed to use the converter note that the whitelist check is actually done by the BNCNetwork contract .", "title": "", "metadata": ""}
{"_id": "090d9e9cf20283176fe4ce8ba8521321", "text": "Payout ETH to whale when player loses .", "title": "", "metadata": ""}
{"_id": "d1d12b3efa7d695dccecb94d963df04f", "text": "unlist allows a party to remove their order from the orderbook .", "title": "", "metadata": ""}
{"_id": "eeb67a011474576979629f3f0f930aaa", "text": "Transfer transaction function .", "title": "", "metadata": ""}
{"_id": "3eb426bb16e2862cfa4dafcdaa8c2c13", "text": "Increases totalCredits and credits user .", "title": "", "metadata": ""}
{"_id": "e84eb3584d2c55da9c5d1a0addc82788", "text": "OPTIONAL : Use this to securely hash your password before registering .", "title": "", "metadata": ""}
{"_id": "886899d563fc247e74930d0866610906", "text": "Burns a specific amount of tokens of an address .", "title": "", "metadata": ""}
{"_id": "f1913798f919aae2d7e38c80504a92ee", "text": "Dereference Fund and trigger selfdestruct .", "title": "", "metadata": ""}
{"_id": "56d2bd1980146a3bdd758b821ed0132c", "text": "Returns true if ICO is active now .", "title": "", "metadata": ""}
{"_id": "e309942cc50f7ed1b98591d5f9e837c5", "text": "replaces an owner _from with another _to .", "title": "", "metadata": ""}
{"_id": "f7ee3bd1a2145b2bdfd48ce7565f2d02", "text": "Should crowdsale be cancelled for any reason once it has begun , any ether is refunded to the purchaser by calling this funcion .", "title": "", "metadata": ""}
{"_id": "618aa082f5b5f7871467c339058fbecd", "text": "Grant and notify other addresses .", "title": "", "metadata": ""}
{"_id": "370d18c293399575b186890f95139642", "text": "We use this function to purchase metal .", "title": "", "metadata": ""}
{"_id": "579d71bbbd1341f6be9eb2ce8ca85374", "text": "This function is only for the website and whether or not it displays a certain artwork , any user may still buy shares for an invisible artwork although it's not really art unless you can view it .", "title": "", "metadata": ""}
{"_id": "a39bbbb3f5fe83c54c762e9d4a99338b", "text": "Function to transfer tokens from one address to another added due to backwards compatibility with ERC20 .", "title": "", "metadata": ""}
{"_id": "6de0d30f5a1b82200b5a8a257faa19e3", "text": "Difficulty starts reasonably low .", "title": "", "metadata": ""}
{"_id": "eb81e9c030918d5337a35fc1a2a7b21d", "text": "interface methods .", "title": "", "metadata": ""}
{"_id": "af0804cb0d671711a07cab52fafec148", "text": "called by the multiSigWallet to unpause , returns to normal state .", "title": "", "metadata": ""}
{"_id": "8d80998385bd7eff7c952d905e7270a1", "text": "wizz panda control .", "title": "", "metadata": ""}
{"_id": "a9ad55bfe31f888d3270e16f9ea7a0b1", "text": "Assigns ownership of a specific Artwork to an address .", "title": "", "metadata": ""}
{"_id": "efb20c23776737359f82b964971c544d", "text": "True while the sale is open ( i . e .", "title": "", "metadata": ""}
{"_id": "d61a7dafb201de3b25e3376fe174d680", "text": "Constructor function that sets freeze parameters so they don't unintentionally hinder operations .", "title": "", "metadata": ""}
{"_id": "091e2d8de49a1f413bf39dc26dd83db7", "text": "Returns amount of wei that given address is able to withdraw .", "title": "", "metadata": ""}
{"_id": "325b5e5a18345b64d0f76a6e9ffd942c", "text": "Issue tokens for reserve .", "title": "", "metadata": ""}
{"_id": "05291e90097abace604940f11067ee7c", "text": "Checks input and then creates storage buffer for reserved token updating .", "title": "", "metadata": ""}
{"_id": "0f6d05cdc71f9765dcc800bc2547d1d2", "text": "set to candadite , after 7 days set to exchange , set again after 7 days .", "title": "", "metadata": ""}
{"_id": "af12e28a0f605d1f61304abc89f20f1f", "text": "Request dividends for current account .", "title": "", "metadata": ""}
{"_id": "29c45f2c3ccb0cac786514e48be52c4a", "text": "Proxy transfer token .", "title": "", "metadata": ""}
{"_id": "4b39bdea4ca98b50a677e9cd896605e5", "text": "Finalizes the previous roll for the _user .", "title": "", "metadata": ""}
{"_id": "9b35820952ab9210edfbecead678f703", "text": "Allows the contract owner to add multiple whitelist users , each with a wallet address .", "title": "", "metadata": ""}
{"_id": "6dc2e2b8675f9c5439e201590693acaa", "text": "finalization function to formally end the fundraiser .", "title": "", "metadata": ""}
{"_id": "fa1896ae058b3d42a1161efaced3f052", "text": "Increase the amount of tokens that an owner allowed to a spender .", "title": "", "metadata": ""}
{"_id": "4559c28650328248b9526c874fb27a1a", "text": "ensures that the current time is between _startTime ( inclusive ) and _endTime ( exclusive ) .", "title": "", "metadata": ""}
{"_id": "24c89bbc4a5c4898bb44bf7fc54d4356", "text": "return the best offer for a token pair the best offer is the lowest one if it's an ask , and highest one if it's a bid offer .", "title": "", "metadata": ""}
{"_id": "731057a92f891749f8bf3d8e249219ec", "text": "allows owner to add tokens to the total supply .", "title": "", "metadata": ""}
{"_id": "63f36056dc2d4c83f4757983f20b212b", "text": "Locker requesting interest when locking funds .", "title": "", "metadata": ""}
{"_id": "486f669a5601da07e18ef4bd54be9240", "text": "Implements the KYCBase releaseTokensTo function to mint tokens for an investor .", "title": "", "metadata": ""}
{"_id": "415f044c3340365f2663e1535527f87f", "text": "Adds a new minter to the token _minter : address of the new minter .", "title": "", "metadata": ""}
{"_id": "7f9123a24b5716652b3dfd7117f33e7a", "text": "Initiate functions that will create the cryptoGamers .", "title": "", "metadata": ""}
{"_id": "14b345c322224484109da230f5e56af2", "text": "Checks that a call pushing a payment amount to the buffer is expected and valid .", "title": "", "metadata": ""}
{"_id": "71a0be5f2e838dd9982fa8166ef585f5", "text": "Throws if called by any account other than the owner or the admin .", "title": "", "metadata": ""}
{"_id": "dbedc54b9849f601f9ccae23ff6fe63f", "text": "set the price of ETH in cents , called in case we don't get oraclize data for more than double the update interval .", "title": "", "metadata": ""}
{"_id": "539be046467b1b281bf7d855d9ae9119", "text": "Getter and Setter for ledger .", "title": "", "metadata": ""}
{"_id": "cdc2f17f6323db3fdedd14af6e78f772", "text": "ERC827 functions .", "title": "", "metadata": ""}
{"_id": "7c898d98dfe0c4c7fabf576c745fd041", "text": "Owner can tranfer his day to another address .", "title": "", "metadata": ""}
{"_id": "1efaf39059307d39393cbc740a40f256", "text": "Given an amount in GGC , this method returns the equivalent amount in mini-GGC .", "title": "", "metadata": ""}
{"_id": "4db8c18cbb0e8c0be18df56a8437cdf8", "text": "only owner address can set casino address .", "title": "", "metadata": ""}
{"_id": "7c0ebca8ced368bf4b28824c9296304f", "text": "standard uint256 functions .", "title": "", "metadata": ""}
{"_id": "cf85e74a0538215c9a71dc578a8ec60c", "text": "BURSA ether pegged token .", "title": "", "metadata": ""}
{"_id": "d1f9cc072652688c2dd0560fefad9d67", "text": "Withdraws locked GNO if endTime is past .", "title": "", "metadata": ""}
{"_id": "17b38c8da4d885d9ba24ae58bcfa2c05", "text": "Assigns ownership of a specific Emoji to an address .", "title": "", "metadata": ""}
{"_id": "82cbe50b03e08c05ed47da92c8bc83a8", "text": "both publisher and advertiser have to call this for a bid to be considered verified .", "title": "", "metadata": ""}
{"_id": "787bb5bde0c179880b01c1e3c6f9cc29", "text": "We use this function to purchase a business .", "title": "", "metadata": ""}
{"_id": "c0d81b1bca60a4480ccd814fc0e3b2fe", "text": "This method has been changed by Pickeringware ltd .", "title": "", "metadata": ""}
{"_id": "364a411f2dc909a7b1dd2cbb269a2fd5", "text": "provides the neighbourRewardPercentage .", "title": "", "metadata": ""}
{"_id": "ed680cc74dc63333e0e95f3d22d28494", "text": "manual selling tokens for fiat .", "title": "", "metadata": ""}
{"_id": "f83e7f9b280eb4481fdd4f0dac14200c", "text": "Burn Janes from Users .", "title": "", "metadata": ""}
{"_id": "29ca163d7f19f192f39a69a6e206b8c9", "text": "Change owner of token after end of CrowdSale if Soft Cap has not raised .", "title": "", "metadata": ""}
{"_id": "75296d0ab949834da02b2157caaee5b5", "text": "Get balance of given address .", "title": "", "metadata": ""}
{"_id": "ba77f1a61b0675f354b30b24d96230c0", "text": "View the wager for a given address .", "title": "", "metadata": ""}
{"_id": "00a81e35d6e674d7c0f4e10424e18289", "text": "check if an account is frozen .", "title": "", "metadata": ""}
{"_id": "dfdba7b4b60a5fd2c2f70e6125adf664", "text": "Once the game is complete , use this function to get the results of the game .", "title": "", "metadata": ""}
{"_id": "a69aafb82e27aca2e724590ce890ac44", "text": "Use the below function to get a refund if the tokens do not arrive after 20 BLOCK CONFIRMATIONS .", "title": "", "metadata": ""}
{"_id": "8a97625dec9afa44410e752df64667ae", "text": "Returns BondingManager .", "title": "", "metadata": ""}
{"_id": "16425aa2887db90118e031d00c597e30", "text": "Initialize distribution .", "title": "", "metadata": ""}
{"_id": "e02acca36c5af5bdaa638aa06a212834", "text": "solhint-disable function-max - lines .", "title": "", "metadata": ""}
{"_id": "605da05d78801eb999c0e142cccc0385", "text": "Initialises addresses of founder , target wallets .", "title": "", "metadata": ""}
{"_id": "1536d246ffe04d68aa350c920bd82cf8", "text": "called by the owner to extend deadline relative to last deadLine Time , to accept ether and transfer tokens .", "title": "", "metadata": ""}
{"_id": "78122c930921f3c4d7d0e69749c7665f", "text": "Private Token Sale - 10000000000000 ; / / 10000000 * 1000000 ( 6 decimal ) .", "title": "", "metadata": ""}
{"_id": "93552fc2cdccafb5acb4e1656c9f7664", "text": "Rejects a bounty transfer .", "title": "", "metadata": ""}
{"_id": "50e81b824349635f08599c4ec4cf89d8", "text": "transfer the priviledge of creating new Nuru Tokens to anothe Ethereum account .", "title": "", "metadata": ""}
{"_id": "e53421aca0f19ae312ad37710830da5a", "text": "Adds bonus tokens by token supply bought by user .", "title": "", "metadata": ""}
{"_id": "2dff7272c0b338f801379cb92a1fbdce", "text": "Sets a new address for Beneficiary two .", "title": "", "metadata": ""}
{"_id": "07553efccc7b917e25c2953abf9c6733", "text": "returns the biggest dick at the given index .", "title": "", "metadata": ""}
{"_id": "1803a52afc9827602833d2a649a06955", "text": "Returns the weiSpent of a user .", "title": "", "metadata": ""}
{"_id": "60f8f55bc0988e1fb3115cf87324eeb0", "text": "Mints new TRUE token and rewards to caller as per the coin age .", "title": "", "metadata": ""}
{"_id": "0980de083c667d949569775600590e33", "text": "contract will be manually paused before on election day by manager .", "title": "", "metadata": ""}
{"_id": "afe7388a2951b39a1f4ae93107426ea1", "text": "Used to ensure only the utils contract can do some things .", "title": "", "metadata": ""}
{"_id": "236326cba1b3fc6656a6bb51f23d9d0e", "text": "called by the delegate to grant tokens to a recipient .", "title": "", "metadata": ""}
{"_id": "e55a2abc7949b5365a1576cf753c4c10", "text": "recovery is a one time action , once it is done no more recovery actions allowed .", "title": "", "metadata": ""}
{"_id": "9a028ee6afcff879a2ae4d6f629b9392", "text": "Buy Landmark or Ambassador from contract for calculated price that ensures that : previous owner gets a profit specific Ambassador gets his / her fee every owner of Landmark in an Ambassador group gets a cut .", "title": "", "metadata": ""}
{"_id": "a5acd4e1db9ce7efb438a14e7d59f167", "text": "Transfer the ownership of given token from one address to another .", "title": "", "metadata": ""}
{"_id": "096c863314f1ec8a00eedfe385ff0093", "text": "SafeMath Power function .", "title": "", "metadata": ""}
{"_id": "e36f78ffe81124ab3fbaedf3cd178dea", "text": "Buy tokens from the contract and checks price and potentially increases the price afterwards .", "title": "", "metadata": ""}
{"_id": "96ec0924fd50a3a57f6b12434b7eb90a", "text": "Receives the initial funding from the Crowdsale .", "title": "", "metadata": ""}
{"_id": "202eabb6d44b80b9d01e0c35d61d6192", "text": "Transfer Wei sent to the contract directly back to the participant .", "title": "", "metadata": ""}
{"_id": "72abee926a185bca0a909d044813bbee", "text": "Allows the funders to withdraw their funds if the goal has not been reached .", "title": "", "metadata": ""}
{"_id": "17ab9af177f249e8dd77dc45aa32d740", "text": "Checks if CoFounder B is performing the action .", "title": "", "metadata": ""}
{"_id": "28442396fd6c4e3a39eee081cad2c18b", "text": "just in case the amount of gas per item exceeds 26290 .", "title": "", "metadata": ""}
{"_id": "e6b948be3e45ce5152708991c80f4550", "text": "Approves and then calls the receiving contract .", "title": "", "metadata": ""}
{"_id": "93b52fa999805e700bcb1efbc8e24c49", "text": "Creates an instance of an token and mints it to the purchaser .", "title": "", "metadata": ""}
{"_id": "8a4da96fd64bd45a0a128f20eae69391", "text": "set the token's totalFundingAmount , .", "title": "", "metadata": ""}
{"_id": "52c9800e65c1be6b3e3fdb1c15e9decf", "text": "unfreeze ? Allows target from sending receiving tokens .", "title": "", "metadata": ""}
{"_id": "c1976bc79c3ad6d8e46c1bfd3862bf74", "text": "Function to allow the actual Committee Room upgrading the application .", "title": "", "metadata": ""}
{"_id": "343e0ab4af8531b1f86d0b4a7c91c6be", "text": "Called to allocate the tokens depending on amount contributed by the end of the sale .", "title": "", "metadata": ""}
{"_id": "13d0800a0a22c1ccc8e6d70c79faa48e", "text": "Allows the owner to withdraw any Exposure in the crowdsale contract .", "title": "", "metadata": ""}
{"_id": "a7adab54916ed12b51d0256234975381", "text": "This signature is intended for yesNo and scalar market creation .", "title": "", "metadata": ""}
{"_id": "54d0e01ab2a54163f33c54cf5744764b", "text": "Adds to the list of open auctions and fires the .", "title": "", "metadata": ""}
{"_id": "aa9c4d7fe292470aa7f03acf8c5f65e0", "text": "Standard ERC20 approve function .", "title": "", "metadata": ""}
{"_id": "28ee71a496d9894fad7d81bd3b8fc9e2", "text": "Allow the creator to send their balances to the players .", "title": "", "metadata": ""}
{"_id": "25e16cabf5eb08da7d6e4d2499cf3e2a", "text": "set total allowed upload .", "title": "", "metadata": ""}
{"_id": "4381287caad67ee33b2a8d65accf0cda", "text": "The auction contract variables are defined in PuppyBase to allow us to refer to them in PuppyOwnership to prevent accidental transfers .", "title": "", "metadata": ""}
{"_id": "8628d42c0d8e39cee514c808c097ace0", "text": "selectOfferingProposal Select an security token offering proposal for the issuance .", "title": "", "metadata": ""}
{"_id": "4dcadbd3210c248f60be156be847a188", "text": "Function which set the duration of crowdsale stages .", "title": "", "metadata": ""}
{"_id": "081fee97e6c24efdc0bcb068c19ebe29", "text": "Get the number of tx's with the same id .", "title": "", "metadata": ""}
{"_id": "8fc9bb88714e98613f1336054c6c03de", "text": "Retrieve all ether to owner .", "title": "", "metadata": ""}
{"_id": "328507b5519404b47ce81ceb6a21574f", "text": "Function for calculation bonus tokens bonus 1 for each 100 FEM batch per buy ( up to max 50 bonus ) .", "title": "", "metadata": ""}
{"_id": "14365f1ff96f3796737b46c409f4110c", "text": "Get bonus from an invested amount .", "title": "", "metadata": ""}
{"_id": "fc537c3df663b5bb1946e2fcde9bd751", "text": "Return price of verification which is zero for this implementation .", "title": "", "metadata": ""}
{"_id": "a6705899da6191bb82f5c326f307eedf", "text": "Get infor do cofre beneficiado .", "title": "", "metadata": ""}
{"_id": "1c224d281045b0f6423e9843cfe2a6f7", "text": "Calculates the points a player earned in a given timer interval .", "title": "", "metadata": ""}
{"_id": "f58142f8cfdda384492fad66df05aff0", "text": "Get the specific signatory of a given document by its id key .", "title": "", "metadata": ""}
{"_id": "8bc27b7ec4043bc2106bdd66a538d224", "text": "Function to allow minting by a certain address .", "title": "", "metadata": ""}
{"_id": "9c466b9e126791381a1c7631db4f48d9", "text": "player winnings claim .", "title": "", "metadata": ""}
{"_id": "b40da89fab3e972164e80faf1cc7f58b", "text": "Get details about your collectible .", "title": "", "metadata": ""}
{"_id": "6a0acfc70d5431e182bb1f75178ca6ef", "text": "Returns if an spender has been approved by a user .", "title": "", "metadata": ""}
{"_id": "80dbe14b81f43ed968bca1ad26aef063", "text": "Registers an Asset information entry .", "title": "", "metadata": ""}
{"_id": "a7b909cd96175a09fdcde13c83e5479e", "text": "Returns amount of capital allocated to an address .", "title": "", "metadata": ""}
{"_id": "f7b94785bac09adcb62edef477f5e8d2", "text": "Addition to ERC20 token methods .", "title": "", "metadata": ""}
{"_id": "488fe4e2ac4781cf7620670829db37d3", "text": "decreaseApproval function , revert if the contract is paused .", "title": "", "metadata": ""}
{"_id": "8a24112d968998a88171dc84a073ac64", "text": "Any C-level can change sales cut .", "title": "", "metadata": ""}
{"_id": "acace05e6c84bcaf662afcab99668f00", "text": "Allows anyone to transfer the MiT tokens once trading has started .", "title": "", "metadata": ""}
{"_id": "e7877e0acb02ea4ed4fe778fe11a431f", "text": "add new certified partner .", "title": "", "metadata": ""}
{"_id": "81ef817039311b6e4dedbe05983b6480", "text": "This callback function is called by Oraclize when the result is ready .", "title": "", "metadata": ""}
{"_id": "5e49c99835e5e6271e805ae122b5bdac", "text": "Determines random number between range .", "title": "", "metadata": ""}
{"_id": "a88f6c6d0f776b91a0f4f2f2c399506b", "text": "function to get amount of Latium tokens ( with decimals ) that are locked at this moment .", "title": "", "metadata": ""}
{"_id": "a692806b58c8e1651e67e09a393dbfe5", "text": "Function to burn Tokens .", "title": "", "metadata": ""}
{"_id": "a3be214a664e3bd308dbe45e7a2b91d8", "text": "Query the event to participate in the HASH by guessing the event ID .", "title": "", "metadata": ""}
{"_id": "16eaa3f6e84994f82fd2b252a9c71474", "text": "Ownership of the PAY token contract is transfered to this owner .", "title": "", "metadata": ""}
{"_id": "cb496985df9cd3ad6cda94db18c26db2", "text": "Unfreeze the amount of tokens by the owner .", "title": "", "metadata": ""}
{"_id": "9ea5d74a65ab67c716921debf4cddef3", "text": "Throws if called by any account other than a minter .", "title": "", "metadata": ""}
{"_id": "086b30bcdb9b01af2ebcc41d94d9ee3b", "text": "Allows owner to initiate the claiming phase .", "title": "", "metadata": ""}
{"_id": "93404cb0799d43ae5a84d8739f330190", "text": "Allows the owner to pull contract creation fees .", "title": "", "metadata": ""}
{"_id": "36fc18ec0da3653f0309b25a75c01ed4", "text": "method to calculate an invidual's reward .", "title": "", "metadata": ""}
{"_id": "490cccae3a95551f71026e231b1214b9", "text": "function to set the new price can only be called from owner wallet .", "title": "", "metadata": ""}
{"_id": "d31883213265318a4563ce7e3ebe50ef", "text": "Transfer house profit to houseAddress .", "title": "", "metadata": ""}
{"_id": "493a6f0d05decd34092810d7f817bfdb", "text": "Function allowing to credit tokens to participant in the bounty campaign .", "title": "", "metadata": ""}
{"_id": "d8090c9adb5d227516a3f5492e5ecf60", "text": "Cancels an sale ( given the collectibleID is not 0 ) .", "title": "", "metadata": ""}
{"_id": "7287dc908fed5fee2be74130c331b7fb", "text": "ERC223 Transfer to a contract or externally-owned account .", "title": "", "metadata": ""}
{"_id": "0a51e09b61c5652a97fcfae684f7c613", "text": "Gets the second signer's address using ecrecover returns address recovered from the signature .", "title": "", "metadata": ""}
{"_id": "0e668370f8c9d9ef6f5ed75580ebfc16", "text": "Allows a user to give a horsey a name or rename it .", "title": "", "metadata": ""}
{"_id": "c877c9b63add9c2d4e3cd9e85c84f02b", "text": "Withdraw allocated tokens .", "title": "", "metadata": ""}
{"_id": "31af2e2aa93e106f7a3c4ef326ca17e5", "text": "Show the tokenOwner balances for this contract .", "title": "", "metadata": ""}
{"_id": "801772ce1721453a280e0335cc92ce10", "text": "True if operation succeeds .", "title": "", "metadata": ""}
{"_id": "5caa6f0e54e83db9c394750669369697", "text": "Entry points for signers .", "title": "", "metadata": ""}
{"_id": "5c6b8e6b9c60fc7e92505c817a2fce03", "text": "Define how many wonderful Lemon Tokens will be issued for participating the selfdrop : basic and holder reward .", "title": "", "metadata": ""}
{"_id": "447d4becf01a173e484b2f74de5806cb", "text": "Update the address of the genetic contract .", "title": "", "metadata": ""}
{"_id": "251c9f45eb6b2007cae3dd3efa4bed4c", "text": "returns notes placed by sender .", "title": "", "metadata": ""}
{"_id": "74607b7a780470e4f6f8f3e638729677", "text": "Returns price - should throw if not valid .", "title": "", "metadata": ""}
{"_id": "9439e882f06dca3ab7967b7f49dca79c", "text": "Olivia Marie Fraga Rolim .", "title": "", "metadata": ""}
{"_id": "e572900dec9d7a150889fe5e54335c34", "text": "Returns the addresses currently assigned ownership of the given pixel area .", "title": "", "metadata": ""}
{"_id": "4769e5eb972e602fbcfa80369edf749a", "text": "Override unpause so it requires upgradedContractAddress not set , because then the contract was upgraded .", "title": "", "metadata": ""}
{"_id": "685e2b0f11377817b31926ccdbfca54a", "text": "This function manages the Crowdsale State machine .", "title": "", "metadata": ""}
{"_id": "8fa7b317e56be9c3c677bfc4e535e867", "text": "sell ALL your tokens to claim your dividend .", "title": "", "metadata": ""}
{"_id": "f1805be6b27f1504b3af1164c61a0650", "text": "Allow the owner to change the account that controls this contract .", "title": "", "metadata": ""}
{"_id": "259fea76af7fdf56d925b97281dcf6b7", "text": "function to let users claim their tokens .", "title": "", "metadata": ""}
{"_id": "031175d11bc0cf2a35db902b63eafef0", "text": "Utility internal function used to safely transfer value tokens from - to .", "title": "", "metadata": ""}
{"_id": "c7328b625f18fd8ec37af050e186fed3", "text": "modifier to ensure only the Hirer can execute .", "title": "", "metadata": ""}
{"_id": "7b500b2959375165f5d0eb9704ce223c", "text": "Division method .", "title": "", "metadata": ""}
{"_id": "3c7bec2358bf36df0c976c68b455fcf4", "text": "store sum .", "title": "", "metadata": ""}
{"_id": "1a3821acdd1b22d50a663e2e0099dfc0", "text": "Update the current IPO price .", "title": "", "metadata": ""}
{"_id": "3b8f233f4e098853acc82cb95a1f53e0", "text": "Liquidation ratio .", "title": "", "metadata": ""}
{"_id": "fa4229fe18dcd7e714f61c61ea4b6804", "text": "Any C-level can fix how many seconds per blocks are currently observed .", "title": "", "metadata": ""}
{"_id": "d0affa3ca8075d65e014e157ed463c53", "text": "Version of balanceOf ( ) which includes all frozen tokens .", "title": "", "metadata": ""}
{"_id": "b0e00e1647c78167db8f6dce9820eec0", "text": "Updates the reward distributor .", "title": "", "metadata": ""}
{"_id": "daebbe280ce991fff1cfdad84c08d4dd", "text": "Recover funds .", "title": "", "metadata": ""}
{"_id": "a71a6e3d83f9d9dd27b578e8b3d74886", "text": "Notifies the controller about a burn attempt .", "title": "", "metadata": ""}
{"_id": "09824e4584b2b447deebd74a91fd78d5", "text": "in case we want to transfer token to other contract we need freeze all future transfers .", "title": "", "metadata": ""}
{"_id": "4960b96b0023a6753ebee8b20478258b", "text": "Validates ether balance .", "title": "", "metadata": ""}
{"_id": "e0ccecd9b8c6ce1c30f9b97ca6fd019a", "text": "Overrides Crowdsale fund forwarding , sending funds to vault if not finalised , otherwise to wallet .", "title": "", "metadata": ""}
{"_id": "c9f31c80ea88045397b3d6c6214d5d05", "text": "Compute percentage fee of transaction .", "title": "", "metadata": ""}
{"_id": "de0bbeb2857338f9ea35dcbe57c8f480", "text": "Can be called by anyone .", "title": "", "metadata": ""}
{"_id": "317dc10d158a4a65380508b6606f2618", "text": "Burn specified number of GSCP tokens .", "title": "", "metadata": ""}
{"_id": "3e19e19c835e723f84358902d083ce8f", "text": "claim total \u039e claimable for sender based on token holdings at time of each payout .", "title": "", "metadata": ""}
{"_id": "ff1232af4c4a119d8b3ba068e09dac84", "text": "Sets configuration option .", "title": "", "metadata": ""}
{"_id": "bd009a4d0c2093723c2cdec81fa3fa8e", "text": "returns the number of tokens available in the sale .", "title": "", "metadata": ""}
{"_id": "dcccfd8a3c84b6fa6376c1d2cdf007ba", "text": "Get x , y section_identifier from a section index .", "title": "", "metadata": ""}
{"_id": "925c4376243c00342e451cd91e7cb40e", "text": "If the user sends 0 ether , he receives 100 tokens .", "title": "", "metadata": ""}
{"_id": "14ea6eacce17bcd83785189acdb15734", "text": "Internal method to change rate if boundary is hit .", "title": "", "metadata": ""}
{"_id": "124a8832c9d7de6fba2365cffd2607ee", "text": "Burn by User .", "title": "", "metadata": ""}
{"_id": "9cc0ce81f080a007635ec91081ad08d1", "text": "Put a Puppy up for auction to be sire .", "title": "", "metadata": ""}
{"_id": "ec97621a0a75a11e986810f2443fb6fd", "text": "Function to broadcast and accept an offchain signed request ( the broadcaster can also pays and makes additionals ) .", "title": "", "metadata": ""}
{"_id": "7ef5638951416a29b2e61546669cd94b", "text": "Calculates bonus if PreIco sales still not over .", "title": "", "metadata": ""}
{"_id": "482201a8496ff4145be3240a5a64db8c", "text": "Returns a contributor's balance .", "title": "", "metadata": ""}
{"_id": "c7a1dd2bda67616239987a950e08ec9f", "text": "Some useful getters ( although you can just query the public variables ) .", "title": "", "metadata": ""}
{"_id": "79083b56573e6a74566c4f525b5016a2", "text": "Math operations with safety checks that throw on error returns the difference of a minus b , asserts if the subtraction results in a negative number .", "title": "", "metadata": ""}
{"_id": "21d100f0030789100ada9f66bab0b337", "text": "An external method that modifies the avatar characteristic .", "title": "", "metadata": ""}
{"_id": "b67078fa16b52815915acba9df52ddbf", "text": "Refunds tokens to particular address .", "title": "", "metadata": ""}
{"_id": "57449e65b929a03677c737078094e1b3", "text": "get allowance that you can spend , from delegated wallet .", "title": "", "metadata": ""}
{"_id": "f670fe78b86e4bb9a7f0a6d6e4830c86", "text": "CHECK BETS FUNCTIONS private .", "title": "", "metadata": ""}
{"_id": "6199f16623f8945345fd1ef67e68d7ae", "text": "set address of token porter .", "title": "", "metadata": ""}
{"_id": "41b5569bd1dca76261f3f5a88fee47a5", "text": "Purchase action only permit manager to use .", "title": "", "metadata": ""}
{"_id": "32df345ffcb1e092af34e2154cc662ef", "text": "Finalizes the bonussale and sets up the break and public sales .", "title": "", "metadata": ""}
{"_id": "9f60ace0b80f3c0bdc0b228b2fb1976f", "text": "Owner can withdraw ether if token received .", "title": "", "metadata": ""}
{"_id": "fdee56647282045a6df48035d22f0dfc", "text": "Checks if the commit period is still active for the specified poll .", "title": "", "metadata": ""}
{"_id": "efe0b015d8076f718740a75c8c68ae2a", "text": "this method is used to create CrySol Object .", "title": "", "metadata": ""}
{"_id": "18c449ec864c388661aa6b0490aba530", "text": "Allows the owner to designate a new owner .", "title": "", "metadata": ""}
{"_id": "292d097b90d0962bbf0bd6022537bd21", "text": "Get contributed amount in wei .", "title": "", "metadata": ""}
{"_id": "f9e87f2ff0820ac2ade48827472c9cfb", "text": "Transfers multiple amounts within multiple Pledges in an efficient single call .", "title": "", "metadata": ""}
{"_id": "df9dc8d8123eede7a87ce7afd7526903", "text": "Throws if contract paused .", "title": "", "metadata": ""}
{"_id": "f2b7776ad2485b34bbea4d7dda8a25ab", "text": "Remove users in group .", "title": "", "metadata": ""}
{"_id": "52a4743febc1189293fa240cab3fa889", "text": "This function is called from core Contract to put tulip on initial sale .", "title": "", "metadata": ""}
{"_id": "40cbc29b778640867dc1c5bef1705792", "text": "Destroy current game .", "title": "", "metadata": ""}
{"_id": "3278305faacbab0893b6ee83ef81c38c", "text": "Function to check if the manager can perform the action or not .", "title": "", "metadata": ""}
{"_id": "58c3946053c903f4af381d806d805b79", "text": "Allows anyone to delete the owner and resolver records for a ( subdomain of ) a name that is not currently owned in the registrar .", "title": "", "metadata": ""}
{"_id": "2b209192e727dbbf0ce9e3a265f2b2ef", "text": "Failsafe to reclaim ownership in the event sale is unable to return ownership .", "title": "", "metadata": ""}
{"_id": "1212c7d7cf965fc24fd2f90f332e4477", "text": "Allocate tokens for founder vested gradually for 1 year .", "title": "", "metadata": ""}
{"_id": "11398b2aee8edceb79620cab2f6a8103", "text": "Modifier that prevent calling function if account not registered .", "title": "", "metadata": ""}
{"_id": "d43014b5561f520c34995f5db241a840", "text": "Add a collector .", "title": "", "metadata": ""}
{"_id": "4356617fb585b24fec25ea494615489b", "text": "set exchange rate for ETH / EUR - needed for check whether incoming payment is more than xxxx EUR ( thus requires KYC / AML verified address ) .", "title": "", "metadata": ""}
{"_id": "38cffda6de001bfdc0a2cff1104731b8", "text": "defines a new reserve for the token can only be called by the owner while the converter is inactive .", "title": "", "metadata": ""}
{"_id": "6169e6db1e5a8f20f0b995ace240c656", "text": "Register file hash in contract , web3 integration .", "title": "", "metadata": ""}
{"_id": "e0b5c343a281b28e1032885f2b0748ff", "text": "Returns arrays of addresses who sell tokens and corresponding amounts .", "title": "", "metadata": ""}
{"_id": "a962363d22b05a0b7edc5c66379fb031", "text": "Set amount of token sale to approve allowance for sale contract .", "title": "", "metadata": ""}
{"_id": "abc688ff1f01afecefdbd0f57dca53a4", "text": "One time command to allocate 5kk bounty tokens .", "title": "", "metadata": ""}
{"_id": "40e21eb2714979fa6f0c77579c685f3a", "text": "verify input data's basic integrity .", "title": "", "metadata": ""}
{"_id": "eb0abe093631ab7f77e94cd7a12f49e2", "text": "Sets the limit for a partner address .", "title": "", "metadata": ""}
{"_id": "2098c9ccd30bb16fc5069e01affd8026", "text": "Action after buying tokens .", "title": "", "metadata": ""}
{"_id": "54269a5db98511866aea4d4d682da519", "text": "Legacy functions .", "title": "", "metadata": ""}
{"_id": "94c2f96d7c27c6f16ceda695a3fa0274", "text": "This function moves a proposal to a final state of WithdrawnByCreator' and returns tokens to the sources described by the proposal's transfers .", "title": "", "metadata": ""}
{"_id": "ba7bb6a819b86fc806ab09b6c2503bdb", "text": "solhint-disable - next-line func-order .", "title": "", "metadata": ""}
{"_id": "980760caed13e4e315cac4d79ec6c4e8", "text": "Convert bytes to address .", "title": "", "metadata": ""}
{"_id": "57703ef74423007884d461a5ee3bcd56", "text": "remove a member from the network .", "title": "", "metadata": ""}
{"_id": "b8cdf0f8bf91c3a31501b662df83117f", "text": "main method .", "title": "", "metadata": ""}
{"_id": "d187b8d103d7b0e059de3c564fc181e6", "text": "Set the avatar URI .", "title": "", "metadata": ""}
{"_id": "6256bc0b16cc8972e3ee007b32a53823", "text": "If a little more than a year has elapsed ( ICO start date + 460 days ) , a smart contract will allow you to send all the money to the Beneficiary , if any money is present .", "title": "", "metadata": ""}
{"_id": "b87d05449d8429217b54cffecb151ae2", "text": "setRenewable - sets if a product is renewable .", "title": "", "metadata": ""}
{"_id": "e75e97039c1b061b0e7fc0ef92e447b2", "text": "Check if controller is not paused .", "title": "", "metadata": ""}
{"_id": "48235a8155db0c6a502da9e05e8fc0b1", "text": "Refund donations when no minimal value achieved .", "title": "", "metadata": ""}
{"_id": "760645e0db64a31a60dbb75da12d89e5", "text": "Allows the owner to set the Vault address .", "title": "", "metadata": ""}
{"_id": "58dc7aff07ab6a619d01c28f401cee5c", "text": "add a wallet manager .", "title": "", "metadata": ""}
{"_id": "fb20f3ab34206a5e2c39051e0c13d5c1", "text": "Decline participant's KYC .", "title": "", "metadata": ""}
{"_id": "7cf44e03402334bc62cbe35b08874722", "text": "Function is called after token transfer from user s wallet to check and correct user s vote .", "title": "", "metadata": ""}
{"_id": "16a8a0f6bdb25611daeac9a4f239f09e", "text": "Add a list of address to be whitelisted for the crowdsale only .", "title": "", "metadata": ""}
{"_id": "5bcbfa2041ce28d0c79be63ffa60f70c", "text": "Check if the given address is a majority company shareholder .", "title": "", "metadata": ""}
{"_id": "160dba057df47538d37a1d59017a2bdc", "text": "Replaces the artwork with the given id with the last artwork in the array .", "title": "", "metadata": ""}
{"_id": "9c3cd54292c6d1ac14f5108965562c40", "text": "sets the maximum percentage that an individual token holder can hold .", "title": "", "metadata": ""}
{"_id": "b327b0d491dc7fbb861e6f02389dc38c", "text": "in order to let more people participant , dealer can recharge .", "title": "", "metadata": ""}
{"_id": "0dbf04011e562c5dc51a9c5cf218e438", "text": "Transfer _amount tokens to address _to .", "title": "", "metadata": ""}
{"_id": "ee7559838f078aed567a93b65ebc1bb7", "text": "Update a whitelist / blacklist .", "title": "", "metadata": ""}
{"_id": "9856a1e0423b7b1ae0c1199238982766", "text": "for debug only available before the contract is locked .", "title": "", "metadata": ""}
{"_id": "859a89bfa859100268dbf79de097c910", "text": "Transferencias entre direcciones .", "title": "", "metadata": ""}
{"_id": "112299555dfbf485487e3d9a2883c148", "text": "Can act only after token activation .", "title": "", "metadata": ""}
{"_id": "12c6cc0fc91fe2b3a480878513924753", "text": "allows owner to approve more POLY to one of the modules .", "title": "", "metadata": ""}
{"_id": "41d150b8316b3e9a338c8dd2d79545b9", "text": "by the address of client set performer for pending task .", "title": "", "metadata": ""}
{"_id": "e29a1f5dcb449d9a3f0d7b266befe721", "text": "Transfer tokens from vault to account if sales agent is correct .", "title": "", "metadata": ""}
{"_id": "9feff92964c07043a3fbf3a1f88e00eb", "text": "Called when task is unable to execute .", "title": "", "metadata": ""}
{"_id": "54655c9fa30d29151e186fcdaae5288b", "text": "fee withdraw to owner , everyone can do it .", "title": "", "metadata": ""}
{"_id": "23a9aa338daf7223ecabb616ab1e435f", "text": "This is a modifier whether transfering token is available or not .", "title": "", "metadata": ""}
{"_id": "44c522c93b580c7840e4703a7cd86ccf", "text": "setter function for token wallet .", "title": "", "metadata": ""}
{"_id": "50755a56abce5142fa0c1664279c91e0", "text": "If whitelist is disabled , that will become onlyOwner .", "title": "", "metadata": ""}
{"_id": "5af92c4d92903376d91d8e773f746468", "text": "Destroys the current contract and moves all ETH back to owner .", "title": "", "metadata": ""}
{"_id": "7c2386f75d08bee59f5ac467340f9ca3", "text": "Lock reserve tokens for 1 year .", "title": "", "metadata": ""}
{"_id": "9fbca476ad08e279caaa7fe249200381", "text": "For creating Token .", "title": "", "metadata": ""}
{"_id": "3019a33c501349c0728c58a05c511c61", "text": "This function adds a new projectManager to the end of the list .", "title": "", "metadata": ""}
{"_id": "618d7f7cea83c8f6693c31eb4e7ede5e", "text": "Calculate trade to buy eggs .", "title": "", "metadata": ""}
{"_id": "8b66d566a1b34a77e5956ab3f0776ac9", "text": "anyone can burn their VKN tokens .", "title": "", "metadata": ""}
{"_id": "1fb33caf85c9b2708f78ee6b5e644dc7", "text": "allow user to make an offer after initial phase ( re-sale ) any offer minResalePercentage is accepted automatically .", "title": "", "metadata": ""}
{"_id": "421a8bac077a445f1079378897db2778", "text": "Low level token purchase function .", "title": "", "metadata": ""}
{"_id": "62848a0a85be933e8891477529277a09", "text": "Converts token quantity defined by '_token' into ether and sends back to msg . sender .", "title": "", "metadata": ""}
{"_id": "7e59a460d0cbe91f5a6d10606255ba5e", "text": "This makes it easy to override deltaTime in FidgetSpinnerTest so we can test that velocity / displacement decay is working correctly .", "title": "", "metadata": ""}
{"_id": "113b7b476896dbb16ae7a33eb2d2da2b", "text": "Transfer function extended by check of eth balances and pay transaction costs with CLOUD if not enough eth .", "title": "", "metadata": ""}
{"_id": "938f2c3a019880c6ebd26cd55d5a8df3", "text": "creates new GLX tokens .", "title": "", "metadata": ""}
{"_id": "9813bcf46c7437f9c5234af26b493718", "text": "Send _amount tokens to _to from msg . sender .", "title": "", "metadata": ""}
{"_id": "8bbf4a875265edfc3035f47424502908", "text": "set the rate for each stage .", "title": "", "metadata": ""}
{"_id": "bf2ca30c90fc3014f0ed8991a6b4b1a8", "text": "Officially starts the game and configures all initial details .", "title": "", "metadata": ""}
{"_id": "b72c471540b0423aae694500373e8aac", "text": "Sets and clears mutex in order to block function reentry .", "title": "", "metadata": ""}
{"_id": "67080e2bb99832eb771258d20aadb0e2", "text": "fix for ERC20 short address attack .", "title": "", "metadata": ""}
{"_id": "f59e4491ba59c52608f3000f61dd693d", "text": "Rejects a proposition of a bounty token .", "title": "", "metadata": ""}
{"_id": "4f2026186338e5dc09a205d5f4cff7b3", "text": "This function allows for user to refund Ether .", "title": "", "metadata": ""}
{"_id": "7a2bb09299125d5abc4b99ab59b2c23a", "text": "Checks that address a is the first input in msg . data .", "title": "", "metadata": ""}
{"_id": "c6a62a96f4a67f8cb8d3123c50db38b1", "text": "Rate on which .", "title": "", "metadata": ""}
{"_id": "a877c0b8693485f70e5246beadb83d93", "text": "Returns the list of vote counts .", "title": "", "metadata": ""}
{"_id": "a88c246d2b8c3dda8d752fe7da516e99", "text": "Functions to get the features of each round .", "title": "", "metadata": ""}
{"_id": "2c41c94671f12645119bc5fb19f7bc43", "text": "Get assetsCertified .", "title": "", "metadata": ""}
{"_id": "23e68af2b4647d94bd25498ab9eff39a", "text": "_a * _b / 2 128 .", "title": "", "metadata": ""}
{"_id": "1da5996ad47b058982eea7ba6e9a47ca", "text": "unsold tokens back to Platform Growth Reserve .", "title": "", "metadata": ""}
{"_id": "dbed16d448fe610da26716d65d8675fa", "text": "owner restricted function .", "title": "", "metadata": ""}
{"_id": "801d04839effa0d768de7ce58ff2463c", "text": "Take allowed tokens .", "title": "", "metadata": ""}
{"_id": "59a0f370a4b91775ead4cb712396505a", "text": "Pays out to a DRCT token .", "title": "", "metadata": ""}
{"_id": "4c73e75fd1b30d2833cadf7e1e70aa6d", "text": "additional functionality , used to pause crowdsale for 24h .", "title": "", "metadata": ""}
{"_id": "acf34333943d41ccfa12a03ad00e9fe1", "text": "Burn token of sender address .", "title": "", "metadata": ""}
{"_id": "de4b0f19d578e4f42b7634a1f4bf0c2e", "text": "Throws if transaction size is greater than the provided amount .", "title": "", "metadata": ""}
{"_id": "77cd1ca79097de15b320b83e1ebcf96c", "text": "Function called when API gets results .", "title": "", "metadata": ""}
{"_id": "af7ffb7ea618ab5d546983ad82de3442", "text": "Set Comission rate 100-x .", "title": "", "metadata": ""}
{"_id": "377125fe0319ae29f0a6a8b1a55d43dd", "text": "When necessary , adjust minimum FTX to transfer to make the gas worthwhile .", "title": "", "metadata": ""}
{"_id": "7b99a1f671b857140da84b9aff28df4e", "text": "set blacklist .", "title": "", "metadata": ""}
{"_id": "a1b666ea83ff690b6d6f3d8bc51b0af5", "text": "Get address of the bank .", "title": "", "metadata": ""}
{"_id": "94437a7c27085f106f5a6213996c7d9d", "text": "purchase while crowdsale is live only .", "title": "", "metadata": ""}
{"_id": "2637a401917869c900d094a905d50c41", "text": "Function to calculate bonus tokens based on current time ( now ) and maximum cap per tier .", "title": "", "metadata": ""}
{"_id": "df135bd5dbb15b189ba19213e20a3d35", "text": "set relay address .", "title": "", "metadata": ""}
{"_id": "33f8d5ce21db02b8f2ffeba924a97d68", "text": "functions added here to reduce gas cost .", "title": "", "metadata": ""}
{"_id": "87f9f142ae26369a6f829890f286af1c", "text": "Set a specific price for a CardboardUnicorn .", "title": "", "metadata": ""}
{"_id": "cad49a6151f70058cafc38d901d54d7f", "text": "Used by investor to claim token .", "title": "", "metadata": ""}
{"_id": "b4568cc9b98a1b4f6c9c9082f49787f7", "text": "This function was created to be overridden by a parent contract .", "title": "", "metadata": ""}
{"_id": "4305a0adfcdcb6fe7123d2eb6069cc4f", "text": "Sign in contract .", "title": "", "metadata": ""}
{"_id": "621d7662452e63a93e02f359487c9f55", "text": "Get the token we are distributing .", "title": "", "metadata": ""}
{"_id": "6fc68a48a139fe4aa4b19fd00edd0990", "text": "Burns tokens from address .", "title": "", "metadata": ""}
{"_id": "ab45845a9cbbdcb19a810282add0e7aa", "text": "Finish the game .", "title": "", "metadata": ""}
{"_id": "168f98a8856bcd1bd75f6f18491b8434", "text": "set Founder address .", "title": "", "metadata": ""}
{"_id": "f66be3ba1b78e5e52dc4e589b9ab1a21", "text": "recycle user token to owner account .", "title": "", "metadata": ""}
{"_id": "79d2c3358eaad8557a0602776d3e42fe", "text": "Set the affiliation of a user to a given code .", "title": "", "metadata": ""}
{"_id": "f4968c7838d6536bb719f04a5e1d2c10", "text": "modifier that requires there is not a game in progress for the player .", "title": "", "metadata": ""}
{"_id": "d363b8f69b742907232d30cb98062a9c", "text": "Allows the current admin to transfer control of the contract to a newAdmin .", "title": "", "metadata": ""}
{"_id": "1ea94bd195ffb750e5ad50864b723e56", "text": "This method should be called by the APT holders to collect their corresponding AIXs .", "title": "", "metadata": ""}
{"_id": "a460bc4542702ab42e8242e92cb364dd", "text": "function to be used for mainsale purchase .", "title": "", "metadata": ""}
{"_id": "2b788b04667756e1ac59c7068855584a", "text": "Rise or lower user bank balance - Backend Function .", "title": "", "metadata": ""}
{"_id": "515d5c6a3b663d7eb5049bbb0d4484e9", "text": "Change Crowdsale bonus rate .", "title": "", "metadata": ""}
{"_id": "50011fb713d6f0b43337afe683d3ffe7", "text": "Initialize TokenRegistry address .", "title": "", "metadata": ""}
{"_id": "665a348e67ea01c6298f6eef81ae2b96", "text": "If sealed , transfer is enabled and mint is disabled .", "title": "", "metadata": ""}
{"_id": "16569d35da770dabb66b3c320a8a8e73", "text": "grade calculation based on parrot quality .", "title": "", "metadata": ""}
{"_id": "af98adf9537e2fe7216b82a9750dbe59", "text": "Attempt to generate a new pseudo-random number , while advancing the internal entropy of the contract .", "title": "", "metadata": ""}
{"_id": "85b089bfcb298476a78c8e9b152fb54c", "text": "Get a market at a given index .", "title": "", "metadata": ""}
{"_id": "35b153ad7d7f69adc347e3d79e80164a", "text": "Name of the collection of deeds ( non-fungible token ) , as defined in ERC721Metadata .", "title": "", "metadata": ""}
{"_id": "84f58af9eda29388a3658522129f7380", "text": "if this epoch is the last , then the reward called by the owner .", "title": "", "metadata": ""}
{"_id": "c1b7a4c59e13a24e5bcffd1697e35a2a", "text": "provides the price of an empty block .", "title": "", "metadata": ""}
{"_id": "6e6ce291de1ee14b7402cb53cd7fcb97", "text": "Add a list of participants to tier 2 .", "title": "", "metadata": ""}
{"_id": "dd7205f1c7991c03f4aaff55c8e7d4d1", "text": "Adds two unsigned integers , throws on overflow .", "title": "", "metadata": ""}
{"_id": "f3a4f87ead005921c850c6d797636b32", "text": "Change min / max bet amounts .", "title": "", "metadata": ""}
{"_id": "0d5f2d2a794b9ed176a0a1f7b5727344", "text": "withdraw ether from the account to a target account .", "title": "", "metadata": ""}
{"_id": "bff9ff8444b9bb91773e0ce54965b585", "text": "Note no default constructor is required , but remember to set commission wallet before operating .", "title": "", "metadata": ""}
{"_id": "1727006819e681b1ea8accf04f257946", "text": "Change first adress with reserve ( 300000000 tokens ) .", "title": "", "metadata": ""}
{"_id": "484de953af42b43b0226d7b2a6db9399", "text": "get the balance of a user .", "title": "", "metadata": ""}
{"_id": "897d536888dba7ed760e65c47227be4f", "text": "Removes single address from blacklist .", "title": "", "metadata": ""}
{"_id": "793f4bf69aa0f4b32bcee9a7f7b364ee", "text": "Self destruct contract .", "title": "", "metadata": ""}
{"_id": "3b9cd8575d0d110c616ba71c9c23778e", "text": "Reclaims free slots between valid owners in m_owners .", "title": "", "metadata": ""}
{"_id": "31dcc281c86b82da2604758ef046ae4f", "text": "Only owner can call this function .", "title": "", "metadata": ""}
{"_id": "4e22be55bf7fb54c1a688cff255b1833", "text": "The current exchange rate .", "title": "", "metadata": ""}
{"_id": "9b4afeed477d23055169f1e047f26583", "text": "Prevent targets from sending or receiving tokens by setting Unix times .", "title": "", "metadata": ""}
{"_id": "884d353ff2ad47bb3b95cc4011c169a5", "text": "Allows owner to change the refund exchange rate of tokens ( default 0 . 005 Ether ) .", "title": "", "metadata": ""}
{"_id": "fa7f9ba44ee8029ed2c2822f182916bd", "text": "Add to the amount this member has bought .", "title": "", "metadata": ""}
{"_id": "c3eb707cb2688434aa93b68feae436a0", "text": "Returns user ETH tokens balance in contract .", "title": "", "metadata": ""}
{"_id": "39e703b5016b9fa8f5f566ab6a3850bb", "text": "returns the address of the ether token used by the quick buy functionality note that it should always be the first element in the quick buy path , if one is set .", "title": "", "metadata": ""}
{"_id": "e04a1777c182bf3561a05970aee620a1", "text": "Sell tokens during ICO with referral .", "title": "", "metadata": ""}
{"_id": "c59b13b031eee421540375b2d05505b0", "text": "Import cuties from previous version of Core contract .", "title": "", "metadata": ""}
{"_id": "2e56323b1d3d4aaf3f3dabc53db0456e", "text": "allow locked token to be obtained for founder .", "title": "", "metadata": ""}
{"_id": "5bccf5ef1710a96529b308c73e917b35", "text": "After create sale contract first function should be approveAndCall on Token contract with this contract as spender and TOTAL_TOKENS_TO_DISTRIBUTE for approval this callback function called form Token contract after approve on Token contract eventually tokensRemainingForSale TOTAL_TOKENS_TO_DISTRIBUTE .", "title": "", "metadata": ""}
{"_id": "921c80ea69303fe8a26c2d8c82bbf9fb", "text": "withdraw function .", "title": "", "metadata": ""}
{"_id": "88fbf8b487556088d9ee579bba36d925", "text": "This is public rather than external so it can be called by derived contracts .", "title": "", "metadata": ""}
{"_id": "263fb5aadb5874e6f80b2860b4416e8f", "text": "Current LRC balance .", "title": "", "metadata": ""}
{"_id": "5d364c0b12d6ba2e30cad23124d77e7e", "text": "Set PreICO status .", "title": "", "metadata": ""}
{"_id": "cda0dc1917ffd05ec0b0c90fa30727a4", "text": "Configures a domain for sale .", "title": "", "metadata": ""}
{"_id": "d81ae809e84e6e2bdd8dc641e2318d61", "text": "Hibernate the avatar : cannot be modified .", "title": "", "metadata": ""}
{"_id": "3428d3dd5284eae5f7df0649bef6fdcc", "text": "Create a refund proposal .", "title": "", "metadata": ""}
{"_id": "1a50482754cf99318f13c47fb732e038", "text": "burn airdrop tokens .", "title": "", "metadata": ""}
{"_id": "4b8f56071cad945f5d64e2686895b576", "text": "Owner only function for manual assignment of tokens .", "title": "", "metadata": ""}
{"_id": "f9a542e58d491cfe943cf3af45a2fc01", "text": "Withdraw eth .", "title": "", "metadata": ""}
{"_id": "103455e381f37aa55eb21036efd98df8", "text": "Setup the interface to the Bubbled multisig contract .", "title": "", "metadata": ""}
{"_id": "1b798ba462df63592e64c4fd95a51d31", "text": "Allows contributor to claim part of the tokens remaining after crowdsale stage finalizes .", "title": "", "metadata": ""}
{"_id": "e777ee0bfaedb015cfffd3b843985fd7", "text": "Factory owner can transfer out any accidentally sent ERC20 tokens .", "title": "", "metadata": ""}
{"_id": "8ad25c005e6afd5510ec8819a6d9edb4", "text": "Create already verified users from old contract .", "title": "", "metadata": ""}
{"_id": "80e42dc294cac4b10654d2c0bc17f2d3", "text": "safe multiplication .", "title": "", "metadata": ""}
{"_id": "bafaafe1ededae21ae9cf2560bdef202", "text": "Creates a new meme with the given name .", "title": "", "metadata": ""}
{"_id": "0059612e68d1304e778ef6631a313c4a", "text": "good for revoking tickets , for refunds etc .", "title": "", "metadata": ""}
{"_id": "e3b248d3ad5fe81593d51da4ad3307a0", "text": "Function to determine if a ballot has been sealed , which means it has been authorized by the administrator and can no longer be changed .", "title": "", "metadata": ""}
{"_id": "9bc480d60a47c2b7dbea2762ed95586a", "text": "Updates the balance of the specified address .", "title": "", "metadata": ""}
{"_id": "27022995153e0f90aa82b86bf5834a40", "text": "Checks if an address is owner .", "title": "", "metadata": ""}
{"_id": "96b208b44074cc3c5d382a4c80f8d97b", "text": "Token Contract Forwarding Controller Functions .", "title": "", "metadata": ""}
{"_id": "82b434f7d81535f67fa58ff58700c711", "text": "Permanently lock out the contract owner to decentralize Oyster .", "title": "", "metadata": ""}
{"_id": "1da47f2dff2475c659e51f53e8c05e54", "text": "Throws if called by any account other than the current owner .", "title": "", "metadata": ""}
{"_id": "2ae6c6fbcca6e9b3be6a791ca6066e34", "text": "Checks if the venting period is over for a specified user .", "title": "", "metadata": ""}
{"_id": "ca82ae32c6c6769291f88f8933b74219", "text": "Used to decentralize , toggles whether the LPVault will automatically confirm a payment after the payment has been authorized .", "title": "", "metadata": ""}
{"_id": "e4efdc1773e2399d85c31c7df73a88d4", "text": "Performs the finalization tasks : - if goal reached , activate the controller and burn the remaining tokens - transfer the ownership of the token contract back to the owner .", "title": "", "metadata": ""}
{"_id": "ed98fae0ec403da8ce46d2cea0a66818", "text": "Function called for valid tx to the contract .", "title": "", "metadata": ""}
{"_id": "932a7474ded8b8f2c4f789896dae6799", "text": "issue art coin to user .", "title": "", "metadata": ""}
{"_id": "6fa9433372b2b354a7ef336b3cf0e3cf", "text": "Transfer tokens from account ( _from ) to another account ( _to ) .", "title": "", "metadata": ""}
{"_id": "3987ff68dfb18e75c05163ad8f976db1", "text": "Checks to see if a given Pony is pregnant and ( if so ) if the gestation period has passed .", "title": "", "metadata": ""}
{"_id": "4360ae566518ec3578e36a42da03160e", "text": "Opens early birds sale .", "title": "", "metadata": ""}
{"_id": "d58868b10ab509ea8486038ed589851c", "text": "INTERNAL functions .", "title": "", "metadata": ""}
{"_id": "28747702098176875111f7048f3d05f3", "text": "Set new charging rate .", "title": "", "metadata": ""}
{"_id": "d560675296f2638644e1613f58a67a5f", "text": "ERC20 token balanceOf query function .", "title": "", "metadata": ""}
{"_id": "11abf4cb65d5ac795e0acc97fc2f32c3", "text": "expected callback ( include operator ) .", "title": "", "metadata": ""}
{"_id": "e9130e2d9f00cee319e215809406c085", "text": "Agent sign on user data by Admin .", "title": "", "metadata": ""}
{"_id": "1b0a55c29bd6c1799fabcbfcb75e6eec", "text": "modifier to allow actions only when the contract IS paused or if the owner or ICO contract is invoking the action .", "title": "", "metadata": ""}
{"_id": "3bc73160c9830457eb8b5954ad19180c", "text": "Raises a to the b th power , throws on overflow .", "title": "", "metadata": ""}
{"_id": "ff7bee45c86b16116508c344cbc97ef7", "text": "The dev can update the verified address of the crypto gamer .", "title": "", "metadata": ""}
{"_id": "35d639b4154bac10fd3dc782ce2f415d", "text": "Do not accept transactions with a sum less than the configuration limit .", "title": "", "metadata": ""}
{"_id": "1ebc4a80cd1c97fefb6449c9bd054b5a", "text": "ICO contract configuration function new_ETH_NZD is the new rate of ETH in NZD ( from which to derive tokens per ETH ) newTimestamp is the number of seconds since 1970-01 - 01 00 : 00 : 00 GMT at which the ICO must stop .", "title": "", "metadata": ""}
{"_id": "4440fe1d839812a4a1514cb7a8c8cfda", "text": "updates tub liquidation ratio .", "title": "", "metadata": ""}
{"_id": "bb5565f20fbd73248c7f4f1d9db82200", "text": "sell the artwork of the given id .", "title": "", "metadata": ""}
{"_id": "55672b2a2a77476f61fd431077e5b689", "text": "This function is overrided by the test Mocks .", "title": "", "metadata": ""}
{"_id": "1db621ffa1fe9bc8ec5506cb14b8357e", "text": "Relay a signed instruction from a party of an escrow .", "title": "", "metadata": ""}
{"_id": "6e23c951677f903ff40f1f2212b90802", "text": "Function used to reclaim ether by owner .", "title": "", "metadata": ""}
{"_id": "a066d4d815beddcaa7d8f41e9994f80b", "text": "This method will generally be called by the FCC token contract to acquire FCCs .", "title": "", "metadata": ""}
{"_id": "6691c5f7201d44de964c0bc13c6946ef", "text": "mintTokens function .", "title": "", "metadata": ""}
{"_id": "ebd15fbc2094b90baffae7a76fe05972", "text": "methods for siphoning , uploading .", "title": "", "metadata": ""}
{"_id": "d3107ad709fb97214bd7d15adbcb4740", "text": "Modifier to allow actions only when the call was sent by one of owners .", "title": "", "metadata": ""}
{"_id": "5d1f9a4b226e72902c7b11a39d788d21", "text": "called by the cause to begin their fundraiser with their secret .", "title": "", "metadata": ""}
{"_id": "e843dac5f2e016e073c713b7467553a3", "text": "Allows merchant to change it's account address .", "title": "", "metadata": ""}
{"_id": "2577af0c96771de5841a7563130f0948", "text": "util for calculating editor key .", "title": "", "metadata": ""}
{"_id": "7b2944da1c3a93753cda7e584555d60f", "text": "Overrides parent method taking into account variable rate and add bonus for large contributor .", "title": "", "metadata": ""}
{"_id": "c6cea00d6d65a6f1da5043ae7feeb16c", "text": "Check if minBalance is enough .", "title": "", "metadata": ""}
{"_id": "c9c8a879cbeaac52262fa438ea486b5b", "text": "Allows the developer or anyone with the password to shut down everything except withdrawals in emergencies .", "title": "", "metadata": ""}
{"_id": "ed960fc2321076f9de1b048df957dec4", "text": "Utility function for updating a nickname if you own the token .", "title": "", "metadata": ""}
{"_id": "6af58187cb2d273a20c7a628817c8330", "text": "passThroughTap allows minting tokens within the defined speed limit .", "title": "", "metadata": ""}
{"_id": "bb673867f254f0c1f37e3602da780166", "text": "Mints _amount tokens that are assigned to _owner within one day after deployment the tokens minted will be added to balance immediately .", "title": "", "metadata": ""}
{"_id": "4cb6f592b742b10910f5e0388faa98bc", "text": "Call to get the specified tile at a certain position of a certain board .", "title": "", "metadata": ""}
{"_id": "238f23503c4f3f227215e32fa5ee8c5e", "text": "Function for the Crowdfund to transfer tokens .", "title": "", "metadata": ""}
{"_id": "8820a62f710ba52e036851a86b4864c1", "text": "Adding hodler stake to an account .", "title": "", "metadata": ""}
{"_id": "5d5b98cffb0ff9cbf95d46fe48931a42", "text": "Sets whether or not the image data in a plot should be blocked from the EthPlot UI .", "title": "", "metadata": ""}
{"_id": "0ef417e71274272d08c6da87a6dc1623", "text": "Pay loan .", "title": "", "metadata": ""}
{"_id": "f77c25df541ebd39cb9c31e382b5a8b4", "text": "displays current contract state in human readable form .", "title": "", "metadata": ""}
{"_id": "88c528da5ae6790c096ad46a5a3a6a51", "text": "Add an airdrop admin .", "title": "", "metadata": ""}
{"_id": "c32542998cdd866c41eca87f888459a5", "text": "Source of tokens in which the crowdsale ultimately gets and sends its tokens .", "title": "", "metadata": ""}
{"_id": "800fdcd1af913d98787ca5c41b3794f0", "text": "TODO : handle single address can be whiteListed multiple time using unique signed hashes .", "title": "", "metadata": ""}
{"_id": "238874dd7865d154588a3490fb2a6fb0", "text": "Award MILs to people that will become available after lock-up period ( if funded ) .", "title": "", "metadata": ""}
{"_id": "442537080e4bae6a6160d4ea121f05b4", "text": "Returns the current rate .", "title": "", "metadata": ""}
{"_id": "5868d65d07ff038c90eb2061c4cdf838", "text": "onlyOwner Sets the address of securityGuard .", "title": "", "metadata": ""}
{"_id": "ee3abd9e551312bc38f2098df38f74cb", "text": "Finalizes crowdsale .", "title": "", "metadata": ""}
{"_id": "3d27165c6a03e611ae9021cdd3c73cbc", "text": "Here is WaraCoin's Genuine dApp functions .", "title": "", "metadata": ""}
{"_id": "daaeb5071d8d8154f6381d789d53ebb5", "text": "store purity and shine as one number to save users gas .", "title": "", "metadata": ""}
{"_id": "2ed3092834e1c34b80822ad901f444a0", "text": "To upgrade ecosystem contract .", "title": "", "metadata": ""}
{"_id": "f40741bec39bf44af1d2869edef39313", "text": "Calculates total number of tokens .", "title": "", "metadata": ""}
{"_id": "ed4176f0a30ad3c154a2aaf191696b2c", "text": "Any one of the owners , will approve the action .", "title": "", "metadata": ""}
{"_id": "3d8c57f07726aaa0f49f0e7f23926135", "text": "Grants approval to another user to sire with one of your Pandas .", "title": "", "metadata": ""}
{"_id": "550247ecf722538fe4d68866ab4cfd7c", "text": "Private function to assigns location of a player .", "title": "", "metadata": ""}
{"_id": "3a5a2aa37759f0f32f541d22891c30c4", "text": "Function to change the founders multisig address .", "title": "", "metadata": ""}
{"_id": "08719ac3b3f4c1d3626ad9156189adfa", "text": "emergency withdrawal of Dragons incase sent to this address .", "title": "", "metadata": ""}
{"_id": "0a7d2c2f4c128b09b3c9f955ce67d291", "text": "get the next cap as a function of the amount of sold token .", "title": "", "metadata": ""}
{"_id": "4f6bfbe757496c83743ee8d9bc9fc8ee", "text": "Request outstanding token balance from the target crowdsale .", "title": "", "metadata": ""}
{"_id": "4b632b5bdbe1d95e3d774bc5cd6b0b36", "text": "called by customer on EXPIRED subscription ( paidUntil period is over ) to collect a subscription deposit .", "title": "", "metadata": ""}
{"_id": "3cba702c8cc8eedec4dbf1ba17b49ce9", "text": "Create a record for held tokens .", "title": "", "metadata": ""}
{"_id": "4641ae1cdbdb5cf40ca5c6aee6dcfb59", "text": "Burns the amount of tokens by the owner .", "title": "", "metadata": ""}
{"_id": "904af7346ab83a52ac773f47883171d3", "text": "Value must be sent with Initiate and enter the _amount ( in wei ) .", "title": "", "metadata": ""}
{"_id": "c13c8185fccc32aafacdf539e11b38eb", "text": "Lockup account till the date .", "title": "", "metadata": ""}
{"_id": "96baf5d282886d1c5f86127ff86bdb20", "text": "acceptFulfillment ( ) : accept a given fulfillment .", "title": "", "metadata": ""}
{"_id": "cf7fab0cd1330015eb5821162b6240f6", "text": "check if the wallet name is not matching the expected wallet address .", "title": "", "metadata": ""}
{"_id": "120a2154cfe4555ab5a212bc9d920bc0", "text": "If the self-destruction delay has elapsed , destroy this contract and remit any ether it owns to the beneficiary address .", "title": "", "metadata": ""}
{"_id": "4714930ecd5baa2a96d08aed16483e55", "text": "Start Pre Pre ICO .", "title": "", "metadata": ""}
{"_id": "6c6cc2d42adc657e92692ba4cc92e1ac", "text": "Allows the function to be called only by the owner and backend .", "title": "", "metadata": ""}
{"_id": "11d3e2e0cb8ea13e5dc425a07ffc1fe2", "text": "Request to cancel .", "title": "", "metadata": ""}
{"_id": "795479937e2f1e49064a98c8fe901ecc", "text": "called by other contracts .", "title": "", "metadata": ""}
{"_id": "b362a3469d033e6ad47c860e5a60330b", "text": "check if address is on the whitelist .", "title": "", "metadata": ""}
{"_id": "20bb1958b5f9d9ba1101085783869e27", "text": "internal function for hashing the seed .", "title": "", "metadata": ""}
{"_id": "09f7cc9033418ea438dcccac2dfef7e9", "text": "transfer token for a specified address and forward the parameters to token recipient if any .", "title": "", "metadata": ""}
{"_id": "48acfb754029b18568ad65317f37f124", "text": "transferFrom implements ERC20 , but is forbidden .", "title": "", "metadata": ""}
{"_id": "0daf64d4f2b02e491960064c9727afc7", "text": "withdraw all SKL and XP tokens .", "title": "", "metadata": ""}
{"_id": "8259931eed61a093755289eb241ec20b", "text": "override to allow any CLevel to pause the contract .", "title": "", "metadata": ""}
{"_id": "2fbb6b51b20d7eeaf6d3e852eaff193c", "text": "Add a new DAppNode package .", "title": "", "metadata": ""}
{"_id": "5f07772f293f4d08b49db5c2513d27f5", "text": "Before the crowdsale : configuration .", "title": "", "metadata": ""}
{"_id": "6698ca69585ded625220c30d0a026324", "text": "if soft cap is not reached - participant can ask ethers back .", "title": "", "metadata": ""}
{"_id": "6f026fa2bc790e95999cebb4d9a4dbc9", "text": "Adding a stone to a specific board and position ( row col ) .", "title": "", "metadata": ""}
{"_id": "55b7a7d88b71f6f51a99e871d211dcb6", "text": "Set policy do we need to have server-side customer ids for the investments .", "title": "", "metadata": ""}
{"_id": "f7c7f4810a89e4a5db605e23adc382e2", "text": "ERC223 transferAndCall , send CC to the market maker contract can only be called by owner ( see MarketMaker ) .", "title": "", "metadata": ""}
{"_id": "91aa172c5b0228c6b637417cbca8f0de", "text": "Returns total supply of issued tokens .", "title": "", "metadata": ""}
{"_id": "17ae681d82b493c76d6263acc1b16a1c", "text": "gets number of redemptions done on a specific address .", "title": "", "metadata": ""}
{"_id": "44fc534abe1087b8a5c1568ceffd5d21", "text": "Returns total bonded stake for an active transcoder .", "title": "", "metadata": ""}
{"_id": "a44b163908aafe6be3e092bd98e36bd4", "text": "Recruit a new novice hero with no attributes ( gene 0 ) .", "title": "", "metadata": ""}
{"_id": "d7973a75b3746f17876d283180b031cd", "text": "buy tokens .", "title": "", "metadata": ""}
{"_id": "54b2a3c284f4a3c5712f85b03c80aa43", "text": "setting cap before the general sale starts .", "title": "", "metadata": ""}
{"_id": "7194a48c65dea2664ca8c422df594248", "text": "Controller-only functions .", "title": "", "metadata": ""}
{"_id": "c708ccaf2bf4188ba44537e8898433e2", "text": "override approval functions to include safe payload checking .", "title": "", "metadata": ""}
{"_id": "d252b47cc00d0d7c4c437fe54971e24a", "text": "set erc20 address for token process with check of allowance .", "title": "", "metadata": ""}
{"_id": "ef36447708b2806d112cabc86ad03f5c", "text": "Burns _amount tokens from _owner .", "title": "", "metadata": ""}
{"_id": "39d391701c8cf43eb3f7a8c793490ab1", "text": "Transfer a EtherDog owned by another address , for which the calling address has previously been granted transfer approval by the owner .", "title": "", "metadata": ""}
{"_id": "bb598df34aa7b2809b2999955f6dc5b5", "text": "Interface function , can be overwritten by the superclass .", "title": "", "metadata": ""}
{"_id": "c07a21c0b8b58ce123fd730fa22f3f5c", "text": "The latest price for pressing the button .", "title": "", "metadata": ""}
{"_id": "aaf0d9bd5f341345168c9c18b18cf0ee", "text": "Allows an owner to submit and confirm a transaction .", "title": "", "metadata": ""}
{"_id": "510215914b6f1d84f67b03ede9d55ce7", "text": "Register organisation as SSP .", "title": "", "metadata": ""}
{"_id": "053a637b63803e8930731b2f4fd1b218", "text": "internal transfer function 1 _transfer .", "title": "", "metadata": ""}
{"_id": "d900521f122fc4d578aa0f1a56b03fcb", "text": "Withdraw the given token amount from the requester balance .", "title": "", "metadata": ""}
{"_id": "99c446542e1f0b9bee7256c5ec7f8a08", "text": "Function to distribute tokens to list of addresses by the provided amount .", "title": "", "metadata": ""}
{"_id": "8063f96f4761316b9fed5c1dbc2defde", "text": "checks player profit , bet size and player number is within range .", "title": "", "metadata": ""}
{"_id": "92f910d997b6affe99d6bdcf4557ff9d", "text": "Logic for pricing of deeds .", "title": "", "metadata": ""}
{"_id": "787453c9bb88250ce008c52d934b4456", "text": "Count amount with tip .", "title": "", "metadata": ""}
{"_id": "94d0943d6546e9909217122fc3cee5a9", "text": "Allows to set the M5 token contract .", "title": "", "metadata": ""}
{"_id": "db8816513cc285ed351e90494e0c0e72", "text": "list allows a party to list an order on the orderbook .", "title": "", "metadata": ""}
{"_id": "bec5d5267fff1f88654e6859e4c15daa", "text": "Can only be called during the period when not halted .", "title": "", "metadata": ""}
{"_id": "4f7fb705e4752da07af939e7e8c8f94d", "text": "Dynamic value of Ether in reserve , according to the CRR requirement .", "title": "", "metadata": ""}
{"_id": "9b41d33f78ed005419b676958b0b90ae", "text": "Returns the address of the token .", "title": "", "metadata": ""}
{"_id": "f83126c10b2a1a4d9d87b79a07175cd0", "text": "Validates arguments for changeOwner function .", "title": "", "metadata": ""}
{"_id": "74bbf0d979646e4df30f0f712d6cbe06", "text": "Edits a document that is already present of the blockchain .", "title": "", "metadata": ""}
{"_id": "64e02e946c5058dcd79eb79400551e48", "text": "Function to get a specific authorizer .", "title": "", "metadata": ""}
{"_id": "14c11d6e18cd932e48c212f6bf718ebc", "text": "standard ERC20 compliant transferFrom method .", "title": "", "metadata": ""}
{"_id": "d532bcfada84a34408aa33c388ab16ee", "text": "Calculate the settlement price of an order .", "title": "", "metadata": ""}
{"_id": "e5d27e9a2e45645b4b4494c202f2e2ad", "text": "Get eth deposit from Deposit contract .", "title": "", "metadata": ""}
{"_id": "5b604721e7d827a4c21ae832b7542385", "text": "Approves a loan using the Identifier and not the index .", "title": "", "metadata": ""}
{"_id": "80a1b20e6430f2c3790a53d697e74f2c", "text": "line is actually 10x the line to allow for half-point spreads .", "title": "", "metadata": ""}
{"_id": "9fb89c9d3aa12223dbec3bc176461491", "text": "Close game session .", "title": "", "metadata": ""}
{"_id": "e57fc48fc8bb1fb57e53b4d75de7bcc9", "text": "Sets the token address .", "title": "", "metadata": ""}
{"_id": "26ff370265002e124c2ecc9b322a2af2", "text": "Schedules a WolframAlpha query to Oraclize to determine the winner of the competition .", "title": "", "metadata": ""}
{"_id": "f49a1f8584b83d0b6237f51c4f2ff3b2", "text": "Minimum amount of funding to consider crowdsale as successful .", "title": "", "metadata": ""}
{"_id": "43e125e65302f47ead6b097ec679650f", "text": "function for batch transfer it require : 1 .", "title": "", "metadata": ""}
{"_id": "77966fa727b3fb82c64a8baf8eba6f1c", "text": "disables withdrawals , only callable by the owner when the withdrawals are enabled .", "title": "", "metadata": ""}
{"_id": "04ea9b531e14053b222f23e079d461cd", "text": "bid on auction .", "title": "", "metadata": ""}
{"_id": "bfc3e75fd0e71ec587293e8d8063f1d3", "text": "Terminates contract when called by the owner .", "title": "", "metadata": ""}
{"_id": "46192788886f7b9f6eda8b73ef436ef2", "text": "Returns the eth balance of this wallet .", "title": "", "metadata": ""}
{"_id": "dc07fd6c43ec448939e0a05a3747e3ee", "text": "Notifies if an investor is whitelisted for contribution .", "title": "", "metadata": ""}
{"_id": "65e2ee422d4f4843d117bef2d633aede", "text": "called by the owner , resumes ICO .", "title": "", "metadata": ""}
{"_id": "b7b43ccd48f264dc4f688815f7832ebf", "text": "Returns index and ok of the first occurrence starting from index 0 .", "title": "", "metadata": ""}
{"_id": "15c2acc6b0581999e0aa9eac8476fb40", "text": "current state phase .", "title": "", "metadata": ""}
{"_id": "87d64329da5044170e3466dedaf454f0", "text": "Get the allowance of an specified address to use another address balance .", "title": "", "metadata": ""}
{"_id": "8ce7365b448709e614aa0f61a4af6e48", "text": "change BTS requirement for buying BSPT .", "title": "", "metadata": ""}
{"_id": "6f0a38a2a21f01700cf9d0e0727acf20", "text": "remove the tag for specified Module Factory .", "title": "", "metadata": ""}
{"_id": "8748acb8ec7cc258665fc5b0e3cb56c4", "text": "Contract owner able to transfer any airdropped or ERC20 tokens that are sent to the token contract address ( mistakenly or as part of airdrop campaign ) .", "title": "", "metadata": ""}
{"_id": "e7d35b6c9ac80306f5e7edb5be56faf8", "text": "Squirts gas ! ; ) .", "title": "", "metadata": ""}
{"_id": "b57c027a4b4a94049b930e3e75e2c9c2", "text": "Burn BNTTs by User .", "title": "", "metadata": ""}
{"_id": "549ef8c844add31f063fc3bd282e0c8e", "text": "Tenderly remove hand from ioucoin and place on another ioucoin .", "title": "", "metadata": ""}
{"_id": "0812239a8b8e12c017208750a09963ef", "text": "just check if can be rolled and update balance , not calculate here .", "title": "", "metadata": ""}
{"_id": "30320a18beacc8b92b9035c22422883a", "text": "Returns a list of all deed identifiers assigned to an address .", "title": "", "metadata": ""}
{"_id": "4e7390d2ccdd3834eb2fca7104b6f503", "text": "Sets the external contract address of OwnTheDay . io .", "title": "", "metadata": ""}
{"_id": "3ea82522e6259659c76530cb6e68981b", "text": "Contractors Account Management .", "title": "", "metadata": ""}
{"_id": "dc8b8b7873508e3ff4ceb0f03d18274f", "text": "uint Returns the amount of tokens to send .", "title": "", "metadata": ""}
{"_id": "35cc2713782776c6bb56e0d4cc784e39", "text": "Admin interaction : .", "title": "", "metadata": ""}
{"_id": "2fa210d20423a519d4eb0bd8e95b7b2c", "text": "Function totals up oraclize cost for the raffle , subtracts it from the prizepool ( if less than , if greater than if pauses the contract and fires an event ) .", "title": "", "metadata": ""}
{"_id": "32c60d773b08d8314c34c634d2d1ba56", "text": "Withdraw ether back deposited to the smart contract .", "title": "", "metadata": ""}
{"_id": "ee4ffa323e5402846c31378a13ca8f82", "text": "pays out the given player and removes his fishes .", "title": "", "metadata": ""}
{"_id": "87fbd0032d1551e1cd19abcf49f45ec9", "text": "mint token .", "title": "", "metadata": ""}
{"_id": "54271fe5eba3e177d137b8734b6ad878", "text": "Modifier to check the length of msg . data .", "title": "", "metadata": ""}
{"_id": "03daca4add46ea1155d710cc3be4b358", "text": "Sets a producer's status .", "title": "", "metadata": ""}
{"_id": "5cd11fe63ea637cbe8f8831e6bc34c57", "text": "Modifier avoids short address attacks .", "title": "", "metadata": ""}
{"_id": "bd4e978986d552a40d04235f005b80c2", "text": "sender balance will be decreased by _value .", "title": "", "metadata": ""}
{"_id": "9e28ec339641e45f0e7e82ec8543d69f", "text": "The function to pull back tokens from a notorious user .", "title": "", "metadata": ""}
{"_id": "af8ad5c532f40ef427a1a6eca868dc01", "text": "The bet object .", "title": "", "metadata": ""}
{"_id": "15148105e9666ba66aca8b625a7a291c", "text": "Change the address of one owner .", "title": "", "metadata": ""}
{"_id": "4833c4b3b03c4136f1ac627c4b0e0865", "text": "Withdraw an amount of available tokens in the contract .", "title": "", "metadata": ""}
{"_id": "62b61d89739b835ca47ce0e1ff046b58", "text": "transfer token for a specified address checking if they are dividends to pay .", "title": "", "metadata": ""}
{"_id": "59136ba4cc4c18ffd67fdba3487e0efe", "text": "ERC20 token is not designed to hold any tokens itself .", "title": "", "metadata": ""}
{"_id": "6d6a393c0a6214ccc77f06c6622979a6", "text": "Returns wholesale value in wei .", "title": "", "metadata": ""}
{"_id": "b1ce982cbee8de39516f777d9a777b51", "text": "Change bet expected end time .", "title": "", "metadata": ""}
{"_id": "95e1055f255423826e7be3c1b0eb47ac", "text": "Constant functions .", "title": "", "metadata": ""}
{"_id": "627cc9ce983a80610bb961abc69264e9", "text": "subscribe for a weekly recurring payment .", "title": "", "metadata": ""}
{"_id": "56ea2b89cbd14d5e9a3a72de48f88914", "text": "Add a node to the list .", "title": "", "metadata": ""}
{"_id": "5f8be9b590d54ebd09332ca86f629bd7", "text": "The largest purchase than can be done right now .", "title": "", "metadata": ""}
{"_id": "d28d0541b0a3a7020c85f12dec19bbe4", "text": "Set finalPriceForThisCoin .", "title": "", "metadata": ""}
{"_id": "a788d2002efee068df883eb83580a872", "text": "only non-whales .", "title": "", "metadata": ""}
{"_id": "d000c2654c1799758f7b3626f881beb1", "text": "batch the adminship of the contract .", "title": "", "metadata": ""}
{"_id": "5c4a9928b58bfb397a6a2cf987c29f3b", "text": "Overrides Internal transfer due to frozen accounts check .", "title": "", "metadata": ""}
{"_id": "5fe8c8cb3b0e1944b1e849ef0b988913", "text": "To allocate tokens to Project Fund - eg .", "title": "", "metadata": ""}
{"_id": "33aa9b284c578cd37b72a4d736eb8f1d", "text": "Finalizes sale when main goal is reached or if for control time the minimum goal was not reached .", "title": "", "metadata": ""}
{"_id": "0d2d004fd4e34f0e6dcce406fb717c66", "text": "Submit an answer for a question .", "title": "", "metadata": ""}
{"_id": "0107fd94a20e5a485657bc21d10bd716", "text": "setMinimum amount to participate .", "title": "", "metadata": ""}
{"_id": "098c3259871d9b3039d4e725146f6383", "text": "Creates a new Emoji with the given name .", "title": "", "metadata": ""}
{"_id": "20c23419df9ce85ce43770f6ed098bea", "text": "Method to claim tokens accidentally sent to a DNT contract .", "title": "", "metadata": ""}
{"_id": "98f13d07c4825d490af73dd699f25181", "text": "buy animals of a given type as many animals as possible are bought with msg . value .", "title": "", "metadata": ""}
{"_id": "3b7357aaa36bac19e59e0b85c3613096", "text": "Transfer the balance from tank's account to another account .", "title": "", "metadata": ""}
{"_id": "c2be401ae2275dca9bd2114ec3a7f7f7", "text": "Release tokens as per vesting schedule , called by contributor .", "title": "", "metadata": ""}
{"_id": "c42ba8a1bc1057c1be925b05d8a5116c", "text": "Authorized caller transfers tokens from one account to another .", "title": "", "metadata": ""}
{"_id": "9e9a481f6bc7e890b82b008bf41b7d8b", "text": "Burns any tokens held by this address .", "title": "", "metadata": ""}
{"_id": "bb34f3f79bf6244a3406403f168dcec7", "text": "Getters to allow the same blacklist to be used also by other contracts ( including upgraded Tether ) .", "title": "", "metadata": ""}
{"_id": "bd43aa26ddaf4ae418f45506d79cd3a3", "text": "Function to buy RED .", "title": "", "metadata": ""}
{"_id": "32119bfaa0729082d18927079b4f6969", "text": "change the Threshold .", "title": "", "metadata": ""}
{"_id": "50b6ef60ffc7980d21dcb1e0e98d6cb6", "text": "Withdraw Ether .", "title": "", "metadata": ""}
{"_id": "8b2610874752404acab4aaa87a6ca8a5", "text": "Freeze used bounty company .", "title": "", "metadata": ""}
{"_id": "1b578da73a9ffc3bcd6948426671e338", "text": "Returns stage id .", "title": "", "metadata": ""}
{"_id": "f487c083a6b1e033f0b72e0b56e463ce", "text": "Returns success boolean .", "title": "", "metadata": ""}
{"_id": "31032f24a8c9bbf5ca7df2c25d9425b4", "text": "Register organisation as Publisher .", "title": "", "metadata": ""}
{"_id": "c665516e69a0a3e932672bb9752bb01f", "text": "lock / unlock transfers .", "title": "", "metadata": ""}
{"_id": "8b0a4d65de74598f77584abe651cd868", "text": "for over / under bids , the home boolean is equivalent to the over .", "title": "", "metadata": ""}
{"_id": "1ad1ba5b6d65414de3cb533b854ef2b1", "text": "Internal function to extract and store bitcoin addresses from bytes .", "title": "", "metadata": ""}
{"_id": "01e8245f2c9d5d61de1677a06974be48", "text": "Finalizes the funding and sends the ETH to deposit address .", "title": "", "metadata": ""}
{"_id": "8a9cd6e3adcf971c19689f5e312d9d73", "text": "Checks whether a node for the given unique identifier exists within the given index .", "title": "", "metadata": ""}
{"_id": "6bd3f2974606037d89b0c733c7ba1eff", "text": "Allows admin to suspend the sale .", "title": "", "metadata": ""}
{"_id": "16fe97854b68a574b9e7e988bff8aab8", "text": "Public Constant Methods .", "title": "", "metadata": ""}
{"_id": "0bacd2c39e7c012436b6f10d2e0b5220", "text": "Check whether ICO running or not .", "title": "", "metadata": ""}
{"_id": "5ef44979066696cfc2621ddb8abeecb5", "text": "Helper function , not really needed , but good to have for the sake of posterity .", "title": "", "metadata": ""}
{"_id": "e52d8138f028951838b7861be0456bdc", "text": "Assigns a new address to act as oracle .", "title": "", "metadata": ""}
{"_id": "ca52e50c8aab329e35946e9c06258475", "text": "Maker can transfer ethers from this contract to another TokenTrader contract , with the following parameters : toTokenTrader Another TokenTrader contract owned by the same owner and with the same asset ethers is the number of ethers to be moved .", "title": "", "metadata": ""}
{"_id": "ca043fe4b243de1191092e62a8293437", "text": "function sale token to investor .", "title": "", "metadata": ""}
{"_id": "4e1d72d4acedce6cff6718579fc9561d", "text": "Team manually mints tokens in case of BTC / wire-transfer contributions .", "title": "", "metadata": ""}
{"_id": "1cc8b46ff3626067290e8e24684bdb29", "text": "Allows the owner to withdraw the token funds .", "title": "", "metadata": ""}
{"_id": "7106cadfc7beed73742644f6f50b02e6", "text": "start token conversion functions .", "title": "", "metadata": ""}
{"_id": "f4927660f2503301c9bce9d72d2eb81b", "text": "if the crowdsale started and hasn't been closed already and the maxGoal wasn't reached yet tokens are transfered to the receiver .", "title": "", "metadata": ""}
{"_id": "fb90826e1279dc83d8b6f6bdb58ce8d6", "text": "Function to remove any ethereum that gets stuck in contract ( most likely from under or over payment ) .", "title": "", "metadata": ""}
{"_id": "884177affbbb0d1b52dbd6fb7e6b5969", "text": "set finalized time so contract can be paused .", "title": "", "metadata": ""}
{"_id": "965d9422926d4822422670de4fdb04c9", "text": "how long until a Matthew wins ? .", "title": "", "metadata": ""}
{"_id": "85cc4b8611fec27ef9662be9cb2bbc36", "text": "V skrajni sili lahko razvijalec ali pa kdorkoli s posebnim geslom aktivira 'kill switch' .", "title": "", "metadata": ""}
{"_id": "7a85f966fe8cbc3220d0233f2dad8fc0", "text": "false and true as arguments for freeze .", "title": "", "metadata": ""}
{"_id": "6860be5d8dbf31fde02d0114f02ec58a", "text": "Synchronously executes multiple fillOrKill orders in a single transaction .", "title": "", "metadata": ""}
{"_id": "92ebde7c451d9c10d6e6e54a766fe927", "text": "Overloaded version of the transferFrom function .", "title": "", "metadata": ""}
{"_id": "73cb3f7e0f89940c2c8334bf809f9c7f", "text": "Set oraclize gas limit .", "title": "", "metadata": ""}
{"_id": "a4ee548aab008e75ac996c11d9d9de98", "text": "Shuts a CDP and returns the value in the form of ETH .", "title": "", "metadata": ""}
{"_id": "6c2ad09e65d05a779ea420699b87064f", "text": "Grant tokens to customers .", "title": "", "metadata": ""}
{"_id": "b4886df524aaef7f31dd267fd625f5ba", "text": "this function allows distribution by the owner before the actual public sale starts .", "title": "", "metadata": ""}
{"_id": "4dbb2309cf7c1fc2a717076ba528a18c", "text": "low level token purchase function .", "title": "", "metadata": ""}
{"_id": "4d4fd46cc66466677bc99c8e9b50e55b", "text": "Returns total number of scheduled unlocks .", "title": "", "metadata": ""}
{"_id": "c52bb7fc8f2364b591e63619e60b7429", "text": "main function .", "title": "", "metadata": ""}
{"_id": "d2da1a87626f5b733643662693bc7e50", "text": "Allows the anyone to read the current rate .", "title": "", "metadata": ""}
{"_id": "ebb208c6aa948d8340deb8b31ecfd61f", "text": "public functions 1 Transfer tokens .", "title": "", "metadata": ""}
{"_id": "c4ec126379147323e9cf1cb3e4e3ec8e", "text": "internal section allocates token source ( basically links token ) .", "title": "", "metadata": ""}
{"_id": "cd0ff733205f8b8e80685ca58d881970", "text": "fails if the current state is after than the given one .", "title": "", "metadata": ""}
{"_id": "25726a40a0079f1356664dd72b1df525", "text": "Creates a vesting contract that vests its balance of any ERC20 token to the _beneficiary , gradually in a linear fashion .", "title": "", "metadata": ""}
{"_id": "fa8bb174633b6486bc29253b1658f18f", "text": "modifier to allow only owner has full control on the function .", "title": "", "metadata": ""}
{"_id": "10f4fe8fb93364fa922310bdc0cd3ae5", "text": "PVP handler .", "title": "", "metadata": ""}
{"_id": "35971190d07e36e6055fb48fbf4e0bf4", "text": "withdrawal amount eth from contract .", "title": "", "metadata": ""}
{"_id": "65e95717d7e2e22b486e6cbbfdaa9a98", "text": "true if the hard cap is reached .", "title": "", "metadata": ""}
{"_id": "dc81f307330490c83d3c3084ce0a2c94", "text": "The way to setup pre ico stage .", "title": "", "metadata": ""}
{"_id": "3aaaffe2bf051690eaf9d24701fcb774", "text": "Transfer tokens to an address .", "title": "", "metadata": ""}
{"_id": "bddb97e557d6b0d4bb71676ec65aa637", "text": "success : The success of the call to the application's updateExec function .", "title": "", "metadata": ""}
{"_id": "8e95a6109175cd72c596535e459ce89b", "text": "Force NeuroChain Address to be associated to a standard ERC20 account .", "title": "", "metadata": ""}
{"_id": "28791856d89bf535d89c2ab938708740", "text": "Send tokens to other multi addresses in one function .", "title": "", "metadata": ""}
{"_id": "fd76c06a2c706120818ac76ed69c2397", "text": "Enable authentication .", "title": "", "metadata": ""}
{"_id": "2fd787d06805b14d06ae21358babef65", "text": "Verifies the user has enough tokens to cover the payment .", "title": "", "metadata": ""}
{"_id": "71b126fe97f4d34a521ee84ad361dfd1", "text": "returns true if the bytes located in txBytes by pos and script_len represent a P2PKH script .", "title": "", "metadata": ""}
{"_id": "14e41a394a64af00eec915013d6f1e86", "text": "Remove node n preceded by prev .", "title": "", "metadata": ""}
{"_id": "a16c57787caa74ac93fbf5af91c74f1d", "text": "broker acts in the name of 'from' address so broker needs to have permission to transfer from this way we may give permissions to brokering smart contracts while investors do not have permissions to transfer .", "title": "", "metadata": ""}
{"_id": "6f0865889650d84e993643e9cec6bf08", "text": "Given an amount in UI , this method returns the equivalent amount in mini-UI .", "title": "", "metadata": ""}
{"_id": "bd1f20e081e0ffb5b77dea1ef21ecce1", "text": "forward donations to the owner .", "title": "", "metadata": ""}
{"_id": "14b5df08365cb1670b7a48ed486353d3", "text": "moves the promise to the confirmed state and updates the locked token total .", "title": "", "metadata": ""}
{"_id": "08d7777bad134bebe6e51f13449faa44", "text": "Burns a token , reduce the current number of KTs by 1 .", "title": "", "metadata": ""}
{"_id": "392a14717cba34abf71cbb042843eaf1", "text": "Only allow permitted contracts to interact with this contract .", "title": "", "metadata": ""}
{"_id": "08ca2cf3518a2cd0329faaede88d3a24", "text": "Convert a specific amount of regular TRVL tokens from the owner , into reward tokens for a user .", "title": "", "metadata": ""}
{"_id": "43fefd300e95f95ebe19fe29a2f21b39", "text": "check that address is valid .", "title": "", "metadata": ""}
{"_id": "03c2275f3c9ac9daf29ff8b8d571fd2e", "text": "Saftey Checks for Divison Tasks .", "title": "", "metadata": ""}
{"_id": "8281bf8f17c77969a8abd0599397ec9d", "text": "Allows to change the fee value .", "title": "", "metadata": ""}
{"_id": "505b91384d40c5456474da87399fcbcc", "text": "Set the free claim allowance for an address .", "title": "", "metadata": ""}
{"_id": "fe1e666629d9b536549094020cbc600f", "text": "Sets up the initial balances .", "title": "", "metadata": ""}
{"_id": "aa5159ac0fc412ed2cc8b57e5ba4b781", "text": "If the event SaleSoldout is called this function enables earlier tokens transfer .", "title": "", "metadata": ""}
{"_id": "7371681c8e5ea3ef74e4e2e949135d70", "text": "Allocation life cycle : 1 .", "title": "", "metadata": ""}
{"_id": "228c8c109323a5cfe9db2616f9797c5d", "text": "MARK : - Modifiers .", "title": "", "metadata": ""}
{"_id": "7d212c858bf2d7b633879a33026f694b", "text": "average ico phase key price is total eth put in , during ICO phase , divided by the number of keys that were bought with that eth .", "title": "", "metadata": ""}
{"_id": "70af8939493241e3d49061bfc937db65", "text": "Wrapper function : transferProxy + transferReverseProxy address _addrs _from , _origin , _to uint256 _values _value , _feeProxy token flows _from - _origin : _value _from - sender : _feeProxy _origin - _to : _value _to - feeAccount : transferFee _from sign : ( _v 0 , _r 0 , _s 0 ) sign ( _from , _origin , _value , _feeProxy , nonces _from ) _origin sign : ( _v 1 , _r 1 , _s 1 ) sign ( _origin , _to , _value ) .", "title": "", "metadata": ""}
{"_id": "53b17989f3f068ac874ecfbec395301e", "text": "Set base price for phoenixes .", "title": "", "metadata": ""}
{"_id": "112dcb7f48ee2357d0758fdc56988a6c", "text": "Buy Token .", "title": "", "metadata": ""}
{"_id": "52b8e68dd20aa6e2ff808c93f5f03630", "text": "Function to create a new Pass project .", "title": "", "metadata": ""}
{"_id": "3dffe5d45f7339cc604f4b6dbc945ac7", "text": "Emergency refund all bets and refund owner seed amount .", "title": "", "metadata": ""}
{"_id": "39b420819c1269f7f947e188c26a0081", "text": "Presence of this function indicates the contract is a Custom Token .", "title": "", "metadata": ""}
{"_id": "de9692ca55b125ba6974fd61f3612ede", "text": "allows execution by the manager only .", "title": "", "metadata": ""}
{"_id": "ab7a493465a53c72563dfc5a2b7ff29c", "text": "Update crowd sale stage based on current time .", "title": "", "metadata": ""}
{"_id": "da4ab5f3926207759fd4a9649b97bac6", "text": "Buy tokens from the contract by sending ethers .", "title": "", "metadata": ""}
{"_id": "9190561dcdc99a9dcad6437f874e3e17", "text": "remove addresses from the whitelist .", "title": "", "metadata": ""}
{"_id": "fefd9c8f5fc2b6bb577c900607a2f17c", "text": "Burn tokens from owner account .", "title": "", "metadata": ""}
{"_id": "77324a1c0740008e28d9b5c968728dc8", "text": "Pause Crowdsale .", "title": "", "metadata": ""}
{"_id": "fb5a5419db0513aa8947227fe4cce5a7", "text": "Give out a bounty .", "title": "", "metadata": ""}
{"_id": "a89584e538bb7389abc22deddf541d80", "text": "Place a new order to the this contract .", "title": "", "metadata": ""}
{"_id": "f5783a4e33c45d736784709c52081ca7", "text": "allows contract owner to finalize the ICO , unpause tokens , set treasurer , finish minting , and transfer ownship of the token contract .", "title": "", "metadata": ""}
{"_id": "d43693f0e50a008d6901be33cff8ad1e", "text": "Drain tokens to wallet .", "title": "", "metadata": ""}
{"_id": "2e40f756e773066e5de1bb46462580e7", "text": "Checks if a given address currently has transferApproval for a particular Panda .", "title": "", "metadata": ""}
{"_id": "82d426e6610516813ab824643bdcc17d", "text": "compute for a specified stage .", "title": "", "metadata": ""}
{"_id": "0dc0bfcc502518d6dad37b1fb10e9af1", "text": "change minimum nac in one order .", "title": "", "metadata": ""}
{"_id": "d7f0b969096bc997302d903d77c0ac97", "text": "Locks tokens for sender for n days .", "title": "", "metadata": ""}
{"_id": "1d52d8a922444f576ccd7755d8784ac0", "text": "Buy DatCoin by sending Ether .", "title": "", "metadata": ""}
{"_id": "84bade1135e885d2ad269eaa913fafa6", "text": "eof tier pop .", "title": "", "metadata": ""}
{"_id": "7470107161a6500c8e5433616bcb2d09", "text": "deleteUserClaim deletes user account .", "title": "", "metadata": ""}
{"_id": "ec0ade95ef45421cd6ed16bd59460ce6", "text": "The purchaseTokens function handles the token purchase flow .", "title": "", "metadata": ""}
{"_id": "f78091d419c4f66623fbd9d27d4d1c74", "text": "Public getters .", "title": "", "metadata": ""}
{"_id": "e605229bf710233167bf157b9f277bd2", "text": "Add a community grant for tokens that are locked until a predetermined time in the future .", "title": "", "metadata": ""}
{"_id": "25d7eef5e21e54719943ec8111424ac3", "text": "a buyers allowed limits in holding ico tokens is checked .", "title": "", "metadata": ""}
{"_id": "17bf2210d83d957b92ffd127a9add829", "text": "get total remain locked tokens of an account .", "title": "", "metadata": ""}
{"_id": "befc8c239b02d3ee44b71417963d28d5", "text": "Clears record of a Contributor from a Group's record .", "title": "", "metadata": ""}
{"_id": "3b4d7dd6ffba47a6a65b52457dc947f3", "text": "buy allows a party to partially fill an order .", "title": "", "metadata": ""}
{"_id": "65df2c86f952e279f890224e9b27261e", "text": "gets _address , _value and '_time' as input and sells tokens throws if not enough tokens after calculation .", "title": "", "metadata": ""}
{"_id": "47438e75d9d8ca8570b05f6bf0633355", "text": "internals for adding and deleting entries .", "title": "", "metadata": ""}
{"_id": "50351a178bd0cf0550cac768294c227e", "text": "Will set the Sell Ratio .", "title": "", "metadata": ""}
{"_id": "78d3c53a3fbc9cbcc8eb78f9d2ad2ba7", "text": "find a winner when 5 tickets have been purchased .", "title": "", "metadata": ""}
{"_id": "909db000d33b33dc189a306bfe75ace5", "text": "Used to launch start the contract .", "title": "", "metadata": ""}
{"_id": "81cd2903b22fc847c3e89a0c1ed21342", "text": "called by ico token contract .", "title": "", "metadata": ""}
{"_id": "f25ea458f80924ba1ea238f64755231b", "text": "Access modifier for functionality that may only be called by a BurnUp game .", "title": "", "metadata": ""}
{"_id": "e8a069ff4813e9caeade0bae32c51fdf", "text": "whichPeriod returns the vesting period we are in 0 - before start or not eligible 1 - n : the timeperiod we are in .", "title": "", "metadata": ""}
{"_id": "d8261d72fb662c6d0b58a3196501c3fa", "text": "Convenience function to see if this building has room for a unit .", "title": "", "metadata": ""}
{"_id": "a2d296c57cbba64ab890f0f7ace08900", "text": "This function can be used by owner in emergency to update running status parameter .", "title": "", "metadata": ""}
{"_id": "8ab19fdd9357a57e96d998d88cd69157", "text": "For creating City .", "title": "", "metadata": ""}
{"_id": "994e2bda51e6380e979a2945222ae212", "text": "Set new Droplet token sale end date .", "title": "", "metadata": ""}
{"_id": "333eaa454950cd0b07220124ce124ba6", "text": "Assigns ownership of a specific Monster to an address .", "title": "", "metadata": ""}
{"_id": "dc800d1f693fa40ce27aa3984080aea6", "text": "Change interval update .", "title": "", "metadata": ""}
{"_id": "a3d804129dc6847c80fe404835530020", "text": "Caller bonding .", "title": "", "metadata": ""}
{"_id": "8367fef4b0067544406d530ac440de83", "text": "update crowdsale if smth incorrect .", "title": "", "metadata": ""}
{"_id": "5c2312c3427b4a51b6e7a14b466a41a7", "text": "The beneficiary can stop / enable funders from claiming more tokens .", "title": "", "metadata": ""}
{"_id": "b5e27c66279d767ba672af2ecbf5cf08", "text": "Approves tokens for selling .", "title": "", "metadata": ""}
{"_id": "5d12f89dac63517b5d5968fc43bb222c", "text": "The function disableICOSwapLock ( ) is called by the wallet contract once the token swap has reached its end conditions .", "title": "", "metadata": ""}
{"_id": "1ce32f84d0124decb17c8f6ea5c68600", "text": "initialize to prepare for sale .", "title": "", "metadata": ""}
{"_id": "5d5599c6e3a655bc7cff949158ac1147", "text": "Sets the SECP256k1 public key associated with an ENS node .", "title": "", "metadata": ""}
{"_id": "ad61ae7fc8ace1bf8e9c37796d3ec1b1", "text": "Check if controller is paused .", "title": "", "metadata": ""}
{"_id": "c0d3ab236dd9ea90c6ce42c16fe36fe7", "text": "Taken from : https : / / solidity . readthedocs . io / en / develop / common-patterns . html .", "title": "", "metadata": ""}
{"_id": "242bfe22147ec2288fae621a0d3d9b8c", "text": "Unlock the vested tokens , transferring them to their holder .", "title": "", "metadata": ""}
{"_id": "9eea844666189c95411463a0cd410946", "text": "Change variables on split end .", "title": "", "metadata": ""}
{"_id": "43558a2d704d14ab3f1098c34dff0c07", "text": "Change round contract owner .", "title": "", "metadata": ""}
{"_id": "1d8484fd15d83f088db1c7e1112a9228", "text": "Burn the amount of tokens remaining after ICO ends .", "title": "", "metadata": ""}
{"_id": "df263ab20f2418d75338307d18bc9c16", "text": "Coin Functions .", "title": "", "metadata": ""}
{"_id": "3abad427da5115320ff00ffaffb9ef29", "text": "store the part information of purchased crates .", "title": "", "metadata": ""}
{"_id": "9e692ba570a953694efd2851fe206f81", "text": "Requests to transfer control of the Blok token contract to a new owner .", "title": "", "metadata": ""}
{"_id": "e5c76c8ec58a34eda5193f086af015c9", "text": "ShowRelease ( ) looking for the already release amount of the address at some time .", "title": "", "metadata": ""}
{"_id": "a43d74f4e685d72f92a4905dea11ce4b", "text": "read the amount of DGX purchased today by a user .", "title": "", "metadata": ""}
{"_id": "219e1a0dc1d7354f12fd3d463bb113e2", "text": "Internal Operations .", "title": "", "metadata": ""}
{"_id": "88ecc3aa38924e458aeb8a51fb975ebd", "text": "Sets the reference to the JOY token contract .", "title": "", "metadata": ""}
{"_id": "32596e16976b479b8ba30328caee38f4", "text": "returns safe's values' .", "title": "", "metadata": ""}
{"_id": "afdf57cc9f1d84c4ea3a5bdcd70d93de", "text": "Finalizes early birds round .", "title": "", "metadata": ""}
{"_id": "cfff17a1c2d2f0b15c7d600d364eafd2", "text": "Set hard participation cap for all participants .", "title": "", "metadata": ""}
{"_id": "9841382f340c60792ef4f9c929ee238a", "text": "Withdraw accumulated balance for a payee .", "title": "", "metadata": ""}
{"_id": "a5c43c50bd1bfde205ef0237ef672359", "text": "Allows investors to claim refund in the case that the soft cap has not been reached and the duration of the ICO has passed .", "title": "", "metadata": ""}
{"_id": "1273f1bd82b6d980c1e4656c0964584b", "text": "owner transfer token to specific address , directly .", "title": "", "metadata": ""}
{"_id": "68d52be31daa192cc2528e93c5e03a92", "text": "NTRY Token distribution between team members .", "title": "", "metadata": ""}
{"_id": "e584100e4e7d1fea224483852a5a5942", "text": "function to check if a proposal code matches .", "title": "", "metadata": ""}
{"_id": "2a81065eb8613cf5337850e28b65128b", "text": "Get the username of a user .", "title": "", "metadata": ""}
{"_id": "b4947f2a59e0837d0656bb2b31f2cc94", "text": "For the owner .", "title": "", "metadata": ""}
{"_id": "6574c6ad22698bb64d1737d31b3ecdd7", "text": "Subtract a number from another number , checking for underflows .", "title": "", "metadata": ""}
{"_id": "9bb918aad240a2492c8f3fc70a8908db", "text": "Add : transfer ownership .", "title": "", "metadata": ""}
{"_id": "34d2960836eeef4faf5a4d6145880b93", "text": "Requires that the roll address was set .", "title": "", "metadata": ""}
{"_id": "f7e6eb9fd8ff78fa3e8990011c048345", "text": "onTransfer implements MiniMeToken Controller's onTransfer .", "title": "", "metadata": ""}
{"_id": "5179ad6ae2f10aaeb982e43fce55635a", "text": "Propose a bid for a security token issuance .", "title": "", "metadata": ""}
{"_id": "a4fbc3940cf104d8675465b690c13cc6", "text": "Sets the U . S .", "title": "", "metadata": ""}
{"_id": "0c71effa0015855cbea6cab582fba19d", "text": "Enumerate tokens assigned to an owner .", "title": "", "metadata": ""}
{"_id": "1bab3eb0d7ca3798d1908c5346a1ed00", "text": "The isOwner constructor sets the original owner of the contract to the sender account .", "title": "", "metadata": ""}
{"_id": "64349dfda554b27ea3c07da818e0e3a4", "text": "Modifier for checking refund allownes .", "title": "", "metadata": ""}
{"_id": "4cefb9dd43ccb1a67ca1f8ec65d7b6b2", "text": "set a new CS representative .", "title": "", "metadata": ""}
{"_id": "75ff03c69881f6a47451400e6ff835af", "text": "Overrides ERC20 interface to prevent interaction before finalization .", "title": "", "metadata": ""}
{"_id": "4f56e146ed305b62234db0a81d9be11f", "text": "Used to know if a loan is ready to lend .", "title": "", "metadata": ""}
{"_id": "03f7012ec6a35c0aebd019bed4d7b9d1", "text": "Disable returns of investments .", "title": "", "metadata": ""}
{"_id": "7f70a81e5cbf6e8acf1706c375d09f6a", "text": "set the icoContractAddress in the token so that the ico Contract can mint the token .", "title": "", "metadata": ""}
{"_id": "b3cfdbe9a64d756b9c743795e17e59ee", "text": "Check the main goal for 10th stage .", "title": "", "metadata": ""}
{"_id": "e39f45e7f6698e5807e0d907c3a0b673", "text": "Remove admin .", "title": "", "metadata": ""}
{"_id": "b6f12fd7e5430501aaec3cd546c373a1", "text": "Returns true if the cap was reached .", "title": "", "metadata": ""}
{"_id": "ae6ef79edc80f7ff09c2cfe61162ebf1", "text": "return interest by address , unit wei .", "title": "", "metadata": ""}
{"_id": "88821a2ac060bf907affb6d5be0e99e1", "text": "Keep track of participants contributions and the total funding amount .", "title": "", "metadata": ""}
{"_id": "e13ecf3543756c43623f45792d5a67ea", "text": "check if arbiter is locked out .", "title": "", "metadata": ""}
{"_id": "1b41f2c79a15e27bfb0938fca8edac58", "text": "shareholder profit claim .", "title": "", "metadata": ""}
{"_id": "24db484a50400173015175d2a3bea1a7", "text": "Returns true if the specified address is whitelisted .", "title": "", "metadata": ""}
{"_id": "32e0c69612b454f3a5fafd72f5913e20", "text": "Modifier to prevent contracts from interacting with the flip cards .", "title": "", "metadata": ""}
{"_id": "2cf56c615e92c55aba3470dede4d73a5", "text": "Execute the first TX in the pendingTxs queue .", "title": "", "metadata": ""}
{"_id": "09a59705a5dac3ff47678b681cd7fe72", "text": "Claim all vested tokens up to current date .", "title": "", "metadata": ""}
{"_id": "45ddf44b4e096c20d171f0c8999cdf33", "text": "Function to finish human token allocation and to finish token issue .", "title": "", "metadata": ""}
{"_id": "fa9898d621bb92fba8a3ccce387a8b0a", "text": "pass 0x0 to cancel .", "title": "", "metadata": ""}
{"_id": "4e101d8231b0f3cc82206b2716d2b316", "text": "Cancel presale contract by owner , bounty refunded to owner .", "title": "", "metadata": ""}
{"_id": "5defd96d0cc1a2f9b8aff320e9bfe79c", "text": "Check whether the identity owner has stored a proof with a source .", "title": "", "metadata": ""}
{"_id": "5e54565d903a9367ad7f893386ba66d4", "text": "Token bonus reward will be given to investor on each sale end .", "title": "", "metadata": ""}
{"_id": "caa471e8f9f882f4312c2eb4bc12bc7c", "text": "When necessary , adjust the minimum wei required in an account before an reimibusement of fee is triggerred .", "title": "", "metadata": ""}
{"_id": "bf8e6b44a837b883ebafced9fca6af5c", "text": "Called by moduleFactory owner to register new modules for SecurityToken to use .", "title": "", "metadata": ""}
{"_id": "02af4a15d0118d47d5c01cccd7f1854a", "text": "Checks if given address is an owner .", "title": "", "metadata": ""}
{"_id": "1a193d422d78f2ce097fc0f409986897", "text": "Supply that still can be bought .", "title": "", "metadata": ""}
{"_id": "44a7eadf6311c3d212e9d8b9410813a2", "text": "Rejects a proposition of a partner token split .", "title": "", "metadata": ""}
{"_id": "cfdbda16280d29e83c1b119911f692de", "text": "turn off the funding state .", "title": "", "metadata": ""}
{"_id": "f4e927435043fd4052256092e51760ec", "text": "Get the contract address .", "title": "", "metadata": ""}
{"_id": "12c7e8f0baa585943388a48a56d43229", "text": "Transfer the specified amounts of tokens to the specified addresses .", "title": "", "metadata": ""}
{"_id": "85b4db474e15467dcd30ec8bb2d7d181", "text": "Add an address to an existing id on behalf of a user to pay the gas costs .", "title": "", "metadata": ""}
{"_id": "98decb7bc06c3bb6477bb1c6dfe61bed", "text": "Transfer a Property owned by another address , for which the calling address has previously been granted transfer approval by the owner .", "title": "", "metadata": ""}
{"_id": "99d94429fac20b644ea88519e0b23b94", "text": "Convenience method for users .", "title": "", "metadata": ""}
{"_id": "d00c6e404e2ab9686095089a564ee47c", "text": "magic trade balancing algorithm .", "title": "", "metadata": ""}
{"_id": "3ab94893ce663a3e6165473aabf9ad79", "text": "the sum of the numbers .", "title": "", "metadata": ""}
{"_id": "eb4335ef0bdde8138870f7a7517a46b1", "text": "A getter to find the level of authority a specific Project has using a self-referential loop .", "title": "", "metadata": ""}
{"_id": "2a0b2a5fa5dab1d9c217545a30310e29", "text": "add new token holder .", "title": "", "metadata": ""}
{"_id": "618e017c31e1b56f68e1b05aac9a8d76", "text": "How may tokens each investor gets .", "title": "", "metadata": ""}
{"_id": "8922bab9993d7ddbaab59c949353767c", "text": "Compute the hash of a transcode receipt .", "title": "", "metadata": ""}
{"_id": "b655cfdaad07a81fdad820bf358dc57d", "text": "modify endDate .", "title": "", "metadata": ""}
{"_id": "7a683f22970ede3e081e2b9eedf635f0", "text": "Pause minting .", "title": "", "metadata": ""}
{"_id": "c499caf09fc56d3635868fa0da776358", "text": "Destroys the current contract and moves all ETH back to .", "title": "", "metadata": ""}
{"_id": "c596d2ec36a85a3f92a672b6a52dd5c0", "text": "Triggers the sale finalizations process .", "title": "", "metadata": ""}
{"_id": "dd3686cf2fa772d82984019b53a91d42", "text": "Setup project owners .", "title": "", "metadata": ""}
{"_id": "5d062fb5a78ffb172ab9a7cc34f03656", "text": "Pre-sale configuration .", "title": "", "metadata": ""}
{"_id": "8aa988ab7e2dbdc38163fb5f9c4b7f4f", "text": "Transfers ownership to new address .", "title": "", "metadata": ""}
{"_id": "bd430fccf1a637d9c1d96e0c85e600ff", "text": "Send tokens by the owner directly to an address .", "title": "", "metadata": ""}
{"_id": "728019a0e39477d8b164813eb86a9bf0", "text": "a / b .", "title": "", "metadata": ""}
{"_id": "44019614445cf090a6aef6338272fe51", "text": "Accept ETH .", "title": "", "metadata": ""}
{"_id": "c074bc0326790a79d2506ff344d959fb", "text": "filters name strings - converts uppercase to lower case .", "title": "", "metadata": ""}
{"_id": "4be48794f0445aad45b8fcadef1acb78", "text": "approveAndCallPreSigned allows a user to approve a contract and call a function on it .", "title": "", "metadata": ""}
{"_id": "639152adf6c370e05173a74b8c368ae4", "text": "change percent of royalty partners .", "title": "", "metadata": ""}
{"_id": "50da52a904d490ef616d4bdd7ec0de5f", "text": "Gets the totalSupply .", "title": "", "metadata": ""}
{"_id": "6db24ab709e3f56f2820eaa95b6be9b0", "text": "Max bet amount for a specific game .", "title": "", "metadata": ""}
{"_id": "0bee59b21b17a2d2267e83733637763a", "text": "set the minimal ETH for trades ( depends on otc ) .", "title": "", "metadata": ""}
{"_id": "0d91e0f5df1368ab87465440c654fc89", "text": "Since a contracts can not call itself , we must manually close the ICO .", "title": "", "metadata": ""}
{"_id": "cba52f7f8b5dc2a212f0d94127641519", "text": "non overflowing multiplication .", "title": "", "metadata": ""}
{"_id": "6ffe54345069a611fa2b096ca8b609cb", "text": "Allows the contract owner to add a new distribution wallet , used to hold funds safely .", "title": "", "metadata": ""}
{"_id": "c98c2e572f3e1c863e42a59e754f7750", "text": "1 , 000 winners of 150 tokens or . 00375 .", "title": "", "metadata": ""}
{"_id": "3cb8eff70fc16025ce0784a5bea90dfd", "text": "This is a private function which should be called from user-implemented external mint function .", "title": "", "metadata": ""}
{"_id": "6939584a8f4dcedf052a34e73493cc92", "text": "run the pre minting of the reserved token .", "title": "", "metadata": ""}
{"_id": "4abb7ae4177ceaab7f05c520de260862", "text": "This function is used to find the number of tokens that a given address owns .", "title": "", "metadata": ""}
{"_id": "33abd4f57e504f240e9b0c732ee1a9e2", "text": "Only owner modifier .", "title": "", "metadata": ""}
{"_id": "c399a6455ad9191cf0a6fa3d649a4ab6", "text": "THis method returns the amount of caller's reward .", "title": "", "metadata": ""}
{"_id": "20ae107c00b0c3452b3687a966ee16ce", "text": "For creating city .", "title": "", "metadata": ""}
{"_id": "562b5a19c5c822997110d2d9cc8c1d99", "text": "logs some seeds and game results for players wishing to have their game history logged by the contract clientSeeds array containing the client seeds results array containing the results v , r , s the signature of the non-sending party ( to make sure the correct results are logged ) .", "title": "", "metadata": ""}
{"_id": "686281866dc93c0c2d055a3ba44bba73", "text": "Checks if a given address currently has transferApproval for a particular monster .", "title": "", "metadata": ""}
{"_id": "5189b369fd63931473d6d37104e3d733", "text": "Creates tokens to receiver address following a formula .", "title": "", "metadata": ""}
{"_id": "58468b6243fb5aa70cc875ac815ee3a9", "text": "adds up unmasked earnings , vault earnings , sets them all to 0 .", "title": "", "metadata": ""}
{"_id": "1338c58190c7a97431b99d7ce4cc3a41", "text": "remove gift .", "title": "", "metadata": ""}
{"_id": "f4d4e42db0c963a2913a72567cf15929", "text": "safeTransfer allows a push to an address that will not revert if the address throws .", "title": "", "metadata": ""}
{"_id": "35120ada4ba27995e8d2867a038f8204", "text": "Returns the first generation that is currently active .", "title": "", "metadata": ""}
{"_id": "2fbefd2dfb79e344789230e0c95dd2d1", "text": "modifier to allow actions only when the crowdsale has ended .", "title": "", "metadata": ""}
{"_id": "1ed57a743aae67ffd49c837c032ad886", "text": "set reserve data .", "title": "", "metadata": ""}
{"_id": "b1eb22bf7ef48c688559f7b724fc5050", "text": "start voting at startBlockNr for durationHrs .", "title": "", "metadata": ""}
{"_id": "689450d245773ad3f7fd6b5ad28c1091", "text": "Same as above .", "title": "", "metadata": ""}
{"_id": "0eac1bc23cbde2e9c26dcc0aa98669b8", "text": "Returns Verifier .", "title": "", "metadata": ""}
{"_id": "197cf6e613c0c289f57bead4f1e010ee", "text": "Function to Destroy tokens .", "title": "", "metadata": ""}
{"_id": "6fb02c67f47adcf2b2e6f413441a0463", "text": "a divided by b .", "title": "", "metadata": ""}
{"_id": "5bf7e01ffad3337090176aa9d7e37b0f", "text": "Withdraw unsold tokens .", "title": "", "metadata": ""}
{"_id": "b52002e00506c36893a5c0be72b720f6", "text": "Transfer a specific kind of token to another address .", "title": "", "metadata": ""}
{"_id": "af7c64472d08e13c4e2fdfbc36fb8117", "text": "Provides an internal function for destroying tokens .", "title": "", "metadata": ""}
{"_id": "704a78e9761931bf7f70266e81770579", "text": "Delete the contract .", "title": "", "metadata": ""}
{"_id": "5c2efb22791e562f74a33242e642fffe", "text": "This is function , is needed to set address , next smart-contracts .", "title": "", "metadata": ""}
{"_id": "2e63fd256ef3abacd738bf74e5678b47", "text": "True if the approval succeeded .", "title": "", "metadata": ""}
{"_id": "14a353553b1aca2bb3a7fe794ad7514c", "text": "Deposit LRC .", "title": "", "metadata": ""}
{"_id": "7e83f302a46d70832b30168fcddd9d39", "text": "Author : pipermerriam .", "title": "", "metadata": ""}
{"_id": "0d82259acac46654693d55fa51c441db", "text": "Transfer the balance from token owner's account to to account - Owner's account must have sufficient balance to transfer - 0 value transfers are allowed - prevent sending tokens to contracts - max transaction size : 1M .", "title": "", "metadata": ""}
{"_id": "130e5a1f630718288ae531871aa9ed24", "text": "startTime should be set to the time when PoS starts ( on Dec 17 , probably block 705000 or so ) .", "title": "", "metadata": ""}
{"_id": "0f1c0f6703c2eb4d13653b8f1bb2c26c", "text": "Modifier , which only allows to set valid transfer timeouts .", "title": "", "metadata": ""}
{"_id": "971b42c9372a3bd1735813e6b1f1f9e6", "text": "Trade balances of given tokens amounts between two users .", "title": "", "metadata": ""}
{"_id": "a8154099772d6f1ffc7e3732bbd84eb2", "text": "increase hard cap if previous dont sold out .", "title": "", "metadata": ""}
{"_id": "5c20a8cab66322ce936b6ad98fbed864", "text": "keeps a list of addresses that are participating in the site .", "title": "", "metadata": ""}
{"_id": "59b91473b958a34a6f4747d76855e9ad", "text": "Only assets's admins are allowed to execute .", "title": "", "metadata": ""}
{"_id": "7bb4f7a64f6518c5dd82e5eaf20e5eac", "text": "Calculate number of tokens that will be received in one ether .", "title": "", "metadata": ""}
{"_id": "3ee03171b7f1c92c5acf7c76286649af", "text": "Check whether the _operator address is allowed to manage the tokens held by _tokenHolder address at remote database .", "title": "", "metadata": ""}
{"_id": "f8f6f898ff2743273d85a62f8e01cae4", "text": "Returns the HLPMT token amount of holder .", "title": "", "metadata": ""}
{"_id": "316d98213fb21a4c4719e3a8cdee9b47", "text": "Get BOPT amount that spender can spend from provided owner's account .", "title": "", "metadata": ""}
{"_id": "22590d65c390770bad75b06e30edd3e3", "text": "Set profit transfer time span .", "title": "", "metadata": ""}
{"_id": "5810190913efd1adbb2e29ed9f495cbd", "text": "the callback function is called by Oraclize when the result is ready the oraclize_randomDS_proofVerify modifier prevents an invalid proof to execute this function code : the proof validity is fully verified on-chain .", "title": "", "metadata": ""}
{"_id": "6dbedf6cf9d6c86fb956c590a67a794e", "text": "this method is used to GET user's nickname .", "title": "", "metadata": ""}
{"_id": "d8fa38091c5d83b63a34b18887f7a1e8", "text": "Returns the bonus value .", "title": "", "metadata": ""}
{"_id": "1e3d99f4bb446c8c3a21c1fec7c954b5", "text": "get amount of active bet tokens .", "title": "", "metadata": ""}
{"_id": "522fe6a9c5128c3cc95013b66d72d759", "text": "Payable function for buy coins from token owner .", "title": "", "metadata": ""}
{"_id": "572d7776348d975876878b5650bc8ca9", "text": "Returns the address currently assigned ownership of a given Rabbit .", "title": "", "metadata": ""}
{"_id": "81696ea218141b114194f6362ba1bdd7", "text": "Withdraw untraded tokens 100K at a time .", "title": "", "metadata": ""}
{"_id": "4d5f1b9d945259bfdc9cb44cd29f864b", "text": "Mint more tokens .", "title": "", "metadata": ""}
{"_id": "e6ca4746a613a6a6e8f626b74f51fabc", "text": "Application withdraw , only can be called by owner .", "title": "", "metadata": ""}
{"_id": "f702ed74b1b926f4d1140ada41c44345", "text": "Enable buyback .", "title": "", "metadata": ""}
{"_id": "2ce9a4ef9992e14f6f1a7c39d3c34262", "text": "Throws if called by any account other than the auditor .", "title": "", "metadata": ""}
{"_id": "c0fa0971ccec025c7d8d63cbceeb93ea", "text": "check is now preICO .", "title": "", "metadata": ""}
{"_id": "98ca5198414aa803b9cb0a2926fb4d86", "text": "Value argument must be less than unlocked balance .", "title": "", "metadata": ""}
{"_id": "1760820f6f5a243b506018e056fb7162", "text": "helper method that allows anyone to check amount that is available for withdrawl by a given address .", "title": "", "metadata": ""}
{"_id": "0d5de1460d4ad302845fc581ea6e2fa0", "text": "Compute the RedPillToken bonus according to the investment period .", "title": "", "metadata": ""}
{"_id": "caecd9e6383090a3c6ba4188991b661f", "text": "Function to perform minting to predefined beneficiaries once crowdsale has started can be called by only once and by owner only .", "title": "", "metadata": ""}
{"_id": "25061af6ee6c9f60538943587d4c4690", "text": "Give to target address ability for self token manipulation without sending .", "title": "", "metadata": ""}
{"_id": "f290a6ceb1c5bc312a2e1d148e4f54c4", "text": "check if a currencyContract is trusted .", "title": "", "metadata": ""}
{"_id": "94eede916fbe456e7805a00708c18477", "text": "Only admins can execute .", "title": "", "metadata": ""}
{"_id": "ea5eae9c6889b9b51cbe12489e2b6b5f", "text": "Decrease allowance of spender .", "title": "", "metadata": ""}
{"_id": "d11fe2a81a5936e3141d8422e8039d43", "text": "Allow updating censored status .", "title": "", "metadata": ""}
{"_id": "324cd101227de916cbad1d4292bc4805", "text": "Preferred sale configuration .", "title": "", "metadata": ""}
{"_id": "952f860e5c863d382d38e33de55f7d96", "text": "Dev : Set the total number of Tokens that can be minted .", "title": "", "metadata": ""}
{"_id": "e3d0b29e1b684059b9856bb132b4e289", "text": "Signals that the sale has reached its minimum funding goal .", "title": "", "metadata": ""}
{"_id": "88e4a79f80ae8bbbd311c56ee398e4e3", "text": "The owner of this contract can change the controller of the ATT token .", "title": "", "metadata": ""}
{"_id": "38d85c3c894628731103bce13ddf05cd", "text": "Is a specific investor in a specific round ? .", "title": "", "metadata": ""}
{"_id": "fd13b5e69caf581a84914cda01109454", "text": "Set ICO Start block .", "title": "", "metadata": ""}
{"_id": "ec49a2a143fff41e9691fb0fe064f857", "text": "true if the crowdsale has raised enough money to be a success .", "title": "", "metadata": ""}
{"_id": "e07dc983b471e36b85b8eaae558b3e5f", "text": "This will return the current state of Token Sale .", "title": "", "metadata": ""}
{"_id": "413d55eee694e7e48fb3e0e95c752808", "text": "Returns BondingManager interface .", "title": "", "metadata": ""}
{"_id": "12d649408fe22f31b304c9478d05320d", "text": "admin initiates a request that this contract's trueUSD pointer be updated to newContract .", "title": "", "metadata": ""}
{"_id": "5efa54b7efa2e87e604920dc0409707d", "text": "Public Funds Manipulation - deposit counter currency ( ETH ) .", "title": "", "metadata": ""}
{"_id": "1b35de7371ff304c1862e8392de22fd8", "text": "Gets hash of an order , like it is done in eth_signTypedData .", "title": "", "metadata": ""}
{"_id": "26ef923b7b8ac3943464710d87afe963", "text": "Function for manual token assignment ( token transfer from ICO to requested wallet ) .", "title": "", "metadata": ""}
{"_id": "9eb464e49822ba20c91dafe37765a9e8", "text": "get the total supply .", "title": "", "metadata": ""}
{"_id": "a9f58a2f155b22ef6180df43d655d6d0", "text": "Three admnistrator can replace key of fourth administrator .", "title": "", "metadata": ""}
{"_id": "8eb4517961a58d6835300adf5aa8f630", "text": "Create and fund a new escrow .", "title": "", "metadata": ""}
{"_id": "41ed6f742973163de40880136d88603f", "text": "determine the payout given dial locations based on this table hardcoded payouts data : .", "title": "", "metadata": ""}
{"_id": "d986c1466816ef55d1b2cd67bafd6b62", "text": "returns the reason for the selling of one's soul .", "title": "", "metadata": ""}
{"_id": "9153193cbabf076460edee9e9166ae5e", "text": "Withdraw corresponding amount of ETH to _addr and burn _value tokens .", "title": "", "metadata": ""}
{"_id": "c83820cb23df396cfa435a0f67d15fa7", "text": "cancels crowdsale .", "title": "", "metadata": ""}
{"_id": "95a46f0dba416aef9af7668ec29302f0", "text": "Returns true if apply was called for this listingHash .", "title": "", "metadata": ""}
{"_id": "848fecbc06228ac3bd434bb4364148d3", "text": "authorize a casino contract address to access the funds v , r , s the player's signature of the casino address , the number of times the address has already been locked and a bool stating if the signature is meant for authourization ( true ) or deauthorization ( false ) .", "title": "", "metadata": ""}
{"_id": "d390adae199bad13e0a29c7aa53851a8", "text": "Add evidence to audited code , only author , if _newLevel is different from original updates the contract's level .", "title": "", "metadata": ""}
{"_id": "cda9b9f404f4e9e764f88cd75a749797", "text": "Abilita l'acquisto di token .", "title": "", "metadata": ""}
{"_id": "c657f8f7824c808b6ad34f3ba28bcda8", "text": "transfer token for a specified address with call custom function external data .", "title": "", "metadata": ""}
{"_id": "b44b4b62247e06d87a449a3542b6c3ba", "text": "called by the ceo to pause , triggers stopped state .", "title": "", "metadata": ""}
{"_id": "483fbf679d3f6766617b6f4ca25f19a1", "text": "Retrieves the name of an index .", "title": "", "metadata": ""}
{"_id": "d94056deb914094d67b6d914e2698d81", "text": "Decrease approved amount to spend .", "title": "", "metadata": ""}
{"_id": "7821a94366c3f2958c28d227d4907771", "text": "A getter to look up a Admin's details .", "title": "", "metadata": ""}
{"_id": "e084aa1c78bcacc161946abf8770d235", "text": "To claim the vesting amount .", "title": "", "metadata": ""}
{"_id": "ad845bfa3d2aa9b88835bc4884c35e95", "text": "Change size and refill rate of bucket .", "title": "", "metadata": ""}
{"_id": "948d4df8a116727a36b4bf934c4074f7", "text": "Sets the burn address to a new value .", "title": "", "metadata": ""}
{"_id": "4f855ab9618b375d3fedc814a2d598f3", "text": "Overrides transfer function by adding check whether transfer is allwed .", "title": "", "metadata": ""}
{"_id": "98617e02283bd9091344bd8856f0c051", "text": "get claim of token by address .", "title": "", "metadata": ""}
{"_id": "5918266ded7c90b74b8a6f722295b58b", "text": "overrides Crowdsale forwardFunds to report of funds transfer and not transfer into the wallet untill the end .", "title": "", "metadata": ""}
{"_id": "a87449e941938aed4745bd977e62374f", "text": "team unfreeze .", "title": "", "metadata": ""}
{"_id": "ad6be022d502a27e590dbb8ee87894ec", "text": "Function to start this sale .", "title": "", "metadata": ""}
{"_id": "b041f9403b184772827d405e661788d7", "text": "modifier to restruct function use to the owner .", "title": "", "metadata": ""}
{"_id": "08733d51071f9efa70af7c2c19830794", "text": "Called after burnable tokens has been transferred for burning .", "title": "", "metadata": ""}
{"_id": "1b83af2f8c0928054a97091e7a794374", "text": "Allows contractOwner to kill the contract .", "title": "", "metadata": ""}
{"_id": "6d80be8f2a5990d40c142f2d51a77556", "text": "sets name , optionally plays a round if Ether was sent .", "title": "", "metadata": ""}
{"_id": "e64c1a6ba0f62df9bd87a7dcde93520e", "text": "Create new tokens .", "title": "", "metadata": ""}
{"_id": "1e5572188a35ec8f0de2cf7d9fe1189a", "text": "transform with fee of treatz token .", "title": "", "metadata": ""}
{"_id": "bd2300e09a5638b6620e8a0f74fee022", "text": "accept ether donate .", "title": "", "metadata": ""}
{"_id": "00a1f5b7c0c79af42295690938c59db4", "text": "create avatar .", "title": "", "metadata": ""}
{"_id": "0fc0d06de13d61c0b4f734a6f7ec1994", "text": "Check if address is a valid destination to transfer tokens to - must not be zero address - must not be the token address - must not be the admin's address - must not be the token offering contract address .", "title": "", "metadata": ""}
{"_id": "ab22a7e5bf21d6b62091ecb4fcefe435", "text": "allows to setup a new Storage address .", "title": "", "metadata": ""}
{"_id": "b143ef933938066052643ff023f443bb", "text": "Wire investment .", "title": "", "metadata": ""}
{"_id": "2dc2b33979e60e4ed073a70b1fb6df90", "text": "returns the amount of tokens approved by the owners that can be transferred to the spender's account .", "title": "", "metadata": ""}
{"_id": "91a8f148e3fb212a8285f917787646a8", "text": "This is where all your gas goes , sorry .", "title": "", "metadata": ""}
{"_id": "3d36c5061257e7fe5b8148c6817aca04", "text": "This function is used to increase the amount of tokens allowed to spend by spender .", "title": "", "metadata": ""}
{"_id": "7b07bc1144edaa9e98af1c6cc6a367b4", "text": "tokenId , x , y , sizeA , sizeB , price .", "title": "", "metadata": ""}
{"_id": "024586b541e9b86ffb0a3b65e4c9bd1c", "text": "Get account's freeze information .", "title": "", "metadata": ""}
{"_id": "9281bb661e08367fc04dc9a0b5a89609", "text": "Assigns ownership of a specific token to an address .", "title": "", "metadata": ""}
{"_id": "214ef3d3d19822befcf97a0d410e0a27", "text": "Token owner can approve for spender to transferFrom tokens .", "title": "", "metadata": ""}
{"_id": "8f58b3291048d26bf17c00c1a0ac71f0", "text": "Update Cooldown for a single asset .", "title": "", "metadata": ""}
{"_id": "6e7f6b11ca39988b39d211b38355a881", "text": "refundPayment used in case order cannot be processed and funds need to be returned .", "title": "", "metadata": ""}
{"_id": "bec6fa7e79f89370229a2d1bb7d0ee69", "text": "Assigns a new address to act as Robot .", "title": "", "metadata": ""}
{"_id": "0292213a18c7c79d4a26b9a3d1ada336", "text": "Function to enable transfer .", "title": "", "metadata": ""}
{"_id": "659f7bc4b20aa46a4b9d352d73b18ebf", "text": "Send 1M BOV to Madame BOV .", "title": "", "metadata": ""}
{"_id": "929d63110ad2f74f22bfa456af73f320", "text": "Only the contract owner can call these methods .", "title": "", "metadata": ""}
{"_id": "e4464f0a4610281247ab9307d1107871", "text": "Removes a minter of the token _minter : address of the minter to be removed .", "title": "", "metadata": ""}
{"_id": "d6c96e9a6b009806d37ca3d9d7b83a1c", "text": "function to withdraw FoundersTeamAndAdvisors funds to the owner wallet can only be called from owner wallet .", "title": "", "metadata": ""}
{"_id": "c32ce9f3cf25db5c84914404cbecdd5d", "text": "Only the crowdsale .", "title": "", "metadata": ""}
{"_id": "b430c800e7e0050751835cd6c2f7ab32", "text": "Only Owner functions .", "title": "", "metadata": ""}
{"_id": "36240e2dd404fa272c38202d739c3c6b", "text": "BANKROLL CONTRACT - GAME CONTRACTS functions .", "title": "", "metadata": ""}
{"_id": "efa9f110699d6dad7c141fd03daef199", "text": "Get minter allowance for an account .", "title": "", "metadata": ""}
{"_id": "d6c0c6d708503c70dd3c18b1ca1e20ff", "text": "Returns the factory address for the specified index .", "title": "", "metadata": ""}
{"_id": "cbac9eadbc14a11f05d2d7fe7346f82e", "text": "Checks whether the period in which the crowdsale is open .", "title": "", "metadata": ""}
{"_id": "165384a3fd2ce648fa2263b6830512eb", "text": "Allocate a particular amount of tokens from onwer to an account .", "title": "", "metadata": ""}
{"_id": "837e1a6d1e4b8318c5cd284fd543df4a", "text": "Throws if called by an owner .", "title": "", "metadata": ""}
{"_id": "11fba5982fc06e7e3bbbd2aadd7db3d2", "text": "Approve and call : If approve returns true , it calls receiveApproval method of contract .", "title": "", "metadata": ""}
{"_id": "dca57c3fabb1ca64655adc5fb025cbac", "text": "Get status information from the FDC .", "title": "", "metadata": ""}
{"_id": "0a546ac8f32fcf69c3205b286f9f7d0d", "text": "claimHodlRewardFor ( ) for multiple addresses .", "title": "", "metadata": ""}
{"_id": "d0103fc37f68e7a223dd046878ee3437", "text": "Any C-level can change first Step Limit .", "title": "", "metadata": ""}
{"_id": "56d192e32ae4c796c3653b0f5b126b81", "text": "approve should be called only first .", "title": "", "metadata": ""}
{"_id": "44de260e4e1c240f02495158367aba43", "text": "Unlists a domain .", "title": "", "metadata": ""}
{"_id": "04502d8782bbec3a3d9efc9154abf5f7", "text": "Owner can return eth for multiple users in one call .", "title": "", "metadata": ""}
{"_id": "ab8c5bb9bd1ef3ffa2c8d397ad50388a", "text": "Makes ERC-20 token not sellable .", "title": "", "metadata": ""}
{"_id": "7f0a66a488adcb64b272d829b2c0ad37", "text": "withdraws earnings by rndNo .", "title": "", "metadata": ""}
{"_id": "ae90ada1916cb671f45a37086fedb3c9", "text": "Allows the current owner to change CFO address .", "title": "", "metadata": ""}
{"_id": "76899b2707a43646321827ed92d4197d", "text": "Transfer tokens from one address to another , only owner can do this super-user operate .", "title": "", "metadata": ""}
{"_id": "84bdc8e53b57c4fd605e5174b0bb7389", "text": "close Crowdsale .", "title": "", "metadata": ""}
{"_id": "d356cbe31be8b9087d26139048ae3154", "text": "Implements the logic to create the storage buffer for a Token Approval .", "title": "", "metadata": ""}
{"_id": "a9a6c65dc26bc94ab4eaee0076f30b70", "text": "BTC Owner withdraw money and adds secret key to swap .", "title": "", "metadata": ""}
{"_id": "40236f196acc47915c1dc205a0d981c1", "text": "return total count promotion fees .", "title": "", "metadata": ""}
{"_id": "b9f8bccdcd3a9e52007767e1709f490b", "text": "get the balance of account .", "title": "", "metadata": ""}
{"_id": "6ecc838edc1b63be795df0932558e5d3", "text": "Allows the owner to return an purchase to a contributor .", "title": "", "metadata": ""}
{"_id": "563790cb1f2bbfe645e336aea517a422", "text": "The candidate must call this function to accept the proposal for the transfer of the rights of contract ownership .", "title": "", "metadata": ""}
{"_id": "91c7d334b71927b8d2fd394cddb13cce", "text": "Mint _value tokens to _to address .", "title": "", "metadata": ""}
{"_id": "32e7162d577ab16fc8de6322a6e770d4", "text": "Method to remove addresses from the list of burners .", "title": "", "metadata": ""}
{"_id": "a1e55763487eaa84c3221cf681c8a55a", "text": "transfer ownership of the token to the owner of the presale contract .", "title": "", "metadata": ""}
{"_id": "7be64719af7effcd1fe2da4eadf87020", "text": "Allows _spender to spend no more ( allowance ) than _approveTokensWithDecimal tokens in your behalf .", "title": "", "metadata": ""}
{"_id": "1e79fbf03f44f69354d879a1e2d617d6", "text": "Calculate the total amount of transferable tokens of a holder at a given time .", "title": "", "metadata": ""}
{"_id": "17794b62f51c3e1af6248e137e4e2fcd", "text": "return true if the transaction is suitable for buying tokens .", "title": "", "metadata": ""}
{"_id": "af566afc7b726cd8ae3cedd75fd0b46b", "text": "Distributes the ICO tokens .", "title": "", "metadata": ""}
{"_id": "0fab1fe61975d73c0ec5a02b704455b1", "text": "resets the amount already spent today .", "title": "", "metadata": ""}
{"_id": "193f592b0090c3860fb027b92575d220", "text": "burnHackingAmount ( ) Function only exists for the incineration of stolen FNK .", "title": "", "metadata": ""}
{"_id": "0d63aa8eab7dae18d311b082f6c27bb7", "text": "Get the current tranche or bail out if there is no tranche defined for the current block .", "title": "", "metadata": ""}
{"_id": "6d947ef1993ef2ef5d044d0d5c708982", "text": "string The extracted sub string .", "title": "", "metadata": ""}
{"_id": "956a762e680c857cf4f6dae4d995e83b", "text": "true if crowdsale event has started .", "title": "", "metadata": ""}
{"_id": "ea05c8feb4a31682402905ea05235537", "text": "refund early / late tokens .", "title": "", "metadata": ""}
{"_id": "eeadf2d2efc0d5173015f50238d6daa3", "text": "Add a refund policy .", "title": "", "metadata": ""}
{"_id": "3c3f66c9879969c7d5a0e5b0e3bfba99", "text": "Withdraws a bond amount from an address's bond account , sending them the corresponding amount in ether .", "title": "", "metadata": ""}
{"_id": "a56a81090756bd6e98dd41bbb57b7a18", "text": "sell token .", "title": "", "metadata": ""}
{"_id": "317c1f61189dc42c658319c03e1c0fbe", "text": "Change ETH cost of token ( goal is to keep it pegged to 0 . 10 USD ) .", "title": "", "metadata": ""}
{"_id": "e9add905613fddcc9b7ce07b5f5a418a", "text": "Calculate discounted amount of ETH for refunded tokens .", "title": "", "metadata": ""}
{"_id": "01883a81059bb7a2ccd28efedac03215", "text": "Override HolderBase . deliverTokens .", "title": "", "metadata": ""}
{"_id": "ca56048c2284a90e3b08d3c5293da2d9", "text": "owner can transfer out any accidentally sent ERC20 tokens .", "title": "", "metadata": ""}
{"_id": "ec63d738d6d79b9d9d7a13335beb90ba", "text": "Overrides basic transfer function due to comision value .", "title": "", "metadata": ""}
{"_id": "510d2b22b2ce8273ad3216f93c7b002d", "text": "Creates Bskt tokens in exchange for underlying tokens .", "title": "", "metadata": ""}
{"_id": "98ff2c1cad32062c2f5a8dc8b84f456a", "text": "the rate ( how much tokens are given for 1 ether ) is calculated according to presale / sale period and the amount of ether .", "title": "", "metadata": ""}
{"_id": "9114c334d4dac87e98b465648f1d1ef9", "text": "Contract owner withdraws ETH .", "title": "", "metadata": ""}
{"_id": "6bb64246de52c62b4077827780079011", "text": "convenience function for owner : deposit on behalf of many .", "title": "", "metadata": ""}
{"_id": "6469e7d5283a7bfc5ce81bed440ce539", "text": "Delete Betting Record .", "title": "", "metadata": ""}
{"_id": "d44fc91dd713cb882026a9bf3f13eae8", "text": "Whether or not the sale is whitelist-enabled .", "title": "", "metadata": ""}
{"_id": "91355a993150938b25baf9311208592b", "text": "Sell some tokens for Ether .", "title": "", "metadata": ""}
{"_id": "f8583207851bc7aabe8350c5e77d8805", "text": "Get tokens balance of the doge farm .", "title": "", "metadata": ""}
{"_id": "1c7daee2b07976eb72849a5d4e9dedf3", "text": "Returns max size of transcoder pool .", "title": "", "metadata": ""}
{"_id": "e098a5d63aac78bdfe94c640394d2ecb", "text": "Taker sells asset tokens for ethers by : 1 .", "title": "", "metadata": ""}
{"_id": "ff88cb5ec6674c76a50266376c94571f", "text": "Gets current contract balance .", "title": "", "metadata": ""}
{"_id": "36332fb3270311e23ce4e8e3f388d806", "text": "Returns ether and tokens to user .", "title": "", "metadata": ""}
{"_id": "8151164df7e322b093e3aaabcfa16d3d", "text": "input range : numerator : 1 , uint256_max precision denominator : 1 , uint256_max precision output range : 0 , 0x9b43d4f8d6 .", "title": "", "metadata": ""}
{"_id": "556ec6a947bcd9b39eed74e905dc926d", "text": "privileged transfer .", "title": "", "metadata": ""}
{"_id": "c06e7bf742adf553f0d00149f9f0a9c7", "text": "check whether the address is registered for token sale or not .", "title": "", "metadata": ""}
{"_id": "f2f4400e675bed65dffd58113800d4ff", "text": "Transfer Funds .", "title": "", "metadata": ""}
{"_id": "aa9df384ac159de046a2406357274340", "text": "Converts / exchanges sold Presale tokens to ICO ones according to provided exchange rate .", "title": "", "metadata": ""}
{"_id": "602d9334dd96c0507f570318d182e279", "text": "Allows other monetha account or contract to set new monetha address .", "title": "", "metadata": ""}
{"_id": "9653140c1e842f70d52bb20c22685224", "text": "Get sig requirements for minor tx spends .", "title": "", "metadata": ""}
{"_id": "ac6c585a77b0e3d702f2a38b319e21f3", "text": "Override the transfer and mint functions to respect pause state .", "title": "", "metadata": ""}
{"_id": "d0edc38338a7d7e02aa168b3acc28540", "text": "Getter for the total_supply of wrapped ether .", "title": "", "metadata": ""}
{"_id": "1fea1ac88bf0ad29785e1393049e952c", "text": "Gets remaining tokens on a contract .", "title": "", "metadata": ""}
{"_id": "9973f91b7df7244ee6a8af29fe5aeeb3", "text": "show_me_the_money ( ) This function allows you to claim your special bonus ether .", "title": "", "metadata": ""}
{"_id": "68d8d6dd45ed50c80ae1f54869800938", "text": "tokens investors are due to recieve .", "title": "", "metadata": ""}
{"_id": "214774d04abcb370b8b91b4819f240b8", "text": "Close early purchase term .", "title": "", "metadata": ""}
{"_id": "cf7ba4d53271936e4533b1fc0ddcfd28", "text": "The balance of the nomin contract itself is the fee pool .", "title": "", "metadata": ""}
{"_id": "b17a18791500790f083f735fa6eeefae", "text": "overriding FinalizableCrowdsale finalization - To store remaining MTB18 tokens .", "title": "", "metadata": ""}
{"_id": "a92f927cd15a60f7bec8bc966715caf9", "text": "Adds authorized to execute several functions to subOwner .", "title": "", "metadata": ""}
{"_id": "42e2f926ec63b8fa351899361ce5d0a0", "text": "Allows CFO to remove customer service address .", "title": "", "metadata": ""}
{"_id": "99bf88a9ab17d59fa72c575e7907e768", "text": "For creating a new meme .", "title": "", "metadata": ""}
{"_id": "b31bb97df5b91e584035f628ec2ea3e3", "text": "Removes id from array , reduces array length by one .", "title": "", "metadata": ""}
{"_id": "b7aa897d91021a03ec1c37e072e0fb94", "text": "Set the maximum investment in wei .", "title": "", "metadata": ""}
{"_id": "fa19f453279df8e3356b7f91211b223a", "text": "Make partical refund at purchasing procedure .", "title": "", "metadata": ""}
{"_id": "06ba7c5ad29457a7529aabf0979774a5", "text": "Throws if not a payee .", "title": "", "metadata": ""}
{"_id": "aa6fcd3b772ac47067245c7d662bc6c9", "text": "Releases earlybirds supply .", "title": "", "metadata": ""}
{"_id": "23807a22ca089f022508a424d1809434", "text": "Determines amount of Santa Coins to issue ( alias ) .", "title": "", "metadata": ""}
{"_id": "e483568078ce318f3aa349656f839f50", "text": "Check that price update was requested more than 1 update interval ago .", "title": "", "metadata": ""}
{"_id": "227213faf3ee426637e66535ce4af852", "text": "Checks if a given address is the current owner of a certain Cutie .", "title": "", "metadata": ""}
{"_id": "7f7fd1b99e9f589a8ec2c3f36ffe5ff4", "text": "Extend parent behavior requiring purchase to respect the user's funding cap .", "title": "", "metadata": ""}
{"_id": "79b6e574777174b75ab18b5245f9b55d", "text": "Same ERC20 behavior , but reverts if still minting .", "title": "", "metadata": ""}
{"_id": "49736f9dc2a56495069b5ca1bd724e16", "text": "Retrieves the id of the root node for this index .", "title": "", "metadata": ""}
{"_id": "c26f4132675e9c3253fb40a850f51441", "text": "Function to get the locked tokens back , in case of any issue .", "title": "", "metadata": ""}
{"_id": "e4dca5ac6fa6c8a5f8a0555f09310617", "text": "Set the Token contract address as a one-time operation .", "title": "", "metadata": ""}
{"_id": "da25fbb5d2e62ae3c6f01dd99281d8ac", "text": "Allows investors to send their ETH and automatically receive tokens in return .", "title": "", "metadata": ""}
{"_id": "6a7409a40a562229de34d79f4e549ab6", "text": "Chec list for element .", "title": "", "metadata": ""}
{"_id": "11b6b748b55077b3c83fef1160d8845e", "text": "Neither assets nor currencies have inherent worth .", "title": "", "metadata": ""}
{"_id": "143b7ee244da97656448c23bb1c6f92f", "text": "Returns the link of a node n in direction d .", "title": "", "metadata": ""}
{"_id": "30040027a9706afdbf7272e228b6dd36", "text": "Only when no further allocations are possible ( 3 ) .", "title": "", "metadata": ""}
{"_id": "c9a6429ce0f30c2cede10e04ca0bac13", "text": "seal ( ) ends the Campaign by calling seal ( ) in the CampaignToken contract .", "title": "", "metadata": ""}
{"_id": "26723fd3eb874bfba9e345be342a472c", "text": "Allows draining of tokens ( to owner ) that might accidentally be sent to this address .", "title": "", "metadata": ""}
{"_id": "5b50b8e560cfbf270850e357293694e6", "text": "Change the implementation of the SigningLogic contract by setting a new address .", "title": "", "metadata": ""}
{"_id": "67ff55e97f66b360977601f9c4b84b33", "text": "Address of the token being used by the staking interface .", "title": "", "metadata": ""}
{"_id": "c02c38f923af6fde56b2b9ed386b926a", "text": "Refunds tokens for all voters .", "title": "", "metadata": ""}
{"_id": "c7f39d48f6ac2ea5dbc3c39f1a4b4a09", "text": "read jackpots .", "title": "", "metadata": ""}
{"_id": "258d8174a2916fd52b964062f8868d57", "text": "Ensure the sale is ended .", "title": "", "metadata": ""}
{"_id": "391fc42eaab870066c25197bb1179088", "text": "increase approval to _spender .", "title": "", "metadata": ""}
{"_id": "8a8bf0604599635b7817eabd67bb6495", "text": "bonus value which depends on speciality value , if speciality 1 ( miner ) , then bonus value will be equal 4 , otherwise 1 .", "title": "", "metadata": ""}
{"_id": "e22632c398d53bd806abc61e6f4f5b2e", "text": "onlyOwnerOrOperator set system emergency pause .", "title": "", "metadata": ""}
{"_id": "75ab8c04089ebc157745c5e23394216a", "text": "Validates ICO timeframes and total cap .", "title": "", "metadata": ""}
{"_id": "83fbbb91da253fbb4da93ae008f4ab19", "text": "Mark investor's address as KYC-verified person .", "title": "", "metadata": ""}
{"_id": "cef46bb8e9c72fa91893d824192825a1", "text": "Accept foundation transfer .", "title": "", "metadata": ""}
{"_id": "6398ee2425ebdd6ac0c1a79a7a05e06c", "text": "Change verifier's address .", "title": "", "metadata": ""}
{"_id": "9fad69f02eb85a18f6f3d3c6f5dd39ca", "text": "Adds an address to the recorrdEntry list .", "title": "", "metadata": ""}
{"_id": "589850614c29d11c636305526dc7e411", "text": "Conversion to TMEX function .", "title": "", "metadata": ""}
{"_id": "20622ffcf9ffb7e4a5835df30d66a8e1", "text": "main func for token grant .", "title": "", "metadata": ""}
{"_id": "52e9347682a15a14fbe8dc32b2a77846", "text": "Perform recovery procedure .", "title": "", "metadata": ""}
{"_id": "fe4aab542eadbc9ee3fcb4ce6c8a1009", "text": "Owner methods .", "title": "", "metadata": ""}
{"_id": "904a9cae03cab164e32ec4d8beda57ac", "text": "Check if token is locked .", "title": "", "metadata": ""}
{"_id": "4a32f7b09bb1783a11945446fc2a675b", "text": "Storage location of the amount of time the crowdsale will take , accounting for all tiers .", "title": "", "metadata": ""}
{"_id": "fb2c33588b00be62690e457eff072265", "text": "Refund a particular participant , by moving the sliders of stages he participated in .", "title": "", "metadata": ""}
{"_id": "4d5ac16f6b66012219fee4fbd8cb916c", "text": "raise the supply capacity of one specific wallet addresses .", "title": "", "metadata": ""}
{"_id": "5605dad148b56956b8a93e04cf32ec47", "text": "If the goal is not reached till the end of the ICO allow refunds .", "title": "", "metadata": ""}
{"_id": "ba6401b092fd4c0d22165fadcba976ab", "text": "Per inviare i Token .", "title": "", "metadata": ""}
{"_id": "2b866ee35a22fa218ad2bc1db8942ab3", "text": "sell the character of the given id throws an exception in case of a knight not yet teleported to the game .", "title": "", "metadata": ""}
{"_id": "03dda3eeee659dfad3d6c3484169b7bf", "text": "contact actions .", "title": "", "metadata": ""}
{"_id": "4464caaa83fb7394087f065d53d85e5c", "text": "Used to enforce permissions .", "title": "", "metadata": ""}
{"_id": "4451292ab0ac0728656959495c2d6e62", "text": "Used by owner to change all fees on KittyGym .", "title": "", "metadata": ""}
{"_id": "b6e31b776490be8b8c5a1c4a9cbde930", "text": "function sellFci only controller can execute in phare running .", "title": "", "metadata": ""}
{"_id": "40f535d2a334fc005ac3ef1338300fac", "text": "Not This .", "title": "", "metadata": ""}
{"_id": "9a00f671afa55a3beedf5196d9261e45", "text": "only manufacturers can call , otherwise throw .", "title": "", "metadata": ""}
{"_id": "7c12338c8a99386f0c19493e636f2c43", "text": "Checks if a given address currently has transferApproval for a particular LinglongCat .", "title": "", "metadata": ""}
{"_id": "6e3cbbc4d59d309c850feed81cecf678", "text": "Token Cap Update .", "title": "", "metadata": ""}
{"_id": "91d347935ede29d4dfd144be33d97fdb", "text": "Add Proposal .", "title": "", "metadata": ""}
{"_id": "ee75aaad15a1cb68008137a8a8d6b04b", "text": "Get the customer's Tx of payment for MCW from customer's Tx list by index .", "title": "", "metadata": ""}
{"_id": "15772cc1f62041c89f48798f56f23a85", "text": "getContributorRemainingCap returns remaining cap for a contributor .", "title": "", "metadata": ""}
{"_id": "23ea28055f101e18fe668df133760303", "text": "transfer and lock token for a specified address .", "title": "", "metadata": ""}
{"_id": "0f9801a612212e5be2d192d3d24df068", "text": "allows an individual to buy tokens ( which will not be issued immediately ) individual instructs the tokens to be delivered to a specific account , which may be different than msg . sender .", "title": "", "metadata": ""}
{"_id": "568fb4ddd28966bbda1b9a0246486fa6", "text": "Buy an entire region .", "title": "", "metadata": ""}
{"_id": "3e026d02b35b536133ba50acaedda11a", "text": "time left before the crodsale begins .", "title": "", "metadata": ""}
{"_id": "0073462235b07a57def420193f6c5df3", "text": "set start and stop times .", "title": "", "metadata": ""}
{"_id": "ef24f6e30a04e59ce88520aa1f673565", "text": "bonuses are set in as integers ( 20 , 30 ) , initial 0 .", "title": "", "metadata": ""}
{"_id": "581b8dcadf39cf358b1f521b10f27015", "text": "Allows anyone to transfer the PAY tokens once trading has started .", "title": "", "metadata": ""}
{"_id": "182cf9bc04e727f4f7d48d57cfdbc4db", "text": "Get the index according to the checkpoint id .", "title": "", "metadata": ""}
{"_id": "7db301101f1973331584f246a98c30d0", "text": "read the purchase details at an index from all purchases .", "title": "", "metadata": ""}
{"_id": "4f9cb45d68314dbc4d7473a26d1d5aa4", "text": "removes stage from sale .", "title": "", "metadata": ""}
{"_id": "eed6913451b6851eb74effeca3736d18", "text": "The dev can use this function to create new planets .", "title": "", "metadata": ""}
{"_id": "ae7dd4c7a3e396bb0b00660c5dcc9bed", "text": "Compute item hash from the public key .", "title": "", "metadata": ""}
{"_id": "1a81620ed8a433757c4d0357c6c579f7", "text": "_value tokens will be sended to _to .", "title": "", "metadata": ""}
{"_id": "ed3ea9a54648a095286f80d2de1bdce3", "text": "destroy tokens that belong to the fund you control this decreases that account's balance , fund balance , total supply .", "title": "", "metadata": ""}
{"_id": "120ca8f58aff029ac7c062373e3feecd", "text": "Returns the number ofd Pixels owned by a specific address .", "title": "", "metadata": ""}
{"_id": "c1df708b31850474f9ab6a45edc79f14", "text": "Have this taken away from the parent contract ? .", "title": "", "metadata": ""}
{"_id": "8bdf83eee9a23d1a586a50b22e502483", "text": "Deposit an amount of ether .", "title": "", "metadata": ""}
{"_id": "4ee8b2a8839bef007678900d12cdc785", "text": "Remove tokens from the system irreversibly .", "title": "", "metadata": ""}
{"_id": "d8f36993e3510084944761c2944513b3", "text": "change single ownership .", "title": "", "metadata": ""}
{"_id": "d33933d74bb91d6097b9ab05497352a5", "text": "level for the account .", "title": "", "metadata": ""}
{"_id": "f819f866702a53e80fc5a258af838a71", "text": "Translate Stakes to wei .", "title": "", "metadata": ""}
{"_id": "aa92f810223cc3ac1ecd19c36e084914", "text": "Get index of an owner .", "title": "", "metadata": ""}
{"_id": "64b539a98947e794d9b4e78cce53e062", "text": "pause registration function .", "title": "", "metadata": ""}
{"_id": "78e0c7cf3d756592a1eedb721e391678", "text": "Change the bonus percentage .", "title": "", "metadata": ""}
{"_id": "4c85851356c542f841ebaee51e0f2510", "text": "Change owner of token after end of PreSale if Soft Cap has not raised .", "title": "", "metadata": ""}
{"_id": "ca58d54a1bbe782d57f25c064dd39210", "text": "if this contract gets a balance in some other ERC20 contract - or even iself - then we can rescue it .", "title": "", "metadata": ""}
{"_id": "f229c62eb6b830cf96963d4ab6691871", "text": "Buys tokens for the contract and rewards the caller .", "title": "", "metadata": ""}
{"_id": "048626de5bef8661b4918847c7fe2b3e", "text": "future games can be added so they can't earn divs on their token balances .", "title": "", "metadata": ""}
{"_id": "d115ce3eb5c624b557f259989c0824a3", "text": "It will deposit tokens into the locker for given beneficiary .", "title": "", "metadata": ""}
{"_id": "99de17ec553a2505f39ae72b2d982511", "text": "The investor should call this function to return ETH if crowdsale will be failed .", "title": "", "metadata": ""}
{"_id": "b80b51b6c0f173b50bd9133218bfc19d", "text": "public get .", "title": "", "metadata": ""}
{"_id": "04af7a0fc3e35cffc560250251eff242", "text": "WithDraw all the ether only owner can withdraw .", "title": "", "metadata": ""}
{"_id": "d21a2d7eba0de14ff4492ff34b123ce9", "text": "Decline transaction .", "title": "", "metadata": ""}
{"_id": "eff27d39ad43add301eae3e6e8b0d1de", "text": "Show how many participants was .", "title": "", "metadata": ""}
{"_id": "6fbde0e79b7b577a5ec17be7df8e51ec", "text": "Check the latest limit .", "title": "", "metadata": ""}
{"_id": "52afdace12d95bb236ceff63c8f7debe", "text": "Checks to see if two monsters can breed together , including checks for ownership and siring approvals .", "title": "", "metadata": ""}
{"_id": "dc4576cd70c31491017845a3a4464fec", "text": "Updates internal balance Structures when the sender adds tokens to the channel .", "title": "", "metadata": ""}
{"_id": "479dba0d41bfccf7541ce379a96b7988", "text": "If you mark a function nonReentrant , you should also mark it external .", "title": "", "metadata": ""}
{"_id": "fdb3119114a7858bef74ac6940dfdf84", "text": "Allows the _NEW_ candidate to complete transfer control of the contract to him .", "title": "", "metadata": ""}
{"_id": "dfb0e2f3a9ecaa1947fb0b73f9f3e132", "text": "deleting entries .", "title": "", "metadata": ""}
{"_id": "968be7b392626fe12c804ff61a1706d3", "text": "Function to access name of token .", "title": "", "metadata": ""}
{"_id": "0b142d7759dc19e558623e4b28e3c0e2", "text": "Create base skin for sell .", "title": "", "metadata": ""}
{"_id": "d5e9e28afbdf98d532a4f55aed333648", "text": "sets the prices of the character types .", "title": "", "metadata": ""}
{"_id": "c92f2ef84721a9bfcdd80c747a977437", "text": "transfer the balance from sender's account to another one .", "title": "", "metadata": ""}
{"_id": "4749fec16468c8e3a90f5c7a07b9bbf1", "text": "buys as many characters as possible with the transfered value of the given type .", "title": "", "metadata": ""}
{"_id": "6b14ce2f671e81b0dc46ca6c21fd9554", "text": "put item into mapping .", "title": "", "metadata": ""}
{"_id": "918ed590d6c93461aca5ace6f13e5d94", "text": "Allows owner to record a purchase made outside of Ethereum blockchain .", "title": "", "metadata": ""}
{"_id": "0e12a2451e6b70effe12439db8bc54d1", "text": "General Properties .", "title": "", "metadata": ""}
{"_id": "278fec37ca14e4a1dd77a1bb5a482b33", "text": "activates end of crowdsale state .", "title": "", "metadata": ""}
{"_id": "2353f171b00a7c8f8736ccef66e15473", "text": "Gets amount of token of specific investor .", "title": "", "metadata": ""}
{"_id": "2ec8708d8659439db34bfcfa008b9954", "text": "Prolong ICO if owner decides to do it .", "title": "", "metadata": ""}
{"_id": "324feb9eb604fc5a96b6388bdc633292", "text": "Create a collectible .", "title": "", "metadata": ""}
{"_id": "12b2688c6b1c15cbf5b1a3ad17df9c64", "text": "Get array with owner addresses that confirmed the transaction .", "title": "", "metadata": ""}
{"_id": "2d89ebc071390194eeaac7ed75710fda", "text": "Allow founder to start the Crowdsale phase1 .", "title": "", "metadata": ""}
{"_id": "6bdcc59ebec6f071d69667ff2c1ea730", "text": "Get functions function provide the token .", "title": "", "metadata": ""}
{"_id": "981eb9ea3b59f2edaa90f3758bfa66f2", "text": "Checks if the list is full .", "title": "", "metadata": ""}
{"_id": "874eaa3d6fae56b086ec9d4973b5ae65", "text": "https : / / github . com / BitGuildPlatform / Documentation / blob / master / README . md 2-required - game-smart - contract-changes https : / / github . com / BitGuildPlatform / Documentation / blob / master / README . md 2-required - game-smart - contract-changes .", "title": "", "metadata": ""}
{"_id": "15b3ffcd8e554d1ff7241c72c6ad9270", "text": "enable token burn .", "title": "", "metadata": ""}
{"_id": "1cd5ba728eb5d66ba980e6306d1a244d", "text": "pauses ICO .", "title": "", "metadata": ""}
{"_id": "c925fa5bb314cc5eb193599418cebd9f", "text": "Internal function that transfers the ether sent with a payment back to the sender .", "title": "", "metadata": ""}
{"_id": "8ac6e024b742e0eaf777bacca4f818c7", "text": "Reduce digital artwork tokens for changing physical artwork .", "title": "", "metadata": ""}
{"_id": "c95998330939c1043b053751af599f7e", "text": "Get the balance of an _who address .", "title": "", "metadata": ""}
{"_id": "a2f7589fe96a8c7ad31d227ba6af36a6", "text": "If ICO is unsuccessful , investors can claim refunds here .", "title": "", "metadata": ""}
{"_id": "14cb6efea982b2c37837e41f76dba0cc", "text": "checks if there are expired gambles .", "title": "", "metadata": ""}
{"_id": "e3059100a8d64d8655f49082e5e7527d", "text": "True if the contract is self-destructible .", "title": "", "metadata": ""}
{"_id": "8b048ad73b12cdd2ff5d3e9c1e637b34", "text": "Creates a new color with the given name , with given _price and assignes it to an address .", "title": "", "metadata": ""}
{"_id": "27329c9fc91046cab77328d75058c76b", "text": "onlyDuringICO : FavorCoins can only be bought via contract during ICO .", "title": "", "metadata": ""}
{"_id": "514153301ca8ca6116fd362f12ba587d", "text": "This function is used to transfer ether to particular address .", "title": "", "metadata": ""}
{"_id": "40e42b7f19460ca91f12e637026a95b7", "text": "Same functionality as transfer .", "title": "", "metadata": ""}
{"_id": "8fb10e879f88d19b0910b07064e93665", "text": "Set max gas to refund when an address send ETH to buy tokens .", "title": "", "metadata": ""}
{"_id": "c5edff93d008041eba79ff665a94e8db", "text": "Substracts two numbers , throws on overflow ( i . e .", "title": "", "metadata": ""}
{"_id": "35a5939974ec04c9bc3d23fde6d9edb0", "text": "Allows the owner to shorten the deadline of the current ICO phase .", "title": "", "metadata": ""}
{"_id": "f8517646f0394967968898df03d7e95e", "text": "Let the owner set the marketplace address once minting is over .", "title": "", "metadata": ""}
{"_id": "b22ec15521ef54bb8c14a1d6defb9cb4", "text": "defines a new connector for the token can only be called by the owner while the converter is inactive .", "title": "", "metadata": ""}
{"_id": "778322a90faa4e349a5ef88006c6bcaf", "text": "Kill contract and return all founds to the target user .", "title": "", "metadata": ""}
{"_id": "e5132482babb597bfde5ce7ebe2e0069", "text": "same as offer cancel .", "title": "", "metadata": ""}
{"_id": "0c9a010140c574ee8eb53005d454c6ed", "text": "Finalize the round before returning it back to the the parent contract for historical purposes .", "title": "", "metadata": ""}
{"_id": "3ca35ec7cd3f95f886f34159cc862669", "text": "Throws if called by any address other than the sender .", "title": "", "metadata": ""}
{"_id": "529803d5698be56a575e9439aaabc709", "text": "get amount of items in mapping .", "title": "", "metadata": ""}
{"_id": "31d5c3070fe73b6f1b81cfa8ef03c050", "text": "Returns the current Sale .", "title": "", "metadata": ""}
{"_id": "486397f7f841e1bac80cf31574b66bbe", "text": "Actually do a transfer , does NO precondition checking .", "title": "", "metadata": ""}
{"_id": "28fdd185aba32e0a00a3d4e2a800bc1b", "text": "Unfortunately this function had too many local variables , so a bunch of unruly code had to be used to eliminate some variables .", "title": "", "metadata": ""}
{"_id": "6ebdff3a653dd560d17bea314aa01c38", "text": "get name of specified token , .", "title": "", "metadata": ""}
{"_id": "52b66b05b6e9af1f48056bc76b636637", "text": "check if transferFrom is possible .", "title": "", "metadata": ""}
{"_id": "f2621a2849d9284af9c23fb5872cbc6e", "text": "Get the time when the hero become available .", "title": "", "metadata": ""}
{"_id": "0a50a20b6267e1937a6e756a10b309d8", "text": "Get if _acct is an authorized module .", "title": "", "metadata": ""}
{"_id": "2a036ef1e16ae471c26dff69ea974ed3", "text": "Get token metadata URI .", "title": "", "metadata": ""}
{"_id": "bc880483fb690247231a3d779beef81f", "text": "Revoke approval of a borrower .", "title": "", "metadata": ""}
{"_id": "1f04b1fcff99e93b1f00386eac61c83f", "text": "Function to determine the next version value of a manifest .", "title": "", "metadata": ""}
{"_id": "4ac0d140ac6d409a84de7a79a49f0bdd", "text": "Calculate locked token reward percentage Actual value : rewardFactor / 1000 .", "title": "", "metadata": ""}
{"_id": "fb4ea21e31281f91620811810e9e42ab", "text": "Compute the remaining time for which the hero can perform a challenge again .", "title": "", "metadata": ""}
{"_id": "de37d077847ded32b09060bc368066d6", "text": "Persists proof of the game state and final board eternally .", "title": "", "metadata": ""}
{"_id": "883e1a86f0009d5c9ae8d8aa3faf42cf", "text": "Transfers tokens held by the timelock to the specified address .", "title": "", "metadata": ""}
{"_id": "321e9838fb92d6bd485d58ecc12b886c", "text": "Get gamelock parameters : CRB amount locked , CRB lock duration .", "title": "", "metadata": ""}
{"_id": "e07dfc978f3b7bdfa324b7b2a9fc87ad", "text": "For the trustee to commit an amount from the fund balance as a dividend .", "title": "", "metadata": ""}
{"_id": "298b7a14f2c29a2f8fdda25fe869f297", "text": "Refleja cantidad de moendas restantes en concesion .", "title": "", "metadata": ""}
{"_id": "04bda6df1a293ccb303975c561ca0eb4", "text": "function to add a member that could remove animals from egg phase can only be called from owner wallet .", "title": "", "metadata": ""}
{"_id": "c65c968b7cfaae812d40c19a99afccb4", "text": "Allow the owner to update the unlockDate to allow trading sooner , but not later than the original unlockDate .", "title": "", "metadata": ""}
{"_id": "99642ddc54cc3a445e1531c5cba67c5c", "text": "Set the next price .", "title": "", "metadata": ""}
{"_id": "8b6b3eae6ad56c70d4ef8c69b5becdf0", "text": "Set wbtToken exchange rate .", "title": "", "metadata": ""}
{"_id": "67f73aabb33a13ff59c293ec2bc5d16c", "text": "Indicates whether a given user name has been claimed .", "title": "", "metadata": ""}
{"_id": "c9e8e37d2a30bb88e129912454a28c9d", "text": "Allow pre-approved user to take ownership of a dividend card .", "title": "", "metadata": ""}
{"_id": "b2a872a0b0a2c01d8ece5aa41eb6e02c", "text": "Disable transfer of the blob to the current user .", "title": "", "metadata": ""}
{"_id": "bfe24a5d362fe8ba18a3c27a6642b9ab", "text": "Function to do set or adjust the startTime - NOT MANDATORY but good for future start .", "title": "", "metadata": ""}
{"_id": "e6f9d6c87dd5bc22df47d9d6e960a67a", "text": "This method is useful when we really need to know last transaction ts .", "title": "", "metadata": ""}
{"_id": "f05e4cd4345350ec6bcb15fcaa4ce77a", "text": "Gets the approved address to take ownership of a given unicorn ID .", "title": "", "metadata": ""}
{"_id": "3d1f0442d4658206d7d2ee4636bbdce8", "text": "make sure this function name matches the contract name above .", "title": "", "metadata": ""}
{"_id": "cf643649b55c89c48fa15eaa078cb74a", "text": "update ban threshold .", "title": "", "metadata": ""}
{"_id": "49dc3dbe7a45a30a60f4eab520fca547", "text": "This method is allowed to transfer tokens to _to account .", "title": "", "metadata": ""}
{"_id": "b24fcb2b29ffca32bc1a95dcab4f418c", "text": "Token distribution to Team .", "title": "", "metadata": ""}
{"_id": "b52d0b1a70eb1dfd0552e3e3e8b8849e", "text": "add an address to the whitelist , sender must have enough tokens .", "title": "", "metadata": ""}
{"_id": "73450618e187a1f7e11ceaaf1763f166", "text": "Return the number of owners an address has .", "title": "", "metadata": ""}
{"_id": "5efadc82bef204ab200c2304000bf61b", "text": "Are we reached tokens limit ? .", "title": "", "metadata": ""}
{"_id": "e21e1470c5ed8ffd637516e1f713cd17", "text": "get address of finance team .", "title": "", "metadata": ""}
{"_id": "17928d0602a7a0f2816ca0acbfa9cdf4", "text": "uint : The number of instances deployed by the deployer .", "title": "", "metadata": ""}
{"_id": "c1867e69731fe33fcfc6de17ad654b99", "text": "Transfer the specified amounts of tokens to the specified addresses from authorized balance of sender .", "title": "", "metadata": ""}
{"_id": "4ca2154824b1252416c5fe47c3da9d84", "text": "Allow to transfer token from an address to other address .", "title": "", "metadata": ""}
{"_id": "82dddfabd70179abc6e5765ee10a226a", "text": "The owner can clawback any unspent Parsec credits after a date in the future , so no Parsec credits remain trapped in this contract .", "title": "", "metadata": ""}
{"_id": "193f845dc2b08a7515f29040a0c79a62", "text": "Complete pending transfer , can only be called by msg . sender .", "title": "", "metadata": ""}
{"_id": "f9bb62f78f8cce1a9a3f2fdc918af85c", "text": "Resume the contract .", "title": "", "metadata": ""}
{"_id": "88b42e2f4628d60496fe625c8cd8da1d", "text": "Fetches the Ethereum address of a valid affiliate .", "title": "", "metadata": ""}
{"_id": "ab86ef897d354eb762370129251899b8", "text": "Transfers _amount from _from to _to with additional data .", "title": "", "metadata": ""}
{"_id": "05bd17924e16a554ba3ea99524a1d27f", "text": "If we are currently in the right branch of the blockchain , send money to the given recipient .", "title": "", "metadata": ""}
{"_id": "26bad86836df626a44f43654bcfc21cd", "text": "Token Management .", "title": "", "metadata": ""}
{"_id": "d693d74dbb6fc521ba917186684b845a", "text": "Delete a poll .", "title": "", "metadata": ""}
{"_id": "c23c630b4b7493a5d5d77731678b22f0", "text": "Sending bets and withdrawing winnings .", "title": "", "metadata": ""}
{"_id": "1fcacc11659fe2ddae076e3e9d064294", "text": "allow investors to be refunded if the sale does not reach min investment target ( minFundingGoal ) refund can be asked only after sale period .", "title": "", "metadata": ""}
{"_id": "b4f413d837d67f97360125b244b70b5c", "text": "To prevent cheating , when a withdrawal is made , the tokens for that address become immediately locked until the next period .", "title": "", "metadata": ""}
{"_id": "99823b704be33933e7a746d2facf7bc3", "text": "Disables the contract .", "title": "", "metadata": ""}
{"_id": "a4419c447559b28f82281f21ddae4d6b", "text": "Function to stamp a token in the msg . sender's .", "title": "", "metadata": ""}
{"_id": "850f7c06b755341682e1842095a279ca", "text": "send ether to winners . ( 5 .", "title": "", "metadata": ""}
{"_id": "bbebaf2ae2b331a71ad0c924517520f4", "text": "The amount in DRP .", "title": "", "metadata": ""}
{"_id": "9810180bba6324516055fbeebdd6e29e", "text": "Internal function to create a buy order .", "title": "", "metadata": ""}
{"_id": "9eb36562efa83bca6e424c170a3f27b3", "text": "Send tip for user .", "title": "", "metadata": ""}
{"_id": "8a34c49d781bfcd103bd09dd553823a2", "text": "shifts a bytes32 right by n positions .", "title": "", "metadata": ""}
{"_id": "7a63f40c43882b578af3763e2b5d0611", "text": "Open a new crowd sale .", "title": "", "metadata": ""}
{"_id": "c251ce9361fb394d8a13dde4b2d8165b", "text": "Security review .", "title": "", "metadata": ""}
{"_id": "c07518f0df54158e926b4ac7076fc917", "text": "createIssuance create local currency issuance sale .", "title": "", "metadata": ""}
{"_id": "a305d8347aa37a112db7b7a6d02a9539", "text": "Checks the balance of a certain address .", "title": "", "metadata": ""}
{"_id": "6fa796ecdaa05d4f79ca988041ee0d6d", "text": "Return the _reward and _index of the first startable MonarchyGame .", "title": "", "metadata": ""}
{"_id": "e404b78571ee056b379a14fd3dc6efdf", "text": "clear KYC onchain .", "title": "", "metadata": ""}
{"_id": "a8a9f2a4ed32cb2d9a66dad69a18731a", "text": "for info .", "title": "", "metadata": ""}
{"_id": "ce25586537343896c2ecb03ae4db7c36", "text": "Send tokens which will be frozen for specified time .", "title": "", "metadata": ""}
{"_id": "e6fae80a4f8625c44a99865e2b802fd6", "text": "function to delete a member from the list that could remove an animal from egg phase can only be called from owner wallet .", "title": "", "metadata": ""}
{"_id": "4a9091910610e84770cdf3ae57d6f0bc", "text": "Transfer tokens on behalf of _from .", "title": "", "metadata": ""}
{"_id": "ae47f2e7d97bbde8616f6564a3dd063c", "text": "Approves allowance for token holder .", "title": "", "metadata": ""}
{"_id": "8de5cbb364926ba3a093b9da417a2395", "text": "Bigger value of two uint32s .", "title": "", "metadata": ""}
{"_id": "cdff0ac286c87202619730865bfabec2", "text": "Allows a user to add credits to their account .", "title": "", "metadata": ""}
{"_id": "774c2a70d81bf23fa63edaee749e7cab", "text": "modifier that allows only congress members to vote and create new proposals .", "title": "", "metadata": ""}
{"_id": "481eff37972f862751b0e2a09bde8439", "text": "Interface to ensure the contract is correctly configured .", "title": "", "metadata": ""}
{"_id": "900116961412459882491ee8521008c9", "text": "Gets the amount of tokens for pre-ICO investor .", "title": "", "metadata": ""}
{"_id": "1525c12d96c10864e7404b6795a368bb", "text": "Sell P3D tokens , withdraw dividends , and send balance to owner .", "title": "", "metadata": ""}
{"_id": "d583b27c028b85463626aae279fc6278", "text": "authentication Function .", "title": "", "metadata": ""}
{"_id": "330f89b2885c62ad701693f9c5c386a1", "text": "calc geometric growth taken from https : / / ethereum . stackexchange . com / questions / 35819 / how-do - you-calculate - compound-interest - in-solidity / 38078 38078 .", "title": "", "metadata": ""}
{"_id": "711293c84d2565b3a01f361ece8ed608", "text": "determines the outcome of a game and returns the win .", "title": "", "metadata": ""}
{"_id": "3b2f0ccfd6651f2ccb767f018bd9a0c6", "text": "Function for adding discount .", "title": "", "metadata": ""}
{"_id": "47f83a36c513570caae372fbd70ef788", "text": "Returns time remaining on crowdsale .", "title": "", "metadata": ""}
{"_id": "c114433d4c6ccd48e7a5f0fbb275b724", "text": "Funds menagement .", "title": "", "metadata": ""}
{"_id": "dfa4400cbff5185c73923245e5f3aad3", "text": "get time period for the given '_lockTypeIndex' .", "title": "", "metadata": ""}
{"_id": "e01bf575c7081e74f6004dd10bdb941b", "text": "To get stamp information .", "title": "", "metadata": ""}
{"_id": "17b21aebe99f56a52605aaa040ec8699", "text": "The current end time of the sale assuming that nobody else buys in .", "title": "", "metadata": ""}
{"_id": "a9ca9b00793b6429f446c5b4f61cc692", "text": "This is the actual transfer function in the token contract , it can only be called by other functions in this contract .", "title": "", "metadata": ""}
{"_id": "1f5295558924089cfa9c407e3154c7f8", "text": "in weis .", "title": "", "metadata": ""}
{"_id": "0f0cdb4b3d4432afc2d022255a585bfb", "text": "Perform a trade .", "title": "", "metadata": ""}
{"_id": "d1669d953fdc5caf76e68ed8cfa58c13", "text": "UnFress token from one address .", "title": "", "metadata": ""}
{"_id": "483ffbab240ca49e6ce88d232bcb7b3d", "text": "Allows the supervisor to stop the creation of new avatars .", "title": "", "metadata": ""}
{"_id": "2978b1b7e658a82bbb0c471e25917bdd", "text": "This allows me to collect the revenue paid into the contract .", "title": "", "metadata": ""}
{"_id": "84ea23e8cc7610c389d49493e029e86c", "text": "Checks if provided JSON string has valid Chainy format .", "title": "", "metadata": ""}
{"_id": "6ef894f02437fb4885e4e62aedc889f1", "text": "Parameters like status can only be changed by the contract owner .", "title": "", "metadata": ""}
{"_id": "49e3d285978d14cf3a492d462a700f2c", "text": "Exploration Time : The time it takes to explore a Sector is dependent on the Sector Volume along with the Ship s Range and Speed .", "title": "", "metadata": ""}
{"_id": "f72185c16aff39893196e221e6931f71", "text": "Allows to retrieve claims from other contracts as well as other off-chain interfaces .", "title": "", "metadata": ""}
{"_id": "e12d4f75a7186a9a9d1d1f05d249034c", "text": "Modified allowing execution only if the crowdsale is currently running .", "title": "", "metadata": ""}
{"_id": "aac3c3b9da3d06d812faafda9f19b0c8", "text": "setter min max params for investition .", "title": "", "metadata": ""}
{"_id": "4c1c5ab79eadcc6caf4478e53f5c4b93", "text": "change owner addr to crowdsale contract to enable minting if successful the crowdsale contract will reset owner to TOKEN_OWNER .", "title": "", "metadata": ""}
{"_id": "335179593120c997339c8a93f4cb959e", "text": "Return the current unlock-phase .", "title": "", "metadata": ""}
{"_id": "1d12ab8748ab3910200fd8aae8f09e31", "text": "Complete moderatorship transfer .", "title": "", "metadata": ""}
{"_id": "a3c96a306e1bcbae53f399378fe61d2e", "text": "Address of certification contract .", "title": "", "metadata": ""}
{"_id": "5a498bee4117a0b52aacb14876c934c6", "text": "_performWithdraw performs a withdrawal from address _from and transfers it to _to .", "title": "", "metadata": ""}
{"_id": "e81328f174545163f4d904e5d1cab853", "text": "add or replace contract address by id .", "title": "", "metadata": ""}
{"_id": "2a7ca9918c50b734213c8c372d271360", "text": "Checks if an address is operator .", "title": "", "metadata": ""}
{"_id": "4c4120031476ff38e694f41f188bd337", "text": "fund register / dissolve register fund status for an address , address must be empty for that .", "title": "", "metadata": ""}
{"_id": "7db4282f0c81da50ec8791401909523b", "text": "calculate interest rate .", "title": "", "metadata": ""}
{"_id": "8262467f9592254f12023778ea2f8728", "text": "Check if given mom and dad are a valid mating pair .", "title": "", "metadata": ""}
{"_id": "e1bf8cf13a09145b9f728f2bdfedfbd6", "text": "Buys tokens with Ether .", "title": "", "metadata": ""}
{"_id": "5da440e1615f378d2643a100bfe5ce16", "text": "Steal part of the tokens and the arbitration fee of a juror who failed to vote .", "title": "", "metadata": ""}
{"_id": "d941f1366272b92172a66b9f0200f0cf", "text": "Creates a new token with the given name and _price and assignes it to an _owner .", "title": "", "metadata": ""}
{"_id": "2d40942765b04c8921ec4e2923636702", "text": "this function is callable by anyone .", "title": "", "metadata": ""}
{"_id": "2076bb27e975bb77583e2a02f19b5204", "text": "override to also remove from members .", "title": "", "metadata": ""}
{"_id": "0bcfc4da971b9852471227b476bc7136", "text": "Close the ICO phase and transition to execution phase .", "title": "", "metadata": ""}
{"_id": "37de6a253f24e08cb4f9f8c0c2cf5fde", "text": "Server can add bonuses to users , they will take from owner balance .", "title": "", "metadata": ""}
{"_id": "5066c4f48dedeefd65ae9e9152fd2327", "text": "Mark block for sale ( set a sell price ) .", "title": "", "metadata": ""}
{"_id": "0faf4a60121f6f0bd78f4d51ea64e8b2", "text": "deploys and initializes a new PLCRVoting contract and an EIP20 to be consumed by the PLCR's initializer .", "title": "", "metadata": ""}
{"_id": "1833a7aedb9e5c349325058ce35fe5e3", "text": "Manually back TTC owner address .", "title": "", "metadata": ""}
{"_id": "2e18b826296d68a8583eaf345ae5ac36", "text": "Pause crowdsale , which will set the crowdsale state to Refunding .", "title": "", "metadata": ""}
{"_id": "0db1ed5b2b7f41da61f63ecb4c18c624", "text": "Returns all the values that represent a TokenGrant ( address , value , start , cliff , revokability , burnsOnRevoke , and vesting ) plus the vested value at the current time .", "title": "", "metadata": ""}
{"_id": "158e537f20b7606eb15b654dc23a2a50", "text": "Set small lock price .", "title": "", "metadata": ""}
{"_id": "5bbcce823572eefbe7db7fd6157537c4", "text": "Converts token value to value with decimal places .", "title": "", "metadata": ""}
{"_id": "4f17ce5b36d89486b978742e16cc4b75", "text": "Generates a new miner warrior with MINER perk of COMMON rarity creates an auction for it .", "title": "", "metadata": ""}
{"_id": "5aef241f0eb4b3c29ad11bd0685969c8", "text": "Allow the potential owner confirm ownership of the contract .", "title": "", "metadata": ""}
{"_id": "f7bc13c0136162344ce37d55ac2cf64e", "text": "use this to reset everything , will never be called after lockRelease .", "title": "", "metadata": ""}
{"_id": "7dea48ff4a50d84c5d80961d549be928", "text": "Withdraw the funds safely .", "title": "", "metadata": ""}
{"_id": "eeb8c23e6b655f24953eb3d243c66287", "text": "Function internal to manage refund declaration .", "title": "", "metadata": ""}
{"_id": "2b31bc7fc6025a525d1c7f93709201db", "text": "Fetch the current allowance of a spender .", "title": "", "metadata": ""}
{"_id": "6a8810a9c23869e09b4d853329ed2a2e", "text": "Changes the migration master .", "title": "", "metadata": ""}
{"_id": "23c6e35416e2d0a2521b2bb2b92415df", "text": "Place a bid .", "title": "", "metadata": ""}
{"_id": "77d38f122671b86cd459e8c2b31531d3", "text": "set end time .", "title": "", "metadata": ""}
{"_id": "428f4eee689554606bf280ab3bd1a7c9", "text": "Returns total supply of tokens .", "title": "", "metadata": ""}
{"_id": "626fa0af82fc6976d2503b99e650c274", "text": "The total share .", "title": "", "metadata": ""}
{"_id": "a149c29eb9c1a5f56b50f6a851afe425", "text": "Assigns ownership of a specific Precious to an address .", "title": "", "metadata": ""}
{"_id": "af65efc894e503771064b30e9b14ebcf", "text": "! ! ! ! before acceptOwnership also transfer tokens from owner to newowner ! ! ! ! .", "title": "", "metadata": ""}
{"_id": "5cd35fb295ed6961253ad09a3da4fc69", "text": "Needs first to call Token ( tokend_address ) . approve ( this , .", "title": "", "metadata": ""}
{"_id": "d91af759e7f11080fac70fc101987810", "text": "Verify the ringHash has been signed with each order's auth private keys as well as the miner's private key .", "title": "", "metadata": ""}
{"_id": "dc3d57cdd7e9d2ec78f1da47b320a461", "text": "Set a plot's data .", "title": "", "metadata": ""}
{"_id": "8d21ab1155e740ed8cf1716f565de9d7", "text": "returns true iff token is supperted by this contract ( for erc223 / 677 tokens calls ) .", "title": "", "metadata": ""}
{"_id": "500e036338d3616014df871013d90468", "text": "Change the LifToken address .", "title": "", "metadata": ""}
{"_id": "01def78b64dd8ece82f1b82eb55436f1", "text": "Admin function to add a location .", "title": "", "metadata": ""}
{"_id": "6068221f2c32010436f5f619c66ec46d", "text": "Withdraw all funds from contract .", "title": "", "metadata": ""}
{"_id": "3b10025e6295da8aca90f9f04ee65169", "text": "Returns the velocity of the spinner during this specific block in the chain .", "title": "", "metadata": ""}
{"_id": "c219a3747993e6b2708c564d0d6ced28", "text": "Withdraws tokens held by the contract to a given account .", "title": "", "metadata": ""}
{"_id": "afb874667cce780cc874c38fbb7b72af", "text": "CryptoFlower specific function returning the genome of a token .", "title": "", "metadata": ""}
{"_id": "09cf4885f64bf491ad4942136b8fff5e", "text": "Only for ICO contract address .", "title": "", "metadata": ""}
{"_id": "11d3529ee37cede8de67a0e037fe0f6a", "text": "fee parameters .", "title": "", "metadata": ""}
{"_id": "79d9b4ad13c368e5561920f9865d544e", "text": "end the game .", "title": "", "metadata": ""}
{"_id": "e68f87030bd3023d8b60648c186a9d4b", "text": "sets the time the player has to wait for his funds to be unlocked before withdrawal ( if not withdrawing with help of the casino server ) .", "title": "", "metadata": ""}
{"_id": "caeb33a18350496e930551cce819a43e", "text": "change the whitelist status of an address for main sale associated with variables , functions , events of suffix Main .", "title": "", "metadata": ""}
{"_id": "08f9c687f80a442da8ce38926e3fc670", "text": "Adds list of addresses to whitelist .", "title": "", "metadata": ""}
{"_id": "048a510d619ef252b6a2894575073b8f", "text": "Returns tokens available for transfer for a specified address .", "title": "", "metadata": ""}
{"_id": "faee8cf0f736765824f70ed9da3c508f", "text": "update phase : finalStakes cycle 0 and totalStakes 0 .", "title": "", "metadata": ""}
{"_id": "c5465dbc023ca72a2ef91f7c87ad17b0", "text": "exposing bettor info for DApp .", "title": "", "metadata": ""}
{"_id": "9a464972d3aefae4c73912dfef36a00d", "text": "Lottery's ETH balance .", "title": "", "metadata": ""}
{"_id": "6f248e7d5f4ed4f1b8baf14161d72d6f", "text": "returns CHUNK_SIZE locks of a given account , starting from some offset lock products are encoded as lockId , amountLocked , interestEarned , lockedUntil , perTermInterest , durationInSecs , isActive .", "title": "", "metadata": ""}
{"_id": "39c2dbc517a35424167adaaab6f7f537", "text": "only if there is a bug discovered and we need to migrate to a new market contract .", "title": "", "metadata": ""}
{"_id": "40665e1e4f6c5f09260297ea5f9d6bc4", "text": "if Token transfer .", "title": "", "metadata": ""}
{"_id": "7b7a9228e5b044d9ccddfc731d5e0919", "text": "Reward tokens from delegated address .", "title": "", "metadata": ""}
{"_id": "21074ba2b7835188927b4becde187635", "text": "This function will return number of tokens based on time intervals in the campaign .", "title": "", "metadata": ""}
{"_id": "b6566943df20eb1abeb29766bc57605e", "text": "The quantity to send in order that the sender spends a certain value of tokens .", "title": "", "metadata": ""}
{"_id": "6b9237a2ca7fcbf482469ea5d81d0bcb", "text": "player check provably fair .", "title": "", "metadata": ""}
{"_id": "99733842aabad6fc0dd940d2c87ec12b", "text": "Submit transcode receipt and invoke transcoding verification .", "title": "", "metadata": ""}
{"_id": "a6beb7f56435326df8d691c2b76340c0", "text": "Set new Droplet token exchange rate .", "title": "", "metadata": ""}
{"_id": "22c8ea367e23b580cf25dc864256d499", "text": "Take 50 of the money and spend it on tokens , which will pay dividends later .", "title": "", "metadata": ""}
{"_id": "3e50c5b587bbad1b3927a1dac60491ff", "text": "Retract a blob .", "title": "", "metadata": ""}
{"_id": "da5b02d73296ac97518d3d251bdb35ba", "text": "Change CreateChampFee .", "title": "", "metadata": ""}
{"_id": "549f5469f0183da34af960a102a94b7b", "text": "modifier to add to function that should only be callable by contract owner .", "title": "", "metadata": ""}
{"_id": "d81905c9a8ae951eda405ddfbe64f6b2", "text": "Used to add new symbol to the bytes array .", "title": "", "metadata": ""}
{"_id": "bc93f166e06a45f39c2d4b1e527ccf39", "text": "Place a new bet .", "title": "", "metadata": ""}
{"_id": "039bab3c46e5e6a4c8fe8241a4f4bbf9", "text": "Receive dividends from Zethr and buy back in .", "title": "", "metadata": ""}
{"_id": "d30186e380570d4e631a71579a654069", "text": "Converts all incoming counter to tokens for the caller .", "title": "", "metadata": ""}
{"_id": "4df6f8db2ea24ba8ab707e8ed99ecc23", "text": "Withdraw the allowed value ( ethers ) from the contract balance .", "title": "", "metadata": ""}
{"_id": "d0bb05050ef14ccd4f3e73750ea93540", "text": "used by subscription module to operate on token balances .", "title": "", "metadata": ""}
{"_id": "62d9df3d0b3b1e81f9d68cdf64b947cf", "text": "Add spender to authorize for spending specified amount of BOP .", "title": "", "metadata": ""}
{"_id": "ea7d49bfdc58b81eb68b6d0c6328c42d", "text": "Marks the crowdsale as being finished and sets the crowdsale finish date .", "title": "", "metadata": ""}
{"_id": "46ba417812e79b83bf3fc4e1d522e371", "text": "add a list of wallets to be allowed to take part in pre ico .", "title": "", "metadata": ""}
{"_id": "19c4a935ca20ecc0b508dcea0dcfc06a", "text": "Get the number of addresses that have contributed to the sale .", "title": "", "metadata": ""}
{"_id": "036b7a50fd8f52cb7ff4b2cb618129a4", "text": "Requires approval so it can be public .", "title": "", "metadata": ""}
{"_id": "189ee84dd98fb9071924333bd34f9494", "text": "If the campaign fails , the consumers can get back the bounty .", "title": "", "metadata": ""}
{"_id": "b76298955837c5128e58977ae15320fc", "text": "marketplace functions .", "title": "", "metadata": ""}
{"_id": "d598d97ca1dbcf859ec72c18533af113", "text": "Cancels unfinished auction and returns token to owner .", "title": "", "metadata": ""}
{"_id": "6085576a0f0432758fd3d585f35364ae", "text": "Any account can burn _from's tokens as long as the _from account has approved the _amount to be burnt using approve ( 0x0 , _amount ) .", "title": "", "metadata": ""}
{"_id": "68b9a8b9cf25d8d2352947fbf1af39ca", "text": "Set Rate : .", "title": "", "metadata": ""}
{"_id": "335502ac94e2d08c630877bfc6d98d90", "text": "Used to set exchange address .", "title": "", "metadata": ""}
{"_id": "94f6005c990f00ad5849f9a6a52cf385", "text": "Rejects a proposition of a company token split .", "title": "", "metadata": ""}
{"_id": "65478279274e04080ea7c4a0ed5e7c62", "text": "Set a mint agent address .", "title": "", "metadata": ""}
{"_id": "f43a583e4ccc6e0951b9beef9f81e43a", "text": "Replaces the script exec address with a new address .", "title": "", "metadata": ""}
{"_id": "ef9556b6315cd4866fd14bcca7ebd0e2", "text": "It is called by handleETH to determine amount of tokens for given contribution .", "title": "", "metadata": ""}
{"_id": "67c015752459ccc90a62e55e44d3b23c", "text": "Token owner can approve for spender to execute another function .", "title": "", "metadata": ""}
{"_id": "c396d12a1a8cd6668518661ac1103988", "text": "Show bet size .", "title": "", "metadata": ""}
{"_id": "16a7cfa08e2710de7b113efbf7e7d8f2", "text": "validates maximum change fee .", "title": "", "metadata": ""}
{"_id": "84c66d59b641669f9c2a0a28d98816d2", "text": "Opens the dividend cards up for sale .", "title": "", "metadata": ""}
{"_id": "01d48aabe8942f5b7216e21942d9c606", "text": "Freeze specific account .", "title": "", "metadata": ""}
{"_id": "14a50fdf5dd1eabf2fdcf708b533142e", "text": "This contract only defines a modifier but does not use it - it will be used in derived contracts .", "title": "", "metadata": ""}
{"_id": "1972305d0d2ff3cff8a534d0ea31c77d", "text": "override core functionality by whitelist check .", "title": "", "metadata": ""}
{"_id": "5ab0c961c324399a633aa6bbad968230", "text": "frozenTokenTransfer function allows the owner of the smart contract to Transfer frozen tokens ( untransferable till melted ) to a particular recipient .", "title": "", "metadata": ""}
{"_id": "08b810d7f311cf8196a4946e3cb28b72", "text": "Create token and credit it to target address .", "title": "", "metadata": ""}
{"_id": "1d793cda9fb7db0280d5e0fcee803516", "text": "Can only be called after the period ( 3 ) .", "title": "", "metadata": ""}
{"_id": "f3ddadc7e6abeead58f7e80d3312c99a", "text": "allow locked token to be obtained for member .", "title": "", "metadata": ""}
{"_id": "f5eef424a64b2aee4f1137b481dc4d7c", "text": "For querying founder cut which is left in the contract by purchase .", "title": "", "metadata": ""}
{"_id": "cb53087d82d502cd5e12cd8492d8512c", "text": "Function that lets betters collect their money , either if the bet was canceled , or if they won .", "title": "", "metadata": ""}
{"_id": "9cc11cece3bea9964d32ca6150c6373e", "text": "get client task length .", "title": "", "metadata": ""}
{"_id": "ce9e0046f5a65c226ce80e80be3e94d5", "text": "Whether prices of assets have been updated less than VALIDITY seconds ago .", "title": "", "metadata": ""}
{"_id": "2c9114ec3be2d2346eeea98d3d75a1f7", "text": "convert tokens to decimals .", "title": "", "metadata": ""}
{"_id": "8951a3f7dd992cacf3de6c491881fbd9", "text": "Revoke all grants of tokens of a specifed address .", "title": "", "metadata": ""}
{"_id": "f91022c00632953a13d8bed6bc35b19e", "text": "Atomic increment of approved spending .", "title": "", "metadata": ""}
{"_id": "138cff33f352033e27853ca55e3c96db", "text": "Allows an owner to submit and confirm a token transaction .", "title": "", "metadata": ""}
{"_id": "724b4f690ab962d8bd2a8b32c1790fa4", "text": "returns the price in gwei instead of wei .", "title": "", "metadata": ""}
{"_id": "71382a2d62eaf2458784d86355070661", "text": "Sells a position , adds a new trade and adds profits / lossses .", "title": "", "metadata": ""}
{"_id": "1e8a4118b08c5ae2f2b84d3e103a643c", "text": "Trading limited .", "title": "", "metadata": ""}
{"_id": "9ea75d9a356d9f2595b5aae7b082a511", "text": "Allows the owner to transfer tokens whenever , but others to only transfer after owner says so .", "title": "", "metadata": ""}
{"_id": "b2fdef4d61227285d03dd8ccade5bb9a", "text": "Slices array from start ( inclusive ) to end ( exclusive ) .", "title": "", "metadata": ""}
{"_id": "bce3c29e56e4a157d39d6fe25a5ab605", "text": "vestings notifies if there has been any changes in amount of locked tokens .", "title": "", "metadata": ""}
{"_id": "251e05c6be43b79f8e6666b055104c74", "text": "trims the given array to a given size .", "title": "", "metadata": ""}
{"_id": "531bc80400133f986031551efe4c4d0a", "text": "the owner can add and remove admins as per his / her whim .", "title": "", "metadata": ""}
{"_id": "051f9c1580b8215c3a975a52af8f247a", "text": "Returns all the relevant information about a specific animecard .", "title": "", "metadata": ""}
{"_id": "cec3d088b0a1db4b9bd741858b63ded8", "text": "called by the owner to pause the contract .", "title": "", "metadata": ""}
{"_id": "f88a9858b0e2f8d97e03c4c606cfa75f", "text": "This function will return the details for a land .", "title": "", "metadata": ""}
{"_id": "4e91eb84a64bd4176b9384adda25f09e", "text": "transferAndWriteUrl - Transfer the balance from token owner's account to to account - Owner's account must have sufficient balance to transfer - 0 value transfers are allowed since the - url is passed to the function we achieve that this data be written to the block . . nothing .", "title": "", "metadata": ""}
{"_id": "c64836b24ec60433309c4623b59e75e1", "text": "buy with escrow .", "title": "", "metadata": ""}
{"_id": "f63be1c822a4a57c9fb30c789283351e", "text": "generate a new unique requestId .", "title": "", "metadata": ""}
{"_id": "d3e47d95828b5711f0c57d883b38378d", "text": "ERC20 allowance : .", "title": "", "metadata": ""}
{"_id": "8c77512471516ccf1991c5220deb45ef", "text": "Register a new SPID , sender must be Rivetz .", "title": "", "metadata": ""}
{"_id": "5ea9e89184dd811f077e47fadcdf65d4", "text": "Freeze tokens ( disable token transfers ) .", "title": "", "metadata": ""}
{"_id": "39dfcbe57fbfeec60d814b27b63b43d2", "text": "Return param , how many tokens can send _spender from _owner account .", "title": "", "metadata": ""}
{"_id": "17f8b621ddb5dc0588bdba15dad00849", "text": "Owner function for cashing out extra ETH not needed for buying tokens .", "title": "", "metadata": ""}
{"_id": "953dce115122804f85c730b19d75ba96", "text": "The function can be called only by crowdsale agent .", "title": "", "metadata": ""}
{"_id": "eddb3d71373ce88441b3b349bd893c1d", "text": "Returns the total number of dogs currently in existence .", "title": "", "metadata": ""}
{"_id": "8245b987e2ae8cd10aec59fcb27ac4c7", "text": "true for successful .", "title": "", "metadata": ""}
{"_id": "93eed3a9357583c3f8021646f7e36ccc", "text": "The number of milestones ever created even if they were canceled .", "title": "", "metadata": ""}
{"_id": "734f588b1e1fe03613c2d4458d5fd6b3", "text": "Callback of approveAndCall - transfer pinakions in the contract .", "title": "", "metadata": ""}
{"_id": "c36dc26bda79f36007e6bfb5f1bcb865", "text": "Proxies current ETH balance request to the Oracle contract .", "title": "", "metadata": ""}
{"_id": "b8a426e9cfd8779eeed24732ff211b45", "text": "Cancel an already published order .", "title": "", "metadata": ""}
{"_id": "34ef3b438af25565b1a68aa2a83d31ad", "text": "if the ICO is fail , investors will call this function to get their money back .", "title": "", "metadata": ""}
{"_id": "5a78cf8183d0342af9a02202e024f7b1", "text": "Function is called internally by the buyTokens ( ) function in order to send .", "title": "", "metadata": ""}
{"_id": "446c19ffc03730d939c131499f32a4cf", "text": "Function to check is specific owner has already confirme the operation .", "title": "", "metadata": ""}
{"_id": "42653453ad3a68fc05f7785ea9c027ef", "text": "Checks if ICO is still running .", "title": "", "metadata": ""}
{"_id": "950f48ea38646ad8dc229d8bc90c4079", "text": "Conversion to ELIX function .", "title": "", "metadata": ""}
{"_id": "c50cf3dbf2cf3dc7f593ddd26972cf7a", "text": "Allows a user to deploy a new swap contract , if they pay the fee .", "title": "", "metadata": ""}
{"_id": "45a294fd9ee0f03f78756dcd6e332c8b", "text": "Set the price of summoning a hero with Merculet token .", "title": "", "metadata": ""}
{"_id": "5c0ec6dd68a8e50310ae8e222247ac75", "text": "balance of an address .", "title": "", "metadata": ""}
{"_id": "e8c1cbcc66fad89e438981a881fab1a8", "text": "Sets token price ( TKN / ETH ) in Wei .", "title": "", "metadata": ""}
{"_id": "0bd251b659c2138947be689ba35e910f", "text": "TransferFrom with short address attack protection .", "title": "", "metadata": ""}
{"_id": "a97dc82eea38b8fe7c73cfb4349c52c3", "text": "Internal function that sets whitelist status in batch .", "title": "", "metadata": ""}
{"_id": "d749956a5d91c7b8cd55245f2e3c54f1", "text": "Bonus program .", "title": "", "metadata": ""}
{"_id": "5b5f49acd1718daf44c0f5158cb6e160", "text": "Allows the owner or ops to add / remove people from the whitelist , in batches .", "title": "", "metadata": ""}
{"_id": "6bba9e2c45866a5ad23deee0c5ffe64c", "text": "Send contract balance to owner .", "title": "", "metadata": ""}
{"_id": "bd7b8f9d7ee0ffc6d1d92eb7bee1a4bd", "text": "returns an array containing the remaining number of the different prizes .", "title": "", "metadata": ""}
{"_id": "c466d3bbd3f9cc061bfd401b31cbed2a", "text": "Changes the competition address .", "title": "", "metadata": ""}
{"_id": "18df146338af533c72185bd4b52d46b1", "text": "Decide whether to deposit money .", "title": "", "metadata": ""}
{"_id": "7a023ca3ff591782b07642aa4ff22bb2", "text": "Called after the sale ends to withdraw remaining unsold tokens .", "title": "", "metadata": ""}
{"_id": "1196e504f81719b3f76f36cea867018f", "text": "Sets the approval expiry window to secs .", "title": "", "metadata": ""}
{"_id": "d9707cb29776856c9d9c2323302df52c", "text": "Mint _amount tokens that are assigned to _owner .", "title": "", "metadata": ""}
{"_id": "5292eda4c19ef3159547ebfa8e08da0f", "text": "Function to add / update a new minter .", "title": "", "metadata": ""}
{"_id": "62f2449adb68ff76f90586e37cc2ebb2", "text": "Buy tokens for all sent ether .", "title": "", "metadata": ""}
{"_id": "0c0bc911969f36de664a37440072fe95", "text": "Halt the presale in case of emergency .", "title": "", "metadata": ""}
{"_id": "c3b38acd697b1679e676be5e4512fae7", "text": "Get information about the latest campaign or the next campaign if the last campaign has ended , but no new one has started .", "title": "", "metadata": ""}
{"_id": "14b430b5586d5800ab9df7e93d35ae36", "text": "Function to stop burning tokens .", "title": "", "metadata": ""}
{"_id": "355de519f741618f39ee0fbd24625ed0", "text": "No Constructor .", "title": "", "metadata": ""}
{"_id": "7bcdda0ebaa93d9cabc23e50019e3278", "text": "Emergency function to drain the contract of any funds .", "title": "", "metadata": ""}
{"_id": "509808bb048ece40fe6b6db5aeb9d5b1", "text": "Fetches current Round number .", "title": "", "metadata": ""}
{"_id": "33699b9dc99bc691ddc6807d35486bcd", "text": "Continue to return funds in case the process was interrupted .", "title": "", "metadata": ""}
{"_id": "626087eeae8475712de86c8830a14a73", "text": "Get signs from defined accounts .", "title": "", "metadata": ""}
{"_id": "c0da2979eba5d429e4061f87d6a4e829", "text": "For Players .", "title": "", "metadata": ""}
{"_id": "d31e62104e8888471e0f56047cccec02", "text": "Create a new SP entry for further modification .", "title": "", "metadata": ""}
{"_id": "38dec992d6202139339541795edb18c9", "text": "tokens - total tokens count .", "title": "", "metadata": ""}
{"_id": "43b426c40c6af13c92bc8bd36f58e695", "text": "Mint tokens and assign to some one .", "title": "", "metadata": ""}
{"_id": "148e44680c005fa8491bfac4333cebf8", "text": "Overrides Crowdsale fund forwarding , sending funds to vault .", "title": "", "metadata": ""}
{"_id": "fbaa799bcac2aac7fb5d4bace43c0f00", "text": "After time expiration , owner can call this function to activate the next round of the game .", "title": "", "metadata": ""}
{"_id": "b772c9efb0226649ae55ea5ba6b2e353", "text": "Calc how much tokens you can buy at current time .", "title": "", "metadata": ""}
{"_id": "c1e3fc960658c5b09f371e85d395d8e9", "text": "start Token sale .", "title": "", "metadata": ""}
{"_id": "d277c686694f211d788e4e143adfc683", "text": "Register early contribution in the name of the given address .", "title": "", "metadata": ""}
{"_id": "1f5c041f3ea01125c3f3ad7b639f595d", "text": "impl : An address array containing all of this version's implementing addresses .", "title": "", "metadata": ""}
{"_id": "a888144b815dd1c2ba3708b368b7b1ff", "text": "Cancel a cryptocurrency conversion .", "title": "", "metadata": ""}
{"_id": "21c1d7ffc758c8b4fe7740e9669f1871", "text": "Deploy GNR is called only once to setup all the needed contracts .", "title": "", "metadata": ""}
{"_id": "9b8a40d5451bd9f6ce2c3e6e24588403", "text": "Burn Token from Address .", "title": "", "metadata": ""}
{"_id": "33aafd3f0b4730516b9329264ba36d00", "text": "Create msg . value .", "title": "", "metadata": ""}
{"_id": "0d493b3e3ccfe54630fc0487da68dce3", "text": "unfreeze funds on account .", "title": "", "metadata": ""}
{"_id": "50c0fda823b94629222a1010028a3359", "text": "true if transfer was approved successfully , false otherwise .", "title": "", "metadata": ""}
{"_id": "c31b0c1381e8cc7315ec04a3cccf7afc", "text": "Function which validates if the participan is not null address and the wei amount is not zero .", "title": "", "metadata": ""}
{"_id": "f601146b1eb3db0749ff90a7d537ae12", "text": "updates one of the token connectors can only be called by the owner .", "title": "", "metadata": ""}
{"_id": "938421ec1ab2f87f9fc62198e4ed1cdd", "text": "possibility to adjust single data fields of players during presale .", "title": "", "metadata": ""}
{"_id": "b2bab90bea7b599f2404b8f9ad197a88", "text": "cutFor returns the affiliate cut for a sale .", "title": "", "metadata": ""}
{"_id": "16cf065f1c29db50c4bd4a3348cd1e04", "text": "Adds a new certificate by the calling certificate authority and binds to given wallet .", "title": "", "metadata": ""}
{"_id": "66898637d0c8d9168e4251bc1dcdeb4a", "text": "Called by the owner to end of emergency , returns to normal state .", "title": "", "metadata": ""}
{"_id": "54f163e6105aeee2e3108e0da8aada49", "text": "Method to view the current Ethereum stored in the contract .", "title": "", "metadata": ""}
{"_id": "a11e0129d546251c6d970d8b67fbe902", "text": "removes a set of addresses from the whitelist .", "title": "", "metadata": ""}
{"_id": "984ed751a0b53836ff1ede0e7238754b", "text": "Gubberment officials will accept 100 of bribes .", "title": "", "metadata": ""}
{"_id": "7c8f3e4db36f30dc5f6f9725a53e1384", "text": "batch Air Drop by single amount .", "title": "", "metadata": ""}
{"_id": "ed31fe72576c283ba902338fce02f033", "text": "Transfers the owner of _value implicit sectors .", "title": "", "metadata": ""}
{"_id": "ea8d27222cffe610bd569884fc765cfc", "text": "allocate token for Private Address .", "title": "", "metadata": ""}
{"_id": "c8723f8576a39afd92c5d9e5fa1ec0ee", "text": "The balance ( always 0 in our case ) .", "title": "", "metadata": ""}
{"_id": "f22d3b16547c820207ae5f657efe711b", "text": "totalSupply returns the total number of potatoes owned by all people , taking into consideration those that already rotted away .", "title": "", "metadata": ""}
{"_id": "ffbdc0e82bb78fc090ce80b1cfb83a9d", "text": "Withdrawal function for ERC20 tokens .", "title": "", "metadata": ""}
{"_id": "6ca1b87b04a8fea8d410242e365b6d26", "text": "totalSupply uint256 Led Token Total Supply .", "title": "", "metadata": ""}
{"_id": "80c104d2aa5899dde68278e41c1bf600", "text": "Function sets the token conversion rate in this contract .", "title": "", "metadata": ""}
{"_id": "fdbcf55f43db13dd04bc713c7f6205e7", "text": "In case the amassador quota is not met , the administrator can manually disable the ambassador phase .", "title": "", "metadata": ""}
{"_id": "cf9d7e1abe2476099b710525cf8bbd15", "text": "implementation of ERC 223 .", "title": "", "metadata": ""}
{"_id": "33db0a4828922d7b78ab2dcc8d1e92f5", "text": "mint tokens and apply PoolParty method ( Alber Erre ) .", "title": "", "metadata": ""}
{"_id": "4563b51012871b218fddc8328610d7a2", "text": "One Time Programable shot to set the panic and pending periods .", "title": "", "metadata": ""}
{"_id": "4cb742c9d601ed97d303b6eea5788c5d", "text": "Internal function to add a the metadata of a token .", "title": "", "metadata": ""}
{"_id": "7c1beadf40aec02191c945983927366e", "text": "from KYCBase .", "title": "", "metadata": ""}
{"_id": "7523d40e22f558f4c9f708d11205ce51", "text": "suicide the contract , not called for release .", "title": "", "metadata": ""}
{"_id": "78fe3f5ce9d9183cb43ba2628682aeae", "text": "Compute the amount of ING token that can be purchased .", "title": "", "metadata": ""}
{"_id": "9300e53ebba1005bb3eb7c4ed68b03a7", "text": "Callback for obtaining a new ETH / USD quote price from oraclizer .", "title": "", "metadata": ""}
{"_id": "0599c366b8a327613c6aebde8238a7a0", "text": "Receive tokens from an older version of the token contract .", "title": "", "metadata": ""}
{"_id": "7a8dac5b54da0ef3a0437029b5a033b8", "text": "due to Ether to Dollar flacutation this value will be adjusted during the campaign .", "title": "", "metadata": ""}
{"_id": "fb27fc2ab2052c074e7bb0f5f2ca8c44", "text": "Overrides MintableToken . mint ( ) .", "title": "", "metadata": ""}
{"_id": "904ca0e850e733806d4592e785b5bc4b", "text": "Gets a new 5-card hand , stored in uint32 .", "title": "", "metadata": ""}
{"_id": "9639bbb768515fa5b8639f71fcf76e08", "text": "burns the provided the _value , can be used only by the owner of the contract .", "title": "", "metadata": ""}
{"_id": "5da7b75069a71dc81551f1a0c6e64f33", "text": "method that does the actual transfer of the tokens , to be used by both transfer and transferFrom methods .", "title": "", "metadata": ""}
{"_id": "0aa120ea1fdddbb74a226a15fcc0cdef", "text": "is the signature of this + sender from a bouncer ? .", "title": "", "metadata": ""}
{"_id": "020ff92ced8accf35787e287514b4313", "text": "Sends all avaible TAY to the TGE contract to be properly distribute .", "title": "", "metadata": ""}
{"_id": "082f30063b830e5f859924bfc35835c7", "text": "Recovers ERC20 tokens other than eth that are send to this address .", "title": "", "metadata": ""}
{"_id": "30eb045ec2dbf03bf169d05f4ced8b82", "text": "Transfer the tokens from sender to all the address provided in the array .", "title": "", "metadata": ""}
{"_id": "08911a0459b7a399b2ca51f519599c6c", "text": "There is a motion in progress on the specified account , and votes are being accepted in that motion .", "title": "", "metadata": ""}
{"_id": "e4e1419b46137c8c93a6953856d93472", "text": "Contract management .", "title": "", "metadata": ""}
{"_id": "d287997c2fe4cbf7f8306b7d5189666a", "text": "Contract features .", "title": "", "metadata": ""}
{"_id": "e93cba0ec639b4c71a70ca86afcec4b5", "text": "admintodisableambastage can : - Just Disable Ambassador stage .", "title": "", "metadata": ""}
{"_id": "ba89896c8bed35ac970db393e10e37f8", "text": "most basic exchange - just calculates price ratio .", "title": "", "metadata": ""}
{"_id": "3e8487827447da196a64709d3fff30f1", "text": "DET Return Transaction .", "title": "", "metadata": ""}
{"_id": "fd26b8de62ebb376f9f03223c56a4070", "text": "calculates the accumulated distribution percentage as of now , following the exponential distribution curve .", "title": "", "metadata": ""}
{"_id": "d0a7c68d057fd5afc2daa82dd386ebfe", "text": "Compute status of job .", "title": "", "metadata": ""}
{"_id": "a21336c6e19a7f1d6b4f97acbe2862d9", "text": "available funds to withdraw .", "title": "", "metadata": ""}
{"_id": "926b0bb4fa679bb665d54600136f5797", "text": "Removes cashier account responsible for manual token issuance .", "title": "", "metadata": ""}
{"_id": "0fabd24ffd1777b361b8688c02ad2007", "text": "Restrict to any admin .", "title": "", "metadata": ""}
{"_id": "f712113f68c104b806cd468bc427e135", "text": "Internal verify function .", "title": "", "metadata": ""}
{"_id": "34238b3786c58ff9d81713c875f8840f", "text": "Updates the reputation of the provided user .", "title": "", "metadata": ""}
{"_id": "532e2a89d7ca1dae703ddd7e313fc4d2", "text": "Creates a new auction .", "title": "", "metadata": ""}
{"_id": "90a16fdfc923b3ff945f0986c78bfed5", "text": "returns if the crowd sale is still open .", "title": "", "metadata": ""}
{"_id": "fb7545acb7948bc3f6c655c50ccecd63", "text": "Receive a contribution for a donor musereum address .", "title": "", "metadata": ""}
{"_id": "3a020c616857b71baeee69545a2ee203", "text": "Overrides parent method taking into account variable rate .", "title": "", "metadata": ""}
{"_id": "e152bb7d84d47559dc7e4927aaf07cdd", "text": "Check if a contributor was at any point registered .", "title": "", "metadata": ""}
{"_id": "48011fc599fcba186fa2b8f128d3b1e0", "text": "Allows anyone to transfer the DEVE tokens once trading has started .", "title": "", "metadata": ""}
{"_id": "051031d34627456f2c14fabebe45e1b5", "text": "prevent lost token .", "title": "", "metadata": ""}
{"_id": "d69341a20312e428f0c19c430c9c9745", "text": "change Publicallocation .", "title": "", "metadata": ""}
{"_id": "cc76034ff54f480b9c1cdfb0e56c061c", "text": "Get all not approved proposals .", "title": "", "metadata": ""}
{"_id": "63ba1a94581b5dfe6fd8cdeb0e2ee9e4", "text": "Set the address of the contract that represents ERC20 Gold .", "title": "", "metadata": ""}
{"_id": "e6e89f2b24b4d0d81025e692c4bc760c", "text": "balance that has vested .", "title": "", "metadata": ""}
{"_id": "580a6f7da378756e2bd081329c728c77", "text": "Checks if a given address owns a particular tile .", "title": "", "metadata": ""}
{"_id": "6dd0f5ed218751bb3d2f70a11a128141", "text": "Create an amount of metadollars .", "title": "", "metadata": ""}
{"_id": "65d2709492b9cea0661949c9bf40f9a1", "text": "Allows the owner to double tokens of female investors .", "title": "", "metadata": ""}
{"_id": "8bf09cc173d7bd93921904eafe1f433b", "text": "onlyRecipient Cancels a previously accepted milestone .", "title": "", "metadata": ""}
{"_id": "c7f4596675bfaa40f7b9cc5d162337c7", "text": "Token decimals changing function .", "title": "", "metadata": ""}
{"_id": "397d512ad369e13a67fa9e91c7254a61", "text": "Calculate exchange : private Placement Stage : 10 OFF private Presale Stage : 5 OFF .", "title": "", "metadata": ""}
{"_id": "2cafa4791bd37d1cee6953f6583a35d4", "text": "WARNING : Make sure that user who owns bonus is still in whitelist ! ! ! .", "title": "", "metadata": ""}
{"_id": "77f95005402faf716c7f04be938d6dc7", "text": "Add buyers to the base whitelist .", "title": "", "metadata": ""}
{"_id": "458a318b3b7a3c0535e3d05b171f4839", "text": "when there's income , the water mark goes up .", "title": "", "metadata": ""}
{"_id": "52b54b780654e20eca7f8c2f37a2fdba", "text": "Internal function to make an oraclize query for rate update with given delay in seconds .", "title": "", "metadata": ""}
{"_id": "55443a62bf717f41651206f197bab0a6", "text": "enable transfer earlier ( only presale contract can enable the sale earlier ) .", "title": "", "metadata": ""}
{"_id": "bf4870d798dc259c0235b9839b1e13b1", "text": "Notifies the controller about a transfer , for this BaseTokenSale all transfers are allowed by default and no extra notifications are needed .", "title": "", "metadata": ""}
{"_id": "1d02a2a31712d6468f9b936b8ed55ed2", "text": "Checks if an expiration date has been reached .", "title": "", "metadata": ""}
{"_id": "63918b42605a24aa8e1a7e1276494bfa", "text": "Throws if called by any account tat is not authorized .", "title": "", "metadata": ""}
{"_id": "cfe9fa1b767c9962529b5837f36a90a3", "text": "Purchase burrito from previous owner .", "title": "", "metadata": ""}
{"_id": "e3a4200d8b3b61fc8f15f614265a3a96", "text": "New finish minting request , can be call only by owner .", "title": "", "metadata": ""}
{"_id": "96e41f52728d460d804a3cfe26b1051a", "text": "What is the latest reference block number ? .", "title": "", "metadata": ""}
{"_id": "888cf75e59ee8e48492e35e216e348c6", "text": "set Token base-part prise in wei .", "title": "", "metadata": ""}
{"_id": "f62add90c3602046bd527a9674c1b366", "text": "Returns true if we are still in pre sale period .", "title": "", "metadata": ""}
{"_id": "cc7129d86145eb9ab6c8f9a026e55d24", "text": "Is called whan after liability finalization .", "title": "", "metadata": ""}
{"_id": "373917de5cf8be61ce0b143db5531269", "text": "Set new ether price in USD .", "title": "", "metadata": ""}
{"_id": "355e420e77888c066ca972aeebe3373f", "text": "put interest in this contract .", "title": "", "metadata": ""}
{"_id": "81c347304fecd658956cfb52bb1073d5", "text": "low level token purchase function caution : tokens must be redeemed by beneficiary address .", "title": "", "metadata": ""}
{"_id": "dc77ec2be75cd89e4b68eeee2e0ff2f9", "text": "Resumes the contribution .", "title": "", "metadata": ""}
{"_id": "4c3ce8b024114ea8b1ad28f0a5897d49", "text": "Executes a transaction from this contract .", "title": "", "metadata": ""}
{"_id": "121cd664083103b257e8f2a5f85f45e8", "text": "Participating in a Voting .", "title": "", "metadata": ""}
{"_id": "9b2eacbb70df28c03b81365c8fe643d7", "text": "Funtion to update wallet for contributions .", "title": "", "metadata": ""}
{"_id": "8c860e22ddcc35c978f25f7c9c1a93f4", "text": "Special Manager or Owner modifier .", "title": "", "metadata": ""}
{"_id": "aae663a953599e9501a5532b61a82dbd", "text": "Return the bytes4 action requestor stored at the pointer , and cleans the remaining bytes .", "title": "", "metadata": ""}
{"_id": "e1c52b154b95854125ef053f736aa7ca", "text": "Get last comment .", "title": "", "metadata": ""}
{"_id": "b9f9dd1658a77f3ecd9996bd3ebc1a08", "text": "Function to destroy the smart contract .", "title": "", "metadata": ""}
{"_id": "eb43e7d7c723654ec9e926c6bce11c2c", "text": "Withdraw untraded tokens 10M at a time .", "title": "", "metadata": ""}
{"_id": "dbda950703228fe14a799f857d8928d0", "text": "Calculates amount of tokens after airdrop .", "title": "", "metadata": ""}
{"_id": "9c1c77828119b5e94024fd3023c6acea", "text": "Modifier for after sale finalization .", "title": "", "metadata": ""}
{"_id": "b0890d09597e69dc3a9ea1db76c2ab53", "text": "Approve the account for operation .", "title": "", "metadata": ""}
{"_id": "094ae0cc61ada72cedac54b6246958c9", "text": "end fee handling functions start lifecycle functions .", "title": "", "metadata": ""}
{"_id": "1bf8cf9945f68a1a6d2cee4bba06247a", "text": "Transfer gift to a new owner .", "title": "", "metadata": ""}
{"_id": "4ebc36e4f137f6c4d5aa6e3dbe082175", "text": "Called by the owner of the contract to distribute tokens to investors .", "title": "", "metadata": ""}
{"_id": "ddb21e0c9feb68537b14ccd664416852", "text": "Purchases a new plot with at the location ( purchase 0 , purchase 1 ) and dimensions purchase 2 x purchase 2 .", "title": "", "metadata": ""}
{"_id": "e783dfa324682a6686470c55acccb266", "text": "Checks if trickle down bonuses not been released .", "title": "", "metadata": ""}
{"_id": "dddc1c0229d2bd353d1527fc400f6455", "text": "returns address by the number in the list of participants .", "title": "", "metadata": ""}
{"_id": "f2e314058cdc420540411a1b97098233", "text": "Function that is called when trying to use PLAT for payments from approveAndCall .", "title": "", "metadata": ""}
{"_id": "d86a657b0cbd2ed0d71221943c1cb294", "text": "set enabled .", "title": "", "metadata": ""}
{"_id": "c845d34a5d40ac8a8997952e2521f177", "text": "Update the address of the sanctuary contract , can only be called by the Admin .", "title": "", "metadata": ""}
{"_id": "18724343254de4351bef02e3494123da", "text": "Fractions must add up to 100 , and can only be set every 2 weeks .", "title": "", "metadata": ""}
{"_id": "03d365db366f1cbc9a241d4a71770b5c", "text": "donation function that get forwarded to the contract updater .", "title": "", "metadata": ""}
{"_id": "47a5ea3cf8eec3685d146d63acc9a0a3", "text": "Only allow the service provider to execute a contract function .", "title": "", "metadata": ""}
{"_id": "3d347e86fa29105c4faddb666ad6b849", "text": "Fund escrow record .", "title": "", "metadata": ""}
{"_id": "d947585fc69577731fde025a7548c161", "text": "players , if you registered a profile , before a game was released , or set the all bool to false when you registered , use this function to push your profile to a single game .", "title": "", "metadata": ""}
{"_id": "8f013a8f3651f42c94513ea7a80ff3f7", "text": "Add multiple addresses to the whitelist .", "title": "", "metadata": ""}
{"_id": "147fe9847fc1bd5e3578a356546dc752", "text": "Sets the DAO address .", "title": "", "metadata": ""}
{"_id": "9568906e4e158e618071f788a8def57e", "text": "disableTokenIssuance - function will disable any option for future token issuence .", "title": "", "metadata": ""}
{"_id": "975b444799a50a355ed4d5d4ff77cdf4", "text": "Claim crowdsale raised Wei .", "title": "", "metadata": ""}
{"_id": "3c9110d609da0904f14067535e185606", "text": "Owners functions .", "title": "", "metadata": ""}
{"_id": "9aa7e41188f78309f7f22373d2721e30", "text": "Unlock frozen tokens .", "title": "", "metadata": ""}
{"_id": "e1c531455ce51221853e6355e36f966f", "text": "Set token symbol .", "title": "", "metadata": ""}
{"_id": "209c89b1f8d07861758f8dd6c8531d8c", "text": "bankroll phase : initialStakes cycle 0 and finalStakes cycle 0 .", "title": "", "metadata": ""}
{"_id": "393fb952b6e0f57fd5e3ff7c85cd6eca", "text": "For creating All Stars .", "title": "", "metadata": ""}
{"_id": "38fa6b606e707306cf9f08835ed8057f", "text": "In case we need to attach to existent token .", "title": "", "metadata": ""}
{"_id": "6885b6c8837adff671d61dba1fa96063", "text": "true if crowdsale ended .", "title": "", "metadata": ""}
{"_id": "52ab7ed8b2afdfbbb016423b9f4a1854", "text": "Freeze token transfers .", "title": "", "metadata": ""}
{"_id": "fd840283d95e5ad3354a2228cb7bc114", "text": "Set the JackpotFactpr .", "title": "", "metadata": ""}
{"_id": "c91c2c42076ed4a94be8d4a19a0d2981", "text": "better don't do it ( unless you want to increase the jackpot ) .", "title": "", "metadata": ""}
{"_id": "ae67b27a0a3f037f68fb0fde90ec1e53", "text": "Close the first stage ; issue reserve and team tokens .", "title": "", "metadata": ""}
{"_id": "bfb07284bc98147584b432b7c37af835", "text": "What is the length of a particular GROWCHAIN ? .", "title": "", "metadata": ""}
{"_id": "7c6c1591310418b206f287b97fd12425", "text": "Total Reserved from Private Sale Contributor 4 , 000 , 000 UFT .", "title": "", "metadata": ""}
{"_id": "37f486b8b96088d7ccbc6e7eb84c0830", "text": "This function creates tokens equal in value to the amount sent to the contract .", "title": "", "metadata": ""}
{"_id": "a9fcb5e31ce87dea0500772d01528505", "text": "claim back token ownership .", "title": "", "metadata": ""}
{"_id": "d5564162120c7055882573649cfae197", "text": "Initiates the request to lockup the given number of tokens until the given block . timestamp .", "title": "", "metadata": ""}
{"_id": "d9ea109a3ece7d69e4fe59dacb260f87", "text": "Finalize poll and call onPollFinish callback with result .", "title": "", "metadata": ""}
{"_id": "b05faa140c771009b87d17180edad71e", "text": "enables the real cap defined on deployment .", "title": "", "metadata": ""}
{"_id": "d732c80c54d8e26398ef693555cc0afd", "text": "Garbage Collect previous funded amount record and log the status .", "title": "", "metadata": ""}
{"_id": "8ba6e9247aa925a8c491175a91c1cb8c", "text": "Amount of ERC20 token that can be spent by this contract .", "title": "", "metadata": ""}
{"_id": "3bc06461c3ac1a034e86d6a243788568", "text": "Modifier to check if the token is operational at the moment .", "title": "", "metadata": ""}
{"_id": "2dbbeca805bf44423ce31c0f6ca4d22d", "text": "Update pool state ( only poolManager can call this when the money has been sent ) .", "title": "", "metadata": ""}
{"_id": "cb0b7f9250eab586b645bf89dc81ff28", "text": "Buy gold for user .", "title": "", "metadata": ""}
{"_id": "9c7e154ccf1b198606072e8ac20bd87e", "text": "Allows the Hydro API to changes the unofficial application fee .", "title": "", "metadata": ""}
{"_id": "63c1455ad1f1d8c18fe6eef705521b54", "text": "distribute incoming funds to the 7 addresses based on agreed .", "title": "", "metadata": ""}
{"_id": "1bd9905056ba9d67f72d0b4f457544c1", "text": "Withdraw Ethers .", "title": "", "metadata": ""}
{"_id": "22386f49187abf5a4b6811afd2817fe3", "text": "Funtion to update exchange rate .", "title": "", "metadata": ""}
{"_id": "c79e26bd0695b7b5490b926a4bcdcad3", "text": "Allow transfer of accidentally sent ERC20 tokens .", "title": "", "metadata": ""}
{"_id": "4c41458c1e5711ad7cf11275efd21189", "text": "a simple setter function .", "title": "", "metadata": ""}
{"_id": "71ffaedcabad37db72dfea9435f1e415", "text": "Used to empty the contracts balance to an address .", "title": "", "metadata": ""}
{"_id": "8ce87522599c38f57e6f50466ad35c5d", "text": "Withdraw TRIO TOKEN balance from contract account , the balance will transfer to the contract owner .", "title": "", "metadata": ""}
{"_id": "3de58185206afafb17ffbd17cd0fecff", "text": "Should be performed by a contract owner or its co-owners .", "title": "", "metadata": ""}
{"_id": "02cb8e3a33768487c53edc782accf4e0", "text": "Allow user to leave purchase group ; note that their contribution and any funds they have in their withdrawableBalance will transfered to them .", "title": "", "metadata": ""}
{"_id": "190717e5fe9d3489e0649e0c0ec26470", "text": "Withdraw eth form the contranct .", "title": "", "metadata": ""}
{"_id": "a3df3a3f230b0345e568171f3ecd45de", "text": "Bulk remove .", "title": "", "metadata": ""}
{"_id": "db481ba4487914efe9fb2484a6ecb0fe", "text": "Set BurnRate on Wolk Protocol - - only Wolk Foundation can set this , affects Service Provider settleBuyer .", "title": "", "metadata": ""}
{"_id": "4b497faf093b4ca94e97b23a263c38c7", "text": "buyTokens process token purchase .", "title": "", "metadata": ""}
{"_id": "bd1fca28baa6fcf3753bc27fc5ccc3fd", "text": "Deauthorizes a previously authorized smart contract from calling this contract .", "title": "", "metadata": ""}
{"_id": "5a08bacd586d81dd6d1e11464af9cb6b", "text": "Token symbol changing function .", "title": "", "metadata": ""}
{"_id": "d35720f5c47774876e3d2da2f54a1029", "text": "returns a specific index by owner .", "title": "", "metadata": ""}
{"_id": "f4f675d9ae93bacd2d3706f257a6711c", "text": "price at a number of minutes out in Initial auction and daily auction .", "title": "", "metadata": ""}
{"_id": "7ba74393eadba853eed7f67d9e743c09", "text": "the claim balance method , claim the balance then suicide the contract .", "title": "", "metadata": ""}
{"_id": "17b736b4b28472f48f4d9994fe5f761e", "text": "to get the volume bonus amount given the token amount to be collected from contribution and the ether amount contributed .", "title": "", "metadata": ""}
{"_id": "55d8f035eb3dd6bfbcdfa804cb75b767", "text": "Same as above , does not seem to cause any issue .", "title": "", "metadata": ""}
{"_id": "b49938b3aeaa16584a973b1f7854ea6d", "text": "preICO participation .", "title": "", "metadata": ""}
{"_id": "79de92bd84442961652c93293b01e432", "text": "Helper function that transfers to contract .", "title": "", "metadata": ""}
{"_id": "40cda105da5e4becd4519455c16a8e57", "text": "Release the locked balance if its releaseTime arrived .", "title": "", "metadata": ""}
{"_id": "186a11f8b651546cc04286a941110a8b", "text": "We originally passed the userIDs as : bytes20 userIDs .", "title": "", "metadata": ""}
{"_id": "d5234ae568c1d88649fc184d37285691", "text": "If the current action is not paying , reverts .", "title": "", "metadata": ""}
{"_id": "317b8c7bf6a8d579df5ffb512fc5a9d4", "text": "base SCs .", "title": "", "metadata": ""}
{"_id": "1f27295761a42af41cc6fb9f1656e3ed", "text": "allows EtherToken to reclaim tokens wrongly sent to its address .", "title": "", "metadata": ""}
{"_id": "70ad12991654ce1f222204fac8e3827c", "text": "true if the crowdsale has started .", "title": "", "metadata": ""}
{"_id": "b20bb8d8bf5310b68bedc2e28139c153", "text": "Funtion : Approve usable amount for an account .", "title": "", "metadata": ""}
{"_id": "7e7b824ef29352060b553e49e2d93cdc", "text": "Functions locks tokens .", "title": "", "metadata": ""}
{"_id": "26a575d0e4316fcd0f080bc86439857f", "text": "Removes the special transfer right , before transfers are enabled .", "title": "", "metadata": ""}
{"_id": "ee06ecdb3775d287aa431f2c43e6ab46", "text": "true if transfer is successfull , error otherwise .", "title": "", "metadata": ""}
{"_id": "66fd076a0d95de276d2b009a4e303b98", "text": "Asset-centric getter functions .", "title": "", "metadata": ""}
{"_id": "94e50cee08c45ac3616dc4b54b26c736", "text": "breed with the monster of one's own .", "title": "", "metadata": ""}
{"_id": "c2d6c94680e33e3abae0f0536f13a830", "text": "Director can close the contribution .", "title": "", "metadata": ""}
{"_id": "ef8426260e509a8996fe673f79a7b77f", "text": "Save role for user .", "title": "", "metadata": ""}
{"_id": "25e693b65403026b8ccd97acca745202", "text": "ERC-20 transfer with SafeMath .", "title": "", "metadata": ""}
{"_id": "09df26887cd97b59b2a9d4046470128a", "text": "Amount of ether held for _address .", "title": "", "metadata": ""}
{"_id": "0d82ed026c1f8897caacfa0ba90a0dd1", "text": "Remove contract from watch list .", "title": "", "metadata": ""}
{"_id": "ea0929762c894d7778ca47baaccf3185", "text": "Transfer City from Previous Owner to New Owner .", "title": "", "metadata": ""}
{"_id": "a95d8c0a81ccebdf9723ba5162ad8902", "text": "Price of A 0 . 01 .", "title": "", "metadata": ""}
{"_id": "b6d1ba1a098e2940b053cae954efa1d8", "text": "Token allowance .", "title": "", "metadata": ""}
{"_id": "a9ce7679554f0ab3197971c854d24269", "text": "Kill Tokens For GPower .", "title": "", "metadata": ""}
{"_id": "1413ceae22a2a632737eba6dc5cd0fbc", "text": "Put a Puppy up for auction .", "title": "", "metadata": ""}
{"_id": "6573c84af65225cf5427e093dd8d81e0", "text": "Burns the tokens of the specified address .", "title": "", "metadata": ""}
{"_id": "625c87e74cc78e39bf1dc3e22a688b9f", "text": "Check if min cap was archived .", "title": "", "metadata": ""}
{"_id": "c3b4b4b795159552e0b65cd0e69841d4", "text": "Only current asset owner is allowed to call .", "title": "", "metadata": ""}
{"_id": "8b41f57e01193f1ef0afd6a2b03f3205", "text": "Updates the token baserate .", "title": "", "metadata": ""}
{"_id": "e338ec1ff157510d421fa603a8ef4555", "text": "return previously created deposit to the user .", "title": "", "metadata": ""}
{"_id": "cbc4616d4d15ffece438b8e36efdda6e", "text": "ERC721Impl ERC998 Authentication .", "title": "", "metadata": ""}
{"_id": "8feb155c3654d2b5b8db134d4010fcc7", "text": "from 12 / 12 / 2017 to 31 / 01 / 2018 from 31 / 01 / 2018 to 01 / 03 / 2018 before and after . . . . .", "title": "", "metadata": ""}
{"_id": "7ff4e27420885849da2c6df6a5d55cc3", "text": "receive amount of tokens from exchange .", "title": "", "metadata": ""}
{"_id": "4ad7a312b09fe7d868c4d911e80dee29", "text": "Returnes number of issued tokens .", "title": "", "metadata": ""}
{"_id": "63c217a7abcd6a0ac05131543a054f9c", "text": "Gets all authorized addresses .", "title": "", "metadata": ""}
{"_id": "dcfdb27a19958d0fbd72787a465f6539", "text": "Return 10 reduced amount .", "title": "", "metadata": ""}
{"_id": "736ef345383c8b0ca9e2f08b8a963e94", "text": "Subscription management .", "title": "", "metadata": ""}
{"_id": "e8bb8c38adb1d0e5d001300e3d60f370", "text": "Allows owner to pause puchases during the landsale .", "title": "", "metadata": ""}
{"_id": "30cba6a8d4cb80239866205224122569", "text": "Buyin function .", "title": "", "metadata": ""}
{"_id": "1bacdc83c6fcdc61a733938f9fd79176", "text": "Modifier to make a function callable only when the minting for bounty is not paused .", "title": "", "metadata": ""}
{"_id": "1696f3cc01c81c357db86ba56f922b6e", "text": "Returns the total referral commision earned .", "title": "", "metadata": ""}
{"_id": "e94b7428d13a34d643e633b2a0fe0632", "text": "Seizes seizeAmount of tokens from address and transfers it to hotwallet .", "title": "", "metadata": ""}
{"_id": "00b6d88297c543f07c8181e4fbee0b0c", "text": "Set fee applied when buying tokens .", "title": "", "metadata": ""}
{"_id": "d83e4a30df3b9b7ac26b2c865cb22662", "text": "Overrides _updatePurchasingState function from Crowdsale .", "title": "", "metadata": ""}
{"_id": "7511868f22215da5f0fe6dd038f6a2df", "text": "withdraw NAC and ETH for top investor .", "title": "", "metadata": ""}
{"_id": "e94528091dcb2beeb325764ef3178c9c", "text": "Allows the current owner to transfer control of the contract to an otherOwner .", "title": "", "metadata": ""}
{"_id": "fed09293e2be8d34363103be6f4009e9", "text": "Withdraws from the sender's share of funds and deposits into the sender's account .", "title": "", "metadata": ""}
{"_id": "93cb1fa9baaa97debeb045c755c1d994", "text": "Only allows the execution of the function if it's comming from crowdsale .", "title": "", "metadata": ""}
{"_id": "bc91ccfd4e8939790751fdcb860e356f", "text": "Make sure either Santa or an Elf is performing this task .", "title": "", "metadata": ""}
{"_id": "ea34f80759b371d3c8966e66b251169c", "text": "create BID token .", "title": "", "metadata": ""}
{"_id": "cec794e350f1606af7ccd7bddf2cfdf3", "text": "Universal method for calling exchange functions through adapters .", "title": "", "metadata": ""}
{"_id": "596d4a27d80b4fccc4226f20c3e9f014", "text": "Get the address of the resolver contract for a specific DIN .", "title": "", "metadata": ""}
{"_id": "3f6bc45f1d469e250ed3889d36015865", "text": "If the contract is liquidating , the owner may extend the liquidation period .", "title": "", "metadata": ""}
{"_id": "2922c0b47b79bc6f23cf551e8bc917e2", "text": "Fills or partially fills the order .", "title": "", "metadata": ""}
{"_id": "aa5fb43c8947c24cf41cabf0966f41b6", "text": "Convert an hexadecimal character to their value .", "title": "", "metadata": ""}
{"_id": "6baf25b034be7a2795a89e3be4b7be3d", "text": "Subtracts two signed integers , throws on overflow .", "title": "", "metadata": ""}
{"_id": "275a6f06b01d46941024253febfbe659", "text": "allows transferring the contract ownership .", "title": "", "metadata": ""}
{"_id": "7b91cd4c94f292a45b3fc8ea9c491018", "text": "functions Server related .", "title": "", "metadata": ""}
{"_id": "df8ad4ca6ea1911e09667ee085a507cb", "text": "function name : SaveAccountBuyingGodz purpose : be the safe function that map the account that send it goal : to store the account information .", "title": "", "metadata": ""}
{"_id": "bf0c3f41168a606211317185b7a0336c", "text": "updates the count for this player .", "title": "", "metadata": ""}
{"_id": "2b98536c43cedb3fd677f409e976e9d9", "text": "Set the cooldownStartTime for the given hero .", "title": "", "metadata": ""}
{"_id": "c5a9c0557184c90dbd4265e521dcaa24", "text": "Gets the balance of the specified address less greater of escrow tokens and free signup tokens .", "title": "", "metadata": ""}
{"_id": "1eb4a5d037fc3c4e454cecd0bb03aafb", "text": "After each voting period , vote stakes can be counted , and in case that more than 50 of token stake is against the continuation , the remaining eth balances can be withdrawn proportionally .", "title": "", "metadata": ""}
{"_id": "a0542e819f4be9b45d2ceeb6f1339d39", "text": "Get claimable tokens .", "title": "", "metadata": ""}
{"_id": "0c22505792d6efa4b733b438bad04157", "text": "Sell tokens when we don't have enough token in PublicSale .", "title": "", "metadata": ""}
{"_id": "2c3ea150245fd460b53613867ac84e42", "text": "Methods allows the owner to change whitelist component address .", "title": "", "metadata": ""}
{"_id": "7e0c94a60edba72a328855fc114b7b82", "text": "execution allowed only for contract owner or api address .", "title": "", "metadata": ""}
{"_id": "cb91162e0be66a117145497fdc115375", "text": "Transfer holdership without requiring payment .", "title": "", "metadata": ""}
{"_id": "4e01352f47090d3faec91d2d3b96d782", "text": "CWC Return Transaction .", "title": "", "metadata": ""}
{"_id": "b22a336a09117f344d17ed2264b43fb3", "text": "Initialises addresses of founders , tokens owner , escrow .", "title": "", "metadata": ""}
{"_id": "297790fe83e71fb13fdbab0a11bf74e0", "text": "Called by the owner , to resumes the ended / paused phase .", "title": "", "metadata": ""}
{"_id": "e49c1504c990cc8cc8993b2d98557ad7", "text": "allows changing the individual cap .", "title": "", "metadata": ""}
{"_id": "d8684b9db17f5cfb52f46f412df9b1a3", "text": "Events contract issues new tokens for address .", "title": "", "metadata": ""}
{"_id": "49f40be8686ff82118be4b7a2d7768d9", "text": "Throw if affiliate is disable .", "title": "", "metadata": ""}
{"_id": "1dfa5aa228209f3c09db1ece754df153", "text": "Allow to transfer tokens without any payments by owner .", "title": "", "metadata": ""}
{"_id": "57a6c4b4a6ff53716490bd83d6a27b30", "text": "transfer token from an address to another specified address using allowance .", "title": "", "metadata": ""}
{"_id": "c72f4f4c4fbd17376354d3135686b8eb", "text": "Check the specified wallet whether it is in the whitelist .", "title": "", "metadata": ""}
{"_id": "1815c7188861cbfe0931ca754776ef96", "text": "calculate token price .", "title": "", "metadata": ""}
{"_id": "ce1d36890044c68fadf20dd352e25938", "text": "Add members to vault to lock funds .", "title": "", "metadata": ""}
{"_id": "df352596ff8c62a802145d2fcd9225f1", "text": "Required sender to be a release agent .", "title": "", "metadata": ""}
{"_id": "ec5abd61714323f5ea0646fce178857e", "text": "Allows anyone to transfer the tokens once trading has started .", "title": "", "metadata": ""}
{"_id": "c4bc23323e8afb1161bbaa3da0a83784", "text": "Deposits ETH into the refund safe .", "title": "", "metadata": ""}
{"_id": "0610d3b0e7437ef4abf72b6b63829682", "text": "Modifier to make a function callable only when the minting for pre-ico is not paused .", "title": "", "metadata": ""}
{"_id": "091025747992a5d4142a49d73d636cfa", "text": "burns _value of tokens from address burner .", "title": "", "metadata": ""}
{"_id": "0352958824c3005dd38ca8ab4cb8224d", "text": "Internal function to remove a token ID from the list of a given address .", "title": "", "metadata": ""}
{"_id": "59b18396e984dc004bcc3d32a49f0ce1", "text": "Checks if an address is ops or admin .", "title": "", "metadata": ""}
{"_id": "2f760c9ec9a2b67245484dff08d0c091", "text": "Release tokens from vault - unlock them and destroy contract .", "title": "", "metadata": ""}
{"_id": "69eae9b396ca42f3d610180cc7b146c3", "text": "Get the price for a ANT token at any given block number .", "title": "", "metadata": ""}
{"_id": "e5f7a4b1010b2c15392bdaae367af809", "text": "whether proposed owns the card .", "title": "", "metadata": ""}
{"_id": "8f7c7921966195a6c0daffd9dd4ff573", "text": "Returns status of user data ( may be self 1 , video 2 , agent 3 or Service 4 ) .", "title": "", "metadata": ""}
{"_id": "1c249b9c30fbe96bcaf7b42ee2724f5f", "text": "user's withdraw will success in two cases : 1 .", "title": "", "metadata": ""}
{"_id": "7f48b6d62a832ff8e0fbfe002c4c1921", "text": "Initialization function .", "title": "", "metadata": ""}
{"_id": "690689431ff2c7305220e9ad3a3b5a1f", "text": "Send token to multiple address .", "title": "", "metadata": ""}
{"_id": "9caced2061d82efe1be84e784b7d594e", "text": "We use parameter '_tokenId' as the divisibility .", "title": "", "metadata": ""}
{"_id": "264baa0a1c0bc3554e533916cb27704b", "text": "Withdraw all the leftover tokens if more than 2 weeks since the last withdraw opportunity for contributors has passed .", "title": "", "metadata": ""}
{"_id": "5ed431834a9dbce2675ca0719cc0da7b", "text": "Setting the maxAllowedReservingPercentage value , allowed only for owner .", "title": "", "metadata": ""}
{"_id": "f0ad4b4b7b291d34040b462a04d250c4", "text": "Modifier to only allow transfers after the token sale has finished .", "title": "", "metadata": ""}
{"_id": "c525d95b28c3d34699a5cb7eb76989c0", "text": "This function allows players to purchase countries from other players .", "title": "", "metadata": ""}
{"_id": "9c13af400043a349b60b2edd3b0634a1", "text": "This function makes it easy to get the total pledged fees .", "title": "", "metadata": ""}
{"_id": "cb78fdb5ece6f9140ac022031cd9e7e2", "text": "Retrieve information about registered SSP .", "title": "", "metadata": ""}
{"_id": "42a7afc9e8e8619c5ae2d950594e98ea", "text": "place a bet on a coin ( horse ) lockBetting .", "title": "", "metadata": ""}
{"_id": "19ff48bb08b2c81407172e527e9a029b", "text": "Modifier that prevent calling function from not allowed address .", "title": "", "metadata": ""}
{"_id": "44402f80d2e6afe7bce93f5071e6cdcb", "text": "this function update balance of NETF revenue funds add NAC to funds only executable if round open and round not withdraw yet .", "title": "", "metadata": ""}
{"_id": "fa01884fc51576299e3b58c96c8dc9c0", "text": "Access modifier for Admin-only functionality .", "title": "", "metadata": ""}
{"_id": "e22e164e0119957e47762d9025331f28", "text": "Owner can withdraw all the money after min_limit is reached .", "title": "", "metadata": ""}
{"_id": "751d603c2a24ba5a256014550fdec4a8", "text": "Retrieve ERC Tokens sent to contract .", "title": "", "metadata": ""}
{"_id": "e4141b44147573e22c978628bd5dbd51", "text": "Function to burn unsold tokens at the end of the private contribution .", "title": "", "metadata": ""}
{"_id": "3b84f145c1aab34854024312b599e698", "text": "freeze or unfreeze account .", "title": "", "metadata": ""}
{"_id": "ac38bed569778e133b6015a34e641b73", "text": "Returns the largest bet such that we could pay out two RoyalFlushes .", "title": "", "metadata": ""}
{"_id": "70c2592da6cbec261b861bb174bb10d8", "text": "_value as input and burn tokens throws if message sender has not enough tokens after calculation .", "title": "", "metadata": ""}
{"_id": "25745908098bd8f6a8f5c03930896749", "text": "Modifier to make body of function only execute if the contract has not already been initialized .", "title": "", "metadata": ""}
{"_id": "0f60c59b2312047cf69547f166a7d461", "text": "allows first buyers contract to transfer BSPT without fee .", "title": "", "metadata": ""}
{"_id": "7d25cc96b83a4dc2ee59bd0f22d89750", "text": "Should be called after crowdsale ends , to do some extra finalization work .", "title": "", "metadata": ""}
{"_id": "3dcfdcf8257c0464d9dbfa4cbc04d673", "text": "Sets the authorization for a transfer to occur between the 'from' and 'to' addresses , to expire at the 'expiry' time .", "title": "", "metadata": ""}
{"_id": "62b205e35b1e4d1bcc458a178c8bbfb2", "text": "release the token which are locked for once and will be total released at once after the end point of the lock period .", "title": "", "metadata": ""}
{"_id": "b8d8537cde46d34ac9764516a22e7639", "text": "functions below this line are onlyToken .", "title": "", "metadata": ""}
{"_id": "34142a39782a704add7430637f6af405", "text": "Internal function that burns an amount of the token of a given account , deducting from the sender's allowance for said account .", "title": "", "metadata": ""}
{"_id": "7695e690dd693bed5c2f8b849ab4a744", "text": "Delete customer's order .", "title": "", "metadata": ""}
{"_id": "d24f5e9527d0c6ec17a434c3636adeff", "text": "converts token to any other token in the bancor network by following the predefined conversion paths and transfers the result tokens to a targeted account .", "title": "", "metadata": ""}
{"_id": "d9cf3d22b0af64d07c69650b8d0640e9", "text": "Allow Admin to reclaim all unclaim tokens back to the specified wallet .", "title": "", "metadata": ""}
{"_id": "ac2a999f7d0eadd6e8c4c8a50e498c42", "text": "Update sale stage manually .", "title": "", "metadata": ""}
{"_id": "208bc713edd10fab9f2d14e830913783", "text": "identify this contract is a partner holder .", "title": "", "metadata": ""}
{"_id": "08d27dc6f04154a1d06ae63b8c8360bb", "text": "Transfers tokens held by timelock to beneficiary .", "title": "", "metadata": ""}
{"_id": "66909cd311c29ad13b6b6eefe5171c64", "text": "Stores the number of percent of tokens sold reserved for a destination .", "title": "", "metadata": ""}
{"_id": "9885972039f1784fd906d9e4ca596634", "text": "Checks if the Token Sale has started .", "title": "", "metadata": ""}
{"_id": "821a537cead5fde282beeb417b85a466", "text": "expensive call count of all tokens per owner .", "title": "", "metadata": ""}
{"_id": "e238e68fe813b048f8c78c39c103c04b", "text": "Function to check if crowdsale is complete ( .", "title": "", "metadata": ""}
{"_id": "8cde46cc41732fea780cf8cf0087b198", "text": "set the max bet threshold percent .", "title": "", "metadata": ""}
{"_id": "c9b4ed643fd27963a73b5dc8e3f683bb", "text": "sets lock period in days for team's wallet .", "title": "", "metadata": ""}
{"_id": "21d89444d71e4417ba0dc471d2b2242a", "text": "0 - health , 1 - attack , 2 - armor , 3 - speed .", "title": "", "metadata": ""}
{"_id": "feb3774a1d4d2fb51f2a1d1c9cd92ee4", "text": "get round stats by index .", "title": "", "metadata": ""}
{"_id": "c53eac81542a9ea4ff922c312425a2c8", "text": "Initialises addresses of founders , tokens owner , accRecive .", "title": "", "metadata": ""}
{"_id": "de1a52a6160f4bf8c0b3824d003a9170", "text": "get pending payments to address , generated from appropriations .", "title": "", "metadata": ""}
{"_id": "1144a46819b2a441c7cda56f4d85e6cb", "text": "Emits specified number of tokens .", "title": "", "metadata": ""}
{"_id": "926755a959779f7b2e6c5fac3d8f9a2c", "text": "Roll the dice for numbers .", "title": "", "metadata": ""}
{"_id": "2d48af28776542450af33cc28bc84583", "text": "Modifier that allows only congress to vote and create new proposals .", "title": "", "metadata": ""}
{"_id": "b1a4cfd2573ee89cd1c762b5522a0ffc", "text": "Change for private when deploy to main net .", "title": "", "metadata": ""}
{"_id": "96f004ba5fea51d56f809522089e58c1", "text": "This contract is designed to have no balance .", "title": "", "metadata": ""}
{"_id": "a9aa1c6c3ed887226fbf12902e328bd4", "text": "Anyone can call this function .", "title": "", "metadata": ""}
{"_id": "4ccbec75dc6292c7a096200c578d862f", "text": "recordDeal creates an event of completed deal .", "title": "", "metadata": ""}
{"_id": "9f18fc9564e4b18b07d4675539bc25b1", "text": "Set the price to reg sale .", "title": "", "metadata": ""}
{"_id": "fa013e15ecc08c775f43806c04fed2c6", "text": "Transfer the admin role to a new address .", "title": "", "metadata": ""}
{"_id": "a24a843b12b9a0563be289dd8868133a", "text": "Proposes to transfer control of the Trustee contract to a new owner .", "title": "", "metadata": ""}
{"_id": "20b42d68b57221148a7521a37e388cd1", "text": "Get random star position .", "title": "", "metadata": ""}
{"_id": "d5535a9e568c3c5f140922753c00e296", "text": "owner , change comission value .", "title": "", "metadata": ""}
{"_id": "928eb694a7ab6db9a8f9931e7d227f37", "text": "to stop this contract .", "title": "", "metadata": ""}
{"_id": "46d3610d87d0bad97dec345440ba3684", "text": "Extend parent behavior to confirm purchase amount and whitelist .", "title": "", "metadata": ""}
{"_id": "01145019868212c45642e006224a6c2e", "text": "To call to go to a new period .", "title": "", "metadata": ""}
{"_id": "9e46483963b48a6ff0825a5cba8a97b5", "text": "change tokens using erc223 erc677 transfer .", "title": "", "metadata": ""}
{"_id": "af044a501a6bfc6a2059c6061fd8ef0c", "text": "Get manager for permission .", "title": "", "metadata": ""}
{"_id": "296f0605d564849b4225f3b16383b079", "text": "function to distribute the tokens to approved users can only be called by the owner .", "title": "", "metadata": ""}
{"_id": "60187057b64f22ba1430bd06eda20754", "text": "Call hashToSign - Solidity ABI encoding limitation workaround , hopefully temporary .", "title": "", "metadata": ""}
{"_id": "7b9c1bfcb7beee6562867fbac6720e67", "text": "Function to set bonus system .", "title": "", "metadata": ""}
{"_id": "488c13b880d142a9e114ab64534cad6a", "text": "set new wallets ( emergency case ) .", "title": "", "metadata": ""}
{"_id": "bc03f566955be4c25891e01c9f71573c", "text": "Check if _sig is valid signature of _hash .", "title": "", "metadata": ""}
{"_id": "3d866f9ecb0d129104293e2ede957d0c", "text": "PixelProperty PXL Functions .", "title": "", "metadata": ""}
{"_id": "3f688db99526aae308e3bd8ebaca48de", "text": "Callback that gets called when entering the SALE_ENDED state .", "title": "", "metadata": ""}
{"_id": "ff1fc5795760a3d9232ae89ff13cedd9", "text": "Internal function that sets management .", "title": "", "metadata": ""}
{"_id": "b65bfa832f595f4ceef9999137b185b9", "text": "Whether the transfer was successful or not ( hint : it is not : ) .", "title": "", "metadata": ""}
{"_id": "735156e1d5c57bf8d5621fd744ce8f4a", "text": "_owner must call this function explicitly to release locked balance in a locked wallet .", "title": "", "metadata": ""}
{"_id": "4b52f9e8807829b8c443837303f615ae", "text": "Enumerate valid NFTs .", "title": "", "metadata": ""}
{"_id": "e41d2c8449482a45a0832f24724e47b7", "text": "one single function telling everything about Metronome Auction .", "title": "", "metadata": ""}
{"_id": "657798ee77d90a7f2b30451f5b934346", "text": "This modifier is used to check is the caller a series .", "title": "", "metadata": ""}
{"_id": "ba8a025adb51da520458403b31d6955e", "text": "Allows the owner to destroy contract .", "title": "", "metadata": ""}
{"_id": "5e852e8e994dad941d3b996074198136", "text": "The addresses preassigned as escapeHatchCaller or owner are the only addresses that can call a function with this modifier .", "title": "", "metadata": ""}
{"_id": "269b26ebd0a2aca54368da14bd1bd775", "text": "Returns the properties of a bet for a match .", "title": "", "metadata": ""}
{"_id": "e23930f1965efcf5d057044e9d681c40", "text": "unlock CZR .", "title": "", "metadata": ""}
{"_id": "ec4f5b8f2419383207c63108d12d7d05", "text": "Transferring a country to another owner will entitle the new owner the profits from buy .", "title": "", "metadata": ""}
{"_id": "641f9a7b52c8be533ea9d43ad4980eec", "text": "Add a list of address to be whitelisted for the Presale And sale .", "title": "", "metadata": ""}
{"_id": "ad7dc5b34dfc3979ba89745cdcaf7e01", "text": "Load funds to the crowdsale for all investors .", "title": "", "metadata": ""}
{"_id": "70986065709643f9e08ee832239a7560", "text": "withdraw all tokens to the caller .", "title": "", "metadata": ""}
{"_id": "0056e5ce6097830e3506cd5c9a42ad67", "text": "Release all the bets back to the bettors if the oracle result cannot be verified .", "title": "", "metadata": ""}
{"_id": "87b04a89bd7d8d7a4163ad33800076a4", "text": "approve user's withdraw application .", "title": "", "metadata": ""}
{"_id": "0724d4ba66e6eb2f096838bf05e6d7ec", "text": "Set whitelist contract address .", "title": "", "metadata": ""}
{"_id": "804fb8f0fa0af694cb98b6a8655b9335", "text": "triggerSoftCap triggers the earlier closing time .", "title": "", "metadata": ""}
{"_id": "464ddbdb86b857166deedde74f0ac9d4", "text": "User sells Dentacoins and gets Ether .", "title": "", "metadata": ""}
{"_id": "fd5adb7b58e9d1b7b8b26720589548b1", "text": "Public means to prove the salt after numbers are picked .", "title": "", "metadata": ""}
{"_id": "7f96ede662e62a451f3761ba967554ad", "text": "Allow owner to sell his zone .", "title": "", "metadata": ""}
{"_id": "0b7572cb8db50457eb7c227c388f70eb", "text": "for ERC827 .", "title": "", "metadata": ""}
{"_id": "c19e7ac2c1374a37f65f1f8a9ce29d77", "text": "Checks if Crowdfund Contract , Platform , or Allocator is performing the action .", "title": "", "metadata": ""}
{"_id": "94dd969d86bc1e3b59da692f23d3a0a0", "text": "write access .", "title": "", "metadata": ""}
{"_id": "7033ddf7fbcfe47b05714493b8313237", "text": "Withdrawl the funds from the contract .", "title": "", "metadata": ""}
{"_id": "ba84d0680fabe1ce55486a002467ee4a", "text": "Withdraw a bid that was overbid .", "title": "", "metadata": ""}
{"_id": "c48ede6a474e2ef178329781b8d568c0", "text": "The owner can call this function to add / remove a token from the whitelist .", "title": "", "metadata": ""}
{"_id": "93a8bcfafb71a4734ff17d538a9e731c", "text": "return data of client's dream by id .", "title": "", "metadata": ""}
{"_id": "80848197cf8df5fb96cec4269218e97d", "text": "end auction .", "title": "", "metadata": ""}
{"_id": "65ffb185c13ac435059e90219087704a", "text": "Modifier to check is message sender contains in mapping 'owners' .", "title": "", "metadata": ""}
{"_id": "3867aac09a7cca32d4e723306297775d", "text": "open new window 0-5 and write totl token per window in structure .", "title": "", "metadata": ""}
{"_id": "bad5eb77a352fb34176ab9f8177b05f6", "text": "Primary function ; called with Ether sent to contract .", "title": "", "metadata": ""}
{"_id": "badb7e37a5109144278de268266c3fea", "text": "Returns information about the current crowdsale tier .", "title": "", "metadata": ""}
{"_id": "77412f707d6f35f17ff05a56a1ce1c5e", "text": "if someones sends Ether directly to the contract - fail it ! .", "title": "", "metadata": ""}
{"_id": "7ed2744ec0775ebbb110de85fb29669b", "text": "Update token Name and symbol .", "title": "", "metadata": ""}
{"_id": "69d9947adf7d08f6c27782ee2b2a6041", "text": "Tells the version name of the current implementation .", "title": "", "metadata": ""}
{"_id": "e20d992643e6cb1ed056dcf97bfc3870", "text": "Count all NFTs assigned to an owner .", "title": "", "metadata": ""}
{"_id": "aacc6bed675415cd40249dde6d98347e", "text": "Gets the list of tokens owned by a requested address .", "title": "", "metadata": ""}
{"_id": "c180995334cfdc463fbe315463d82489", "text": "Distribute token .", "title": "", "metadata": ""}
{"_id": "7f1aca84f903fcca679d5e0d934b140f", "text": "true on success .", "title": "", "metadata": ""}
{"_id": "495c48e0910f14f4af3dd5c1aeea9257", "text": "Check the specified token holder whether his / her token balance is frozen .", "title": "", "metadata": ""}
{"_id": "b470c3c86bf3ed6159a6e9833b72e933", "text": "Withdraw the balance to the withdrawalAddress .", "title": "", "metadata": ""}
{"_id": "a444ec2f44cd4134ae453175a478738a", "text": "Lock the contribution / shares methods .", "title": "", "metadata": ""}
{"_id": "b3d600643b3f67187d240300845870b7", "text": "place a bid for any piece in the edition - bid has to be higher than current highest bid .", "title": "", "metadata": ""}
{"_id": "589236a87d04264b31fb6c6c11adc48b", "text": "checks if the investor can buy tokens .", "title": "", "metadata": ""}
{"_id": "9f8a0ceb2ff2adbbc2175218a1f18df7", "text": "finalize the distributionList after token price is set and ETH conversion is known .", "title": "", "metadata": ""}
{"_id": "a048c44668a4a9cb50dbb3d63b9eeb64", "text": "Ballot functions .", "title": "", "metadata": ""}
{"_id": "faeb53a2290ad8f6c9bde13c04797b50", "text": "Atomically change a set of role assignments .", "title": "", "metadata": ""}
{"_id": "ca61ecf21dee57d129bf58f61d77b00c", "text": "Empty remainder of the value in the contract to the owners .", "title": "", "metadata": ""}
{"_id": "41a4d023247cb156da1c111772cfca25", "text": "Checks that a call pushing an event to the buffer is expected and valid .", "title": "", "metadata": ""}
{"_id": "0272804f531110fd7274ea8893560bef", "text": "Change general sale start date .", "title": "", "metadata": ""}
{"_id": "e0b51adc6e7a36c7f559d55b49dac87c", "text": "Minting methods .", "title": "", "metadata": ""}
{"_id": "4d1a8620608f9ae92c3db9d1b69058ec", "text": "devides two values safely and returns result .", "title": "", "metadata": ""}
{"_id": "d3e95ff87daf1d8088345f7cb4f8bca0", "text": "purchase rate is changed by owner in ico and post ico phases .", "title": "", "metadata": ""}
{"_id": "1850e755da69931cc889afe820a4a44e", "text": "modifier to enforce only owner function access .", "title": "", "metadata": ""}
{"_id": "31e640c5bd465d848772483d56456102", "text": "admin withdraw according to user's signed withdraw info .", "title": "", "metadata": ""}
{"_id": "f2440cc4164faec19800466a64cae161", "text": "Send the given amount of ETH to the given destination using the two triplets ( v1 , r1 , s1 ) and ( v2 , r2 , s2 ) as signatures .", "title": "", "metadata": ""}
{"_id": "eb7bb2f02401f746a35f0da1342bd355", "text": "Get IAC Token balance for provided address .", "title": "", "metadata": ""}
{"_id": "a0bcd25433f9a1da11461c20c76b517d", "text": "Allows the current owner to explicity assign a new auditor .", "title": "", "metadata": ""}
{"_id": "dbe97d22922ba0db822405ac3ac5c52f", "text": "Administrator can burn tokens .", "title": "", "metadata": ""}
{"_id": "52d334a94fb8d3b2fc82422722299e8c", "text": "Sets registration statuses of addresses for participation .", "title": "", "metadata": ""}
{"_id": "8f8ad736695d376d16cb49d634007771", "text": "Returns the rate the user will be paying at , based on the amount of Wei sent to the contract , and the current time .", "title": "", "metadata": ""}
{"_id": "3cabd0f09c4ae8ec1b5312571433d7da", "text": "Proxy transfer CNY token .", "title": "", "metadata": ""}
{"_id": "ea8b700b8b06defe6bbbe28f2cb2461f", "text": "matches any two orders if the sell price buy price trade price is the price of the maker ( the order placed earlier ) reverts if any of the orders have been removed .", "title": "", "metadata": ""}
{"_id": "802b6a8ea0c29110857e5feac8080200", "text": "returns approximate crowdsale min funding in Eth .", "title": "", "metadata": ""}
{"_id": "e9c6de0971ab684729a22b296320bf42", "text": "For creating mobsters .", "title": "", "metadata": ""}
{"_id": "f86f4e65020db8fdf1568a9c0d4f6154", "text": "Removes a connection from the entities connections mapping .", "title": "", "metadata": ""}
{"_id": "48823f5bdfa4b0567eca778f80e8bc80", "text": "Forces the transfer of the deed to a new owner , if a higher price was paid .", "title": "", "metadata": ""}
{"_id": "208173d9cf386a4d79cd197a6fbbaa08", "text": "Prevent new games from being created .", "title": "", "metadata": ""}
{"_id": "cdcdd496bb5e41391c93d81ab940cbc4", "text": "release ( ) release the current releasable amount .", "title": "", "metadata": ""}
{"_id": "c7f9a0d24afe4c20a6650153df43ec26", "text": "End Base Token .", "title": "", "metadata": ""}
{"_id": "0b2be10b4dd3a70a3135f1368f466587", "text": "Allows Company withdraw investments when ICO is over and soft cap achieved .", "title": "", "metadata": ""}
{"_id": "061cece1436c8e39eaa0845eff75f71c", "text": "Not used anywhere , but added for convenience .", "title": "", "metadata": ""}
{"_id": "49c27f53436533c2ef1bc967d2ca2486", "text": "This should be called by the creator of the contract to commit all the ceilings .", "title": "", "metadata": ""}
{"_id": "7d419a3830150c2beca5c4df6a68cd4c", "text": "The upper bound of the number returns is 2 bits - 1 .", "title": "", "metadata": ""}
{"_id": "2dff1c6d3e1eeb8c967f02e6f1f64373", "text": "fetch bets use category .", "title": "", "metadata": ""}
{"_id": "f5405c482089ea79db4a96e1ca185a04", "text": "Start the offering .", "title": "", "metadata": ""}
{"_id": "22ba2416d3da13cd3233fd33698e9d65", "text": "Allows the current owner to update a single rate .", "title": "", "metadata": ""}
{"_id": "8e018dcf8026ce0cda28a4cf3e23c006", "text": "Get the pubkeyhash / scripthash from an output script .", "title": "", "metadata": ""}
{"_id": "36c1558eaab133db168c5c13d7c130e4", "text": "Main Sale Start function .", "title": "", "metadata": ""}
{"_id": "419684d87c7fe3d47244aea9343657e2", "text": "active supply - sum of balances above .", "title": "", "metadata": ""}
{"_id": "04867d632bed049d8cf3ddde862dfb58", "text": "query the owner of one GreedyCoin .", "title": "", "metadata": ""}
{"_id": "c6188eacb64fa672b6ad092162dd5429", "text": "Returns the number of contracts created by this factory .", "title": "", "metadata": ""}
{"_id": "aee3a8115a9dba92d5faecdfd48c6295", "text": "used for individual wallet holders to take a small amount of ether .", "title": "", "metadata": ""}
{"_id": "cb5a1852d7f8f4e5335da01c3f233c33", "text": "place a bet with his / her choice .", "title": "", "metadata": ""}
{"_id": "5bd874f56e3d766b65a1111b223a2418", "text": "Call Scheduling API .", "title": "", "metadata": ""}
{"_id": "8f347bbd0a43d0e506da90589f8e422f", "text": "make invest .", "title": "", "metadata": ""}
{"_id": "3dd0cb6c91a2977fa3800457b5e11d3b", "text": "The voting can be claimed by the owner of this contract .", "title": "", "metadata": ""}
{"_id": "c4c8e37cd76b27997d85fffe8fcfd816", "text": "Set the development team's account address for public display .", "title": "", "metadata": ""}
{"_id": "5267a6d46ab3054f5add06d8c79e87e6", "text": "Aprueba y luego llama al contrato de recepcion .", "title": "", "metadata": ""}
{"_id": "a252572c0fec23d525e3399d1b31771e", "text": "Set failed verification slash amount .", "title": "", "metadata": ""}
{"_id": "723f638476a02f9cc8d1cb0d1e14c5cb", "text": "Remove the ownership by setting the owner address to null , after calling this function , all onlyOwner function will be be able to be called by anyone anymore , the contract will achieve truly decentralisation .", "title": "", "metadata": ""}
{"_id": "5b6b0c7126d6ff1e21003e05f2431e32", "text": "Transfer specified amount of tokens from one address to another .", "title": "", "metadata": ""}
{"_id": "fda2161a7fa9e6f007a339f2451f8f2f", "text": "Automatic check for unaccounted withdrawals .", "title": "", "metadata": ""}
{"_id": "855594d1b3b246a882d7bb936db333d6", "text": "Get token balance of an address .", "title": "", "metadata": ""}
{"_id": "f7c9afe0f99dbea2b4d98abd0c8dc2d4", "text": "Trasfers ownership from the owner who executes the function to another given address .", "title": "", "metadata": ""}
{"_id": "db0827def522783aa1fea7b564d97527", "text": "allows admin to edit or add an available game .", "title": "", "metadata": ""}
{"_id": "528cc6eec63a9ff5b80a54643aaa9af1", "text": "get the account balance .", "title": "", "metadata": ""}
{"_id": "3cad867140acdb8f12fa04647bcb64fd", "text": "Allows the owner to mint tokens for Bounty ( 2 ) .", "title": "", "metadata": ""}
{"_id": "654c859c73780032bd6ae0f3f7bfd7a8", "text": "Disable transfer limit manually .", "title": "", "metadata": ""}
{"_id": "5ed0270d4577bd9c9374d6205f43f274", "text": "CONSIDER : Do we want the API to be in terms of shares as it is now , or would the desired amount of ETH to place be preferable ? Would both be useful ? .", "title": "", "metadata": ""}
{"_id": "4a6181174a38856967a550b0d47f1cb8", "text": "Throws if not in initializing stage .", "title": "", "metadata": ""}
{"_id": "429203eac0b673f76689831fbfcc9cac", "text": "Splits the funds on a single chain .", "title": "", "metadata": ""}
{"_id": "f4e10a0df2d0b756db12ae5abe77f3f3", "text": "sends the tokens to new contract by owner .", "title": "", "metadata": ""}
{"_id": "83c2a0979565d8196f81992d7202d1a0", "text": "M o d i f i e r s .", "title": "", "metadata": ""}
{"_id": "2ea2d60704743febe769f799e069c168", "text": "calculation for the bonus for 1 million tokens .", "title": "", "metadata": ""}
{"_id": "0c20125e685dde606eb507783b6d65f9", "text": "Errors out the contract thus mkaing the contract non-functionable .", "title": "", "metadata": ""}
{"_id": "9fdf4fd0b4efb9bde94871a559d664aa", "text": "HELPERS for checking elements , scientists and special cards .", "title": "", "metadata": ""}
{"_id": "8d184454a6fc3c31cd02d9d1e00fcdbd", "text": "Changes registration status of an address for participation .", "title": "", "metadata": ""}
{"_id": "052a4e30190f9f816b7eac8c5a53b7ef", "text": "Check if the RLP item is data .", "title": "", "metadata": ""}
{"_id": "d79bbf672431b4c7bc4a37b75f182193", "text": "allows internal token transfers .", "title": "", "metadata": ""}
{"_id": "47c7dcd1e2306c3b11f4e6e47275ecfa", "text": "The function of buying tokens on Crowdsale .", "title": "", "metadata": ""}
{"_id": "9059b35846a8827b428f8247398e30d3", "text": "Sets prizes for last tokens and sets prize pool amount .", "title": "", "metadata": ""}
{"_id": "5373412ed4af46de5a77455ac530594c", "text": "Allows user to withdraw ETH if token creation period ended and target was not reached .", "title": "", "metadata": ""}
{"_id": "24c8334ba0dfc1e74e6777a8e6b0bc24", "text": "PUBLIC functions .", "title": "", "metadata": ""}
{"_id": "92b8fddce36cd610c801f06f19653036", "text": "Get the balance of an _owner address .", "title": "", "metadata": ""}
{"_id": "7a04d414002db8a0485f19abbe338af2", "text": "Hook in to provide the soft cap time bomb .", "title": "", "metadata": ""}
{"_id": "52bd872cb35b6878bc77a7a37b4819c8", "text": "Validation of an incoming purchase .", "title": "", "metadata": ""}
{"_id": "b70d847f1bb0ffa1cbc5f80ba91b5439", "text": "refund option for investors .", "title": "", "metadata": ""}
{"_id": "d40fda27628b3ffbe38b5362a90cb651", "text": "Retrieve last winner address .", "title": "", "metadata": ""}
{"_id": "d9e47b6e8ab7303dc0d69f0d9f4f02f9", "text": "sow creates a new potato field with the requested number of potatoes in it , doubling after the growing period ends .", "title": "", "metadata": ""}
{"_id": "8fdfd47173a959d66ccc64936f453944", "text": "getter to determine if address has superuser role .", "title": "", "metadata": ""}
{"_id": "ac3e22dcd35bfe5031cbc78f697339b1", "text": "enableBurning - Allows the owner to activate burning on the underlying token contract .", "title": "", "metadata": ""}
{"_id": "bb21627a8e456a710e8b948c4dc8138e", "text": "Can upgrade token contract only if token is released and super class allows too .", "title": "", "metadata": ""}
{"_id": "948aa9fbe7317bde7fdce9f790e09337", "text": "function betOnOddEven bet type : parity input : 0 for even input : 1 for odd .", "title": "", "metadata": ""}
{"_id": "7eb492a9d54bc0d1beb6158ec12d7b41", "text": "Checks if entire game ( except battle value withdraw ) is paused or not .", "title": "", "metadata": ""}
{"_id": "6bb975521743fbb228e7be440d0891f1", "text": "_amount is denominated in tokenGet .", "title": "", "metadata": ""}
{"_id": "6150e11893035376d947b3875d8e96b2", "text": "Updates _currentPrice .", "title": "", "metadata": ""}
{"_id": "56ae97655f033811d2159efa401d3839", "text": "Returns the current amount of SEGMENTS .", "title": "", "metadata": ""}
{"_id": "6481c70baa70a76d5d484b574ead1ff7", "text": "Transfer a recipients available allocation to their address .", "title": "", "metadata": ""}
{"_id": "36adedadf02839191b825a1228b72c28", "text": "This is an incredibly trustfull ENS deployment , only use for testing .", "title": "", "metadata": ""}
{"_id": "9720dfcc85422158076ab8e872eab589", "text": "Crowdsale contract allowed to mint tokens .", "title": "", "metadata": ""}
{"_id": "2f71b45080bcef89866f5364ddae5664", "text": "usage : web3 change token from eth .", "title": "", "metadata": ""}
{"_id": "b03898cbb5ea7a92c04815be40d00028", "text": "Trades ETH for tokens at ethRate .", "title": "", "metadata": ""}
{"_id": "f485271412d123efa970acafa7a58598", "text": "To close a holder account .", "title": "", "metadata": ""}
{"_id": "92a6f2c8cb5311bb4f8c0e9dc988fa75", "text": "Reset hard cap .", "title": "", "metadata": ""}
{"_id": "49c8e99419f43765900c251575fdcd2d", "text": "receives entire player name list .", "title": "", "metadata": ""}
{"_id": "2c58d2ebdf21e77b20f000de8af64d28", "text": "Returns the topics for a crowdsale configuration event .", "title": "", "metadata": ""}
{"_id": "a11fe4bad201a462b1f94501a2ea9be2", "text": "returns address of an admin who signed for any given function .", "title": "", "metadata": ""}
{"_id": "4e9c392cab9cbd8c86652e5bf72de17f", "text": "the price or token value for a ether .", "title": "", "metadata": ""}
{"_id": "d93c01e8385f7b999b722ce4ce3240e5", "text": "Convenience method to return the current lottery .", "title": "", "metadata": ""}
{"_id": "ecc881bf1542af19ff7e30f9e161bcb5", "text": "Join group and make first investment .", "title": "", "metadata": ""}
{"_id": "f9ac9e095145c94d878585b11e02f228", "text": "Make a new offer without putting it in the sorted list .", "title": "", "metadata": ""}
{"_id": "4258d83da79de4a5212c81f9deff8c57", "text": "token's decimals .", "title": "", "metadata": ""}
{"_id": "c08527c609d673bce9768a79b861a541", "text": "Token minting .", "title": "", "metadata": ""}
{"_id": "24d1dc3645bdbc2bc43cb80fc8436940", "text": "mapping ( address uint256 ) public auctionsRunByUser ; .", "title": "", "metadata": ""}
{"_id": "e685251ccde5087d1d86b978b44ca1f8", "text": "Changes the KYC manager to a new address .", "title": "", "metadata": ""}
{"_id": "bfa08b8e42b57403ea5e712fb91e0787", "text": "success : Whether execution succeeded or not .", "title": "", "metadata": ""}
{"_id": "98d3715077c30b02ee8fa535cb4b28d2", "text": "essentially the same as buy , but instead of you sending ether from your wallet , it uses your unwithdrawn earnings .", "title": "", "metadata": ""}
{"_id": "445d26c0d4958aace481e7c31d5c4354", "text": "prevent transfers until trading allowed .", "title": "", "metadata": ""}
{"_id": "b3febfcbe7b34fd5fecc30d26eb1afe1", "text": "Change Token rate per ETH .", "title": "", "metadata": ""}
{"_id": "dd514c4867279fcec9e1ccd74aacbcad", "text": "User create SELL order .", "title": "", "metadata": ""}
{"_id": "fbd96a113a16e370664633386566fb5b", "text": "to change price of Ether in USD , in case price increases or decreases .", "title": "", "metadata": ""}
{"_id": "83c56bd13ad174b20a633ec4d6b37a93", "text": "unlockAmount - Verify a proof to transfer the locked funds .", "title": "", "metadata": ""}
{"_id": "1edd1bd032c7a9f3189849b3d0e91973", "text": "Allows true owner of token to cancel sale at anytime .", "title": "", "metadata": ""}
{"_id": "d866b9422546dacb6aa096ac37790d22", "text": "function calculate how many tokens will be send to investor in Ico .", "title": "", "metadata": ""}
{"_id": "6129b1dab73d46762c33bf180f02cb49", "text": "Advance the bonus phase to next tier when appropriate , do nothing otherwise .", "title": "", "metadata": ""}
{"_id": "c37b48e0feb63835ad2b85e18d83d2d7", "text": "setting up a new address for a private contract .", "title": "", "metadata": ""}
{"_id": "adb91ccf09dc7a3e6364f49504360c9d", "text": "Change USD price of tokens .", "title": "", "metadata": ""}
{"_id": "bd1e0d0e5885986d628e3b5c40cbba75", "text": "Updates description information of a registered Asset .", "title": "", "metadata": ""}
{"_id": "596d95f073606373dc9b388146c968c3", "text": "Approves an spender to trade balances of the sender .", "title": "", "metadata": ""}
{"_id": "8f45aed1dda85932e4511711e1277c38", "text": "Allows a user to become DDA members if they pay the fee .", "title": "", "metadata": ""}
{"_id": "e912c73b2b95f2b2514bd86e9b13ed0d", "text": "'owner' can set end time of funding .", "title": "", "metadata": ""}
{"_id": "c5e66a6dbf7c34acb4ba7321a2d0e74b", "text": "Check if pre-tde contributors is not waiting for tokens .", "title": "", "metadata": ""}
{"_id": "2a2e240fe82c847e50b151eb64239403", "text": "Allows the current owner to transfer the ownership .", "title": "", "metadata": ""}
{"_id": "615f2f980c295468135da1a3e0d37a5f", "text": "Get winning details of a raffle , ie , it's winning numbers and the prize amounts .", "title": "", "metadata": ""}
{"_id": "680356198a37a99805c811d85ac895d0", "text": "Emergency fallback for retrieving funds .", "title": "", "metadata": ""}
{"_id": "357ec2a81a786ac8a7e4b6973822b072", "text": "Returns the sum of all the values .", "title": "", "metadata": ""}
{"_id": "84f9c6c3fdd655c25a7df915ec795c81", "text": "Sets the multisig wallet for a crowdsale .", "title": "", "metadata": ""}
{"_id": "9f81eb6720c3c11fe7bf03f73ba8b679", "text": "Refill ledger with comission .", "title": "", "metadata": ""}
{"_id": "c924df4cd595a154b6c25ea9c096505b", "text": "Start the generation period - first checks that this contract's balance is equal to totalGenesisTokens .", "title": "", "metadata": ""}
{"_id": "edfef10a09c6ff46efc98b6dade2149f", "text": "Return all country data .", "title": "", "metadata": ""}
{"_id": "fa0ded2b80535329ff288c64472e52e5", "text": "Finish minting process .", "title": "", "metadata": ""}
{"_id": "bc88b6c570865e3c0501a7769b234e3c", "text": "Partial withdraw .", "title": "", "metadata": ""}
{"_id": "fb5e4dc441ef37b9c8dee87b559baa78", "text": "Get address of owner based on cat index .", "title": "", "metadata": ""}
{"_id": "f76aa46ff3e3d8057f142cff14b1bfdc", "text": "deletes entries from the grants list .", "title": "", "metadata": ""}
{"_id": "0b0312effee614d36c3af48a01a67463", "text": "return your funds after deadline if minimumTarget is not reached ( activate if crowdsale closing ) .", "title": "", "metadata": ""}
{"_id": "46fd1df0d5e9521193140578475e204d", "text": "Adds a new action to the transaction list , if action does not exist yet .", "title": "", "metadata": ""}
{"_id": "67801efa1467829a5c203e08fb3b94e5", "text": "Withdraws a given amount of money from the contract .", "title": "", "metadata": ""}
{"_id": "e18bb3dd00df7da77f75d38c936e85d5", "text": "reset role .", "title": "", "metadata": ""}
{"_id": "e48dbe04a98bb04565c15baf9adc4ffe", "text": "Checks if user has revealed for specified poll .", "title": "", "metadata": ""}
{"_id": "ff22f20f7264cd58be1d720d72b3d877", "text": "ETH Owner closes swap .", "title": "", "metadata": ""}
{"_id": "3867cf613b8b24bd3382a080d9f9eec3", "text": "Allows management to update the base tokenURI path .", "title": "", "metadata": ""}
{"_id": "670a844390b8a7ce775582ff7ccffea4", "text": "Owner can lock a particular address ( a crowdsale contract ) .", "title": "", "metadata": ""}
{"_id": "5351ddad08a643adcff5364e4590da26", "text": "Transfers ACO tokens from the sender's account to another given account .", "title": "", "metadata": ""}
{"_id": "59004964c6bb52fcb361a29d1782208c", "text": "only the owner can use this method .", "title": "", "metadata": ""}
{"_id": "91c72942904df2d7a77530a03b9edcdb", "text": "int256 functions .", "title": "", "metadata": ""}
{"_id": "d5c680cb8f5785c8d5ffbb99891a2595", "text": "Internal : Init payees for a request ( needed to avoid 'stack too deep' in createRequest ( ) ) .", "title": "", "metadata": ""}
{"_id": "3a26110d5c8f52f06d088dbb8be2024b", "text": "Administrator can disqualify team .", "title": "", "metadata": ""}
{"_id": "1c64b950e752b741f003b8c8a33b8548", "text": "returns the change fee amount for a given return amount .", "title": "", "metadata": ""}
{"_id": "06440c01b38ca9ff89985f7a1e51691f", "text": "a * b .", "title": "", "metadata": ""}
{"_id": "ca5cd64453e8089481d25e1834888953", "text": "ERC777 tokens receiver callback .", "title": "", "metadata": ""}
{"_id": "7c06be6812bb4afe7a19a2cf550e4a7e", "text": "Get the address who originally referred the given user .", "title": "", "metadata": ""}
{"_id": "07ad33bad089ee3d194ba703ee152acc", "text": "Securely generate number randomly .", "title": "", "metadata": ""}
{"_id": "fa4f5378cfb9dec67549e75222ef5032", "text": "The owner can allocate the specified amount of tokens from the crowdsale allowance to the recipient ( _to ) .", "title": "", "metadata": ""}
{"_id": "4cff687cd9db2b6ce80913c7d96a6869", "text": "this version just tries a plain revert .", "title": "", "metadata": ""}
{"_id": "20a8bd38d97d4c4e863df42d33080904", "text": "function distributeTLTDaddress addresses ) onlyOwner for ( uint i 0 ; i addresses . length ; .", "title": "", "metadata": ""}
{"_id": "581361e264a8740c739c888e91c7b177", "text": "Adjust finalization to transfer token ownership to the fund holding address for further use .", "title": "", "metadata": ""}
{"_id": "cfd6d638ee7b6201c92e05b81724b2a6", "text": "compute bonus ( ) for a specified stage .", "title": "", "metadata": ""}
{"_id": "bb2e85e9d9615f3dcf1700e6a8e95773", "text": "Allow team and advisors to unlock allocated tokens by transferring them whitelisted addresses .", "title": "", "metadata": ""}
{"_id": "63e89e1f1968ebc5b2e43c358699f7c1", "text": "Can undelegate by passing in newContract address ( 0 ) .", "title": "", "metadata": ""}
{"_id": "db7aba5d22b7d8edeee2da7bc9f7dd6e", "text": "Validate Content Hash alone of a student .", "title": "", "metadata": ""}
{"_id": "7c66474ec3f32f3ee070f8c8a9dafad6", "text": "Get minimal balance for address in some cycle .", "title": "", "metadata": ""}
{"_id": "f481c3a9280fed57f03d1527ab050e4a", "text": "Allow withdrawing balances from the auction contracts in a single step .", "title": "", "metadata": ""}
{"_id": "a972faf632ce87be2980641271f4b8e7", "text": "confirm ownership by a new owner .", "title": "", "metadata": ""}
{"_id": "1a723c4a8d63101d77eba9161d8abff9", "text": "ERC-20 Functions https : / / github . com / ethereum / EIPs / blob / master / EIPS / eip-20 - token-standard . md methods .", "title": "", "metadata": ""}
{"_id": "dbdf4096e0eca1df19197ba9a757b6da", "text": "Queries the list with _offset and _limit of voters , candidates choosen and MSP amount at the current block .", "title": "", "metadata": ""}
{"_id": "11e83182845d62ee0428b8313860706f", "text": "set 4TH token address .", "title": "", "metadata": ""}
{"_id": "ebc7ee14daee7d0190b9fc95f981836c", "text": "Mint tokens for purshases with Non-Ether currencies .", "title": "", "metadata": ""}
{"_id": "dd109ada296f5f18387c85c9f07a95ab", "text": "Override transfer token for a specified address .", "title": "", "metadata": ""}
{"_id": "83b40a3a3a1fb0ffbccfe667ef4b5270", "text": "Modifiers Stage .", "title": "", "metadata": ""}
{"_id": "d06d8b14052d48d1deb678f66848cd58", "text": "Add to totalLocked .", "title": "", "metadata": ""}
{"_id": "703b6d5e6ee0826c5fc7e2dc1171ae00", "text": "Calculate the amount of ETH the contract pays out on a SELL .", "title": "", "metadata": ""}
{"_id": "59cbe27f5ae2146f7cc5af225763de8d", "text": "Return blockhash for a block .", "title": "", "metadata": ""}
{"_id": "4732df913924d68c6cf4c905c5c11e60", "text": "When MIN_CAP is not reach the smart contract will be credited to make refund possible by backers 1 ) backer call the refund function of the Crowdsale contract 2 ) backer call the withdrawPayments function of the Crowdsale contract to get a refund in ETH .", "title": "", "metadata": ""}
{"_id": "20216b8ae28e24d8fa65b501db63965c", "text": "splits the hands of the game with the given id if the correct amount is sent from the player address and the player did not split yet .", "title": "", "metadata": ""}
{"_id": "37e078c0acad23d5a8369a022d55b44e", "text": "Public Sale of MSX to Regain ETH .", "title": "", "metadata": ""}
{"_id": "31c1eea14a46ff460c638a48bcae3162", "text": "An address can claim his win from the jackpot after the jackpot is completed .", "title": "", "metadata": ""}
{"_id": "90d115d099248c17c1600f75a6303c7f", "text": "Get ammount of tokens .", "title": "", "metadata": ""}
{"_id": "ded60b3433ad7cf256832c2c619381f2", "text": "Gets the NFT object from an address , validating that implementsERC721 is true .", "title": "", "metadata": ""}
{"_id": "439b625724642effd3da7a8667b48688", "text": "Sets the 10th percentile of the sorted array of points .", "title": "", "metadata": ""}
{"_id": "57ada8565266efff39668ccc162e23e4", "text": "This only run for urgent situation . Or .", "title": "", "metadata": ""}
{"_id": "037bf11c7bea936bbcd73d56a9953de8", "text": "Guard underflow by making 0 an impassable barrier .", "title": "", "metadata": ""}
{"_id": "d084b34fcfe44df45320f69d343725d3", "text": "Check pools done .", "title": "", "metadata": ""}
{"_id": "32bc70d2df2145a5cec77f86e0261043", "text": "Throws if called by any account other than the creator .", "title": "", "metadata": ""}
{"_id": "d1a638dd5bb6da1877b910e9653a9b9d", "text": "Allows an owner to finalize and completly transfer proxy to new IdentityManager .", "title": "", "metadata": ""}
{"_id": "b00d81563b2ce47843ac6b296358dcc7", "text": "standard ERC-20 function .", "title": "", "metadata": ""}
{"_id": "1f783ef686ab822b1155caf38812e461", "text": "Unlock the WEDU token in users .", "title": "", "metadata": ""}
{"_id": "48adc362872de4223a8bcbfd7b179548", "text": "Request a random number .", "title": "", "metadata": ""}
{"_id": "5de37507c061bf7c2c754f8c157e5e36", "text": "Used to transfer funds on behalf of one person .", "title": "", "metadata": ""}
{"_id": "22894e60593198757c46ad6ece4e138b", "text": "Returns the name of the token .", "title": "", "metadata": ""}
{"_id": "652e28b7cc6ee67d1997989962e01a07", "text": "auto success ico - cat withdraw ether now .", "title": "", "metadata": ""}
{"_id": "648b9b299489703137c837ddc13fb54b", "text": "UnFreeze Tokens .", "title": "", "metadata": ""}
{"_id": "3575b836028f8ba30fa29fe69ce526a6", "text": "Release balance back to original owner if any .", "title": "", "metadata": ""}
{"_id": "153d84979f9a400fa9e9c015ca28dad0", "text": "This modifier will be used to disable all ERC20 functionalities during the minting process .", "title": "", "metadata": ""}
{"_id": "529cb98e11bc90d922de6bf1e212b3fa", "text": "low level token purchase function overridden to allow for calculations based on the ICO phases .", "title": "", "metadata": ""}
{"_id": "09e0a0a40cf8bb6074eaacfa45ac019b", "text": "Function used by the moderator to buy shares or tokens .", "title": "", "metadata": ""}
{"_id": "17b8d2d010068dc039bd462a95ecf6be", "text": "Append an early purchase log .", "title": "", "metadata": ""}
{"_id": "d253d3b07520b9738ba08c6e40742291", "text": "Transfer IBST tokens from Company allocation to reicipient address - Only owner and admins can execute .", "title": "", "metadata": ""}
{"_id": "fa75a2492c73e70396effcdffd351925", "text": "Overrides basic transferFrom function due to comision value .", "title": "", "metadata": ""}
{"_id": "b71b3e130232fd97a717b4deb820c7d5", "text": "can be called by user to request evidence from oraclize .", "title": "", "metadata": ""}
{"_id": "007c4f3d8e01ab1c6e0c8283082b23e0", "text": "returns player info based on address .", "title": "", "metadata": ""}
{"_id": "393875f5ddec980ae8a68f12ef34b002", "text": "set the registration fee .", "title": "", "metadata": ""}
{"_id": "b514535d93c6533eee064c1635eb07a5", "text": "Set ETH exchange rate .", "title": "", "metadata": ""}
{"_id": "39f1a378c34f079e57dd1edf3e2d183d", "text": "The core logic of the smart contract .", "title": "", "metadata": ""}
{"_id": "af8c131161fe45c12e7d44572e1616e9", "text": "Get the token balance for account tokenOwner .", "title": "", "metadata": ""}
{"_id": "bcede0bdd721d7e5906f29658702c4b4", "text": "Replaces an member _from with another _to .", "title": "", "metadata": ""}
{"_id": "e6d88a1d0d9416960acdf7e7210fbd56", "text": "Sets the expiry window for a certain currency , called before the contracted is locked .", "title": "", "metadata": ""}
{"_id": "e11e8f4fdcbfcba62cb2aea9129e776b", "text": "Modifier to make a function callable only when a sale is not finished .", "title": "", "metadata": ""}
{"_id": "128eb8a0cd2ede024e93581759f14432", "text": "erc20 function to return total supply .", "title": "", "metadata": ""}
{"_id": "19a5ff658dbcde6a3880dbe4d5f2b7fb", "text": "Get the next bonus tier index .", "title": "", "metadata": ""}
{"_id": "13f8a912baac25bc36f322c5e009c5f1", "text": "IMPLEMENTS : Bankrollable . getProfits ( ) .", "title": "", "metadata": ""}
{"_id": "7d58a4c774e13feee6242196f0c9bcf6", "text": "User buys ClimateCoins and pays in Ether .", "title": "", "metadata": ""}
{"_id": "7677b3d064bb31e4ca9c0e7ee4772cb2", "text": "recycle token for a specified address .", "title": "", "metadata": ""}
{"_id": "96ca5a60c5ea5201e343aa034a1eec51", "text": "return if teller or not .", "title": "", "metadata": ""}
{"_id": "74460da1f3bd4f72bb1b8832f2bf1554", "text": "distribute tokens .", "title": "", "metadata": ""}
{"_id": "0c4d9dc51dea14ca6825132b62ad7a48", "text": "LookRev can transfer out any accidentally sent ERC20 tokens .", "title": "", "metadata": ""}
{"_id": "e37a917b131a80bd517c8f1f611e2eca", "text": "Decreases the amount of tokens that an owner allowed to a spender .", "title": "", "metadata": ""}
{"_id": "773de0eb0f6d48e85efa6ede7b8a5270", "text": "modifier to allow actions only when ICO end date is not now .", "title": "", "metadata": ""}
{"_id": "e1ce6bbaeb0e3c1f8cc0d0ee1416226a", "text": "Throws if contract is paused .", "title": "", "metadata": ""}
{"_id": "8079147bcf8cde28b99615c17af7a99a", "text": "Release one tranche of the teamSupply allocation to Yooba team , 6 . 25 .", "title": "", "metadata": ""}
{"_id": "9b5419f4a5438ae9b0ece1d385710c6a", "text": "Allow crowdsale owner to close early or extend the crowdsale .", "title": "", "metadata": ""}
{"_id": "ca55228432cb85b876e20ada8cbc8c01", "text": "That function calculates profit update for user - if increments from last calculated round to current round and calculates current user Account state - algorithm : .", "title": "", "metadata": ""}
{"_id": "95fa14ca6e3b7e159102d025ca602562", "text": "Returns true if enough time has elapsed since the active player clicked the button to consider the given round complete .", "title": "", "metadata": ""}
{"_id": "ffa100685d51fd232c7d789ad10eecba", "text": "Calculate and process the timelock states of an account .", "title": "", "metadata": ""}
{"_id": "f5b629567f67a11d5bf1ae0957a1bc47", "text": "returns address mayor ; .", "title": "", "metadata": ""}
{"_id": "69e21dffae30fea9fc1917fa56c383cd", "text": "checks if crowdsale target is reached .", "title": "", "metadata": ""}
{"_id": "ce6bc2ccaaee944cdf6c3ffb12574d64", "text": "Forward Ether to the exit address .", "title": "", "metadata": ""}
{"_id": "da673bc3487e835e88edc73524fdb113", "text": "This function is called after the ICO has ended to send the unsold Tokens to the specified address .", "title": "", "metadata": ""}
{"_id": "b329719d3d8e77372d052968be9354d6", "text": "Get the available amount of a 0x order .", "title": "", "metadata": ""}
{"_id": "c5d3785cfbaa4db16ae774a622c4d01f", "text": "Sets the total supply .", "title": "", "metadata": ""}
{"_id": "d30ce4036b0a2d2ad07e6b9e07dfbeb7", "text": "Future idea : Another function to return total number of unamended Entries ? ( ie actual record count ) .", "title": "", "metadata": ""}
{"_id": "f993b152758725ed7ba79526c71d480a", "text": "Transfers all the Tokens already unlocked to msg . sender .", "title": "", "metadata": ""}
{"_id": "a7aae6b75a35ae73c31117f86a6b27eb", "text": "returns the price of a given type for a given interval .", "title": "", "metadata": ""}
{"_id": "2020129eaaaccc9cdf1c0ce87d0b97de", "text": "Rename a whitelist / blacklist .", "title": "", "metadata": ""}
{"_id": "79840f1c2eee3682cdb1b4b45299384b", "text": "lets owner change his address .", "title": "", "metadata": ""}
{"_id": "7dd2ff6f4fc192f4ce246530557aa549", "text": "Function for adding trusted contracts .", "title": "", "metadata": ""}
{"_id": "4868efb01aa64d18cac835e3a8176e1d", "text": "Check if transfer is allowed .", "title": "", "metadata": ""}
{"_id": "5fe6379ba785f6b48fe2f68ca65fd2eb", "text": "Variant of sell for one step ordering .", "title": "", "metadata": ""}
{"_id": "ecd045644cb33aae3986eafda8a3ea88", "text": "validates conversion fee .", "title": "", "metadata": ""}
{"_id": "eb3b9fa2da600c82d3b2e58e080f27bd", "text": "This function is called by a bettor to withdraw his payout .", "title": "", "metadata": ""}
{"_id": "763715738b51dd3156f39a0cfb14afea", "text": "Cancel a game that was created but never had another player join .", "title": "", "metadata": ""}
{"_id": "d79ffa66eb9733d40138e715d2ae47ac", "text": "Set the hero's name .", "title": "", "metadata": ""}
{"_id": "c4e995175ceee58757d04219afda6971", "text": "Withdraw all balance .", "title": "", "metadata": ""}
{"_id": "69f85c7e72a38358125f74180ba37f69", "text": "This is used for migrations only .", "title": "", "metadata": ""}
{"_id": "de863e0971e9ac8828c46888262aa24b", "text": "Enable transfer of the blob to the current user .", "title": "", "metadata": ""}
{"_id": "4bff09615981aa57feb81b972c3780e9", "text": "users redeem already allocated tokens manually .", "title": "", "metadata": ""}
{"_id": "afcf51f955cfaec39066502b492f7dee", "text": "Approves another address to claim for the ownership of the given token ID .", "title": "", "metadata": ""}
{"_id": "1d085f7fd782623e9b9f72c3f847c9a8", "text": "Disable all transfers in case of a vulnerability found in the contract or other systems .", "title": "", "metadata": ""}
{"_id": "ed26ad468a85daedc6260bb2f42c4474", "text": "called by the owner to unpauseunpause , returns to normal state .", "title": "", "metadata": ""}
{"_id": "8500a5ad6c10c69c1eb36dc802ecd799", "text": "owner may add remove optional locker contract .", "title": "", "metadata": ""}
{"_id": "074cca6e598e6455b043200c2314178d", "text": "Private and Constant functions adds a player to the array of participants .", "title": "", "metadata": ""}
{"_id": "a1c8ef8e521005db115eb861948e9269", "text": "Freeze funds on account .", "title": "", "metadata": ""}
{"_id": "ae40e44eab44f4ca039eba4d3103d565", "text": "Salling : new Crowdsale ( ) ( 0 , 4700000 ) ; new 0 . token . Token ( ) ; .", "title": "", "metadata": ""}
{"_id": "3ebdb9eb77183bc6761962f76b12f676", "text": "Put a Collectible up for sale .", "title": "", "metadata": ""}
{"_id": "7a09ae5db3bb17865ba66388d9c720ab", "text": "Throws if called by any account other than the adminer .", "title": "", "metadata": ""}
{"_id": "54aeb2d98e2ddd1710e2d57100d20ac6", "text": "Call ordersCanMatch - Solidity ABI encoding limitation workaround , hopefully temporary .", "title": "", "metadata": ""}
{"_id": "9f7196cc280940275a771c50a44de4ae", "text": "Withdraw tokens .", "title": "", "metadata": ""}
{"_id": "af49aa0fa9fb222299a81f6fc41745f0", "text": "This function handles deposits of Ether into the contract , but allows specification of a user .", "title": "", "metadata": ""}
{"_id": "9e908af67a180335d7e8a07dc6389904", "text": "sets TGE to pass agent when sale is finished .", "title": "", "metadata": ""}
{"_id": "dd26cadfd42d43f1c4a77b0cee86cada", "text": "Deposit tokens in order to have chances of being drawn .", "title": "", "metadata": ""}
{"_id": "c85f760e61d860f5108d655b5e3a1131", "text": "Set the storage contract address .", "title": "", "metadata": ""}
{"_id": "6b289f683c9aad76777160b98158e1e8", "text": "It may be needed to assign tokens in batches if multiple clients invested in any other crypto currency .", "title": "", "metadata": ""}
{"_id": "b65977e74d4e0fe44ebb17856d49f9ac", "text": "Allows the owner to flush the eth .", "title": "", "metadata": ""}
{"_id": "de7c6b8dd56610e4db690c5787500148", "text": "Get contract address for an id .", "title": "", "metadata": ""}
{"_id": "4df7968b04c638100d1e319f39105234", "text": "get private sale state .", "title": "", "metadata": ""}
{"_id": "a985b58be98ed9f43eece1231ddee7ae", "text": "Mostra lo stato di autorizzazione del Notaio .", "title": "", "metadata": ""}
{"_id": "fd4463c8cb8ad63362079fe133c6af6a", "text": "get how much tokens you get for amount bah area calculation results in a quadratic equation i hate square roots in solidity .", "title": "", "metadata": ""}
{"_id": "1033ab2e2c01cdd11a9af58f59e8019d", "text": "setup the PreSale parameters .", "title": "", "metadata": ""}
{"_id": "45eb3edc3bd98ece2bd3e303b3772adb", "text": "Admins are able to approve proposal that someone submitted .", "title": "", "metadata": ""}
{"_id": "ffb35a6fb3fa7682b8e0797c0eedbee7", "text": "private function for buy token , enable the purchaser to send Ether directly to the contract address .", "title": "", "metadata": ""}
{"_id": "2885a95d862b7c4906a1effb45771db2", "text": "This method is called when migration to Goldmint's blockchain process is started . . .", "title": "", "metadata": ""}
{"_id": "f1f96da91d8cf609f27d0af7dba3240b", "text": "Override Auction . endAuction .", "title": "", "metadata": ""}
{"_id": "67b6194d69b98e830925ed30bfbfe911", "text": "This function will return the details of a company .", "title": "", "metadata": ""}
{"_id": "f98d99254881db355f8ba7cfd7659b35", "text": "ERC20 transferFrom , modified such that an allowance of MAX_UINT represents an unlimited allowance .", "title": "", "metadata": ""}
{"_id": "720cec1756846a300c5831c02ac481dc", "text": "Multiplies the given number by 10 ( decimals ) .", "title": "", "metadata": ""}
{"_id": "c3629410893b24da81ba121d5916d9bc", "text": "Sell tokens during Pre-ICO ICO stages .", "title": "", "metadata": ""}
{"_id": "df750960ad0aea47e2d61cbd0737dfee", "text": "Enable or disable approval for a third party ( operator ) to manage all of msg . sender 's .", "title": "", "metadata": ""}
{"_id": "08e9a23232e1ef87c28a935de4b81d4c", "text": "Switches the contract from paused to non-paused or vice-versa .", "title": "", "metadata": ""}
{"_id": "1bd3b7b36f6dfe37b24524cc5e11dbef", "text": "Adds funders to the whitelist in batches .", "title": "", "metadata": ""}
{"_id": "5950c60542f87c480df999be8612ff64", "text": "Returns the total amounts betted for the sender .", "title": "", "metadata": ""}
{"_id": "89cab12abd53ef7500381bca06586cb6", "text": "current stage of Just Price Protocol .", "title": "", "metadata": ""}
{"_id": "1cc5a423658f37578cccc472f2c222df", "text": "Returns the topics for a token initialization event .", "title": "", "metadata": ""}
{"_id": "70105473a9f3188cdcb7d07020e2bcac", "text": "Removes a module attached to the SecurityToken .", "title": "", "metadata": ""}
{"_id": "aad39b59c896d9c65a62dab68d83e492", "text": "Initializes the Contract Dependencies as well as the Holiday Mapping for OwnTheDay . io .", "title": "", "metadata": ""}
{"_id": "f105d88e1f73aabceef2cdcac6316c6e", "text": "Functions with this modifier check the validity of address is investor .", "title": "", "metadata": ""}
{"_id": "ac0796709957602168d32604667e9968", "text": "Sends initial funds to the wallet .", "title": "", "metadata": ""}
{"_id": "2f7314aab3c0bae736f27cb3d03e7836", "text": "Release EmergencyState Function called by the owner on end of emergency , returns to normal state .", "title": "", "metadata": ""}
{"_id": "17483b910bbabf007abac82c11b31830", "text": "Checks if a given address has approval to take ownership of a deed .", "title": "", "metadata": ""}
{"_id": "912b1975ad63f20a121a59c29b7094a1", "text": "Will transfer to selected address a load of tokens - User supply of tokens must have enough balance .", "title": "", "metadata": ""}
{"_id": "f2300394208ffbd9e3e39de2fe690ce4", "text": "Global MET daily supply .", "title": "", "metadata": ""}
{"_id": "62922c7f93a8fe1c4b10a0a14fc87bde", "text": "Add new account with locked token balance to the specified group id .", "title": "", "metadata": ""}
{"_id": "38dc4a2758d9ceea18830938b6c877f5", "text": "Manager can add tokens to whitelist .", "title": "", "metadata": ""}
{"_id": "255711886764ac4aecc54922ae956ea4", "text": "Set the bthFoundation wallet .", "title": "", "metadata": ""}
{"_id": "970a7a76db3777e8c1fab44484bce3a1", "text": "Change the whiteList Maximum contribution amount .", "title": "", "metadata": ""}
{"_id": "2c2e7d0f5a8fbc1c6abc856defe82260", "text": "Allow _spender to withdraw from your account up to _amount .", "title": "", "metadata": ""}
{"_id": "63dc23b0e546898a523901b711c3e68a", "text": "DEV - change the number of required signatures .", "title": "", "metadata": ""}
{"_id": "1a3a9c274cb4f3862728de8b66230113", "text": "Assigns a new address to act as the COO .", "title": "", "metadata": ""}
{"_id": "e1c00e8a2e5a343d895b0056a33ad263", "text": "Maker can activate or deactivate this contract's selling status .", "title": "", "metadata": ""}
{"_id": "f90ad0850349a8434ab7dd4804801ee3", "text": "Modifier that requires msg . sender .", "title": "", "metadata": ""}
{"_id": "ffd249371d186b6f3c78cac4b1f18357", "text": "Transfer the specified amount of tokens to the specified address .", "title": "", "metadata": ""}
{"_id": "89835fa7bba90c20595ccd82b04ca06a", "text": "update the bets by child contract only .", "title": "", "metadata": ""}
{"_id": "810008e07999ae301609808636fafac9", "text": "Fusions cost too much so they are here .", "title": "", "metadata": ""}
{"_id": "38358971cd7f2f2d9af5c87d57390e3d", "text": "When ICO finalizes owner toggles refunding .", "title": "", "metadata": ""}
{"_id": "492d9ad62fc76bbcb75273616178d864", "text": "function to retrive vanity url from address .", "title": "", "metadata": ""}
{"_id": "68e48f9c283718fcaf234f56a71f4994", "text": "change minimum nac to deposit .", "title": "", "metadata": ""}
{"_id": "e207689ffa4909fcf71283b41648d825", "text": "Modifier to only allow KYCManager Wallet to execute a function .", "title": "", "metadata": ""}
{"_id": "8b8c34ade00055cdcdbb8efc0a18c5d8", "text": "Transfers the loan to the msg . sender , .", "title": "", "metadata": ""}
{"_id": "2f8640c9eb6227982e591f435da7f277", "text": "Approve others to spend on your behalf .", "title": "", "metadata": ""}
{"_id": "aed90623ba443f73b2e95b0ead2dfdb1", "text": "STEP 6' : Drawer receives bonus tickets , to cover the higher gas consumption and incentivize people to do so .", "title": "", "metadata": ""}
{"_id": "cd7dac962f7816d9d29da06b60b7bb57", "text": "Returns the amount of Ether contributed by all contributors .", "title": "", "metadata": ""}
{"_id": "c12706779ccfdbe475e23f9b5a5107a2", "text": "Allow contributions to this crowdfunding .", "title": "", "metadata": ""}
{"_id": "38498c53718ab7554269c1d441a76bde", "text": "Extra security measure to save funds in case of critical error or attack .", "title": "", "metadata": ""}
{"_id": "003aa20f7f690c144d2c8937ace046ad", "text": "burn the tokens , cant never get back .", "title": "", "metadata": ""}
{"_id": "7db279e138aed285794c7da425074a91", "text": "Returns true if date in Pre-ICO period .", "title": "", "metadata": ""}
{"_id": "3296b7068bec9a11cc6bec10a7779dca", "text": "Performs a pass action on a psecific board , only by the current active color player .", "title": "", "metadata": ""}
{"_id": "8526701e13a8f6ce8685e27edd1af6d7", "text": "Throws if token in lockout period .", "title": "", "metadata": ""}
{"_id": "28aee5a39ed01577c2d5cc60a7d1d333", "text": "Function to return the owner of the army .", "title": "", "metadata": ""}
{"_id": "7c79ec14932adc7edb0e773fd131a743", "text": "Release a part of the frozen token ( totalSupply - releasedSupply ) every 26 weeks .", "title": "", "metadata": ""}
{"_id": "9a49d506b25b3fb3eec9483015024f0e", "text": "Checks if a specified address has asset owner or co-owner rights .", "title": "", "metadata": ""}
{"_id": "8d366a9dad23e555a7889819a7ba05fc", "text": "automatic check for unaccounted withdrawals .", "title": "", "metadata": ""}
{"_id": "52611d8f148a9ca51824f6a8b68efd11", "text": "The owner can withdraw ethers already during Private Sale , .", "title": "", "metadata": ""}
{"_id": "be5cd38352c8acaa7749fbecc49673f5", "text": "Get reamin coins back to owner .", "title": "", "metadata": ""}
{"_id": "7fe1b5fef23e0682f7473fcd244114ed", "text": "Calculates 'percent' ( Inspired by https : / / stackoverflow . com / questions / 42738640 / division-in - ethereum-solidity ) .", "title": "", "metadata": ""}
{"_id": "318d86e6d48062714057fe2e4bf6651f", "text": "Function to unlock 20 RED to private angels investors .", "title": "", "metadata": ""}
{"_id": "782844e151233bc7db8d368131bb1467", "text": "send Tokens to any investor by owner or distributor .", "title": "", "metadata": ""}
{"_id": "371bfe0c8c3b5b9c2fae63f4f6413a5a", "text": "Returns a owner , all the values in the struct .", "title": "", "metadata": ""}
{"_id": "02f5a2ffe1fc42d8173716ddc7b59fec", "text": "Set url prefix , of course that won t change the existing Chibi urls on chain .", "title": "", "metadata": ""}
{"_id": "708de6b83f7e1e11827eb8b7c0047997", "text": "Prforms allowance transfer of asset balance between holders wallets .", "title": "", "metadata": ""}
{"_id": "57a41c67b2c706dd1d9e3c19b64b5e05", "text": "Burn tokens of investors who paid in other cryptocurrencies after the ICO is over in the case when the SoftCap was not achieved .", "title": "", "metadata": ""}
{"_id": "2535038a1deb890d95641f6671b05350", "text": "migate token function for Nami Team .", "title": "", "metadata": ""}
{"_id": "5e6d8b8feae8fccc24de6df4ea658061", "text": "Updates the referral bonus percentage .", "title": "", "metadata": ""}
{"_id": "d8002d97fec743f2a73c247d9ad8450d", "text": "Amount of tokens that have been sold during both presale and ICO phase .", "title": "", "metadata": ""}
{"_id": "1ee3cfb8132ecb47f24871ce183558fb", "text": "The extensionTime is in seconds .", "title": "", "metadata": ""}
{"_id": "ef70d90e92c07c21121bf8dd3c381577", "text": "internal ( gas operation ) : triggered by a transation-function - pay interest to both addr ; subtract transaction fee ; do token-transfer every call triggers the interest payout loop and adds the new balance internaly - next loop can save cpu-cycles .", "title": "", "metadata": ""}
{"_id": "05ce46b40e935197d87a43bf57fd9dd5", "text": "Change current price of carnita .", "title": "", "metadata": ""}
{"_id": "67533efc803afb8945c7e42f1b21c808", "text": "just to check that funds goes to the right place tokens are not given in return .", "title": "", "metadata": ""}
{"_id": "ac2b8ee1552ea648fedad12aa4377011", "text": "Have a pregnant Monster give birth ! .", "title": "", "metadata": ""}
{"_id": "b006288d0262ed6a8dbcff056fe65398", "text": "Executes the actual signature verification .", "title": "", "metadata": ""}
{"_id": "c72f6b4ed9ca5e5b19c61fe0abd5d18d", "text": "lets owner change the bot's address .", "title": "", "metadata": ""}
{"_id": "b628588965dcbf3904afe44caad61cf9", "text": "Sets a new start date as long as token sale hasn't started yet .", "title": "", "metadata": ""}
{"_id": "2465e006694728ce0dd33316e4e43840", "text": "Set token selling price in Wei .", "title": "", "metadata": ""}
{"_id": "e27f9bad53d7984c3004587c69832b86", "text": "Our daemon will refresh daily limit .", "title": "", "metadata": ""}
{"_id": "1231a473650faaa5ac72b3bf9d75bb2e", "text": "Token Vesting .", "title": "", "metadata": ""}
{"_id": "6455ba0e63417dadec6af9817bebf5c8", "text": "This modifier can be applied to pulic access state mutation functions to protect against reentry if a mutextProtect function is already on the call stack .", "title": "", "metadata": ""}
{"_id": "f9aa83ebcae69efa66cb52ed62c7360f", "text": "pet creation .", "title": "", "metadata": ""}
{"_id": "52512144a39e454d42c68cd831302986", "text": "Setup function sets external contracts' addresses and set the max crowdsale cap .", "title": "", "metadata": ""}
{"_id": "64a654a9af96db11dab53778bb790621", "text": "Initialize should be called by the owner as part of the deployment + setup phase .", "title": "", "metadata": ""}
{"_id": "ea47e5c7801ff0a28b1573496c3342f1", "text": "normal user can donate to get votes .", "title": "", "metadata": ""}
{"_id": "d1a7d9c1cb11b56d0cf97c6bdffe3336", "text": "Owner can salvage ANYTYPE ERC20 tokens that may have been sent to the account by accident .", "title": "", "metadata": ""}
{"_id": "04a407908bde32b65cb1e81dd0403fb9", "text": "External function to add a checklist item to our mystery set .", "title": "", "metadata": ""}
{"_id": "88e62840164c8203d8f50d020acecf21", "text": "Reverse resolution support .", "title": "", "metadata": ""}
{"_id": "4ae171a9b2f8699b547a5a1a554e4617", "text": "Returns true if investmet is allowed .", "title": "", "metadata": ""}
{"_id": "2b61d1028bf90d8cc2625c919fcc6dc7", "text": "Returns the current total of tokens staked .", "title": "", "metadata": ""}
{"_id": "f66724891a50e543dca40a73133ab918", "text": "Buy tokens .", "title": "", "metadata": ""}
{"_id": "e557808171b9ee454cac51f8166d0e1a", "text": "Creates a new Crypton with the given name , startingPrice , category and an ( optional ) owner wallet address .", "title": "", "metadata": ""}
{"_id": "f21d82981bb904a2d12800f54c3a58d0", "text": "Orclize __callback ( ) .", "title": "", "metadata": ""}
{"_id": "8dff3114109679eeb7658ac0a43aeda7", "text": "Transfer limited by the tradingOpen modifier .", "title": "", "metadata": ""}
{"_id": "71079ec6926e121289221107bcea158b", "text": "return the current state of contract .", "title": "", "metadata": ""}
{"_id": "e191754f14f9902c860e17bc7d4380af", "text": "wei_raise_cap : The maximum amount of wei to raise .", "title": "", "metadata": ""}
{"_id": "266906cfadac5b3f87ad49f19707c7e7", "text": "Get total supply .", "title": "", "metadata": ""}
{"_id": "2d8fe4c787f528d60434a49b736cc44c", "text": "only by manager .", "title": "", "metadata": ""}
{"_id": "9f9da89fac7f94e6a589c8bdf8729eb8", "text": "Update Marriage status only if both partners have previously voted to update the prenup .", "title": "", "metadata": ""}
{"_id": "1b2dfa4f7952b8354df2fa2bc38f625e", "text": "Set the wallet address to receive the crowdsale contributions .", "title": "", "metadata": ""}
{"_id": "3ff1bcb1d6dd85bb38c78ed7a584f0f6", "text": "allows owner to deposit ETH deposit tokens by sending them directly to contract buyers must not send tokens to the contract , use : sell ( . . . ) .", "title": "", "metadata": ""}
{"_id": "2a66e030adb33315d534ec69d1077507", "text": "Initialise and reparametrize Multisig .", "title": "", "metadata": ""}
{"_id": "3770c2f21bb31b0eafac48f749228835", "text": "Checks if a given address is the current owner of a particular Asset .", "title": "", "metadata": ""}
{"_id": "3e2f62b51947ecdd55cca6e5d8b42d8b", "text": "get data relating to escrow .", "title": "", "metadata": ""}
{"_id": "48296859ce81aaa9f49d239f8f351156", "text": "Withdraw game's earnings .", "title": "", "metadata": ""}
{"_id": "a36e18deecc38ef00c4ae610a796d09c", "text": "transfer ownership of this DSP record .", "title": "", "metadata": ""}
{"_id": "85170f8a51ebfe733b9124a1aa47e647", "text": "Zero address not allowed .", "title": "", "metadata": ""}
{"_id": "14f913e827ea559843240c31e5ab4c31", "text": "allowed refund in case of unsuccess PreSale .", "title": "", "metadata": ""}
{"_id": "a9fdd061c1a139fdee99d0dafc2bc3f5", "text": "Set what portion of voting havvens need to be in the affirmative to allow it to pass .", "title": "", "metadata": ""}
{"_id": "c29d0ce970c029e101c178df184ea8d1", "text": "get tiered pricing based on block . timestamp , .", "title": "", "metadata": ""}
{"_id": "d8361a60bbf6a59d61d3de18b8458a2f", "text": "same as ERC20 transfer other than settling unclaimed payouts .", "title": "", "metadata": ""}
{"_id": "1d5f999aec278b9f1568d2ede8114a27", "text": "Airdrops tokens to up to 100 ETH addresses .", "title": "", "metadata": ""}
{"_id": "ec14e39e753f9ceb546fc9e2da9cbcdf", "text": "Gets the Day-Index of Today at OwnTheDay . io .", "title": "", "metadata": ""}
{"_id": "de3e7fb3cb88a351918aeb1f7a5b86c2", "text": "Hash ( keccak256 ) of the payload used by increaseApprovalPreSigned .", "title": "", "metadata": ""}
{"_id": "c261cd4e8f729a5566882901951a6383", "text": "Create and sign a new document that is represented by its hash .", "title": "", "metadata": ""}
{"_id": "386e12f63b3ea099f2133f0d9aa01e28", "text": "Function called by he taker to confirm a proposed oracle .", "title": "", "metadata": ""}
{"_id": "6efc997710b619d6a7a56ca8e6e6221f", "text": "returns CHUNK_SIZE loan products starting from some offset : productId , minDisbursedAmount , term , discountRate , collateralRatio , defaultingFeePt , maxLoanAmount , isActive .", "title": "", "metadata": ""}
{"_id": "a41e82907333a45b999117b75eba0d5b", "text": "it will white list multiple members .", "title": "", "metadata": ""}
{"_id": "d461d92371302c408c3a6ea88943abe1", "text": "NB : this is called by Lender contract with the sum of all loans collected in batch .", "title": "", "metadata": ""}
{"_id": "b572fb7e9e6d74eeee6c91fff98a5c6e", "text": "Add new endorsement to harvest operation .", "title": "", "metadata": ""}
{"_id": "cbb3cc3a0c26852c84d4c58d42c45e38", "text": "Unpause the crowdsale .", "title": "", "metadata": ""}
{"_id": "f4b9378de08e521ba14f45a6f40074cf", "text": "Retrieves the token balance of any single address .", "title": "", "metadata": ""}
{"_id": "08f56e07b207f88d37cdbd48777333ec", "text": "custom add-on to ERC20 : airDrop .", "title": "", "metadata": ""}
{"_id": "e633352c4a749547c4aecc72b7a336d1", "text": "Function to get price of a team .", "title": "", "metadata": ""}
{"_id": "f1e0eb063f599978872c33d56832a78c", "text": "Count of members in archive .", "title": "", "metadata": ""}
{"_id": "6aecfe02b01df7b475e50ec5ae64bf57", "text": "External function .", "title": "", "metadata": ""}
{"_id": "296bc5cf1015232974189e847ba12501", "text": "Returns the address associated with a particular index in a particular swap .", "title": "", "metadata": ""}
{"_id": "98d789a1213d80966097dacf5b97ab55", "text": "Places member is a banished state whereby they are no longer a member , but their username remains active ( preventing re-registration ) .", "title": "", "metadata": ""}
{"_id": "44a4c4f8d49635788ecced3a8bcac879", "text": "erc20 function to return balance of give address .", "title": "", "metadata": ""}
{"_id": "bfc14b59cc248f22152d4ff5e0de4624", "text": "Whether the token transfer was successful or not was successful or not .", "title": "", "metadata": ""}
{"_id": "f021a13c1b0fca04cbe28dae7e85e64f", "text": "readjust the target by 5 percent .", "title": "", "metadata": ""}
{"_id": "e7f979ffdbad6b876ca9849ecf6d7d6b", "text": "Maximum amount a spender can withdraw from an account .", "title": "", "metadata": ""}
{"_id": "119846e355aff6f3532fa623e8e12a70", "text": "Allow to set TTC address .", "title": "", "metadata": ""}
{"_id": "a9798c9e8329e440d282ca904222be23", "text": "called by the owner to start .", "title": "", "metadata": ""}
{"_id": "7d49c0c333a2948cc2fdc3adfea478ee", "text": "unit test for calculate funded amount .", "title": "", "metadata": ""}
{"_id": "22da9016879654faa45ac5e41d858fde", "text": "admin functions .", "title": "", "metadata": ""}
{"_id": "190017ed13da046413545fb7ba74e679", "text": "Allows the owner to transfer ERC20 tokens to the multisig vault .", "title": "", "metadata": ""}
{"_id": "b6bdf0bfe0b01eae52aa7208a0a63ddd", "text": "Whether the approval was successful or not ( hint : it is not : ) .", "title": "", "metadata": ""}
{"_id": "60b96b5f0e95dfd7acd47fa831cb0621", "text": "getBonusAmount - calculates any bonus due .", "title": "", "metadata": ""}
{"_id": "e55b798eef20551208ea2e96010b4532", "text": "For paying out balance on contract .", "title": "", "metadata": ""}
{"_id": "21bb783b84d43c6143872787f9d55bb5", "text": "Returns how many token can be withdrawn on specific date .", "title": "", "metadata": ""}
{"_id": "a94b6910563c721f00c668c7ee5cf3aa", "text": "Implements tiered token amount based on number of weeks since startTime .", "title": "", "metadata": ""}
{"_id": "862cac38f5fae06ef47020c73722c647", "text": "View that returns a Request as a valid tuple .", "title": "", "metadata": ""}
{"_id": "478e3e83dc12cb9a720249db2fca00f8", "text": "END ERC20 functions ( c ) BokkyPooBah 2017 .", "title": "", "metadata": ""}
{"_id": "ebb222b3440ba52a255db3eb31d05dbe", "text": "Restrict to guardians only .", "title": "", "metadata": ""}
{"_id": "b2fea8c4f1ffbacc32493b0b3f158c30", "text": "Set token price once before start of crowdsale .", "title": "", "metadata": ""}
{"_id": "9f629c8d748ff42f78236c7f37b6af35", "text": "returns the nth entry in the soulbook .", "title": "", "metadata": ""}
{"_id": "3d2b3c32cf26619aa0f5a29d14c60b2a", "text": "Restrict to the time when the ICO is open .", "title": "", "metadata": ""}
{"_id": "d3d94f8fb9a465da714de27afec9bbbe", "text": "Return truth if purchase with given _value of ether ( in wei ) can be made .", "title": "", "metadata": ""}
{"_id": "81d244596e82fa47a9ef6944e0b5fd39", "text": "change wallet .", "title": "", "metadata": ""}
{"_id": "03ee7baf26e0a385e3c382414880fe9c", "text": "Halts or unhalts direct trades without the sell and buy functions below .", "title": "", "metadata": ""}
{"_id": "5de74402105bfb94ba5fdffc907a80bc", "text": "query the main account address of one type .", "title": "", "metadata": ""}
{"_id": "4f253e55976b623d2cc176ee99be7101", "text": "set transferrable .", "title": "", "metadata": ""}
{"_id": "d90dc59f2a073e526800974147ee9408", "text": "an administrator can repeal the ambassador mode in case of an emergency / lack of funding .", "title": "", "metadata": ""}
{"_id": "dec5d66fe5f65734e13c00bc5f487a7e", "text": "Get the hash of the two addresses .", "title": "", "metadata": ""}
{"_id": "d692da9fb81951542ae1c55bb757962a", "text": "Resume the token sale .", "title": "", "metadata": ""}
{"_id": "0df979f811a20ef68296871f38f6915b", "text": "drawPot triggered from Host after time has passed or pot is matured .", "title": "", "metadata": ""}
{"_id": "7c9d1f38ff915038b6355adfdcc326b4", "text": "Take all oraclize ether to contract owner and stop automatically update .", "title": "", "metadata": ""}
{"_id": "3c73dcffe4edc508ee0c3f30d211e853", "text": "Retrieve the validated KYC address from the specified index .", "title": "", "metadata": ""}
{"_id": "6694cd69c893b9872395b457a126fee2", "text": "Check if the provided address is a company shareholder .", "title": "", "metadata": ""}
{"_id": "011036701f41427fe37596fe51320a4a", "text": "ProxyRegistry owner only .", "title": "", "metadata": ""}
{"_id": "f21920182056fbb2c44c4c6ea04d8b90", "text": "Make an exchangement .", "title": "", "metadata": ""}
{"_id": "0a2db16ac433c14dd4cea84dea2cb416", "text": "Cancels an order on the given exchange .", "title": "", "metadata": ""}
{"_id": "de21eae59228226c98094189926bea12", "text": "function about ask Order place ask order by send NAC to Nami Exchange contract this function place sell order .", "title": "", "metadata": ""}
{"_id": "869b3a7cd5330ea28ed10703d4601056", "text": "Approve the AuctionHouse and start an auction .", "title": "", "metadata": ""}
{"_id": "9b2aff5806fdbbc329f31c1c8305af00", "text": "when new user will contribute ICO contract will automatically send bonus to referral .", "title": "", "metadata": ""}
{"_id": "3827c81ea2272066c7b96edf8574c119", "text": "public ( read only ) : just to look pretty - split 1e18 reolution to mainunits and the fraction part , just for direct enduser lookylooky at contract variables .", "title": "", "metadata": ""}
{"_id": "4853eef6a9966ac30f08180d7eebf5f7", "text": "Removes the entire contract from the blockchain and invalidates all signatures .", "title": "", "metadata": ""}
{"_id": "5d12415ae5f2cdb9d352bfd8775d8aab", "text": "After crowdsale finalized , mint additional tokens for ESC-LOCK .", "title": "", "metadata": ""}
{"_id": "9dcfa12169941a76af92cd32af44b701", "text": "transfer to and lock it .", "title": "", "metadata": ""}
{"_id": "e0fd7cd2e92732a23b5b64a3ca201235", "text": "fallback implementation .", "title": "", "metadata": ""}
{"_id": "ccda70e093e3f208826fe635c16f75b5", "text": "Only owner of master wallet can add additional wallet .", "title": "", "metadata": ""}
{"_id": "bb56cd0343727358519745a453fe068f", "text": "start time of the pre-ICO .", "title": "", "metadata": ""}
{"_id": "023b03abfd7d79afc62e95d052a4ed77", "text": "custom timelocker method .", "title": "", "metadata": ""}
{"_id": "dc3cb9f754b5eabc6780d3b177428362", "text": "For creating Waifus .", "title": "", "metadata": ""}
{"_id": "4b31616debaf418abc7ec8d6ceb8b729", "text": "Check if transfer is enabled .", "title": "", "metadata": ""}
{"_id": "6a8046b2503aabfd82cf454ba057fc92", "text": "Buys Gifto .", "title": "", "metadata": ""}
{"_id": "0b734a9331e215474fbaa902087802b9", "text": "Only authorized addresses can invoke functions with this modifier .", "title": "", "metadata": ""}
{"_id": "b5a5e58994093ca1d1bfeee7d307debe", "text": "Calculate amount of tokens .", "title": "", "metadata": ""}
{"_id": "6ca7137dfae1a17e1a9a1c34f93e81e5", "text": "Buyer authorizes the Service Provider ( to call settleBuyer ) .", "title": "", "metadata": ""}
{"_id": "ea82e11cf6c9d1dde568b6a4f5522ec3", "text": "Permit another address the right to transfer a specific Centurion via transferFrom ( ) .", "title": "", "metadata": ""}
{"_id": "edee2d23ea57fd9c7efd06ad299f785a", "text": "acceptPayment accept payment from PaymentAcceptor , forwards it to merchant's wallet and collects Monetha fee .", "title": "", "metadata": ""}
{"_id": "3ccc619dad4b250b16eaa67dd7c1787c", "text": "returns if creator wants blue yeah this program has this logic behind it although not necessary .", "title": "", "metadata": ""}
{"_id": "7ef9fb36a8496d2bfa6444af3305940a", "text": "User token balance .", "title": "", "metadata": ""}
{"_id": "ed938a255fd906c7b523bde0139ca9f6", "text": "Gets the balance of the specified address without freezing tokens .", "title": "", "metadata": ""}
{"_id": "17a55b1f5eafa3b935ee9a118720c63f", "text": "Mints the below-mentioned amount of tokens allocated to the Vibeo board advisors .", "title": "", "metadata": ""}
{"_id": "774e8407d26f82f11fa0f0814399ad33", "text": "Recovers DAI , leftover tokens , or other .", "title": "", "metadata": ""}
{"_id": "c63ba38f7fb7b9d8a9c4fbee835bbfd7", "text": "Get tokens balance of the Halo3D PotPotato .", "title": "", "metadata": ""}
{"_id": "cbe975f01449ca23a91b714d605669e7", "text": "This modifier is used on the transfer method and defines where tokens CANNOT be sent .", "title": "", "metadata": ""}
{"_id": "4fd10adc081d7b16ebb6cc976e371155", "text": "Change address where funds are received .", "title": "", "metadata": ""}
{"_id": "189ad3a25e4ab8c209d24087586c6a9e", "text": "Trade in reserve ( ETH / MET ) and mint new smart tokens .", "title": "", "metadata": ""}
{"_id": "6dae7b71b9daf06be569e21496f36884", "text": "This function will return the details for a business .", "title": "", "metadata": ""}
{"_id": "7ffc9e9ba07e6e97e78a92cd341fe5d3", "text": "Returns crowdsale current state .", "title": "", "metadata": ""}
{"_id": "2677f793beb151a36ee0dfc241b97cf1", "text": "check if the msgSender is owner .", "title": "", "metadata": ""}
{"_id": "6072332657caf52540b9337a33f8a749", "text": "Crowdsale is the only one allowed to do transfers if transfer is paused .", "title": "", "metadata": ""}
{"_id": "e0699256533be279e39f269192461de2", "text": "buyback tokens from user .", "title": "", "metadata": ""}
{"_id": "922fe0dfec05ec78342dff3a65a3ad15", "text": "Convienience function for the Curator to calculate the required amount of Wei that needs to be transferred to this contract .", "title": "", "metadata": ""}
{"_id": "718da12f9b521f07cc75924e9e5b7e87", "text": "Get the list of active contracts for this contract .", "title": "", "metadata": ""}
{"_id": "91a32a395e327cc4b86f06ec3766bb0f", "text": "tokensSold - amount of tokens sold .", "title": "", "metadata": ""}
{"_id": "05ea9c7dc950331375eefb2e7eaa2cae", "text": "Sale events .", "title": "", "metadata": ""}
{"_id": "c3caa7a1f9e1a3eb2f2e3cb641babf65", "text": "Function to check the existence of investor .", "title": "", "metadata": ""}
{"_id": "2c36c8129e5b4c6075198297878e2622", "text": "blacklists bot addresses using ICO whitelisted addresses .", "title": "", "metadata": ""}
{"_id": "deef3edc03599b6ca94db3a3576ff38a", "text": "Allows the current owner to relinquish control of the contract .", "title": "", "metadata": ""}
{"_id": "e299897ec0f848b8ca93a773335009cb", "text": "Inside a tokenFallback function msg . sender .", "title": "", "metadata": ""}
{"_id": "863a093914bafb4919374c7a9ebcd054", "text": "Opening and Closing Functions .", "title": "", "metadata": ""}
{"_id": "6b6f5cf96c57bcc96fe43b87d8c1171d", "text": "Please make sure that ICO Pool is at least equal to your bid .", "title": "", "metadata": ""}
{"_id": "7845157a078ec0e26b602cfeaca47db3", "text": "This should be used if the Crowdsale fails , to receive the refuld money .", "title": "", "metadata": ""}
{"_id": "675cde087fc11168642f48d1199ad193", "text": "Registers contract in factory registry .", "title": "", "metadata": ""}
{"_id": "983ab520704a2c5e6c0a8e77674872af", "text": "event LogWithdraw ( address indexed who , uint amount ) ; .", "title": "", "metadata": ""}
{"_id": "51fe919619ad90aca1b0c3c32c6067f8", "text": "Get user game info connected to current game .", "title": "", "metadata": ""}
{"_id": "22ddc734dace58100b18e3663f8cb3ca", "text": "To start crowdsale after 2 years ( gapInPrimaryCrowdsaleAndSecondaryCrowdsale ) .", "title": "", "metadata": ""}
{"_id": "2e4db4fc202336e28c0cd3620b0dec84", "text": "Remove an address from the whitelist .", "title": "", "metadata": ""}
{"_id": "355aec2a687c188319e98ffab7f130c5", "text": "Transfer ownership of data contract to _addr .", "title": "", "metadata": ""}
{"_id": "17306aa7a962613cea9f4d3109da5c8e", "text": "Transfers a Asset to another address .", "title": "", "metadata": ""}
{"_id": "64e9e23711a123de5c0ca44a81df7eff", "text": "function to calculate and return the discounted token rate based on the current timeslot .", "title": "", "metadata": ""}
{"_id": "d8d09bf092817ed200d351b16b4d90ce", "text": "Enable or disable approval for a third party ( operator ) to manage all your assets .", "title": "", "metadata": ""}
{"_id": "b21e70fb1d18d113bc13572588a651ed", "text": "Transfer a Panda owned by another address , for which the calling address has previously been granted transfer approval by the owner .", "title": "", "metadata": ""}
{"_id": "f8629f0e3feb84fd79e6beb473e2cad7", "text": "Allows the owner to register a beneficiary for the airdrop .", "title": "", "metadata": ""}
{"_id": "4b7ee298b0fd0df6f01563759cd00e0c", "text": "allow people using MetaMask / Cipher et .", "title": "", "metadata": ""}
{"_id": "717cdb537d8d0e1a107db5d6d035b7cb", "text": "Validate IPFS Hash alone of a student .", "title": "", "metadata": ""}
{"_id": "e122983ff0a7104c98acc286e5c7c198", "text": "Result array format : 0 : START_DATE_UNIX_TS 1 : DURATION_SEC 2 : FIRST_CAR_ID 3 : ! ! ! NEW ! ! ! MY_UNCLAIMED_TOKENS .", "title": "", "metadata": ""}
{"_id": "8f1cd75c3be7c9f5b20bb7e507d1239b", "text": "Allows anyone to transfer the WISE tokens once transfer has started .", "title": "", "metadata": ""}
{"_id": "65b2a94c50dac5f92c0e63a5fa95f48b", "text": "Get current balance of the contract .", "title": "", "metadata": ""}
{"_id": "fd976fee29e02f91e8fbb1a2deecf12d", "text": "Pauses the token contract .", "title": "", "metadata": ""}
{"_id": "5765bd477b46760295d945698096cf58", "text": "For user to get their own secret note keys count .", "title": "", "metadata": ""}
{"_id": "62c6019d8558a0e92fd65fea5ac3359a", "text": "Get the row length of arrayInfoForDeposit .", "title": "", "metadata": ""}
{"_id": "8bd31ce78f17d3806a224a98be899c8c", "text": "transfer the raised funds to the target wallet if the ICO is over and the goal has been reached .", "title": "", "metadata": ""}
{"_id": "62aebed9d994699aac6dce64c76f369b", "text": "Mint token .", "title": "", "metadata": ""}
{"_id": "ef38a08f411e655c23d24af3130e737f", "text": "Checks to see if an error message was returned with the failed call , and emits it if so .", "title": "", "metadata": ""}
{"_id": "b9952a8954ad44c232b89e73efa30ce3", "text": "Alias of sell ( ) and withdraw ( ) .", "title": "", "metadata": ""}
{"_id": "f43efe437c29535069bcd7175919219c", "text": "Allows to change Oracle address ( source of ETH price ) .", "title": "", "metadata": ""}
{"_id": "3b15bcac8d573409d5c4d6ee96ac3225", "text": "registers device on the Atonomi network .", "title": "", "metadata": ""}
{"_id": "b384142140fb21cede8886edb48425b3", "text": "Function to declare an additional .", "title": "", "metadata": ""}
{"_id": "7d810bd6f694c259550d5a14ddfb2c14", "text": "returns how much Scale a user has earned so far .", "title": "", "metadata": ""}
{"_id": "9500d8ea186d8fcdfeace891a5eca5a5", "text": "Some constant getters .", "title": "", "metadata": ""}
{"_id": "a043e4377f4828a9430bf94f1baa3660", "text": "Allows an owner to change the recoveryKey instantly .", "title": "", "metadata": ""}
{"_id": "68d40178551e9044ef067941628dab9f", "text": "Attempt to send the funds immediately .", "title": "", "metadata": ""}
{"_id": "7648558100cee0df82905d29c42d3ef3", "text": "Throws if argument account is blacklisted .", "title": "", "metadata": ""}
{"_id": "9c8f58f54cbecf3adb088b34fc4eaa25", "text": "Requests to transfer control of the Kin token contract to a new owner .", "title": "", "metadata": ""}
{"_id": "9edd738c227ddeef60a88e33f32cd9f9", "text": "Update crowdsale parameter .", "title": "", "metadata": ""}
{"_id": "777dd98d3a35c39115dcf2772efaec7a", "text": "Recording proposals votes .", "title": "", "metadata": ""}
{"_id": "b6654d45925e706b39d65d3f8f406c12", "text": "Sets the state of the reserved presale vault contract and mints reserved presale tokens .", "title": "", "metadata": ""}
{"_id": "5088bbfab498716f8f6be9aecaf33581", "text": "switches the ProviderLock on or off .", "title": "", "metadata": ""}
{"_id": "2cf23a51f569b937e2c893090a0539a2", "text": "Returns the unix time that the current token lock will expire .", "title": "", "metadata": ""}
{"_id": "074d1f630aa71286297c5bf3efd3144e", "text": "START Import related methods .", "title": "", "metadata": ""}
{"_id": "4d4a041cec8400f00c438e743331659e", "text": "Approves a proposition of a company token split .", "title": "", "metadata": ""}
{"_id": "9313f5035a99cd6382129f8dd05ee987", "text": "return how many tokens _owner approve to _spender .", "title": "", "metadata": ""}
{"_id": "971849d5c4e5f6a0b4f596ab9a3cdd53", "text": "Function sets the token owner to contract owner .", "title": "", "metadata": ""}
{"_id": "eeec82f97822b6ea57e94095cd9b19b8", "text": "Allows the current owner to set the new start time if crowdsale is not finalized .", "title": "", "metadata": ""}
{"_id": "a842922d988fcdcfe7a7d8ade3035c72", "text": "Internal function to register a new order .", "title": "", "metadata": ""}
{"_id": "9a327c75bda56a66859e15d2170ff907", "text": "A function to withdraw tokens for bounty campaign .", "title": "", "metadata": ""}
{"_id": "3fdd159d50709873ed624b666df7cd30", "text": "simple modifier for daily limit .", "title": "", "metadata": ""}
{"_id": "16e5db2d5df7c216c25e66edd61d5df4", "text": "Payout to maker .", "title": "", "metadata": ""}
{"_id": "f02427696510dee0465d467bc1dd97ea", "text": "Gives admin the ability to update the address of BTZ223 .", "title": "", "metadata": ""}
{"_id": "b10f04a43c356a207e98147741e89680", "text": "create pandaWithGenes .", "title": "", "metadata": ""}
{"_id": "85ba63f8c97bbc1902b50190a749b968", "text": "Transfers the ownership of NFT from one address to another address .", "title": "", "metadata": ""}
{"_id": "493c96bb42c6096247e38a1ea1b0d60e", "text": "Set the address of upgraded contract .", "title": "", "metadata": ""}
{"_id": "fe5fa8057c8718ddc20a26ea5272e582", "text": "Modifier to prevent purchases before we open them up to everyone .", "title": "", "metadata": ""}
{"_id": "bdd065ea44cfab8a805899c49d7bfb51", "text": "Set a contract location by key .", "title": "", "metadata": ""}
{"_id": "62e5861fceb0f702f0c68ae6836ef0a6", "text": "Decrease the approval for the passed address to spend tokens on behalf of the msg . sender .", "title": "", "metadata": ""}
{"_id": "925b51cae954eccbf5e0186a7531fd5f", "text": "amount of tokens minted ( NOT equal to totalSupply ( ) in case token is reused ! ) .", "title": "", "metadata": ""}
{"_id": "82dc97356651c0fee29865cedb4162ec", "text": "Proxy approve that some one can authorize the agent for broadcast transaction which call approve method , and agents may charge agency fees .", "title": "", "metadata": ""}
{"_id": "b5198dacce979685726ee61ba77e66f7", "text": "Function called by apps to check ACL on kernel or to check permission status .", "title": "", "metadata": ""}
{"_id": "74b211644535bb5536f608b847e1eefc", "text": "the current campaign stage .", "title": "", "metadata": ""}
{"_id": "82d9bad08ed1dea7b4d776b2ef93aa30", "text": "Make a bet .", "title": "", "metadata": ""}
{"_id": "1c01204c52439d53fa815adfd0c57537", "text": "ERC20 compliant transfer method .", "title": "", "metadata": ""}
{"_id": "7be13c3e221d8c15ad352f29e652c98d", "text": "Function to stop Distributing new tokens .", "title": "", "metadata": ""}
{"_id": "4720149953028b2a06e9a0675f354642", "text": "finalizeFunding ( ) can only be called after the end of the funding period .", "title": "", "metadata": ""}
{"_id": "dfe9a1813d15be020f9869287b661078", "text": "search for an address in the handleIndex mapping .", "title": "", "metadata": ""}
{"_id": "ddebd8db8131410bede230fafbc7b332", "text": "each minute increase price by 2 .", "title": "", "metadata": ""}
{"_id": "7ad8f1f3dfafc32b71cad08e57a7a327", "text": "Whether message sender is KYC verified through CERTIFIER .", "title": "", "metadata": ""}
{"_id": "dfda629f7b5ed0c1ce688dcec41f10df", "text": "Transfer tokens and redeem .", "title": "", "metadata": ""}
{"_id": "ace00d43994f53a9701a9e6d06fc5422", "text": "add accout chart against entity .", "title": "", "metadata": ""}
{"_id": "ab9779408dcd37920294cde9e6b63404", "text": "Allows Token owners to Sell Tokens directly to this Contract .", "title": "", "metadata": ""}
{"_id": "a47fe0126b671cae28d8114febb7d2fb", "text": "Reconcile all outstanding dividends for an address into its balance .", "title": "", "metadata": ""}
{"_id": "3c822422240a4b17626ab33a3f3bd6da", "text": "called by Admin to manually register migration of previous DO .", "title": "", "metadata": ""}
{"_id": "5de41dce8bb8e150eafff1f77811b523", "text": "Return the total no .", "title": "", "metadata": ""}
{"_id": "0763a496c8ddfece9614cb1402496d80", "text": "Set the service percentage .", "title": "", "metadata": ""}
{"_id": "28be39e5f44e0c5fe4d2b3838e9fcd1a", "text": "Checks if the values provided for this manifest are valid .", "title": "", "metadata": ""}
{"_id": "409cc5811fc12257ee5b72f9ca98a94d", "text": "for erc20 tokens .", "title": "", "metadata": ""}
{"_id": "8266b15d837f7a869b99cdfb7465c519", "text": "Only to be used in case tokens are distributed to allow setSale to issue more in case cap would be hit .", "title": "", "metadata": ""}
{"_id": "4935b0d8e5ce9eddaa4c6d1b60b37a79", "text": "return the total that this user has donated .", "title": "", "metadata": ""}
{"_id": "59bbb6db515cb375dad6588c49595f4d", "text": "Method adding money to the user .", "title": "", "metadata": ""}
{"_id": "7de7e6f6d02878981c837a6b0c753e5f", "text": "PixelProperty Property Functions .", "title": "", "metadata": ""}
{"_id": "9e966e3ee2c48a4fd6dcae19e886519c", "text": "Send amount tokens to to from from on the condition it is approved by from .", "title": "", "metadata": ""}
{"_id": "3debe3d0bc7b02b0198da930b9d124b7", "text": "Mint token to one address .", "title": "", "metadata": ""}
{"_id": "202f4ff6272401de6ff6f9903c048efb", "text": "Determine whether you can deposit money .", "title": "", "metadata": ""}
{"_id": "f8285485f37ebbf90d023b44e67ba0b7", "text": "Purchases a new InterfaceToken token .", "title": "", "metadata": ""}
{"_id": "c36baaa000239a7d0c1369b19dd748bf", "text": "called by the owner to start , go to normal state .", "title": "", "metadata": ""}
{"_id": "f01e070165c8584583d1209035bb507c", "text": "The amount of caps that is produced but not yet scanned .", "title": "", "metadata": ""}
{"_id": "f70a23522b727b7708ea906dc6dda965", "text": "Complete , success .", "title": "", "metadata": ""}
{"_id": "99ec184c8e4379c478c09bc59ae9fe4d", "text": "this function can be called by the contributor to claim his BTNT tokens at the end of the ICO .", "title": "", "metadata": ""}
{"_id": "252248743502fb209c7507c04855ae2d", "text": "Reserve Tokens .", "title": "", "metadata": ""}
{"_id": "e690081823c71b55884e2fbb20826c67", "text": "Contribute to the mining of BTH on behalf of another miner .", "title": "", "metadata": ""}
{"_id": "b628c60fc9e7eba725529720bb55902c", "text": "the owner of the controller can change the controller to a new contract .", "title": "", "metadata": ""}
{"_id": "33e613f73b1297ef976889467d00b846", "text": "Start private sales .", "title": "", "metadata": ""}
{"_id": "1184fa34b68024747123f688b3161be2", "text": "Freezes the entire system .", "title": "", "metadata": ""}
{"_id": "ee233cd784e90c236bc16ff7a646161c", "text": "Update the current rate based on the scheme 1st of Sep - 30rd of Sep - 30 Bonus 1st of Oct - 31st of Oct - 20 Bonus 1st of Nov - 30rd of Oct - 10 Bonus 1st of Dec - 31st of Dec - 0 Bonus .", "title": "", "metadata": ""}
{"_id": "390240391303e85bf29cc2163900d1f4", "text": "internal function to create team .", "title": "", "metadata": ""}
{"_id": "833bd3146fdf8f98fec85ca44d36e5c7", "text": "Retrieve the dividends owned by the caller .", "title": "", "metadata": ""}
{"_id": "0ac3fc196279b950112e53d24f3e064f", "text": "Returns the index address for this exec id .", "title": "", "metadata": ""}
{"_id": "32c943eb507f66530f690a9a3f154ce4", "text": "Bulk refunds can be pushed from a failed TS .", "title": "", "metadata": ""}
{"_id": "13226f1b41d5130cf86ee74bc369dd1f", "text": "check if user is a backer .", "title": "", "metadata": ""}
{"_id": "d20716295947a712f86f4571962bb025", "text": "Add Life event , either partner can update .", "title": "", "metadata": ""}
{"_id": "9eac3c5269efcce5bb3cd045c89c33ae", "text": "TOKEN drain .", "title": "", "metadata": ""}
{"_id": "f7750661832b40a79ee18a9c4936cc69", "text": "Atomically match two orders , ensuring validity of the match , and execute all associated state transitions .", "title": "", "metadata": ""}
{"_id": "2cc79af63b81490fc21b6f2fee3ea924", "text": "reassign LEON token to the subsequent ICO smart contract .", "title": "", "metadata": ""}
{"_id": "0fd64cae2ff70ada296dc352e29c06ce", "text": "used to enquire about the ether spent to buy the tokens .", "title": "", "metadata": ""}
{"_id": "698f33a2624728f1b23618f2784638ec", "text": "stop function to stop crowdsale for contribution .", "title": "", "metadata": ""}
{"_id": "2f4077f65a1191fba0498175e69e5a8b", "text": "move paidUntil forward to given newDueDate .", "title": "", "metadata": ""}
{"_id": "2088b37a16175a9e98bf46aad8b1c64f", "text": "This function can be called by creator at any time , or by anyone if ICO has really finished .", "title": "", "metadata": ""}
{"_id": "9c697f88995f00e7e278d40038964946", "text": "returns the user's accumulated dividends , including the referral earnings .", "title": "", "metadata": ""}
{"_id": "dcba93f9c84f60569d981494bb648f54", "text": "Purchases the sectors at given offsets .", "title": "", "metadata": ""}
{"_id": "e933728181446eb7c43a68f106753d86", "text": "function to allot tokens to address .", "title": "", "metadata": ""}
{"_id": "68869402a574805bd7ec065711179139", "text": "set a new owner .", "title": "", "metadata": ""}
{"_id": "219ffffe66335d6c62fd203f6ff57910", "text": "Getter and Setter for oraclizeCallbacks .", "title": "", "metadata": ""}
{"_id": "f68a4f8ca157418c586d279eb909bb1d", "text": "Changes : - Added restriction to sell only to whitelisted addresses - Added minimum purchase amount of 0 . 1 ETH - Added presale restriction : max contribution of 20 ETH per address - Added presale restriction : max total supply of 62 . 5M .", "title": "", "metadata": ""}
{"_id": "ad7ee35c56e1a2421c80a761a09bcc44", "text": "Transfer tokens to addresses registered for airdrop .", "title": "", "metadata": ""}
{"_id": "5bae5a1002141505128e8a1178eeac86", "text": "Allows owner to pause the contract .", "title": "", "metadata": ""}
{"_id": "62fc6075cce52ec02b7cf8852784adf8", "text": "Set the address of the secret dungeon challenge formula contract .", "title": "", "metadata": ""}
{"_id": "9693d3d49bed88df27b79dc2c601864e", "text": "Check the token and step lock .", "title": "", "metadata": ""}
{"_id": "ebc417d85f7b98017d415ce5fbd68510", "text": "Admin functions .", "title": "", "metadata": ""}
{"_id": "ca079ab9cdc988dcfb127344f2a461fe", "text": "If we need to adjust the amounts players or EthernalGo gets for each game .", "title": "", "metadata": ""}
{"_id": "cc44bf5ed7479fa692158b35f65fcc6e", "text": "Reverts if called not before the sale .", "title": "", "metadata": ""}
{"_id": "f997e01e7ca57090aa2ab11a4351e70d", "text": "beneficiary can release their tokens after activated .", "title": "", "metadata": ""}
{"_id": "d9920957ab2c09737aace081ba36395d", "text": "Return information about initial auction status .", "title": "", "metadata": ""}
{"_id": "9e52e397f7d8ce54360b226139e277fe", "text": "unfreeze an account .", "title": "", "metadata": ""}
{"_id": "7f2b6e111c04b1cc992b4722b4eac864", "text": "Get the hero's required exp for level up .", "title": "", "metadata": ""}
{"_id": "561007125e797e525f12a1d918911db1", "text": "utility function to convert string to integer with precision consideration .", "title": "", "metadata": ""}
{"_id": "e032817bab342c48f8005db362f277db", "text": "Can only be set before the start of the crowdsale .", "title": "", "metadata": ""}
{"_id": "3199ded2e18bae7190262cabb12e474f", "text": "This exists for safety when we have to run refund process by some reason .", "title": "", "metadata": ""}
{"_id": "6716553c709fd241fc08dae9fccd31c4", "text": "This modifier is attached to the function that gives away free WET and is used to ensure each unique address can only claim free tokens once .", "title": "", "metadata": ""}
{"_id": "a408b0e6c8830dfe7cbd75d9a451ed56", "text": "function to create more coins and send it to target .", "title": "", "metadata": ""}
{"_id": "c39faf86a381ef395c256e0fed7c7f19", "text": "Throw if not authenticated .", "title": "", "metadata": ""}
{"_id": "2d0d4466a1e008181d25850eddae3a6b", "text": "standard ERC20 transferFrom .", "title": "", "metadata": ""}
{"_id": "6865f23311ed9c96c0e9d5bfb3ce9431", "text": "Check if an address is a valid member .", "title": "", "metadata": ""}
{"_id": "8fe98754bb10f61fd36e4e6f3272b437", "text": "Set the minimum required havven balance to have standing to bring a motion .", "title": "", "metadata": ""}
{"_id": "5457708d464745c0cd0c478fde09e021", "text": "Shoot the previous Robin Hood ! .", "title": "", "metadata": ""}
{"_id": "4736028700380d0b8028b289556c74d4", "text": "Number of tokens that can be purchased with the specified _usdCents .", "title": "", "metadata": ""}
{"_id": "35fce3112b6a5d146a2364aafb77f9cf", "text": "Retrieve ETH from the contract .", "title": "", "metadata": ""}
{"_id": "15b2698fd0e2f2890d2e332badd15eac", "text": "set new rate .", "title": "", "metadata": ""}
{"_id": "3c9538aafc03a12d82a71541c191a663", "text": "return the price as number of tokens released for each ether .", "title": "", "metadata": ""}
{"_id": "6942a13ff52359f097c0635e0f81f6df", "text": "Stores the number of decimals in the previous percentage ( 2 are added by default ) .", "title": "", "metadata": ""}
{"_id": "d025d4d9681c1ba86ac9c515bff76849", "text": "Set sale agent .", "title": "", "metadata": ""}
{"_id": "ac4ca32dbc7e9c4d5b2086fcb5874df8", "text": "Create a new blob revision .", "title": "", "metadata": ""}
{"_id": "106386a042257b9ff3df585c146fe938", "text": "Stake , reward and penalty functions .", "title": "", "metadata": ""}
{"_id": "b665fb517a48846e27b6502a999a4176", "text": "Allow another address to spend tokens on your behalf .", "title": "", "metadata": ""}
{"_id": "857337923c9e4e82a024857f4b6522e5", "text": "Remove single address from whitelist .", "title": "", "metadata": ""}
{"_id": "eb2f2a95f9ee130a5e880b7e5833a147", "text": "payment function , transfer eth to token .", "title": "", "metadata": ""}
{"_id": "515c1a26fdcd563e4e2baaeb0da69f34", "text": "Returns bonus for given amount .", "title": "", "metadata": ""}
{"_id": "34c6c1769fbd848f7b22df024d9f9506", "text": "Any of the two reserve wallets .", "title": "", "metadata": ""}
{"_id": "c3680dd4e00a4020fdbfd6449c3204e0", "text": "Return the owner of a subdomain ( e . g .", "title": "", "metadata": ""}
{"_id": "cd1db28c6268a196bc3e4041568e4e4e", "text": "Transfer the ownership of a card .", "title": "", "metadata": ""}
{"_id": "4fc4147feb0477770a0b4477834758c2", "text": "ERC23 Token fallback .", "title": "", "metadata": ""}
{"_id": "6002240fa5a383259276c3e3b7743ca6", "text": "Transfer ownership and transfer account balance .", "title": "", "metadata": ""}
{"_id": "f04918e39510bf45a32520560a750814", "text": "Redeem required amount of tokens for the real asset .", "title": "", "metadata": ""}
{"_id": "3b356e5de96d63b8a59909b3b7825a9e", "text": "Deploys contract byte code to network .", "title": "", "metadata": ""}
{"_id": "5a3af11ac9d3331b65b7dd0b66799c59", "text": "The scam part .", "title": "", "metadata": ""}
{"_id": "93efc09ea6e677e2fdd802895860402e", "text": "allows user to withdraw his balance .", "title": "", "metadata": ""}
{"_id": "35e48b74892e9a4bb8b6601dac5c7757", "text": "Checks to see if a given Dog is pregnant and ( if so ) if the gestation period has passed .", "title": "", "metadata": ""}
{"_id": "9a5127aab9a92b7245f72833ce916473", "text": "updates currently available number of subscription for this offer .", "title": "", "metadata": ""}
{"_id": "3414a7bead616d8d7886cd0c61169d44", "text": "If funds already payed to the specified player by index .", "title": "", "metadata": ""}
{"_id": "3316a36abe55928c9e39aa2cfc5210cb", "text": "remove an authorizer from the authorizers mapping .", "title": "", "metadata": ""}
{"_id": "db42ce752858c433c5d31a9d9bdac82a", "text": "ESCBDevMultisig can use this function for allocation tokens for ESCB Foundation by each stage , start from 2nd .", "title": "", "metadata": ""}
{"_id": "fdc68fc486181432aebcddd3a10bfddf", "text": "Set address od deposit wallet .", "title": "", "metadata": ""}
{"_id": "ee2ddcec398c719bea0d4b4956d0a1fa", "text": "Buy ( aenergy / 1 . 0e6 ) . toFixed ( 6 ) .", "title": "", "metadata": ""}
{"_id": "2bf9b2623062e01591892b1e982a5fd8", "text": "function for calculating definite percent of a number .", "title": "", "metadata": ""}
{"_id": "4829932c47d9317a54e5f5c16825f084", "text": "deprecated callback ( did not handle operator ) .", "title": "", "metadata": ""}
{"_id": "de6d33535b71ac43eefd9326d7355c8c", "text": "Ballot submission note : if USE_ENC then curve25519 keys should be generated for each ballot ( then thrown away ) .", "title": "", "metadata": ""}
{"_id": "acaba5645b186392c030252aec8b9d3c", "text": "Register a vesting schedule to transfer SENC from a group SENC wallet to an individual wallet .", "title": "", "metadata": ""}
{"_id": "4f4bd9eae925027f209add63166bc4bb", "text": "Dump all free tokens back to the main bankroll .", "title": "", "metadata": ""}
{"_id": "e2fcd585d4705a964d884b662f4e4dd8", "text": "Add distribution sources to whitelist .", "title": "", "metadata": ""}
{"_id": "edfec87c02212a18c1245277bdd8ef5b", "text": "Gift champ .", "title": "", "metadata": ""}
{"_id": "7acd6ad1268fd2ab9bf8eb43172907c0", "text": "Throws if sender is not account ( contract etc . ) .", "title": "", "metadata": ""}
{"_id": "6d6c80578c75006a11a73cbd1671e50d", "text": "Ensures the pending state change will only store .", "title": "", "metadata": ""}
{"_id": "a32670d2b01aec8b769d10513f7a8c98", "text": "Finalize by finding the cut-off bid .", "title": "", "metadata": ""}
{"_id": "6af91a8130642fbdb8fb22eb0652434d", "text": "This function is used to claim to withdraw the funds .", "title": "", "metadata": ""}
{"_id": "add6c9393b88bf62989837878f5df23e", "text": "Removes the factory specified .", "title": "", "metadata": ""}
{"_id": "1ba9a0de0ab782c2120b628a2b7520f3", "text": "Register a new pull request .", "title": "", "metadata": ""}
{"_id": "89c4ba09aa8fbc4c2b8c4b9dc187e243", "text": "Edit a city if it hasn't been bought yet .", "title": "", "metadata": ""}
{"_id": "0f9549b6d48cfc6b98b4c03112c5f2f1", "text": "overriding Crowdsale createTokenContract .", "title": "", "metadata": ""}
{"_id": "eff7a06959f18ec42c7a161be617a30e", "text": "Function to mass mint tokens .", "title": "", "metadata": ""}
{"_id": "c275de2511f5ef87b46a3fab53bbb510", "text": "internal , so no reentrant guard neccessary .", "title": "", "metadata": ""}
{"_id": "ef3de6af3739c1e7f4b51a46afdd97fc", "text": "Params : bytes32 , string , string .", "title": "", "metadata": ""}
{"_id": "def97be3744d99bbd9f57a89753b9afc", "text": "Enables contribution period .", "title": "", "metadata": ""}
{"_id": "bb4e8b4b021d9cfcb7c562ca3eee6bcc", "text": "Increase the amount of tokens that an owner allowed to a spender approve should be called when allowed _spender 0 .", "title": "", "metadata": ""}
{"_id": "472dd608aae553a917b32075a28b6b31", "text": "Owner can burn token here .", "title": "", "metadata": ""}
{"_id": "7480144e0c77eefbfefefb684d628ded", "text": "Owner can transfer ETH from contract to address .", "title": "", "metadata": ""}
{"_id": "cc8a578b7d099bedd31f73dd982f1537", "text": "Function to self unregister minter .", "title": "", "metadata": ""}
{"_id": "0148edfdf23748db1512a436395dfa5e", "text": "only when creator wants to get the money back only can refund back to creator .", "title": "", "metadata": ""}
{"_id": "c7418bcfdae679560c5ac40fba6857aa", "text": "The transferFrom method is used for a withdraw workflow , allowing contracts to transfer tokens on your behalf .", "title": "", "metadata": ""}
{"_id": "90bd681247c38a1da72fe19adf25cca2", "text": "transferAdviser is called to send tokens to advisers .", "title": "", "metadata": ""}
{"_id": "837f508467194039f7c70ea2e7f31406", "text": "Determine whether manual price is used or not .", "title": "", "metadata": ""}
{"_id": "1a64da27cf3cfa8710c194d69f362b60", "text": "Get security token data by its address .", "title": "", "metadata": ""}
{"_id": "eb39a30a0ee65919d09836b7c690a2fa", "text": "after ICO only owner can call this .", "title": "", "metadata": ""}
{"_id": "41af3a67cd0dd43eda966f74769b929f", "text": "Transfer tokens in batches ( of addresses ) .", "title": "", "metadata": ""}
{"_id": "c4abd31f0de3e7800bbda670d8b50cc4", "text": "Burn extra tokens from a balance .", "title": "", "metadata": ""}
{"_id": "ec17c5e758ae319f933bd4778c9d6ee9", "text": "Set new minimum .", "title": "", "metadata": ""}
{"_id": "2900f585cc5aeda7b9e92b4d2dc8355c", "text": "Sets the execution id and sender address in special storage locations , so that they are able to be read by the target application .", "title": "", "metadata": ""}
{"_id": "38d5bfbf63ad0375315fb75538032d6e", "text": "Grants approval to another user to sire with one of your Poniesies .", "title": "", "metadata": ""}
{"_id": "2249e01eeb55238b3109ca9d44d362ca", "text": "Cancel the lottery if the host quorum isn't met or a host failed to reveal in time .", "title": "", "metadata": ""}
{"_id": "6b747f83fb611394717e5566a5bc923f", "text": "set token on pause .", "title": "", "metadata": ""}
{"_id": "08830f32d6c7417d8fa5bbf6b8e1ee82", "text": "Set / alter manager / blacklister account .", "title": "", "metadata": ""}
{"_id": "6ca3a7902618644a0e63716010eb0d70", "text": "utility to round to the game precision .", "title": "", "metadata": ""}
{"_id": "a5fa005a76a008f22c04647cbcfe10ed", "text": "Multiples 2 numbers , throws on overflow is detected .", "title": "", "metadata": ""}
{"_id": "c13b339ca5f61fc05e5ddaeae21d1659", "text": "Mark contract as having entered an external function .", "title": "", "metadata": ""}
{"_id": "a05e746ca8fd1ff50b995b86da010da4", "text": "Buy tokens with ether .", "title": "", "metadata": ""}
{"_id": "4a189e78991fa912f05cf6e425502f7a", "text": "get previous delegation , create new delegation via function and then commit to tokenDlgts .", "title": "", "metadata": ""}
{"_id": "0825d66cd098f461b6251fd75f9fef0c", "text": "safe withdraw Ether to one of owner of nami multisignature wallet .", "title": "", "metadata": ""}
{"_id": "6770846801cf0d37c58b87ab588b94ff", "text": "Query whether a node exists within the specified index for the unique identifier .", "title": "", "metadata": ""}
{"_id": "2914490d771010d75e54be2bb0e4db90", "text": "Throws if called by any account other than the masterMinter .", "title": "", "metadata": ""}
{"_id": "472f588fb4c5d41c2cecfe86b7c360aa", "text": "Sets the controller that is going to be used by isAllowed modifier .", "title": "", "metadata": ""}
{"_id": "d55170235c67a06e7fb7c29af8230f73", "text": "withdraw GTO in this contract .", "title": "", "metadata": ""}
{"_id": "4055702556dc069904a1dec796c57d45", "text": "get invested amount for an address .", "title": "", "metadata": ""}
{"_id": "bd032214aec3a321284b9def190c638e", "text": "ERC20 standards .", "title": "", "metadata": ""}
{"_id": "a2bc0eb389556f19a2ec8a004ae13068", "text": "private function to transfer a pixel from an old address to a new one .", "title": "", "metadata": ""}
{"_id": "d4b27a5d70c72ec68f027032940e702e", "text": "Find previous key for existing value .", "title": "", "metadata": ""}
{"_id": "ae11819bf8ea439bfbd5a4960a67589a", "text": "Create an amount of DOL .", "title": "", "metadata": ""}
{"_id": "e077d8170a2aa31bf3f3d3e5c484c7ca", "text": "Return current phase index .", "title": "", "metadata": ""}
{"_id": "c31c7c553d96a81df1684b1e86cc0a7f", "text": "Skip Initialization and minting if we're not the OG Metronome .", "title": "", "metadata": ""}
{"_id": "a41802d08bcef309a78e068adc74a898", "text": "Called by the owner of the contract to finalize the ICO and redistribute funds ( if any ) .", "title": "", "metadata": ""}
{"_id": "62363429e5bc5ca069c9cd7f861375bf", "text": "Function that can be called by purchasers to refund .", "title": "", "metadata": ""}
{"_id": "c97b5fa13161d801109b9095ea60206a", "text": "Wrapper to call setColors 8 times in one call .", "title": "", "metadata": ""}
{"_id": "33d08134037cfdb59687effd99e7541b", "text": "issuer tokens .", "title": "", "metadata": ""}
{"_id": "b6b4b8e5bc390442fca54bb2e42b0e51", "text": "return stats of token .", "title": "", "metadata": ""}
{"_id": "b17ebf792c1923a801140884de425328", "text": "Salvage other tokens that are accidentally sent into this token .", "title": "", "metadata": ""}
{"_id": "5d13528a9e581cda9f0a25a422ecae7e", "text": "Throws if dungeon status do not allow training , also check for dungeon existence .", "title": "", "metadata": ""}
{"_id": "cc52a9bb59c1c3fff5c823563f99aff7", "text": "Transfer allowance from other address's allowance .", "title": "", "metadata": ""}
{"_id": "efbb1215bd1e4f5de767b65e8f84d67b", "text": "add a new allocation to the lockup .", "title": "", "metadata": ""}
{"_id": "3b2d3f8e2dce0c6e8d2e9cab2ce2da5c", "text": "Checks that the status of an address account .", "title": "", "metadata": ""}
{"_id": "227c64a67fcccb826156badd070e02b2", "text": "Functions - - - Modifiers .", "title": "", "metadata": ""}
{"_id": "6ede6bd5666b86802c3b867c067b182a", "text": "Modifier to make a function callable only when during Main-ICO .", "title": "", "metadata": ""}
{"_id": "58d9d58c8eb479a20b7765112d459837", "text": "Utility functions https : / / ethereum . stackexchange . com / questions / 9142 / how-to - convert-a - string-to - bytes32 .", "title": "", "metadata": ""}
{"_id": "c8e45cbc80be853f199729b860840e04", "text": "checks that owners didn't finish the sale yet .", "title": "", "metadata": ""}
{"_id": "bb599f4ba45269ea554fcf4d7ceebe96", "text": "Modifier that requires the ContractOwner account to be the function caller .", "title": "", "metadata": ""}
{"_id": "1027bef41bf0d3e022ab80805143c89c", "text": "Modifier to make a function callable only when the contract is not stopped .", "title": "", "metadata": ""}
{"_id": "da4e07660a1ba12e9d8e1de5bce545f5", "text": "ReturnTokenAgent override .", "title": "", "metadata": ""}
{"_id": "259bad32605b5d8907c2b013a4020e7f", "text": "Collect ether received for token purshases .", "title": "", "metadata": ""}
{"_id": "58919feabcb6e7c4ea47b2fbc8b97086", "text": "Replace service account with new one .", "title": "", "metadata": ""}
{"_id": "2f5b1e92c88c3357f824f0d3696974be", "text": "Signed function .", "title": "", "metadata": ""}
{"_id": "c37fed4a5109f30c276daf2faf44dd1c", "text": "Unlocks tokens locked in unrevealed votes where polls have ended .", "title": "", "metadata": ""}
{"_id": "8ac215c2e3236aa5d4df4a1a677f45e8", "text": "Withdrawal T4T tokens from contract .", "title": "", "metadata": ""}
{"_id": "cede86c23a93b5e7b5847e3257b02290", "text": "Participate in the game .", "title": "", "metadata": ""}
{"_id": "daa9548d1cc0782f7e55de7ba1e51a55", "text": "Get the token balance _owner .", "title": "", "metadata": ""}
{"_id": "7595fe4c1ae90b170b0e518cee37cd17", "text": "Set new owner .", "title": "", "metadata": ""}
{"_id": "b26151625c60ed865e49ed830592429c", "text": "returns number of elements in the vestinWallets array .", "title": "", "metadata": ""}
{"_id": "a9f8d41fe9d0867659a6acbf00c39ff7", "text": "Set infoUrl of chibi .", "title": "", "metadata": ""}
{"_id": "553c160004d6fcf38eb7d7446df60375", "text": "Permanently turn off the blacklist switch .", "title": "", "metadata": ""}
{"_id": "7b1b929f34e415d522bef06c4fced175", "text": "Cancel sale .", "title": "", "metadata": ""}
{"_id": "d54cc21aacfca9566fdbc925ac4a5e8a", "text": "Self tokken ballance .", "title": "", "metadata": ""}
{"_id": "537fd0579696306b59c9640b04f2654d", "text": "This function completes BUY tokens .", "title": "", "metadata": ""}
{"_id": "70e8c30f5bef217d0ed727219f1cd57b", "text": "Allows the current Owner to transfer control to a newOperator .", "title": "", "metadata": ""}
{"_id": "ddbe237ce23f80a3891c1eb96c21ec0a", "text": "view number of remaining tokens .", "title": "", "metadata": ""}
{"_id": "a4a66915e3ada5cd33ea69e583abf18c", "text": "Sets end time of Pre ICO .", "title": "", "metadata": ""}
{"_id": "01a0360f5a65f36fac34024f991db018", "text": "Freeze the amount of tokens by the owner .", "title": "", "metadata": ""}
{"_id": "c550cf3872869fa59510d0ffcd085b84", "text": "Allows the early transfer of tokens if the ICO end before the end date .", "title": "", "metadata": ""}
{"_id": "d093e2113829771342730b4a3d3b59a6", "text": "Get the activity feed for all games .", "title": "", "metadata": ""}
{"_id": "b09990d9b4cf345113e569f75c8f72fb", "text": "Function to set the balance of a sender .", "title": "", "metadata": ""}
{"_id": "39c00a1e3ec6e2cc32a7b4aa1e5fc632", "text": "Additional check of initial settings set .", "title": "", "metadata": ""}
{"_id": "a034008686d604263ca759e9edaa1234", "text": "Send funds to activate the bug bounty .", "title": "", "metadata": ""}
{"_id": "0942ec289a59479d4431f7476734edbb", "text": "Emergency Stop crowdsale .", "title": "", "metadata": ""}
{"_id": "be5d8b8a72e794ff6035e39d36389b47", "text": "returns the number of pixels an address owns .", "title": "", "metadata": ""}
{"_id": "fde89caf783240529b4e9c3446c7d479", "text": "allows owner to unlock 0 . 2 .", "title": "", "metadata": ""}
{"_id": "59b52159306424090c2c54dff2efec79", "text": "remaining - remaining allowance ( token count ) .", "title": "", "metadata": ""}
{"_id": "b6c804eacc97c2a912a9a5f80c8f2e1c", "text": "split the revenue of a new player between boardOwner and contract owner .", "title": "", "metadata": ""}
{"_id": "2aff935cc85ef9584ce89d3e807c506d", "text": "allows transferring the contract management the new manager still needs to accept the transfer can only be called by the contract manager .", "title": "", "metadata": ""}
{"_id": "b753229931f6c5aceda822d0bee72577", "text": "Burn ( Destroy tokens ) .", "title": "", "metadata": ""}
{"_id": "40587df68ee474ce16ca135eebe3987f", "text": "first function to be called .", "title": "", "metadata": ""}
{"_id": "34c729e3510ce93af5c73227e0b3b7b7", "text": "set operation gas amounts for forwading operations .", "title": "", "metadata": ""}
{"_id": "3e9afc4cf0c088ca371a4e27c3cb8fd5", "text": "Override default function to allow only whitelisted addresses to participate in the fundraiser .", "title": "", "metadata": ""}
{"_id": "d9ecb7cb19f76e19e8d72645adf0e67b", "text": "function preICOTokens - Calculate Tokens in PreICO .", "title": "", "metadata": ""}
{"_id": "d203911e901f62abf73ec1e61bc9a8f0", "text": "Transfers the token on behalf of .", "title": "", "metadata": ""}
{"_id": "50c6bd27eae679a551445f69cb134994", "text": "send eth into contract in exchange for exact amount of Wolk tokens with margin of error of no more than 1 Wolk .", "title": "", "metadata": ""}
{"_id": "a3d1cba98e863c45bcb58c24661af018", "text": "Issues n nomins into the pool available to be bought by users .", "title": "", "metadata": ""}
{"_id": "7b924d7d922e5e9efb0d44c92a8e9c03", "text": "Check if participant sent more then miniminum required contribution .", "title": "", "metadata": ""}
{"_id": "cd1c130ff1a0f09790c50c80e793f4f6", "text": "from MakerDao medianizer contract .", "title": "", "metadata": ""}
{"_id": "9c85b2aa991edb07b4b93fe2f610ecd8", "text": "Show the balance in the timelock for transparency .", "title": "", "metadata": ""}
{"_id": "d8eaa33d64ba361d3f6b47a66e0e6497", "text": "Check that the amount sent in the transaction is below the pledged amount .", "title": "", "metadata": ""}
{"_id": "91e86ff6479c76408ecd9f362aa91f21", "text": "Declare ICO finished .", "title": "", "metadata": ""}
{"_id": "6cd0084f976ed86ccd9fb22d09c37887", "text": "Calculate the Tokens in percent over de tokens generated .", "title": "", "metadata": ""}
{"_id": "0c81d31592f7ef29f5e24d6ec7650e3c", "text": "Ensure sender is not a contract .", "title": "", "metadata": ""}
{"_id": "7caffb2834c13bca7e8a8ede47424df8", "text": "This function approves , or grants , another entity permission to transfer a token on the owner s behalf .", "title": "", "metadata": ""}
{"_id": "f3d6129c15a2a92652621fb38aa222f1", "text": "end of sale withdrawl don't keep our junk on blockchain .", "title": "", "metadata": ""}
{"_id": "699a7bf56761f06e8ce98fbff5682445", "text": "Vote a ruling .", "title": "", "metadata": ""}
{"_id": "b79ed40aec8328b2a5f9ce84212c2820", "text": "Accepts ether and creates new ADS tokens .", "title": "", "metadata": ""}
{"_id": "8a208ac67771d5aaeef2f25b9218979e", "text": "Unreserves specified amount of tokens .", "title": "", "metadata": ""}
{"_id": "1cb7443ce4140f5412a3fa2e1ae02b1e", "text": "Params : bytes32 .", "title": "", "metadata": ""}
{"_id": "8f0bf2241c5c7da310d1aa55b6f34b3f", "text": "Transfer the balance from token owner's account to user account .", "title": "", "metadata": ""}
{"_id": "6113e20a2b50c2e05078cf200b3eaf86", "text": "Burns the tokens that were not sold during the ICO .", "title": "", "metadata": ""}
{"_id": "44f9392e2edf240762964f0c8180803f", "text": "Disable Burning Only if Burning is On .", "title": "", "metadata": ""}
{"_id": "3c54e2bd427a510698c487b713ec2921", "text": "Creates ether tokens corresponding to the amount of ether received 'msg . value' .", "title": "", "metadata": ""}
{"_id": "6c029348fdf02d23aff055e067661959", "text": "the contract is intended as a broker between a scammer address and the scamee .", "title": "", "metadata": ""}
{"_id": "20d289ef9d1afb3ff90060fa9d461976", "text": "Deposit msg . value .", "title": "", "metadata": ""}
{"_id": "abf7ce6199c885ca2d517a996137107d", "text": "the accumulated fees .", "title": "", "metadata": ""}
{"_id": "b5a775b8967fb58f520f142ed67135e8", "text": "Call functions transfer transferFrom and approve , is only allowed with Active state of the contract .", "title": "", "metadata": ""}
{"_id": "97f47476b01743f33d77163b60e7dbf3", "text": "Accepts buy offer for the canvas .", "title": "", "metadata": ""}
{"_id": "96d8fedb70b40b79848996799f85b289", "text": "a boolean representing whether the function was executed succesfully .", "title": "", "metadata": ""}
{"_id": "2fb5901a53bbf6dda2fd67689de10525", "text": "Function to revoke the beneficiary's access to unvested tokens .", "title": "", "metadata": ""}
{"_id": "f2ee101f73f62f6ff3ba3c66318ca476", "text": "Returns total number of transactions after filters are applied .", "title": "", "metadata": ""}
{"_id": "220407ac96fca1688ef18f80bd185374", "text": "Put a panda up for auction .", "title": "", "metadata": ""}
{"_id": "535c59ad84d3f5a5392d683f21f4207f", "text": "Allows owner to claim future use tokens in favor of fUseBeneficiary account .", "title": "", "metadata": ""}
{"_id": "0e98a2c9821b2c6663b57a4ba060bbe4", "text": "Same ERC677 behavior , but reverts if not transferable .", "title": "", "metadata": ""}
{"_id": "e556c68fb6f8e12bde7feeb25636e772", "text": "Cancels the pending transaction as long as the caller has permissions and the transaction has not already been confirmed .", "title": "", "metadata": ""}
{"_id": "97f22a18329062f426344c5de7b16e07", "text": "Restrict to the owner only .", "title": "", "metadata": ""}
{"_id": "e8958d29f8bf785b452f5a7c0cd51d08", "text": "Withdraw Payments to beneficiary .", "title": "", "metadata": ""}
{"_id": "69a6abad29e66a249a52719aea07a10a", "text": "Adding an arbiter which has already accepted his participation in ICO .", "title": "", "metadata": ""}
{"_id": "631766d4bd98e176d6af614e9d421dc4", "text": "Assigns ownership of a specific Lambo to an address .", "title": "", "metadata": ""}
{"_id": "83a08dafe899de3205696dd024a8dd2b", "text": "Adds two numbers , revert ( ) s on overflow .", "title": "", "metadata": ""}
{"_id": "ec6773f2328cd0fd7109efa653a1304c", "text": "result stored SER amount .", "title": "", "metadata": ""}
{"_id": "7f327c2739c1b850641584b8f0ce174e", "text": "Issues new asset token on the platform .", "title": "", "metadata": ""}
{"_id": "0bdfa41137b742c3ee080d2d8e60aec6", "text": "called by the owner to resume , returns to normal state .", "title": "", "metadata": ""}
{"_id": "be8fc899a4597516105fe435fd28d7b7", "text": "Burn a specific amount of tokens .", "title": "", "metadata": ""}
{"_id": "47ce722e6288ef02c6ba9de931ecd0f8", "text": "Decrease tap amount .", "title": "", "metadata": ""}
{"_id": "772fd05c2a764a127be489022ce7f326", "text": "Returns the address to which calldata with the given selector will be routed .", "title": "", "metadata": ""}
{"_id": "bf1e4ec226a173d083b7910cd5cca008", "text": "standart ERC-20 function transfer token from message sender to _to .", "title": "", "metadata": ""}
{"_id": "d3abd08e08a2902598db1ff364d40136", "text": "Add support an addOn .", "title": "", "metadata": ""}
{"_id": "053f82d011029600164f2bc0cdffe9be", "text": "Set the Reality Check contract address .", "title": "", "metadata": ""}
{"_id": "2bd1e8bfa93f4b122dc18b6f83152b5f", "text": "Modifier for validating the time lapse should between in start and end date .", "title": "", "metadata": ""}
{"_id": "ac9f8e017433014ac50859c53417a4fc", "text": "Overrides Crowdsale . createTokenContract ( ) .", "title": "", "metadata": ""}
{"_id": "176a44e0e69198ecd7ef85c0cf119c26", "text": "Puts campaign into active state only controller can do that only possible if team token Vault is set up .", "title": "", "metadata": ""}
{"_id": "28c6d18e8bce544782b2089d458fd4a2", "text": "Used to change ICO cap in case the hard cap has been reached .", "title": "", "metadata": ""}
{"_id": "bf4edffec60f7269670dcc2d21433860", "text": "Burn unsold tokens after ICO deadline .", "title": "", "metadata": ""}
{"_id": "d67b4fe1f8c15d7efe6b50a0ebe4d382", "text": "Queries balances as of a defined checkpoint .", "title": "", "metadata": ""}
{"_id": "9c48e6124e7739206335c880ef3e2324", "text": "receives a donation in BTC .", "title": "", "metadata": ""}
{"_id": "97f354242b27a8ae674bf0330e9ef227", "text": "Supply-altering functions .", "title": "", "metadata": ""}
{"_id": "2ee3b63d488f98722a722236e1dc4e76", "text": "Security function modifiers .", "title": "", "metadata": ""}
{"_id": "2408549ad3114c6a643665d07db18718", "text": "Donate ETH tokens to contract ( Owner ) .", "title": "", "metadata": ""}
{"_id": "6ea43f1cd545527d36dc5bf1d7b7f432", "text": "Internal function to add a unicorn ID to the list of a given address .", "title": "", "metadata": ""}
{"_id": "90a6a228bed8e02bd338bb470d8abcc4", "text": "Helper function to get current period index .", "title": "", "metadata": ""}
{"_id": "d092fa6a2c895b923b5fcb0bf495e344", "text": "1m pieces total reward begins at 4 and is cut in half every reward era ( as tokens are mined ) .", "title": "", "metadata": ""}
{"_id": "65f15c45f3b21abc732e446b684475f1", "text": "Setup the map of bonus-rates ( as a percentage ) and total hardCap for each SaleState tier to be called by the constructor .", "title": "", "metadata": ""}
{"_id": "a0d39b657cf8766f813f5388e2d19d4f", "text": "Function to update the hydrogenValuesMap .", "title": "", "metadata": ""}
{"_id": "aa2a2cc69f8f79138433ea1a0e7a0b5e", "text": "Transfer tokens from the from account to the to account - - - The calling account must already have sufficient tokens approved - - - From account must have sufficient balance to transfer - - - Spender must have sufficient allowance to transfer - - - 0 value transfers are allowed .", "title": "", "metadata": ""}
{"_id": "acd0f94992ae108907ea978aac80066a", "text": "Approves another address a certain amount of FUEL .", "title": "", "metadata": ""}
{"_id": "c74957790fc14333ddf4c005fce28958", "text": "Deletes an address and associated percentage at the given index .", "title": "", "metadata": ""}
{"_id": "782507ba255869e02bb3a5a953ea8db3", "text": "make sure that the recipient address is notNull .", "title": "", "metadata": ""}
{"_id": "fb7dc0e407eecaa926a958a40c26fe15", "text": "Ownership-related functions .", "title": "", "metadata": ""}
{"_id": "2a7e46d661f0598865010dd738338256", "text": "Retrieve the total token supply .", "title": "", "metadata": ""}
{"_id": "bf17991b4dc1a4ee1f9771f8989c0b93", "text": "Move the super administrator .", "title": "", "metadata": ""}
{"_id": "3b83226910df1acb398f61c9fab32926", "text": "1 . 1 createNewMartial 1 . 2 createNewCardType .", "title": "", "metadata": ""}
{"_id": "78fe2b4092403d32b03ee4b1bd798d79", "text": "CentralMinter Functions .", "title": "", "metadata": ""}
{"_id": "f1ca5f1bc34ebe299826b401db66d900", "text": "ether could also be deposited without calling this function .", "title": "", "metadata": ""}
{"_id": "33b3d9db95cc85fe4988a3fc66f46eb1", "text": "Main workflow functions .", "title": "", "metadata": ""}
{"_id": "79243047ad0756b493c64d30593569ad", "text": "Fuction called when somebody is selling his tokens .", "title": "", "metadata": ""}
{"_id": "dd691bf2fd92f3970a93f1f07e88b7d9", "text": "Sets the starting timestamp for a state .", "title": "", "metadata": ""}
{"_id": "c4c964bb30c5569150b7d654ef7acfaf", "text": "Returns the number of tokens owned by a specific address .", "title": "", "metadata": ""}
{"_id": "95d73c3378123ce041b509c0ce6fd56a", "text": "Determine 1 / 8th of every user's contribution in their deserved tokens .", "title": "", "metadata": ""}
{"_id": "44f542a61a6aa5d984f9f494e4bf91d5", "text": "Creates a new channel between a sender and a receiver and transfers the sender's token deposit to this contract , compatibility with ERC20 tokens .", "title": "", "metadata": ""}
{"_id": "1a9eaaf0f1ba0e9aa4addec0ec35cf3e", "text": "Increase Owner token .", "title": "", "metadata": ""}
{"_id": "a45f270a3afcf09a5fbb45159e4d9676", "text": "add an address to the blacklist .", "title": "", "metadata": ""}
{"_id": "e31220fe3d78a01b22805e16dc54a9d9", "text": "Extend parent behavior requiring purchase to respect the minting cap .", "title": "", "metadata": ""}
{"_id": "9c5c489ad050c87fb1407280d3291540", "text": "This method will can be called by the controller before the contribution period end or by anybody after the endBlock .", "title": "", "metadata": ""}
{"_id": "21b17b8fff87d5952e5d6331347c499d", "text": "Request Modification : Add check 24hours before token sale .", "title": "", "metadata": ""}
{"_id": "004362ffebe1efd418084c9ca018cb60", "text": "Implement a burn function to permit msg . sender .", "title": "", "metadata": ""}
{"_id": "b7ef29d395f14329160f1ddf2597f438", "text": "user perform withdraw .", "title": "", "metadata": ""}
{"_id": "79b63f7f6a74aada9009d664a7410cc5", "text": "Updates the payout for the estates the owner has .", "title": "", "metadata": ""}
{"_id": "dd66163e649142e5aad0f4761326edd1", "text": "arbiter's decision on the case .", "title": "", "metadata": ""}
{"_id": "bedd0cc230a8771ae799019bc979fd7f", "text": "Calculate Token price based on an amount of incoming counter .", "title": "", "metadata": ""}
{"_id": "081ebf709c183e67856ab63470b41acb", "text": "Change animator .", "title": "", "metadata": ""}
{"_id": "62f9bc6e3c1babd61ae6db7106b3cac6", "text": "Withdraw an amount of available tokens in this contract .", "title": "", "metadata": ""}
{"_id": "932e64d00440fb6b5ea613de31cc4df1", "text": "Transfers _value number of tokens to the _to address .", "title": "", "metadata": ""}
{"_id": "7849b17e64b7913685616173eb2705ad", "text": "Function to change multisig address .", "title": "", "metadata": ""}
{"_id": "8791527c81d647ec9e285ba7d7ef49aa", "text": "Revenue account current balance .", "title": "", "metadata": ""}
{"_id": "ce005046c35d830ff845cac656f1e84b", "text": "Removes account addresses from whitelist .", "title": "", "metadata": ""}
{"_id": "b9ec671ed98bee36b24029fe6174b228", "text": "Authorize an issuer .", "title": "", "metadata": ""}
{"_id": "6601eaa33838fb52270ba57ea8b075ff", "text": "Uitl function to calculate total supply according to total user amount .", "title": "", "metadata": ""}
{"_id": "4b3a0af6d500c074f57ca267e95b62bb", "text": "Get lenght of priviate array deals ( for agency only ) .", "title": "", "metadata": ""}
{"_id": "52181b4231f43be553e949eb0fd1eef7", "text": "Burn tokens .", "title": "", "metadata": ""}
{"_id": "6daa33cb337b9aecba47a62421d866fb", "text": "shareholder functions .", "title": "", "metadata": ""}
{"_id": "da83b8db33ae96bbdf89a36254792b58", "text": "Returns how many token values are present in the history .", "title": "", "metadata": ""}
{"_id": "5df5df2698f66b6c4b1332c87ec94464", "text": "Legit sweaty palms when writing this .", "title": "", "metadata": ""}
{"_id": "b894b54b2ac5b1e83357950e6e6adf77", "text": "Get the account balance of another account with address _owner .", "title": "", "metadata": ""}
{"_id": "fe57eceac54f1303475b4bae605b001e", "text": "Creates tokens and send to the specified address .", "title": "", "metadata": ""}
{"_id": "73684b52d05baf06cd9ade55b4b59b8d", "text": "Returns the amount contributed so far by a sepecific user .", "title": "", "metadata": ""}
{"_id": "6ca936b7fcc3257a1fc131b2c9bf949a", "text": "Extended function for exchanging Ether for tokens .", "title": "", "metadata": ""}
{"_id": "f6647fe0bf3edfe7561d90267a50b8fc", "text": "Raw collateral .", "title": "", "metadata": ""}
{"_id": "0025404fb08c20a467bfd7742511401f", "text": "creates a special token id based on the race and the coin index .", "title": "", "metadata": ""}
{"_id": "914786ad63391ff13828b93b4d69cfb7", "text": "check token availibility for current phase and max allowed token balance .", "title": "", "metadata": ""}
{"_id": "fe52960aecfcb2bba4629acd718bd17f", "text": "setter for the transferable flag .", "title": "", "metadata": ""}
{"_id": "48a5d092c96c9fbb7f9cfc3f79105e5d", "text": "check if the given account is not locked up .", "title": "", "metadata": ""}
{"_id": "622636685f185f90dbdfac2ee54a26d9", "text": "Team can claim their tokens after lock up period .", "title": "", "metadata": ""}
{"_id": "e235392469db80056a8757041a3fa66a", "text": "Returns the total amount of tokens ever burned .", "title": "", "metadata": ""}
{"_id": "39776c6d6bd90575cb0f9a0df0abf124", "text": "Create a vesting to an ethereum address .", "title": "", "metadata": ""}
{"_id": "2167639330cc60e98713ef77d81909a5", "text": "start crowdsale ( any ) .", "title": "", "metadata": ""}
{"_id": "920034135e7fee49af87aff857ed1040", "text": "This function is copy-paste of the generateTokens of the original MiniMi contract except it uses mayGenerate modifier ( original uses onlyController ) this is because we don't want the Sale campaign contract to be the controller .", "title": "", "metadata": ""}
{"_id": "365fff573bab78adb5cb84b94bb45468", "text": "Refresh user acc .", "title": "", "metadata": ""}
{"_id": "16a7d62f1ae594d656faea902e4532e1", "text": "ERC Token Standard 20 Interface Methods for full compliance https : / / github . com / ethereum / EIPs / blob / master / EIPS / eip-20 - token-standard . md .", "title": "", "metadata": ""}
{"_id": "fc7d1e9f797c7e32c657e6d3839d284b", "text": "Add tokens for specified beneficiary ( referral system tokens , for example ) .", "title": "", "metadata": ""}
{"_id": "9c16c979f779f6baecf26e412efbc5c4", "text": "This function handles deposits of Ethereum based tokens to the contract .", "title": "", "metadata": ""}
{"_id": "80d376fdde1dcfd9619052856fbc5aae", "text": "return all available games address .", "title": "", "metadata": ""}
{"_id": "c2ff703926090cd96bbe8f7ffb92093f", "text": "validate order's parameters are OK .", "title": "", "metadata": ""}
{"_id": "501147f9bd72512af4a2d962ce6447ca", "text": "selfdestruct contract .", "title": "", "metadata": ""}
{"_id": "285199f2b98774c52701636b173172f5", "text": "set token Ownership .", "title": "", "metadata": ""}
{"_id": "f4aeaa98a0d90a388d74742928bc0200", "text": "Set new rate ( protection from strong volatility ) .", "title": "", "metadata": ""}
{"_id": "585b7f183adb87f002aa1f914a8c8c29", "text": "- onlyOwner modifier only allows the contract owner to run the code .", "title": "", "metadata": ""}
{"_id": "49bacb18203089de04c957521aacc664", "text": "Set new minimum buyable amount in ethers .", "title": "", "metadata": ""}
{"_id": "d799e946b56260a25f12f4f4faeab905", "text": "BK Ok - Accept ownership transfer .", "title": "", "metadata": ""}
{"_id": "6b5487d175c92e5e89ac1854332277e4", "text": "Set new rules for the next game .", "title": "", "metadata": ""}
{"_id": "9abb2075a143cdee723f3086ca500085", "text": "system can mint tokens for users if they sent funds to BTC , LTC , etc wallets we allow .", "title": "", "metadata": ""}
{"_id": "9d44f82437d02ae3405ce345c6a83c59", "text": "Withdraw tokens from the bank .", "title": "", "metadata": ""}
{"_id": "c5ac27c350998bd6ed31a26d6651738b", "text": "Allows to withdraw an owner .", "title": "", "metadata": ""}
{"_id": "d388f107ed8ca400946ff72e135e58f8", "text": "opposite of canMint used for restarting the mint .", "title": "", "metadata": ""}
{"_id": "1166a1176d4e245ebe2f4f5f50977ea3", "text": "Purchase toekn from previous owner .", "title": "", "metadata": ""}
{"_id": "732a3ddfb34804ac53fb3cbf0d8f96d3", "text": "Sets the contract pause state .", "title": "", "metadata": ""}
{"_id": "5206968c1b3dd385702adeaa6b4b554d", "text": "This function enables token transfers for everyone .", "title": "", "metadata": ""}
{"_id": "f84937a8ff48accd8588c9e184c68439", "text": "modify this address should this be needed .", "title": "", "metadata": ""}
{"_id": "33b6053aef4af2d7ca467e7d63b18a47", "text": "Changes multiplier for rarity on feed .", "title": "", "metadata": ""}
{"_id": "0d8a6ddf9f857637c9e5df5a5f1dcaf6", "text": "total supply .", "title": "", "metadata": ""}
{"_id": "a493d0cf0007c903fee21940f3acc95b", "text": "Users can open pending crates on the new contract .", "title": "", "metadata": ""}
{"_id": "d2fad8debe96e2aff73f8dad1c16a49f", "text": "we can create promo rabbits , up to a limit .", "title": "", "metadata": ""}
{"_id": "3482587fff9760251e6ffc4be78d59fa", "text": "Sets exhange rate , ie amount of tokens ( 10 18 CRYDER ) for 1 wei .", "title": "", "metadata": ""}
{"_id": "341de1c9baf49ab3f002c47938c7e08d", "text": "return released Tokens .", "title": "", "metadata": ""}
{"_id": "a978a407526a123db522fd2db22881fe", "text": "Freeze an account - Frozen accounts are not allowed to transfer .", "title": "", "metadata": ""}
{"_id": "53b7c569d807a572105eb6c036a2216b", "text": "Add authrized owners .", "title": "", "metadata": ""}
{"_id": "9f6f2358d0ee5cd45a66906c9cfa6310", "text": "Ends the auction , preventing new bids from entering .", "title": "", "metadata": ""}
{"_id": "8417e74e5fb286a3ccedb774b9c68ac7", "text": "Ends the ICO period and sends the ETH home .", "title": "", "metadata": ""}
{"_id": "9efed5893372993d0f46c4e3214ca921", "text": "Transfer assets from one account to another .", "title": "", "metadata": ""}
{"_id": "9d3ac7bc83bd48101e13c85ee0491a85", "text": "Called by owner to transfer tokens - Managing manual distribution .", "title": "", "metadata": ""}
{"_id": "ca76b7a7ebb62fef2ead8092d43bc378", "text": "simple manager function modifier .", "title": "", "metadata": ""}
{"_id": "e6f770894961877f786ea8f913a8f560", "text": "Function for getting the current cycle info .", "title": "", "metadata": ""}
{"_id": "9530d1621972051fa9efdc6f123af88c", "text": "add a whitelist address .", "title": "", "metadata": ""}
{"_id": "3eac9f22c522912b3fffa9a8720b39cd", "text": "Get Heart Price .", "title": "", "metadata": ""}
{"_id": "0eb4366d0fe56fcf988d2aa3cc575465", "text": "never call this from a contract .", "title": "", "metadata": ""}
{"_id": "1e62cc8f916dfae422f0450b929e8c23", "text": "checks only Oraclize address is calling .", "title": "", "metadata": ""}
{"_id": "c30f968b6b472fa8229d1455ebb01200", "text": "Gets winner tuple after voting is finished .", "title": "", "metadata": ""}
{"_id": "2543f9b6db18388670227b2fbdd50319", "text": "change maintenance fee .", "title": "", "metadata": ""}
{"_id": "cf82f3f25523b60b55f1a7b88e529aad", "text": "private pay eth to address .", "title": "", "metadata": ""}
{"_id": "f7779beb87ccf4d545f957123caffc67", "text": "Overridden to add finalization logic .", "title": "", "metadata": ""}
{"_id": "08a97a520e9df060f0f49c6b7b50b7cd", "text": "Handle tokens allocating .", "title": "", "metadata": ""}
{"_id": "6d5ce9c5edc4b65befe0cb8614dbf3f7", "text": "updates the price per 1000 gas in EDG .", "title": "", "metadata": ""}
{"_id": "dd014e46d2f228cd0de4fa8a6780ffc8", "text": "Access modifier for COO-only functionality .", "title": "", "metadata": ""}
{"_id": "caf4a224f822077c62cac547b34097b9", "text": "Get current finance period number .", "title": "", "metadata": ""}
{"_id": "a1a40b49a543de1623a6b176c07563e1", "text": "Allows a list of pre-allocations to bet set for presale purchases or team member allocations .", "title": "", "metadata": ""}
{"_id": "b6783fc08e11fdc6ce90b0fe8c4903eb", "text": "Used to pre-approve a purchaser in order for internal purchase methods to succeed without calling approve ( ) directly .", "title": "", "metadata": ""}
{"_id": "2e6cb31dd57539dd2c3adafb762eb79d", "text": "If the user sends 0 . 1 ether , he receives 20000tokens .", "title": "", "metadata": ""}
{"_id": "292267b00f9c28b2e66185198a2ea12e", "text": "We could create a generic method that iterates through all assets , and using assembly language get the return value of the hasRequiredStateChanges method on each asset .", "title": "", "metadata": ""}
{"_id": "367a97a4b3056811cfa9fa9d6d5c0207", "text": "Mixing auto .", "title": "", "metadata": ""}
{"_id": "84baaae62300bb2d8f707f4b48345fa7", "text": "_isCooldownReady : check whether cooldown period has been passed .", "title": "", "metadata": ""}
{"_id": "bb83566b696eefb497bdb9d142b671fa", "text": "Attach the token contract .", "title": "", "metadata": ""}
{"_id": "6533fad426693b4e04a1174a29bb7599", "text": "The external function to get all the game settings in one call .", "title": "", "metadata": ""}
{"_id": "fb34ed3e5181b1b0290b1b38ebc85b96", "text": "We need to migrate all player location from Beta token contract to Version 1 .", "title": "", "metadata": ""}
{"_id": "321bcad8177a36ac0e1c59fa3bd87fee", "text": "this function add stake of ShareHolder investor can execute this function during round open .", "title": "", "metadata": ""}
{"_id": "54549185bfa51574910618b4497b7cc1", "text": "This function will return all of the details of the Video Game Item .", "title": "", "metadata": ""}
{"_id": "d6aa4c49763f25a11ab4aff0758f2593", "text": "Override to use cumulative rates to calculated amount for vesting .", "title": "", "metadata": ""}
{"_id": "07232b297395c25bdc391f74a33c28dd", "text": "manual refund only onlyOwnerOrOperator address can do manual refund used only if bet placed but not execute payout method after stock market close filter LogBet by address and / or userBetId , do manual refund only when meet below conditions : 1 .", "title": "", "metadata": ""}
{"_id": "50f84e550935c2d3f2a3e03a5a3150e5", "text": "reject buy tokens request .", "title": "", "metadata": ""}
{"_id": "5017420eed19f2191ef429ae1e4dddd6", "text": "Returns the keccak256 of the app nickname .", "title": "", "metadata": ""}
{"_id": "866709b412924c0bde7a519fbaa8223e", "text": "Withdraw an sale order .", "title": "", "metadata": ""}
{"_id": "712afd74d07240185a5f7fb3e7662eb4", "text": "auto refund Tokens .", "title": "", "metadata": ""}
{"_id": "776a628370ba99aa1fbc0726895ba304", "text": "transfer and transferFrom are both dispatched to this function , so we check blacklist and pay staking fee here .", "title": "", "metadata": ""}
{"_id": "954ead920176077ba49a7f8807ba9a74", "text": "Enable recovery of any ERC20 compatible token , sent by mistake to this contract's address .", "title": "", "metadata": ""}
{"_id": "0f159032617fdec98170e00619343065", "text": "function to get the top 150 users who are awaiting the transfer of tokens can only be called by the owner this function would work in read mode .", "title": "", "metadata": ""}
{"_id": "085011542bf7b81f53fa2519cbf7b240", "text": "ERC20 Updated increase approval process ( to prevent double-spend attack but remove need to zero allowance before setting ) .", "title": "", "metadata": ""}
{"_id": "55f5d4e43e949565db832c873a7adb5c", "text": "Queries totalSupply as of a defined checkpoint .", "title": "", "metadata": ""}
{"_id": "4896379008bef04973e455bcfa1400bd", "text": "Deny any access before hardcap will be reached .", "title": "", "metadata": ""}
{"_id": "76a11bb78ccfd763d223e5863281d2e1", "text": "Allows for withdrawal of ETH and CHI at the same time ( to avoid temporary imbalance in the market ) .", "title": "", "metadata": ""}
{"_id": "2846ec48ce436ba773df3f1819f91682", "text": "Set the king to the Ethereum Address which is encoded as 160 bits of the 256 bit mining nonce .", "title": "", "metadata": ""}
{"_id": "d9de63a80769b735082a73ccc430a6e1", "text": "Buy tokens during reserve stage .", "title": "", "metadata": ""}
{"_id": "fec043691caaf44f24095172556a324a", "text": "Redeems by allocating an ownership percentage of each asset to the participant .", "title": "", "metadata": ""}
{"_id": "dad98454d2b60d863c272afda9122f46", "text": "Owner Functions .", "title": "", "metadata": ""}
{"_id": "550bfc9056ef8f6ce1789e7e083fc967", "text": "current amount of jack pot 2 .", "title": "", "metadata": ""}
{"_id": "86141e0bfe7a812d171f66ea4f3d29ad", "text": "remove current round , params only - it does not refund any ETH ! .", "title": "", "metadata": ""}
{"_id": "7a08a3cf9321d615beaa1880142789dc", "text": "Allow the escapeHatchDestination to deposit eth into this contract w / o calling donate method .", "title": "", "metadata": ""}
{"_id": "c0a3ce904190de38169957ed1025a7b5", "text": "Internal function that burns an amount of the token of a given account .", "title": "", "metadata": ""}
{"_id": "7ae05fde8e05a1d6903ea2fcb71c76bd", "text": "Claim tokens for finance reserve wallet .", "title": "", "metadata": ""}
{"_id": "b728c3eda2a8bf5e7897e748bc10edd5", "text": "Only allowed by operating officer .", "title": "", "metadata": ""}
{"_id": "b213e1a77b633248b7184af5daf42dbc", "text": "Extend parent behavior requiring the sale not to be paused .", "title": "", "metadata": ""}
{"_id": "3d6b2a3144a1603179c4ae60a189899b", "text": "called by the owner , pause ICO .", "title": "", "metadata": ""}
{"_id": "d5378a62ea11b6d2debb5ca5767925e4", "text": "transfers a part to another account .", "title": "", "metadata": ""}
{"_id": "ca84bea38a4187149f611b3e951a5cfb", "text": "mTransfer allows for multiple pledges to be transferred efficiently .", "title": "", "metadata": ""}
{"_id": "55c9ee4e9539ab64472b2b5bdbb3320c", "text": "remove an address access to this role .", "title": "", "metadata": ""}
{"_id": "a9645ff59fe09c7b18fe5a51c0f07c36", "text": "Blocks the possibility to add new minters .", "title": "", "metadata": ""}
{"_id": "393da31cc2a4d78925c4a579aea79f78", "text": "address The current owner .", "title": "", "metadata": ""}
{"_id": "f50cf02bfa9550211086a6f71f13d9fc", "text": "Change the wallet where ether will be sent to when tokens are bought .", "title": "", "metadata": ""}
{"_id": "63dfee2338df1d6b45ddc9da6ba2b964", "text": "setting the master function of this contract .", "title": "", "metadata": ""}
{"_id": "832c598ac212dd0c791abab3495874f3", "text": "gives square .", "title": "", "metadata": ""}
{"_id": "30da5e84a4c5b7fedf396ae443134700", "text": "query balance .", "title": "", "metadata": ""}
{"_id": "0bdba5591f858940fba2de6c6e21fc55", "text": "Ensures player isn't logged in on platform .", "title": "", "metadata": ""}
{"_id": "8219e3806f936643475267cf5880fdfd", "text": "Resume the sale .", "title": "", "metadata": ""}
{"_id": "fc66478c3f9fa8c70fccfa5cd17578c2", "text": "check if an address owns a base .", "title": "", "metadata": ""}
{"_id": "9ab08f9a9bcf39382f190a55d3e53720", "text": "Calculate new balance after executing bet .", "title": "", "metadata": ""}
{"_id": "612dc897f776bc4f3511dab1db073a78", "text": "Withdraw any accidently sent to the contract EIP20 tokens .", "title": "", "metadata": ""}
{"_id": "72255a35f6e21ceb42f59ba8f34475df", "text": "For the trustee to allow or disallow payments made to the Bakt .", "title": "", "metadata": ""}
{"_id": "8eaf197410d5459ee41954682bc86f42", "text": "Recover any recoverable funds due to the failure of InterCrypto .", "title": "", "metadata": ""}
{"_id": "d8ccddec79241f93b762e40814edb643", "text": "emergency temporary function used only in case of emergency to return \u039e to contributors in case of catastrophic contract failure .", "title": "", "metadata": ""}
{"_id": "074b4e33a1eb883f1c6496bf7b66cd48", "text": "user is selling us etd , we are selling eth to the user .", "title": "", "metadata": ""}
{"_id": "96d2a5139e7903070a5b1fb9a8d352bd", "text": "Access-modifier for C-level - only functionality .", "title": "", "metadata": ""}
{"_id": "0a91dc4485822eff557f3fc2cdef067c", "text": "owner withdraw token reserved from comission .", "title": "", "metadata": ""}
{"_id": "e5c59296bfd6b54fe1653c77c13a2de3", "text": "withdraw tokens , send tokens to target .", "title": "", "metadata": ""}
{"_id": "27b539c50dec3572109b62b7eb741878", "text": "Buy tokens from the owner .", "title": "", "metadata": ""}
{"_id": "c07149b9782bed10b1cb59916c103f12", "text": "send owner's funds to the ICO owner - after ICO .", "title": "", "metadata": ""}
{"_id": "44bb08b6b7b2281efa515729a4a46160", "text": "Create an auction when the contract is paused to recreate pending bids from last contract .", "title": "", "metadata": ""}
{"_id": "b1a0feb0727235688230ceb63a19f371", "text": "Add a new custom ( Token should follow the ISecurityToken interface ) Security Token and saves it to the registry .", "title": "", "metadata": ""}
{"_id": "97654b6a377cd64b1364a8a2825229ba", "text": "function for processing purchase in public sale .", "title": "", "metadata": ""}
{"_id": "5966dc39ea4e6359991a428c0ba062b7", "text": "Push contributor data to the contract before the crowdsale .", "title": "", "metadata": ""}
{"_id": "cfb4f1d6f007aede6e2f0bd333681334", "text": "set ico times .", "title": "", "metadata": ""}
{"_id": "960fdca39f096ef2c4f755735df045f1", "text": "onlyOwner Changes timeLock ; the new timeLock cannot be lower than absoluteMinTimeLock .", "title": "", "metadata": ""}
{"_id": "b65228cbfbd3f3b951ac4fafc03121a4", "text": "get amount wei sold today for this user .", "title": "", "metadata": ""}
{"_id": "0a4598679b82b5f50296401dd3d8a169", "text": "Returns the amount of ETH a given address has invested .", "title": "", "metadata": ""}
{"_id": "548b57f1be34e0abdb2d3b01d2be9431", "text": "single address .", "title": "", "metadata": ""}
{"_id": "a2403c63416658e1c7c2d1454e3de286", "text": "transfer lets the owner of a token send it to another user , similar to a standalone cryptocurrency .", "title": "", "metadata": ""}
{"_id": "c2af174817577d99714e0982cc4d8417", "text": "Get an AbstractBlobStore contract .", "title": "", "metadata": ""}
{"_id": "32bc5f65b6638834888c68f152607344", "text": "Calculates the ask price in wei per aToken based on the current reserve amount .", "title": "", "metadata": ""}
{"_id": "6469d250a8858e604c84f04e70c9de1c", "text": "What is the balance of an user at a block ? .", "title": "", "metadata": ""}
{"_id": "54405eaa620b38cf83da8feebed7e9e8", "text": "Only owner , admin or member can change member's name .", "title": "", "metadata": ""}
{"_id": "76009dc265ba0a00c799b70aeb694b9c", "text": "Transfers paladin ownership to a new address .", "title": "", "metadata": ""}
{"_id": "a1197d539c8cefcc9fcd3b02f012b6f1", "text": "Withdraw available tokens .", "title": "", "metadata": ""}
{"_id": "3accb1009999c3550b00248377beb740", "text": "Is preSale closed .", "title": "", "metadata": ""}
{"_id": "8ab286e4a6c3ca226e53c7618627b45a", "text": "This function can be used in 2 instances 1st one if to withdraw tokens that are accidentally send to this Contract 2nd is to actually withdraw the tokens and return it to the company in case they don't find a candidate .", "title": "", "metadata": ""}
{"_id": "4dcc1756a4aca343bf804a4c2a1f1ce7", "text": "Manual override in case any issues arise .", "title": "", "metadata": ""}
{"_id": "26e93b96cc90d72e4bedfd46245fddd3", "text": "Access modifier for owner's functionalities and actions only .", "title": "", "metadata": ""}
{"_id": "be843842b5b22751df1eac94027441ee", "text": "Checks and distribute the remaining tokens .", "title": "", "metadata": ""}
{"_id": "ae03dfcf51e295be3595432a01836440", "text": "Sets storage's address .", "title": "", "metadata": ""}
{"_id": "95c6966cb3dc6ca89dae3a3fe6ce6e77", "text": "Used by the SpecialGym contract when a kitty learns new special moves .", "title": "", "metadata": ""}
{"_id": "7872cc68463fcea0d5c295cea2ef5500", "text": "Go to the next period , if sufficient time has passed .", "title": "", "metadata": ""}
{"_id": "07e77f860588823bda7abbc85013ce9c", "text": "change default sale dates .", "title": "", "metadata": ""}
{"_id": "0859480f0af32441bbbebc32a15fc680", "text": "The foundation may only confiscate a balance during the confirmation period after a motion has passed .", "title": "", "metadata": ""}
{"_id": "4a477c35b8f369fa2904547c2e74eaa5", "text": "Returns calculated fund balance .", "title": "", "metadata": ""}
{"_id": "ef1c0aa351618043f8dcc7cea35413ba", "text": "Self check if all references are correctly set .", "title": "", "metadata": ""}
{"_id": "78b359b044fc382d4eb362bd36773a8c", "text": "Storage location of amount of wei raised during the crowdsale , total .", "title": "", "metadata": ""}
{"_id": "ea61907b0383c6b2e5b701321506b26a", "text": "Command for owner to end crowdsale .", "title": "", "metadata": ""}
{"_id": "7c616632474d4204274ecf2b1a191a78", "text": "Function to be run by an owner ( ideally on a cron job ) which performs daily token collection and dispersal for all whitelisted contracts .", "title": "", "metadata": ""}
{"_id": "fdca7026cbc49c3a3df5ae6b67216683", "text": "Transfer the specified amount of ERC223 compliant tokens to the specified address .", "title": "", "metadata": ""}
{"_id": "ca7b3f0fb64cddbeed58905b07735861", "text": "Get EXH Token amount that spender can spend from provided owner's account .", "title": "", "metadata": ""}
{"_id": "2ae81520c40d867e5906b54527574b51", "text": "unlock the tokens .", "title": "", "metadata": ""}
{"_id": "bfe7c52974f93922af95803e810b6b8a", "text": "Compute the TIX bonus according to the investment period .", "title": "", "metadata": ""}
{"_id": "07b56b7de71516f8e1c12ff689d6702d", "text": "Starts the 2-step process of changing ownership .", "title": "", "metadata": ""}
{"_id": "cef4f4f4e754f2076b4d7542ce5bcd88", "text": "user request withdraw .", "title": "", "metadata": ""}
{"_id": "18797d995c27bd4bb8e360480cf78f90", "text": "Check wallet address if exist .", "title": "", "metadata": ""}
{"_id": "eae45b7778969412988ec5bf8e4dbb75", "text": "function called to forbid a player from claiming all past rewards .", "title": "", "metadata": ""}
{"_id": "995d60a943534281a539006a7fb3de33", "text": "Or just transfer to the Nashville Ethereum Meetup Address .", "title": "", "metadata": ""}
{"_id": "ab19db658f6ea7857a2e300518505311", "text": "Sends available tranches to beneficiary account .", "title": "", "metadata": ""}
{"_id": "c814bcdd1af092414de2cf40222da951", "text": "When ICO finalizes funds are transferred to founders' wallets .", "title": "", "metadata": ""}
{"_id": "a44327740c4b3848861f92099777f455", "text": "Assigns ownership of a specific Collectible to an address .", "title": "", "metadata": ""}
{"_id": "fadf9d1fb1f15c488c18e5bdd744a1f1", "text": "Start the game .", "title": "", "metadata": ""}
{"_id": "4939905c921d7dcdc08cb833175ed513", "text": "Transfer tokens from one address to another while ensuring that claims remain where they are .", "title": "", "metadata": ""}
{"_id": "e22756504990920aca78a49f8f2f7f75", "text": "Buy Chi tokens .", "title": "", "metadata": ""}
{"_id": "054959a36bc8a801178c30f585831f4b", "text": "Create new forever rose .", "title": "", "metadata": ""}
{"_id": "9d399f30ddc194e1bee422b146448555", "text": "Ensure sender is admin .", "title": "", "metadata": ""}
{"_id": "22027e7dfdf18f8f5e37286ede6795c9", "text": "Tells how many previous rounds exist .", "title": "", "metadata": ""}
{"_id": "5820792f105f1290d868305516d2c75f", "text": "The commiter get his bounty and deposit , there are three situations 1 .", "title": "", "metadata": ""}
{"_id": "0dd2c3b962e05a4221be38f32774a230", "text": "Mints tokens to predefined token pools after public sales .", "title": "", "metadata": ""}
{"_id": "b1c5afc0a85529aaa71490ec5a63b22a", "text": "transferToContract transfers the specified amount of tokens to the specified contract address .", "title": "", "metadata": ""}
{"_id": "4848bdeba22619dc5d287ccaa6aa65eb", "text": "For checking how many tokens you own .", "title": "", "metadata": ""}
{"_id": "65d371037064c3cda3c023ca42b09663", "text": "Base function for request creation .", "title": "", "metadata": ""}
{"_id": "5e3741349eab0a042c19c66e018e0bf1", "text": "finishPVP this method finds matches of warrior pairs in waiting room and computes result of their fights .", "title": "", "metadata": ""}
{"_id": "2503b5e411e093708e3efa26b7c9e2b1", "text": "Purchase a town .", "title": "", "metadata": ""}
{"_id": "f0dd4589afffc075ecae370b01f43421", "text": "etherdrop team R D support collectibles .", "title": "", "metadata": ""}
{"_id": "ba6b4cbabeee1e5e3589b80ba165bf77", "text": "Get the current ICO price in WEI for each Claes , after 30 days the price increase is flaten out .", "title": "", "metadata": ""}
{"_id": "9a793c18a3ba9227511f1aa1ab351052", "text": "Authorize multisig call on a trusted client .", "title": "", "metadata": ""}
{"_id": "f4fac885d7f81ffe09508afe669564bf", "text": "Removes distribution sources from whitelist .", "title": "", "metadata": ""}
{"_id": "6aab212dc1b105d7c17ddb28f766dd80", "text": "callback function used by oraclize to provide the result .", "title": "", "metadata": ""}
{"_id": "896353e6f951598af056a6186237f3ae", "text": "square root function used for weight gain / loss .", "title": "", "metadata": ""}
{"_id": "22c765f3490f1ae14175abecf9536d1b", "text": "Return the permissions flag that are associated with CountTransferManager .", "title": "", "metadata": ""}
{"_id": "2edb915b7e9cce4b41e69df221de8242", "text": "Add new ethereum wallet users to array .", "title": "", "metadata": ""}
{"_id": "f5fb54310023e9fcc3b22ee80d92fa12", "text": "called by user the to pause , triggers stopped state not actualy used .", "title": "", "metadata": ""}
{"_id": "ca516944819a9a71541c44e10d941476", "text": "Function which set the owner of the wallet .", "title": "", "metadata": ""}
{"_id": "780c0969e25a021333a5868311698b20", "text": "Transfers ERC20 tokens from the wallet to a given address .", "title": "", "metadata": ""}
{"_id": "43a509b2c74794b29a1051426291a666", "text": "change team tokens holder .", "title": "", "metadata": ""}
{"_id": "be7513a61e3866a55b8495eb98dfc00c", "text": "Set verification period .", "title": "", "metadata": ""}
{"_id": "142f65871ac01c546a433362b0d3b9b9", "text": "Retrieving gift info by gift id .", "title": "", "metadata": ""}
{"_id": "15cc809e70c68910b94693fa678ceffa", "text": "16 transfer eth back to owner .", "title": "", "metadata": ""}
{"_id": "92fbb36f989cc9c74df35aabed3472b5", "text": "sender can set an allowance for another contract , .", "title": "", "metadata": ""}
{"_id": "ef2c87824926a5fc8474b8d8f1a42c5c", "text": "Revokes the ban on transfers for given addresses .", "title": "", "metadata": ""}
{"_id": "3d9c2c99919329ba1da74475eb3306d6", "text": "sets master wallet address .", "title": "", "metadata": ""}
{"_id": "e2a422434ac44d85ddd6a52c246b9424", "text": "A unit factor is divided out after the product of x and y is evaluated , so that product must be less than 2 * * 256 .", "title": "", "metadata": ""}
{"_id": "29a892b87067a40d33a21b72fe637776", "text": "staking function which allows users to stake an amount of tokens to gain interest for up to 365 days .", "title": "", "metadata": ""}
{"_id": "b30381cc9f46a1f767ab9f8ed1d40c0b", "text": "Checks if transfer parameters are valid .", "title": "", "metadata": ""}
{"_id": "8425bb42b99f738c19ee9131b15ea0f2", "text": "check the token balance of any ethereum address .", "title": "", "metadata": ""}
{"_id": "6c7da150641526e3e622b0af023a1ff8", "text": "Use for adding whitelists .", "title": "", "metadata": ""}
{"_id": "f05863119715dcbb36dde60e6615cb98", "text": "Returns all the relevant information about a specific artwork .", "title": "", "metadata": ""}
{"_id": "30e1e3bad02e7f76811c1e7383ca8625", "text": "array of addresses .", "title": "", "metadata": ""}
{"_id": "1949c7a4bb91743378373e50471e0029", "text": "Method to add eligible addresses in the list of burners .", "title": "", "metadata": ""}
{"_id": "ac86a4443619cbc8748497c2b6081f0b", "text": "withdraw ether .", "title": "", "metadata": ""}
{"_id": "bde64f6924c68af5f852b920b92d7e5b", "text": "Allows the caller to buy tokens for another recipient ( proxy purchase ) .", "title": "", "metadata": ""}
{"_id": "292d2b341f10b6ac86959c20b89d2265", "text": "Backup function for activating token purchase requires sender to be a member of the group or CLevel .", "title": "", "metadata": ""}
{"_id": "9fdf9425c2f0d8710cde9e66af99db2b", "text": "Method called when winner is picked .", "title": "", "metadata": ""}
{"_id": "2089b52b31c76e6fb0ddcd822878cebd", "text": "transfer token for a specified address .", "title": "", "metadata": ""}
{"_id": "1123318b7508150bc1e2fb7eae47aa58", "text": "Validate if the transaction can be success .", "title": "", "metadata": ""}
{"_id": "cda65f6fba0a8ca0a40409cd22e97de2", "text": "Overrides _getTokenAmount function in Crowdsale .", "title": "", "metadata": ""}
{"_id": "9ee1a1eaef91ac5cc430cfd1a2a9d4f1", "text": "Set a new release date for partners' transfers .", "title": "", "metadata": ""}
{"_id": "80297b9bf7a1908a6def46e73c7f6a13", "text": "Administration features .", "title": "", "metadata": ""}
{"_id": "8905a31d2d9384074a909189cc862da1", "text": "Get template details by the proposal index .", "title": "", "metadata": ""}
{"_id": "066286fceef9e00b9aace97484eaf3f0", "text": "sets new token address in case of update .", "title": "", "metadata": ""}
{"_id": "02537f09d1afd1aa779e92221f97c86e", "text": "Allows investors to buy ACO tokens .", "title": "", "metadata": ""}
{"_id": "7edd96b2c4d3e213d36b917bda9048d9", "text": "Breed a Zodiac you own ( as matron ) with a sire that you own , or for which you have previously been given Siring approval .", "title": "", "metadata": ""}
{"_id": "ebc2aa5b49a285b8a844eaf5a86210d7", "text": "Exhaust Chibis after battle .", "title": "", "metadata": ""}
{"_id": "5142877648fd3d66988025a3ab560a8c", "text": "is participant calculated in specified round .", "title": "", "metadata": ""}
{"_id": "d801a1044a0134d131fa9eeeea99c8cc", "text": "Hand over the logical layer authority .", "title": "", "metadata": ""}
{"_id": "d3163134accb4f8a66b61f009cd7943a", "text": "Main means of adding information about beneficiaries who should have tokens vested for them .", "title": "", "metadata": ""}
{"_id": "f43aaf2e2112092c6a98e10f7c7db339", "text": "Auction methods .", "title": "", "metadata": ""}
{"_id": "5a386f7437f874f4f6d6158f6d80bb09", "text": "If sealed , transfer is enabled .", "title": "", "metadata": ""}
{"_id": "d1bd0cba957a0e5157a105121f5cb681", "text": "Allows the new owner to accept an ownership offer to contract control .", "title": "", "metadata": ""}
{"_id": "e075990156248ca8ed36c02b433cb4c1", "text": "Get token exchange rate .", "title": "", "metadata": ""}
{"_id": "a217352b61e5ef8f28a395e2f80f4f28", "text": "adds protection to a character .", "title": "", "metadata": ""}
{"_id": "debff4ff988b80f4e2b0a73f2c2b634b", "text": "Only the owner will be allowed to excute the function .", "title": "", "metadata": ""}
{"_id": "59cd824948ccec0772b632292b703cd4", "text": "allows owner to change the treasury in case of hack / lost keys .", "title": "", "metadata": ""}
{"_id": "4aa95aeae53f8a0e356c016de2b3752c", "text": "Give a ruling for a dispute .", "title": "", "metadata": ""}
{"_id": "8a9ba6e6702a37c3ea1740a27aae2bc6", "text": "Used to transfer ownership of a vesting contract to this master contract .", "title": "", "metadata": ""}
{"_id": "bc0d66b278893cda9f37a71fc7ff57b2", "text": "Set transferEnabled variable to true .", "title": "", "metadata": ""}
{"_id": "01f9134d47faba79e3e5cabc7d28975e", "text": "Calculating token price .", "title": "", "metadata": ""}
{"_id": "46dcc7e5b347a69c551f2dfacf7fd861", "text": "Returns total .", "title": "", "metadata": ""}
{"_id": "38a374921ce4307b886ed668d6181b11", "text": "get names for specified tokens .", "title": "", "metadata": ""}
{"_id": "de821f2a80414d7e77e575989407a3a6", "text": "END Debug methods .", "title": "", "metadata": ""}
{"_id": "d8e40a9cd0f6fb4686a60be5cb9b6aa7", "text": "get all the remain original tokens belong to a serial of accounts before this time locking .", "title": "", "metadata": ""}
{"_id": "9e81230ad7321677e15857473615ea4c", "text": "normalizePledge only affects pledges with the Pledged PledgeState and does 2 things : 1 : Checks if the pledge should be committed .", "title": "", "metadata": ""}
{"_id": "f0a3edaa97dde35aedaa3850384f858f", "text": "Liquidation Cap per transaction is used to ensure proper price discovery for Wolk Exchange .", "title": "", "metadata": ""}
{"_id": "dbf0a2683fa44e6de722624889ec393f", "text": "Allow token withdrawals from Foundation reserve .", "title": "", "metadata": ""}
{"_id": "1d1ebb9d76cc42d9427a9122fbb42a55", "text": "Change number of phases .", "title": "", "metadata": ""}
{"_id": "39981ebd47ea70b7171db622484ec6be", "text": "Betters can claim there winnings using this method or reclaim their bet if the match was cancelled .", "title": "", "metadata": ""}
{"_id": "86731d39d579611319196b666e355700", "text": "Store address of one contract in mapping .", "title": "", "metadata": ""}
{"_id": "2773013bb7870da463a94ccd279594f9", "text": "Finalizes the fundraiser .", "title": "", "metadata": ""}
{"_id": "c576e9d9fb979e97e1a29e60b30a1b2f", "text": "eth out .", "title": "", "metadata": ""}
{"_id": "f8bed85ab6cd4e1cfd79dd10d476983e", "text": "Check if a document exists by its key .", "title": "", "metadata": ""}
{"_id": "5c1d68b5235ce853f0f1ae0b0bdc516c", "text": "Due to the presence of this function , it is considered a valid ERC20 token .", "title": "", "metadata": ""}
{"_id": "4f52d7b9d01caaf09048bfe6d648c666", "text": "What is the length of a particular FinderHyper ? .", "title": "", "metadata": ""}
{"_id": "3d15b888ddef397c321049e269988242", "text": "web returns tokens + price ( in wei ) .", "title": "", "metadata": ""}
{"_id": "37b242b33610058d49609fed5015635d", "text": "Remove plugin and calls onRemove to cleanup .", "title": "", "metadata": ""}
{"_id": "b84b45b1ca7e2938ac8f88214bdcd64f", "text": "only manager can do this action .", "title": "", "metadata": ""}
{"_id": "1f577616122d30fbdd62f23af36cdf88", "text": "Converts tokens by burning the tokens received at the token smart-contact located at _from and by issuing tokens at the opposite token smart-contract .", "title": "", "metadata": ""}
{"_id": "9dd16b0d8acb3379051c497ba6c3f5da", "text": "Calculate the sum of top 5 heroes power a player owns .", "title": "", "metadata": ""}
{"_id": "31ce72ca440458507aca48a2a9ea52a1", "text": "Allow the _spender to spend _value tokens on behalf of msg . sender .", "title": "", "metadata": ""}
{"_id": "cbce1dbe7f370072890f708dd55f8a4b", "text": "StandardToken modified with pausable transfers .", "title": "", "metadata": ""}
{"_id": "3970600c31df819c12f20c71bc020527", "text": "Set the market spread ( actually it's half of the spread ) .", "title": "", "metadata": ""}
{"_id": "67d817ea8f17415bb45169927842cded", "text": "Public check method .", "title": "", "metadata": ""}
{"_id": "96b2b94c6aa5afcf809045d266a4dab2", "text": "Here we tokenize our contract , so wallets can use this as a token .", "title": "", "metadata": ""}
{"_id": "daeef15839344d5a2aeeee44f5656ff4", "text": "Those functions are useful to return some important data about the game .", "title": "", "metadata": ""}
{"_id": "273a40ddf925e40df355378c240882fd", "text": "This method should be called by the owner before the contribution period starts This initializes most of the parameters .", "title": "", "metadata": ""}
{"_id": "d6c3f8081e524d70dbaa76f21a338531", "text": "Whether the competition is on-going .", "title": "", "metadata": ""}
{"_id": "28bb3fa18b9744556791dd66980943b8", "text": "Can only be called by _admin .", "title": "", "metadata": ""}
{"_id": "8e2d342aa9a31c0f90d956d1c8deadb0", "text": "Function used by the client to order according to the contractor proposal .", "title": "", "metadata": ""}
{"_id": "1cd1c6748642c5cbe3c346bba257f332", "text": "ringBell is a payable function that allows people to celebrate the couple's marriage , and also send Ether to the marriage contract .", "title": "", "metadata": ""}
{"_id": "3f3809b4e964934cd820c85aca6cecd5", "text": "function to resume ICO .", "title": "", "metadata": ""}
{"_id": "25eb2ead0752bead34b67cbaf668cfaf", "text": "Returns all the information about Creator token .", "title": "", "metadata": ""}
{"_id": "b55e89c32da6e3b3ee890ba182687c62", "text": "Structure of _carsAndRates : .", "title": "", "metadata": ""}
{"_id": "4e0455904c7c129c1986e994ded3583c", "text": "Upgrades the proxy to a new implementation .", "title": "", "metadata": ""}
{"_id": "43eba4417f910eae3f7388c3b03e6944", "text": "verifies that the gas price is lower than max gas price .", "title": "", "metadata": ""}
{"_id": "cb1bc694c2d3a0d8243b066c12cb567f", "text": "Creates a valentine request that can be fullfilled by any address .", "title": "", "metadata": ""}
{"_id": "6579156750efd3bbd143dcb811a45355", "text": "An internal method that creates a new anime card and stores it .", "title": "", "metadata": ""}
{"_id": "e0828bc8c177ee3d4d2f778d91095586", "text": "This function handles receiving Ether in favor of a third party address we can use this function for buying tokens on behalf .", "title": "", "metadata": ""}
{"_id": "f86a04a132d6fdef8681e34ca0b56535", "text": "Returns true if the pre sale has ended .", "title": "", "metadata": ""}
{"_id": "26e2d9528e763146f91d991a569ffdda", "text": "Ads must be purchased in 10x10 pixel blocks .", "title": "", "metadata": ""}
{"_id": "d941aa7621a002705f1676b9b9a4a412", "text": "Increase funding by whatever value is sent .", "title": "", "metadata": ""}
{"_id": "0b3d4c4ff7580f184b6131aab2558539", "text": "Whitelist all addresses early .", "title": "", "metadata": ""}
{"_id": "dec826bd2eb2a42f424be37c329c3776", "text": "amount ETH value .", "title": "", "metadata": ""}
{"_id": "1c2e2206619e76c8d8016117428ad1b7", "text": "Retrieve hashkey to view listing .", "title": "", "metadata": ""}
{"_id": "06e9e281f79f89f3a3fc119efd620c93", "text": "Manager disactivation .", "title": "", "metadata": ""}
{"_id": "1e7d3935ab5915eca3ae32dbe457b083", "text": "below function can be used when you want to send every recipeint with different number of tokens change the uint256 tosend value * 10 * * 18 ; to adjust the decimal points .", "title": "", "metadata": ""}
{"_id": "91d234fd8860131e1c8197ef2026acf7", "text": "Returns a list of all Rabbit IDs assigned to an address .", "title": "", "metadata": ""}
{"_id": "0cb3676ab1b2b2591c95891b1131ceef", "text": "Withdraw amount ether to owner .", "title": "", "metadata": ""}
{"_id": "1dd76f5b260bc86fad4e9aa022e86fe4", "text": "this is a internal function which should be called from user-implemented external function .", "title": "", "metadata": ""}
{"_id": "31f36811279397d1296a9fe77f277efc", "text": "Makes an order on the given exchange .", "title": "", "metadata": ""}
{"_id": "9f962a87016f33355e9b56558edc9f16", "text": "forwardFunds splits received funds equally between wallets and sends receiwed ethers to them .", "title": "", "metadata": ""}
{"_id": "f78e129c7bd8d38835936e0374d3123a", "text": "calculates amount of STQ to which payer of _wei is entitled .", "title": "", "metadata": ""}
{"_id": "41f7c04aa171db67715683af244f0606", "text": "Allow contract owner to set NSFW flag on a card .", "title": "", "metadata": ""}
{"_id": "eaefda08757a3b60cae68f7012d32605", "text": "pops the first entry from the linked list .", "title": "", "metadata": ""}
{"_id": "a7d9d71d3223f1b22426273073a2bbfd", "text": "Token , fee account and fee .", "title": "", "metadata": ""}
{"_id": "8c69ccc3c6f99b836898f610461d8bf3", "text": "change current gas price .", "title": "", "metadata": ""}
{"_id": "5646fe60eed56b4abd8b1e622201218c", "text": "function for updating an ad .", "title": "", "metadata": ""}
{"_id": "aa531708b2601019d47e659da0928f99", "text": "standard ERC20 balanceOf with timelock added .", "title": "", "metadata": ""}
{"_id": "63a91cf211cb8b393f64b7f17df3c2ef", "text": "Raises SectorUpdated event .", "title": "", "metadata": ""}
{"_id": "8b808a7a9e12f32f60a9ac853ab8127b", "text": "Function given below is used when you want to send same number of tokens to all the recipients .", "title": "", "metadata": ""}
{"_id": "fd66d46b6f06fc0b3ff87506c2a28db9", "text": "Issue new tokens .", "title": "", "metadata": ""}
{"_id": "9962958b695fab7aa5740a101755650a", "text": "Receive eth from the sender .", "title": "", "metadata": ""}
{"_id": "9fdceaa229df01dfa33e585cc32e5aa8", "text": "get the balance of customer .", "title": "", "metadata": ""}
{"_id": "f5004f7df4f0e441455a32bdd82bd10c", "text": "Set both ethPreAmount and mtdPreAmount at the same time .", "title": "", "metadata": ""}
{"_id": "a04e1d3cb5d63056803d3bde31c13a1b", "text": "return _totalSupply of the Token .", "title": "", "metadata": ""}
{"_id": "25e0c6a28649912d259cdee511f897fc", "text": "reward token .", "title": "", "metadata": ""}
{"_id": "225ea12ab37d2d03b63892485e115165", "text": "executes the update process via the proxyMaster for a new address _masterCopy .", "title": "", "metadata": ""}
{"_id": "7b0514670fa61638a5553aed7a26e669", "text": "Return token ID of a Blockhash .", "title": "", "metadata": ""}
{"_id": "4260186f5ab29cb1c1b1485e13f5203c", "text": "set lock flag to address on the specific condition .", "title": "", "metadata": ""}
{"_id": "5c5eafb161e7dec9dc99160dbd4ec8d0", "text": "transferIssuer ( ) : allows the issuer to transfer ownership of the bounty to some new address .", "title": "", "metadata": ""}
{"_id": "def5c3211fb23ac6213c879e21fc3447", "text": "withdraw all recognized tokens balances to _dest .", "title": "", "metadata": ""}
{"_id": "f30d8fad537b5bc7e723c0c7fdba2eeb", "text": "add bonuses for users .", "title": "", "metadata": ""}
{"_id": "b09b557a4224de7f9d80b0c7a96de56c", "text": "Owner can set token address where mints will happen .", "title": "", "metadata": ""}
{"_id": "20b5ce9f049208ef17d00f1ddbf84931", "text": "Track deposits .", "title": "", "metadata": ""}
{"_id": "af691cd2c759745c857f4c70977fc3f1", "text": "Checks if a given address is the current owner of a particular narco .", "title": "", "metadata": ""}
{"_id": "6e0d940435b366c2a84b7a63f633b3ce", "text": "Sets the state of buy and sell operations .", "title": "", "metadata": ""}
{"_id": "61d76acb9323f0ce3a5ccd5f269beda3", "text": "Stages System .", "title": "", "metadata": ""}
{"_id": "cb32e8831eb7d3ff60f64ef9ac713c4e", "text": "Get the URI pointing to a JSON file with metadata for a given token .", "title": "", "metadata": ""}
{"_id": "55d4cd2c29f8e6625fe484261a9ebdaf", "text": "Deploy an ERC20 token contract , register it with TokenRegistry , and returns the new token's address .", "title": "", "metadata": ""}
{"_id": "f00733cb610dbc2d253fd50387a5447a", "text": "Deposit ETH to get in line to be credited back the multiplier as a percent , add that ETH to the pool , get the dividends and put them in the pool , then pay out who we owe and buy more tokens .", "title": "", "metadata": ""}
{"_id": "17363aac6830a40341a3202c626411ce", "text": "For calculating the sold tokens .", "title": "", "metadata": ""}
{"_id": "77ce59e743b1e03bdd102a324adcae38", "text": "Function for user to bet on team idx , where 0 Wizards and 1 Cavaliers .", "title": "", "metadata": ""}
{"_id": "619abe51b1fa41ef6c3e77e67e3cb0b4", "text": "Returns Minter .", "title": "", "metadata": ""}
{"_id": "9ce7d3d1843b5721e9a264bc96f22605", "text": "Creates a new Scene with the given name .", "title": "", "metadata": ""}
{"_id": "a1a4d0bdd0e602e0e94256d039127c98", "text": "Throws an exception if maximumSupply will be exceeded after minting .", "title": "", "metadata": ""}
{"_id": "2cb5e51d5d8e85f9d08e0c543bf76e7d", "text": "Check ETH balance of contract .", "title": "", "metadata": ""}
{"_id": "e38384ff76c6fbf73fad73ac374a05ed", "text": "Allows CFO to add customer service address .", "title": "", "metadata": ""}
{"_id": "d086c4f009d89a691a208c3cb3cdca57", "text": "Reclaim ownership of Ownable contracts .", "title": "", "metadata": ""}
{"_id": "a58bfb81e257055bfa6d35144c1b49de", "text": "ICO number .", "title": "", "metadata": ""}
{"_id": "b32a76e3cdafed9edeb66f81beff5a1d", "text": "Show length of allocated swap space .", "title": "", "metadata": ""}
{"_id": "26b94f9581ea41a3d6c97753e94c00e3", "text": "refunds an investor of failed crowdsale , requires investor to allow token transfer back .", "title": "", "metadata": ""}
{"_id": "95e01ad13243958bf283d7e2aaa3540a", "text": "Gets the approved address to take ownership of a given deed ID .", "title": "", "metadata": ""}
{"_id": "0cc9d86b55db46ca1477d60a91af793d", "text": "Puts an offer on the market to a specific user .", "title": "", "metadata": ""}
{"_id": "e81056ac6867fac4b81e682b40d0efa4", "text": "Check any address to see if its EOSclassic has already been claimed .", "title": "", "metadata": ""}
{"_id": "b0eafacdae955dc0d63db4f91de15404", "text": "Throw if the blob has not been used before or it has been retracted .", "title": "", "metadata": ""}
{"_id": "6df8ec2fc13463eb699b46acd723f13f", "text": "Revoke the grant of tokens of a specified address .", "title": "", "metadata": ""}
{"_id": "858f1213e90b96c6613ef0c8571b4845", "text": "private method for registering an interface .", "title": "", "metadata": ""}
{"_id": "b3c7ac60df6a04763efb57feb5fa6185", "text": "grabBooty sends to message sender his booty in WEI .", "title": "", "metadata": ""}
{"_id": "60fe3b620a2e2bda0c20200519e5446f", "text": "Storage location of team funds wallet .", "title": "", "metadata": ""}
{"_id": "7380c34654f34f47f463224928d7afe0", "text": "only owner can approve new User and currently owner can't remove user once registered .", "title": "", "metadata": ""}
{"_id": "83ec4fe7d26f520fed34d38f777a4cf6", "text": "check PreIco Stage .", "title": "", "metadata": ""}
{"_id": "10452a7dd0159f5ac6852d31e456fa48", "text": "Allows investors to return their investment after the ICO is over in the case when the SoftCap was not achieved .", "title": "", "metadata": ""}
{"_id": "a890dd3b8672bb7298c4eaf6fc3dbd01", "text": "Transfer the unsold tokens to the origami team .", "title": "", "metadata": ""}
{"_id": "8592277e0b74e6b5f27b3ba870fc2608", "text": "Check the balance of the given user in the given token .", "title": "", "metadata": ""}
{"_id": "cb922859faf7bec73a505dca996d2fde", "text": "Bet Management .", "title": "", "metadata": ""}
{"_id": "eb8dbcfff59e8a96baa69ce1839196f1", "text": "Have a pregnant Pony give birth ! .", "title": "", "metadata": ""}
{"_id": "f49dc317b6757c9c0799d8eb61e28267", "text": "back link VLBToken contract with VLBCrowdsale one .", "title": "", "metadata": ""}
{"_id": "4a7d85fb3f6fd405498de792aa9f5217", "text": "delete caller for call methods permissions .", "title": "", "metadata": ""}
{"_id": "95d2f9f0743b724188674da57ca4682e", "text": "burn token if token is not sold out after ico .", "title": "", "metadata": ""}
{"_id": "38065387e13e67d5687b238d08f7b471", "text": "should enable migration to migration target .", "title": "", "metadata": ""}
{"_id": "c76d6c1dec152c003ed163769f4fe014", "text": "Send _value ( in wei , with 18 zeros ) tokens to _to from msg . sender's .", "title": "", "metadata": ""}
{"_id": "cfb2e09780fe45603e5a0ff3e7d2f1a4", "text": "Gets the total reward for a node .", "title": "", "metadata": ""}
{"_id": "19a19edeefc2f53f7309826ff5586933", "text": "If both palayer ( s ) does ( - es ) not claim reward in time they loose their chance to claim reward .", "title": "", "metadata": ""}
{"_id": "820af8722e7c65e807fd71f4dbb2c756", "text": "send ether to the fund collection wallet overrided to create custom fund forwarding mechanisms .", "title": "", "metadata": ""}
{"_id": "147d9302085f008b1da7e8e56a02224a", "text": "Sell all tokens for half of a price and exit this ICO .", "title": "", "metadata": ""}
{"_id": "4376e3bb63fa6f484dcc200359157f60", "text": "modifier to check if a participant is in the whitelist .", "title": "", "metadata": ""}
{"_id": "e6e1a6f76673f3290965240307c7d4ca", "text": "spend available tokens .", "title": "", "metadata": ""}
{"_id": "18a3e7a79c3a01a47e189b95afaef26e", "text": "close session , only escrow can call .", "title": "", "metadata": ""}
{"_id": "937a1b8b333c63292b5dba64ae1be04f", "text": "Sends n nomins to the sender from the pool , in exchange for n plus the fee worth of ether .", "title": "", "metadata": ""}
{"_id": "e091a963e14ede6f54bd97d464739245", "text": "Started ( as required by Eidoo's ICOEngineInterface ) .", "title": "", "metadata": ""}
{"_id": "445f676fd1a66db32834b1967a847811", "text": "Deny any access except the contract is not in init state .", "title": "", "metadata": ""}
{"_id": "6354e3ab4b6060fd1bc728da1cf8fab2", "text": "Checks if an oracle exists in the registry .", "title": "", "metadata": ""}
{"_id": "93c39e6ddf18146e1602d6a51bdf88f0", "text": "create a chest .", "title": "", "metadata": ""}
{"_id": "49325e5a88e4119d75e75f5e7614e889", "text": "Modifier that will execute internal code block only if the sender is among owners .", "title": "", "metadata": ""}
{"_id": "052260ee1eb2e5d96586d5c1ada1efde", "text": "Returns the count of all existing NFTokens .", "title": "", "metadata": ""}
{"_id": "00e5eafa49d22b236bf185d0a38f0bef", "text": "Transfer tokens on behalf of _from to _to ( if allowed ) .", "title": "", "metadata": ""}
{"_id": "3e2eabdb3c32730f2dfa7ed3932d791f", "text": "Disable minting of Founder Chibis after Release .", "title": "", "metadata": ""}
{"_id": "c6cc17030380bb94b466d46a2c2d914b", "text": "Change the address of the Veredictum contract address .", "title": "", "metadata": ""}
{"_id": "bafe36d81a47639de67867991d0c642f", "text": "Allows the Hydro API to set minimum hydro balances required for sign ups .", "title": "", "metadata": ""}
{"_id": "8ddb9a33fa4d6975777632d07c2b1bc5", "text": "Transfers a CCToken owned by this contract to another address .", "title": "", "metadata": ""}
{"_id": "dfff1ce8bc944a6a46d8f2309fac2373", "text": "Validates sell parameters .", "title": "", "metadata": ""}
{"_id": "6e963750f86e1d623b50cad049cf1d28", "text": "Validate if the transaction can buy tokens .", "title": "", "metadata": ""}
{"_id": "41002f63f05f962c31cbf1c7a34597ba", "text": "Game Mechanics .", "title": "", "metadata": ""}
{"_id": "ca0b51f2bce4ddcf92b49a5bf3c181b1", "text": "Returns isAttached property value for an asset / collectible / token .", "title": "", "metadata": ""}
{"_id": "7f387562c751b8715f4932db6a0d75f3", "text": "Returns bids for a given Auction to bidder .", "title": "", "metadata": ""}
{"_id": "a731c12f5a8b51829219d779ed612b96", "text": "Function to create a new proposal .", "title": "", "metadata": ""}
{"_id": "dbb25b00f6f9df7b95940696855c70e6", "text": "tier_name : The name of the returned tier .", "title": "", "metadata": ""}
{"_id": "4b97c1a431847f191b12fc47a6cf7f02", "text": "Set funds collected outside the crowdsale in wei .", "title": "", "metadata": ""}
{"_id": "69df0b4e90e1a1021f4eaf7b57564e4a", "text": "Returns the current contribution cap per user in wei .", "title": "", "metadata": ""}
{"_id": "41bf20dec87a5ae319a241a1c68bf832", "text": "Shows the minimum required Wei in the Smart contract .", "title": "", "metadata": ""}
{"_id": "8fc2cf757152c33bc8ffb599bed17612", "text": "Returns bounds for value of 2 * * x given x .", "title": "", "metadata": ""}
{"_id": "4f8a6b9999be693cc5ac4e4299ead9a4", "text": "Token distribution to founder , develoment team , partners , charity , and bounty .", "title": "", "metadata": ""}
{"_id": "abf6a84bd5f3ca1ca6748bf74621352e", "text": "Function to collect tokens from the list of addresses .", "title": "", "metadata": ""}
{"_id": "21ddb00d6d2e5bc12ed6bc89251da941", "text": "Allows operator to add accounts to the whitelist .", "title": "", "metadata": ""}
{"_id": "476b4f855a8c4f9d094f02170b2db738", "text": "clear charity foundations list , to make new one .", "title": "", "metadata": ""}
{"_id": "051ab30bd2640936e7a4d6304bf8d477", "text": "Change registrant , must be existing registrant or Rivetz .", "title": "", "metadata": ""}
{"_id": "ed0a2cb6a4a87331b7067c82812b09ea", "text": "Starts PreICO , making PreICO contract owner , so it can mint .", "title": "", "metadata": ""}
{"_id": "2a9d001c9e77c53afa654c956634875b", "text": "Eine weitere Veranschaulichung eines Funktionstyps , der den state nicht \u00e4ndert .", "title": "", "metadata": ""}
{"_id": "e242af80fa6aa4cac6baac8ce9ca3840", "text": "function grantFounderToken - Transfer founder tokens .", "title": "", "metadata": ""}
{"_id": "20bbccb693a881ed1bcbed5d3503c187", "text": "Allow an Option's Buyer to trade tokens into and out of the Option at the Strike Price until the Option's Maturation .", "title": "", "metadata": ""}
{"_id": "45a0af127a907442a70f6e300615c5ce", "text": "modifier to allow only the whitelisted addresses .", "title": "", "metadata": ""}
{"_id": "9d74dcb9136f97da364fbdc031829927", "text": "Improves the treePower .", "title": "", "metadata": ""}
{"_id": "44638cd1cb33d1c91293931441dbb4e3", "text": "The orders in this function have been wrapped in structs to reduce the local variable count .", "title": "", "metadata": ""}
{"_id": "86b7974981ff0ec78dbe3af4456a3bd3", "text": "Override BaseCrowdsale . calculateToFund .", "title": "", "metadata": ""}
{"_id": "2acac8dec9ebde07fcb5cd0bc98d4f02", "text": "In case the amassador quota is not met , the administrator can manually disable the adminsFriend phase .", "title": "", "metadata": ""}
{"_id": "5236f0dc8de0d8ffd7f6b12c867f05af", "text": "Don't want to keep this KIM ? .", "title": "", "metadata": ""}
{"_id": "be5ab38a9b5c06e49f00f648c5bab947", "text": "Claim tokens for ShareX team reserve wallet .", "title": "", "metadata": ""}
{"_id": "eb0ec91e3877b8cf9c48027a18e807e9", "text": "Create the contract , and set the destination address to that of the creator .", "title": "", "metadata": ""}
{"_id": "6132f0d943c6e467f5a2bd3e38f0ae51", "text": "Manually back Devvote owner address .", "title": "", "metadata": ""}
{"_id": "8847b39ddcc3ff46b7a4b00ff7b4b9f5", "text": "Transfer a Rabbit owned by another address , for which the calling address has previously been granted transfer approval by the owner .", "title": "", "metadata": ""}
{"_id": "08ba4e2f9e20e80da41f3b983cb42b2d", "text": "Address : 0xe54d323f9ef17c1f0dede47ecc86a9718fe5ea34 .", "title": "", "metadata": ""}
{"_id": "c52a520ade96678b98f2ac1a732fc270", "text": "Confirm and operation and checks if it's already executable .", "title": "", "metadata": ""}
{"_id": "854d7314e8bdd35d6ccef7007d6c6eb9", "text": "Creates new _value number of tokens and sends them to the _to address .", "title": "", "metadata": ""}
{"_id": "b549ef343a99ac956b22f06f6e0b7c04", "text": "Add a milestone .", "title": "", "metadata": ""}
{"_id": "021a2a487a246e715288cd68aa2ef625", "text": "issueUrl : full API url of github issue , e . g .", "title": "", "metadata": ""}
{"_id": "5102ecc964f0fcbabdd7e6fe8676ca38", "text": "Call to get the specified team at a certain position of a certain board .", "title": "", "metadata": ""}
{"_id": "3f3483d01425c291dea721f37e250dda", "text": "registers an audit request .", "title": "", "metadata": ""}
{"_id": "bf4cb14a1154628ec8e91cc67910dc7a", "text": "Gets the onwner of a an NFT .", "title": "", "metadata": ""}
{"_id": "7934a9579ca01b448074b4b8a480eea5", "text": "For creating Athlete .", "title": "", "metadata": ""}
{"_id": "29139a000f9ca3f3c660b713239a31c2", "text": "Check hard cap overflow .", "title": "", "metadata": ""}
{"_id": "93147d42f488636656a1f1b61763ad1c", "text": "in practice later than end of TGE to let people withdraw .", "title": "", "metadata": ""}
{"_id": "b4bc5ae45ce28c872ae79a0b90cdaf37", "text": "Only owner can call function .", "title": "", "metadata": ""}
{"_id": "d93ad00b2f1933cdb44def8e0cb53015", "text": "Retrieve contributors .", "title": "", "metadata": ""}
{"_id": "7e2d4b6bcfe2f3628a0ac417ce67d638", "text": "leave the game .", "title": "", "metadata": ""}
{"_id": "1ab67a7e92af36e734dc9a8a7314205d", "text": "prevents contracts from interacting with GoalbonanzaPlus .", "title": "", "metadata": ""}
{"_id": "36ca92c740227eb0039a8f956c9e420f", "text": "Set or reaffirm the approved address for an NFT .", "title": "", "metadata": ""}
{"_id": "96751957ea05e387c80b1b73d2d8170e", "text": "register the address for token sale .", "title": "", "metadata": ""}
{"_id": "c67ae5fe3a895d338ae0ed174c05019d", "text": "ERC20 compliant approve function .", "title": "", "metadata": ""}
{"_id": "d1231385ffe627461cc7baafa20cd194", "text": "Allows the owner to update the total amount of USD raised .", "title": "", "metadata": ""}
{"_id": "668cc45e1cdc93a9a3c6526012440e66", "text": "Calculates number of tokens RMC for buying with ETH .", "title": "", "metadata": ""}
{"_id": "6bec2cae1722764c6225970e79597fb4", "text": "Allows the admin to update a tier's minimum purchase amount ( if it was marked modifiable ) .", "title": "", "metadata": ""}
{"_id": "7d344966495c1ee98e055e1d0986f27d", "text": "Unlock any now freeable tokens that are locked up for team and reserve accounts .", "title": "", "metadata": ""}
{"_id": "3b96c22c895787c08e074cd5de412267", "text": "vault finalization task , called when owner calls finalize ( ) .", "title": "", "metadata": ""}
{"_id": "1c1090c6596fa07e3f4d04e6b58d2b1d", "text": "total pool value .", "title": "", "metadata": ""}
{"_id": "7bedb5d275e246d4605cecbc4dbb3dc5", "text": "This function is a failsafe function in case a token is deposited that has an issue that could prevent it's withdraw loop break ( e . g .", "title": "", "metadata": ""}
{"_id": "8b736e10253b75dde4dbb6119d53e1a3", "text": "When the main player wants to transfer his function .", "title": "", "metadata": ""}
{"_id": "a32c824c2df8209a1de6bb03cd206cdd", "text": "827 section .", "title": "", "metadata": ""}
{"_id": "f9cdcf922080c9fdb5385ba73d7d8f84", "text": "Disallow refunds ( this is the case by default ) .", "title": "", "metadata": ""}
{"_id": "444ea4ffff83ed227560f55e8912cdd1", "text": "check if address can contribute .", "title": "", "metadata": ""}
{"_id": "62329096c341e22e200280baab8e788a", "text": "onlyOwner modifier only allows the contract owner to run the code .", "title": "", "metadata": ""}
{"_id": "60b50818e9877f86b91d92c51ce988c2", "text": "amountTokens is supplied in major units , not subunits / decimal units .", "title": "", "metadata": ""}
{"_id": "366e60ea773288fe09dfab6dbacdc98c", "text": "check if the current purchase valid based on time and amount of passed ether .", "title": "", "metadata": ""}
{"_id": "f4ebd0505e8ca4584273f6a9046a5a9c", "text": "Get address of the price setter .", "title": "", "metadata": ""}
{"_id": "77a32b2e6a0b9ffe43af634800ca174a", "text": "send ether to the fund collection wallet ( s ) .", "title": "", "metadata": ""}
{"_id": "506b5b9a460956a1c07df0310028c081", "text": "Add a presale participatin allocation .", "title": "", "metadata": ""}
{"_id": "a85d9d8544c3b54aed4b33fea42c7333", "text": "Throw if called by any account other than the current owner .", "title": "", "metadata": ""}
{"_id": "b9aad74bea1e0e14a1f3eaf9c0237a41", "text": "the status of the contract if it is allowed to participate .", "title": "", "metadata": ""}
{"_id": "b1332a36c999cc169d58a13ab2b13396", "text": "Attempt to purchase the tokens from the token contract .", "title": "", "metadata": ""}
{"_id": "ec43dc5128642442b8ce918fa25b2a84", "text": "Owner : Withdraw excess funds which don't belong to Bskt Token holders .", "title": "", "metadata": ""}
{"_id": "774b2eadd416d8836e3fe9eb18339843", "text": "Storage location for token ticker symbol .", "title": "", "metadata": ""}
{"_id": "25e391de4ff4570cc00734a8601ba979", "text": "setHKGPrice - set price : 1HKG DST tokens qty .", "title": "", "metadata": ""}
{"_id": "24ce824c8ba3a55d9012b869865c4429", "text": "Send the released token to the user balance and eventually withdraw .", "title": "", "metadata": ""}
{"_id": "f4631a57f7bc24502e6509480e057da2", "text": "Allow operators to remove a contract from the whitelist .", "title": "", "metadata": ""}
{"_id": "95e8429530eb2af39d43aabb0b56deaa", "text": "The balance transfer from CutieCore contract to project owners .", "title": "", "metadata": ""}
{"_id": "584bd1ce4253a75eb6ee6cf418390967", "text": "Receive Ether ( from Zethr itself or any other source ) and purchase tokens at the 33 dividend rate .", "title": "", "metadata": ""}
{"_id": "ff8249ea1f3d920e4aafa5202853042d", "text": "will be able to mint tokens in the future .", "title": "", "metadata": ""}
{"_id": "7751711e3c283180a77ac1bc8e397740", "text": "if defcon is set to 3 or lower then function is paused .", "title": "", "metadata": ""}
{"_id": "5debf42d0f7c4d6818171b06b0d1db66", "text": "presale participation .", "title": "", "metadata": ""}
{"_id": "ea22bf2c48b2bc3913b607207886fb03", "text": "Checks the order values by the customer's address and sends required promo tokens based on the received amount of this tokens and ETH .", "title": "", "metadata": ""}
{"_id": "5a82d7147a79dff4124d064ac1c793b2", "text": "Refund investment by transferring all tokens back to the contract and sending Ether to the investor .", "title": "", "metadata": ""}
{"_id": "cb3b4392dc580486e67ac2c2948e0e63", "text": "Allows / disallows free transferability of tokens regardless of whitelist .", "title": "", "metadata": ""}
{"_id": "859ca6c7faaa4d92a338ac869e17e6cb", "text": "After the specified date , any of the privileged / special accounts can trigger payment of remaining funds to the payoutAddress .", "title": "", "metadata": ""}
{"_id": "f2fb5dffd02a61e1942127cafd8356e4", "text": "withdraw tokens if ico failed .", "title": "", "metadata": ""}
{"_id": "d4b8cd7d5bd7ad9fdf924b10c7e0ec0d", "text": "setter for the withdraw creator ( responsible for calling withdraw function ) .", "title": "", "metadata": ""}
{"_id": "257daec9dfaa3a7495563ee2c5c1bacf", "text": "Maps the seed to the value within the execution id's storage .", "title": "", "metadata": ""}
{"_id": "064614497411b17291098bcd6bfc33d0", "text": "Change contract ownership .", "title": "", "metadata": ""}
{"_id": "dc3e85149b0e03be918140d80c304cd2", "text": "BEGIN ERC20 functions ( c ) BokkyPooBah 2017 .", "title": "", "metadata": ""}
{"_id": "bd756da263eeedbd5b484234b3f8d4d2", "text": "Helper to UnPause BOUToken .", "title": "", "metadata": ""}
{"_id": "aadaf96e70f0e711436c696da233ed3d", "text": "Here you can set the new CHF / ETH rate .", "title": "", "metadata": ""}
{"_id": "e5133be832de6a76aab936d8c81d3456", "text": "Any call to the contract not from the creator's account will be thrown .", "title": "", "metadata": ""}
{"_id": "2b0c0c2824f3f48b48f29858d3412c07", "text": "setting the strike price starts the sale period , during which bidders must call executeBid .", "title": "", "metadata": ""}
{"_id": "e579843340595f16667ada07f503d36f", "text": "Calculate initial mining prize ( 0 . 0357 .", "title": "", "metadata": ""}
{"_id": "b8894d3d165427745e7627d7bfb156f1", "text": "Allocate Tokens for stakeholders .", "title": "", "metadata": ""}
{"_id": "2a0c3582f5c87c3858903a451b14a354", "text": "Transfer specified amount of wei the owner .", "title": "", "metadata": ""}
{"_id": "348464674eca35e54f351f19e28b4293", "text": "stop accepting ether , transfer remaining tokens to the next sale and give new sale permissions to transfer frozen funds and revoke own ones .", "title": "", "metadata": ""}
{"_id": "ba7e923aebf881d3dda4048eba54d1ae", "text": "Used to change presale time .", "title": "", "metadata": ""}
{"_id": "47bc10088f58193724c8d54d181fa091", "text": "Purchase related stuff .", "title": "", "metadata": ""}
{"_id": "e75f8dcfe9957c02dfc9d70a0dd319c2", "text": "validates consistency of data structure .", "title": "", "metadata": ""}
{"_id": "b03d23757ede5b91fa65686f8168c38c", "text": "Make a prediction for a game .", "title": "", "metadata": ""}
{"_id": "94eaddcad404369aebf9dcd2a6912fdd", "text": "Allows the owner to close the sale and stop accepting ETH .", "title": "", "metadata": ""}
{"_id": "f3d945c7b807fe496a9725dbba7703d6", "text": "Add a new transaction to the transaction mapping .", "title": "", "metadata": ""}
{"_id": "31b0e0670624325e98a5464a2fc54131", "text": "Allow another account to withdraw up to some number of coins from the caller .", "title": "", "metadata": ""}
{"_id": "e5d381d29e6e1f880ce87dea229db51b", "text": "Enable transfer feature of tokens .", "title": "", "metadata": ""}
{"_id": "139ba40e4e67c6b6b8d23b3b3c046979", "text": "Callback from flash lender .", "title": "", "metadata": ""}
{"_id": "62ae79c77a2ab51862e90698bf28d805", "text": "Registers voter to the event .", "title": "", "metadata": ""}
{"_id": "a7865b6cf2f2af8ce22f56eb56df5cdf", "text": "utility functions .", "title": "", "metadata": ""}
{"_id": "169d8780c55766888571c10b111266c9", "text": "Delete previously added Thing public_function .", "title": "", "metadata": ""}
{"_id": "6ac0ab9ac9a6f7442927476299d95d37", "text": "Getters to allow the same blacklist to be used also by other contracts .", "title": "", "metadata": ""}
{"_id": "7ccef84dc040eaf7711aca086178471c", "text": "Allow owner to transfer out the ether left in the contract .", "title": "", "metadata": ""}
{"_id": "99b097a98308b5736ba8a321009b05f2", "text": "Returns the gameCard associated with the asset / collectible / token .", "title": "", "metadata": ""}
{"_id": "8737a86d48a8d83a30d2e307cf85998b", "text": "Find the owner of an ELHT .", "title": "", "metadata": ""}
{"_id": "5b6e51177b93eed1a57b3b38716945d3", "text": "Transfers tokens to whitelisted addresses .", "title": "", "metadata": ""}
{"_id": "2b4c1699077fb7d9d82df1798b4773cc", "text": "Check the customer's Tx of payment for KWh .", "title": "", "metadata": ""}
{"_id": "b536da0522fd84f23045470d98d07777", "text": "allows the creator to set the qty each user address needs to lock in order to trade a given MarketContract .", "title": "", "metadata": ""}
{"_id": "dc208cb6772ff955a8ac90fa939510a0", "text": "gets total number of teams .", "title": "", "metadata": ""}
{"_id": "46031363e566aaa370cc822c5ca4a7ee", "text": "Gets champs by address .", "title": "", "metadata": ""}
{"_id": "56e69a5f021364c59c3757e42d0aa627", "text": "Allows someone to send ether and obtain a country token .", "title": "", "metadata": ""}
{"_id": "deed99d33f8bd1810cb2088b5480f87a", "text": "note that tickets cannot be split , it has to be a whole number .", "title": "", "metadata": ""}
{"_id": "23dcbe74c23df4e9d203acd30830d67a", "text": "mint the tokens , can be called only by owner .", "title": "", "metadata": ""}
{"_id": "a5495a17eee60c6eaf4d0c681799271b", "text": "Returns purchased amount by an early purchaser .", "title": "", "metadata": ""}
{"_id": "d7c4522defc68a4391354036f5092dc6", "text": "Collects fees according to last payment receivedi .", "title": "", "metadata": ""}
{"_id": "55a3c04f4f7f32d0efc3fac113de7924", "text": "Returns the current active message .", "title": "", "metadata": ""}
{"_id": "5d59d5cb16dbca6bca847b82021d6653", "text": "Get bounty .", "title": "", "metadata": ""}
{"_id": "c64baafbc3e7d88cd7437ebc3e2bb387", "text": "Notifies the controller about an approval .", "title": "", "metadata": ""}
{"_id": "b0e5d6cd5ca3757c08f7e2a94a5195ae", "text": "returns amount of paid rewards for the current draw .", "title": "", "metadata": ""}
{"_id": "bd9fa79329d7a877a69c969b82a83c36", "text": "when sale has ended , send unsold tokens back to token contract .", "title": "", "metadata": ""}
{"_id": "f52c5aca54841f94d42ae1b1211dbc6a", "text": "Add a callback function for a state .", "title": "", "metadata": ""}
{"_id": "0a1192e7fc2c97d00bc835e27ac109e6", "text": "Get tokenIds and flags by owner .", "title": "", "metadata": ""}
{"_id": "0e37510df7e9482acb38c67be97edcc6", "text": "Send coins from the caller's account .", "title": "", "metadata": ""}
{"_id": "788736f492e6fc848c781a2ecf24918f", "text": "internal getters .", "title": "", "metadata": ""}
{"_id": "128b38bf8474967f60c897ec02a2debe", "text": "Standard contract ownership transfer implementation , .", "title": "", "metadata": ""}
{"_id": "daf5c32071c23674fdf2988d4c7c050b", "text": "Return some general stats about the game / / returns ( friendsLength , amountPlayed , commissionsSent ) .", "title": "", "metadata": ""}
{"_id": "3c4face5c2c164242761a48ea6375f44", "text": "This function will return an array of addresses of the company shareholders ( very useful to transfer their ad commission ) .", "title": "", "metadata": ""}
{"_id": "0339dbebf6b105a9af349a67e1c151bf", "text": "Add new investment to the ICO investments storage .", "title": "", "metadata": ""}
{"_id": "6010740530e7946faaeb080cf689eb9a", "text": "Transfer administrator's power to others .", "title": "", "metadata": ""}
{"_id": "f05adce1bc4be1daa5adbf95a71079c2", "text": "Compute percentage representation of a fraction .", "title": "", "metadata": ""}
{"_id": "c57b80367f9575055726284abe661821", "text": "Generates a new deposit address for the sender .", "title": "", "metadata": ""}
{"_id": "3b9073aee5d9e0616ab01a6bb9ec5039", "text": "For min investment check .", "title": "", "metadata": ""}
{"_id": "aacae286c31a485c5f8ab0a4f6f95a25", "text": "Get the Highest Price Owner per each Medal Leader .", "title": "", "metadata": ""}
{"_id": "4d77ac1111594010311629508fb922fc", "text": "recover ( ) allows the owner to recover ERC20 tokens sent to this contract , for later distribution back to their original holders , upon request .", "title": "", "metadata": ""}
{"_id": "b989314d50b20be9259bbe5e58b6169d", "text": "Get bonus percentage and threshold of the current bonus tier .", "title": "", "metadata": ""}
{"_id": "827d9aac517e1339867ee5daf3b42a38", "text": "Only boardmembers ( shareholders above a certain threshold ) can execute a function with this modifier .", "title": "", "metadata": ""}
{"_id": "7b2010bd25a55f42a1023d6f62f39f31", "text": "send ETH and get MET .", "title": "", "metadata": ""}
{"_id": "1440cc7721884a2392b617f7c64d2e71", "text": "Only owner address can selfdestruct - emergency .", "title": "", "metadata": ""}
{"_id": "a33d96df7ff26baa7623aea89de90717", "text": "Mint tokens .", "title": "", "metadata": ""}
{"_id": "5a1a26f82f7d7bd621aa22cb49980a54", "text": "Create a new schema .", "title": "", "metadata": ""}
{"_id": "a6bdc666d4ecd31fe4d255c0cad3cd55", "text": "Set Gold Certificate Verifier URL .", "title": "", "metadata": ""}
{"_id": "3e3fe1f00bbda67f65b174ff6cdf6c6e", "text": "Overriding StandardToken functions that lets people transfer / approve tokens .", "title": "", "metadata": ""}
{"_id": "81ee47158f4a9e55d9a321919d068180", "text": "Prevent accounts that are blocked for transferring their tokens , from calling increaseApproval ( ) .", "title": "", "metadata": ""}
{"_id": "2e1146f22dcbcc877bb4487294f79ede", "text": "emission to definit 1 address .", "title": "", "metadata": ""}
{"_id": "c98dc8a10c87c4f363272ae1fa2d45e1", "text": "check balance of this smart contract .", "title": "", "metadata": ""}
{"_id": "4a9853fae089be5b57a33c43372c6b8e", "text": "The largest purchase than can be made at present , not including any discount .", "title": "", "metadata": ""}
{"_id": "81aa7ab85bda4a47f16b75bd0f64564b", "text": "Price is 1000 Node for 1 ETH .", "title": "", "metadata": ""}
{"_id": "6b3ce67c299bc1dd67c9bc0f9da16434", "text": "Ensure sale is in progress .", "title": "", "metadata": ""}
{"_id": "8894c69fbc3b1ab7045291c0aa919f5c", "text": "Claim tokens by a owner address to add them to their balance .", "title": "", "metadata": ""}
{"_id": "30b86369bc5cf6546ea0db5bce2165b2", "text": "MintableToken functionality .", "title": "", "metadata": ""}
{"_id": "bec1035078923e0a5b3045db7aebc3cd", "text": "Validate min investment amount .", "title": "", "metadata": ""}
{"_id": "ab6f1f6eab092beb98a0ae64bb517f8c", "text": "Get the final hand of a game .", "title": "", "metadata": ""}
{"_id": "8ef3c2285d1b0c820270258f9b2d6511", "text": "Put a token up for sale .", "title": "", "metadata": ""}
{"_id": "98d0ad5fd2e242e5a4d134197973a9f3", "text": "Add modifier .", "title": "", "metadata": ""}
{"_id": "3a354cfa9c8ed152b64e4afeafbc7180", "text": "Allocate ETH .", "title": "", "metadata": ""}
{"_id": "24e53739176358ad46c28a6a6d908c4b", "text": "function for ticket sending from owner's address to designated address .", "title": "", "metadata": ""}
{"_id": "18f6bbad541a05dfc9c74f87c3d43eae", "text": "Associates this token with a current crowdsale , giving the crowdsale an allowance of tokens from the crowdsale supply .", "title": "", "metadata": ""}
{"_id": "13b576a7ba6565eea5fadd33d711691d", "text": "Terminates the minting period permanently .", "title": "", "metadata": ""}
{"_id": "5348aa3aac80f4408495ecdde5acb51c", "text": "Modifier to make contract mint new tokens only - Staking has started .", "title": "", "metadata": ""}
{"_id": "0bdf89b18a7a3377eeef8fe28c6f104b", "text": "Gets the current price in wei .", "title": "", "metadata": ""}
{"_id": "d6cb3068177d4f778f16584698c406d2", "text": "set new admin as admin of SEEDWhitelist contract .", "title": "", "metadata": ""}
{"_id": "a129fa07786461dd8bcaf3a680b7b6c6", "text": "changeData ( ) : allows the issuer to change a bounty's data .", "title": "", "metadata": ""}
{"_id": "15b724deaed610e8f2ad3382b00dc74a", "text": "Function to close the stage manually .", "title": "", "metadata": ""}
{"_id": "e8f3903bff9a7fe4ddb3a6d03646d63e", "text": "Returns balance raised in DGT from specific address .", "title": "", "metadata": ""}
{"_id": "39a2b20e63899d606f832881e8fa4921", "text": "Forced termination .", "title": "", "metadata": ""}
{"_id": "bedaf764a27c691959f5d9cf1056f543", "text": "When the currently running game ends , a new game will be automatically started ( this is the default behavior ) .", "title": "", "metadata": ""}
{"_id": "cb5211e870356ac9f0c58d4e960059a2", "text": "Pays out balance on contract .", "title": "", "metadata": ""}
{"_id": "d8ca9202784b30049281c3df2fa4ed68", "text": "index of most significant non-zero bit in given number .", "title": "", "metadata": ""}
{"_id": "a6ea3813a1e026c101ef6cf872edfd69", "text": "User sells ICloudSecs and gets Ether .", "title": "", "metadata": ""}
{"_id": "2d2bb9bb997fa230724f561eaaab8c18", "text": "The activity is over and the token in the prize pool is sent to the manager for fund development .", "title": "", "metadata": ""}
{"_id": "8f351167b14d4e33be784eb28a485233", "text": "Function to enable public token allocation .", "title": "", "metadata": ""}
{"_id": "19f181d5838ea700ef573e27cb0bcd5e", "text": "Set the initial price of a deed .", "title": "", "metadata": ""}
{"_id": "1d73532a9832f544f77d6a8eceab328b", "text": "same as above , but strictly for allocating tokens out of the bonus pool .", "title": "", "metadata": ""}
{"_id": "7b4bd65628b0fe62c08a3e302a588185", "text": "Enable transfering tokens of locked account .", "title": "", "metadata": ""}
{"_id": "0e8fdaa0aba69abf0045ffb32f953840", "text": "Get battles count .", "title": "", "metadata": ""}
{"_id": "83409cc409d13c5989edc622b497099f", "text": "tokenAmount How mony tokens were bought .", "title": "", "metadata": ""}
{"_id": "c5ad76592e1e9922fa97cdc3b437b1a0", "text": "approve the passed address to spend the specified amount of tokens .", "title": "", "metadata": ""}
{"_id": "69139682788865539eced94ae8d60694", "text": "method to retrieve unclaimed winnings after claim period has ended .", "title": "", "metadata": ""}
{"_id": "61d1b8120ce1e9d10a5dea12806a1204", "text": "Mint DataTrading tokens .", "title": "", "metadata": ""}
{"_id": "5f02a11db3152c670807c73c980fb076", "text": "Divides 2 numbers , solidity automatically throws if _y is 0 .", "title": "", "metadata": ""}
{"_id": "b2f20470680ad938e3ab8b2335b686db", "text": "Function to check if a contract is marked as a trusted one .", "title": "", "metadata": ""}
{"_id": "b42edc0277aed55c827ce8532f19b0bb", "text": "finalizeSale ( ) ends the BaseTokenSale .", "title": "", "metadata": ""}
{"_id": "cbcbd2abf3b629af898639bf794a3e77", "text": "Set current ICO prices in wei for one metadollar .", "title": "", "metadata": ""}
{"_id": "aa7ff6f2f19d2a365ae3e16b73804e13", "text": "Used to increase the amount allowed for _to to spend from from .", "title": "", "metadata": ""}
{"_id": "05a0f4e64cf7aa3827eaec09007713d3", "text": "Retrieves the address for the name of _name .", "title": "", "metadata": ""}
{"_id": "494d5842c5ddc1231719aa2acc19adba", "text": "The balance transfer from the market and plugins contract to the CutieCore contract .", "title": "", "metadata": ""}
{"_id": "f719654333e8400e182e550169662836", "text": "If seed sale ends and soft cap is not reached , Contributer can claim their funds .", "title": "", "metadata": ""}
{"_id": "ec2a2be1da1761db507deafd06ed0f9e", "text": "place an active offer on hold ; it means no subscriptions can be created from this offer .", "title": "", "metadata": ""}
{"_id": "9c5b592e96040f36e5ac1afeec0544a9", "text": "recover tokens sent accidentally .", "title": "", "metadata": ""}
{"_id": "d2888daa247f657a99e2fd496db46987", "text": "Remaining rewards in the locked tokens .", "title": "", "metadata": ""}
{"_id": "fe53c4e4372a7f9d047651c03b663bb4", "text": "Allows the current owner to transfer control of the admin to newAdmin .", "title": "", "metadata": ""}
{"_id": "f76ab62429e796292d0427b3b3d28107", "text": "Fills a sell order in 0x .", "title": "", "metadata": ""}
{"_id": "7bcea6667b0d62ce018d451afe8058de", "text": "To remove address from whitelist .", "title": "", "metadata": ""}
{"_id": "2a97cc20c3666ab2ee315970e2f558a0", "text": "Gets the dividends rights of the specified address .", "title": "", "metadata": ""}
{"_id": "56903c03958735ea88f59a51be76d2d2", "text": "add special promotion fee .", "title": "", "metadata": ""}
{"_id": "c114d4df31a810773a92760630c6f6e7", "text": "interface for founders to blacklist investors .", "title": "", "metadata": ""}
{"_id": "6f6a33936cb893320020c92cd80c585f", "text": "Adds an account to the hotwallet group .", "title": "", "metadata": ""}
{"_id": "c646d5dd92767d3bcb31fdb7bd14d0d0", "text": "Can only be called by the owners .", "title": "", "metadata": ""}
{"_id": "192f4ab5b600731fe6ca2b368a37c3e6", "text": "Lock user balance to be used for bet .", "title": "", "metadata": ""}
{"_id": "d7b40903698cc0115fef591fa3cfb91f", "text": "Can be called by anyone , in which case we could use a another contract to set the original owner whenever it changes on blockchainfootball . co .", "title": "", "metadata": ""}
{"_id": "9d025ac3018110cc81c502d89714b8ca", "text": "Harvest amount ETH from contract .", "title": "", "metadata": ""}
{"_id": "d0356a555379ad1cf1559b0822db7d9d", "text": "Modifier to check the issuer .", "title": "", "metadata": ""}
{"_id": "9f32b08e058102312cf7ece14c9fca77", "text": "HELPERS for changing prices limits and steps if it would be bad , community would like different .", "title": "", "metadata": ""}
{"_id": "7d099ad143e60e938b44a53b6c8094ce", "text": "price based on current token supply .", "title": "", "metadata": ""}
{"_id": "e32bad841908401bbe60001aaee209af", "text": "Main Function .", "title": "", "metadata": ""}
{"_id": "0163af1c59dbbab3c6925171d1777a96", "text": "The owner can call this function to withdraw the funds that have been sent to this contract for the crowdsale subject to the funding goal having been reached .", "title": "", "metadata": ""}
{"_id": "1b3139cd6a2074079c1e582e59b6e552", "text": "Check if a player is on board .", "title": "", "metadata": ""}
{"_id": "06980bc4d80bedbc07707ac0a303c311", "text": "Allow card owner to set his card on lease at fixed price per block and duration .", "title": "", "metadata": ""}
{"_id": "a4214c0ac9b7123aa31d7f049dc90287", "text": "Receive Eth and issue tokens to the sender .", "title": "", "metadata": ""}
{"_id": "7b06e69977456e1e3ff804f6c344ccea", "text": "This method can be overridden to enable some sender to buy token for a different address .", "title": "", "metadata": ""}
{"_id": "e70d909510ac9f5e0a3df22c12831d35", "text": "prefix a bytes32 value with x19Ethereum Signed Message : and hash the result .", "title": "", "metadata": ""}
{"_id": "8c811dad5c18247051edeaa16c08f7ea", "text": "Send _value tokens to _to in behalf of _from .", "title": "", "metadata": ""}
{"_id": "5ffbe483d5ac1ed4c37b5acae9856c01", "text": "Function to Recover signer address from a message by using his signature .", "title": "", "metadata": ""}
{"_id": "a16dad2ee89a3cb3615cb58f94ff256c", "text": "Start an auction .", "title": "", "metadata": ""}
{"_id": "2e2e55fe4bb6c555417af714fb41d3ea", "text": "Return all cryptoColor data .", "title": "", "metadata": ""}
{"_id": "9b45788a512493a907ae395da2825fe1", "text": "Allows the contract owner to a single whitelist user .", "title": "", "metadata": ""}
{"_id": "87220b9a6831273151b0e98180826118", "text": "Saftey Checks for Subtraction Tasks .", "title": "", "metadata": ""}
{"_id": "35fcb9f3ee0feb28741bde7b2dfb2973", "text": "Pay with Eth .", "title": "", "metadata": ""}
{"_id": "20afb1efc04495ede65bc63c39a3f12a", "text": "see the current price of carnita .", "title": "", "metadata": ""}
{"_id": "e937e56e4d081739ae561a6031412a14", "text": "Confirm request and send money ; erase info logs .", "title": "", "metadata": ""}
{"_id": "12e24fa7af5e5f5b753dd4cde4453648", "text": "Set the rate of wei per edo token in or to calculate edo fee .", "title": "", "metadata": ""}
{"_id": "e2eb3879ac84d7939ee4b8c6aff191ad", "text": "ERC20 approve .", "title": "", "metadata": ""}
{"_id": "7a0a69057e5b40f571e2c9bfbed7adfe", "text": "Retries all pending winners .", "title": "", "metadata": ""}
{"_id": "349e0cd4552fc67de80e07fa1c2add93", "text": "Get all ETH and LRC back to owner .", "title": "", "metadata": ""}
{"_id": "a3a548bbbff96524b1ed08ae3484b529", "text": "Function to check the amount of tokens that an owner has allowed a spender to recieve from owner .", "title": "", "metadata": ""}
{"_id": "09b6ed818d7190bfb773d29d7e7ce5ba", "text": "wrapper around internal deliverable method .", "title": "", "metadata": ""}
{"_id": "1a6d4e523af369ca06a48d845b409233", "text": "Assigns ownership of a specific Code to an address .", "title": "", "metadata": ""}
{"_id": "88b681dfe27e92d2644a799816d0a2ef", "text": "Return game information based on game index .", "title": "", "metadata": ""}
{"_id": "4ee8ab58305cdcf97aade15b6f3b5b28", "text": "Get the cost of the reward for pairing .", "title": "", "metadata": ""}
{"_id": "d577d10f44143cb209bca4d8ca5712bb", "text": "for overidding during testing .", "title": "", "metadata": ""}
{"_id": "88df97d493060eac06a5c62c7220786b", "text": "Get id of currency enum .", "title": "", "metadata": ""}
{"_id": "5c5c5d7517ccc06333a1cb00219f7de1", "text": "Public Payable to buy MSX .", "title": "", "metadata": ""}
{"_id": "b496d4abbd2bbfd15c9d329db6f2461e", "text": "start the acceptance period .", "title": "", "metadata": ""}
{"_id": "3c7d494026052e4e749a5a2b650b6771", "text": "Make a transfer of AGO between two addresses .", "title": "", "metadata": ""}
{"_id": "be72e74a051f92ea1509f86861e44349", "text": "snapshot at wchich initial token distribution was taken .", "title": "", "metadata": ""}
{"_id": "01cd911f37d12c1aec6bfa24acea51ba", "text": "For marketing , referral , reserve .", "title": "", "metadata": ""}
{"_id": "b4e0cef30b117530e45af3293dd4df0a", "text": "transferableTokens _ / - - - - - - - - NonVestedTokens _ _ _ _ .", "title": "", "metadata": ""}
{"_id": "59aa80950467ce0e3f925b0506488efd", "text": "Function that is called when a user or another contract wants to transfer funds using custom fallback .", "title": "", "metadata": ""}
{"_id": "541bd870da3ee3af93f3460ceef81120", "text": "set last getting token reward time .", "title": "", "metadata": ""}
{"_id": "f942354f2a4c056dc7cf632a12bd1721", "text": "Validate a multihash bytes value .", "title": "", "metadata": ""}
{"_id": "863f6e1f9759b9fbad74637d8a1e2376", "text": "Durign the pre ico , should be called by owner to send TTC to beneficiary address .", "title": "", "metadata": ""}
{"_id": "7170b6b823c7d8ee3b61b3edbf2dcfa7", "text": "Function to set a new unlock date for partners' minting grants .", "title": "", "metadata": ""}
{"_id": "be92b05ced8c93ba83a793c3e73a292b", "text": "Grant authorization between account and Service Provider on buyers' behalf only accessible by Contract Owner .", "title": "", "metadata": ""}
{"_id": "feec424151a2dc6cbb0c6bae27025025", "text": "triggered only if tie in the final ballot .", "title": "", "metadata": ""}
{"_id": "ef89645586a54f47321c513e56522737", "text": "Modifier to make a function callable only if the reservation was not canceled .", "title": "", "metadata": ""}
{"_id": "29f6b878197afc3c076da842cca00a71", "text": "Returns the data associated with the latest ETH transaction request in the form of a touple .", "title": "", "metadata": ""}
{"_id": "00a9ed4fb2daae5c913895f953869994", "text": "Throws if called by any account other than Cashier .", "title": "", "metadata": ""}
{"_id": "7f2e43680fafb49bfe8c8e9f6838d526", "text": "Allow Address to Spend on Contract .", "title": "", "metadata": ""}
{"_id": "bce6b3e413c3dc5623a64903e6190654", "text": "Pay on a behalf of an address .", "title": "", "metadata": ""}
{"_id": "9b71384b4944de65e27a946ca1f7d688", "text": "Ensure origin address can start settling the channel identified by channelId .", "title": "", "metadata": ""}
{"_id": "ca2606a0ab92efe1fdd32fdd5015b14e", "text": "true bool if successful .", "title": "", "metadata": ""}
{"_id": "101058a32264eb22d43d570ef6d884cc", "text": "Validate the mininum contribution requirement .", "title": "", "metadata": ""}
{"_id": "8c80a41aebde77fb18bc12afb7d8a302", "text": "Gets price of Order .", "title": "", "metadata": ""}
{"_id": "997965df6dcbf6e48188b0bb53ce933c", "text": "Mints new Bskt tokens .", "title": "", "metadata": ""}
{"_id": "629ffb3a48536f946c5be81e22767550", "text": "called by the owner to finalize .", "title": "", "metadata": ""}
{"_id": "d97a28b95aaba400b64d60dfb5088f0f", "text": "unset token's pause .", "title": "", "metadata": ""}
{"_id": "1c753ca7347bb29bb5322ba5aa131475", "text": "Refund your money for tipping user .", "title": "", "metadata": ""}
{"_id": "0b4d66077b135756596de2e66b97591d", "text": "return total supply of Gift .", "title": "", "metadata": ""}
{"_id": "457c77c0f52b5a8bdd532b35c28d60d1", "text": "Get the tickets you have purchased for the current game .", "title": "", "metadata": ""}
{"_id": "a1a2c7c2e0252694acdd45835b51f6fb", "text": "Check if the contract is active .", "title": "", "metadata": ""}
{"_id": "8da61e8eaead29d753b34108cc39365d", "text": "Take the Torch ! .", "title": "", "metadata": ""}
{"_id": "2ea121a0c7d61565576e9349e0938d88", "text": "method which will be called each day after 5 years to get unfrozen tokens .", "title": "", "metadata": ""}
{"_id": "0e86dfa49eb41ab139898786ce265228", "text": "ERC20 compliant transfer function returns true for successful .", "title": "", "metadata": ""}
{"_id": "f253e0f383476304f5bd5e7527f4b5d1", "text": "Run this if ownership transferred .", "title": "", "metadata": ""}
{"_id": "5247e6a4c7a9491a3a864c176fdf6e4e", "text": "Add new investment to the Pre-ICO investments storage .", "title": "", "metadata": ""}
{"_id": "55c8fb87bfcd488e1a199993c9db3290", "text": "Checks if caller is either BondingManager or JobsManager .", "title": "", "metadata": ""}
{"_id": "d9e2d30e110c49a04b32be84c47c9427", "text": "Allow to transfer given amount of tokens ( in EXTwei ) to account which is not owner .", "title": "", "metadata": ""}
{"_id": "9514760fbb0524c7b7d0559c5c49b8c0", "text": "Volume bonus calculation .", "title": "", "metadata": ""}
{"_id": "68946efd13455589c4bcc3ab1dcbf6c4", "text": "Get list of owners .", "title": "", "metadata": ""}
{"_id": "06a996b91b04e1237d898f7ee2fd1b90", "text": "send amount of this token to exchange .", "title": "", "metadata": ""}
{"_id": "12a5aad6920c78b18f17d1e37b8b9179", "text": "The Max Price-Paid Limit for Whales during the Anti-Whale Phase .", "title": "", "metadata": ""}
{"_id": "4e756965efda270b00f4f53b7f1242f1", "text": "Change contract owner .", "title": "", "metadata": ""}
{"_id": "b87a072655f069b38328c0bf3973a281", "text": "Returns balance of the give address .", "title": "", "metadata": ""}
{"_id": "98cf446ccc032e6905955e1831eeffc4", "text": "The function of the stop token Transfer .", "title": "", "metadata": ""}
{"_id": "d1057d293109b0ebc93489252f9b99b2", "text": "Sets the resolver record for a name in ENS .", "title": "", "metadata": ""}
{"_id": "cc2621d9cdd8aa524f36673a0044e160", "text": "Transfer Stakes from owner balance to buyer balance saving data to saleStat storage .", "title": "", "metadata": ""}
{"_id": "ed7233549f41963acc9cdd503f142815", "text": "Erase unsold pre sale tokens .", "title": "", "metadata": ""}
{"_id": "6a5fef95cdcd708148e4e96b0e734052", "text": "Close Exchange .", "title": "", "metadata": ""}
{"_id": "4af07caae4369a037854a27059ee8a95", "text": "Updates the novice dungeon ID .", "title": "", "metadata": ""}
{"_id": "c0a155eb70fb1dff511179a90d28e32e", "text": "Returns the number of blocks until the settlement timeout .", "title": "", "metadata": ""}
{"_id": "80a13d465501a52f7b8299822e704a13", "text": "the transaction address and send the event as Approval .", "title": "", "metadata": ""}
{"_id": "be47fb95626521926ae196761472eeb3", "text": "untistupids function .", "title": "", "metadata": ""}
{"_id": "c1fe2d5730e20fb7ce093b5b8b9b9e52", "text": "Calculate rate wrt _bonus .", "title": "", "metadata": ""}
{"_id": "4a8f5509f1bdd3a27b83ceef0a9db1bb", "text": "also checks that p exists : p . owner .", "title": "", "metadata": ""}
{"_id": "5fe70f859a7dedc193ffe2c80597e6cb", "text": "Modifier that validates a purchase at a tier .", "title": "", "metadata": ""}
{"_id": "e81fe28a489c6a6ec8cbe7ace75550c7", "text": "Called by owner of locked tokens to release them .", "title": "", "metadata": ""}
{"_id": "10c31f7f6eb4f8ab70291a30233e8e9c", "text": "Total tokens on this chain .", "title": "", "metadata": ""}
{"_id": "38eda170ad265a7a5c545ded8eda459d", "text": "allow owner to set fundraiser target address .", "title": "", "metadata": ""}
{"_id": "f9b788c4048e4b03492f0ac06d690316", "text": "Returns the current price of an auction .", "title": "", "metadata": ""}
{"_id": "81dad98c8bfdd1aad91e269337f6764b", "text": "callable by owner only , after specified time .", "title": "", "metadata": ""}
{"_id": "69cca5612da34e389e38f5f56eb0176d", "text": "sets a match result to the contract storage .", "title": "", "metadata": ""}
{"_id": "03c14542c7fb69f6ae79a61b38034299", "text": "Calculates how many tokens are left to sale .", "title": "", "metadata": ""}
{"_id": "2529da85c5a7fe0d4dab63ef75c22a9a", "text": "Returns the amount of tokens approved by the owner that can be transferred to the spender's account .", "title": "", "metadata": ""}
{"_id": "f1e24b9a8a5a5e9a035b8195585019a0", "text": "Verify if game is locked .", "title": "", "metadata": ""}
{"_id": "621777060d3f0d8947b4fb740b75bbb6", "text": "Grants approval to another user to sire with one of your dogs .", "title": "", "metadata": ""}
{"_id": "d9ff637d4535ba8c925444d821598c43", "text": "Get the parents of a certain baby .", "title": "", "metadata": ""}
{"_id": "9744e5fc21b66793c5518260a7121b32", "text": "Join an open game instance .", "title": "", "metadata": ""}
{"_id": "1284243108baf397d359b3769fb963ac", "text": "Gets the owner address and amount by specifying the swap address and index .", "title": "", "metadata": ""}
{"_id": "50d25c3581f8a82cc6e799495437ffbd", "text": "return true when the address is in the exception list eg .", "title": "", "metadata": ""}
{"_id": "6e30e421222e734fe8dca0f52f2cce53", "text": "only Owner can call after the sale unassigned , all missing tokens will be minted multiSig was given by client finish minting and transfer ownership of token .", "title": "", "metadata": ""}
{"_id": "d1e13911a3e095edb95508ec814f6ff9", "text": "Current exchange rate for BBD .", "title": "", "metadata": ""}
{"_id": "f5b23d70c7897e288620b7b4d9b0d59b", "text": "Low level token purchase .", "title": "", "metadata": ""}
{"_id": "3abe1db0482870d47ac636051020e9c3", "text": "transfer tokens for a specified address in ICO mode .", "title": "", "metadata": ""}
{"_id": "10fcead0623fb90205167adf0c5e6950", "text": "For creating Item .", "title": "", "metadata": ""}
{"_id": "8d5763ed2780ffe4ad9c97e2adc77ddd", "text": "Add remaining tokens to locked 1y balances .", "title": "", "metadata": ""}
{"_id": "f2b4c64a7426e21ef14eae23e4f4653c", "text": "Transfer tokens from the from account to the to account - - - The calling account must already have sufficient tokens approve ( . . . ) - d .", "title": "", "metadata": ""}
{"_id": "d948cef6159cae0eed52b7bdcf38956a", "text": "enforce second lock on receiver .", "title": "", "metadata": ""}
{"_id": "ed3ea09d6514f19d6a2c97873ef7bbb2", "text": "Subtracts two numbers , reverts on overflow ( i . e .", "title": "", "metadata": ""}
{"_id": "629593a1cbe180d52e33e6268612c2cd", "text": "Allows the current owner to transfer control of the contract to a _newFundDeposit .", "title": "", "metadata": ""}
{"_id": "371dd967869bd81ec58aa6a35f548ef0", "text": "release the locked tokens owned by a number of accounts .", "title": "", "metadata": ""}
{"_id": "886de0c487f74e841241845a68a8fbcc", "text": "Update account for Royalty .", "title": "", "metadata": ""}
{"_id": "49a6e7586a62de9c03d67331f6dc9907", "text": "Returns price and corresponding update time .", "title": "", "metadata": ""}
{"_id": "be6915f12d1a3f029e28df950e15f013", "text": "Allows owner to remove an existing oracle from the registry .", "title": "", "metadata": ""}
{"_id": "2b008ae11f39caffd98c521324fb1638", "text": "check Ico Success .", "title": "", "metadata": ""}
{"_id": "a83521c0e06e02a45ff5f1b3d8fdfcb3", "text": "Let's be nice and clean up after ourselves .", "title": "", "metadata": ""}
{"_id": "91b20d3a47d19649c8133542402c1851", "text": "MAX_CARS_TO_GIFT amout of cars are dedicated for gifts .", "title": "", "metadata": ""}
{"_id": "2480c4456f60ef20bad4a8bbada69913", "text": "Modifier to make a function callable only when its called by escrow .", "title": "", "metadata": ""}
{"_id": "dd3ed72f617243e63bc917baad74c7e8", "text": "Create and sell tokens to the caller .", "title": "", "metadata": ""}
{"_id": "b87451157c4ea092afe32077d6516034", "text": "external functions allow access to our structs via functions with convenient return values .", "title": "", "metadata": ""}
{"_id": "77b7029fe0c362e571e1dc724e6f4ad3", "text": "Remove wallet from whitelist .", "title": "", "metadata": ""}
{"_id": "7931b328cdb119399010a9220fc3b275", "text": "Get all of the useful card's informations .", "title": "", "metadata": ""}
{"_id": "51446da747107053e3831df112761273", "text": "useful to know the row count in artworks index .", "title": "", "metadata": ""}
{"_id": "960610a0b732720e66695803001f89c5", "text": "Safe math .", "title": "", "metadata": ""}
{"_id": "a6c323a8c4b81915e79468a838c5a25f", "text": "Returns proj .", "title": "", "metadata": ""}
{"_id": "2070a21f545121f6f8b6af440c7d5c1c", "text": "Returns amount of wei transactee has to send to fullfill transactor's request .", "title": "", "metadata": ""}
{"_id": "17456e9e55c42859e6738b25c1dd0ddb", "text": "Set the date tokens can be transferred .", "title": "", "metadata": ""}
{"_id": "8381d55d5fae9092b9a1dd3035939c49", "text": "This method will generally be called by the WCT token contract to acquire WCTs .", "title": "", "metadata": ""}
{"_id": "3a2598520a02318abceff040a615e7e0", "text": "Set minimum payout .", "title": "", "metadata": ""}
{"_id": "68d168e9502d3d66590993d12cc1c43f", "text": "SafeMath sub function .", "title": "", "metadata": ""}
{"_id": "ed8f7e07449b7e61c8e3efec50a6f70b", "text": "Creates a new gen0 Pony with the given genes and creates an auction for it .", "title": "", "metadata": ""}
{"_id": "1014899609a5d9e0bac6c345ed3b1afc", "text": "withdraw ( just in case ) .", "title": "", "metadata": ""}
{"_id": "5e73c280e065ca8cd516130f08881adc", "text": "scan the inputs and find the script lengths .", "title": "", "metadata": ""}
{"_id": "819ce7e16606b2e0563d83cbf1264d9c", "text": "can be called by crowdsale before token release , control over forSale portion of token supply .", "title": "", "metadata": ""}
{"_id": "95d5dbd2936a4383f30a7b5adbacfcc4", "text": "For creating Emojis .", "title": "", "metadata": ""}
{"_id": "d761d09f9d96862f5474851447fc1588", "text": "Verify signer's signature .", "title": "", "metadata": ""}
{"_id": "edc4a2ffbd4cec36a59a82d5ecc4793f", "text": "Gets price of an asset multiplied by ten to the power of assetDecimals .", "title": "", "metadata": ""}
{"_id": "635032fa661ff2f3a983be83f7f5cb62", "text": "issue tokens for a single buyer .", "title": "", "metadata": ""}
{"_id": "6e4477fa837f6550c6768ed98579e1a5", "text": "Replaces a founder , transfer team pool to new founder balance .", "title": "", "metadata": ""}
{"_id": "1f1975898c67f29e7991dd8b7e840d46", "text": "Returns how many Unreleased checklist items we've added .", "title": "", "metadata": ""}
{"_id": "530d8ce3dd0e6949138dc495b285cd2c", "text": "Destroys the listing .", "title": "", "metadata": ""}
{"_id": "78b5b072a6825e371e15fe3724bdb0d8", "text": "Burn tokens from the specified address .", "title": "", "metadata": ""}
{"_id": "678ca41e39fdc54214823b29bef2a858", "text": "Adding modifier to transfer / approval functions .", "title": "", "metadata": ""}
{"_id": "16e158b0d6235299a631d316d7dcc1d6", "text": "event Log .", "title": "", "metadata": ""}
{"_id": "7468015e70782ab571cf5f1bb5d30d98", "text": "Require _token to be one of the drp tokens .", "title": "", "metadata": ""}
{"_id": "00c869ff99927579f51fd2a7aeb3b49c", "text": "registers a name .", "title": "", "metadata": ""}
{"_id": "ab94113792468d2819042c9c1eb7b68d", "text": "New combination of mobs .", "title": "", "metadata": ""}
{"_id": "25fe10b5234113b8740f84f00284d9fa", "text": "This is basically so you don't have to add 1 to the last completed tier .", "title": "", "metadata": ""}
{"_id": "666039ee9f9753b2cb0f1e81776725d5", "text": "Function for Customer Service exchange off-chain points to GNUG on user's behalf .", "title": "", "metadata": ""}
{"_id": "8daf9d03198ed879d97208807d1cb4f3", "text": "We use this function to allow users to purchase advertisment from a listing .", "title": "", "metadata": ""}
{"_id": "82bef3fcd1df44e8cb9495ab97dea632", "text": "Implements funding state criterion .", "title": "", "metadata": ""}
{"_id": "c526482f1b3e1fa5fe944ec791fac60f", "text": "Get and set address of Investment Guide and distribute bonus Stakes and Guide reward .", "title": "", "metadata": ""}
{"_id": "2250ca57f0d99e530471649cc7e26ff1", "text": "Allows the owner to change the broker .", "title": "", "metadata": ""}
{"_id": "8acb36182d5f8dd554bf6c9f234c0471", "text": "Change wallet .", "title": "", "metadata": ""}
{"_id": "1db1b9411f90d4000fb6ea72a13e71b0", "text": "Claim winning prize by the user .", "title": "", "metadata": ""}
{"_id": "7d957cb7d5a4ebdff43cacbd6ff1d8b0", "text": "Beercoin's symbol .", "title": "", "metadata": ""}
{"_id": "7bbdfbfee4e123d9756c9ac710b89414", "text": "10M ether is 2M less than would be available for a short while in WithdrawDAO after the HF , but probably more than anyone is willing to drop into WithdrawDAO in Classic .", "title": "", "metadata": ""}
{"_id": "de8371b77f8ec9847884674d729419cc", "text": "change wallet for advisory vesting ( this make possible to set smart-contract address later ) .", "title": "", "metadata": ""}
{"_id": "36c60ee62abf11bae2885528ebab7abe", "text": "the owner can change the usd ether price .", "title": "", "metadata": ""}
{"_id": "b2f171a8db80b03bfb3d06fcc13dc8ab", "text": "Convert _valueWei into a whole number of finney .", "title": "", "metadata": ""}
{"_id": "860451a9aa8fd5bc3e97601dc4fc0f83", "text": "Allows the multisigwallet to transfer control of the contract to a newOwner .", "title": "", "metadata": ""}
{"_id": "21a135917e53330f09a8b998c132845c", "text": "This function can be called during stages one or two to modify the maximum balance of the contract .", "title": "", "metadata": ""}
{"_id": "313a1dfc9b1e416afa7d0c72e2d44987", "text": "returns true if token is succesfully added to whitelist .", "title": "", "metadata": ""}
{"_id": "30d3df6377e58107bceb0497aa327648", "text": "Schedule oraclize call for payout .", "title": "", "metadata": ""}
{"_id": "dcbda4a73afc74843172609c356e2ed4", "text": "Autorize the address _spender to transfer from the account msg . sender .", "title": "", "metadata": ""}
{"_id": "ef4e3ed6082690d826edc0c610c54910", "text": "Send coins from sender's address to address specified in parameters .", "title": "", "metadata": ""}
{"_id": "1a47331244da346bfc02f7be22a6857c", "text": "Function to unlock all remaining RED to private angels investors ( after 3 months ) .", "title": "", "metadata": ""}
{"_id": "5841ba82cc83387fa2665cc4a1b14a48", "text": "owner can mint special sans for an address .", "title": "", "metadata": ""}
{"_id": "d00657dbf8f0c06c9c916e9d83ca678d", "text": "all contract calls are banned from buying .", "title": "", "metadata": ""}
{"_id": "c150467dec88af529f00863cd3dbb99e", "text": "Anyone can call this function to start update cycle .", "title": "", "metadata": ""}
{"_id": "df30a3ececc9c56a69fc188e1d67ae45", "text": "This sets the factory proxy contract , which uses the factory .", "title": "", "metadata": ""}
{"_id": "9de2002bbd79f243f000d3c81e370a27", "text": "only the contract owner can mint token .", "title": "", "metadata": ""}
{"_id": "b54c4f0bfb0379ca92e09fc959163622", "text": "setup the CrowdSale parameters .", "title": "", "metadata": ""}
{"_id": "232d8ab226b03ff20abe95c40c1ea858", "text": "Bidders can only place bid while the auction is active .", "title": "", "metadata": ""}
{"_id": "7beda1eb80c9f7c52f4c3e3ef57c6b2f", "text": "This means it is in the front of payout ( i . e .", "title": "", "metadata": ""}
{"_id": "36e980a9b5c5a211b05140983e8e3abb", "text": "Check if msg . sender .", "title": "", "metadata": ""}
{"_id": "48ca44aad1113bf2d376ba21a762e019", "text": "Perform the inevitable actions which cause release of that which each GROWCHAIN is built to deliver .", "title": "", "metadata": ""}
{"_id": "87d37467347b27db02474f070360a714", "text": "This function was added in order to give the ability to manually set the previous price since this had to be redeployed .", "title": "", "metadata": ""}
{"_id": "9c26c47179ddc7fbf5b4a2c418b8b509", "text": "sell an area of blocks at coordinates fromX , fromY , toX , toY .", "title": "", "metadata": ""}
{"_id": "43b46bb340792f4de84fd8ed089af628", "text": "External Transfer ( Called Externally ) .", "title": "", "metadata": ""}
{"_id": "1853bde7960d97248e54b76858f6b974", "text": "Have a pregnant Puppy give birth ! .", "title": "", "metadata": ""}
{"_id": "9ddc2601c018e33b491b299b95b4f2fc", "text": "Updates the canClaimBonusTokens property with the new _canClaimTokens value .", "title": "", "metadata": ""}
{"_id": "baf67182f32f443c8f29d6b2a37cb71a", "text": "Throws if called by any account that's not multiOwners .", "title": "", "metadata": ""}
{"_id": "31c0e9e0446e6175e73aa2109c6dfc9a", "text": "calculates and returns the amount to token minted for affilliate .", "title": "", "metadata": ""}
{"_id": "613c2a93f86f09b78fce86374afd156c", "text": "Start ISO manually because the block timestamp is not mean the current time .", "title": "", "metadata": ""}
{"_id": "2338726e92e5e6784f8d6cfbf64ac9c3", "text": "if ICO failed and now ICO finished date + 3 days then investor can withdrow his ether .", "title": "", "metadata": ""}
{"_id": "e807271ed905fa95dfa12324809ff932", "text": "Function overidden function will finanalise the Crowdsale .", "title": "", "metadata": ""}
{"_id": "4ed21fb591e66127ad0211ac8199dcd8", "text": "Return the final answer to the specified question , provided it matches the specified criteria .", "title": "", "metadata": ""}
{"_id": "05298cd0862863720b70160374cccff7", "text": "Add a contract address to the contract storage , allowing it to access storage .", "title": "", "metadata": ""}
{"_id": "08ded8b42a532e659c5b517103489efa", "text": "Fix for short address attack against ERC20 .", "title": "", "metadata": ""}
{"_id": "22017a0dd57db7fee822d3837359a706", "text": "Was it sold out or sale overdue .", "title": "", "metadata": ""}
{"_id": "c85e2ba0ec904d3f5301595c56ac7ee0", "text": "Adds administrative role to address .", "title": "", "metadata": ""}
{"_id": "3c75513ec3fe444fed053dcfb4f99341", "text": "tokens balance .", "title": "", "metadata": ""}
{"_id": "290c8bc1cefd5c91aedeedbe09b622dc", "text": "get the current bonus percentage , as a whole number .", "title": "", "metadata": ""}
{"_id": "6ad7dc9e2d2607a11d5b3acf45234751", "text": "resume the ICO .", "title": "", "metadata": ""}
{"_id": "b1de9bb13bb48b4fe492243e41d9d906", "text": "Returns the number of tokens who have been sold .", "title": "", "metadata": ""}
{"_id": "4efc7aa3697172f67629f8d92316ff06", "text": "validates multiple addresses - currently only checks that it isn't null .", "title": "", "metadata": ""}
{"_id": "b45070f4b7cc61e3f20fd587f1e31ed6", "text": "returns an array with all token ids .", "title": "", "metadata": ""}
{"_id": "801ef49644895a09e4329d61241419e7", "text": "Calculate tokens due .", "title": "", "metadata": ""}
{"_id": "35c69b7c768f3d3336b6fc519a805f1b", "text": "function getPublicSupply - Get Public Address .", "title": "", "metadata": ""}
{"_id": "31af7db18b0b97b8405b6baf60523873", "text": "Removes affiliate .", "title": "", "metadata": ""}
{"_id": "e0e93b5c0feeb5c4a521c7da3ef22399", "text": "cancel contract .", "title": "", "metadata": ""}
{"_id": "4ca01407af2f856bada7e642f8f220ad", "text": "Internal function for depositing tokens after they had been bought .", "title": "", "metadata": ""}
{"_id": "608c904d3373340744799275d22c366f", "text": "Changes the rate of the tokensale against 1ETH - ERA / ETH .", "title": "", "metadata": ""}
{"_id": "aff3fc894203f9efa3fa5a0be1eb6072", "text": "Adopting a pet .", "title": "", "metadata": ""}
{"_id": "d99109ccc63676aa31c3e894901b07b0", "text": "allows to send tokens to the MVM in exchange of Eth at the price determined by getBuyPrice .", "title": "", "metadata": ""}
{"_id": "20260601a5857940f360bf13ad1f3e7f", "text": "getUsageFees is a function to get all the details on template usage fees .", "title": "", "metadata": ""}
{"_id": "25d732040fa157563b314fa413ff47df", "text": "View current Ether balance of the given address .", "title": "", "metadata": ""}
{"_id": "905fac730e7500327e807a4e998431a5", "text": "Allows the owner to set the hardcap .", "title": "", "metadata": ""}
{"_id": "37dc1b54f151588867a7cd543bf27df8", "text": "closes voting on proposed Lottery Contract address checks if failed - if No votes is more common than yes increase failed voting count and if it reaches 10 reach of goal is failing and investors can withdraw their money .", "title": "", "metadata": ""}
{"_id": "e4734a73a183af72113f03f33035cd23", "text": "Require that the token sale has been closed .", "title": "", "metadata": ""}
{"_id": "5c565dfc44ecb8685f465024adc730d1", "text": "Create card .", "title": "", "metadata": ""}
{"_id": "1dcd9b330a791cc0916ae94bb2b87774", "text": "Add single address into the whitelist .", "title": "", "metadata": ""}
{"_id": "69ddf94f1298d5a2de705111ce4373d0", "text": "For the sake of simplicity , and solidity warnings about unknown gas usage do this . .", "title": "", "metadata": ""}
{"_id": "b44b5c617bd9c9e48640ba2cf0724101", "text": "holder address .", "title": "", "metadata": ""}
{"_id": "8dd74255ec6a9789dfdfabd503a24625", "text": "find a player has participanted or not .", "title": "", "metadata": ""}
{"_id": "23875ee86dc2734b176d9f13d3d3a51b", "text": "addWhitelistMember is used to whitelist participant .", "title": "", "metadata": ""}
{"_id": "0403e7df4a453ead833cb2e426500d27", "text": "modifier to check if transfers being allowed .", "title": "", "metadata": ""}
{"_id": "05aa13360ca3325026755daded1352e3", "text": "Amount still owed to an individual address .", "title": "", "metadata": ""}
{"_id": "41b83e303d14bf53fe6fdac6497a6949", "text": "Director can alter the maximum time of storage retention .", "title": "", "metadata": ""}
{"_id": "78933f9be2e0f908ffc45ea561279b60", "text": "Used to look up allowance of a user .", "title": "", "metadata": ""}
{"_id": "ed23e3e4057dba9fa11908fb614392d0", "text": "Function to get the current stage number .", "title": "", "metadata": ""}
{"_id": "f86118218875cbe8a273dee4afdb04b5", "text": "Child contract can enable to provide the condition when the upgrade can begun .", "title": "", "metadata": ""}
{"_id": "4d21ea426e69b41e6577ca66fce7cc71", "text": "once the operation is executed , the confirm of the operation should be removed .", "title": "", "metadata": ""}
{"_id": "f4049879cc24dd6f0b7c4968ca70e5b8", "text": "Approve the passed address to spend the specified amount of eUSD tokens on behalf of msg . sender .", "title": "", "metadata": ""}
{"_id": "833d72bac777fe5b0a11df08d8741916", "text": "Set a blob as not updatable .", "title": "", "metadata": ""}
{"_id": "eba360567db573908c14a11d92757f34", "text": "Deposits a specific token .", "title": "", "metadata": ""}
{"_id": "f4ea27cb5b3b88e8a1d3cc81cac0c3da", "text": "For this case the only metadata is the name of the human .", "title": "", "metadata": ""}
{"_id": "949fe17aaf851cabf887a8b74a769192", "text": "allows an owner to set their own price and keep the fee structure .", "title": "", "metadata": ""}
{"_id": "915c4221da562f7b2e7b03ca1936447f", "text": "Get the owner of a blob .", "title": "", "metadata": ""}
{"_id": "28863c4d6b5c1cd6c5a3b7046d6d8f8b", "text": "Set's the rate of tokens per ether for each round .", "title": "", "metadata": ""}
{"_id": "b79ab2c3cd55cf3bffa894ceb99e8317", "text": "- remaining right to spend .", "title": "", "metadata": ""}
{"_id": "41ef25b5d8a69c137ae27531abdf1881", "text": "Setup is allowed one whithin one day after purchase .", "title": "", "metadata": ""}
{"_id": "8c0a31c24ca42c35e25ecb9fd82d3935", "text": "Allows the owner to set the hardcap contract .", "title": "", "metadata": ""}
{"_id": "6701bada91ca2eb02dfac69ff9c55d4b", "text": "unit test for crowdsale exchange rate .", "title": "", "metadata": ""}
{"_id": "06f09a58e3a6db4c6903006f8df51149", "text": "Public function to be call by owner when ICO status is Paused , it changes ICO status to the right status based on ICO dates .", "title": "", "metadata": ""}
{"_id": "cb95fd0fec0ded2a24d5835250dcd0c0", "text": "Purchase an unclaimed Tile for 2 Eth .", "title": "", "metadata": ""}
{"_id": "17e1e869bba8296b0161cd0b65c796ac", "text": "sets the fee to charge on each purchase .", "title": "", "metadata": ""}
{"_id": "5c1c062c9902ab17a327da1668db0ebb", "text": "Mint DRC Tokens from serveral specific wallet addresses upto cap limitation .", "title": "", "metadata": ""}
{"_id": "f0b2ae043c9b9dcb0d3bcd3e24e9e3a0", "text": "Call approveOrder - Solidity ABI encoding limitation workaround , hopefully temporary .", "title": "", "metadata": ""}
{"_id": "db0edf7af40f87d23dbc236777c63544", "text": "delivers STT tokens from Leondra ( Leondrino Exchange Germany ) .", "title": "", "metadata": ""}
{"_id": "a9add7e35c38e7737952fb024f5bb085", "text": "public data retrieval funcs .", "title": "", "metadata": ""}
{"_id": "09e983b4c2f917e41a14dd33c9d18e9a", "text": "Upgrades the CodexRecordProxy to point at a new implementation .", "title": "", "metadata": ""}
{"_id": "319e2b04e035328e8c8c07cdd33f5992", "text": "Return the total number of ceilings committed ( can be larger than the number of actual ceilings on the ceiling to hide the real number of ceilings ) .", "title": "", "metadata": ""}
{"_id": "b16e3faf9264246328ce55ee4a8db353", "text": "Storage location of the index of the current tier .", "title": "", "metadata": ""}
{"_id": "6ed20ec995f9ff73eb78b141b1a38705", "text": "To update the price of FEE tokens to the current value .", "title": "", "metadata": ""}
{"_id": "c6d0fa7862db93de72e60aa015c2c332", "text": "balanceOf 0xd8fa9C65623129Fa4abAf44B7e21655d1eF835ce 1000000000000000000000 ; .", "title": "", "metadata": ""}
{"_id": "3be9a554154cee6c6fccacd99e8f7f7d", "text": "Sets bonuses for USD amounts .", "title": "", "metadata": ""}
{"_id": "5818c5ab0ba31f9d5d20b412caf21fc7", "text": "crowdsale utility methods .", "title": "", "metadata": ""}
{"_id": "365ce240687e749daeb67f0ad9a482f4", "text": "After pre-sale made need to reduced hard cap depending on tokens sold .", "title": "", "metadata": ""}
{"_id": "5acfdcd65a04733e3545b9dc923dcbf5", "text": "return the current maximum amount the contract will allow in a transaction .", "title": "", "metadata": ""}
{"_id": "e3b005a169b7f9afd191b2af2f0fc49f", "text": "Gets the list of unicorns owned by a given address .", "title": "", "metadata": ""}
{"_id": "c66cb742ceb37f01bc8d8eb7772dc3a1", "text": "Retrieve mistakenly sent tokens ( other than the etheal token ) from the token contract .", "title": "", "metadata": ""}
{"_id": "4ce34f4b8433de698035c6a979a08cad", "text": "returns maximum borrowable token amount allowed by LTD params .", "title": "", "metadata": ""}
{"_id": "7b0071e11a6bf8be48e94d2dd97d42ab", "text": "true if the goal is reached .", "title": "", "metadata": ""}
{"_id": "bf46a8337891f1c9785bd5209667678b", "text": "Creates amount tokens to receiver address .", "title": "", "metadata": ""}
{"_id": "6cc4267d90e20b1f41ca2087ec3e2b80", "text": "finish voting on an proposal .", "title": "", "metadata": ""}
{"_id": "f947da759c8531c3b2604c3de2473eb4", "text": "SMRE tokens are not transferable .", "title": "", "metadata": ""}
{"_id": "3dbb0620a3949b691775e1356f79e015", "text": "Execution is allowed only by authorized contract .", "title": "", "metadata": ""}
{"_id": "d573ccdb049ccd3e44fb4a14a214305a", "text": "token balance normalised for display ( 4 decimals removed ) .", "title": "", "metadata": ""}
{"_id": "fd03eb914b90cb5a5ca0726205f03329", "text": "Sales / approvals have to be cancelled first for certain functions .", "title": "", "metadata": ""}
{"_id": "a04ec4b2aa081806062fe53c1921e63b", "text": "PrepareForSale ( ) stops transfers and allows purchases .", "title": "", "metadata": ""}
{"_id": "e9efc7623beb4920e1f3439f1a93246b", "text": "This is only for messed up things people put .", "title": "", "metadata": ""}
{"_id": "2d8f0826bdc4ba296a908e7c4f588762", "text": "Unstakes a certain amount of tokens , this SHOULD return the given amount of tokens to the user , if unstaking is currently not possible the function MUST revert .", "title": "", "metadata": ""}
{"_id": "7b061e7a3d02e333471c5be2fb52266f", "text": "Admin function to make total supply permanently locked ( callable by owner only ) .", "title": "", "metadata": ""}
{"_id": "b984d006236d5073987581ef7abfca0f", "text": "low level token purchase .", "title": "", "metadata": ""}
{"_id": "a91a3891f3019c754b97149da56c2e52", "text": "Throws if called not by contract's owner .", "title": "", "metadata": ""}
{"_id": "c9670c8244b38302e4732bf837ff9537", "text": "accepts value transfers .", "title": "", "metadata": ""}
{"_id": "eee7f406e1307df8457b54d3ad4817be", "text": "valid duration blocks .", "title": "", "metadata": ""}
{"_id": "39d75b5b47be2c3f33b77f15124bfee6", "text": "Return all ETH and tokens to original multisig .", "title": "", "metadata": ""}
{"_id": "f1e765b682c014dad29a1c8a93666427", "text": "Withdraws '_value' in wei from the reserve address .", "title": "", "metadata": ""}
{"_id": "4f240dd1e686354ab34711cbefa0ff82", "text": "Compute the amount of MTC token that can be purchased .", "title": "", "metadata": ""}
{"_id": "06585a35aa6fe502254b482725b76d8e", "text": "Return the balance of an specified account .", "title": "", "metadata": ""}
{"_id": "8747c7031419778353ef05fe68a511d9", "text": "Allow to spend .", "title": "", "metadata": ""}
{"_id": "dcbd4003d43172821b793f17a53ef57d", "text": "cancel and set all bets to payouts .", "title": "", "metadata": ""}
{"_id": "e61fc9d6f8c1e0c2ee1e25b8b549579b", "text": "Put an accepted donation in the books .", "title": "", "metadata": ""}
{"_id": "ef3d1cc0e9da477a8c9daf823e8e4164", "text": "admin only can transfer from the privileged accounts .", "title": "", "metadata": ""}
{"_id": "36895ea02ab5c3908a3614af36a29f01", "text": "get the frozen balance of account .", "title": "", "metadata": ""}
{"_id": "47b0159af946ee74e6bbc09d3c4e9080", "text": "Allows for marketing contributor's reward adding and withdrawl .", "title": "", "metadata": ""}
{"_id": "93fc616a796143a062d184e3bddfff60", "text": "craft two cards .", "title": "", "metadata": ""}
{"_id": "9b38438f8b13e4b9adb210712b61e9b3", "text": "getter to determine if address has Admin role .", "title": "", "metadata": ""}
{"_id": "fad70ae0f8e4bd053b9f1590249bfafe", "text": "Check if address is a valid destination to transfer tokens to - must not be zero address - must not be the token address - must not be the owner's address - must not be the admin's address - must not be the token offering contract address .", "title": "", "metadata": ""}
{"_id": "f54cde03a88d886bdccf27ab42296be2", "text": "internal function to initialize a round of blackjack with an id , the hash of the ( partial ) deck , the hash of the server seed and the bet .", "title": "", "metadata": ""}
{"_id": "e85399b3b3bf1b289a475498e040d4ef", "text": "Changes required sigs for minor transactions .", "title": "", "metadata": ""}
{"_id": "d3be4b8de357d0d03003d11381f31073", "text": "Purchase the provide token in Ether .", "title": "", "metadata": ""}
{"_id": "12d65ab0d2619c590eb9cfae8749f0b2", "text": "expects 0x prefix .", "title": "", "metadata": ""}
{"_id": "02d335139c6f62a5923fe5b56cb3589d", "text": "Since the exchange requires the horsey contract and horsey contract requires exchange address , we cant initialize both of them in constructors .", "title": "", "metadata": ""}
{"_id": "e34e513200f3300145e51178d4617190", "text": "Calculates bonuses , specific for the ICO .", "title": "", "metadata": ""}
{"_id": "7ff6871b0f119af5b43038c39c4074ab", "text": "Init Lottery .", "title": "", "metadata": ""}
{"_id": "aeb9c28570c29612d2bad61139a64828", "text": "prevent short address attack .", "title": "", "metadata": ""}
{"_id": "adaea69a1b0367638fdf7f54e311bbae", "text": "the rate in SRN per 1 ETH according to the time of the tx and the SRN pricing program .", "title": "", "metadata": ""}
{"_id": "9268f1f48811602f8d7d0001cf9c1b0e", "text": "If the specified address is not in our owner list , add them - this can be called by descendents to ensure the database is kept up to date .", "title": "", "metadata": ""}
{"_id": "48654e5ae9136ff0ad68a4bdd93c2477", "text": "execute function for creator if ERC20's get stuck in this wallet .", "title": "", "metadata": ""}
{"_id": "84b5dc6d14d0e40c4f6fb41c7f301648", "text": "Returns the owner of the given record .", "title": "", "metadata": ""}
{"_id": "f1ceb6a9c5fec02948e61f80de80b330", "text": "Batch assets transfer .", "title": "", "metadata": ""}
{"_id": "e9895bda8c0b50e752054f9fd07a1824", "text": "onlyOwner allowed to handle batch presale minting .", "title": "", "metadata": ""}
{"_id": "9455ac0d0d20962dc236ca3995c848b4", "text": "re-instate KYC onchain , should circumstances change .", "title": "", "metadata": ""}
{"_id": "c01be057c324b5b1b962bc65a28bc102", "text": "Advertising Token Distribution .", "title": "", "metadata": ""}
{"_id": "5428fa68830b3de8e23f2ec120a19c5c", "text": "Returns balance of particular account .", "title": "", "metadata": ""}
{"_id": "cf04dfac79439f19798af4928c42f956", "text": "check only allowPublicWithdraw .", "title": "", "metadata": ""}
{"_id": "a3e9303dae2483818fb7c55a5a584395", "text": "onlyOwner : returns 0 in MEW .", "title": "", "metadata": ""}
{"_id": "154f0ea3175cdbab747ea5885957910b", "text": "Calculates the sum of values already filled and cancelled for a given order .", "title": "", "metadata": ""}
{"_id": "473c517543a0fdc154f2f38094c372cc", "text": "Transfers a Pony to another address .", "title": "", "metadata": ""}
{"_id": "c59396fea17bafa01cf35c73ccf4275d", "text": "in case of a failed refund or win send , user can withdraw later .", "title": "", "metadata": ""}
{"_id": "9d34297b275c10f1233e9edb1e8bc83f", "text": "Whitelist a wallet address .", "title": "", "metadata": ""}
{"_id": "f3aace5acb610e8ffe09a6fba53eaa97", "text": "To start next period at an exact time third part is better .", "title": "", "metadata": ""}
{"_id": "16c6e9b88b036591c94529e35e94cd70", "text": "To resume CrowdSale .", "title": "", "metadata": ""}
{"_id": "732f4b199fb978feec7760ad1c117ae9", "text": "get sum of array values .", "title": "", "metadata": ""}
{"_id": "8331f17117ed4818f596387e3b0f6dbf", "text": "Sets the ICO phase 4 duration .", "title": "", "metadata": ""}
{"_id": "16879b096d3b28cb625d0347c0257dca", "text": "solium-enable arg-overflow .", "title": "", "metadata": ""}
{"_id": "cb5e6ef03da71679a78a995fe8318837", "text": "minimal amount of one investment ( in wei ) .", "title": "", "metadata": ""}
{"_id": "adb769c0276d58a4f312c5780a4ed002", "text": "Added this module to allow retrieve of accidental asset transfer to contract .", "title": "", "metadata": ""}
{"_id": "e673f310c9f5594be0066e33f48ca8da", "text": "Get the customer's address from customers list by index .", "title": "", "metadata": ""}
{"_id": "e5fce2b14aff8773b0ec1ef6d8cda3f2", "text": "transitions the state machine into the state it should currently be in .", "title": "", "metadata": ""}
{"_id": "0d754dab8ce3082e629556ba204e9637", "text": "Returns current price of an NFT on auction .", "title": "", "metadata": ""}
{"_id": "09df768c118623c6cf7c11ea9aebdc86", "text": "Change admin , must be existing registrant or Rivetz .", "title": "", "metadata": ""}
{"_id": "fcd6bc6249e203db6bb735e804793faf", "text": "bonus scheme during ICO , 1 ETH 800 EDEX for 1st 20 days , 1 ETH 727 EDEX for 2nd 20 days , 1 ETH 667 EDEX for 3rd 20 days .", "title": "", "metadata": ""}
{"_id": "21ca823cc9d3d1204d77b4f62e21b555", "text": "Will call SaleClockAuction to get the owner of a kitten and check its price ( if it's for sale ) .", "title": "", "metadata": ""}
{"_id": "ed873b24c784f3dc50920ea0bd006a09", "text": "Check if bet is valid .", "title": "", "metadata": ""}
{"_id": "dfd173cf70650f12d7e3c2be1c788c98", "text": "Assign allowance to an specified address to use the owner balance .", "title": "", "metadata": ""}
{"_id": "49d35e27eca93364a4054bfedab45ee9", "text": "Only bounty manager distribution contract function to deliver tokens for bounty community .", "title": "", "metadata": ""}
{"_id": "af2d5654efa891c5df61dc2dd7b741c7", "text": "unlock tokens for trading .", "title": "", "metadata": ""}
{"_id": "e15b4a0c0dbaffa27dbbf2648d74d511", "text": "reset beneficiary list .", "title": "", "metadata": ""}
{"_id": "b89555b12c540439a87dc0b200823fff", "text": "view the presale end date and time .", "title": "", "metadata": ""}
{"_id": "0e61282ec777ec567187d46b0a51c38e", "text": "Refund 'msg . sender' .", "title": "", "metadata": ""}
{"_id": "bd4a92d782579a1bbd8869e942fed71e", "text": "Anyone can call this method to verify the settings of a .", "title": "", "metadata": ""}
{"_id": "05d8786c12e0faa69d953d373ea54f91", "text": "make a match ( and specify payout address ) .", "title": "", "metadata": ""}
{"_id": "3b0d80746bd9afb5d09953acd15602b1", "text": "buy and sell fci function .", "title": "", "metadata": ""}
{"_id": "ac36bcb1a32692229d0358b5d1c3e5ad", "text": "throws on any error rather then return a false flag to minimize user errors in addition to the standard checks , the function throws if transfers are disabled .", "title": "", "metadata": ""}
{"_id": "e36ae08543938c935f989cf64ed1ead3", "text": "Burn tokens from foundationReserve .", "title": "", "metadata": ""}
{"_id": "5cf16bbe5905ba49242419a1a4caeb56", "text": "Returns a list of all Masterpiece IDs assigned to an address .", "title": "", "metadata": ""}
{"_id": "1e13d9644e479b7773cc95f52e392071", "text": "asset decimals .", "title": "", "metadata": ""}
{"_id": "fa009b5dac1f518dbb614184e53cb426", "text": "Administrator functions .", "title": "", "metadata": ""}
{"_id": "162c000c1f288a1cbd2eda43e812a17e", "text": "An internal method that creates a new element and stores it .", "title": "", "metadata": ""}
{"_id": "b48eb7a37c3ffc85640dcb390a7265a5", "text": "check to see if contract whitelist has approved address to buy .", "title": "", "metadata": ""}
{"_id": "3d06941857b99dcd7fff800119e373b3", "text": "todo : check on testnet .", "title": "", "metadata": ""}
{"_id": "1734dad53fbdebd8ec6879ffc158cf5b", "text": "Recover an address from a signed pre-signed hash .", "title": "", "metadata": ""}
{"_id": "05d935c1c18afbfe8691b622a60d4284", "text": "Compute the final loser .", "title": "", "metadata": ""}
{"_id": "df042535a41c4f460e0356c977cc874a", "text": "Aragon Dev needs to make initial token allocations for presale partners .", "title": "", "metadata": ""}
{"_id": "7d6eebb211d556e0340daeee3f5b4cec", "text": "Setup function sets external token address .", "title": "", "metadata": ""}
{"_id": "128e690bc9cf911a299c1a1cbb3dcdfe", "text": "End of the sale and token allocation ; retire this contract .", "title": "", "metadata": ""}
{"_id": "c3f7ede0c344bf80ed8c17cc366507be", "text": "To determine whether the user is whitelisted .", "title": "", "metadata": ""}
{"_id": "9d162c6ec419625dfc4f3008ad7e3ca1", "text": "Returns the priceof a pixel .", "title": "", "metadata": ""}
{"_id": "6b1af803be74bfd369f68c44ccda0150", "text": "Withdraw ETH to the owner account .", "title": "", "metadata": ""}
{"_id": "b50b97873089ec85aa1ac27df6d9af25", "text": "This is Authorization drop .", "title": "", "metadata": ""}
{"_id": "25681e9081578fe740a92f6898db5613", "text": "Modifier to check name of manager permission .", "title": "", "metadata": ""}
{"_id": "13bc0ab1c6da16c6d96e218d740b60eb", "text": "Add to unminted .", "title": "", "metadata": ""}
{"_id": "a4bdbf774bc0ee986c1f4276e35b6fc1", "text": "calculates amount of tokens available to redeem from investor , validations are not required .", "title": "", "metadata": ""}
{"_id": "c1aed5fd977401872f2be17c05605264", "text": "get info by game .", "title": "", "metadata": ""}
{"_id": "3cec28f6753f8720d2d37879aa9a7596", "text": "use this to set the charity address .", "title": "", "metadata": ""}
{"_id": "4fec3580c9c921a87eeb53656a9d2588", "text": "Assigns ownership of a specific Pony to an address .", "title": "", "metadata": ""}
{"_id": "ca862c35d61e80eec4ad1a886190dc17", "text": "Set / alter treasurer account .", "title": "", "metadata": ""}
{"_id": "60f605a0ea081fd72d032f929a3cb9be", "text": "Claim ownership of an arbitrary Claimable contract .", "title": "", "metadata": ""}
{"_id": "3261b4edfa7d6be3995032fa7e7e2e46", "text": "Check if the RLP item is a list .", "title": "", "metadata": ""}
{"_id": "051a1bd5f3914f521cd2aab8066e7a62", "text": "if someone accidentally transfers tokens to this contract , the owner can return them as long as distribution hasn't started .", "title": "", "metadata": ""}
{"_id": "04472685fe2beb177877b1db4753898e", "text": "Only owner functions .", "title": "", "metadata": ""}
{"_id": "2459e362e24f170ac3286602521635bb", "text": "transferred to the spender's account .", "title": "", "metadata": ""}
{"_id": "5a7996ce42cde60ef83e2d167c71afe8", "text": "Allows owner to cancel an auction .", "title": "", "metadata": ""}
{"_id": "add775b20d94a611544f1160905e94f7", "text": "Checks whether the cap has been reached .", "title": "", "metadata": ""}
{"_id": "4b7ba3e4190ffb88ad4d81bf5f39e52b", "text": "Returns the teamID associated with the asset / collectible / token .", "title": "", "metadata": ""}
{"_id": "ed9857dc7a3a0c67927ac577283b250b", "text": "Internal function called to actually save the permission .", "title": "", "metadata": ""}
{"_id": "23e84e614d95bcfd0554d687a16d0b8b", "text": "Recover any mistakenly sent ERC20 tokens to the Crowdsale address .", "title": "", "metadata": ""}
{"_id": "3dbd28b40273dd5321064a0f20836e67", "text": "Returns the owner and timestamp for a given symbol .", "title": "", "metadata": ""}
{"_id": "8670a84e6e507843d9bde3fab4f22ddd", "text": "'tokenFallback' function in accordance to the ERC223 standard .", "title": "", "metadata": ""}
{"_id": "209e9bfb7eb6eac3e25cc3d35eb0119c", "text": "This should be called once the sale is over to commit all bids into the owner's bucket .", "title": "", "metadata": ""}
{"_id": "814d609477ed82f3cebd611aed986057", "text": "UET Return Transaction .", "title": "", "metadata": ""}
{"_id": "ad604ba47b25008c9cfce25fa5bb4948", "text": "Sets the end time for the sale .", "title": "", "metadata": ""}
{"_id": "576f9f2ad92ffe573224447bd90744cd", "text": "Returns early purchased amount by purchaser's address .", "title": "", "metadata": ""}
{"_id": "dea945e24e412ea7cedc1cb811d7702b", "text": "Set price in SNTR tokens for storing .", "title": "", "metadata": ""}
{"_id": "586272cbfdcc7b0db76801386e094cf8", "text": "internal function to convert a hash to an eth signed message .", "title": "", "metadata": ""}
{"_id": "e0460bb16feb6b41246f180ed3f59593", "text": "Update the auction fee .", "title": "", "metadata": ""}
{"_id": "146bbb0d4c77ce5d5b56b1631819afbd", "text": "public variables internal variables events public functions .", "title": "", "metadata": ""}
{"_id": "3623d80756cd71f34a4aae0c588ef7d4", "text": "If something terrible happens and we are past the BET_RELEASE_DATE , just release bet back to the bettors .", "title": "", "metadata": ""}
{"_id": "efb068d2e58fa705b6645b40ef159102", "text": "This function will return false if invoked during the constructor of a contract , as the code is not actually created until after the constructor finishes .", "title": "", "metadata": ""}
{"_id": "5787ab8792a3489fb942bc9ed71e8eda", "text": "Buy the current owner out of the plot .", "title": "", "metadata": ""}
{"_id": "8c24fe25280bfcf660e410bf20877345", "text": "the random number .", "title": "", "metadata": ""}
{"_id": "8e457e69755ee0b4c3b3e7a4e0ac5873", "text": "If there were any issue / attach with refund owner can withraw eth at the end for manual recovery .", "title": "", "metadata": ""}
{"_id": "94c35cb61228ae31031fbda70b7c063a", "text": "Checks if a given address currently has transferApproval for a particular narco .", "title": "", "metadata": ""}
{"_id": "f973af285af4e99b7ab50deea243d123", "text": "Transfer tokens from an address to another one through an allowance made before .", "title": "", "metadata": ""}
{"_id": "7a0572ce7b8d2c4d6a76cf2c113656ab", "text": "finalizeFunding ( ) ends the Campaign by calling setting the controller to 0 , thereby ending the issuance of new tokens and stopping the .", "title": "", "metadata": ""}
{"_id": "11c64122a86333abdc86b08d1bb05166", "text": "Allows the owner to update the allowance of the spender .", "title": "", "metadata": ""}
{"_id": "431701b44850b4f74436dbdf2dc5de0a", "text": "Burns Bskt tokens .", "title": "", "metadata": ""}
{"_id": "ceeaa3dc4eecdbb336cc2672d0e3d1c2", "text": "Buy tickets with a referral code .", "title": "", "metadata": ""}
{"_id": "8dcd80e4ab4114d8a7ca20ec66832a9e", "text": "State Variables .", "title": "", "metadata": ""}
{"_id": "4981205930c2e673aec297d46c345fde", "text": "Get the full length of an RLP item .", "title": "", "metadata": ""}
{"_id": "edd40d96641ddb611efe09b56d36f88e", "text": "we can create promo puppys , up to a limit .", "title": "", "metadata": ""}
{"_id": "5c607710c5616ec59e0911596f035f4f", "text": "Allow or disallow refunds .", "title": "", "metadata": ""}
{"_id": "058aa33dce2d23cbb10e5ba3be013ad6", "text": "Buys new fee coefficient for given duration of time .", "title": "", "metadata": ""}
{"_id": "dbe408e009dabac9b4f725e89f7394c7", "text": "Withdraw ethereum from the sender's ethBalance .", "title": "", "metadata": ""}
{"_id": "5dbe2b670727f134c9ab7388c2261d2d", "text": "ERC20 interface - minimal functional subset .", "title": "", "metadata": ""}
{"_id": "d8495a10b4157f1ae1fea084585f0f53", "text": "anyone can finalize a round .", "title": "", "metadata": ""}
{"_id": "6982b6438b041b91a1cd3a0be5beb38a", "text": "disable the canSetTransferable .", "title": "", "metadata": ""}
{"_id": "fb60b82cf201f7a5fef6a9deb64da341", "text": "Reads a bytes32 word of a bytes array .", "title": "", "metadata": ""}
{"_id": "8b39751cb1124357fa259db358a93375", "text": "Overrides ERC20 transferFrom function with modifier that prevents the ability to transfer tokens until after transfers have been enabled .", "title": "", "metadata": ""}
{"_id": "0ee7a168e4b92b4fb79231a177f96468", "text": "return your funds after deadline if minimumTarget is not reached ( activate if crowdsale close ) .", "title": "", "metadata": ""}
{"_id": "2ea5d6cdead65bf15af60eeee8b26e71", "text": "Try to finialize the last proposal .", "title": "", "metadata": ""}
{"_id": "a60bf75fa708db239fe5c624173db4fd", "text": "Function wrapper around the _InsufficientFunds event so that it can be used by contracts .", "title": "", "metadata": ""}
{"_id": "a30a75ab44cab1a678ca3c5b17a0483d", "text": "At the end of the sale , this should be called to trigger the vesting to start .", "title": "", "metadata": ""}
{"_id": "cd3cf79f8e51681aea51f3828912c97b", "text": "Sets the date of the ICO end .", "title": "", "metadata": ""}
{"_id": "7b14d59eaa42aca4e9edb7d57d40e278", "text": "Public function that returns user type for the given address .", "title": "", "metadata": ""}
{"_id": "c7356daf5816f2cc823d404078e38850", "text": "Send _amount of tokens to address _to .", "title": "", "metadata": ""}
{"_id": "cb45ea5a767bff28386cc6e04994bf41", "text": "Get your money back before the raffle occurs .", "title": "", "metadata": ""}
{"_id": "a9caf26ca063e2d109ad1f6ea889ee74", "text": "Calculates and records contributions .", "title": "", "metadata": ""}
{"_id": "470ca7880c5b29acec127b3dd0ab76f7", "text": "only accessible from the constructor .", "title": "", "metadata": ""}
{"_id": "126b84eeed35df23c379f7d54fa166b8", "text": "Update the Struc each time a country is sold .", "title": "", "metadata": ""}
{"_id": "956e6fb55dffdcd9414e899880e8bda9", "text": "End conflicting game .", "title": "", "metadata": ""}
{"_id": "9b9ea8d5e4bc971a3cf039da43078d31", "text": "Destroy contract and transfer ether to address _targetAddress .", "title": "", "metadata": ""}
{"_id": "79f6010e624ff7ecd2cb3a73aeffdd60", "text": "Allows the owner to extend the deadline of the current ICO phase .", "title": "", "metadata": ""}
{"_id": "b8fc2cdfb67974967a21189f968b41e4", "text": "returns true if ether token exists in the quick buy path , false if not note that there should always be one in the quick buy path , if one is set .", "title": "", "metadata": ""}
{"_id": "b8026c73999395c563ba4cacb4604b60", "text": "Increase the approval for the passed address to spend tokens on behalf of the msg . sender .", "title": "", "metadata": ""}
{"_id": "43ff6dda856a588486a5836e965d10bd", "text": "Whitelists a user for the presale with an individual cap ; cap needs to be above participation if set again .", "title": "", "metadata": ""}
{"_id": "0746df41835cfb26b57b0315b14ce603", "text": "Allows owner to transfer delegation of the contract to a newDelegation .", "title": "", "metadata": ""}
{"_id": "76c859fcc4c1d5694d50baf4885dd131", "text": "Deposits , withdrawals , balances .", "title": "", "metadata": ""}
{"_id": "f84afdb0265421cc5be47ce4caa31d47", "text": "Only owner address can set emergency pause 1 .", "title": "", "metadata": ""}
{"_id": "eb2e63453d6889bce262efc37e8886c7", "text": "Allows the owner to close sale .", "title": "", "metadata": ""}
{"_id": "c5a87c10e0ac32148864556347e0f3df", "text": "allow a Narco to travel between districts travelling is done by taking exit - - index into the loctions .", "title": "", "metadata": ""}
{"_id": "ddcdfe72b8e0fe653628ddc11afe046b", "text": "batch transfer with different amounts for each address .", "title": "", "metadata": ""}
{"_id": "1e6d552e1e60b203d738efc9353853a1", "text": "Allows setting a descriptive string , which will aid any users in migrating their token to a newer version of the contract .", "title": "", "metadata": ""}
{"_id": "5cad184da2275d606ed58805cad259f7", "text": "Function for adding tokens to account .", "title": "", "metadata": ""}
{"_id": "7740119225606b12be852c074e54078a", "text": "Contract constructor .", "title": "", "metadata": ""}
{"_id": "aa8735d3180eed92198d0ffc35ce9ce5", "text": "Sets new multisig address to which the received ether will be sent .", "title": "", "metadata": ""}
{"_id": "474fcf886f93931039223180d3024698", "text": "Returns lottery details by index .", "title": "", "metadata": ""}
{"_id": "a8057816a73a0635828019b85d5dd800", "text": "Contract desctruction function with ethers redirection .", "title": "", "metadata": ""}
{"_id": "b1320af45a514eddfa95b2192fdb3fed", "text": "overrides burn function with modifier to prevent burn while untransferable .", "title": "", "metadata": ""}
{"_id": "cc63d9df4289d1ee18d4911a6c3680fd", "text": "Check the token balances of a wallet for multiple tokens .", "title": "", "metadata": ""}
{"_id": "55cc1b4f5c2b3d2b6bf8760f7625f10e", "text": "Allows the manager to change backends .", "title": "", "metadata": ""}
{"_id": "a8adcd41605419a70af552e128b2951e", "text": "Allows anyone with the password to shut down everything except withdrawals in emergencies .", "title": "", "metadata": ""}
{"_id": "efa95ec0ef2f5fddf0e4e461158de742", "text": "Contributors can claim refunds here if crowdsale is unsuccessful .", "title": "", "metadata": ""}
{"_id": "9bec6950f7fe35204a076ddc4a052ae3", "text": "Internal function to send some amount of ethereum out of the contract to an address .", "title": "", "metadata": ""}
{"_id": "162e53ae0f1373b8744e28a889e82071", "text": "End trigger .", "title": "", "metadata": ""}
{"_id": "31085a3159bd0aa89db10d91cfeec4f7", "text": "In case it needs to proxy later in the future .", "title": "", "metadata": ""}
{"_id": "07006bbad81846518675e9ebeaea103d", "text": "set global name for msg . sender , .", "title": "", "metadata": ""}
{"_id": "bda6052367cafd8c28eeb02521660c4a", "text": "Asserts the msg sender to have valid stake in the vesting schedule , else eat up their GAS this is to discourage SPAMMERS .", "title": "", "metadata": ""}
{"_id": "cab5bf54473ee16651d86ec0f9437204", "text": "A function to withdraw all funds .", "title": "", "metadata": ""}
{"_id": "6e4108c04bc8d02e77ed521f825f9265", "text": "claim your MTU or Ether .", "title": "", "metadata": ""}
{"_id": "d89d931d22a047dcdd6fd997b8bf9e7d", "text": "remove an address from the whitelist .", "title": "", "metadata": ""}
{"_id": "230cfbe0f1e528710a40273b85498b71", "text": "onlyOwner Cancel a payment all together .", "title": "", "metadata": ""}
{"_id": "0d11cbfbafed419eaafb20010c96ae4f", "text": "Forge items together .", "title": "", "metadata": ""}
{"_id": "d8a43f10eb80fa48645122106a7849ba", "text": "Regular end game session implementation .", "title": "", "metadata": ""}
{"_id": "38bcd67826a00d1b9e39124edd44e947", "text": "Retrieve the value for the node .", "title": "", "metadata": ""}
{"_id": "4aaf718b9ff86acf70dc2ef3d6ad17fa", "text": "Frozen or unfrozen account .", "title": "", "metadata": ""}
{"_id": "6482d10025e35f2ce6ea672248e52181", "text": "Allows owner to activate / deactivate hashType .", "title": "", "metadata": ""}
{"_id": "c33aa74c914fcb12df3a70a0de50e986", "text": "interface for founders to whitelist investors .", "title": "", "metadata": ""}
{"_id": "be7d15a5f7dcde2cf619fdfd855d0ec7", "text": "Add a user that has paid with BTC or other payment methods .", "title": "", "metadata": ""}
{"_id": "fd81d54c7dce38072ef87abfc202d12f", "text": "Unpause the contract .", "title": "", "metadata": ""}
{"_id": "c7d1aa51a4bf27f57326360e14beb31c", "text": "function to retrive wallet address from vanity url .", "title": "", "metadata": ""}
{"_id": "82802011a1d1f05c02b386c3dc1264e1", "text": "Change country limits .", "title": "", "metadata": ""}
{"_id": "8fe3a0a7618b4e77e7a7f32e6fe8f7c8", "text": "Withdraw an amount of ether from VAULT .", "title": "", "metadata": ""}
{"_id": "d46b7e7e7ab67ff31c10c06a1d65e1c2", "text": "Set whether _to is on the list or not .", "title": "", "metadata": ""}
{"_id": "caa479a3888a5fc4e58deab855fd2a8b", "text": "End contract unsuccessfully .", "title": "", "metadata": ""}
{"_id": "42f3973e1a65504116a4fc7b0a2e7797", "text": "Modifier that requires the operational boolean variable to be true .", "title": "", "metadata": ""}
{"_id": "4e3704ccf1a9c1de24bb77cfd4f0cd87", "text": "Rejects a pending payment and returns the payment to the payer .", "title": "", "metadata": ""}
{"_id": "2226cce441f3fea8f1d42fc15d2901ae", "text": "Pay from fund to the specified address only if not payed already .", "title": "", "metadata": ""}
{"_id": "7f0ee5127b783ab305d11eee644e9fef", "text": "Returns the current amount of active owners , ie share above 0 .", "title": "", "metadata": ""}
{"_id": "aa21556b8dda96ddde53a102fbcdc845", "text": "Upgrade the backing implementation of the proxy and call a function on the new implementation .", "title": "", "metadata": ""}
{"_id": "87b60fc1399a4df55bf7594ffd90c465", "text": "Request to close the channel .", "title": "", "metadata": ""}
{"_id": "47211e9bca9f4179d13eea5238d26f54", "text": "Cancel a placed order ! .", "title": "", "metadata": ""}
{"_id": "7c83afdb944e3dbf8d5db3b22333f783", "text": "confirms payment .", "title": "", "metadata": ""}
{"_id": "ec63cc44ddd2a8552e470e5e8331e066", "text": "Function to add approved address to the approved address list .", "title": "", "metadata": ""}
{"_id": "fb50af342cb989a7eb84bdde813ff68b", "text": "New epoch can be started if : - Current round is 9 - Curen epoch 10 .", "title": "", "metadata": ""}
{"_id": "e6c7b2b67e89dd0b84c70c30f8c6caad", "text": "Toggle refund state on and off .", "title": "", "metadata": ""}
{"_id": "80b1e56a0a4233c9206dbea589348950", "text": "Transfers tokens held by timelock to all beneficiaries .", "title": "", "metadata": ""}
{"_id": "055091303fd900f31393625561363f55", "text": "Get current addOn support .", "title": "", "metadata": ""}
{"_id": "6323d59a27204e5f8767ec61aa2211bf", "text": "Removes senders tokens from supply .", "title": "", "metadata": ""}
{"_id": "2d1f3ed8cd31f6e1b32a828ef9f9ba3a", "text": "replace this with any other price function .", "title": "", "metadata": ""}
{"_id": "cab4d53a561df5ebdbab335fabe6df99", "text": "Throws if auditor has not yet confirmed TGE .", "title": "", "metadata": ""}
{"_id": "4a5fa9befd774855bad0be07a6923ea0", "text": "Assigns ownership of a specific Crypton to an address .", "title": "", "metadata": ""}
{"_id": "2335c4ce38c40e5e91900b74cd99ff5a", "text": "purchasing from exchange address .", "title": "", "metadata": ""}
{"_id": "e65813075f808c3eb2e47c78451b8250", "text": "Granting / minting of Company bonus coins by owner .", "title": "", "metadata": ""}
{"_id": "81c6cea7daa954f972a0f54964539c50", "text": "true if _participant is added successful .", "title": "", "metadata": ""}
{"_id": "09f8efc32c95dcb3a3ad23378060a81b", "text": "Get investors' fee depending on the current year .", "title": "", "metadata": ""}
{"_id": "3ce9d6cfed7253fb6a06a1050afec85c", "text": "Wake up the avatar : can be modified .", "title": "", "metadata": ""}
{"_id": "5bc44f00e9395843d366103ea7cc75b4", "text": "Moves locked tokens to reserve account .", "title": "", "metadata": ""}
{"_id": "1ae9533fe6eee07c7fba57c565b51a43", "text": "shows locked balance .", "title": "", "metadata": ""}
{"_id": "91af689fac53a987311b8957a6e32635", "text": "modifier for some action only admin or owner can do .", "title": "", "metadata": ""}
{"_id": "2bfd9464fbc5c636f03cfc3f4887bcac", "text": "Proxy transfer token with reverse transfer fee .", "title": "", "metadata": ""}
{"_id": "a16637d33b61f1b52a76e6b3df5c055b", "text": "convience function to disburse multiple payments in a single tx .", "title": "", "metadata": ""}
{"_id": "baf83b7d73d0d39f4a609d3dbd130066", "text": "Get total contributed balance in _tokenId token group .", "title": "", "metadata": ""}
{"_id": "41d936b2709a540367f5d6730361398a", "text": "anyone can call this if the score is finalized and not accepted .", "title": "", "metadata": ""}
{"_id": "da5ba8084b534f2a409eece405eca4b8", "text": "unlocks tokens , only allowed once .", "title": "", "metadata": ""}
{"_id": "69e5d197231d394177c8811d424b3254", "text": "get the oldest artwork .", "title": "", "metadata": ""}
{"_id": "bfc463d618b776e822958bef839e8116", "text": "Allow to upgrade token to new smart contract .", "title": "", "metadata": ""}
{"_id": "9d896209fd1323cd5d28fa2a6a61ccb8", "text": "Get the rate for a ACF token 1 ACF 0 . 05 ETH - 20 ACF 1 ETH .", "title": "", "metadata": ""}
{"_id": "7509a9c8f764ea2d39e169747d7f2fed", "text": "Check if the channel is in settling state : waits till the settling period is over .", "title": "", "metadata": ""}
{"_id": "8286c57e72022ac9abb358141ecba430", "text": "Distributes tokens to recipient addresses .", "title": "", "metadata": ""}
{"_id": "0fcac5ea7838233a529b66803ea74bfb", "text": "register the ERC20 ERC223 pair with the smart contract .", "title": "", "metadata": ""}
{"_id": "4dc65fae598ebcb4976ca515289bca72", "text": "Check if an address is an owner .", "title": "", "metadata": ""}
{"_id": "f5826b07f3be37b5777050d49708a1c4", "text": "This function will return only the price of a specific pokemon .", "title": "", "metadata": ""}
{"_id": "c7d58a273e0bbbc21f12217958901e08", "text": "BearCrowdSale contract instance mint token .", "title": "", "metadata": ""}
{"_id": "d7968312830d1d20e80b31b299202efe", "text": "allows contract owner to mint tokens for presale or non-ETH contributions in batches .", "title": "", "metadata": ""}
{"_id": "1ed38c1c1f4b17df5d9e0c0347cf684e", "text": "function for rewarding token holders , who didn't transfer in 1 or 2 years .", "title": "", "metadata": ""}
{"_id": "b32ac7a40b8c36b1271f0e6c811dee6f", "text": "Compute the amount of jurors to be drawn .", "title": "", "metadata": ""}
{"_id": "801abc66c727c261e79a64923a0fe405", "text": "Create a new migration Gate for the User .", "title": "", "metadata": ""}
{"_id": "5425a6b3f1c45be14d826641ad8d064e", "text": "Returns information about a subdomain .", "title": "", "metadata": ""}
{"_id": "5062ef010590fd0541b06f39397d5b43", "text": "The smallest order's index .", "title": "", "metadata": ""}
{"_id": "0ad705006fb5f069a4dc5db0093c4315", "text": "Called to allocate the tokens depending on eth contributed .", "title": "", "metadata": ""}
{"_id": "3e13b1ca69dbf3b635011708a1527b78", "text": "deposit ether into term-deposit account .", "title": "", "metadata": ""}
{"_id": "b5b23d9684de4c4cd7f3c71880991a14", "text": "Throws if called by any account other than the issuer .", "title": "", "metadata": ""}
{"_id": "d6715f9d9907251b12fad416db22647e", "text": "Returns balance of BTI Tokens .", "title": "", "metadata": ""}
{"_id": "af532c6e86ede99bb0b2d4a6367a1d5c", "text": "Function to create date token .", "title": "", "metadata": ""}
{"_id": "9a184b642a52d27b58c6ee8b7c90bfad", "text": "Gives players the upgrades they 'previously paid for' ( i . e .", "title": "", "metadata": ""}
{"_id": "249f93ba097ab8fe84d18d5b41809973", "text": "When the mad king decides to give his seat to someone else the king cost will be reset to 2 ether .", "title": "", "metadata": ""}
{"_id": "7eb21586eeb392773aa5f06859a02ba9", "text": "Remove token from tokenIds list .", "title": "", "metadata": ""}
{"_id": "c7187bdc72c5ddb2788568cd1139a644", "text": "standard ERC20 compliant approve method .", "title": "", "metadata": ""}
{"_id": "22590d3bacb68362fd1fb063e3975bb2", "text": "Validate buy parameters .", "title": "", "metadata": ""}
{"_id": "fe745296284bc84ba92cba971dcc90c7", "text": "Saves exidentaly sent tokens to this contract , can be used only by owner .", "title": "", "metadata": ""}
{"_id": "8d9759708e4f73a1aa4f65a9c32622c5", "text": "Allows only the owner to create new tokens as long as the number of tokens attempting to be minted plus the current totalSupply is less than or equal to 1 , 000 , 000 , 000 increases the totalSupply by the amount of tokens minted .", "title": "", "metadata": ""}
{"_id": "66b9a76277c03e42d8063c92f64f2eaf", "text": "Only the DAO itself ( via an approved proposal ) can execute a function with this modifier .", "title": "", "metadata": ""}
{"_id": "eb425e97ee61c9e572212d9f84ebf9af", "text": "Get the hero's name .", "title": "", "metadata": ""}
{"_id": "a8029c9f4d1c0f2c0d79638750a358d1", "text": "Create a new pinned instance of an app linked to this kernel and set its base implementation if it was not already set .", "title": "", "metadata": ""}
{"_id": "ffad7bb4caef8c901b66768e8f925454", "text": "Marketplace functions .", "title": "", "metadata": ""}
{"_id": "5aeda4f374141c8edbe92f09e020c2be", "text": "force settlement of the system at a given price ( sai per gem ) .", "title": "", "metadata": ""}
{"_id": "1a50a8494f3b27c0949a1ea881dfcde3", "text": "Check that the user is whitelisted and the amount sent in the transaction is below or equal to the individual cap .", "title": "", "metadata": ""}
{"_id": "af40af4be1ac0d048d9ff0d8dc79abd9", "text": "cancel an offer given by offerId .", "title": "", "metadata": ""}
{"_id": "6a3de8620f7bbac841a8bc66ab78427e", "text": "NOTE : _amount of 1 FCT is 10 * * decimals .", "title": "", "metadata": ""}
{"_id": "fb49828fe7b60dd6d250f4bbab375f4d", "text": "total number of tokens in existence .", "title": "", "metadata": ""}
{"_id": "183c8e2805ebcb7782cb5def5a46d5da", "text": "Utility method for returning a set of epoch dates about the ICO .", "title": "", "metadata": ""}
{"_id": "c390d5cc0332360f91f8b3d797976c42", "text": "set EthFundDeposit .", "title": "", "metadata": ""}
{"_id": "541007331ca125fce42165d002becd48", "text": "Change miner contract if needed .", "title": "", "metadata": ""}
{"_id": "95cb968f9b2786d91b9f38d0063a5d67", "text": "Withdraw ETH for receiverAddress after the auction has canceled .", "title": "", "metadata": ""}
{"_id": "891b7aaef87337783003334f9aec8d21", "text": "Returns all the relevant information about a specific game .", "title": "", "metadata": ""}
{"_id": "f10224e8fdfd5374bf6ef4f569858fa4", "text": "Simple getter to check if user has access to a freelance vault .", "title": "", "metadata": ""}
{"_id": "6090c7d53638094e9d0f0fc2ff3fecfb", "text": "Checks input and then creates storage buffer for crowdsale finalization .", "title": "", "metadata": ""}
{"_id": "cd366ac60f3d40be4f21b2f26a1d37da", "text": "Sets the settings for the next game .", "title": "", "metadata": ""}
{"_id": "e81fd2e8b40bdb11904d9e57f64d86d4", "text": "This function adds a number of tokes to an address and sets this tokens as restricted .", "title": "", "metadata": ""}
{"_id": "26f1a1c24ff8aa91674a1896e8a30f11", "text": "Allows the owner to take out wrongly sent tokens to this contract by mistake .", "title": "", "metadata": ""}
{"_id": "b595c81f271136fe70be13a5d7f5d99f", "text": "CONSTRUCTOR , This address will be : 0x . . .", "title": "", "metadata": ""}
{"_id": "158be1ae07787c9fb3f1c3e8bc10e264", "text": "Returns a list of all Property IDs assigned to an address .", "title": "", "metadata": ""}
{"_id": "f1b1d5abd45bd67b13c17c93e5579e6c", "text": "Called by the owner on end of emergency , returns to normal state .", "title": "", "metadata": ""}
{"_id": "a56bd88afc3d32de0eee8d20fe443a22", "text": "get total percentages x10 .", "title": "", "metadata": ""}
{"_id": "89ba2f87e329d8af13107a7b98fbf500", "text": "Setter for the enforce flag - only updatable by the owner .", "title": "", "metadata": ""}
{"_id": "7c713c7f65510bedf6872bbb2322d80f", "text": "Whether or not the crowdsale is post-purchase .", "title": "", "metadata": ""}
{"_id": "af0863985e253b556b5915a36eeb4890", "text": "Retrieves the balance of a specified address .", "title": "", "metadata": ""}
{"_id": "6a01f3fa1e58bcbc9a0ba0f4dfbd8144", "text": "Buy tickets for a pool ( public ) .", "title": "", "metadata": ""}
{"_id": "43b3b8e7c10fb940f6b1cd0c0048e2b5", "text": "Burn tokens from accounts only in state not migrated .", "title": "", "metadata": ""}
{"_id": "2d0d37f219e9300deb7a3f02524ac42b", "text": "Sets the membership contract address .", "title": "", "metadata": ""}
{"_id": "d2de13dccc24fa3bba4a65bb79568e6a", "text": "deploy contracts .", "title": "", "metadata": ""}
{"_id": "8e4c02b1301d60e2c9806e5d704323b7", "text": "Current market price per pixel for this region if it is the first sale of this region .", "title": "", "metadata": ""}
{"_id": "8eb12f4f9474692bc810b417c382decd", "text": "Modifier to allow actions only when the account is not Breakup .", "title": "", "metadata": ""}
{"_id": "c012585e1e8f7f4a54cd4dfc10b9d49c", "text": "Stops the minting .", "title": "", "metadata": ""}
{"_id": "ea7f6d1c914af4bba4d7c0da11faeb27", "text": "calculate WEI refund to investor , if any .", "title": "", "metadata": ""}
{"_id": "77fd9c1b62cf1044282b35b3dadab73f", "text": "add new user to contract .", "title": "", "metadata": ""}
{"_id": "c2c56f11c8cf6ad4bf6f3b5603c76213", "text": "Allows the owner to update the Minimum required Wei .", "title": "", "metadata": ""}
{"_id": "3d6214f3f9bf20fa77c0ffb26e1a1ee8", "text": "Liquidation Ratio 150 .", "title": "", "metadata": ""}
{"_id": "f280c65db7c70576d2bbc8f9c183537c", "text": "Token Contract Modifier .", "title": "", "metadata": ""}
{"_id": "a96e706b04f51301d0175c358539aa1a", "text": "Manually burn unused tokens .", "title": "", "metadata": ""}
{"_id": "8f904e42713774e8962b301c03c2d263", "text": "get total deposit of buyers .", "title": "", "metadata": ""}
{"_id": "40a8f5156bacbc75082b54d54dae0dea", "text": "setting of availability of tokens transference for third party .", "title": "", "metadata": ""}
{"_id": "afcef40f51dd1f376f8b6808f108309a", "text": "see the current manager .", "title": "", "metadata": ""}
{"_id": "6c57c8b73e7174af6abeb305e0686159", "text": "Checks that a given EtherDog is able to breed ( i . e .", "title": "", "metadata": ""}
{"_id": "c4e315c7724d2870ef7861f0a3f24b40", "text": "Normal ERC667 transferAndCall , except before transferring it credits points for both the sender and receiver .", "title": "", "metadata": ""}
{"_id": "026260771ea3b33c569281b46eccf090", "text": "computeMerkle ( txHash , txIndex , siblings ) computes the Merkle root of the block that the transaction corresponding to txHash was included in .", "title": "", "metadata": ""}
{"_id": "c972ca74f8061cf4ca489070622ccbcc", "text": "transfer value token to _to .", "title": "", "metadata": ""}
{"_id": "6d20dc7f660695222576c617fffc4002", "text": "to get the referral bonus amount given the ether amount contributed .", "title": "", "metadata": ""}
{"_id": "58e42b3b732c8143c406052ac6d22803", "text": "Check whether contract is currently active .", "title": "", "metadata": ""}
{"_id": "5d8cec972157cc9d743a1b0c9c257504", "text": "Sets the addresses of the tokens used for the swap .", "title": "", "metadata": ""}
{"_id": "5473e4a4b13c9da9cbd802f0c54f90a5", "text": "Get Locked Contract Address .", "title": "", "metadata": ""}
{"_id": "97d52c296e4f2bf357c7de72c3073fa1", "text": "get bettingStart , bettingEnd , winnerAnnounced , winnerIndex , teams count .", "title": "", "metadata": ""}
{"_id": "d1759ec5b9f7b803b4d66cb293906425", "text": "Change crowdsale OpeningTime .", "title": "", "metadata": ""}
{"_id": "3e48588cf901c10df08d0a893f488c59", "text": "End the game with game final result .", "title": "", "metadata": ""}
{"_id": "8c2007c1b81a4abb239439813886ec89", "text": "Creates an order which is then indexed in the orderbook .", "title": "", "metadata": ""}
{"_id": "dfc87b6c816d3b49ed241e567ba8e85d", "text": "Total supply tokens for periods .", "title": "", "metadata": ""}
{"_id": "a3ebeed7acad43fc5be7d15c4954994e", "text": "Payable registration in SNTR tokens .", "title": "", "metadata": ""}
{"_id": "bcec342e486f3270c87e9c19058d034a", "text": "true if the transaction can buy tokens check for valid time period , min amount and within cap .", "title": "", "metadata": ""}
{"_id": "75fce9e4e3d53eb97048d1f956e42eb5", "text": "Destruction of the token .", "title": "", "metadata": ""}
{"_id": "cc1572f64163d331ed2984f628542b19", "text": "Function to unlock tokens .", "title": "", "metadata": ""}
{"_id": "81e079d241c5a2e11a98b95ce1452ad5", "text": "dev Returns the product of a and b .", "title": "", "metadata": ""}
{"_id": "cf45c13eaacef28752b651c5b53194c5", "text": "calculate the result of the dials based on the hardcoded slot data : .", "title": "", "metadata": ""}
{"_id": "a9b1afa18dec965e8aa09a2bc6cb15c4", "text": "indicate the chunk has been updated .", "title": "", "metadata": ""}
{"_id": "d3817add760d8f3a6d2a36c1cf81fb45", "text": "Allows the owner to enable the trading .", "title": "", "metadata": ""}
{"_id": "449058d758876805125484c6ed3d6b3c", "text": "invoke this function after each dividend payout .", "title": "", "metadata": ""}
{"_id": "0c6dad4a06e3ec6b686bf77cf7474f2b", "text": "Function for getting information about a channel .", "title": "", "metadata": ""}
{"_id": "09af9ac2cc4fe1347bd8343bffd7c67b", "text": "Used only be vending machine and arena contract to mint to .", "title": "", "metadata": ""}
{"_id": "38663b98f240995893975e8a2a13f7dd", "text": "Check whether the game should be started , and if it should , start it .", "title": "", "metadata": ""}
{"_id": "590b78079d16b45080e0d5068a486c78", "text": "Main method for withdraw tokens from vesting .", "title": "", "metadata": ""}
{"_id": "dba4a0fc73277f764a05d145c9f893fd", "text": "Overload to require TS success .", "title": "", "metadata": ""}
{"_id": "c5d661148aa0d369c08f33e03951650a", "text": "Generate the url for the api call for oraclize .", "title": "", "metadata": ""}
{"_id": "0bd2a467573dd403ab0de09cc8b427a0", "text": "Withdraw ether and tokens to reserve escrow .", "title": "", "metadata": ""}
{"_id": "642dc0250af1f5d6abc88f6d9956fff0", "text": "Modifier to make a function callable only when the contract is not auctionPaused .", "title": "", "metadata": ""}
{"_id": "2ec96108fbbe016a97f7396954d59db3", "text": "mitigate short address attack https : / / github . com / numerai / contract / blob / c182465f82e50ced8dacb3977ec374a892f5fa8c / contracts / Safe . sol L30-L34 .", "title": "", "metadata": ""}
{"_id": "55ead1103e70a85a2ffa0fca22df60da", "text": "place a bid for a piece - bid has to be higher than current highest bid .", "title": "", "metadata": ""}
{"_id": "f42e4f1705101f404be4367a04753162", "text": "Batch attach function .", "title": "", "metadata": ""}
{"_id": "5c9469d186332377b3c0053977b936ac", "text": "Transfers the ownership of an NFT from one address to another address .", "title": "", "metadata": ""}
{"_id": "550ea647df31ae4c0c7efe908e4e3697", "text": "as of now this could be refactored out - there is verification in code .", "title": "", "metadata": ""}
{"_id": "e0aed33c469c13a75f3be2b1e1ac9f93", "text": "Unlocks given allocation address .", "title": "", "metadata": ""}
{"_id": "e21079a0793a926307265c4dda4ef402", "text": "uint Returns total tokens distributeds .", "title": "", "metadata": ""}
{"_id": "07b7ad59ec04a6fb473aa2d5b73e0f14", "text": "Propose the transfer token ownership and all funds to _proposedAddress .", "title": "", "metadata": ""}
{"_id": "7d3f665a900e5b5885661d77b860ca08", "text": "The owner can withdraw ethers already during presale , only if the minimum funding level has been reached .", "title": "", "metadata": ""}
{"_id": "cc506285c53e1a68549ada0551220313", "text": "Collect all the remain token which is unsold after the selling period and make this token can be tranferred .", "title": "", "metadata": ""}
{"_id": "c0b068e0ac6a66b69c5455c59e3772cb", "text": "function to change the free animals limit for each user can only be called from owner wallet .", "title": "", "metadata": ""}
{"_id": "33f02e50de180f1e59a8fa5cba22a6b7", "text": "_freeze internal .", "title": "", "metadata": ""}
{"_id": "8052a6c97d4a381c219ae293d60f8054", "text": "Get the account balance for an address .", "title": "", "metadata": ""}
{"_id": "6d46a00e71c94d62dc6b221f720354a0", "text": "Handle ICO end .", "title": "", "metadata": ""}
{"_id": "2b88e18c940f943d403b15410510c614", "text": "limit address to the creating address .", "title": "", "metadata": ""}
{"_id": "ce48cbd2b1e83a926192afe3e63f39e2", "text": "unfrozen company token year by year .", "title": "", "metadata": ""}
{"_id": "16e8ad7e5dcc0cb17a3b395e555b2098", "text": "Get BOP amount that spender can spend from provided owner's account .", "title": "", "metadata": ""}
{"_id": "871bbdc53e2891ba966c6909b9c7a0ef", "text": "price in weis .", "title": "", "metadata": ""}
{"_id": "0681d6f8e37e8d8367ebb5b3d793ae35", "text": "Returns the amount of tokens approved by the owner that can be transferred by _spender .", "title": "", "metadata": ""}
{"_id": "d3a311602758e265076bbd15fa587a24", "text": "checks that an address is a trusted address of a legitimate EOSBet game .", "title": "", "metadata": ""}
{"_id": "629bab4cee8eb0380be521ab52909e94", "text": "The contract can be selfdestructed after abort and ether balance is 0 .", "title": "", "metadata": ""}
{"_id": "65866f67352e257ee09af0d693b4ec4b", "text": "Transfer tokens from one address to another when not paused .", "title": "", "metadata": ""}
{"_id": "9118a27becfc528d725ca76743c25f07", "text": "Sell position and collect claim .", "title": "", "metadata": ""}
{"_id": "a6c6d3bcc8eab79d10447561f98fa14f", "text": "Initialise the contract .", "title": "", "metadata": ""}
{"_id": "ab9737f0e14b8c1e6505b29fa3ef21b7", "text": "Token Purchase outside of this contract , usually paid for by currencies other than ETH .", "title": "", "metadata": ""}
{"_id": "92d0bed36bc136a793f85b80aa20be01", "text": "Check if sell is possible .", "title": "", "metadata": ""}
{"_id": "a738f01b5b27d0d499346ab7f11391ce", "text": "for emergency purposes .", "title": "", "metadata": ""}
{"_id": "a78dbc1b6c47784e2615b714cf361e43", "text": "true if grantRewardToken function has ended .", "title": "", "metadata": ""}
{"_id": "86ed207d337d08d92eacd0b350df8d44", "text": "Breed a Puppy you own ( as matron ) with a sire that you own , or for which you have previously been given Siring approval .", "title": "", "metadata": ""}
{"_id": "1f51faf62d7baf1564e1a1126025c97b", "text": "Approve the passed address to spend the specified amount of tokens on beahlf of msg . sender .", "title": "", "metadata": ""}
{"_id": "4c07451804e79ebc0b8018634fb2705a", "text": "Allocate tokens to user .", "title": "", "metadata": ""}
{"_id": "b999c3262fbadb5d63c286cec2cbae9c", "text": "remove address from whitelist .", "title": "", "metadata": ""}
{"_id": "5ecfb92b56cba1435e85bd75e2c064da", "text": "Summing sold of tokens .", "title": "", "metadata": ""}
{"_id": "e686c48ce80b254ffe773b641b303db5", "text": "active - True , if sale is active .", "title": "", "metadata": ""}
{"_id": "338f0c41dda3644f32aaefd96bafb270", "text": "changeFounderMultiSigAddress is used to change the founder's address .", "title": "", "metadata": ""}
{"_id": "6b3a0f1d5167a446cc8758435ebfe6c5", "text": "function to call to contribute Ether to , in exchange for AQT in the next block mine or updateAccount must be called at least 10 minutes from timeOfLastBlock to get the reward minimum required contribution is 0 . 05 Ether .", "title": "", "metadata": ""}
{"_id": "2a4c207af50617de511fb3f080688f95", "text": "Require crowdsale open .", "title": "", "metadata": ""}
{"_id": "b76c1fdf8eb3b8b08789cb62be5fb979", "text": "true if correct .", "title": "", "metadata": ""}
{"_id": "4d2981c033952a2270c10a6a554c10ca", "text": "Overrides basic transfer function due to commission value .", "title": "", "metadata": ""}
{"_id": "72cd79dcf80897861817aaae6c3a9cba", "text": "accepts an adoption offer .", "title": "", "metadata": ""}
{"_id": "7e03443d162a2da79d422dd1bd08f7b5", "text": "Add / Remove service account .", "title": "", "metadata": ""}
{"_id": "c27751944e24a7b43eac8f8132150ad1", "text": "A user is able to unintentionally send tokens to a contract and if the contract is not prepared to refund them they will get stuck in the contract .", "title": "", "metadata": ""}
{"_id": "75c0962521bb37cf9b59db77cd301c88", "text": "Transfer of illegal funds .", "title": "", "metadata": ""}
{"_id": "8cce87b0b6390f3d4713178aaca1ed43", "text": "Returns the storage location of the total token supply .", "title": "", "metadata": ""}
{"_id": "3f784b02e63b1f2448ef4f8960db3bf5", "text": "Set paused to true .", "title": "", "metadata": ""}
{"_id": "5141b44359884a2f75286e23d6e6f0ff", "text": "Accept a bid for a Sketch that you own , receiving the amount for withdrawal at any time - note minPrice safeguard ! .", "title": "", "metadata": ""}
{"_id": "6a1ba2546a16498e2d7c99c877ede397", "text": "Internal function to clear current approval of a given deed ID .", "title": "", "metadata": ""}
{"_id": "f4bc325c28882ab30735709b1d7c5641", "text": "Mask must be 1 / 8th the size of the byte array .", "title": "", "metadata": ""}
{"_id": "7e6ea3a6fac002bb9463a7228f7d74dd", "text": "onlyOwner An efficient way to confirm multiple payments .", "title": "", "metadata": ""}
{"_id": "c05b259673bc6812d67b13c468866090", "text": "Initialize a new sale .", "title": "", "metadata": ""}
{"_id": "c7310f1b796ae18507285bc346c451e4", "text": "Checks whether the sender is eligible for claiming a refund .", "title": "", "metadata": ""}
{"_id": "d26ebb2a3f415a674216e160d98b2534", "text": "To sign contract id needs to be valid and contract should assigned to participant and should not be signed already .", "title": "", "metadata": ""}
{"_id": "e9630aae21dc922b4bc3ad62f3a7dab2", "text": "Returns if winning outcome is set .", "title": "", "metadata": ""}
{"_id": "e7efe14e8e5d5958857f80d70a15696e", "text": "transfer token for a specified address via cheque .", "title": "", "metadata": ""}
{"_id": "0ac18959839c3f35cffe43313da20ce4", "text": "function for off-chain proof derivation .", "title": "", "metadata": ""}
{"_id": "a2066503204b057e3b6b81ae5423757b", "text": "Functions change moderator .", "title": "", "metadata": ""}
{"_id": "e94259f9c9785f2501e063c8735faf1e", "text": "manager The address of this contract's manager .", "title": "", "metadata": ""}
{"_id": "9a855587a5ad1e37a42fbda973c39ecd", "text": "TODO Inserire commenti .", "title": "", "metadata": ""}
{"_id": "be713253213f4140cbdbddce36118bd4", "text": "Allows to freeze all token transfers in the future .", "title": "", "metadata": ""}
{"_id": "92d40e163092b59d524c26101dbe06b9", "text": "Admin can unpause token sell .", "title": "", "metadata": ""}
{"_id": "770502692a3372e7619568eaeac77d59", "text": "only whitelisted address can airdrop .", "title": "", "metadata": ""}
{"_id": "52737875a39b381206e3e4df258b867d", "text": "Purchase WBC Tokens for Address - ICO .", "title": "", "metadata": ""}
{"_id": "1e55b660505f35cf84ded9378e35eb62", "text": "NOTE : 1 , can be modified ! .", "title": "", "metadata": ""}
{"_id": "3ba460d3ed03a576abef8b2d0dd1e445", "text": "Get the token balance of tokenOwner .", "title": "", "metadata": ""}
{"_id": "3d80ff0038549aef8f039b8a4c78ee98", "text": "Withdraw deposit of Jackpot amount and add address to Jackpot Participants List according to transaction amount .", "title": "", "metadata": ""}
{"_id": "50f0de9b83c2ebc86a21193003db8aa0", "text": "Assigns ownership of a specific Tot to an address .", "title": "", "metadata": ""}
{"_id": "27f5b1618652c2d974e86c7bdd72d695", "text": "Order Sell tokens .", "title": "", "metadata": ""}
{"_id": "946eb0cf899639e1af05b77bc557be8f", "text": "allow specified address sending receiving tokens .", "title": "", "metadata": ""}
{"_id": "7759d4e7796005367cb59ffc774da978", "text": "Call Functions .", "title": "", "metadata": ""}
{"_id": "9dcae6167f757cf2015c234b8f095fd8", "text": "Start contract ( permanently ) .", "title": "", "metadata": ""}
{"_id": "52c75affba45389f5b369888c917e63b", "text": "Transfer tokens from sender to the provided address .", "title": "", "metadata": ""}
{"_id": "a11a8b4b89b385aaa542acc37c392dab", "text": "Any winner can chose to donate their jackpot .", "title": "", "metadata": ""}
{"_id": "0c27773cf77ab73889b6e466dc0335e8", "text": "Transfer ERC20 tokens out of this contract , to avoid them being stuck here forever .", "title": "", "metadata": ""}
{"_id": "02c60cc69013cf979d054ea4d53e90cd", "text": "Grants approval to another user to sire with one of your puppies .", "title": "", "metadata": ""}
{"_id": "96cd2576d08d7fe7cace6c62c11940aa", "text": "Allows for a certain amount of tokens to be spent on behalf of the account owner .", "title": "", "metadata": ""}
{"_id": "5f4b91843fe072751a189e99f2fda98a", "text": "Transfer tokens to the specified address .", "title": "", "metadata": ""}
{"_id": "efd4d1e4e6032fcb37eceaa513e1e20c", "text": "allow owner to transfer surplus .", "title": "", "metadata": ""}
{"_id": "982e5ac9ffc79e8b9a6706a56e435a06", "text": "finalize claims the deed and transfers it back to the user .", "title": "", "metadata": ""}
{"_id": "61600eafea77a3e2c250c749704f6db1", "text": "withdrow for manual distribution .", "title": "", "metadata": ""}
{"_id": "26fa108e71a8d21583388a6a6a2c007e", "text": "Perform an ERC20 token transferFrom .", "title": "", "metadata": ""}
{"_id": "b2f3600815ef915c6b6ce1e8e6e2ea82", "text": "Transfer token from owner to this contract .", "title": "", "metadata": ""}
{"_id": "287be22a7902d6720e373ad0134cf180", "text": "allow anyone sends funds to the contract .", "title": "", "metadata": ""}
{"_id": "ee4e7734420f6023c9c28f9ab280afee", "text": "redistribution of dividends .", "title": "", "metadata": ""}
{"_id": "61d9b43520fc4c6e8f4b1c6415affe3c", "text": "Sets a new owner address .", "title": "", "metadata": ""}
{"_id": "17d6d49b006598d3cb26ef86f02dc83d", "text": "This checks if the series is expired .", "title": "", "metadata": ""}
{"_id": "55bb5aea39ccf3b8406e17f9b4603c42", "text": "Sets a new claiming fee in wei .", "title": "", "metadata": ""}
{"_id": "ef0b04439e476272f57ea474e5150564", "text": "low level transfer token override to create custom token transfer mechanism , eg .", "title": "", "metadata": ""}
{"_id": "a4da064a9f1726395b2b491fae26de47", "text": "Creates a new Special Card with the given name Id .", "title": "", "metadata": ""}
{"_id": "4a919c65fa050951a16a61a760616114", "text": "gas used 67841 .", "title": "", "metadata": ""}
{"_id": "5d15e94bcbc9f76735a60c749c5922ed", "text": "Sets the crowdfund address , can only be done once .", "title": "", "metadata": ""}
{"_id": "e76b0a8a41416b2aaeaa11811dc25890", "text": "Remove divisibility from last owner .", "title": "", "metadata": ""}
{"_id": "6f28d0948ab829db1f21ac47d6017e68", "text": "Override low level token purchase function to send data to validPurchase ( ) .", "title": "", "metadata": ""}
{"_id": "fdb82f72b97bc2ff94788461530c5ee4", "text": "lockAmount - Lock ether with a proof .", "title": "", "metadata": ""}
{"_id": "eb241f76969414821445966365e8992c", "text": "Update participant cap for tier 2 .", "title": "", "metadata": ""}
{"_id": "caabd36f0cb9cbb90c06dbe94595efdc", "text": "Allows the authority to capture the balance available to the contract .", "title": "", "metadata": ""}
{"_id": "e3f161dc48b32960fbc6c000389a61a5", "text": "Get payer of a request .", "title": "", "metadata": ""}
{"_id": "7bea617d25357fced9c065c5c44b8235", "text": "Remove multiple addresses from the whitelist .", "title": "", "metadata": ""}
{"_id": "d4ec2d5d7b11c1a12e3637cd871ecdb2", "text": "Allows only contract owner or Auditor to proceed .", "title": "", "metadata": ""}
{"_id": "2b22c2eccfcc94fcdf4a4708681cb0b1", "text": "Checks input and then creates storage buffer to update a tier's duration .", "title": "", "metadata": ""}
{"_id": "27c143eafcc59251424d50a382673829", "text": "Number of wei that payee is entitled to collect .", "title": "", "metadata": ""}
{"_id": "ce7c1342d4246534a88cbbe05e2a1132", "text": "allows execution only for owner or manager .", "title": "", "metadata": ""}
{"_id": "5490ae0b6607952db6f1671b9fd68065", "text": "Gets total supply of Handelion token .", "title": "", "metadata": ""}
{"_id": "26b1a3df3f8acb63c693f8c0c9c116f2", "text": "returns the total vote count .", "title": "", "metadata": ""}
{"_id": "a1e63d12a3d103228e02089483fa0d90", "text": "Allow Owner to be changed by exisiting owner ( Dev management ) .", "title": "", "metadata": ""}
{"_id": "907320d87634f5c6aa92b946e661063e", "text": "Creates a Giver Admin with the msg . sender .", "title": "", "metadata": ""}
{"_id": "ac634b306a7b924be9f20d7acd59a276", "text": "Management interface below .", "title": "", "metadata": ""}
{"_id": "91f9677860fcee5529e1b41d52c2de44", "text": "Overrides basic transferFrom function due to commission value .", "title": "", "metadata": ""}
{"_id": "12b4c3831d365a521cf0a272e032dd74", "text": "Set RntPresaleEhtereumDeposit address .", "title": "", "metadata": ""}
{"_id": "c11a86f5f7b5ee122f18a606a69995a6", "text": "Float fixed point Operations .", "title": "", "metadata": ""}
{"_id": "5b2ea0a50b480261780688b12a39cd68", "text": "Can be called once by super owner .", "title": "", "metadata": ""}
{"_id": "d426851065e53288d4538d3dfddfd32e", "text": "Failsafe mechanism .", "title": "", "metadata": ""}
{"_id": "b08ae39b9b4b99d150468ca581d0ea55", "text": "For Upcoming Price Change Features .", "title": "", "metadata": ""}
{"_id": "dd29c247181acebe9d490116768113c5", "text": "Returns the number of tokens to be purchased by 1 ether at the given block .", "title": "", "metadata": ""}
{"_id": "f31d7496da2ca1e474ff13a81400bf88", "text": "Checks if the goal or time limit has been reached and ends the campaign .", "title": "", "metadata": ""}
{"_id": "c0bcb7154c6beb177fb565c5a77e4315", "text": "rate scale ( or divider ) , to support not integer rates .", "title": "", "metadata": ""}
{"_id": "06a2c59b55bf0cba07f3a7aa787bb8cc", "text": "to enable transfer .", "title": "", "metadata": ""}
{"_id": "d2454641297e136844f6da5eaba14709", "text": "Set RNTMultiSigWallet address .", "title": "", "metadata": ""}
{"_id": "3d043ecc2e919579c29eef9ccf940cb6", "text": "Buy a token .", "title": "", "metadata": ""}
{"_id": "ed614b65cf99bb8e5687345beddfaf8d", "text": "Function to view current token balance of the crowdsale contract .", "title": "", "metadata": ""}
{"_id": "79bd1a20dcd9271226fb5c8c9b65abfb", "text": "Grant another address the right to transfer a specific Lambo via transferFrom ( ) .", "title": "", "metadata": ""}
{"_id": "f19de159e1b247b5a976b258b2a11bcd", "text": "Return the amount of jurors which are or will be drawn in the dispute .", "title": "", "metadata": ""}
{"_id": "24439501215eb3d46ca850e17afcc538", "text": "Returns price that the sender is selling the current sig for ( or 0 if not ) .", "title": "", "metadata": ""}
{"_id": "90bc6edd0c3e94b00418acb5f7800064", "text": "Returns true if _account is the current owner .", "title": "", "metadata": ""}
{"_id": "62f6bf0e58826353faf7bf31f798a29d", "text": "For creating Girl .", "title": "", "metadata": ""}
{"_id": "cc81a6af448151a0723535d27486e761", "text": "The Ownable constructor sets the original owner of the contract to the sender account .", "title": "", "metadata": ""}
{"_id": "86269735273195613a04716db7085244", "text": "Override buyTokens function as tokens should only be delivered when released .", "title": "", "metadata": ""}
{"_id": "33c8813597df93aaf5cc7fd006e30029", "text": "Creates a campaign for a certain package name with a defined price and budget and emits a CampaignCreated event .", "title": "", "metadata": ""}
{"_id": "8e4bb8e41af1397ddc51fabcf7f37fc6", "text": "ERC20 tokens are not designed to hold any other tokens ( or Ether ) on their balances .", "title": "", "metadata": ""}
{"_id": "b03ca07c78b3dc66fced7ac00aaa4645", "text": "withdraw funds to contract creator .", "title": "", "metadata": ""}
{"_id": "6c3c5a137ee01671e6000af6c7cddbde", "text": "Token amount calculation .", "title": "", "metadata": ""}
{"_id": "8d75c43250998f55632e4b900c2366a4", "text": "Places a bet for a given team .", "title": "", "metadata": ""}
{"_id": "b8e1623d75b9ba80b5614b61b5653f92", "text": "Get the hero's class id .", "title": "", "metadata": ""}
{"_id": "b52f0fea59617ba0f69ad81f6874292c", "text": "Function to determine if a ballot has ended , based on its end date .", "title": "", "metadata": ""}
{"_id": "9b0b01a825ec5d3ae023af73f66efc40", "text": "Transfers amount in idPledge back to the oldPledge that that sent it there in the first place , a Ctrl-z .", "title": "", "metadata": ""}
{"_id": "c5ad3633ff6422144336ae9b4e6cf502", "text": "Pay commission by raised Wei amount of crowdsale .", "title": "", "metadata": ""}
{"_id": "89217db22d9b6f298729e65c278fb7fe", "text": "Change the resource to _resource .", "title": "", "metadata": ""}
{"_id": "95ae6110d5a1109a74281f2496d4f8d0", "text": "Unlock user balance .", "title": "", "metadata": ""}
{"_id": "83fdf057ac8ce0c51293d85a922ed99b", "text": "Set PresaleFinalizeAgent address .", "title": "", "metadata": ""}
{"_id": "44a2cc5fe9aa0fd5438c62b0f5e3f593", "text": "Guarantees that gamble is under ( statistical ) safety limits for casino survival .", "title": "", "metadata": ""}
{"_id": "202a002c5a0ebccaa3cd0ddecf3b4c96", "text": "Allows appending multiple decrypted bids ( in order ) at once .", "title": "", "metadata": ""}
{"_id": "7d146900cd4d1d0e31867ca067710fb6", "text": "to release tokens of the company according to vesting schedule .", "title": "", "metadata": ""}
{"_id": "26fc02bd3187933dabbf4a840274ef85", "text": "Transfer token to other address .", "title": "", "metadata": ""}
{"_id": "961b6a6517da6ac5aa2041e927069bfb", "text": "Finalizes the crowdsale .", "title": "", "metadata": ""}
{"_id": "5592bc11d0c454f750f5cca702007a7e", "text": "sell new tokens during the round 0 all except logo .", "title": "", "metadata": ""}
{"_id": "3d62df7311b1bda66478c95186146285", "text": "Remove address the presale list .", "title": "", "metadata": ""}
{"_id": "fd63520de4ace5428ee2fb55af731ee0", "text": "Remove contract address from tokenFallbackWhiteList .", "title": "", "metadata": ""}
{"_id": "5e5224e595af47297ece1d907ae534c2", "text": "Returns list of pending transactions .", "title": "", "metadata": ""}
{"_id": "a0bc3a5697a9ac987dff104f7e3e298f", "text": "assigns a new address to act as the Manager . Only .", "title": "", "metadata": ""}
{"_id": "273222856e5fcd8c7555c9f175d9786e", "text": "Perform the buy of tokens for ETH and add to the net amount bought .", "title": "", "metadata": ""}
{"_id": "6ba49507ee888806e07db0d145a4380f", "text": "advanced transfer .", "title": "", "metadata": ""}
{"_id": "f3f965d7694e5cd99c4ef2dec61b65ea", "text": "Transfers tokens an approved account .", "title": "", "metadata": ""}
{"_id": "51188fd3b674ada6c52dd367562d8522", "text": "Award cup to the tournament champion .", "title": "", "metadata": ""}
{"_id": "7afc08df1e5767c83792419293b28de3", "text": "Confirm an unconfirmed score to leaderboard / player .", "title": "", "metadata": ""}
{"_id": "63bc5cfab51831441cb701c1f347d840", "text": "Determines next price of token .", "title": "", "metadata": ""}
{"_id": "af5f011ee6dda4c8a8e7a202412da488", "text": "the Bursar account can use this to withdraw the contract's net balance .", "title": "", "metadata": ""}
{"_id": "04acba237f7b059ee88698141d6e24b8", "text": "Overrides mint ( ) function so as to keep track of the tokens minted after the migrationAgent has been set .", "title": "", "metadata": ""}
{"_id": "74b492c46bdc85c4c5ae0a96673ae549", "text": "Internal function to determine if an address is a contract .", "title": "", "metadata": ""}
{"_id": "813ce780cc9b8d5f1066f1b47b240845", "text": "Transfer tokens from one address to another - needed for owner transfers .", "title": "", "metadata": ""}
{"_id": "5875d8a8d0f3de08a2e7cef225860c6b", "text": "drain LRC .", "title": "", "metadata": ""}
{"_id": "93e7aab61f0e7eda83f0faa42a2d606d", "text": "true if the _participant is in the list .", "title": "", "metadata": ""}
{"_id": "0d3470c2698334a2f09a9ab6d4c0ce60", "text": "Get the owner of a certain token .", "title": "", "metadata": ""}
{"_id": "482e58cfb3e3d3df7daacad125a0f8a0", "text": "Store betting data submitted by the user .", "title": "", "metadata": ""}
{"_id": "7f04dd3ee0bae5c314f56338a932a820", "text": "Adds a currency to the oracle , once added it cannot be removed .", "title": "", "metadata": ""}
{"_id": "da1a91f82635b96e847f5fc5316ad2a4", "text": "Resolves the last roll for the user .", "title": "", "metadata": ""}
{"_id": "46c88674dd7eef02068c73551681a7a4", "text": "Stores the number of tokens that will be sold in the tier .", "title": "", "metadata": ""}
{"_id": "7edddf8e6444865e16bcdbaca55e59a9", "text": "Change the frozen status of the LOT token .", "title": "", "metadata": ""}
{"_id": "9f48d00e8c19a093e41bd96a4fa1dddf", "text": "sends the specified value to the investor contract , if there are still investors waiting to be paid out .", "title": "", "metadata": ""}
{"_id": "4bd8798ee421be635192bd7c1f346d89", "text": "Throws if called by any account other than an owner or a burn delegate .", "title": "", "metadata": ""}
{"_id": "6b54f23d620b5fb90c3479e3c4f5510d", "text": "mint Tokens .", "title": "", "metadata": ""}
{"_id": "cb2f0eefc2b8f9bb6c5f5983b758dbbe", "text": "Checks if a given address currently has transferApproval for a particular Pixel .", "title": "", "metadata": ""}
{"_id": "c62d28191e30ad2582fb9c19065e12b8", "text": "Contains betting record for a betting record id .", "title": "", "metadata": ""}
{"_id": "08cf6f97d8b727ab24c79b8cc98978c5", "text": "Retrieve the frontend tokens owned by the caller .", "title": "", "metadata": ""}
{"_id": "79c55fc3d0dfbb4214a20ec75800d998", "text": "Get Weapon Data .", "title": "", "metadata": ""}
{"_id": "383d5b5a3a094672209f15bb9cd167b7", "text": "allow investments .", "title": "", "metadata": ""}
{"_id": "13f46e007a1718956a70fd764bdd69c6", "text": "Returns the current transfer fee address .", "title": "", "metadata": ""}
{"_id": "66e229d2ff24e04af7ebb31ff0bff4bc", "text": "allow owner to add addresse to transfer tokens .", "title": "", "metadata": ""}
{"_id": "7089d10835e1e264670356a658be061f", "text": "Some percentage of the tokens is already reserved by early employees and investors .", "title": "", "metadata": ""}
{"_id": "e230a4c8d6b2ca42c3b13741e9e28e8d", "text": "Subtraction with safety check .", "title": "", "metadata": ""}
{"_id": "cfc33fb39ceea68a133433420db84644", "text": "lock lock the contract .", "title": "", "metadata": ""}
{"_id": "d397e41ebf0d0520decb8c2c2b4ccf10", "text": "Collect your pending payouts using this method .", "title": "", "metadata": ""}
{"_id": "8a2939203a4eac76de20c9612d6c306b", "text": "step 3 : someone else accepts the offer .", "title": "", "metadata": ""}
{"_id": "e33fc69a77ab2a565f9f21b0db5ecae8", "text": "Withdraw money from contract balance to owner .", "title": "", "metadata": ""}
{"_id": "b976dca5a8a0d463a19b56eb3cbed5ad", "text": "ShowSegmentation ( ) looking for the user balances Segmentation .", "title": "", "metadata": ""}
{"_id": "8235846b0a66f6e324c0ea83b83683ab", "text": "Returns the balance of the wallet .", "title": "", "metadata": ""}
{"_id": "d162cebaec140cb4417cef7bf447c0cb", "text": "Get list of confirmations for a tx , use getTransactionLength to get latest number .", "title": "", "metadata": ""}
{"_id": "7f9a64726d4d7a0f1f4a9d5d66e5e098", "text": "sealed ( ) checks to see if the the Campaign has been sealed .", "title": "", "metadata": ""}
{"_id": "eae8565f0f7beac57540f795adb5de1d", "text": "modifier to scope access to a single role ( uses msg . sender .", "title": "", "metadata": ""}
{"_id": "0dfc90f5361738fd42205d39df68d3fe", "text": "Assigns ownership of a specific All Star to an address .", "title": "", "metadata": ""}
{"_id": "02e82f045571f6202faac1bc1454e5e1", "text": "Send _value amount of metadollars from address _from to address _to .", "title": "", "metadata": ""}
{"_id": "4d9e3822a170b24775b48bd1da8bb96e", "text": "Issue tokens for user .", "title": "", "metadata": ""}
{"_id": "68fdd66bb8aedf2115c7d292da162dee", "text": "Calculate winner of dice game .", "title": "", "metadata": ""}
{"_id": "0bc9810e1f56cbb7440e1cb6c578109e", "text": "Auxiliary method used in constructor to reserve some tokens and lock them in some cases .", "title": "", "metadata": ""}
{"_id": "addbbad25c6d0a428cd65df7c0e74d1f", "text": "Team reserve wallet .", "title": "", "metadata": ""}
{"_id": "daa629f05c68d47770bdcfaa881b9986", "text": "Allows an address to transfer money out this is administered by the contract owner who can specify how many coins an account can take .", "title": "", "metadata": ""}
{"_id": "c99e0d771a163bc75c430524c30ddc21", "text": "to be called by backend .", "title": "", "metadata": ""}
{"_id": "94f5d1bc018ce7532daa1a264aaff740", "text": "unblock account .", "title": "", "metadata": ""}
{"_id": "1335c45123defcc83584552fcd848532", "text": "get the one of the withdraw records .", "title": "", "metadata": ""}
{"_id": "4b92816e7ef1d05c1fa25c6391fdfe32", "text": "Only the contract owner may end this contract , and may do so only if there are 0 bids .", "title": "", "metadata": ""}
{"_id": "803b7c44d7ee866c076ea259c36058a5", "text": "ERC223 Transfer to contract and invoke tokenFallback ( ) method .", "title": "", "metadata": ""}
{"_id": "f2d94a0a51da22ff0e0fc9ea210f130c", "text": "set final the confirmation period .", "title": "", "metadata": ""}
{"_id": "664b859973aab26a1d372d14fe3596c3", "text": "Will get the Market Comission Ratio .", "title": "", "metadata": ""}
{"_id": "6e82add5c860cd9359fd7d29f673c824", "text": "Stores funds that may later be refunded .", "title": "", "metadata": ""}
{"_id": "4d67a5a0037c63c7db7c491525312248", "text": "Allow owner to unload the loaded profit which could not be claimed .", "title": "", "metadata": ""}
{"_id": "9b74a1a6b097a9d518fc942e6e52dfbd", "text": "Requires game to be currently active .", "title": "", "metadata": ""}
{"_id": "3fb81f746273cb9e24a9705bcbe1ddfe", "text": "Function to return granted token to the initial sender .", "title": "", "metadata": ""}
{"_id": "5f70f3b83813e96fc10604748911e791", "text": "Public fuction to create a token , it creates only 1 token per hour .", "title": "", "metadata": ""}
{"_id": "7ed4cff262459cb45a8d2115cf2b6427", "text": "Add a number to another number , checking for overflows .", "title": "", "metadata": ""}
{"_id": "df0910dbd729036b7683da17444f480a", "text": "Owner withdrawal of an ether deposited from Token ether balance .", "title": "", "metadata": ""}
{"_id": "e9de6522ef7446cc512afe0df272a28f", "text": "Have a pregnant Panda give birth ! .", "title": "", "metadata": ""}
{"_id": "8778e8ec1e8b347118f25fb4fb948557", "text": "Updates the maximum allowed transaction cost that can be received on the buyTokens ( ) function .", "title": "", "metadata": ""}
{"_id": "bc09689eb13d6970671476b774745e88", "text": "Prevent targets from sending or receiving tokens by setting Unix time .", "title": "", "metadata": ""}
{"_id": "8bd788e099623ecd1ae3c77d44573042", "text": "_amount in FNK , .", "title": "", "metadata": ""}
{"_id": "eed5826971706aa04e6da4e20a02915c", "text": "Withdraw the funds from this contract to the specified address .", "title": "", "metadata": ""}
{"_id": "6e7320179ef74bf4699683194dc26aac", "text": "Destroy this contract and recover any ether to the owner .", "title": "", "metadata": ""}
{"_id": "826a1e86de40cbaee0d729e8ede0dfdb", "text": "Conver wei to token .", "title": "", "metadata": ""}
{"_id": "d30bb9a3cfbe50f61c477b6d206fd9d5", "text": "To read batches from external tokens .", "title": "", "metadata": ""}
{"_id": "59558f88fed62cad418df8ffb459c6c3", "text": "Check the fork condition during creation of the contract .", "title": "", "metadata": ""}
{"_id": "167b7b25724677e7b6f54a7451d816e1", "text": "override buyTokens function to allow only whitelisted addresses buy .", "title": "", "metadata": ""}
{"_id": "1aee3c16b2dcdc75aec74d8ecf93e06a", "text": "Remove numerator / denominator of tokens from the system irreversibly .", "title": "", "metadata": ""}
{"_id": "aae45d343ec47a54602e04f1f80e9e49", "text": "Migrate tokens to the new token contract .", "title": "", "metadata": ""}
{"_id": "18b3c16091d87b6c032bedf87b2e774c", "text": "sets slave wallet address .", "title": "", "metadata": ""}
{"_id": "4607c5f617bf2e74165cdc3fb3242669", "text": "Withdraws all ETH from a list of wallets and sends all the funds to the forward address .", "title": "", "metadata": ""}
{"_id": "85fc8dcbf33cd4f9efa771524d328022", "text": "for check .", "title": "", "metadata": ""}
{"_id": "9f92dbda995a0f9329e5c82c443f0082", "text": "Creates a sealed purchase order .", "title": "", "metadata": ""}
{"_id": "3adc27c6551d95ed8214a1f58bc18b41", "text": "Internal Functions .", "title": "", "metadata": ""}
{"_id": "d048d29a50415b6bd07e4ffe1ab92c41", "text": "Add a presale participating allocation .", "title": "", "metadata": ""}
{"_id": "58b476d2b93d2c0aeb14d9c5ee85a66b", "text": "Start this November 1 .", "title": "", "metadata": ""}
{"_id": "6cfc7c9831c80422d47bed6062b3ca48", "text": "Function to check if crowdsale is open .", "title": "", "metadata": ""}
{"_id": "bf73f076aac63577069957dc34482a3b", "text": "All functions that make our life easier .", "title": "", "metadata": ""}
{"_id": "16653e0ace6b932622198e7639118a2c", "text": "Bulk version of allocateTokensBeforeOffering .", "title": "", "metadata": ""}
{"_id": "b1ce2daa3fe5441c6e62c52ebb2e6113", "text": "Caculate AMT to be released of each round .", "title": "", "metadata": ""}
{"_id": "35f4ccc98cc668e20083920bb0f411b9", "text": "If you consider yourself rich , donate for world peace .", "title": "", "metadata": ""}
{"_id": "021039a0e39776117e3447c9a68daf1f", "text": "Starting price of a regular Animecard .", "title": "", "metadata": ""}
{"_id": "a29b20d39f256a8670b1d2807f1be49c", "text": "Mint a batch of presale tokens .", "title": "", "metadata": ""}
{"_id": "286fab252446ec08116f7529ba119cc5", "text": "TokenController functions .", "title": "", "metadata": ""}
{"_id": "12f6f0e8736fa3df89d7a6fdc2535e8a", "text": "overriding FinalizableCrowdsale finalization to add 20 of sold token for owner .", "title": "", "metadata": ""}
{"_id": "7ea3531bd812cae48944d0369af8d184", "text": "Section 4 - Modifiers .", "title": "", "metadata": ""}
{"_id": "4ca476f6132105951dd5ffe5dbfb2f4c", "text": "Returns last bid for canvas .", "title": "", "metadata": ""}
{"_id": "c4a4263b2c4623bf48e15708fa5f0ab1", "text": "payable function that allow token purchases .", "title": "", "metadata": ""}
{"_id": "46cd72d9f7a4cb7bb9589b565d3ae3ab", "text": "Returns the address currently assigned ownership of a given Puppy .", "title": "", "metadata": ""}
{"_id": "7311f3992bae0a51ea4e9e3f7f53bb40", "text": "fixedExp is a 'protected' version of fixedExpUnsafe , which asserts instead of overflows .", "title": "", "metadata": ""}
{"_id": "a2200edd61f4f53bcdde1a1b1c38b99d", "text": "Check if an address has read a given article .", "title": "", "metadata": ""}
{"_id": "6d7079f6af220e96cf944d9cbdf7d87d", "text": "internal functions .", "title": "", "metadata": ""}
{"_id": "9a51cb2c6a14557a5b9da1dab8f989d6", "text": "add new member of syndicate .", "title": "", "metadata": ""}
{"_id": "f125c81626d83f8412bafae2fc8d7f71", "text": "Internal utility function to initiate breeding , assumes that all breeding requirements have been checked .", "title": "", "metadata": ""}
{"_id": "eafe14b34d8f6b0496e8542ecb445ca4", "text": "Change minimum bids as more bidders enter .", "title": "", "metadata": ""}
{"_id": "40efe684d50361b326f61319efc9d5c5", "text": "Open the sale phase .", "title": "", "metadata": ""}
{"_id": "c5c5651369278c8c2da8d081c1f4b7ca", "text": "get names for specified addresses in global namespace ( bytes32 ( 0 ) ) .", "title": "", "metadata": ""}
{"_id": "e7b6ec5641ed0a94e93fcecb0e001322", "text": "Add chunk 2 / 7 to the whitelist .", "title": "", "metadata": ""}
{"_id": "c705d4a2e0b2d5952eaaca880b4054f9", "text": "Modify winner's betting information after receiving the prize .", "title": "", "metadata": ""}
{"_id": "edcb3626059817399f5ea4385411db4f", "text": "resume transfers .", "title": "", "metadata": ""}
{"_id": "a54572dc2842a3ab95c1343ef212a2d6", "text": "Close future assignments .", "title": "", "metadata": ""}
{"_id": "7eb634872d87915956e548de4aab7add", "text": "suspend all module operations for given time .", "title": "", "metadata": ""}
{"_id": "757742fa6c68b544ff4cac8261913512", "text": "Contract Owner withdraws the profit from the contract and sent to the specific account .", "title": "", "metadata": ""}
{"_id": "087b931497cf256108fac66b26d428d1", "text": "Grants extra kudos for identity proof .", "title": "", "metadata": ""}
{"_id": "bd3c34d1886bee120bdcda69bf138feb", "text": "Migration Functions Post Update .", "title": "", "metadata": ""}
{"_id": "dc219e14c59a36040f7f8bac12fe8f49", "text": "2 128 * ( x / 2 128 ) ( 1 / 10 ) .", "title": "", "metadata": ""}
{"_id": "f17e8f2fe4421984e652798e34fc4059", "text": "Creates a new promo collectible with the given name , with given _price and assignes it to an address .", "title": "", "metadata": ""}
{"_id": "8e413acd1446b1e63ecb2fee173620ff", "text": "Transfer ownership of token contract to _addr .", "title": "", "metadata": ""}
{"_id": "18b45b2ca7cf869dd9db1ba2ba823912", "text": "Withdraw all the funds from this contract .", "title": "", "metadata": ""}
{"_id": "481bff30dfa7697e957a987ccc5e3405", "text": "Do not allow construction without upgrade master set .", "title": "", "metadata": ""}
{"_id": "6315fbd7d56a9756e9b82d28200b8cff", "text": "Get whether address is genesis parent .", "title": "", "metadata": ""}
{"_id": "b558791c99c13eac6aed84fbb2d9f77f", "text": "Sets price value .", "title": "", "metadata": ""}
{"_id": "9c579b5cd760295ade96f18cc8cc8f0e", "text": "Modifiers and Structs only run certain methods when contract is open .", "title": "", "metadata": ""}
{"_id": "7f844ea3f45c5d17f8a580e9a5615f98", "text": "Functon to retrieve a proof that has not been completed yet .", "title": "", "metadata": ""}
{"_id": "b5ba938b08c7f6a601830ddbd7676b5c", "text": "internal ( read only ) : .", "title": "", "metadata": ""}
{"_id": "8adcf91ee2bcbf5e92f6af6c0303644f", "text": "User buys KWHs and pays in Ether .", "title": "", "metadata": ""}
{"_id": "227e1ff76dfa558fa7c046a3aca68c39", "text": "an account / contract attempts to get the coins throws on any error rather then return a false flag to minimize user errors note that when transferring to the smart token's address , the coins are actually destroyed .", "title": "", "metadata": ""}
{"_id": "618de533d86e9c7b2eac1090b5d0025f", "text": "sets the eruption threshold .", "title": "", "metadata": ""}
{"_id": "0c8d580c6213885a280bea8c6956e61b", "text": "ensures that the controller is not the token's owner .", "title": "", "metadata": ""}
{"_id": "4036979ce19a694276cb76b5ab49041b", "text": "manually triggers the attack .", "title": "", "metadata": ""}
{"_id": "aeb8251748bdef0f6f529531c4c1e389", "text": "in the case of any extra funds .", "title": "", "metadata": ""}
{"_id": "eda9043289388474257373da591861f0", "text": "Forward funds to owner address .", "title": "", "metadata": ""}
{"_id": "c148cb14670e4471c4d8662d140691af", "text": "Set balance and freeze time for address .", "title": "", "metadata": ""}
{"_id": "d7ff66a6610b942be9f95d783441d41a", "text": "Allocate tokens to presale participant according to its vesting plan and invesment value .", "title": "", "metadata": ""}
{"_id": "04fec872ca8766bfd6f250f520ddf111", "text": "what withdrawal period are we in ? returns the period number from 0 , periods ) .", "title": "", "metadata": ""}
{"_id": "b93cf2116fd08592ff83f82907b4e82b", "text": "Set receiver address .", "title": "", "metadata": ""}
{"_id": "a692ebc15b021b1d12e1344d202c3111", "text": "Add address to Early Investors .", "title": "", "metadata": ""}
{"_id": "1a5a134eb0f1567681f35fb9f340eaa5", "text": "add a new approver only admin can perform this function .", "title": "", "metadata": ""}
{"_id": "5fd52b2b780126f6679a1f30546b7f4e", "text": "Spice up the prize pool .", "title": "", "metadata": ""}
{"_id": "7373f156e03c528eda584de1e3f6af56", "text": "Contribute to the mining of BTH .", "title": "", "metadata": ""}
{"_id": "3d5573d6cc914c0f29f3c2d852174ec6", "text": "Unlock a YTIcon and make it usable .", "title": "", "metadata": ""}
{"_id": "86ac670998dd8c58eedab7ea09219abb", "text": "user withdraw NAC from each subround of NLF funds for investor .", "title": "", "metadata": ""}
{"_id": "a5fa212bc3a16e0c5d8a20f37d30cc7b", "text": "function to start the crowdsale .", "title": "", "metadata": ""}
{"_id": "f9f72822d98919677979a541d6048375", "text": "Owner can transfer tokens that are sent here by mistake .", "title": "", "metadata": ""}
{"_id": "f80c0c2c315871af1bfdb9a0aa137942", "text": "Compute the miner halvings offset .", "title": "", "metadata": ""}
{"_id": "fdd452d842aabcad257016cad7d68dd6", "text": "Minting function calling token . _mint .", "title": "", "metadata": ""}
{"_id": "0c62a1c8aea0c3eb5840373a44262810", "text": "Returns true if the token is claimed by the claimant .", "title": "", "metadata": ""}
{"_id": "862b885b57e5acbb87c38e78e8604eea", "text": "Allow the creator to collect the 3 Fee .", "title": "", "metadata": ""}
{"_id": "4fa31a5bf16cfae56b525e586d6a2675", "text": "Events contract revokes tokens for address .", "title": "", "metadata": ""}
{"_id": "2501a6c7adea5a66569f5e93f39680d8", "text": "Allow the owner to transfer un-claimed items ( they already have the redeem codes , so there is no additional trust required ) .", "title": "", "metadata": ""}
{"_id": "3cd4d1bed6df797e19571ddc8952a35a", "text": "Change owner address ( where ICO ETH is being forwarded ) .", "title": "", "metadata": ""}
{"_id": "19af91db476de876479a5013ad3c33c3", "text": "Remove schedule by _cid and _sids .", "title": "", "metadata": ""}
{"_id": "82a85a575cf09fb512d9f632155b1bf4", "text": "Update the fee entitlement since the last transfer or entitlement adjustment .", "title": "", "metadata": ""}
{"_id": "51ec6b426198aaff139d52f55f39d76c", "text": "while paused .", "title": "", "metadata": ""}
{"_id": "5d1dcf3395fc3664c502343a1292e3af", "text": "Returns the total amount development fund has earned .", "title": "", "metadata": ""}
{"_id": "aa455405b20c6a150302de049ea0568d", "text": "Transfers vested tokens to ParkinGo Wallet .", "title": "", "metadata": ""}
{"_id": "406bfb71668af4a32008f6accf6371e8", "text": "Private functions can't override validPurchase because need to pass additional values .", "title": "", "metadata": ""}
{"_id": "cc893d51df87c4c85db841fb352e0187", "text": "byte constant internal proofStorage_IPFS 0x01 ; .", "title": "", "metadata": ""}
{"_id": "74a009944fc7e7d887dc94fbcb00f76e", "text": "number of tokens owner of the given address had at the moment the snapshot with given index was created .", "title": "", "metadata": ""}
{"_id": "1adee0e4ae8b3b7ee08e0348d44c7f53", "text": "Redeems tokens and records the address that the sender created in the new blockchain .", "title": "", "metadata": ""}
{"_id": "1b6b2065cd0a9280af443a278bfe8607", "text": "Get the rate of exchange according to the purchase date .", "title": "", "metadata": ""}
{"_id": "f2161d39c91d5f4c2578703a9a673006", "text": "Returns hash of order _i , signed by its owner .", "title": "", "metadata": ""}
{"_id": "7b5c4a93242be061311603719a2c7884", "text": "Returns whether or not the day is already bought .", "title": "", "metadata": ""}
{"_id": "a4a5b4f921efd958aa13301d3ba35b14", "text": "called by the owner to enable transfers .", "title": "", "metadata": ""}
{"_id": "2314f79c5ca077e877a14ec949abdfd1", "text": "Check token is on auction .", "title": "", "metadata": ""}
{"_id": "a925d47ef50c868a97d177578a01b6c3", "text": "every user .", "title": "", "metadata": ""}
{"_id": "4d9672b4cc80254054d49b481b5d98ab", "text": "Withdraws tokens for msg . sender .", "title": "", "metadata": ""}
{"_id": "4b6350beb44f37e5c221145e2efdd82c", "text": "Withdrawal / transfer functions .", "title": "", "metadata": ""}
{"_id": "9fe33a8981a13e1879f8bf9a3644fbab", "text": "given an array of ids , returns whether or not this composition is valid and unique when compositions are allowed does not assume the layers array is flattened .", "title": "", "metadata": ""}
{"_id": "ca832aa7699916c7d1638a58f706c24f", "text": "Returns the address currently assigned ownership of a given Kitty .", "title": "", "metadata": ""}
{"_id": "43c7d508aaf00aeb39eb669b3664d8b4", "text": "TS functions .", "title": "", "metadata": ""}
{"_id": "6158c147699603f3f0f6d73edd6b9c36", "text": "it will allow contributors to get refund in case campaign failed .", "title": "", "metadata": ""}
{"_id": "fd451ea92b2723951fcc3d821380ea08", "text": "PRIVATE functions for safety checks .", "title": "", "metadata": ""}
{"_id": "d72591e262f90d6553cf354ca8c6db25", "text": "Brand account can permission accounts as markers .", "title": "", "metadata": ""}
{"_id": "aff484a4ac4e9027e365a677dd186454", "text": "Look up token info .", "title": "", "metadata": ""}
{"_id": "5c524341b0b69aecfbfc1a86edf9ddbd", "text": "Set buy now price .", "title": "", "metadata": ""}
{"_id": "b5162fb37eed5ecf89570acf0491b1e0", "text": "Buy token function .", "title": "", "metadata": ""}
{"_id": "ff1205857dcf4d30d3226bedc9f8a1ba", "text": "Calculate the divends for the current period given the AUM profit .", "title": "", "metadata": ""}
{"_id": "3dc93d937ef3bb428620fa226b7dbbd3", "text": "Safe subtraction .", "title": "", "metadata": ""}
{"_id": "b5fcc0ba1d55a659622bf94e9031e969", "text": "Get balance of specific address .", "title": "", "metadata": ""}
{"_id": "0cd136dda0a8abdadda149543e5341f8", "text": "true if the transaction can buy tokens based on cap and timing .", "title": "", "metadata": ""}
{"_id": "ea2abb6ace0260df40b7c77a3030312a", "text": "In case delay of token sale .", "title": "", "metadata": ""}
{"_id": "33a18e8221856f371d229c033abf8eb6", "text": "transfers ether from smartcontract to zebiwallet .", "title": "", "metadata": ""}
{"_id": "ca2a6874c34995f4a244b4ac445f9b44", "text": "public write .", "title": "", "metadata": ""}
{"_id": "bee5281eed3f99dd9f0897c42cffba98", "text": "Returns the key of a node in the list .", "title": "", "metadata": ""}
{"_id": "a1194e09c22ceca3fdc7919f76259145", "text": "Modifier throws if called by any account other than the owner .", "title": "", "metadata": ""}
{"_id": "b9b0d6124db0fed829b6f9a9cb9e6e91", "text": "approveAndCall flow for selling entry point .", "title": "", "metadata": ""}
{"_id": "1502f5d4da191473086f2411955537eb", "text": "send \u039e to contract to be claimed by token holders .", "title": "", "metadata": ""}
{"_id": "63865c136eee57cc58fe0f1703769d47", "text": "return the amount of ether that user can send in order to purchase token .", "title": "", "metadata": ""}
{"_id": "4e6b818ce3f2d5e46345dcd05ff88a54", "text": "Sells positions , adds a new trades and adds profits / lossses .", "title": "", "metadata": ""}
{"_id": "c71b7de31357fa0152d9200a3c914dcd", "text": "a specific amount of tokens .", "title": "", "metadata": ""}
{"_id": "30e3a1a15845fb4326a911ab161c7d9a", "text": "Prohibition if the condition does not match .", "title": "", "metadata": ""}
{"_id": "596aeee7ff720009ba8495b2bd378135", "text": "Buyer deauthorizes the Service Provider ( from calling settleBuyer ) .", "title": "", "metadata": ""}
{"_id": "6444df35f6451817ccd26555faf18914", "text": "Moves tokens from one user to another .", "title": "", "metadata": ""}
{"_id": "6f3022fc53c1f311bebed504309c457b", "text": "Handles transfer of tokens for vesting revokes and releases .", "title": "", "metadata": ""}
{"_id": "e08bdfd9614a290aeb5af429723ed6da", "text": "n : max number of tokens to be issued price : in wei , e . g .", "title": "", "metadata": ""}
{"_id": "2821f8f200bda5cb947b7badf4860cd6", "text": "Distory token left for token sales .", "title": "", "metadata": ""}
{"_id": "7e116cfeb34e70ad5030d123f7a78428", "text": "Create an lockedBalance which cannot be traded until admin make it liquid .", "title": "", "metadata": ""}
{"_id": "6136506f54182d4ceb8004243f0b2df9", "text": "Removes duplicates from a given array .", "title": "", "metadata": ""}
{"_id": "e8605882788c240bc9cbe8b27b7b2eaf", "text": "Moves funds in sale contract to Boul\u00e9 MultiSigWallet .", "title": "", "metadata": ""}
{"_id": "7b0c58f4f73341b6c91d69b966a49ea4", "text": "Gets the total token supply .", "title": "", "metadata": ""}
{"_id": "53cd8b14b1ea259f137b7eb09d6af9e8", "text": "Setup rates and phases .", "title": "", "metadata": ""}
{"_id": "e46a498c9b9c244a0299dff149757d92", "text": "bitcoin invest .", "title": "", "metadata": ""}
{"_id": "8bf399a475d1d003c36c9c60cc1bed3c", "text": "Buy tokens to specified wallet .", "title": "", "metadata": ""}
{"_id": "33a9f7d486851cbd1f09d3045dff59fd", "text": "Same getWeek function as seen in main Etheraffle contract to ensure parity .", "title": "", "metadata": ""}
{"_id": "738bedfe0559bf93367c1e6c56d5cd32", "text": "Transfer ownership of MiniMeToken whoes controller is this to other address .", "title": "", "metadata": ""}
{"_id": "c075e96a778b48d8b40bc4e97b037faa", "text": "set Oscar Address .", "title": "", "metadata": ""}
{"_id": "d8ccc188f73be2ba34767d2f38a3b101", "text": "after mint .", "title": "", "metadata": ""}
{"_id": "2e45e0ca0a6c0cd637a92b3ecbea1d78", "text": "update a person's DOB .", "title": "", "metadata": ""}
{"_id": "7fa74baec29487e2cad867d56f1da520", "text": "returns the date after which the Hirer can cancel the job .", "title": "", "metadata": ""}
{"_id": "c60a6307c9734639754cc4cbaf3bb976", "text": "Allows the current owner to update multiple caps .", "title": "", "metadata": ""}
{"_id": "8ccee392311d5cf613ba3a37df480c9b", "text": "Updates lottery parameters .", "title": "", "metadata": ""}
{"_id": "c9af38a49af406aa2434f4f3455e5047", "text": "Returns the total number of records in this registry .", "title": "", "metadata": ""}
{"_id": "71b52d1577971acafb9b48a70174a1a6", "text": "Returns current bonus .", "title": "", "metadata": ""}
{"_id": "6709057e1cb5d1623f0be6dc8da530b6", "text": "After a player acted we might need to reduce the number of remaining time periods .", "title": "", "metadata": ""}
{"_id": "555e929f253c2d9f20fdb2dfe193cc56", "text": "Are tokens tradeable .", "title": "", "metadata": ""}
{"_id": "00c90800ab534de4d027c73a5db8634d", "text": "Overrides to add finalization logic .", "title": "", "metadata": ""}
{"_id": "818ea56e441fdf9b558cdf59c344e01f", "text": "Change bet expected times .", "title": "", "metadata": ""}
{"_id": "4bce7b0dec02bded8f3e9b9f62393a2e", "text": "Returns all the relevant information about a specific mobster .", "title": "", "metadata": ""}
{"_id": "b47b2de115ec1bc53de592d8e799160d", "text": "set open .", "title": "", "metadata": ""}
{"_id": "44f5e7e07f97e23e030b04de6b38e151", "text": "token_name : The name of the token .", "title": "", "metadata": ""}
{"_id": "bae1f59536da30c10ca1c29af07132be", "text": "Function for adding discount for concrete buyer , only available for the owner .", "title": "", "metadata": ""}
{"_id": "1f169fbcffdf169a3f650e6826444c55", "text": "fundTransfer used to transfer collected ether into the beneficary address .", "title": "", "metadata": ""}
{"_id": "bd45856dc77a54003c6cafd2d20cca32", "text": "Release delayed bonus tokens .", "title": "", "metadata": ""}
{"_id": "50097c1f1bc97e81ba43f3a652b6fea3", "text": "Join / Exit Spread .", "title": "", "metadata": ""}
{"_id": "28fe5cc367534fa4522f6ac50c7c6fee", "text": "For purchasing tokens from others using this SC to give trust to purchase .", "title": "", "metadata": ""}
{"_id": "2ab80d105cd671c283eb7a054d3db47d", "text": "onlyVault Confirms a withdraw request changing the PledgeState from Paying to Paid .", "title": "", "metadata": ""}
{"_id": "22ff699ae3f168bed1ddeeeed052183e", "text": "modifier to allow actions only when the contract is not paused or the sender is the owner of the contract .", "title": "", "metadata": ""}
{"_id": "daadb90fc793a7eedecced2ce88ae10b", "text": "Same function as oraclizeAPI but we check if caller is a whitelisted contract .", "title": "", "metadata": ""}
{"_id": "98a77e51a55cf1cab019431e09c15def", "text": "Buy the tokens at the expected price or fail .", "title": "", "metadata": ""}
{"_id": "6892705c59954d1f457e95a6c2280a5c", "text": "Chech trade balance of account .", "title": "", "metadata": ""}
{"_id": "9c0af3637f777cc29979ea5a5d7d7092", "text": "check if the given account is valid .", "title": "", "metadata": ""}
{"_id": "788ce5dfca37fb2b1f99df80e8fe8cc2", "text": "adjust totalsupply at checkpoint after minting or burning tokens .", "title": "", "metadata": ""}
{"_id": "2920ae399714557173b5e3d453370394", "text": "setting the addition / removal of admin addresses .", "title": "", "metadata": ""}
{"_id": "0d17e5f1901afa8fcb59090cc8b065df", "text": "Set fee applied when selling tokens .", "title": "", "metadata": ""}
{"_id": "0cf82387185b2ca3136251290f811f36", "text": "Get the current week ( from contract creation ) .", "title": "", "metadata": ""}
{"_id": "c038b55d17cc45b942624c80b4217f52", "text": "Return the ether proceeds ( less the fee ) of selling n nomins .", "title": "", "metadata": ""}
{"_id": "c79e0b5486588e5a0fc6a70be15b04af", "text": "Withdraws the given mon from your deposit address .", "title": "", "metadata": ""}
{"_id": "0ebc010b8cf3455ad69f395db3b5e069", "text": "sets address for team's wallet .", "title": "", "metadata": ""}
{"_id": "449838d65f29d11fc2acadd7719a13ae", "text": "put the addres in allowed mapping .", "title": "", "metadata": ""}
{"_id": "8af9468ff81ba7be2f329308bfb766b1", "text": "Overrides of the standard token's functions to add the paused / unpaused functionality .", "title": "", "metadata": ""}
{"_id": "b282a6197d90846f6c6e643cfdff8a0d", "text": "Allow to change the maximum Coin one address can buy during the ico .", "title": "", "metadata": ""}
{"_id": "d752b10be8cd44e2f402e753db246b35", "text": "Returns the length of array ! All orders might not be active .", "title": "", "metadata": ""}
{"_id": "79b9288004ca0c652865d558fa8953f9", "text": "Sends accrued fees to the collector .", "title": "", "metadata": ""}
{"_id": "82e8b2030d2378b2b465afee75234cc7", "text": "withdraw ( target , amount ) .", "title": "", "metadata": ""}
{"_id": "b13cdd65c8e022ab638d9ed99e9da7d4", "text": "Check current leader's points .", "title": "", "metadata": ""}
{"_id": "11a394a8b2d5998325f8f8ccd9a3cbb4", "text": "Owner function for closing the paused contract and cashing out all tokens and ETH .", "title": "", "metadata": ""}
{"_id": "ae60279f643a6bf342f2e6c2255ab25a", "text": "the price is per 10 decimals tokens .", "title": "", "metadata": ""}
{"_id": "64440cc7e4be70099b725c3073cda9bb", "text": "Handles lost gained weight after fight .", "title": "", "metadata": ""}
{"_id": "3109d4f83e26aff59ebea50f2ab00371", "text": "Transfer item .", "title": "", "metadata": ""}
{"_id": "af1f1ecc607b08d876b1be7cf306041c", "text": "get the battle card's plat cost .", "title": "", "metadata": ""}
{"_id": "c13764547b6adfe2ac50b0e1171bd2e8", "text": "ECVerify function , from \u00b5Raiden and others .", "title": "", "metadata": ""}
{"_id": "b4ed1ad42e7da06d7a1a6d18d7121c50", "text": "a dapp from the list .", "title": "", "metadata": ""}
{"_id": "7f310750916bd2dea40e4b7d32240dd5", "text": "Import cuties from previous version of Core contract ( part 2 ) .", "title": "", "metadata": ""}
{"_id": "db4b117e6cd42dbc8b452dc4d2e22d2d", "text": "Remove contributor by _cid .", "title": "", "metadata": ""}
{"_id": "21c22d66499b292bd86c484a5da5fd0b", "text": "sell dai price , will be less than normal conversion , _minReturn should be 1 / ( Dai / Eth price ) * . 95 .", "title": "", "metadata": ""}
{"_id": "ca2a97801b180c1f9512698736c8eae4", "text": "Invalidate a crowdsale purchase if something is wrong with it .", "title": "", "metadata": ""}
{"_id": "7e77e7ada38f4ff0b4959159fb4a3ca9", "text": "Accepts ETH and creates WOLK .", "title": "", "metadata": ""}
{"_id": "3ee41a7fe7c777137aa54a333d205bb4", "text": "allows to close possible theoretical closed markets .", "title": "", "metadata": ""}
{"_id": "4a65d568d4576b0c3bd2e30d2c550db1", "text": "Claim N bought tokens to the investor as the msg sender .", "title": "", "metadata": ""}
{"_id": "8258dfc7f1940b2d29202c1b5f95d3f5", "text": "Transfer deposit ( with the allowance pattern . ) .", "title": "", "metadata": ""}
{"_id": "1ae9f698d849a18eb2fd121a073bc569", "text": "Ensures both storage and events have been pushed to the buffer .", "title": "", "metadata": ""}
{"_id": "2d02001dfe9c5700db0f78baa21db431", "text": "Limit token transfer until the distribution is over .", "title": "", "metadata": ""}
{"_id": "37a41e395521fc4a96602b583739c3b8", "text": "Called off-chain to manage UI state so no gas concerns - also never likely to be more than 50-200ish player contracts .", "title": "", "metadata": ""}
{"_id": "86c0da414411fc1d519a6a3f4b266250", "text": "send some funds along with the call to cover oraclize fees .", "title": "", "metadata": ""}
{"_id": "4c1e938474ed72abbeebb873fe2834d2", "text": "notPaused : ability to stop crowdsale if problems occur .", "title": "", "metadata": ""}
{"_id": "960c855d75c7a294df5e82aaa4a690ab", "text": "change the funding end block .", "title": "", "metadata": ""}
{"_id": "6856a2e129bc0c5a51b15f12c875a162", "text": "Registers a version of an application as the admin under the provider and registry exec id .", "title": "", "metadata": ""}
{"_id": "75f987f3ebd90fe8484d736eae6ec14d", "text": "function to join the main sale associated with variables , functions , events of suffix Main .", "title": "", "metadata": ""}
{"_id": "3c137fa49cbcc09c4073a7f59bc2617e", "text": "Returns the total number of puppies currently in existence .", "title": "", "metadata": ""}
{"_id": "d35c4d1e667558f4a3b4d0eda0dd9e1c", "text": "Check if the given value is already in the list .", "title": "", "metadata": ""}
{"_id": "748d5b26f11171f62baff8933c0de69d", "text": "Return ZTKCheck information by supplying beneficiary adddress .", "title": "", "metadata": ""}
{"_id": "078fe104a780776a047df683fc8d5794", "text": "Synchronously cancels multiple orders in a single transaction .", "title": "", "metadata": ""}
{"_id": "8f92cbe2fe909e5189c9a346c98ba41b", "text": "A uint256 , amount of tokens for amount of Wei .", "title": "", "metadata": ""}
{"_id": "1266622449a426ba407d5d8a617407b5", "text": "whiteList handler .", "title": "", "metadata": ""}
{"_id": "ee0b806d2179e691ce385bf5b6796aa1", "text": "accepts nonce aka mining field , checks if it passess proof of work , rewards if it does .", "title": "", "metadata": ""}
{"_id": "c3c6fbbefb3cf647c929ebd735189774", "text": "Burn all tokens from a balance .", "title": "", "metadata": ""}
{"_id": "47c7941ee5d0f29ba597b1433845ead3", "text": "transfer ethers from contract account .", "title": "", "metadata": ""}
{"_id": "a17b03f3d2999705ff455f2e6701103b", "text": "Transfers token to a specified address .", "title": "", "metadata": ""}
{"_id": "7230593a1cffcdd71572382b1f36b356", "text": "overriding approve method to include the onlyPayloadSize check modifier .", "title": "", "metadata": ""}
{"_id": "917d0541679fcb7de9733aa766e5d20c", "text": "function grantAdvisorToken - Transfer advisor tokens .", "title": "", "metadata": ""}
{"_id": "a70d4c592465083e467ebde3a6ca08bc", "text": "the function for setting of ICOPrice .", "title": "", "metadata": ""}
{"_id": "5278bcbd81f1a23cc1cf338969e2a1a9", "text": "reallocate funds from this crowdsale to another .", "title": "", "metadata": ""}
{"_id": "06a5dace280115ed46e2d76c65d507e9", "text": "Delete wallet address to transfer whitelist ( may transfer tokens before ICO ended ) .", "title": "", "metadata": ""}
{"_id": "b595fc9070f3522ea566968d587bf34f", "text": "Creates new stage for the crowdsale .", "title": "", "metadata": ""}
{"_id": "863091a985202f21c03bae9c8ee992f3", "text": "New tokens can be minted .", "title": "", "metadata": ""}
{"_id": "e2ee5037236396eb861ee8cfe14e0592", "text": "timestamp of token creation .", "title": "", "metadata": ""}
{"_id": "6ce475cabf8c0afb4a390c6c009ca457", "text": "Add a KittyItemToken contract to be sold in the market .", "title": "", "metadata": ""}
{"_id": "7a75d87ab48b9ffc7af4bd6fde763719", "text": "used by a new owner to accept an ownership transfer .", "title": "", "metadata": ""}
{"_id": "9063040775e14c2a7e5f39c7d02a4d53", "text": "Internal constant method for calculating payments .", "title": "", "metadata": ""}
{"_id": "a7d904e6ede3ad64211e680c4f6d6146", "text": "send issuer coins .", "title": "", "metadata": ""}
{"_id": "6d402078093a4c3d96a76005734250be", "text": "Function modifier to check resolver's locking status .", "title": "", "metadata": ""}
{"_id": "dfbec3fa50dddf05cd230116fd01f817", "text": "Withdraw any pending ETH amount that is owed to failed bidder or successful seller .", "title": "", "metadata": ""}
{"_id": "9fbeb8b64fe4a965376849b08d27f7d4", "text": "Starts the preCrowdsale .", "title": "", "metadata": ""}
{"_id": "63e4d8749569fa746fa573fdd6954440", "text": "checks to see if tokenholder has a balance , if not it appends the tokenholder to the accountIndex which the getAddress ( ) can later access externally .", "title": "", "metadata": ""}
{"_id": "a92a626993b04d5316682978c05ea35f", "text": "Allows transfer of tokens to a recipient who has purchased offline , during the PublicSale .", "title": "", "metadata": ""}
{"_id": "e3683f9463a2b6a513e9e8006f1eed89", "text": "Allocates the team bonus with a specific vesting rule .", "title": "", "metadata": ""}
{"_id": "ce1889cf5f49d8b27b2b1ffc2f09e7d0", "text": "Disables token transfers .", "title": "", "metadata": ""}
{"_id": "fd9446188c969aefe15a90ebf20ba56a", "text": "Issuer can push dividends using the investor list from the security token .", "title": "", "metadata": ""}
{"_id": "e473eddecda1a5f025aa33f00239dca8", "text": "The Price of the Token Each Day .", "title": "", "metadata": ""}
{"_id": "5bbe28a7d066883f28d185f6483b55d6", "text": "Check user is allowed to spend amount .", "title": "", "metadata": ""}
{"_id": "a8f6663c5fce41ba1b1174f45400e32d", "text": "called to cleanup an error in a game , usually caused by a reorg or other weird blockchain anomoly .", "title": "", "metadata": ""}
{"_id": "98319ac64446e7518313fb049c218ffd", "text": "get token order's hash for user to sign , internal .", "title": "", "metadata": ""}
{"_id": "dc65feb7aabf5ee343de66ecb2ac17c6", "text": "add apps .", "title": "", "metadata": ""}
{"_id": "d7bdfb896756d7e5534ce338c6187f95", "text": "Utility function for bug wanchain token .", "title": "", "metadata": ""}
{"_id": "c3182db59329b694bfdebb920432ebe9", "text": "Dividends ( 10 to stock owner , 2 , 5 to node owner per annum ) .", "title": "", "metadata": ""}
{"_id": "758fd0a9670df4d49ca3dd7135d9d084", "text": "returns the number of asset events that has happened to an asset item .", "title": "", "metadata": ""}
{"_id": "c73539d24da95e2a47fed35500ac657e", "text": "Execute the ruling of a dispute .", "title": "", "metadata": ""}
{"_id": "c290baa8da61a66e8e0a4234184ec348", "text": "Settle multiple transactions in a single call .", "title": "", "metadata": ""}
{"_id": "103867c0f1c8fd8616b4c927ef115923", "text": "Removes oracles from whitelist .", "title": "", "metadata": ""}
{"_id": "7b1795d4793afd03de984f9519b4b148", "text": "Allows to set the authorize mint token .", "title": "", "metadata": ""}
{"_id": "e291029a4adcdcbab6b031821fdb8f13", "text": "get the block number state .", "title": "", "metadata": ""}
{"_id": "f2ca73fd78614b6772afab41c28366d5", "text": "transfer balance back to core contract .", "title": "", "metadata": ""}
{"_id": "b687bd568bd7d90cbce76e51974a8fdc", "text": "return the next better offer in the sorted list the better offer is in the lower priced one if its an ask , the next higher priced one if its a bid offer and in both cases the older one if they're equal .", "title": "", "metadata": ""}
{"_id": "8f525784ff30a7a035d872093fe97c81", "text": "Basically a decorator _ ; is were the main function will go .", "title": "", "metadata": ""}
{"_id": "e256c3455b848648e4d5eea8d8b81e73", "text": "This function creates a new army and saves it in the array with its parameters .", "title": "", "metadata": ""}
{"_id": "384ed46d6c22654a28ee2a6cecefbf82", "text": "buy Gold with ether .", "title": "", "metadata": ""}
{"_id": "1e3f151403e3b12a68cc8afddc447540", "text": "Get all information about a specifc grant .", "title": "", "metadata": ""}
{"_id": "807535d2f7b2a8c4dbf952e53989c097", "text": "Emergency Stop .", "title": "", "metadata": ""}
{"_id": "fd5849664448eee8cd55477b50a64b4f", "text": "Allows to replace an owner with a new owner .", "title": "", "metadata": ""}
{"_id": "61f7804ae5425ed7e1bfb51a7d0018dc", "text": "unsowed returns the current number of unsowed potatoes owned by a farmer , taking into consideration those that already rotted away .", "title": "", "metadata": ""}
{"_id": "1fa6125dd65e08747be7dbad1efc7032", "text": "Set / Modify Lightyear Distance 3 . 456 ly 3456 .", "title": "", "metadata": ""}
{"_id": "c174330624105898d80ff28b6a101898", "text": "Simplify creation for Bitex team .", "title": "", "metadata": ""}
{"_id": "e8c519c6f3cd86e5db049bd6da1c1c75", "text": "AP Ok - Accept ownership transfer .", "title": "", "metadata": ""}
{"_id": "4c36a1eb52ea12e9295c8af3ed3a09a0", "text": "StartICO integration , lockTime is ignored ( ignore the warning ) .", "title": "", "metadata": ""}
{"_id": "264752b1e5f608290eb4da784ba0657f", "text": "Overrided destructor companion .", "title": "", "metadata": ""}
{"_id": "faa2f784d9fbf39840b7e1deaade7a8e", "text": "Allows any pre-allocations to bet set for presale purchases or team member allocations .", "title": "", "metadata": ""}
{"_id": "fc97a0453b508f1644d05d7c3d35f7de", "text": "Function that is called by our robot to allow users to buy tonkens for various cryptos .", "title": "", "metadata": ""}
{"_id": "19725e1f79265ea71ff020a6f481c029", "text": "Called by children of this contract to remove value from an account .", "title": "", "metadata": ""}
{"_id": "768bb5c1cf5528bfffe0dcf8edfb61d5", "text": "send _value token to _to .", "title": "", "metadata": ""}
{"_id": "be02e8fbe54554dc7c263b82c0b4e627", "text": "The owner can allocate the specified amount of tokens from the crowdsale allowance to the recipient addresses .", "title": "", "metadata": ""}
{"_id": "7b23a5b77f901668aa8ddeafe4284c4e", "text": "Gets total number of tokens in existence .", "title": "", "metadata": ""}
{"_id": "0bba24b89acd9cc898a3af6b8041a7b0", "text": "Approves the specified address to spend the specified amount of tokens on behalf of msg . sender .", "title": "", "metadata": ""}
{"_id": "b0559f85e5bfd3fe4237b16ffcf5651c", "text": "Updates the fee amount .", "title": "", "metadata": ""}
{"_id": "0e4940668edae1eb616353de6103dff1", "text": "From https : / / ethereum . stackexchange . com / questions / 10811 / solidity-concatenate - uint-into - a-string .", "title": "", "metadata": ""}
{"_id": "c0a2b2c802ca3389e398727ef4794ff3", "text": "This will returns the data of a bet .", "title": "", "metadata": ""}
{"_id": "6ad433540ff7dd63355c66ce7eba2aaa", "text": "Check if sender is JobsManager .", "title": "", "metadata": ""}
{"_id": "830cbfb1ce99a601ce2b71ad8f5fcdab", "text": "Removes list of addresses from whitelist .", "title": "", "metadata": ""}
{"_id": "fac8139d0044dfb8a52fbe6682985744", "text": "Contract management functions .", "title": "", "metadata": ""}
{"_id": "ae57d11f24a96b3440d92de3baea3124", "text": "this function is executed at initialization and sets the owner of the contract .", "title": "", "metadata": ""}
{"_id": "4c1a529675c1c97cd92b204647b64050", "text": "withdraw tokens as bounty .", "title": "", "metadata": ""}
{"_id": "6be66e8985bb2acdc87b28ac2ea46eda", "text": "Throws if called by any account other than an admin .", "title": "", "metadata": ""}
{"_id": "fa6e3f96309aff9948209d5302dce44f", "text": "remove a list of wallets to be allowed to take part in pre ico .", "title": "", "metadata": ""}
{"_id": "950208a95cdc642950cd35f468f29900", "text": "Sell tokens .", "title": "", "metadata": ""}
{"_id": "ee5f8bdb0313246f2d62f386ba8beaa1", "text": "buyTokens function used to buy the token .", "title": "", "metadata": ""}
{"_id": "f06e96379b8259c83ed6f8ffe6a9e9dd", "text": "Sets a new withdrawalAddress .", "title": "", "metadata": ""}
{"_id": "39a83417aa6a51b85c22dc79209e6eee", "text": "ability for owner to change the service commmission .", "title": "", "metadata": ""}
{"_id": "a05a176aef92d254412341259009843d", "text": "Used to remove the balance , when asking for refund .", "title": "", "metadata": ""}
{"_id": "3ecb43b7b59afac6a52db15cae07bc22", "text": "founder who created tx can cancel it .", "title": "", "metadata": ""}
{"_id": "ec8f54e82b50f1a4dd0fe3c49a4176bd", "text": "Check that an RLP item is valid .", "title": "", "metadata": ""}
{"_id": "ab56f5ebcd90b326038355fa7574b456", "text": "Vesting logic .", "title": "", "metadata": ""}
{"_id": "a972eb6371bc42ac4ae4e47caff2c0f7", "text": "Update the information regarding to period and amount .", "title": "", "metadata": ""}
{"_id": "e0ecad246e97e6810a87957bbcde38ac", "text": "Freeze target acocunt not allow received or transfer .", "title": "", "metadata": ""}
{"_id": "2f6e2b266a6c6825888e0cc96363c04f", "text": "if shop has staked enough dth to .", "title": "", "metadata": ""}
{"_id": "8f06cf9c7c8ce61e1b76fa43bfaf5d5f", "text": "Protected transfer tokens to this contract , which is shorthand for the owner ( Mint ) .", "title": "", "metadata": ""}
{"_id": "788cedbeec696a467a63f6d0513d2f46", "text": "in cases where funds are not payed in ETH to this contract , as owner , whitelist and give tokens to address .", "title": "", "metadata": ""}
{"_id": "bc642c61a56527fcdfa9dacd9f14a999", "text": "assigns a name to a cat , once a name is assigned it cannot be changed .", "title": "", "metadata": ""}
{"_id": "ac66ef52611ffe87f4572a7a6488fa5f", "text": "Modifier , which throws if called by other account than owner .", "title": "", "metadata": ""}
{"_id": "04cd06a17acbefcc1a2df84a583dff41", "text": "Locked Section .", "title": "", "metadata": ""}
{"_id": "ae8015bcd92bddb6f81e88376e56579f", "text": "primary purchasing function which allows for a masternode referral .", "title": "", "metadata": ""}
{"_id": "b2f4970cb1f88c01e5d9ef66a7b937ae", "text": "Separating the CFO and the CEO responsibilities requires the ability to set the CFO account .", "title": "", "metadata": ""}
{"_id": "8bb2e308482fe76110b635f5f3c5a21c", "text": "Under SoftCap Section .", "title": "", "metadata": ""}
{"_id": "cdc6afea52323d2e72de637d714c6a98", "text": "Sending Tokens to an address .", "title": "", "metadata": ""}
{"_id": "8831eb2b375317f2004e7b88d7bc83da", "text": "Redeem dividends .", "title": "", "metadata": ""}
{"_id": "3c44f47331575e3e06e596e3df78ae9a", "text": "All delegate ERC20 functions are forwarded to corresponding normal functions .", "title": "", "metadata": ""}
{"_id": "8ca7c7bf130cb1a5b9680c546d4a3817", "text": "approve _value coin from _from to _to address 1 .", "title": "", "metadata": ""}
{"_id": "981420e4c9a182570f5202fd1b4ea412", "text": "set individual stage1Crowd cap .", "title": "", "metadata": ""}
{"_id": "29d97b9bf6736a60cf854d86613d79e1", "text": "User-friendly alternative to sell ( ) function .", "title": "", "metadata": ""}
{"_id": "d5297f01832c73aad9587293be8f4905", "text": "Function to change 'needApprovesToConfirm' variable , can be call only by owner .", "title": "", "metadata": ""}
{"_id": "eee8ed53a50f7ec14f06056656c9e12a", "text": "Throws if called by any account other than the authority or owner .", "title": "", "metadata": ""}
{"_id": "824d5c10b27bdfefd48a8b76acf7e502", "text": "Allow splooger to cause a payload release from your GROWCHAIN , multiple times , up to the point at which no further release is possible . .", "title": "", "metadata": ""}
{"_id": "068a786aa5fce07aa8715bc2c3ae6499", "text": "Alter the Total Supply .", "title": "", "metadata": ""}
{"_id": "d92f9685ee4dd2882a8c095f8ac62fc2", "text": "Function for adding new trading proxy .", "title": "", "metadata": ""}
{"_id": "ce3caccb2ddeb02ab890ac0126165a60", "text": "Returns all the relevant information about a specific whale .", "title": "", "metadata": ""}
{"_id": "5061604134dc58bfcd53631ee28f5d9b", "text": "count - owners count .", "title": "", "metadata": ""}
{"_id": "f3e4bdb3bbc705a4530f8000082fdf9f", "text": "Check if resolver is locked .", "title": "", "metadata": ""}
{"_id": "5b0a6057ce56eaa4135f0965e514cd25", "text": "List Assets in a particular state .", "title": "", "metadata": ""}
{"_id": "36d4683a6bc6ad128aea3e2a8019246a", "text": "Test purchase : new Crowdsale ( ) ; 0 . purchase ( ) ( 10 ) ; .", "title": "", "metadata": ""}
{"_id": "97b254fce327b518aae8d71b50023f54", "text": "An abbreviated name for NFTs in this contract .", "title": "", "metadata": ""}
{"_id": "b297bb787cab232c8fe309723631f56a", "text": "Throws if contract not open .", "title": "", "metadata": ""}
{"_id": "cd6ad46da2ae4d9baefd9255a92fa1df", "text": "Compute the marketCut .", "title": "", "metadata": ""}
{"_id": "e67d9aad75a494d881e0da644693d8fb", "text": "Function to cancel a proposed oracle , called by the maker .", "title": "", "metadata": ""}
{"_id": "50be9455349136fd4fc2b3df7412c606", "text": "transfers the player's tokens directly to the new casino contract after an update .", "title": "", "metadata": ""}
{"_id": "cbb0632a701bd9f681c4bb80256b55a5", "text": "updates current date value .", "title": "", "metadata": ""}
{"_id": "8e30f77ca19ad2468b0e8742b172011a", "text": "Set url prefix .", "title": "", "metadata": ""}
{"_id": "b1d9cf0dcd547b17a5d9cd1e72e3454a", "text": "Start public sale .", "title": "", "metadata": ""}
{"_id": "e8f593bdccfb461847a98224c2b70f99", "text": "true if tokensale ended .", "title": "", "metadata": ""}
{"_id": "5f53842054680377d0a72d9cfdf03e5e", "text": "Override Crowdsale buyTokens .", "title": "", "metadata": ""}
{"_id": "11af65ff55df5f45f19c8877592dc5a1", "text": "modifiers only fund manager can execute that .", "title": "", "metadata": ""}
{"_id": "9f1954da433870bcb737f291801f56c4", "text": "Mints the tokens for the facilitating parties .", "title": "", "metadata": ""}
{"_id": "fefa728a15245ec6431570bb1eed6166", "text": "allows execution by the owner only .", "title": "", "metadata": ""}
{"_id": "5c7ea0690bb2449eb2124ef933782858", "text": "onlyArbitrator Reassigns the arbitrator to a new address .", "title": "", "metadata": ""}
{"_id": "28cf107b3a477a3949eb0f59d693df33", "text": "Only allow the execution of the function before the crowdsale starts .", "title": "", "metadata": ""}
{"_id": "3687e1619f3e5ebe0239c819f38b240e", "text": "To transfer tokens .", "title": "", "metadata": ""}
{"_id": "e52e268cbca6e964d48b8e704b151562", "text": "revert ( ) s if called by any account other than the owner .", "title": "", "metadata": ""}
{"_id": "fe83175cd194099e8bfe8b4b144eba2c", "text": "Compute the RLC bonus according to the investment period .", "title": "", "metadata": ""}
{"_id": "7ef4f6bc12afd55df3beb269ffc16f67", "text": "Returns the nth Fighter assigned to an address , with n specified by the _index argument .", "title": "", "metadata": ""}
{"_id": "b5613510de88b077dd3044d8cf6df451", "text": "Finalise purchase for address provided : transfers the tokens purchased by given participant to their address .", "title": "", "metadata": ""}
{"_id": "301bdaa23b1c778429cf100b84251f80", "text": "Modifier , which only allows function execution if not paused .", "title": "", "metadata": ""}
{"_id": "eb96c85d2d45fdd525b0e14cdad943be", "text": "to dend the tokens the sender need the allowance .", "title": "", "metadata": ""}
{"_id": "a6d41afa97d025f7ec55b35af9fbe320", "text": "Allows the owner to pause the ICO contract .", "title": "", "metadata": ""}
{"_id": "8010efb3bdc47758c3e968d76ebcba3f", "text": "Modifier to check whether destination of sender aren't forbidden from using the token .", "title": "", "metadata": ""}
{"_id": "9da6700ef256b082cf6ee807d91ea4d6", "text": "Compute the amount of HPB token that can be purchased .", "title": "", "metadata": ""}
{"_id": "733e8ddbaf09359304ef1cfb589c63ba", "text": "Integer division of two numbers , truncating the quotient .", "title": "", "metadata": ""}
{"_id": "cb677d2140333b5a11831e6e535e93dc", "text": "Initializes the contract only once .", "title": "", "metadata": ""}
{"_id": "897160e6e0ae372de32acebc26b4d189", "text": "'owner' can set number of tokens per Ether in funding .", "title": "", "metadata": ""}
{"_id": "ed7979d7fcbb95aa714c3054b4e351b2", "text": "Makes the contract type verifiable .", "title": "", "metadata": ""}
{"_id": "7e08c9862ceea922dce7134cd671460e", "text": "1 . 5 will be rounded toward zero .", "title": "", "metadata": ""}
{"_id": "061c5f35a669cc5bae8764820c0bee9b", "text": "get list of active bet tokens .", "title": "", "metadata": ""}
{"_id": "82f68da9de1d9b78a2a90c769a60e70d", "text": "Helper function , determines if a given address is an account or a contract .", "title": "", "metadata": ""}
{"_id": "89e2fc7f5608b6a35913c373cf9f59ab", "text": "sales manager .", "title": "", "metadata": ""}
{"_id": "040b5a96df144f9f3ace003af4bcdb18", "text": "Change the wallet .", "title": "", "metadata": ""}
{"_id": "709f273b233e332ca2dd8ca09a4c1608", "text": "Allow pre-approved user to take ownership of a token .", "title": "", "metadata": ""}
{"_id": "9927839c6b9168987b618450d3b08adf", "text": "Returns all the relevant information about a specific athlete .", "title": "", "metadata": ""}
{"_id": "d96a2761ff13b9518229e65781348c28", "text": "Add a new token grant for user _recipient .", "title": "", "metadata": ""}
{"_id": "e938f65a959cceb282c4c2390284003e", "text": "Put asset on sale .", "title": "", "metadata": ""}
{"_id": "d1c1fedf2d404668ccfae25dbb54dfb7", "text": "these functions aren't abstract since the compiler emits automatically generated getter functions as external .", "title": "", "metadata": ""}
{"_id": "985e9edb138140441ba16aae5295bd56", "text": "lock token in specified address for some time _address : locked address _value : locked token _time : when it could be unlocked .", "title": "", "metadata": ""}
{"_id": "6b414630d9de34f4f5d099ae390a79f0", "text": "true if the crowdsale has raised enough money to be a successful .", "title": "", "metadata": ""}
{"_id": "0aa79ef949c959692138c45bb049112c", "text": "Set offer with special price .", "title": "", "metadata": ""}
{"_id": "85e10a49aa02bddaefd151b984ce406c", "text": "returns the first character as a byte in a given string address .", "title": "", "metadata": ""}
{"_id": "266072b5a10475ae4aa570303dc75834", "text": "Sets the address of the PentacoreCrowdsale contract .", "title": "", "metadata": ""}
{"_id": "f038de3761a2571155ed5e6b11c42e3e", "text": "calculate amount for charger .", "title": "", "metadata": ""}
{"_id": "0c04995fb00cdb0b3863a8d304f22d93", "text": "Updates registration status of an address for sale participation .", "title": "", "metadata": ""}
{"_id": "abb2a77797de563e99e5b2a4358e7301", "text": "Get the latest parameters .", "title": "", "metadata": ""}
{"_id": "8792b36854504314440001af130504ed", "text": "Allows to withdraw user's bonuses that he deserves due to Treasury shares for every distribution period .", "title": "", "metadata": ""}
{"_id": "fa21400b6f2fe04db084b2575aadaac2", "text": "Transfers the total stakes to the casino contract to be used as bankroll .", "title": "", "metadata": ""}
{"_id": "77b2eead9fc1f9c511c4f8421bb05643", "text": "Function is called at the end of an ICO .", "title": "", "metadata": ""}
{"_id": "328dbc09b161960aad5fce0586add546", "text": "Called when an address wants to submit a bid to the sale .", "title": "", "metadata": ""}
{"_id": "df601815848c369cf40b88b4b2dca66a", "text": "Returns an URI for a given token ID .", "title": "", "metadata": ""}
{"_id": "e6df9bc2c33a1819254611a4303b44e0", "text": "Withdraw tokens only after Investors added into whitelist .", "title": "", "metadata": ""}
{"_id": "d74ab826ae2b99cadf1f2f10957daee2", "text": "For creating Stamp .", "title": "", "metadata": ""}
{"_id": "166d855b9547b486a79bcab8ee8ac6e9", "text": "internal helper to add currency data to the issuance map .", "title": "", "metadata": ""}
{"_id": "19f71e9b44a78ee95ab3f83910e726fb", "text": "Make transferFrom pausable .", "title": "", "metadata": ""}
{"_id": "628eba92afe12a0ad8aac907d2572132", "text": "Allow hosts to reveal their secret random number during the lottery's reveal phase .", "title": "", "metadata": ""}
{"_id": "f6a7f1ff7606f1bf45cdaec1fae6a10e", "text": "A public method that edit asset in case of any mistake is done during process of creation by the developer .", "title": "", "metadata": ""}
{"_id": "baf66dfa19fcbf412e65d08531cad8af", "text": "Tenderly remove hand from Penis and place on another Penis .", "title": "", "metadata": ""}
{"_id": "848d8b5c7a0410b891bfaf35daf4fbc7", "text": "to prolongate a deal for some days .", "title": "", "metadata": ""}
{"_id": "c49c2981a8caa15c2e0599165ace526e", "text": "Returns all the relevant information about a specific kitty .", "title": "", "metadata": ""}
{"_id": "4dcf5f11acc10a6852b0aeb2ce84c4b0", "text": "This is public so it can be called by getPartsOfOwner .", "title": "", "metadata": ""}
{"_id": "3f50425e851986284ead261d93c42597", "text": "Random enough for small contests ( Owner only to prevent trial error execution ) .", "title": "", "metadata": ""}
{"_id": "015e0103cf03b0148c9d9569f4eafd6f", "text": "user must perform the following opertions before calling this function approveAndCall ( ) to activate the policy account in this policy contract this function works as a policy registering and deposit handler .", "title": "", "metadata": ""}
{"_id": "dfc5cbdfd3b36e1731a674a3911bfb77", "text": "Checks if a given address rents a particular plot .", "title": "", "metadata": ""}
{"_id": "78493455311aaa549ba558ef3b530dc1", "text": "enables withdrawals , only callable by the owner when the withdrawals are disabled .", "title": "", "metadata": ""}
{"_id": "0f1abd317d0a172d15d349223a13ce12", "text": "Sum up the individual scores throughout the tournament and produce a final result .", "title": "", "metadata": ""}
{"_id": "1accbf44e7db8f0e3c134bc33c7984c7", "text": "Retrieves individual investor token balance .", "title": "", "metadata": ""}
{"_id": "b457a51045a542a03c1b5d3d5d69ca97", "text": "User can withdraw their share of donations from the previous month .", "title": "", "metadata": ""}
{"_id": "131392090f75ceb12849cf0c3c3e7c20", "text": "The owner of this contract can change the controller of the FCC token .", "title": "", "metadata": ""}
{"_id": "0d25662bba53fe0db170bc68d698c652", "text": "Function to add an address to the controllers .", "title": "", "metadata": ""}
{"_id": "23a5cbeed4fa5b333f71941b531b3ccd", "text": "Allows the owner to unauthorise an address from approving or requesting the transfer of ETH and ERC20 tokens .", "title": "", "metadata": ""}
{"_id": "294220731f754741b81f785d9773526b", "text": "Checks if the takeOrder price is within maximum allowed deviation from reference price .", "title": "", "metadata": ""}
{"_id": "e5abcdd5dedfb90251a19bdae7a952b8", "text": "Check if the channel is open : present and not settling .", "title": "", "metadata": ""}
{"_id": "54844f2a2db9c72d5bc9764e8494df61", "text": "Token creation .", "title": "", "metadata": ""}
{"_id": "47bbaaf67fde244eb1a2987a3f142881", "text": "Converts ETH ( wei ) to USD cents .", "title": "", "metadata": ""}
{"_id": "6f237f0e8193879c91aee021be314ab8", "text": "Allow users to buy tokens for 'newBuyPrice' , in wei .", "title": "", "metadata": ""}
{"_id": "862765e1cce517452378f97367a1dcdb", "text": "retrieve bonus from specified stage .", "title": "", "metadata": ""}
{"_id": "5039b7e2205b8f005341c84bbfa93a4c", "text": "This function will return all of the details of our company .", "title": "", "metadata": ""}
{"_id": "a93e21214185b9709f04e1b209a82690", "text": "activate the contract .", "title": "", "metadata": ""}
{"_id": "ce89e8be8ae11673a60a7a0916878bb2", "text": "to query balance of account .", "title": "", "metadata": ""}
{"_id": "ae13257904a7f0002e140667a960e127", "text": "Overrides ERC20 Interface to allow transfer from / to allowed addresses .", "title": "", "metadata": ""}
{"_id": "3bf36b3eb71ccea6f073b68ce35c37f1", "text": "Withdraw development fund .", "title": "", "metadata": ""}
{"_id": "f567854d953598528057afde822174a5", "text": "Depository can release assets ( decreasing ) , but never to less than the totalSupply .", "title": "", "metadata": ""}
{"_id": "8df54a4fa0f7043669a9c0c025e91bda", "text": "Change authorization for _address .", "title": "", "metadata": ""}
{"_id": "a1093fe56fbdd3f84c0b75fabd09042a", "text": "Called to mint the reserved tokens .", "title": "", "metadata": ""}
{"_id": "0d5729b1410ae7601b818bd943ca88b0", "text": "Withdraw investment .", "title": "", "metadata": ""}
{"_id": "dd6541836554aab2bd1a87f6c4208519", "text": "finish function to finish crowdsale for contribution .", "title": "", "metadata": ""}
{"_id": "7d42e82771e928ec6cd4e0e095a5817d", "text": "check is now ICO .", "title": "", "metadata": ""}
{"_id": "d6994d366b39a9a8931acf5e01c71a6a", "text": "Checks and initiates payout , i . e .", "title": "", "metadata": ""}
{"_id": "89e15fe053fdc99cc278bf7e1a0ad990", "text": "High level token issue function .", "title": "", "metadata": ""}
{"_id": "d6fccb922a7128e9c103f3a2762ac1db", "text": "to populate website with status of the sale and minimize amout of calls for each variable .", "title": "", "metadata": ""}
{"_id": "29ec7f67e42d796c41c264c24020d2d2", "text": "function icoTokens - Calculate Tokens in ICO .", "title": "", "metadata": ""}
{"_id": "058a46acdcf7e5f4a58edfe5d7a1164b", "text": "Set the illegal fund wallet .", "title": "", "metadata": ""}
{"_id": "11259d85503c855025063762c98c4fb8", "text": "Allows owner to stop / pause crowdsale .", "title": "", "metadata": ""}
{"_id": "4cfc7360814b41372f23c156a4a0b807", "text": "ERC165 Specific .", "title": "", "metadata": ""}
{"_id": "d011d754b7627a796fc776ed6cc04d92", "text": "Create a reusable template , which should be a JSON document .", "title": "", "metadata": ""}
{"_id": "b403ded5d6f104067e57b86d257893ff", "text": "Creates more tokens and sends them to the owner's account .", "title": "", "metadata": ""}
{"_id": "18af115691e3f17d6b704cc263efcfed", "text": "A getter that returns the details of the specified pledge .", "title": "", "metadata": ""}
{"_id": "edc3902b78b3d42550ededd320b7e11e", "text": "Get flag indicates ICO reached hardcap .", "title": "", "metadata": ""}
{"_id": "75d1eceaf4e5e5dd07f06300dafb0146", "text": "Setup the state machine with the given states .", "title": "", "metadata": ""}
{"_id": "e3dc0d59c6b230528a3137ff2a8cd07a", "text": "Check whether sale end is scheduled .", "title": "", "metadata": ""}
{"_id": "1ba09616dfb304350c5cba4047e2db49", "text": "the type , value and owner of the character .", "title": "", "metadata": ""}
{"_id": "3f78dbc1390dbf94c2592c912d0e1509", "text": "Modifier - used to check actions allowed only for contract owner .", "title": "", "metadata": ""}
{"_id": "7d5e5b154ef65f8bd3f3d11d75f9525b", "text": "Finalize sales and sets bounty yearly paid value .", "title": "", "metadata": ""}
{"_id": "4df245b82238c6d99a02cb4d4f66f7ac", "text": "Allows to set the total alt deposit measured in ETH to make sure the hardcap includes other deposits .", "title": "", "metadata": ""}
{"_id": "ab06475a01e3e1300b8d0f410f988308", "text": "the total supply of this coin .", "title": "", "metadata": ""}
{"_id": "5dd1f3b27d8b4095b8892ccf1e21acda", "text": "Transfers ether to the sale wallet .", "title": "", "metadata": ""}
{"_id": "a0d3d94e7b8c9c336e3a117faae23931", "text": "batchTransfer token for a specified addresses .", "title": "", "metadata": ""}
{"_id": "618fe99a8e1d7d419b71c92b1d14671f", "text": "public function that allows a token holder to manually trigger the latest lottery this saves on gas and potential failures during the purchase of tokens .", "title": "", "metadata": ""}
{"_id": "12f6bcec4bf49d0a98c248572d4a8ba8", "text": "Updates the period duration .", "title": "", "metadata": ""}
{"_id": "025b06f8397ef31d5bd37e0200886628", "text": "Allows the current owner to transfer token control back to contract owner .", "title": "", "metadata": ""}
{"_id": "eebd55c246c552a75d87ed1b06a9d4eb", "text": "setting 1 USD equals X amount of wei .", "title": "", "metadata": ""}
{"_id": "db5cd9158957100ba8f06e8a466069d7", "text": "Change players's name .", "title": "", "metadata": ""}
{"_id": "ca9f8c720bafbf38f3273bd5bdbf084f", "text": "I adapted this from Fast Division of Large Integers by Karl Hasselstr\u00f6m .", "title": "", "metadata": ""}
{"_id": "838cbfb58a87adb8483f595e172e996e", "text": "The the total number of locks .", "title": "", "metadata": ""}
{"_id": "f23e102a7ebf5bc4fd9c475a3f9a3782", "text": "Get the presaleBalance ( ETH ) for an address .", "title": "", "metadata": ""}
{"_id": "e6d3b840a481e01933e714480991f330", "text": "Check if the internal administration is correct .", "title": "", "metadata": ""}
{"_id": "470bebc20dcaa47b4ed98a5b49ad6a3d", "text": "the amount allocated for beneficiary at _index .", "title": "", "metadata": ""}
{"_id": "51154588c1abc52acbe12d877924b8ec", "text": "Coin Age Function .", "title": "", "metadata": ""}
{"_id": "b804b5d83bf7a0a4e62c2917d3611168", "text": "for multiple withdraws .", "title": "", "metadata": ""}
{"_id": "8c5d2b13aad0884e77376e51dca2a16c", "text": "used by subscription module to re-create token from returning deposit .", "title": "", "metadata": ""}
{"_id": "84daf4d40c66258b061cd543e270f934", "text": "Recover signer address from a message by using his signature .", "title": "", "metadata": ""}
{"_id": "b3927849d1e64795305e5eefe94a41d2", "text": "Complete pre-allocations to team , promotions and reserve pool .", "title": "", "metadata": ""}
{"_id": "222eff371ae960d9cd36a477c8f86a23", "text": "withdraws an audit request .", "title": "", "metadata": ""}
{"_id": "08f4cf8e07f2544da342b24d246d14be", "text": "Allocate tokens to a crowdsale or early purchaser from the crowdsale share .", "title": "", "metadata": ""}
{"_id": "761e7a6217d7316f62f8803116970212", "text": "Mint _mintedAmount tokens to _target address .", "title": "", "metadata": ""}
{"_id": "5ff0aa6d1bc0613cb3c2db9615ef53d6", "text": "Toggle crowdsale status .", "title": "", "metadata": ""}
{"_id": "9e4b4ff70d529628ea92ecd672edce79", "text": "calculate second reserve from the first reserve and the supllies .", "title": "", "metadata": ""}
{"_id": "1d46fba1dd59a6b24b634b2db10df09c", "text": "Returns max number of tokens that actually can be withdrawn from foundation reserve .", "title": "", "metadata": ""}
{"_id": "c68e063b79f35b39bb61d5de9fdfc8fa", "text": "in case of any errors in race , enable full refund for the Bettors to claim .", "title": "", "metadata": ""}
{"_id": "1bc977ba068bb623af00ef6d645aefc1", "text": "Assert an order is valid and return its hash .", "title": "", "metadata": ""}
{"_id": "702c32ce871e0a76767d92e99bc16f61", "text": "Admin fns .", "title": "", "metadata": ""}
{"_id": "0bb5367c2df340ef1f549d12c6624189", "text": "modifier function that checks if only ambassadors can currently contribute .", "title": "", "metadata": ""}
{"_id": "be639d15283b2703a20b2162caf0a483", "text": "Balance of a specific account .", "title": "", "metadata": ""}
{"_id": "918ccb5fc5e36a7b742340beb4bdb0e5", "text": "Access modifier for CFO-only functionality .", "title": "", "metadata": ""}
{"_id": "deaf4279914fcd7689a9da3a320f1fd5", "text": "Transfers are restricted to the crowdsale and owner only until the crowdsale is over .", "title": "", "metadata": ""}
{"_id": "4f51bd1d5adac0e181c8cda2f002f7df", "text": "Ask each wallet to verify this order .", "title": "", "metadata": ""}
{"_id": "738814a8e6b4782b9ec265b41261f310", "text": "Helper function for CalculateEggsSinceLastHatch .", "title": "", "metadata": ""}
{"_id": "3f918729ac8d8b09326530b21e9a8376", "text": "A function to buy tokens accesible by any address .", "title": "", "metadata": ""}
{"_id": "a5eefa8776e610b89357b3e076c4f52a", "text": "Play in lottery .", "title": "", "metadata": ""}
{"_id": "a517e9d986ffacd0962b96e7800086d6", "text": "Judge Fake Token .", "title": "", "metadata": ""}
{"_id": "0aa94f8fdd3e93f2a3cb59f29fdb7122", "text": "constant functions do not mutate state .", "title": "", "metadata": ""}
{"_id": "c7fc2171df39362429b88122ed9f9f18", "text": "Get lucky record size .", "title": "", "metadata": ""}
{"_id": "23725ea5d8cdfc860987c9897638790c", "text": "Function to restart stopped sale .", "title": "", "metadata": ""}
{"_id": "38e454e7b6eb3027edadbb80ca040cdd", "text": "Transfer the specified amount to the target address with embedded bytes data ERC-223 Proposed Standard .", "title": "", "metadata": ""}
{"_id": "dd49aa274afb70c7c36c807fd5a23a6d", "text": "if sheduler never call finalized ? no incetive to do that .", "title": "", "metadata": ""}
{"_id": "766701633be17f295c79482dc9add52b", "text": "ensures that the sender is bitcoin suisse .", "title": "", "metadata": ""}
{"_id": "e9e38499f86b92fe8ffe02da9496218b", "text": "Drain function , in case of failure .", "title": "", "metadata": ""}
{"_id": "c0b740b7ce6df4159d68c85434777af6", "text": "For creating Room .", "title": "", "metadata": ""}
{"_id": "c44f7cc81a4d10b54bece465114bfeaa", "text": "Update phase end times .", "title": "", "metadata": ""}
{"_id": "bd4384e349c0c2f08d662f8c45ca2597", "text": "Calculates the optimal per-wallet balance target .", "title": "", "metadata": ""}
{"_id": "9ff823ab29f605ccfd4c2e8979e967e4", "text": "transfer deposits funds to recipients .", "title": "", "metadata": ""}
{"_id": "55887da1ef369bd80a14eadeef97784b", "text": "Converts unclaimed fees of the manager into fund shares .", "title": "", "metadata": ""}
{"_id": "a05e32d045da068b1284d15e552868e2", "text": "Allows the owner to set the crowdsaleAddress .", "title": "", "metadata": ""}
{"_id": "a92aefeabe902c7b70e7e4a5b0c7a135", "text": "Get how many tokens can buy from this SELL order .", "title": "", "metadata": ""}
{"_id": "affb9a7e52fc58d89c49983e5d2c0612", "text": "Set new authenticated address for registrations .", "title": "", "metadata": ""}
{"_id": "e542868c4f7a25c34a901f1f0775bbcd", "text": "Moves capital to profits .", "title": "", "metadata": ""}
{"_id": "7df44003f9bf9d0b1342a120d9985004", "text": "staking function which allows users to split the interest earned with another address .", "title": "", "metadata": ""}
{"_id": "bcf997b0142023c0149545cd7556df80", "text": "Get game info .", "title": "", "metadata": ""}
{"_id": "69918472d491392ac146eb331122cf9a", "text": "Whether or not approval was successful .", "title": "", "metadata": ""}
{"_id": "bfb3bf10c87e95bc6651e29231c3c80d", "text": "Issuer can reclaim remaining unclaimed dividend amounts , for expired dividends .", "title": "", "metadata": ""}
{"_id": "5e03a7d557957995fb41496468bc215e", "text": "We restrict transferFrom by overriding it .", "title": "", "metadata": ""}
{"_id": "a80ee32e88d343c42e1e5a8a721d1d31", "text": "Batch resolve fishing attempts .", "title": "", "metadata": ""}
{"_id": "2f8a23ff3aa10a9b5e7d8122068d83b9", "text": "Change the AccountLevels contract address .", "title": "", "metadata": ""}
{"_id": "a526e0d79e7e02231f07a671f7d95c21", "text": "Function to check the amount of tokens that an owner allowance to a spender .", "title": "", "metadata": ""}
{"_id": "0c8b75c591b56a3c228b7062d3a7892e", "text": "Allows anyone to transfer the Simis tokens once trading has started .", "title": "", "metadata": ""}
{"_id": "e50c796ff09499bb12cd117e57bd14c3", "text": "called by the owner to transfer 'weiAmount' wei to 'beneficiary' .", "title": "", "metadata": ""}
{"_id": "d2ce607033e28271c29c2b3e73bd7f67", "text": "Anyone can start the regular phase 2 weeks after the ICO phase starts .", "title": "", "metadata": ""}
{"_id": "6e0a66fd5741b654d19777edce1b534f", "text": "Reusable code to do sanity check of transfer variables .", "title": "", "metadata": ""}
{"_id": "e772bff0be65a2ef3c6b3eb364720d5a", "text": "Gets of people that have already withdrawn their airdrop tokens .", "title": "", "metadata": ""}
{"_id": "a93140a271b2a0390fd266627111a734", "text": "Allows the pendingOwner address to finalize the transfer .", "title": "", "metadata": ""}
{"_id": "3c4fdc9ee3f6b81a52c0801dcf97c742", "text": "Adds an approved address for the sale .", "title": "", "metadata": ""}
{"_id": "56c824fa62cbe93f8b599f37ba997691", "text": "Checks if the given state is in solved state .", "title": "", "metadata": ""}
{"_id": "566543aeadf1fe1c60b48cff5ab63801", "text": "Function to stop current round .", "title": "", "metadata": ""}
{"_id": "c8a68cfc6c3f2058358a565c97538bdd", "text": "Returns the address currently assigned ownership of a given token .", "title": "", "metadata": ""}
{"_id": "afb4cf2aaca180edb8e6a89508ca1977", "text": "the number of tokens controlled by owner .", "title": "", "metadata": ""}
{"_id": "a8d56ab8ce72a93b22b3760d391f1672", "text": "onlySecurityGuard can checkin .", "title": "", "metadata": ""}
{"_id": "e6d981b86617e5b025266931267370db", "text": "manually triggers the steal .", "title": "", "metadata": ""}
{"_id": "ba12144e6cd3188974d86dd00a865291", "text": "function to alott tokens by the owner .", "title": "", "metadata": ""}
{"_id": "affb6efd0e47a079bbfd6a0c248f43b5", "text": "Returns token's symbol .", "title": "", "metadata": ""}
{"_id": "9b793c0f920cef0492344b5d1c2d57a9", "text": "Get the address of the active contract for the given identifier .", "title": "", "metadata": ""}
{"_id": "f1592920dc2efb30884047a8c370be6b", "text": "Safety to withdraw ETH .", "title": "", "metadata": ""}
{"_id": "34dad64f16b0cb5851d806244ba1669d", "text": "Retrieve the tokens owned by the caller .", "title": "", "metadata": ""}
{"_id": "c5eeaa3d889a23137fa4316a5bb26683", "text": "Same as doubleBonus - just for array of addresses .", "title": "", "metadata": ""}
{"_id": "8f3f500213c8c141ca91e46484a961ab", "text": "Freeze contract .", "title": "", "metadata": ""}
{"_id": "e24ba9d39fbcad4e8957410ec5d39ba9", "text": "SafeMath substract function .", "title": "", "metadata": ""}
{"_id": "8b628d6e8a1a0c6be5278de4fef71ecf", "text": "If you call directly this function your are buying for someone else .", "title": "", "metadata": ""}
{"_id": "099278bee6d68df42e63a2a43f55df7d", "text": "simple transfer .", "title": "", "metadata": ""}
{"_id": "6abf3c9ca35a6039d6cb99b03bc569ff", "text": "The function currentSwapRate ( ) returns the current exchange rate between FYN tokens and Ether during the token swap period .", "title": "", "metadata": ""}
{"_id": "568d9d51a14a6e0b5dccdbd18ab05c85", "text": "Owner can freeze the token balance for chosen token holder .", "title": "", "metadata": ""}
{"_id": "45aeb936a2673ab38c877c11367004c0", "text": "member function .", "title": "", "metadata": ""}
{"_id": "5f824722d9cfbc24a61b815ef1c93533", "text": "Change the wallet that funds are stored in .", "title": "", "metadata": ""}
{"_id": "2e7751c04e044b6cc982825ecc821a90", "text": "Allows the owner to revoke the vesting .", "title": "", "metadata": ""}
{"_id": "4fca850edc44a1ce1c555ba4efcfc4bf", "text": "Increase the allowance for _spender by _addedValue ( to be use when allowed _spender 0 ) .", "title": "", "metadata": ""}
{"_id": "0b51e70109589cafa97f39537126e0be", "text": "Get a particular schedule entry for an account .", "title": "", "metadata": ""}
{"_id": "894fd1a1fbd4ac50e375a16d05f7e6ee", "text": "The owner of the challenge can terminate it .", "title": "", "metadata": ""}
{"_id": "6e2817c265393be96c6116ae6cbf9a65", "text": "Use it to transfer TAI to another address ____________________________________________________________________________________ .", "title": "", "metadata": ""}
{"_id": "cda5c98f336be589f241647f6c2bfbb8", "text": "Hashes an Option's parameters for use in looking up information about the Option .", "title": "", "metadata": ""}
{"_id": "a150ebb51b2532e099178c931f5a1c55", "text": "Sets a block up for sale .", "title": "", "metadata": ""}
{"_id": "693635494042a263c5077adadf35e4f8", "text": "method to claim unclaimed winnings after 30 day notice period .", "title": "", "metadata": ""}
{"_id": "0273c357cbdb50388645ea956faa48c2", "text": "true if grantTeamToken function has ended .", "title": "", "metadata": ""}
{"_id": "ac23333d7109988266f29cfaf1ff5aa6", "text": "Assigns ownership of Creator token to an address .", "title": "", "metadata": ""}
{"_id": "faaaee00dbdd190d34743a429a10a748", "text": "Edit emoji information to maintain confirming for Unicode standard , we can't change the price or the owner .", "title": "", "metadata": ""}
{"_id": "247b5654a9986cd8549b364be83482a6", "text": "Change pre-sale end date .", "title": "", "metadata": ""}
{"_id": "031f79f008b4b71ffaf3eda6a6222d41", "text": "modifier to allow actions only when the contract IS paused .", "title": "", "metadata": ""}
{"_id": "8a25933e7c056b12cb24dc09a2c7a2eb", "text": "Transfer without additional data .", "title": "", "metadata": ""}
{"_id": "6f052f97fb2aa2e5d5a6957a210f9a5a", "text": "checks if the address invested .", "title": "", "metadata": ""}
{"_id": "a5090aa8d5b715cc0facc83ac66354e7", "text": "Burn token .", "title": "", "metadata": ""}
{"_id": "c0d5ad8b1b24ab1f9258d49ad58020d7", "text": "Gets the ratio of the specified address .", "title": "", "metadata": ""}
{"_id": "4b27dc6c5572f5973b7d234e579961f7", "text": "ERC20 approve ( ) .", "title": "", "metadata": ""}
{"_id": "f084ba3db9bf9572d087a4fd3d736dc1", "text": "perform a transfer of 1 VOS . AI .", "title": "", "metadata": ""}
{"_id": "75dcd24a79cfec42aea965de3dd9362d", "text": "Create Tokens and send it to specific address .", "title": "", "metadata": ""}
{"_id": "f4f3ceedd0ce3975e5cb2d2b12ada0f6", "text": "BOOSTER handlers .", "title": "", "metadata": ""}
{"_id": "0b70394c39215cc45b6c2e48f0022d3c", "text": "user unlock his / her own token .", "title": "", "metadata": ""}
{"_id": "0a371d972773c12ef505a3f89eca81f1", "text": "BK Ok - Propose ownership transfer .", "title": "", "metadata": ""}
{"_id": "4b1fe681f732e0eb57246fb232bb134c", "text": "whether proposed owns all of the cards .", "title": "", "metadata": ""}
{"_id": "f611059eed3dcc5096c370d8ad9ae779", "text": "Returns maximum withdraw amount .", "title": "", "metadata": ""}
{"_id": "28ff5428a8cb2464b615d3f628439d3c", "text": "Allocate tokens to a marketing supporter from the marketing campaign share .", "title": "", "metadata": ""}
{"_id": "b8e54eec5210609c20e866cba4d0d2a9", "text": "Updates the gameCardID properrty of the asset .", "title": "", "metadata": ""}
{"_id": "4e1636bfbda8e8150b725c0b1eeacc37", "text": "Purchase a share from its current owner .", "title": "", "metadata": ""}
{"_id": "b6da64727d499afe233c002ad66531aa", "text": "Failure handler .", "title": "", "metadata": ""}
{"_id": "f23e5bcf14027b194f64ed33111058d4", "text": "Function to add members to the contract .", "title": "", "metadata": ""}
{"_id": "e1636963a63f0b50a0c77cc158385302", "text": "Initialize Auctions parameters .", "title": "", "metadata": ""}
{"_id": "b9179fdf95c7228b4c926eb91e88b30b", "text": "Get the first available room for certain nights .", "title": "", "metadata": ""}
{"_id": "239850fa83b83fe752dc423e60cb0f7a", "text": "Request tokens from the target crowdsale by calling it's withdraw token function .", "title": "", "metadata": ""}
{"_id": "5584cf3eeb17a1a8baec8b9967888dce", "text": "function to send tokens to a given address .", "title": "", "metadata": ""}
{"_id": "a1187381718d6b828f2885bc194673a4", "text": "Check if goal reached .", "title": "", "metadata": ""}
{"_id": "ea30e2332097c8796b6864a792925641", "text": "transfer token for a specified address with external data .", "title": "", "metadata": ""}
{"_id": "accd94635d7fb153782fc03a9201fabd", "text": "address of multisignature wallet .", "title": "", "metadata": ""}
{"_id": "c87edb3734d065f1d28543408ae5a37c", "text": "Every quarter release , 25 of token to the founders .", "title": "", "metadata": ""}
{"_id": "0e3dca1697bf4311357088c0d60c4d91", "text": "Keeping this open for anyone to update anyone else so that at the end of the tournament we can force a score update for everyone using a script .", "title": "", "metadata": ""}
{"_id": "a6b133bd3b4a6a110fe0254b23be8d63", "text": "Destroy tokens amount from another account ( Caution ! ! ! the operation is destructive and you can not go back ) .", "title": "", "metadata": ""}
{"_id": "72bfbff2d0fb2739bc75fcdc4a448493", "text": "Owner can allow a particular address ( e . g .", "title": "", "metadata": ""}
{"_id": "bfdde699ff047a401ca15b02585157cd", "text": "Check if address was already airdropped .", "title": "", "metadata": ""}
{"_id": "ddc972187b615824a2df3cb2f7b6773d", "text": "Keep track of whitelisted participants contributions .", "title": "", "metadata": ""}
{"_id": "49122a8e6e33e323aab44037eaf5e2de", "text": "Adding bonus tokens for bounty , team and owner needs .", "title": "", "metadata": ""}
{"_id": "1eee4f0705b532bfc3588f924e81f948", "text": "Attaches the collectible to our contract .", "title": "", "metadata": ""}
{"_id": "2441e3ea64d4b287ace139d0382650a3", "text": "Receives rate from outside oracle .", "title": "", "metadata": ""}
{"_id": "880239d36a457c1011f65b1acd26702b", "text": "remove metadata for token .", "title": "", "metadata": ""}
{"_id": "ec04e22bf5fdf2fdaef44cecada1b6a6", "text": "View function that shows investor of freezing for future airdrop .", "title": "", "metadata": ""}
{"_id": "14aaff8258f3e52d330e2ba2a544762b", "text": "unfreeze account of target .", "title": "", "metadata": ""}
{"_id": "445f53b10fdc90d336df4132bc761f93", "text": "This function is called by the owner to remove an address from the whitelist .", "title": "", "metadata": ""}
{"_id": "22b8d5d5e886b04ba89546ffc30ed711", "text": "For the trustee to issue an offer of new tokens to a holder .", "title": "", "metadata": ""}
{"_id": "89825837dba59166a0bbe35ca00b35df", "text": "Check that sale is on .", "title": "", "metadata": ""}
{"_id": "4b399678c038220fd1b35250c08fc79f", "text": "participants of the Ethereum Network can buy or sell this token in / / / exchange to Ether .", "title": "", "metadata": ""}
{"_id": "a52c1c71160fa7b6b1ff15d5ec7e555b", "text": "allow an account to participate in the crowdsale .", "title": "", "metadata": ""}
{"_id": "8071d5148000cff8a7a79e5567e83995", "text": "owner / treasury address only functions .", "title": "", "metadata": ""}
{"_id": "483e9dace5bc5fead575d644635c4f28", "text": "Returns the number of locked tokens at the specified address .", "title": "", "metadata": ""}
{"_id": "d7713de23d8956ff86085494fa2156c3", "text": "Set the cooldownEndTime for the given Pony , based on its current cooldownIndex .", "title": "", "metadata": ""}
{"_id": "598b80f3c8a80a70a2905c5f26aba7be", "text": "Internal function to add a checklist item to the Iconics set .", "title": "", "metadata": ""}
{"_id": "504c290f17f9446ea157e404d5199017", "text": "This function changes every level cap at once , with an optional delay .", "title": "", "metadata": ""}
{"_id": "60e407d0cf2b1667ec19c45a8cee2893", "text": "Gets attributes of NFT .", "title": "", "metadata": ""}
{"_id": "8e396400eeb57f0bdde067e2ce2166e9", "text": "Seller will send WaraCoin to buyer .", "title": "", "metadata": ""}
{"_id": "061929938826bc368e1e802734415d89", "text": "Reverts if swap must be enforced and _to is not the swap address .", "title": "", "metadata": ""}
{"_id": "871bc1da1ed065d1cb02c2943e1052ee", "text": "Store sent amount as credit to be pulled , called by payer .", "title": "", "metadata": ""}
{"_id": "70238d29fb61968a86d0c45f41c3fa5b", "text": "Destructs the contract and sends remaining this . balance .", "title": "", "metadata": ""}
{"_id": "345d51d4a88e58f5dcaf9da8fcbda678", "text": "Validates that a hash was signed by a specified signer .", "title": "", "metadata": ""}
{"_id": "d8db1a2ec5e8b033348b7974b372a21b", "text": "Finalize crowdsale buy burning the remaining tokens can only be called when the ICO is over .", "title": "", "metadata": ""}
{"_id": "6f299e67be09589ee055130c6f9a7db4", "text": "Function to convert Set Tokens into underlying components .", "title": "", "metadata": ""}
{"_id": "458523e401e524fa059ff3688f342cf4", "text": "Show block number when withdraw can continue .", "title": "", "metadata": ""}
{"_id": "749474d736cf3f9bff292617214d83fc", "text": "The transaction is valid if the gas price limit is lifted-off or the transaction meets the requirement .", "title": "", "metadata": ""}
{"_id": "5a547d76eef4f19297422ffcdfa567fa", "text": "Validate an order hash .", "title": "", "metadata": ""}
{"_id": "46a67a54f7e31d2a2a5579430868d852", "text": "distribute reward tokens to a addresse based on the proportion .", "title": "", "metadata": ""}
{"_id": "a23537ec64851b22045dd3e3ea0ffbe3", "text": "doTakerPayment ( ) is an internal function that sends the ether that this contract receives to the vault , creating no tokens .", "title": "", "metadata": ""}
{"_id": "e23421362cb881f4dfe5313d6de49c5e", "text": "Checks if an order was created on chain .", "title": "", "metadata": ""}
{"_id": "89e9e3f8acc88195d2efb641072b2aa7", "text": "Check participants answers and change deal state .", "title": "", "metadata": ""}
{"_id": "bb83d3c39c9660fe940bcabe9a23eaff", "text": "Please note you funds will be at the mercy of the issuer and can be drained at any moment .", "title": "", "metadata": ""}
{"_id": "200024bebedd51d64e217168d1e5cc38", "text": "Modifier to make a function callable only when the contract is not paused .", "title": "", "metadata": ""}
{"_id": "68b14e2ed486b6f3d19229a42b57bcd5", "text": "The main public function to call when a player challenge a dungeon , it determines whether if the player successfully challenged the current floor .", "title": "", "metadata": ""}
{"_id": "b7d8fffcb28d5bb849bf6cfc5a216c44", "text": "Allow the owner to change the house edge .", "title": "", "metadata": ""}
{"_id": "7f3291f304e8fd95ddb5b977ff5ee209", "text": "Donate the message value to the pot .", "title": "", "metadata": ""}
{"_id": "7c4720a953521fc03df1e22764605adc", "text": "Assigns ownership of a specific Token to an address .", "title": "", "metadata": ""}
{"_id": "ef31a0a7e1ffec45aefafdabefa27fc3", "text": "After the crowdsale : token maintainance .", "title": "", "metadata": ""}
{"_id": "61a77d898d351901d0ff18d728b29cbe", "text": "incrementInventory - increments the inventory of a product .", "title": "", "metadata": ""}
{"_id": "51e1eacf399fbde47f9325ced189f72b", "text": "implementation methods .", "title": "", "metadata": ""}
{"_id": "0ee84980dbc15bd1f93bd9ec5e5a9904", "text": "A constant getter to check the details of a specified Admin .", "title": "", "metadata": ""}
{"_id": "656b6f79a806c19d9ec3b3ea4e5a4b42", "text": "send ether to the fund collection wallet , the vault in this case .", "title": "", "metadata": ""}
{"_id": "70f010d73a82bba800d593a6ebfd3509", "text": "Distribute pending balance between ETC and ETH subwallets .", "title": "", "metadata": ""}
{"_id": "d7c2c8ad7fd93d7888476bbbbdf715dd", "text": "Refunds can be claimed from a failed ICO .", "title": "", "metadata": ""}
{"_id": "7ee863038c6ed3912a31e79c76c376b2", "text": "internal buyin functionality .", "title": "", "metadata": ""}
{"_id": "98a005459955beb8d2cfc23cb28c142e", "text": "Calculations - these factor in all fees .", "title": "", "metadata": ""}
{"_id": "df599d2a8128f32172cdbd932b680ce6", "text": "used to save gas .", "title": "", "metadata": ""}
{"_id": "1c66681cdafc6fca2756ad05c32aaf59", "text": "Calculates total amount of tokens purchased includes bonus tokens .", "title": "", "metadata": ""}
{"_id": "efeeb2926bb9295554cae37640a34313", "text": "Invoked on initialization of the contract .", "title": "", "metadata": ""}
{"_id": "87bd2fc505411beb390890e2decdbcd7", "text": "changeFrozenBalance function allows the owner of the smart contract to change individual particular frozen balances .", "title": "", "metadata": ""}
{"_id": "8d6c92c317d01f0a38efd6a673e5ca6c", "text": "Can only be called if illiquid tokens may be transformed into liquid .", "title": "", "metadata": ""}
{"_id": "1b0d637c1b6a0e8e0f36b3b16edc13d1", "text": "Set inital arguments of the crowdsale .", "title": "", "metadata": ""}
{"_id": "5e7a728aab107890e31aec19c03abd80", "text": "Updates a pixel section's index number .", "title": "", "metadata": ""}
{"_id": "cbd4134b8f3677b653d3ca45ad807b18", "text": "Function to revoke tokens in case the terms and conditions of the bounty campaign are violated by an user after tokens were assigned .", "title": "", "metadata": ""}
{"_id": "7f85e94e38a840a2aa227771b1fb8edd", "text": "Returns the minimum value in an array .", "title": "", "metadata": ""}
{"_id": "898216c645cfe36f2375bb4570a03a4c", "text": "Assigns ownership of a specific Car to an address .", "title": "", "metadata": ""}
{"_id": "080b63043bbc5498e15195d7e291f9d4", "text": "mint timelocked tokens for owner use .", "title": "", "metadata": ""}
{"_id": "fc70b968cdec405c0bcac9325bad00c1", "text": "Funtion to updateCap .", "title": "", "metadata": ""}
{"_id": "7efa6a2e1a9d6ebefd600d61c26b2ab3", "text": "Init ballot .", "title": "", "metadata": ""}
{"_id": "7fb9e7169d85a5dbfac8373c40f6497f", "text": "requries that if this proposer was the last proposer , that he or she has reached the cooldown limit .", "title": "", "metadata": ""}
{"_id": "c774fa94efb499ed759bdebcdbd6da9f", "text": "transfer any token from this contract to the sender .", "title": "", "metadata": ""}
{"_id": "7ef4af0120c00ac611f2616c932fa735", "text": "Create message id for linked list .", "title": "", "metadata": ""}
{"_id": "7a417dd47ad92bcfecc3bbaac6606148", "text": "Anyone can call to this method to try to get a super privileged .", "title": "", "metadata": ""}
{"_id": "86c8eb37ff519ea4cc610cc3ed626397", "text": "Function to change oracle .", "title": "", "metadata": ""}
{"_id": "5f98eaf7bd21c05244fdb0ac3900b4c6", "text": "If the contract becomes stagnant and new players haven't signed up for awhile , this function will return the money to all the players .", "title": "", "metadata": ""}
{"_id": "3c9f5ea2c62ab9ceccca3ab63822feff", "text": "subtracts two numbers , throws on overflow ( i . e .", "title": "", "metadata": ""}
{"_id": "97a116811754cfcc38f91e3c8a2ff503", "text": "Boom price ( sai per skr ) .", "title": "", "metadata": ""}
{"_id": "e1c499f4622a9e76ee0bb7bd3d335dff", "text": "Creates a new item with the given name .", "title": "", "metadata": ""}
{"_id": "981eb1d5c5c30149502fe9671bfeddeb", "text": "force withdrawal to many addresses .", "title": "", "metadata": ""}
{"_id": "554418db038cd508eff40696560ff777", "text": "Compara two numbers , and return the bigger one .", "title": "", "metadata": ""}
{"_id": "d5920bc694b4a1f8363d7fbda7a5f92d", "text": "Transfers tokens held by timelock to miner .", "title": "", "metadata": ""}
{"_id": "13d13b5dac57cf67a6fdf59554c05f7e", "text": "accept donation payment : this increase the jackpot of the currentCompetition of the specified game .", "title": "", "metadata": ""}
{"_id": "ff6477be4b80360264788f109f724879", "text": "ERC820Implementer public erc820Registry ; .", "title": "", "metadata": ""}
{"_id": "02eaf189d137f305bdb75f14f79bf492", "text": "Allows owner to schedule future Oraclize calls .", "title": "", "metadata": ""}
{"_id": "abe56e0a0bcaf066431dc442020ca621", "text": "Transfers amount to address .", "title": "", "metadata": ""}
{"_id": "2361e83952b19a5c1927cbde67370663", "text": "returns the token sale bonus permille depending on the current time .", "title": "", "metadata": ""}
{"_id": "91c87d71687ec87b3eed39dac420595e", "text": "The owner may allow a previously-frozen contract to once again accept and transfer nomins .", "title": "", "metadata": ""}
{"_id": "a774849f2d676726f954e35efe5864d6", "text": "create new token tranche for contract you own this increases total supply and credits new tokens to owner .", "title": "", "metadata": ""}
{"_id": "8bbb7af584a94734dc0ca21db75ab0c7", "text": "To enable transfers of IAC Token anytime owner wishes .", "title": "", "metadata": ""}
{"_id": "64e6242404e8ebe0a105703273feead9", "text": "Sets a price ( in wei ) for selling one token .", "title": "", "metadata": ""}
{"_id": "fa6a70c29f0f4f34bf5da8a300fcffc2", "text": "The balance of _owner .", "title": "", "metadata": ""}
{"_id": "507845ad7f49edefab87e2b0c8a8be00", "text": "can kill contract after winnerAnnounced + 8 weeks .", "title": "", "metadata": ""}
{"_id": "a145581597000abd1724619303a61ab5", "text": "distribute fund to winners .", "title": "", "metadata": ""}
{"_id": "16d3fd757f25606b6bb60eecf5a9d208", "text": "Set the address of the contract that represents CryptoSaga Cards .", "title": "", "metadata": ""}
{"_id": "a4aec2a01b905e5d9d984f664d6fad27", "text": "Get the metadata of a leaderboard .", "title": "", "metadata": ""}
{"_id": "2c90369edb4e15723b8b6d7f0177d0b5", "text": "Return the random number .", "title": "", "metadata": ""}
{"_id": "78840fc24e8b6069de063db80e5f9db3", "text": "This transfers amount shares to target . address ( ) .", "title": "", "metadata": ""}
{"_id": "cff6d881531eb2bc7aa22a299f881fd7", "text": "Claim refund , which will transfer refunded Wei amount back to buyer .", "title": "", "metadata": ""}
{"_id": "0de37d205305d484cefd54047298fa99", "text": "Get the identity owner name , usable inside contract call .", "title": "", "metadata": ""}
{"_id": "6a53f1a9bb5d9b478bc22e0710ea777c", "text": "Modifier to make sure transaction is happening during Sale .", "title": "", "metadata": ""}
{"_id": "ae8905a3962f83159a540fdb149d0a23", "text": "Get transfer details .", "title": "", "metadata": ""}
{"_id": "b6cfbfdd707d7658e4afd57d1c490b77", "text": "Checks whether the given auction is active .", "title": "", "metadata": ""}
{"_id": "79ec520df96c9be0b1b3ef1aae035659", "text": "allows destruction of contract only if balance is empty .", "title": "", "metadata": ""}
{"_id": "18f27276ebf68fd1b1f78804ddfad3f6", "text": "acceptOwner function for accept owner ship of account .", "title": "", "metadata": ""}
{"_id": "ed02a68ab5a10dc4dd6e523af55bae6f", "text": "Check if the address being passed belongs to a contract .", "title": "", "metadata": ""}
{"_id": "a13ea51642b084d1f805d392a477f2a4", "text": "Manually unlock 10 total tokens .", "title": "", "metadata": ""}
{"_id": "2686fd521bf59bf50139d3c219051303", "text": "disables mint ( ) , irreversible ! .", "title": "", "metadata": ""}
{"_id": "6fc65f8eb0bbf05ce7e57cdde192a695", "text": "Token Metadata .", "title": "", "metadata": ""}
{"_id": "3b6326cb53be12ce737de88f2c926e7b", "text": "The owner can only withdraw what has not been assigned to the transfer fee address as PullPayments .", "title": "", "metadata": ""}
{"_id": "e963c24cdbdb1c4dcf1c7cb2eea15d77", "text": "get decision result address .", "title": "", "metadata": ""}
{"_id": "85583e33638fef5cfeb215489aeb17ff", "text": "Decode an RLPItem into an int .", "title": "", "metadata": ""}
{"_id": "de27713a98d144d87439cdbbce7a50cf", "text": "Gives user tokens for contribution in bitcoins .", "title": "", "metadata": ""}
{"_id": "e220b1aa09d863b68a64161a087f6def", "text": "Enter this arena .", "title": "", "metadata": ""}
{"_id": "08f56fe1415e54db2d1a52df056ac6fd", "text": "Returns 2 . 50 .", "title": "", "metadata": ""}
{"_id": "0d0998b786875106a93d79453ab3994f", "text": "Returns true if there are still free places for investors .", "title": "", "metadata": ""}
{"_id": "9279733459287d2ea45159c8fdcb0df2", "text": "Get current News Contract address .", "title": "", "metadata": ""}
{"_id": "b884e341e74143ae246d1f2875743ba4", "text": "Wheter the DCORP is accepted or not .", "title": "", "metadata": ""}
{"_id": "849ed297ecd89774e758c7160d2ea7d3", "text": "Withdraw asset ERC20 Token .", "title": "", "metadata": ""}
{"_id": "3a0e92384598777cc969807180e89e72", "text": "if true , token sale is not available .", "title": "", "metadata": ""}
{"_id": "5a8462165c6cc9f6998dbb96f2ecec96", "text": "Allows someone to send ether and obtain the ( unclaimed only ) token .", "title": "", "metadata": ""}
{"_id": "d486e58723fff2a540c10c8ddcbbfa98", "text": "Throws if called by any account other than the whiteListed .", "title": "", "metadata": ""}
{"_id": "57eefaba6318754176ae26a637f18c88", "text": "Calculates transfer hash for transferPreSignedMany .", "title": "", "metadata": ""}
{"_id": "a75cbddad7eb9014f1acb992fc57e7da", "text": "Mints a new token .", "title": "", "metadata": ""}
{"_id": "af8f973a853d9428a0b439da756953aa", "text": "given a token supply , reserve , CRR and a sell amount ( in the main token ) , calculates the return for a given change ( in the reserve token ) .", "title": "", "metadata": ""}
{"_id": "985ef93c4ad2ae868d184a6f99eaae4f", "text": "token balance uint256 .", "title": "", "metadata": ""}
{"_id": "f640b2c958162eb084d50555a5f03fdb", "text": "initial internal transfer function which skips checks and saves gas - use carefully .", "title": "", "metadata": ""}
{"_id": "c2be602050b48987a6c95c6aba371fdf", "text": "Claim token after token sale based on stake .", "title": "", "metadata": ""}
{"_id": "4d1e3a3a9667d57f253ac93623df0310", "text": "Send value of pendingReturns _address to _address .", "title": "", "metadata": ""}
{"_id": "3a7ecb1fe9cfe40934a716fa42807d01", "text": "true if tokensale is paused .", "title": "", "metadata": ""}
{"_id": "2188eaf5653ea1c39bd0323bc079c6bc", "text": "Returns all the relevant information about a specific item23 .", "title": "", "metadata": ""}
{"_id": "dd35d4783d705e660880bf3ef806e613", "text": "The schedule .", "title": "", "metadata": ""}
{"_id": "d00e388f7790fe4bb7923749dd85e907", "text": "enables or disables address to be receipient of EUR-T .", "title": "", "metadata": ""}
{"_id": "1ad62a80cca3e2cd7c225c89c99683b5", "text": "Payout to verifier .", "title": "", "metadata": ""}
{"_id": "5d761bd4c3ace3d7e96f1e2bea17f87a", "text": "This function approves a _spender an _amount of tokens to use .", "title": "", "metadata": ""}
{"_id": "aa970c7fb5c83021ed024edd21694370", "text": "unlocks tokens from the token lockup contract .", "title": "", "metadata": ""}
{"_id": "a1597a8a69bb050ff40b430c45e5d46d", "text": "Establishes ownership and brings token into existence AKA minting a token .", "title": "", "metadata": ""}
{"_id": "8e2003b5a37f71b062c617c5984d123e", "text": "State machine .", "title": "", "metadata": ""}
{"_id": "e5d5ce1de167804e71e27939e5634203", "text": "Attempts to trigger the action .", "title": "", "metadata": ""}
{"_id": "32f5b770a8935da4e020a24f91e48f46", "text": "validates the input sequence of numbers improvement over version 1 protocol , makes use of the sequence .", "title": "", "metadata": ""}
{"_id": "6f9a8668783d7897ee86845f00974fab", "text": "Allows contract owner to mint new tokens , prevents numerical overflow .", "title": "", "metadata": ""}
{"_id": "c876614349231fe12097e2bfd61376c0", "text": "Sets an import fee of fee on address addr .", "title": "", "metadata": ""}
{"_id": "aaf52428a9ddfc823ce3b436d248d0a9", "text": "Get a booking information .", "title": "", "metadata": ""}
{"_id": "4d1e0b7479479d6eef89adcaf4884325", "text": "withdraw balance without prizeFund .", "title": "", "metadata": ""}
{"_id": "ad6b5948629cc1e189a7804a1e0752ad", "text": "Forwards a move to the corresponding game contract if the data has been signed by the client .", "title": "", "metadata": ""}
{"_id": "52a84ed8d0e17822712f521206ff6d1e", "text": "supposed to be called by ICO Contract IF fundingGoal wasn't reached during PreICO to notify it .", "title": "", "metadata": ""}
{"_id": "37a6f3ebab83d51bd9133e39a5b1c891", "text": "User sends token to sell to exchange - at this point the exchange contract takes ownership , but will map token ownership back to owner for auotmated withdraw on cancel - requires that user is the rightful owner and is not asking for a null price .", "title": "", "metadata": ""}
{"_id": "f02f31e28f00d3eb8bf3cad21246dfe1", "text": "retrieve number of all AceEquityToken in existence .", "title": "", "metadata": ""}
{"_id": "14947f724dc3f292eb90aec32f45b858", "text": "Override MintableToken mint .", "title": "", "metadata": ""}
{"_id": "9a8c5332a11717ecb1be754815aa1c6d", "text": "Function to access option pool of tokens .", "title": "", "metadata": ""}
{"_id": "2d6044bb3c2b922350e14a56f7cb0ea2", "text": "Allows the owner to withdraw ethers from the contract .", "title": "", "metadata": ""}
{"_id": "dd3b591a3e4bf169d27381e77b664fa8", "text": "Ensure only the arena contract can call pet count .", "title": "", "metadata": ""}
{"_id": "415ee91ab7090c431e27c026c2f58b16", "text": "Validation Update Process .", "title": "", "metadata": ""}
{"_id": "2f25043e5d8e416b45a53027e35e9086", "text": "anybody can pay and add address that will be checked if they can be added to the bonus .", "title": "", "metadata": ""}
{"_id": "3c5bedc2c616a0aa7f99025ca4aedf86", "text": "give a starting jackpot by sending ether to the transaction .", "title": "", "metadata": ""}
{"_id": "94784eabcb3f84d93ae57fe0498964f9", "text": "set contract address .", "title": "", "metadata": ""}
{"_id": "5b1e55a7da418aa654f7f79c0dfa7ac0", "text": "true if crowdsale has reached more funds than the minimum goal .", "title": "", "metadata": ""}
{"_id": "720b167f7aa7b45230461605f9de5ce9", "text": "bytes1 The converted value if the passed value was alphabetic and in a lower case otherwise returns the original value .", "title": "", "metadata": ""}
{"_id": "5989451712b4e85bf7dda3926f94b075", "text": "input range : 0x100000000 , uint256_max output range : 0 , 0x9b43d4f8d6 .", "title": "", "metadata": ""}
{"_id": "1100038a7252cbade3fb5e07bcc7a501", "text": "Buy tokens for Ether .", "title": "", "metadata": ""}
{"_id": "7ccacb3ca3e2fc37d9b4857fd6efbdf5", "text": "Extend parent behavior requiring purchase to have minimum weiAmount and be within overall maxWeiAmount .", "title": "", "metadata": ""}
{"_id": "0ceecfabba2c2ba191ce8406194242b0", "text": "Add one account to the vest Map .", "title": "", "metadata": ""}
{"_id": "254b26b1f48a63c831bcf9406de39a49", "text": "Owners and admins .", "title": "", "metadata": ""}
{"_id": "d40a0642575c8f88e275921f3a10448e", "text": "Returns the total number of Warriors currently in existence .", "title": "", "metadata": ""}
{"_id": "e8b07a23815158daf58f1c9351ee3c26", "text": "Modifier to make a function callable only when the contract is not transferable .", "title": "", "metadata": ""}
{"_id": "d353d2c42906e5265f8baf3833433bca", "text": "Returns votes allowed to be given by user .", "title": "", "metadata": ""}
{"_id": "3a14c69c68977736fb7ae5a4446e56a7", "text": "As return statement unavailable in fallback , explicit the method here .", "title": "", "metadata": ""}
{"_id": "8259e21dfce04f06fd680c53fd6c9952", "text": "return token price in cents .", "title": "", "metadata": ""}
{"_id": "d2f480c28a6ba21246c287bfd2fe2c7d", "text": "removes a previously blacklisted contributor from the blacklist .", "title": "", "metadata": ""}
{"_id": "1bc410448ba6ae58c9ee05f635f02079", "text": "Modifier for accessibility to deploy a hero on a location .", "title": "", "metadata": ""}
{"_id": "f035d7d251b01176f1b55eeb611665ba", "text": "onlyOwner Adds a spender to the allowedSpenders white list .", "title": "", "metadata": ""}
{"_id": "904cf71467763360c9f9a4d697ee1565", "text": "Bounty claim their reward tokens by sending zero ETH to this smart contract .", "title": "", "metadata": ""}
{"_id": "3a94c800e3494d46ac7fe3c518792cbd", "text": "validates the input sequence of numbers simplest impl ( current ) : positive value proper impl ( consideration for future versions ) : 00 . . 0481516234200 . . 0-like .", "title": "", "metadata": ""}
{"_id": "a2b9339e237ad2e60984e63136a01a33", "text": "checks game is currently active .", "title": "", "metadata": ""}
{"_id": "e7a026058eb3d1f2ed054e2f890d79a9", "text": "ERC20 behaviour but revert if paused .", "title": "", "metadata": ""}
{"_id": "e00c29997891a83a6b09190ee389a4ef", "text": "Used only by the wizard to collect his commission .", "title": "", "metadata": ""}
{"_id": "44d2dc1f8e5a491e73f0aeb24e9937e3", "text": "owner can set operator permission if want to revoke a permission , just set address to 0x0 .", "title": "", "metadata": ""}
{"_id": "4a8cea51dd3edc809e8f6018f8bcc489", "text": "Throw if the blob is not enforcing revisions .", "title": "", "metadata": ""}
{"_id": "8db2ae9633ef414e19ca23668aafd9ac", "text": "When countdowns and events happening , use the checker .", "title": "", "metadata": ""}
{"_id": "34972cf08f1c5e041dfe836b39ef52b5", "text": "uint Returns the balance of indicated address .", "title": "", "metadata": ""}
{"_id": "773c8d2b2a6bf0fb8181ca564841baf9", "text": "Create a new StakingPriceFeed .", "title": "", "metadata": ""}
{"_id": "4e6c2b4af3ad6c987ae0a2d4afc0e946", "text": "main function , must run for releasing .", "title": "", "metadata": ""}
{"_id": "8dc2e3a2b240e22a47b32c743a712041", "text": "based on 'transfer' in https : / / github . com / OpenZeppelin / zeppelin-solidity / blob / master / contracts / token / ERC20 / BasicToken . sol .", "title": "", "metadata": ""}
{"_id": "abb0c22ece24fc56545762eb485745df", "text": "Return the amount of tokens claimable by a third party caller when generating a recipient's token allocation at a given block .", "title": "", "metadata": ""}
{"_id": "d3cdbc0ed4912dc1bbbb1a843618053f", "text": "Allow users to simulate entering the crowdsale to avoid the fee .", "title": "", "metadata": ""}
{"_id": "28d06aec60eea0343a4c1196e250044a", "text": "Reward all participants .", "title": "", "metadata": ""}
{"_id": "eb756befcc295a9b1b2be70f8067fb6b", "text": "convert ether to tokens ( without decimals ) .", "title": "", "metadata": ""}
{"_id": "986484eb6765d4a1da1f61e020c76a9c", "text": "owner returns the address of the account that controls a domain .", "title": "", "metadata": ""}
{"_id": "00f34f6b21d51a2ba5bdd3199babad2b", "text": "Adjust reward amount .", "title": "", "metadata": ""}
{"_id": "083d6bb6b073b743436abbe359fb514f", "text": "Spends credits for a user .", "title": "", "metadata": ""}
{"_id": "a798c64bfbb15c5293b03954d174a961", "text": "Allows to transfer MTC tokens .", "title": "", "metadata": ""}
{"_id": "94f10b86d5214786a1f36303a78bad16", "text": "check if private sale is running .", "title": "", "metadata": ""}
{"_id": "215afa6fb24da46d9765730213610bc3", "text": "return the game data when playing 0 start time 1 end time 2 no of player 3 total bet 4 jackpot 5 is ended game boolean 6 game bet value .", "title": "", "metadata": ""}
{"_id": "325580723d9c12f5d873bce313d8138a", "text": "Send _value tokens to _to on behalf of _from .", "title": "", "metadata": ""}
{"_id": "b23e3f70df488b55e3361d087ba4831c", "text": "Start PreIco .", "title": "", "metadata": ""}
{"_id": "f056b10c55edd9d39c20efa763d4c7e2", "text": "Whether the tokenCap was reached .", "title": "", "metadata": ""}
{"_id": "a1ab1fe557c7be3c99725322a649e0ee", "text": "update and set ad .", "title": "", "metadata": ""}
{"_id": "30a1a6210470ada7c2789597e63f75f2", "text": "end the ICO , tokens won't show up in anyone's wallets until this function is called .", "title": "", "metadata": ""}
{"_id": "ed7be669acccc2f344b0eb59fb8ece01", "text": "returns the USDETH price , ie gets the USD price from Maker feed with 18 digits , but last 18 digits are cut off .", "title": "", "metadata": ""}
{"_id": "bb3d6f8bcec696ee7ee07762153bea50", "text": "Function to easily check this contracts balance .", "title": "", "metadata": ""}
{"_id": "ae2d5a0dee0ea87a7d9a8e41bac2a1ea", "text": "Returns the max value in an array .", "title": "", "metadata": ""}
{"_id": "ac12473addd7c02f5af8d3f4d090d56b", "text": "makes single payment to service provider .", "title": "", "metadata": ""}
{"_id": "c8bf70003db91794e9ed595dbd3c062a", "text": "buyTokens function used to buy the tokens using ethers only .", "title": "", "metadata": ""}
{"_id": "512daae393e2841437e041fcf568b424", "text": "To be called by players .", "title": "", "metadata": ""}
{"_id": "b60df58d7d6b9a66588dfe0cdc26f076", "text": "Create BTC Address : https : / / en . bitcoin . it / wiki / Technical_background_of_version_1_Bitcoin_addresses How_to_create_Bitcoin_Address .", "title": "", "metadata": ""}
{"_id": "e350a9dd3a9b02b828daca68d61c5aae", "text": "Approve a new admin for this contract .", "title": "", "metadata": ""}
{"_id": "1456e89162a58318b7d37f0a8de0f4be", "text": "To start Sale from Presale .", "title": "", "metadata": ""}
{"_id": "9df012c31ed1fc5f17cbd27ca8bc1e3e", "text": "Returns the percentage of the bonus on the given date .", "title": "", "metadata": ""}
{"_id": "4759c5186d9f0940777ba8458c1f46ac", "text": "Allows the contract owner to add multiple whitelist users , each with a wallet address and a pledged contribution .", "title": "", "metadata": ""}
{"_id": "5eb14a2f2b5ecaaa98f7ea7db32a44d4", "text": "Change or reaffirm the approved address for an NFT .", "title": "", "metadata": ""}
{"_id": "e2f52822a8db61482027c1007afd7206", "text": "The allocated token balance .", "title": "", "metadata": ""}
{"_id": "313fe98c8f970563aac8989effd47d04", "text": "For the game to be fair , the total gross payout over a large number of individual slot spins should be the total amount wagered by the player .", "title": "", "metadata": ""}
{"_id": "552d590dd3cc22fb99c3940a399cf64d", "text": "token's symbol .", "title": "", "metadata": ""}
{"_id": "d52baf7abc98d9228f6942da0f566777", "text": "Set the ether to token rate .", "title": "", "metadata": ""}
{"_id": "36dcfef2d8b1116306f615871b7dd817", "text": "the discount .", "title": "", "metadata": ""}
{"_id": "24d875848b7c182dd8e938b051106906", "text": "Below 4 functions are only called in case of emergency and certain situation .", "title": "", "metadata": ""}
{"_id": "76bfcb12c223ff9d50fcc731fa62975d", "text": "Releases Marketing supply .", "title": "", "metadata": ""}
{"_id": "8eac833716085a1202b086a68c576d5e", "text": "Genaro Dev needs to make initial token allocations for presale partners .", "title": "", "metadata": ""}
{"_id": "81cb51614825603460f2ce39d7d1d973", "text": "Only owmer .", "title": "", "metadata": ""}
{"_id": "cb3370edac8ccd3cb0c38c989660e829", "text": "Transfer function extended by check of eth balances and pay transaction costs with FLKD if not enough eth .", "title": "", "metadata": ""}
{"_id": "525b5815fa9c38cadde110526505d652", "text": "caculate the crowdsale rate per eth .", "title": "", "metadata": ""}
{"_id": "314e2adfe54dd78b6d25b18646b13675", "text": "Calculates the result of the LMSR cost function which is used to derive prices from the market state .", "title": "", "metadata": ""}
{"_id": "59083721bdadc5f499ac952714bed18d", "text": "Receives approval to drain the invoice .", "title": "", "metadata": ""}
{"_id": "f8cc67c6c66c9c1fb726253ddd126ff1", "text": "Returns a list of all LinglongCat IDs assigned to an address .", "title": "", "metadata": ""}
{"_id": "b69d4275f15dd61c9c2fafb8c311fe9f", "text": "manager use this function to confirm a operation confirm will not be call inside other functions , so it can be external to save some gas .", "title": "", "metadata": ""}
{"_id": "d0eb91155e2d5dd2845f7a6de29d2b59", "text": "Overridden method to check for end of fundraising before allowing transfer of tokens .", "title": "", "metadata": ""}
{"_id": "6ba809e55aecfbbfe1b349a1f03e1394", "text": "Ceiling function for fish generator .", "title": "", "metadata": ""}
{"_id": "a11c83e347236564efb943e9334d5ec6", "text": "Determine the outcome manually , immediately .", "title": "", "metadata": ""}
{"_id": "c9204cd4d09197b69cefe5886a58f3fa", "text": "Sender can transfer tokens on others behalf , this method is disabled if emergencyLock is activated .", "title": "", "metadata": ""}
{"_id": "af43c2d3d29a623edb9a8632c648360b", "text": "Mint bounty tokens .", "title": "", "metadata": ""}
{"_id": "abd5424f594be02792bbf592583604c0", "text": "From zeppelin-solidity CanReclaimToken . sol .", "title": "", "metadata": ""}
{"_id": "7167c4f65bb49c6bcf7a3ddac34b9332", "text": "Withdraw function ( tokens ) .", "title": "", "metadata": ""}
{"_id": "3d17328f842e9dcc5b99eb8052fbd539", "text": "Creates Periodic Table as first element .", "title": "", "metadata": ""}
{"_id": "48988632569956675226d34c718e433e", "text": "only allowedSpenders The recipient of a payment calls this function to send themselves the ether after the earliestPayTime has expired .", "title": "", "metadata": ""}
{"_id": "5702daa74fb734d678fc88ba485b11dd", "text": "Topup Tokens for owner .", "title": "", "metadata": ""}
{"_id": "d4b6c7bf4dd7aa3be5318bea735c44da", "text": "Fuzzy hash and name validation taken from King of the Ether Throne https : / / github . com / kieranelby / KingOfTheEtherThrone / blob / v1 . 0 / contracts / KingOfTheEtherThrone . sol .", "title": "", "metadata": ""}
{"_id": "e7f655e475c9331d66e2c8ae5b3f1e72", "text": "This is where all your gas goes .", "title": "", "metadata": ""}
{"_id": "d8eb6f53f61889bd9fe24dc181a65677", "text": "This function can be called after the swap is tokenized or after the Calculate function is called .", "title": "", "metadata": ""}
{"_id": "fafbebfb58f26f6986c1b68949975b17", "text": "Call destroy ( address tokens ) instead .", "title": "", "metadata": ""}
{"_id": "a352ec7f0178a083158cf6e94ddd2826", "text": "Returns all the relevant information about a specific tot .", "title": "", "metadata": ""}
{"_id": "95c0d278ba06fbb05f256f8854af629d", "text": "This function is used to return organizer .", "title": "", "metadata": ""}
{"_id": "b9839141517302b25a015e1636ecc9e6", "text": "Price for crowdsale by time .", "title": "", "metadata": ""}
{"_id": "6899b380fbdc0a4fc466aee91283960b", "text": "Creates a new Person with the given name .", "title": "", "metadata": ""}
{"_id": "0af817133b552e01ee034abb129b64f1", "text": "Function reports the number of tokens available for sale .", "title": "", "metadata": ""}
{"_id": "e2b880b3c77334b39da5c4cefb03e7e7", "text": "Croupier will call this function when the jackpot is won .", "title": "", "metadata": ""}
{"_id": "ea8b0063363277d92f64a47f94d5df82", "text": "Determines how ETH is stored / forwarded on purchases .", "title": "", "metadata": ""}
{"_id": "65779136a6a40e87b34d345d358508b6", "text": "A backup fail-safe drain if required .", "title": "", "metadata": ""}
{"_id": "f2cac16eb9c86157115461c926d8af2b", "text": "Register user .", "title": "", "metadata": ""}
{"_id": "e83f03548ebb8567867836c89764f442", "text": "Get the approved address for a single NFT .", "title": "", "metadata": ""}
{"_id": "2c174bce1d2ed2e93fa20e5cf20edd93", "text": "Sets new token importer .", "title": "", "metadata": ""}
{"_id": "ada96abcc39444221a73d18a81c57453", "text": "paymentFallBack ( ) assumes that paid BTC doesn't exceed the max ether cap .", "title": "", "metadata": ""}
{"_id": "dd26ecdec427de82dde9095e75d18fed", "text": "returns of any number , where given was generated with toPct .", "title": "", "metadata": ""}
{"_id": "f22fbb37efb2ab4f971b4c43d73336d8", "text": "Checks if a given address is the current owner of the specified Element tokenId .", "title": "", "metadata": ""}
{"_id": "045333f1c5c9a8cf189950c980f282c6", "text": "finalizeFunding ( ) ends the Campaign by setting the controller to 0 , thereby ending the issuance of new tokens and stopping the .", "title": "", "metadata": ""}
{"_id": "80abf08251ecbe39e40177fae5479dfb", "text": "Distribute the tokens in the contract to the contributors / creators .", "title": "", "metadata": ""}
{"_id": "6eb347e43e236009b77407ee331f1403", "text": "sum of perks ( excluding prestige ) .", "title": "", "metadata": ""}
{"_id": "a4907498dd0ca1b2a912478307afc924", "text": "set course .", "title": "", "metadata": ""}
{"_id": "3b125b9e5bfddb8c4129bc4755da4b40", "text": "convert little endian bytes to uint .", "title": "", "metadata": ""}
{"_id": "d4d57e6d62294b3083d252c2387146bd", "text": "create and start a new auction .", "title": "", "metadata": ""}
{"_id": "94e4cdb79ee40dff6049305dbc9ce3c6", "text": "expand map in direction x .", "title": "", "metadata": ""}
{"_id": "e1f0da33768d004a47ce63061a0ddbe3", "text": "transfer TEU token from one wallet to multiple wallets .", "title": "", "metadata": ""}
{"_id": "a605ec9d25653baf1ff82161b3f438c6", "text": "Return tokens and amounts .", "title": "", "metadata": ""}
{"_id": "f516a4775e763e927d456cfe8689f993", "text": "Is completed .", "title": "", "metadata": ""}
{"_id": "52dd219740a2d04cdb15d7df25671070", "text": "Internal utility function to start breeding , assumes that all breeding requirements have been checked .", "title": "", "metadata": ""}
{"_id": "7ba63a01f5805847ba680df74444933c", "text": "An internal method that creates a new part and stores it .", "title": "", "metadata": ""}
{"_id": "2bda3735e991f59903e6fed15d3d7ade", "text": "Modifier to make a function only callable by the CFO .", "title": "", "metadata": ""}
{"_id": "f83acc3495724d214c266283211d31d4", "text": "Update only asset state .", "title": "", "metadata": ""}
{"_id": "6d0e583ba19786142f4cecde25fbd612", "text": "Calls whenever an error occurs , logs it or reverts transaction .", "title": "", "metadata": ""}
{"_id": "36b62e190b4d6e228fb8e1ea755f653a", "text": "Sets new manager .", "title": "", "metadata": ""}
{"_id": "679df8aa7500c35d5358110b884bb98f", "text": "Acceptes ETH and send equivalent CSE with bonus if any .", "title": "", "metadata": ""}
{"_id": "a47d76aa3e63ded3460cfa4b056f525a", "text": "helper function so that UI can display amount ETH user can still contribute .", "title": "", "metadata": ""}
{"_id": "94465e4e4ca33e0dfa4ce611649ace0f", "text": "Pause the sale .", "title": "", "metadata": ""}
{"_id": "b71aef964d1fa7521ea89e82a0550f55", "text": "Returns the remaining possibled presale amount for a given wallet .", "title": "", "metadata": ""}
{"_id": "0ab3b65f7cf2db84cffdfed41e4780c8", "text": "All users except deployer must check time before contributing .", "title": "", "metadata": ""}
{"_id": "d910e93fca612a0f7750a141c9bd11fa", "text": "check a operation is confirmed or not .", "title": "", "metadata": ""}
{"_id": "53d13d377031266d6c61354e15985d57", "text": "Changes investment low cap .", "title": "", "metadata": ""}
{"_id": "51eb9d60e0487750b7168c00ef71685d", "text": "A contract attempts to get the coins .", "title": "", "metadata": ""}
{"_id": "6082dd5d8d96f4f2e660eeefdd6f568e", "text": "Lock called , deposits no longer available .", "title": "", "metadata": ""}
{"_id": "aa905e7230ce0087c682c352eb1f7a1d", "text": "Gets the Human readable progress for the current crowsale timeline in .", "title": "", "metadata": ""}
{"_id": "a26afc1153def9c9be7d96359b28c556", "text": "Submit the hash of an answer , laying your claim to that answer if you reveal it in a subsequent transaction .", "title": "", "metadata": ""}
{"_id": "07af52d88d47676ad330d96dab44ed4f", "text": "The contributor is valid .", "title": "", "metadata": ""}
{"_id": "73720f651f3fe364957bc6b4dd064372", "text": "transfer token to the owner of the contract ( beneficiary ) / / afterDeadline .", "title": "", "metadata": ""}
{"_id": "59a0218ef9071a2326aa4b3f223216a4", "text": "Allows some methods to be used by team or robot .", "title": "", "metadata": ""}
{"_id": "4b43956e09d3307f0a885baf9166274b", "text": "Call validateOrder - Solidity ABI encoding limitation workaround , hopefully temporary .", "title": "", "metadata": ""}
{"_id": "8a5ca3d939c5d016b671891cf0c070bd", "text": "How many tokens are in the contract overall ? .", "title": "", "metadata": ""}
{"_id": "3ddc727d51e016a709938ac87b3fcd2e", "text": "updateValueAtNow used to update the balances map and the totalSupplyHistory .", "title": "", "metadata": ""}
{"_id": "3dcefd72468de45c66362ba41fc27a5f", "text": "Tests ownership of the current caller .", "title": "", "metadata": ""}
{"_id": "4421280b2f34fbb1d382bf280905ea9e", "text": "custom timelocked method .", "title": "", "metadata": ""}
{"_id": "c4f6af3c0408ef9de166b7494d218e94", "text": "Generates a random number from 0 to 100 based on the last block hash .", "title": "", "metadata": ""}
{"_id": "e2d60a685e84701e7b55fae5e0090d3e", "text": "Math fns .", "title": "", "metadata": ""}
{"_id": "c033f414b13713a980e91d3f7066fdd3", "text": "string An array of values split based off the delimiter , but do not container the delimiter .", "title": "", "metadata": ""}
{"_id": "7aaa127c7147086c628b2b00062828b8", "text": "Increase the interval , if sufficient time has passed .", "title": "", "metadata": ""}
{"_id": "b250d2d8cceb8b929f0d6503d1c261b1", "text": "Payable function to purchase weapons .", "title": "", "metadata": ""}
{"_id": "5f43bebe65016ffefc9c0767d22cb341", "text": "Parametric comparitor for or ! _sym returns a b _sym returns a b .", "title": "", "metadata": ""}
{"_id": "c36617abac9b502f3047dcd573ca2b9d", "text": "Deposits ETH from msg . sender .", "title": "", "metadata": ""}
{"_id": "48497a00798acd1f26e78811ce8e3d45", "text": "Imports account's tokens from pre-ICO .", "title": "", "metadata": ""}
{"_id": "1538c3c3cd373ea40cb3d15699bd8180", "text": "Token stakeholder can release the against-vote , and unlock the tokens .", "title": "", "metadata": ""}
{"_id": "fad7befbd927d852344e04d8aeb428d1", "text": "Returns true if the given player does not need to be unlocked to claim their bonus .", "title": "", "metadata": ""}
{"_id": "67c1bbc5b65c1a4a84eecb77cc412d3e", "text": "Burns Basket tokens .", "title": "", "metadata": ""}
{"_id": "682281624c3bda48ae75c59ad51c2734", "text": "Creates a new Game with the given name .", "title": "", "metadata": ""}
{"_id": "5efa262f82983de518de02286608d490", "text": "Access modifier for CTO-only functionality .", "title": "", "metadata": ""}
{"_id": "0ca9763a47a137ed8ce27cc66396e7d7", "text": "Purchase _tokenId .", "title": "", "metadata": ""}
{"_id": "266b36d7c61f50fbbc695dcf7e7eaf20", "text": "Only used by finalize and setFinalized .", "title": "", "metadata": ""}
{"_id": "d7e51ffe50c81c601450002d63286a01", "text": "Check for color ownership .", "title": "", "metadata": ""}
{"_id": "1c4c7c2ba1fb53e74821ff7fec7ef6da", "text": "Get invested amount for given investor address .", "title": "", "metadata": ""}
{"_id": "ff353c33a3b542d9190e3cdd628246b7", "text": "Modifier to check whether transfers are unlocked or the owner is sending .", "title": "", "metadata": ""}
{"_id": "b0a84e7ad6256a86221aeeacd5fe9eec", "text": "Get the buy price at a particular dividend rate .", "title": "", "metadata": ""}
{"_id": "bc11b7c39c5a06f21495de99a892a3f2", "text": "function to get all mating animal ids .", "title": "", "metadata": ""}
{"_id": "5be402f0c84de2187cf6f48319d0fb1e", "text": "Converts all incoming ethereum to tokens for the caller , and passes down the referral address .", "title": "", "metadata": ""}
{"_id": "5c294328499ba789820bda5ea80d9b7f", "text": "Call Scheduling .", "title": "", "metadata": ""}
{"_id": "744e7c5a0d62a4b2e6b4b4070b66a135", "text": "Reverts if beneficiary is not whitelisted .", "title": "", "metadata": ""}
{"_id": "7ad40a0cc214f7bf2a873b54c3ec961b", "text": "Withdraws for a given users .", "title": "", "metadata": ""}
{"_id": "057936c9962847de254e840d0b2737c0", "text": "Prevent to interact if the game is not frozen .", "title": "", "metadata": ""}
{"_id": "41dfa0cb650cbca10bb72fd7652adef8", "text": "Strandard transferts overloaded API * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * .", "title": "", "metadata": ""}
{"_id": "7c758a84f2676be1747c22dc9a003ffe", "text": "Set the for sale flag and a price for a section .", "title": "", "metadata": ""}
{"_id": "382bf01e678f74f83e93f3c80e5a52c1", "text": "Returns remaining token amount .", "title": "", "metadata": ""}
{"_id": "7ff7a21d2160216ab5d019dc85948e61", "text": "Authorize third party transfer by increasing / decreasing allowed rather than setting it .", "title": "", "metadata": ""}
{"_id": "8845bbe514167e0a034b954b268738c2", "text": "get token list count .", "title": "", "metadata": ""}
{"_id": "4a64acdb6fa1c04dde78fc53da4c84d3", "text": "nobody win , return fund back to all bettors .", "title": "", "metadata": ""}
{"_id": "8efc5c5701bb491daae12a7241f169a8", "text": "Returns the number of Lambos owned by a specific address .", "title": "", "metadata": ""}
{"_id": "22137423b0b152ad275eff6437e51131", "text": "This works identically to the other function with an extra data parameter , except this function just sets data to .", "title": "", "metadata": ""}
{"_id": "9b21d7cb730e6b45f7ebcb7ff4013641", "text": "Checks whether early purchase is invalid .", "title": "", "metadata": ""}
{"_id": "23dde94aaba44161847719c4c99c9fc6", "text": "Get back the ether sent during the funding in case the funding has not reached the soft cap .", "title": "", "metadata": ""}
{"_id": "4843c3ccc17eb93cce690af4f7392bac", "text": "- success / failure of the transaction .", "title": "", "metadata": ""}
{"_id": "7826ff2f0e860b8b19da0eb68c12105d", "text": "Returns the location of an app's function selectors , registered under a provider .", "title": "", "metadata": ""}
{"_id": "165b5d900c6cdcd3766110683399c6cb", "text": "The virtual reserve balance set here is added on to the actual ethereum balance of this contract when calculating price for buy / sell .", "title": "", "metadata": ""}
{"_id": "f2b38db323fabadaf90a8002ebbe2588", "text": "The maximum allowed claim amount slowly rises across a window of blocks CLAIM_GROWTH_WINDOW prior to the call .", "title": "", "metadata": ""}
{"_id": "722c15c78a632a8032d7c026c09716e6", "text": "Returns a bytes4 of keccak256 of json schema representing 0xcert protocol convention .", "title": "", "metadata": ""}
{"_id": "c0ca7090312ed48db523ded9c53a5df8", "text": "Admin functions only executed by pendingOwner .", "title": "", "metadata": ""}
{"_id": "96b81031b951ba697159b2beb55ca047", "text": "Search for the correct insertion spot of a bid .", "title": "", "metadata": ""}
{"_id": "db22d44776b2a08d087200158686d466", "text": "Returns number of confirmations of an action .", "title": "", "metadata": ""}
{"_id": "486f6e15259b1e324f973f68e0a20cd8", "text": "Get Address Contracts .", "title": "", "metadata": ""}
{"_id": "3fbecbde3778bb2bd9f8895b77554e6c", "text": "get current conversion rate .", "title": "", "metadata": ""}
{"_id": "65a0c1b964b96fbede83aff32b6b6913", "text": "Transfer a monster owned by another address , for which the calling address has previously been granted transfer approval by the owner .", "title": "", "metadata": ""}
{"_id": "5f893624978b64057d92e1c800c99a1b", "text": "View current Ether balance of the contract .", "title": "", "metadata": ""}
{"_id": "935cd5a7f8a76da33832b980320f0c73", "text": "Funtion to pause the sale .", "title": "", "metadata": ""}
{"_id": "7ecb3f4d3385b4aac6b7c54af820df08", "text": "function to change the price rate can only be called from owner wallet .", "title": "", "metadata": ""}
{"_id": "6ef14917c581bde6c8033f1accf0e6a3", "text": "Ensure origin address can deposit money into the channel identified by channelId .", "title": "", "metadata": ""}
{"_id": "89fea781bbffc3c8cfce44f5368d7e2e", "text": "Freeze frozenAmount tokens from being sold .", "title": "", "metadata": ""}
{"_id": "e98115f89a5df553a7c74a6252d4959a", "text": "Mint a new card .", "title": "", "metadata": ""}
{"_id": "914cf1967dbb51c807444f3da73dfc48", "text": "remember to add all teams before calling startBetting .", "title": "", "metadata": ""}
{"_id": "88654ba1d050aced4e18dda17fe7ac74", "text": "to get the contribution amount of any contributor under different period .", "title": "", "metadata": ""}
{"_id": "8a7f09563b3ffffd3a8d4cc54775eda9", "text": "Allow users to buy tokens for newTokenRate eth .", "title": "", "metadata": ""}
{"_id": "659912c32d2533fda39111b83f593842", "text": "Returns the contract state .", "title": "", "metadata": ""}
{"_id": "bc27be8394511050e0468fac0aa66a75", "text": "this function requires previous approval to transfer tokens .", "title": "", "metadata": ""}
{"_id": "02f0e82ebaedbb62ce9065e32e8e7d6a", "text": "Send coins send buyer coins .", "title": "", "metadata": ""}
{"_id": "f6bd9f473e70fac55dc1007c322a4a11", "text": "internal function generate a true random num by prove fair oraclize solution .", "title": "", "metadata": ""}
{"_id": "afdb30fe619ea453eae00e1249264bc3", "text": "The polynomial R 2 + c2 * x 2 + c4 * x 4 + . . .", "title": "", "metadata": ""}
{"_id": "59ed9ae0553cbf68f456148490db0db2", "text": "Validate if crowdsale event has ended .", "title": "", "metadata": ""}
{"_id": "9d7dff4af0afcb76719053236772a87c", "text": "Oraclize default callback with the proof set .", "title": "", "metadata": ""}
{"_id": "0affbe12bbbc51512ce778c9f07ead62", "text": "Used to verify the transfer transaction according to the rule implemented in the trnasfer managers .", "title": "", "metadata": ""}
{"_id": "263cf08594775e240460f04fd774de9f", "text": "Access modifier for Covman-only functionality .", "title": "", "metadata": ""}
{"_id": "4b00aa4f50652770a2b8c4ddb38c25e2", "text": "Get the current timestamp from last mined block .", "title": "", "metadata": ""}
{"_id": "05e5939d673bc32a46abeb4a6f293ca3", "text": "Can be iniitialized only once .", "title": "", "metadata": ""}
{"_id": "1c79cdea5dea55e3480cec01c50696f5", "text": "bool The result of check .", "title": "", "metadata": ""}
{"_id": "6fa218b784b8a45a12253ec2dc922979", "text": "Abilita la distribuzione di bonus .", "title": "", "metadata": ""}
{"_id": "4cafc27ad312238fbdbbf9c9d88d94d9", "text": "Allow the master to withdraw Beercoins from your account so you don't have to send Beercoins yourself .", "title": "", "metadata": ""}
{"_id": "b7009a8fb3b047e3a939be15b085ecf7", "text": "Mainly for front-end administration .", "title": "", "metadata": ""}
{"_id": "1c27c818544c354519e762c562c7d209", "text": "owner can call to allocate tokens to investor who invested in other currencies .", "title": "", "metadata": ""}
{"_id": "d97299f59f973d5d48971ee0bb5c1216", "text": "Blocks function entry if mutex is set .", "title": "", "metadata": ""}
{"_id": "be908bdf9501afaeaacef620cf3837aa", "text": "Protection from short address attack .", "title": "", "metadata": ""}
{"_id": "461ff74716e099b2153b2cea4d6a5486", "text": "Burning - - We allow any user to burn tokens .", "title": "", "metadata": ""}
{"_id": "5be8aebc4b7d0dedee323d92cd4cabf2", "text": "refund all tokens back to owner .", "title": "", "metadata": ""}
{"_id": "9d7705c11212ed98c1c6f116c1ba1660", "text": "The escapeHatch ( ) should only be called as a last resort if a security issue is uncovered or something unexpected happened .", "title": "", "metadata": ""}
{"_id": "a4d4f1c38edccdd2bf7a9dedc4037f8e", "text": "Burn option tokens after execution during ICO .", "title": "", "metadata": ""}
{"_id": "418ad6f06927d798758c1562c551cb22", "text": "Transfer tokens to newTokenBankroll .", "title": "", "metadata": ""}
{"_id": "388e9d70043a529e5a8dcd343ca0aa00", "text": "'owner' can set maximum ether to accept .", "title": "", "metadata": ""}
{"_id": "be36fdf57d9e6fce0473e4986da502af", "text": "Sets the address of the owner .", "title": "", "metadata": ""}
{"_id": "34f154eaa3f9262fbb9bbad8bad6696b", "text": "current tier stats index of current tiers , if 100000 ( cannot use - 1 ) then initial sale is finished works only during the initial phase .", "title": "", "metadata": ""}
{"_id": "2481da9f2d8cfcd5f42b5516a35ac540", "text": "Sets the text data associated with an ENS node and key .", "title": "", "metadata": ""}
{"_id": "aa43b96f3deb097e17f4b06438da2b83", "text": "Payout ETH to winner .", "title": "", "metadata": ""}
{"_id": "7d0c15106f8bfd1db3e41c41c10e74c5", "text": "Mints the below-mentioned amount of tokens allocated to Vibeo user adoption .", "title": "", "metadata": ""}
{"_id": "ecf88b28140c196a2bedbe39bb1cbf87", "text": "Set max sell token amount per transaction - - only Wolk Foundation can set this .", "title": "", "metadata": ""}
{"_id": "5ee917df79c8e478f3d717077806165e", "text": "Function to add multiple addresses to whitelist .", "title": "", "metadata": ""}
{"_id": "1d92927d4d6f98c38e0243506aacd000", "text": "destroy contract and send all remaining ether back to wallet .", "title": "", "metadata": ""}
{"_id": "08d93a7a275fcd5f5bf038f547bb921b", "text": "Functions with this modifier can only be executed by the owner .", "title": "", "metadata": ""}
{"_id": "533a885b17f34f3c50327dee564e7418", "text": "Removes funders from the whitelist in batches .", "title": "", "metadata": ""}
{"_id": "4607bf5e77a2f6401a8400a933d7d995", "text": "The selling price is also determined by the big sister returns an uint256 sell price .", "title": "", "metadata": ""}
{"_id": "aa7e43f579fd2e0f9782bc0ed2759f92", "text": "sell token and send to contributor address .", "title": "", "metadata": ""}
{"_id": "a9558e7f5ebb57122322d16b06a6aa0f", "text": "Block trading .", "title": "", "metadata": ""}
{"_id": "e3f825cada7ca70b372b97b13a5bd69e", "text": "Assigns ownership of a specific opinion to an address .", "title": "", "metadata": ""}
{"_id": "43168d9920d95dc6c401dfcd5323d109", "text": "Function that returns the ( dynamic ) price of a single token .", "title": "", "metadata": ""}
{"_id": "2d44b4ee1400b4bf334075e15c92a3ee", "text": "Transfer tokens from an account to this contract .", "title": "", "metadata": ""}
{"_id": "d4b36d10f354e6b7e5d0bdf111df57fd", "text": "suicide function .", "title": "", "metadata": ""}
{"_id": "448bf77cca4d181f6f4be54567ac9b69", "text": "Getter for Challenge tokenClaims mappings .", "title": "", "metadata": ""}
{"_id": "704f52562e7adf00089cda344810c89c", "text": "Free the memory when the contest ends and all the winnings / refunds are supposed to be claimed .", "title": "", "metadata": ""}
{"_id": "cdb0a58de0b2d5bd4d7bf1b2eb436271", "text": "Modifier function to prepend to methods rendering them only callable by the Etheraffle MultiSig wallet .", "title": "", "metadata": ""}
{"_id": "336a80b32aac322ae96e86b5594b2f10", "text": "Transfer tokens from one address to another or sell them if _to is this contract or zero address .", "title": "", "metadata": ""}
{"_id": "1f965b2273e255702ce1e0ca70ed7435", "text": "Increace Total Supply .", "title": "", "metadata": ""}
{"_id": "2db6f0ef8bc05ee39399919b4f5110db", "text": "If item is for sale then cancel sale .", "title": "", "metadata": ""}
{"_id": "cc5cad700f4d9b72e1d7a88ca0a5bada", "text": "approve is not allowed .", "title": "", "metadata": ""}
{"_id": "151bcb5e09874908ef19b9823565ea06", "text": "Converts an unsigned integert to its string representation .", "title": "", "metadata": ""}
{"_id": "cc414a4acad9c1c81be29068cf858038", "text": "Allows a user to cancel an auction before it's resolved .", "title": "", "metadata": ""}
{"_id": "4bdad344f4bb84dc2569e656dc24b4c4", "text": "Set price percentage for when price is lower than price cutoff to reset to .", "title": "", "metadata": ""}
{"_id": "ec7634818e2e9dabbd17942dceafa19a", "text": "Whether the authorization was successful or not .", "title": "", "metadata": ""}
{"_id": "6e8b63c1f0939e92fb533d14faa7078b", "text": "Sets the SHP token smart contract .", "title": "", "metadata": ""}
{"_id": "228aa53d0f8da8f39ad9865505efaf54", "text": "Transfer a recipients available allocation to _recipient .", "title": "", "metadata": ""}
{"_id": "95f9aab304401173f527df39b7b652be", "text": "Calc bonus amount by contribution time .", "title": "", "metadata": ""}
{"_id": "d26a4ed7844c361dc3b559bc59fb7515", "text": "Dispatch dividends to former owners of a country .", "title": "", "metadata": ""}
{"_id": "1825910cfbe3d5a4a1d35a443aa00cd9", "text": "internal function to update asset earnedBy value for an asset / token .", "title": "", "metadata": ""}
{"_id": "7d94bda07c48b5012c9b9fcaca3101f0", "text": "onlyController changes the location that ether is sent .", "title": "", "metadata": ""}
{"_id": "9d14f34a90dc80af543a3fd44420329a", "text": "Allow developer to unlock allocated tokens by transferring them from OBGAllocation to developer's address .", "title": "", "metadata": ""}
{"_id": "8e4d3df168edb8273da2ca02536a0a72", "text": "withdraw NAC for run by investor .", "title": "", "metadata": ""}
{"_id": "2dc6aa99ac350b03be6b3d1e913b29f1", "text": "updates the current conversion fee can only be called by the manager .", "title": "", "metadata": ""}
{"_id": "2ba2cc0558dd76284818e4dc7d55f77c", "text": "removes an owner .", "title": "", "metadata": ""}
{"_id": "ced2996576a64c0dec75b074c4dfc5bf", "text": "verify if token is in exploration time .", "title": "", "metadata": ""}
{"_id": "395ce92a4317f749de4f83c54db6f272", "text": "Set the owner's fee .", "title": "", "metadata": ""}
{"_id": "68796baf8166823e4d226d3eef80162e", "text": "Process transaction .", "title": "", "metadata": ""}
{"_id": "868c82ad49d11b912adf51af790349bd", "text": "TLSNotary for oraclize call .", "title": "", "metadata": ""}
{"_id": "8d72fa9e82e3f377a6603570d8a61308", "text": "The name of the token .", "title": "", "metadata": ""}
{"_id": "ccf7cb88e10d6364e85800a996620bfc", "text": "Transfers raised funds to company's wallet address at any given time .", "title": "", "metadata": ""}
{"_id": "55965819b067cf21a584d6bf59017e46", "text": "Only profiterole contract allowed to invoke guarded functions .", "title": "", "metadata": ""}
{"_id": "1c98004ab0a6467bd84c59ba31e522f2", "text": "Remove users from allocation list .", "title": "", "metadata": ""}
{"_id": "e8c958dc22de549ba0a770c605c0360d", "text": "Check the funder step lock .", "title": "", "metadata": ""}
{"_id": "36a26533157433870cc2d3211d25c22c", "text": "the owner can set the creation price .", "title": "", "metadata": ""}
{"_id": "c32f1f71041727e95824a01c8475d182", "text": "Allows owner to set new monetha address .", "title": "", "metadata": ""}
{"_id": "782535395061e8dcd5877bff547e8ab8", "text": "Operation modifiers for access to any Manager .", "title": "", "metadata": ""}
{"_id": "81a7c34ff1c66e51a40044d5e280a432", "text": "Verify that claim params are correct and the link key wasn't used before .", "title": "", "metadata": ""}
{"_id": "abb82d780b3fde0c0492a2df9650c62f", "text": "Compute the amount of UBET token that can be purchased .", "title": "", "metadata": ""}
{"_id": "1bee08959c99bd88a07932eb8e2e96e5", "text": "Function to check permissions of a manager .", "title": "", "metadata": ""}
{"_id": "ca1b1d865cb429fa0c141223eb485fe1", "text": "Checks if the soft cap was reached by the fundraiser .", "title": "", "metadata": ""}
{"_id": "f7c1cf6b692345d86a1e5c58f1c935e6", "text": "update token price in wei .", "title": "", "metadata": ""}
{"_id": "6401ad7e2ae1e3a766fbad539306ddb8", "text": "Returns number of declared public offering plans .", "title": "", "metadata": ""}
{"_id": "0d5b92c33d068af34ce1f789b91eb643", "text": "Convert an hexadecimal string to raw bytes .", "title": "", "metadata": ""}
{"_id": "0fa0d0651b4a338aed0f47f09e8f81ae", "text": "Get the handle owner .", "title": "", "metadata": ""}
{"_id": "69380d19fee844e057ba0d2108c33e6b", "text": "Public Transaction API .", "title": "", "metadata": ""}
{"_id": "974731e84e9a47f2e7014acd7b5f8f26", "text": "Rebuild the previous invest data back to the crowdsale .", "title": "", "metadata": ""}
{"_id": "dc0a8029fdf0ef4ad92ac42b33490ee3", "text": "total users .", "title": "", "metadata": ""}
{"_id": "868b8b78425a3ee1852a661bf8b99cc0", "text": "Returns number of tokens that can be bought from seller .", "title": "", "metadata": ""}
{"_id": "637de535d007519015ed0c4ca715cfdf", "text": "Create a new token and stores it .", "title": "", "metadata": ""}
{"_id": "afd8038de5023d30ac18903aa68dbecf", "text": "Token offering is ended .", "title": "", "metadata": ""}
{"_id": "dd5557f821ff6e9f0d163bd37e1df2cb", "text": "Updates the minimum payment required for calling giveBirthAuto ( ) .", "title": "", "metadata": ""}
{"_id": "f95caf256d6f99e1c3a30d450f94a443", "text": "Test redfunding .", "title": "", "metadata": ""}
{"_id": "dc91c35620d250227d7f953af1084c12", "text": "external functions for investors .", "title": "", "metadata": ""}
{"_id": "cfb800c783f16ff8ce49d74ae5362d50", "text": "Sell amount tokens to contract * 10 * * ( decimals ) ) .", "title": "", "metadata": ""}
{"_id": "18918e4a75bc3880788b14be7200a701", "text": "transfer the same amount of tokens to each address of a list .", "title": "", "metadata": ""}
{"_id": "9634758ba4cd9cd8f8b2355dfb2b0934", "text": "Set fee collector .", "title": "", "metadata": ""}
{"_id": "591cb046af1d0207601c298a08d6bd3e", "text": "Start vesting , Vesting starts now ! ! ! as long as TOKEN IS NOT PAUSED .", "title": "", "metadata": ""}
{"_id": "94446d17729120c90f9d83d8ddbd2288", "text": "Creates a new gen0 kitty with the given genes and creates an auction for it .", "title": "", "metadata": ""}
{"_id": "ed8da9f764b29d49f9a5719f2948217a", "text": "setting configuration .", "title": "", "metadata": ""}
{"_id": "2b637fb0120e2243f9ca6a9dbe818048", "text": "handle dividends .", "title": "", "metadata": ""}
{"_id": "ce28c6c699f492f3e9b160d4cf19fd29", "text": "Start the auction .", "title": "", "metadata": ""}
{"_id": "6f33cc6e08a5abd8871ed0289798a558", "text": "Slash a transcoder .", "title": "", "metadata": ""}
{"_id": "a3d3602f47a563eedc7fa4f2431b63a8", "text": "Modifier function to prepend to methods to render them only callable when the frozen toggle is false .", "title": "", "metadata": ""}
{"_id": "ad3132c7165ddead244dfd26609c5817", "text": "Given a token Id , returns a string with metadata .", "title": "", "metadata": ""}
{"_id": "1ee798fac9d9a35ec2f091aa7d866b78", "text": "Bank tokens .", "title": "", "metadata": ""}
{"_id": "4eab55dc7567550d823f391c68f8d5be", "text": "Buys votes for an option , each vote costs voteCost .", "title": "", "metadata": ""}
{"_id": "5c4b7519cf921580c27d3853a682ca94", "text": "START Debug methods .", "title": "", "metadata": ""}
{"_id": "e53c4f79fbe5515d50662593be8ae08d", "text": "Allow presale owner to close early or extend the presale .", "title": "", "metadata": ""}
{"_id": "24a4b9147c51657fd25f6464c4dace52", "text": "check fund controls before forwarding call to standard token allowance spending function .", "title": "", "metadata": ""}
{"_id": "5b0f73b7e207c88243fb9817ca6e33bc", "text": "Called by a voter to claim their rewards for each completed vote .", "title": "", "metadata": ""}
{"_id": "5b66a945692802fd1f76eca7cc1c316e", "text": "Modifier to make a function callable only when the contract is private fund not end .", "title": "", "metadata": ""}
{"_id": "1f2ed6b89c5533e742d3110b50528ecb", "text": "Lets the owner withdraw ethers from contract .", "title": "", "metadata": ""}
{"_id": "eed70d4e4a9f844368d77c0217bb8fe3", "text": "Private transfer , can only be called by this contract .", "title": "", "metadata": ""}
{"_id": "73b4a72be92f4799cf075900f89fbe79", "text": "Indicates that preICO starts and not finishes .", "title": "", "metadata": ""}
{"_id": "58815209b91b8815b248ab46da764ef2", "text": "The generation of an asset if limited via the generationSeasonController .", "title": "", "metadata": ""}
{"_id": "6a3633886ca40ca72d85a26098bc8b52", "text": "get Gift property .", "title": "", "metadata": ""}
{"_id": "366bcd3bcadde7a64b4969af65eb9a83", "text": "Offer canvas for sale to a given address .", "title": "", "metadata": ""}
{"_id": "13016f4ead27432defd35054561cf9a8", "text": "Process a payment that prioritizes the use of regular tokens .", "title": "", "metadata": ""}
{"_id": "51db6f39a8b7bf98bb197855e5d9d53d", "text": "Only the owner of the token smart contract can add allow token to be transfer before the trading has started .", "title": "", "metadata": ""}
{"_id": "b026105f4396c4ed9fe74870ac56cfc3", "text": "Set current ICO price price in wei for one metadollar .", "title": "", "metadata": ""}
{"_id": "f1e34bd2a432013051f552edef8e36fe", "text": "The contract is not payable by design , but could end up with a balance as a recipient of a selfdestruct / coinbase of a mined block .", "title": "", "metadata": ""}
{"_id": "4a7cd3a372b028838be4dbc0c054eb49", "text": "Our daemon will clear daily summon numbers .", "title": "", "metadata": ""}
{"_id": "ab246f2b0be8384f612811e338527ecf", "text": "Checks if contributor is whitelisted ( main Whitelistable function ) .", "title": "", "metadata": ""}
{"_id": "2210f8238e6de02309977757ee27eb47", "text": "Method of repayment users .", "title": "", "metadata": ""}
{"_id": "5dac2136a5ca76d3b3295ef25708773e", "text": "Enable or disable auctions .", "title": "", "metadata": ""}
{"_id": "f15e23773fc6a2229fd2ce886a9ef2ab", "text": "Function to pay the previous owner .", "title": "", "metadata": ""}
{"_id": "ff4e7c744a0db11b0cdeb9142b32e6f9", "text": "generate a random number .", "title": "", "metadata": ""}
{"_id": "7232e8dba0c7ac9560e86238dd69548a", "text": "Used later to calculate the number of confirmations needed for tx .", "title": "", "metadata": ""}
{"_id": "3599cbb29d6e42c564b416bdac21f6b0", "text": "Buy a token at presale price .", "title": "", "metadata": ""}
{"_id": "8253e1bc920745dfe05e3066bd83fadb", "text": "Returns the details of a specific event .", "title": "", "metadata": ""}
{"_id": "f356044a2fa75fbd8ccdb1b389df8fad", "text": "Returns the ERC20 allowance of one party to spend on behalf of another .", "title": "", "metadata": ""}
{"_id": "5253020b1dbb6cc8556eb889bbe9b6aa", "text": "To call to start the crowdsale .", "title": "", "metadata": ""}
{"_id": "21f0e20198750f234982bcc0ff8f9401", "text": "This function is used to return isWinnerSelected .", "title": "", "metadata": ""}
{"_id": "59480c709855171196d00fafa91a7c10", "text": "remove key addr to the list of master keys .", "title": "", "metadata": ""}
{"_id": "3893a8aa7677f6e37e5c8750fcc8ae73", "text": "Freeze EDU tokens for TeamAndAdvisers for 1 year after the end of the presale .", "title": "", "metadata": ""}
{"_id": "06791321028cccc15f3d9ed5c545da84", "text": "Fill a bid with an indexed piece owned by the registrar .", "title": "", "metadata": ""}
{"_id": "0c3af6e6949ef7e330f5ce2d7cd76f7e", "text": "Public Info View - what is being traded here , what are the limits ? .", "title": "", "metadata": ""}
{"_id": "220c4e21866c2a0dc5f00210ad603dc0", "text": "Pays random number from epoch_fund .", "title": "", "metadata": ""}
{"_id": "68b85af0f86248014532cd446b510962", "text": "Return POLY raised by the STO .", "title": "", "metadata": ""}
{"_id": "a14f110bf232ed5f01c67a91a8cfb1dc", "text": "change presale preiod .", "title": "", "metadata": ""}
{"_id": "efef4b18b8474e44f7f7a20bad98bf9b", "text": "utlitiy function for easy testing can be removed later .", "title": "", "metadata": ""}
{"_id": "59457b352d8a560b6bdfe6e9840a2d25", "text": "returns if an address is approved to manage all another address' pixels .", "title": "", "metadata": ""}
{"_id": "245dfde7517f3cc01af77e8dcb1478cf", "text": "Get the hero's BP .", "title": "", "metadata": ""}
{"_id": "68f0e09d2f36ae325b28a0ba779c5956", "text": "Function used for funding in case of refund .", "title": "", "metadata": ""}
{"_id": "def36f74929bc650f05ea9413208f1a9", "text": "Only owner of the contract .", "title": "", "metadata": ""}
{"_id": "85b1dc208be0d701cc4dfd09706f857d", "text": "Removes an sale from the list of open sales .", "title": "", "metadata": ""}
{"_id": "70980f6788e5ad522c0ef03631f6ea32", "text": "Transfer ownership of a DIN .", "title": "", "metadata": ""}
{"_id": "2b4a20b75fa006990fe31eab0e030200", "text": "set role value .", "title": "", "metadata": ""}
{"_id": "a4e4eb8c08437cacbc1648d5fbec581c", "text": "Maintenance function reserved to back end , removes an account from the list .", "title": "", "metadata": ""}
{"_id": "74edcab0607e5fa477da2510dde370d7", "text": "Get the total coin supply .", "title": "", "metadata": ""}
{"_id": "e1d8a725b0838a84dc4337958ae6327d", "text": "How much someone allows you to transfer from his / her address ____________________________________________________________________________________ .", "title": "", "metadata": ""}
{"_id": "df40202e0e1ad71ea809c472f8fc35d0", "text": "Retrieves your currently selected dividend rate .", "title": "", "metadata": ""}
{"_id": "3b6cce2addda71be45f0d3a7ff527aaa", "text": "Return pending manager address .", "title": "", "metadata": ""}
{"_id": "36e1c70a1c3830e1002371a90c34bfb5", "text": "Creates a new Player with the given name .", "title": "", "metadata": ""}
{"_id": "106249cde62bed9480e33921a1714a8c", "text": "ERC20 additional and overloaded functions .", "title": "", "metadata": ""}
{"_id": "ee12401f59849a8a28ddb08e69ac3e5e", "text": "Hash of the payment promise to sign .", "title": "", "metadata": ""}
{"_id": "07ac2a982134ea99238e55f9c391a8cd", "text": "Check whether the game should be terminated , and if it should , terminate it .", "title": "", "metadata": ""}
{"_id": "ea654cb87bb2f1fd7a2889bef6a8bd50", "text": "Get the number of Tokens available for the current account private placement .", "title": "", "metadata": ""}
{"_id": "2a1e1ae8e35d872084dae4d3b2d6a781", "text": "Withdraw tokens only after whitelisted ends and after crowdsale ends .", "title": "", "metadata": ""}
{"_id": "c2eb1772e69ed20f59e03f41429fd6eb", "text": "Team and tokens unfreeze after 365 days from contract deploy .", "title": "", "metadata": ""}
{"_id": "a81ce2a14c4755a2549b2ba04444e54e", "text": "replace uncursed tokens with cursed tokens .", "title": "", "metadata": ""}
{"_id": "6d1a8bb8ff5823f5b5f79cad24eceb74", "text": "Some percentage of the tokens is already reserved for marketing .", "title": "", "metadata": ""}
{"_id": "867feeb6092326dc47414d3f8b5de2c6", "text": "for quick overview of possible buyerBalances to calculate the possible withdraw tokens .", "title": "", "metadata": ""}
{"_id": "7d054882fcf5576293fcb85657a1893d", "text": "adds validated contract .", "title": "", "metadata": ""}
{"_id": "5d1ce1d3528b2884c851e4f270d1815a", "text": "When token is released to be transferable , enforce no new tokens can be created .", "title": "", "metadata": ""}
{"_id": "d636d4b55e2655366caadfc03f9df72b", "text": "send tokens from your address .", "title": "", "metadata": ""}
{"_id": "b1d53fd7d778ee06d7e2a004d278b21e", "text": "bonus to casino which has the specific id .", "title": "", "metadata": ""}
{"_id": "28460ce6fedcb0eedce0eed853340d17", "text": "NOTE : this should never return true unless this contract has a bug .", "title": "", "metadata": ""}
{"_id": "e3413c95dc0566fa9e7b8973df2de12e", "text": "Condition is the same as above .", "title": "", "metadata": ""}
{"_id": "0ac57f88d28c8ee43d5828a2472e0de7", "text": "Modifier to make a function callable only when unsold tokens are burnt .", "title": "", "metadata": ""}
{"_id": "dc4fd6ee13488e3fed1ada4d8086d96c", "text": "Deploy ANT is called only once to setup all the needed contracts .", "title": "", "metadata": ""}
{"_id": "d7c77defb509690cd407f38fd759e34b", "text": "standart ERC-20 function approve your token balance to another address .", "title": "", "metadata": ""}
{"_id": "cd455f00c014c2967ec8a0691eb45063", "text": "function to send initialFUnd .", "title": "", "metadata": ""}
{"_id": "4ffc5f576af2a74145c27c3ac45867ae", "text": "this function is called when someone buys a token from someone else .", "title": "", "metadata": ""}
{"_id": "3001e6d9ce39cd30189862e1fd090139", "text": "Allows this coin to be traded between users .", "title": "", "metadata": ""}
{"_id": "474146d9dc91f22c2bb5945c838b0c71", "text": "Returns the number of games a player completed .", "title": "", "metadata": ""}
{"_id": "e8157e3b5bd5e35937a9e99f08a46cce", "text": "Counts the exact amount of Wei to get send to the charity .", "title": "", "metadata": ""}
{"_id": "1f94487faa348598c8913a8ed459caba", "text": "Withdraw funds to the user account .", "title": "", "metadata": ""}
{"_id": "ab022b4a8d14264db06c5d539dd85605", "text": "Sell tokens to the contract .", "title": "", "metadata": ""}
{"_id": "a5a35077876ec3e171bfee92ae7dc9da", "text": "Set owner to zero address , to disable mint , and enable token transfer .", "title": "", "metadata": ""}
{"_id": "e78bcfab2878ddba800bde7f4faba167", "text": "This function is automatically called when ICO is started .", "title": "", "metadata": ""}
{"_id": "0ed3527f32cf548aa90d9d915f2c2708", "text": "Update winner bid .", "title": "", "metadata": ""}
{"_id": "2faed80c8354d8da41972ff17a0a4671", "text": "Burns ETF tokens .", "title": "", "metadata": ""}
{"_id": "0c44de3097ddc468ebeb6c2f3566ec31", "text": "Deposit and withdraw .", "title": "", "metadata": ""}
{"_id": "ad740050a250aff714129a9d7d2a8521", "text": "Check if participant is allowed to contribute in current tier .", "title": "", "metadata": ""}
{"_id": "bdd4038750b917a152e0b847a2130fd7", "text": "Change the whitelist manager .", "title": "", "metadata": ""}
{"_id": "234b644a77695c7b950ad221e8bf9687", "text": "Returns the current color of a specific position in a board .", "title": "", "metadata": ""}
{"_id": "afd2614be38746d3a0181f3339bbad91", "text": "Checks input and then creates storage buffer for reserved token distribution .", "title": "", "metadata": ""}
{"_id": "9ec783761452f18eee4bb8856a2cf6e7", "text": "After sale end .", "title": "", "metadata": ""}
{"_id": "c8479191e076448239b4e33bdc0fb9bd", "text": "function to withdraw eth to creator address .", "title": "", "metadata": ""}
{"_id": "185139f18aa07cb1abf336a91fc8f07a", "text": "Investors can claim refunds here if crowdsale is unsuccessful .", "title": "", "metadata": ""}
{"_id": "713e22d8fe355970eb7c65090817a1aa", "text": "Compute the amount of SUC token that can be purchased .", "title": "", "metadata": ""}
{"_id": "1c7946c7cdb6cf0f204e3800a99d17cf", "text": "Throws if called by any account other than the owner or allowed .", "title": "", "metadata": ""}
{"_id": "f6daf852bfe78e3312d3e7c54ebf9290", "text": "sets token Cap ( maximum possible totalSupply ) on Crowdsale finalization .", "title": "", "metadata": ""}
{"_id": "eae6bfd364c1fc69cdcf5e183475548b", "text": "Create an amount of token .", "title": "", "metadata": ""}
{"_id": "2655c3593af58dbdb679e04aec1dfa9f", "text": "STEP 5 : Generate a random number between 0 and the sum of purchased tickets , using Oraclize random DS .", "title": "", "metadata": ""}
{"_id": "78c4abc595b7b07e3a3aa08d3eaa21c0", "text": "Called when user cannot buy tokens .", "title": "", "metadata": ""}
{"_id": "635f11e529745be25faf3329087a4a2e", "text": "modifier to allow contribution only when the sale is ON .", "title": "", "metadata": ""}
{"_id": "365bc042d7efbf47d9475cbfa34a8764", "text": "If now is during service-free promotion , return true ; else return false .", "title": "", "metadata": ""}
{"_id": "49174f3ae66e75a3b40025a9dceb3d45", "text": "Checks if Contract is running and has not been stopped .", "title": "", "metadata": ""}
{"_id": "cfa719daaba1075895250851cfe6d53c", "text": "Uses for overwork manual Blocked contract for ICO time .", "title": "", "metadata": ""}
{"_id": "218465ba34e77d4b7d36cf6ace00ea1d", "text": "this method is used to modify parentID if needed later ; .", "title": "", "metadata": ""}
{"_id": "9ba83299622749eb167d9eabf518284f", "text": "called by the owner to set a new _icoAgent or remove one .", "title": "", "metadata": ""}
{"_id": "352dcf080d6891b316f0c98faebe5fcc", "text": "Sets the start and end of the sale .", "title": "", "metadata": ""}
{"_id": "2457986d747a3c9ff236a15e0dbdec95", "text": "get token release time of forth round .", "title": "", "metadata": ""}
{"_id": "ee64e7f52e763765f5c902e314e01a1d", "text": "Allows to users withdraw eth in frozen stage .", "title": "", "metadata": ""}
{"_id": "6e203186699fd35c11fc425cf15ec039", "text": "transfer BIGER token to _to with amount of _amount .", "title": "", "metadata": ""}
{"_id": "9604f7d0eb986953463376ca0b70b50a", "text": "Is the address that the token has come from actually ZTH ? .", "title": "", "metadata": ""}
{"_id": "2cfdd27210d8ffbb01891d27d6e01e4a", "text": "Shows if crowdsale is running .", "title": "", "metadata": ""}
{"_id": "6d97360c32ddb8be0efb4a5e3b42a0ed", "text": "These helper functions are exposed for changing the start and end time dynamically .", "title": "", "metadata": ""}
{"_id": "a8d1a542d49b610dc5b1efb03003866a", "text": "Returns how many tokens would be issued for _ethAmt sent , depending on current totalRaised .", "title": "", "metadata": ""}
{"_id": "72851c98d99c243a42e76a493cb38d00", "text": "revoke vesting ; release releasable funds to beneficiary and return remaining to master and kill vesting contract .", "title": "", "metadata": ""}
{"_id": "1bee8d03bd34b72380b039e33d47c8a8", "text": "Starts ICO , making ICO contract owner , so it can mint .", "title": "", "metadata": ""}
{"_id": "c83066dd8076baab0db22b42a460e988", "text": "Ether remaining for tier .", "title": "", "metadata": ""}
{"_id": "5774b7c6457aa6b9d613e3e92a68e3a3", "text": "Removes all attachments from collectible .", "title": "", "metadata": ""}
{"_id": "f1b4c9917f9cfb026835d4d00e84a039", "text": "Adds other ERC-20 functions .", "title": "", "metadata": ""}
{"_id": "5601c091deb40e6d6f757b5efbf59705", "text": "An internal function to calculate the difficulty of a dungeon floor .", "title": "", "metadata": ""}
{"_id": "79adb41ba4e12ae009e914b55e091118", "text": "Takes oraclize random . org .", "title": "", "metadata": ""}
{"_id": "6435eeb256575c84844bdd422b1c025e", "text": "payment code here .", "title": "", "metadata": ""}
{"_id": "74a37a57f2888f716b9b3a717bbb251e", "text": "Unregister DSP and return unused deposit .", "title": "", "metadata": ""}
{"_id": "8abb5db7d6b41dd1b32edce611281573", "text": "returns price in units token2 / token1 .", "title": "", "metadata": ""}
{"_id": "e3048ec6de4d5ab97b2ba5aabc7613a7", "text": "Function to issues tokens for investors .", "title": "", "metadata": ""}
{"_id": "b3af605473786bc4e4ed7fb71cf06140", "text": "Get specified period by index .", "title": "", "metadata": ""}
{"_id": "650e6a86f1d9063566d65259343f72f9", "text": "allows the owner to change the signer address .", "title": "", "metadata": ""}
{"_id": "4f0c198b28b58bd1607533f6b354a28d", "text": "This function is used to set the reward for the winner .", "title": "", "metadata": ""}
{"_id": "ca1df8dc15b0c7da10ba9d65b37ab412", "text": "Returns symbol of tokens .", "title": "", "metadata": ""}
{"_id": "f959daf4b5a18623e0c9b72a893f6286", "text": "set new rate for crowdsale .", "title": "", "metadata": ""}
{"_id": "4a2a7fea8fa6c2610d574b8d002c54a2", "text": "internal , private .", "title": "", "metadata": ""}
{"_id": "e6ff51c0bc76ca20d9f2cc3620c86f63", "text": "called by CrowdsaleController to transfer reward part of tokens sold by successful crowdsale to Forecasting contract .", "title": "", "metadata": ""}
{"_id": "f6bd1b0b3f3bbca1a217e93fad531e06", "text": "transfer modifier .", "title": "", "metadata": ""}
{"_id": "5d83376201febcf35c5777e963a9c9c4", "text": "Sets new wallet address for profiterole .", "title": "", "metadata": ""}
{"_id": "eec3f4139a203f72e03da35330924ce1", "text": "Returns the token id that may transfer from _owner account by _spender . .", "title": "", "metadata": ""}
{"_id": "d6b2c36b7a090a99391efe35d60a695b", "text": "Set a custom fee for this particular question .", "title": "", "metadata": ""}
{"_id": "790ed33c87cfa2e7696a6676f4351df7", "text": "ptr : An updated pointer , pointing to the end of the EMITS action request in memory .", "title": "", "metadata": ""}
{"_id": "0e26a4b8e760c750167795ea622f1252", "text": "Change eUSD contract address .", "title": "", "metadata": ""}
{"_id": "0ef1b450d8985af163f800a9096ec763", "text": "Checks to see if a given LinglongCat is pregnant and ( if so ) if the gestation period has passed .", "title": "", "metadata": ""}
{"_id": "9a80e9ff653365f3b7c857193634b142", "text": "payments stuff .", "title": "", "metadata": ""}
{"_id": "495e28beb3d12d6f2589f2e89a7a4842", "text": "Remove all PVP contenders from PVP queue and return all entrance fees to warrior owners .", "title": "", "metadata": ""}
{"_id": "5255566f699c54362853929d0c8c859a", "text": "New owner can accpet ownership .", "title": "", "metadata": ""}
{"_id": "f00511c165370b3c7102d8efd0370a56", "text": "Remove single address into the whitelist .", "title": "", "metadata": ""}
{"_id": "1861562ff188de59fdd496d5574fe9ec", "text": "Returns user details ( including cased username ) by any cased / uncased user name that maps to a particular user .", "title": "", "metadata": ""}
{"_id": "7ec59f84c77d1025e333786e19c8a5b7", "text": "Update highest bid or top up previous bid .", "title": "", "metadata": ""}
{"_id": "7210c7d1065dc0998e65c8ea5a25718c", "text": "Returns a whole amount of metadollars .", "title": "", "metadata": ""}
{"_id": "9def6bb6639f24967914e4f9355bf79a", "text": "Return a reward for each MonarchyGame that will end .", "title": "", "metadata": ""}
{"_id": "a882e5faad965fa8ef36da1c351fcf70", "text": "helper method that allows owner to unpause withdrawls for any address .", "title": "", "metadata": ""}
{"_id": "a3acfac705f69ce43d5a491a817fea7f", "text": "listing functions .", "title": "", "metadata": ""}
{"_id": "cc64a2a71695085e14563cb2a0ce33f8", "text": "ERC20 function .", "title": "", "metadata": ""}
{"_id": "eab22cb992da3870fa71b6e7b9a7c7be", "text": "_amountCents can be negative returns index in user array .", "title": "", "metadata": ""}
{"_id": "d73741c2d95a43621779e1bc7cf647bf", "text": "change the owner of the contract .", "title": "", "metadata": ""}
{"_id": "50869f0287ff079ba4f448466af1b802", "text": "Start lockup periods .", "title": "", "metadata": ""}
{"_id": "4d8c8e27f82d1863538f715ffa23ccb8", "text": "Allows owner to set new time tolerance on Oraclize queries .", "title": "", "metadata": ""}
{"_id": "e7b5498df057f87259ccf7b59e0cc5d6", "text": "Add 62 . 5 .", "title": "", "metadata": ""}
{"_id": "98b9a4e858c9be58f54ff633c4421d9a", "text": "Close crowdsale , finish minting ( allowing token transfers ) , transfers token ownership to the founder .", "title": "", "metadata": ""}
{"_id": "9bd9ba070f248235457fe962233dc6af", "text": "Get balance of an account .", "title": "", "metadata": ""}
{"_id": "c0b561d8a9346e07cd633705c9d5ead0", "text": "internal function to check and revert all actions by removed owner in this contract .", "title": "", "metadata": ""}
{"_id": "4ded3225744a5eee2fb7b9ce2ba73263", "text": "Backwards compatibility .", "title": "", "metadata": ""}
{"_id": "f694d9de6796ef2e463e88e4416c8a73", "text": "Creates a new contract for a vesting fund that will release funds for the beneficiary every quarter .", "title": "", "metadata": ""}
{"_id": "39d445e56b7b516f8d1713adea1893ba", "text": "used to change the fee of the setup cost .", "title": "", "metadata": ""}
{"_id": "aa1de8d76e7af4974b6c362d0b1725df", "text": "Owner check modifier .", "title": "", "metadata": ""}
{"_id": "eba613c914e4fd6616cb32ed6ddab025", "text": "Is currently the crowdfund period .", "title": "", "metadata": ""}
{"_id": "e545ee403676afcb3227e3964c68b239", "text": "create forecast , check game stop .", "title": "", "metadata": ""}
{"_id": "05e4497eb089d104cef0c10eb81de568", "text": "Max supply .", "title": "", "metadata": ""}
{"_id": "7c4c4853688b5754aa344bda4ce33060", "text": "Initialize all getter methods .", "title": "", "metadata": ""}
{"_id": "aafa3a72b733438351fd6bf067b80ee0", "text": "get teller return teller info .", "title": "", "metadata": ""}
{"_id": "bcfbde88f7f64500325d56a754a3e283", "text": "Create a new contract ( and also address ) that forwards funds to this contract returns address of newly created forwarder address .", "title": "", "metadata": ""}
{"_id": "0adcc927d6cadd7254d0c8513a351009", "text": "Constans functions .", "title": "", "metadata": ""}
{"_id": "c29219dcc7ca5a7a4da58609d459b87d", "text": "Returns all the relevant information about a specific collection .", "title": "", "metadata": ""}
{"_id": "b57081c23ed3afdacd683a12e6353573", "text": "Set _status for _addr .", "title": "", "metadata": ""}
{"_id": "41e25f58f52e33fec03d1811bcabe6db", "text": "Grant another address the right to transfer a specific Zodiac via transferFrom ( ) .", "title": "", "metadata": ""}
{"_id": "fc60dc928a2eb44beac65aa4e5ce5194", "text": "check whether the address is in the white list .", "title": "", "metadata": ""}
{"_id": "da9d56c4a459e839bb8ccbc28af95f61", "text": "Removes / deactivates oversight address addr .", "title": "", "metadata": ""}
{"_id": "d080cf66126a8dfde42fb08b2f61f846", "text": "Contracts can't list cards without contacting us ( wallet addresses are unaffected ) .", "title": "", "metadata": ""}
{"_id": "1fcaaa69ea3cf8234c6e537ca4e0998a", "text": "Extend public sale discount time .", "title": "", "metadata": ""}
{"_id": "e7d3c9600165e62c0d2279382ef9c3d3", "text": "Sends request to change settings .", "title": "", "metadata": ""}
{"_id": "140274b4b713138b63f1c8e41a0251e7", "text": "modifier for pause constract .", "title": "", "metadata": ""}
{"_id": "a6984a9605a0135f9d582ba6b98e8fb7", "text": "Internal function that is used to determine the current rate for token / ETH conversion .", "title": "", "metadata": ""}
{"_id": "b139169490603c6e01e2b6ce61afca49", "text": "Deposit ether with smart contract to allow refunds .", "title": "", "metadata": ""}
{"_id": "570733cea7738f4910c13f3d747adaee", "text": "Set inflation and mintable tokens for the round .", "title": "", "metadata": ""}
{"_id": "2e04ceb2ef62263d03665b497977c2f3", "text": "Returns the token data associated with a token id .", "title": "", "metadata": ""}
{"_id": "c815e045a61d066c8278702ef8a420e8", "text": "Set initial tokens balance when making a first withdraw .", "title": "", "metadata": ""}
{"_id": "4e3c056ec39fa6347f1a1d6879f49001", "text": "InvestContract part .", "title": "", "metadata": ""}
{"_id": "e4030374360c6bf2f6045c436915a979", "text": "buy Chibis with Founders .", "title": "", "metadata": ""}
{"_id": "33dd1e787bfbda04dea06b2f9b31cf97", "text": "Change the dividend card address .", "title": "", "metadata": ""}
{"_id": "1244cbe2e1f5147f8b7f2863c5eab8db", "text": "The reasoning behind this method to get a random number is , because I'm not displaying the current number of players , no one should know who the 11th player will be , and that should be random enough to prevent anyone from cheating the system .", "title": "", "metadata": ""}
{"_id": "58f8b1b9c31d88652881e2cc80d37f03", "text": "Amount of token in possession .", "title": "", "metadata": ""}
{"_id": "5387372620c489b41bd0279770767d85", "text": "transfers crowdsale token from mintable to transferrable state .", "title": "", "metadata": ""}
{"_id": "0e13af7ede2b8f3ca65649d3d07f2a10", "text": "Get token creation rate .", "title": "", "metadata": ""}
{"_id": "5c7c081ebd0e12f7bbc86091828e4520", "text": "Change the company wallet .", "title": "", "metadata": ""}
{"_id": "ba10068a248b51898a334b746b740d04", "text": "calculates points from the last two matches .", "title": "", "metadata": ""}
{"_id": "ffeea720299a1c02b5e41d1387e8efa6", "text": "helper , dispatches the Conversion event .", "title": "", "metadata": ""}
{"_id": "faf4758e3c2e71b5a039045bbdf890e2", "text": "Performs a delegatecall and returns whatever the delegatecall returned ( entire context execution will return ! ) .", "title": "", "metadata": ""}
{"_id": "0c0459f38799b013c669cfc60171c92c", "text": "Update reward amount .", "title": "", "metadata": ""}
{"_id": "ba94a2d205a8a495834041f6731e9a10", "text": "Deliver tokens to receiver_ after crowdsale ends .", "title": "", "metadata": ""}
{"_id": "27e960ef4389315ef41c79d61d0395fe", "text": "manually triggers the steal ( by oraclize ) .", "title": "", "metadata": ""}
{"_id": "0887406a9ac85f97556b471eb2e87d46", "text": "This modifier performs the conditional transitions and checks that the function to be executed is allowed in the current stage .", "title": "", "metadata": ""}
{"_id": "d6e019049ecf514f794e1d0c32286fe6", "text": "This function is a way to get other ETC20 tokens back to their rightful owner if sent by mistake .", "title": "", "metadata": ""}
{"_id": "473c996da189d80718684ceb051896d0", "text": "Returns balance of the _owner .", "title": "", "metadata": ""}
{"_id": "d2f7008a46c5b3927cf8e87020f0bb53", "text": "Function to register a manifest .", "title": "", "metadata": ""}
{"_id": "ff0e94e9c130eb47a697e3ecbde253ee", "text": "for payments in other currencies .", "title": "", "metadata": ""}
{"_id": "7d0e1475ada0f1c007f085b0c1578664", "text": "endIco closes down the ICO .", "title": "", "metadata": ""}
{"_id": "ba660916b21bd1ab5926a1e4ad8cd767", "text": "Returns an ( off-chain ) metadata url for the given deed .", "title": "", "metadata": ""}
{"_id": "352d7e108267b199fef8e0ded8dd0669", "text": "Perform multiple token transfers from message sender's address .", "title": "", "metadata": ""}
{"_id": "0c4caaa7178557b3a9f9cd4b291d0c38", "text": "list a part for auction .", "title": "", "metadata": ""}
{"_id": "1a668a8aec46cec8e9bb8c78ad524c1a", "text": "Buy NelCoin using ETH .", "title": "", "metadata": ""}
{"_id": "b0c6a5f0910ded72850340e88f82f834", "text": "Modifiers of the contract .", "title": "", "metadata": ""}
{"_id": "1ccd3ff51a8e9ed926c678391dbbd0ef", "text": "Get how many months have passed since the contract was deployed .", "title": "", "metadata": ""}
{"_id": "13e938a9f39454aec33e93646bdac079", "text": "list allows a party to place an order on the orderbook .", "title": "", "metadata": ""}
{"_id": "2208ad6d466e208beac2ef27bc738928", "text": "Withdraw funds after unstaking .", "title": "", "metadata": ""}
{"_id": "5f106a1ce97bb7eb16ed78f7af9d3e8a", "text": "set an existing server as offline .", "title": "", "metadata": ""}
{"_id": "cdd9b3623a67cf9db35d9a6d6d5addf7", "text": "return allocation for given window .", "title": "", "metadata": ""}
{"_id": "ad557b55cde503afa99b400b8117e49b", "text": "Require champ to be sale .", "title": "", "metadata": ""}
{"_id": "ff6217ef8c6807bc260ee6b3ca48c2a4", "text": "in case of _pending true , the function will check the LoansPending .", "title": "", "metadata": ""}
{"_id": "51f4d23908222b6303f8515c137aca3c", "text": "Calculates the amount that has already been vested .", "title": "", "metadata": ""}
{"_id": "8619466ba0605e357aa221c9faa3429a", "text": "Stats getter .", "title": "", "metadata": ""}
{"_id": "ab5e89942e56474a3a22998d1824041a", "text": "read the recast configurations .", "title": "", "metadata": ""}
{"_id": "c4e0e8261d18fe42140a4a56711a6814", "text": "Returns the contribution and refund value to be used when the transaction value is higher than the whitelisted contribution for the sender .", "title": "", "metadata": ""}
{"_id": "17604e5ca42aea17bab94e81cf3df9f3", "text": "sets the amount of gas to be sent to oraclize .", "title": "", "metadata": ""}
{"_id": "8c19f4a95f6fdc52a98ef169491d9ae7", "text": "Participate Presale .", "title": "", "metadata": ""}
{"_id": "6c4d8d34883c761079adaecd8a649dba", "text": "revert if called by any account except owner .", "title": "", "metadata": ""}
{"_id": "a35c8709b3861aca8bd430b7a8cee39e", "text": "Change the the starting time in order to end the presale period early if needed .", "title": "", "metadata": ""}
{"_id": "1d83728ffe4580995cbe9f380fc0f710", "text": "check active game and valid player , return player index .", "title": "", "metadata": ""}
{"_id": "87fbb4288b67006a58416ffbfb8dde22", "text": "Function to mint tokens upper limited by MAX_SUPPLY .", "title": "", "metadata": ""}
{"_id": "7f9e81343ff275678f1ccdffbfab01bd", "text": "After the TGE reaches state 'auditing' , the auditor will verify the legal and regulatory obligations .", "title": "", "metadata": ""}
{"_id": "137fcaadf54623d1a798da1751e22ae4", "text": "Updates the payout for the cryptoColors the owner has .", "title": "", "metadata": ""}
{"_id": "4363043696a89cf888dd0d0a20c5d155", "text": "Create a vesting entry for the specified user .", "title": "", "metadata": ""}
{"_id": "d78c05f768059dcb65c640c7e912995c", "text": "get allowance .", "title": "", "metadata": ""}
{"_id": "f4e5f008e54089cb8e9a848bac071b8f", "text": "Redeem bonus LOT : This function cannot be called until the crowdsale is over , nor after the withdraw period .", "title": "", "metadata": ""}
{"_id": "c5b948bea2f069dc0c19acb1c4de4d18", "text": "Buy with PLAT requires calling BitGuildToken contract , this is the callback call to approve already verified the token ownership , no checks required .", "title": "", "metadata": ""}
{"_id": "7a5d1eed260783d87fa8e93050a9f440", "text": "Returns current ticket price from the main Etheraffle contract .", "title": "", "metadata": ""}
{"_id": "44a55cd71263bfdb67e47c5fe19a2954", "text": "Non-ERC Functions .", "title": "", "metadata": ""}
{"_id": "b95e3cd95892a32c12f551b11920b9a0", "text": "Democ Getters - deprecated .", "title": "", "metadata": ""}
{"_id": "f52c087831f24efa36718b051d95d26d", "text": "ability to add to whitelist even after the sale started .", "title": "", "metadata": ""}
{"_id": "92e370acea93362b133d42a60906c63c", "text": "This function will allow token withdraw from locker .", "title": "", "metadata": ""}
{"_id": "02eef428f3fb1359ddcb3fdb86580195", "text": "The following are computed .", "title": "", "metadata": ""}
{"_id": "c186231ec1d3c254c512000147e0d1e4", "text": "Put a token up for auction .", "title": "", "metadata": ""}
{"_id": "a86a71958fd057d6c7a9252c36f09a08", "text": "start whitelist related functions allow address to buy tokens .", "title": "", "metadata": ""}
{"_id": "58767a0fbc734f21ff0b191d1fa2af58", "text": "enable transfer after token sale and before listing .", "title": "", "metadata": ""}
{"_id": "b148ea916293db080ad83d98b1400637", "text": "check valid player , return player index .", "title": "", "metadata": ""}
{"_id": "6356252f85247b3eb15ddb2151517283", "text": "Gets the numTokens property of getLastNode .", "title": "", "metadata": ""}
{"_id": "99a902b72f59fa4b6cf366f26fe6c51d", "text": "Sets the deployer address .", "title": "", "metadata": ""}
{"_id": "d6534e855a1423363102f95841bb2a51", "text": "whitelist an address so it's able to transfer before the trading is opened .", "title": "", "metadata": ""}
{"_id": "a136f9674f96055094ae55dcb48a96a0", "text": "Assigns ownership of a specific Scene to an address .", "title": "", "metadata": ""}
{"_id": "57036004172c7966394622a00447303a", "text": "Commits votes using hashes of choices and secret salts to conceal votes until reveal .", "title": "", "metadata": ""}
{"_id": "5dd7a1e9830cbadc6a6620027319ecf1", "text": "addFunds teller can add more funds on his sellpoint .", "title": "", "metadata": ""}
{"_id": "f937bee4c9e868b7dbfc9253aa871349", "text": "returns the amount anyone pledged into this contract .", "title": "", "metadata": ""}
{"_id": "d39650233ee8084f1065fce11c2fd971", "text": "Terminate account and send all its balance to advisor .", "title": "", "metadata": ""}
{"_id": "709bd0b7d8d818f42653676fd9414125", "text": "Additions by the FundRequest Team .", "title": "", "metadata": ""}
{"_id": "f7142042e17984098b1ce758a88e3a35", "text": "Transfer ether from smartcontract to admin .", "title": "", "metadata": ""}
{"_id": "082e2a05d22600c05d4f8388d80cbe62", "text": "New owner buys a star that has been offered .", "title": "", "metadata": ""}
{"_id": "8d75bb87772d33dc0cafdca1176d1d12", "text": "Set allowance for another address and call a function .", "title": "", "metadata": ""}
{"_id": "fe6266f9e33a7fe68e7d0445dd539611", "text": "function ( ) public payable .", "title": "", "metadata": ""}
{"_id": "ca4d7a6d7165e6680c996e490fbcacbb", "text": "Checks whether a EtherDog is currently pregnant .", "title": "", "metadata": ""}
{"_id": "bc9ea5f8e615a1953f07714ddd8cda33", "text": "internal function which checks whether the token with id ( _tokenId ) is owned by the ( _claimant ) address .", "title": "", "metadata": ""}
{"_id": "a8f2b1ea3cbcea26d1889c564f23cba0", "text": "Prevent token holder from transfer .", "title": "", "metadata": ""}
{"_id": "2e6e4f180b7ecf22407d4addf516d355", "text": "Change total supply .", "title": "", "metadata": ""}
{"_id": "589fffc5b63d2d9d4900fd4cc3cb4a72", "text": "Deposit ETH to this contract .", "title": "", "metadata": ""}
{"_id": "b01eded9fffde64eb5fbdc6a5969c024", "text": "Sends the funds collected to the addresses icofunding and project .", "title": "", "metadata": ""}
{"_id": "9f55d7d18a60e8019e273a97bf4754af", "text": "Executes the actual trade by transferring balances .", "title": "", "metadata": ""}
{"_id": "235ab26be610f9f209a5429811779c84", "text": "Function for removing tokens from specified account .", "title": "", "metadata": ""}
{"_id": "b9a8c42a7e9172621714719c63e1fc25", "text": "To start a dungeon run , player need to call the attack function with an entranceFee .", "title": "", "metadata": ""}
{"_id": "15b4d1428f4de64cfbd2a91c6fc06942", "text": "Ensures player isn't bannedUser .", "title": "", "metadata": ""}
{"_id": "ed9eb08a1c6eba715da9e9a85d72c703", "text": "Function to get Total Tokens Issued during ICO ( Dev + Sold ) .", "title": "", "metadata": ""}
{"_id": "30a680b01f5f66e0cbc83a58015282ae", "text": "returns 0 . 01 value in Euro .", "title": "", "metadata": ""}
{"_id": "3d9d68670b07dbaf3136c31557a1b5bb", "text": "_a wins if score 0 and _b wins if score 0 .", "title": "", "metadata": ""}
{"_id": "e5920d1f6a4d70056e4d0ec361224484", "text": "Updates internal balance Structures , only callable by the Token contract .", "title": "", "metadata": ""}
{"_id": "0b07767b47856f1da9fd2ef7370fb3c8", "text": "Specify address of token contract .", "title": "", "metadata": ""}
{"_id": "ca585dd2f81ef62f5e555d63cd9c62d5", "text": "this function isn't abstract since the compiler emits automatically generated getter functions as external .", "title": "", "metadata": ""}
{"_id": "d43fdc7fc8ac28e9a018491a0520f3b4", "text": "function to reserve vanityURL 1 .", "title": "", "metadata": ""}
{"_id": "7b2df1eaea7cfa6ffa2c21ea2e07a239", "text": "notice Transfer _value H . N .", "title": "", "metadata": ""}
{"_id": "08d9cd87e0d4fb22d3e8f41cdba60901", "text": "be sure to get the joy token ownerships .", "title": "", "metadata": ""}
{"_id": "3ce89f3ef9651705286c4bbbd91994f3", "text": "Returns information about the current crowdsale tier by time , so that storage can be updated .", "title": "", "metadata": ""}
{"_id": "70277922548fc79d280ef7b3bea43871", "text": "note : contant fcn does not need safe math .", "title": "", "metadata": ""}
{"_id": "2af1e5db4fbb85e81ea79c582582f683", "text": "Updates creditedPoints , sends all wei to the owner .", "title": "", "metadata": ""}
{"_id": "4d3e0863fe7083f057597a5a61e71181", "text": "administrators can : - change the name of the contract - change the name of the token - authorize a new administrator - change how many tokens it costs to hold a masternode ( fat chance ! ) they CANNOT : - take funds - disable withdrawals - kill the contract - change the price of tokens .", "title": "", "metadata": ""}
{"_id": "4ae930880509d63816bd6b5e05d030af", "text": "Check if a player is on board ( overload for boardId ) .", "title": "", "metadata": ""}
{"_id": "731ac77dc0866128da28c3ab490024d7", "text": "Register a new DIN and set the resolver .", "title": "", "metadata": ""}
{"_id": "4abce2a7dfa0ef1d34aca5df872edb65", "text": "Add proposal in Ether .", "title": "", "metadata": ""}
{"_id": "df9575ad7c686048faf2d06a1855bcda", "text": "gives the owner the possibility to put the Interface into an emergencyMode , which will output always a price of 600 USD .", "title": "", "metadata": ""}
{"_id": "fc20cca60f1dcb7105c3919a651fb49f", "text": "Throws if called by any account that's frozen .", "title": "", "metadata": ""}
{"_id": "555fa2169fd0f25eb241fa7597039e15", "text": "called by owner to set the new sale start date / time .", "title": "", "metadata": ""}
{"_id": "2e002c53c623d0b7c0ca374b3465363c", "text": "Check contract state for the sender's address .", "title": "", "metadata": ""}
{"_id": "555ee7aba417bd326b58821e96e9588f", "text": "Multiplies method .", "title": "", "metadata": ""}
{"_id": "86d4e631b9f151b3efca3ae7c1f585c8", "text": "deploy a new BasicCoin on the blockchain .", "title": "", "metadata": ""}
{"_id": "82763c8a31b73b9a427b60c8185f99d9", "text": "Set max number of rounds a caller can claim earnings for at once .", "title": "", "metadata": ""}
{"_id": "a7ee74a2fd3c4c622aea32902c274029", "text": "Returns freezing balance of _holder .", "title": "", "metadata": ""}
{"_id": "3d6b2c372bc8b60865aac808152010b1", "text": "change default presale dates .", "title": "", "metadata": ""}
{"_id": "3f28d45f0bd5934c3b919de39ec95948", "text": "ensure proper state .", "title": "", "metadata": ""}
{"_id": "280c293b1d7ea97f3ef368b69b8e6ff5", "text": "Low level function Used to create new tokens and increase total supply .", "title": "", "metadata": ""}
{"_id": "5addb4d7e9ac64447383bf7b9eebbcda", "text": "Returns available date for hash .", "title": "", "metadata": ""}
{"_id": "f684b92791937d805d0effb0300a3253", "text": "This function allows users to purchase Video Game .", "title": "", "metadata": ""}
{"_id": "d34b13fe133f183d0c0807d11919f975", "text": "Only owner function to call _setFreezingPeriod directly .", "title": "", "metadata": ""}
{"_id": "7958fef25e8853684f7ab1101ff4aa70", "text": "Function to check the total supply of tokens .", "title": "", "metadata": ""}
{"_id": "dd3518cc06c92f695af6767e966780e5", "text": "true if sale period is active .", "title": "", "metadata": ""}
{"_id": "cbb2d5d47873777b3bafdc395afb2ea5", "text": "Allows the owner to change the commission of the reward .", "title": "", "metadata": ""}
{"_id": "8b8042e7b1e9dadedfdae23bc45b275a", "text": "this is a dispatcher , but must be called __callback .", "title": "", "metadata": ""}
{"_id": "8e14717d3372b02bca5904f3e36e105e", "text": "Sell back a number of unicorn tokens , in exchange for ether .", "title": "", "metadata": ""}
{"_id": "f63c106cb79bcc9bbfddd60b1166daf3", "text": "approve should be called when allowed _spender 0 .", "title": "", "metadata": ""}
{"_id": "958fc3af1dbc2e1f3d721c1d417a443b", "text": "Returns current price of a Collectible ( ERC721 ) on sale .", "title": "", "metadata": ""}
{"_id": "dc79bee356184b672053cb664fea38fc", "text": "Put a Zodiac up for auction .", "title": "", "metadata": ""}
{"_id": "e42d2452c06a00665fc29e4ea876c0b8", "text": "Allows owner to ignore specific requestId results from Oraclize .", "title": "", "metadata": ""}
{"_id": "2ec8e5f2ae8b2474e92a6fa8c139889f", "text": "Check if _address is authorized to access functionality with _authorization level .", "title": "", "metadata": ""}
{"_id": "02767fd9e756a5ede0fb24d43ce0259f", "text": "Assigns ownership of a specific mobster to an address .", "title": "", "metadata": ""}
{"_id": "6f56a247f54f40f64218c391f471ac06", "text": "Whether or not the token is unlocked for transfers .", "title": "", "metadata": ""}
{"_id": "07a076903223e8ffe82a1ba4b5b061a6", "text": "get contract balance .", "title": "", "metadata": ""}
{"_id": "1980dd5aa12a6317974d717d7c9a5afe", "text": "The address . call ( ) .", "title": "", "metadata": ""}
{"_id": "2cc79af438e7828195e238fbc734cfdc", "text": "Admin methods .", "title": "", "metadata": ""}
{"_id": "f9f1a303e533a4c43936727bb8f1782a", "text": "Mints the supplied value of the tokens to the destination address .", "title": "", "metadata": ""}
{"_id": "bafda3cdaf37f2bfae219d274e2f3523", "text": "If the address' personal cap is below the pointer , refund them all their ETH .", "title": "", "metadata": ""}
{"_id": "cb9cd843e9249390d49b6ebe8e06ce0e", "text": "Owner can propose an address change for notary .", "title": "", "metadata": ""}
{"_id": "cd5353f0ae207edd19c5d5c22d0d6a99", "text": "Trigger MET token transfers for all pairs of subscribers and beneficiaries .", "title": "", "metadata": ""}
{"_id": "71a9bc8886ee0348e8cd589f3e2eb73e", "text": "Token functions can be called only during the prepare phase , because the owner change after this to be own by the crowdsale , so nobody can do anything on the token at all from the controller perpective once rounds are started .", "title": "", "metadata": ""}
{"_id": "cbe52c8e8b1e3721c571243c715a5224", "text": "a spender take owner ship of Gift id , when he was approved .", "title": "", "metadata": ""}
{"_id": "4223e00c33d21b2e649a24780859bac7", "text": "End to end trading in a single call .", "title": "", "metadata": ""}
{"_id": "905504c5e90d300c05c9083f3fdceb2b", "text": "If champ is for sale then cancel sale .", "title": "", "metadata": ""}
{"_id": "50ee192b9debede3b6c73f24bb83b7ad", "text": "public function player submit bet only if game is active bet is valid .", "title": "", "metadata": ""}
{"_id": "135f420e85f53fa64b462952eec217a3", "text": "Transfers any tokens to the owner .", "title": "", "metadata": ""}
{"_id": "426f5b73a70b823d2617b4b9200bd7d7", "text": "true if tokens were created successfully , false otherwise .", "title": "", "metadata": ""}
{"_id": "6cd1cd8b6082fefe291417e7eb75f265", "text": "Compute the starting block of a halving .", "title": "", "metadata": ""}
{"_id": "119aec033b44b52e6e2e2ba3b25cfc27", "text": "Retreive the Total Profits previously paid out to the Caller .", "title": "", "metadata": ""}
{"_id": "7f7f6f90573025cf9aa2c81057924a3a", "text": "true if the ICO is alive .", "title": "", "metadata": ""}
{"_id": "6d18b878ecc5d996299883ebf9afd414", "text": "allows owner to exclude certain recipients from having their locked token balance unlocked .", "title": "", "metadata": ""}
{"_id": "f3f0840accec7aa6f50e380f2423c751", "text": "Launch and retire the founder .", "title": "", "metadata": ""}
{"_id": "fb42f888052ddda995d0adcbafd47c46", "text": "Owner can freeze an account .", "title": "", "metadata": ""}
{"_id": "6f60f53d51e21d667a7611bc7fed1c00", "text": "Checks if a given address already claimed in a promotion .", "title": "", "metadata": ""}
{"_id": "997f79bdc68960f097b386c07d3bb71c", "text": "allow the user to draw a rabbit , with a signed message from coo .", "title": "", "metadata": ""}
{"_id": "9ea6348abad8dc5f31b085e8ba6513c8", "text": "Define amount of Lemon Tokens to hold in order to get holder reward .", "title": "", "metadata": ""}
{"_id": "89afe697fb8a50226ae5ae836bf9d0a7", "text": "Create token with _name , internally .", "title": "", "metadata": ""}
{"_id": "acec021927b9a262794f16325aff3279", "text": "Transfer ownership of a Property and reset their info .", "title": "", "metadata": ""}
{"_id": "9f8180f2ae98a9f7deaf360d1b1a2e6e", "text": "Ensures the sale is finalized .", "title": "", "metadata": ""}
{"_id": "a6e9cc7e0e35a404908945bd1bc84e45", "text": "Restrict call access to when the beneficiary address is known .", "title": "", "metadata": ""}
{"_id": "2db145d1e537424bc11c07e41eb2acf8", "text": "Allow contract owner to burn token .", "title": "", "metadata": ""}
{"_id": "e91f18200543216b8dc53c9cab077466", "text": "sets address for reserved wallet .", "title": "", "metadata": ""}
{"_id": "4c117f1501d1c20aa20649241b6e7f96", "text": "dev method for debugging .", "title": "", "metadata": ""}
{"_id": "3e43d0a831fa9705a6f6b2a7b6ef38d3", "text": "Failsafe mechanism - Allows owner to retrieve tokens from the contract .", "title": "", "metadata": ""}
{"_id": "6c2e26ab3cfbb5e49908afff74a675a6", "text": "Returns the approved address of a given token .", "title": "", "metadata": ""}
{"_id": "806b49e6f12ec1653d9d65698e453a29", "text": "Returns the appId .", "title": "", "metadata": ""}
{"_id": "3f0deaf42b974d149dd01b55b7178637", "text": "set new cache .", "title": "", "metadata": ""}
{"_id": "06be3fa29f34fe7f42ebc054fde3d25a", "text": "Set the referrer of an artist .", "title": "", "metadata": ""}
{"_id": "a8c7e5bf3917e2f3bbe88e9c251d91a7", "text": "The owner can withdraw unspent Parsec credits if the minimum funding level has been reached and pre-sale is over .", "title": "", "metadata": ""}
{"_id": "f7643c67f2b75d427e173552dd3f23fc", "text": "Retrieve the referral dividend balance of any single address .", "title": "", "metadata": ""}
{"_id": "4fd135036da34fcec2695cfd8917a36f", "text": "change the State from presale to public sale .", "title": "", "metadata": ""}
{"_id": "fcdbec165e63379df3a1c115375e2488", "text": "cfo withdraw dead ether .", "title": "", "metadata": ""}
{"_id": "0112e46d836f5641cf1d23f96cfa313d", "text": "function for checking if hardCapReached .", "title": "", "metadata": ""}
{"_id": "e271cb442c9068f8d8a8a5f6b1694f94", "text": "markAsSpam : payable function .", "title": "", "metadata": ""}
{"_id": "ca5f536194ed1cdc062195718a334932", "text": "Function for closure handle .", "title": "", "metadata": ""}
{"_id": "fd946e6b674ec0f4783ada25a96fc80e", "text": "function to release tokens to beneficiary address .", "title": "", "metadata": ""}
{"_id": "0df4a047e7df98a029f45f27a9eb21a6", "text": "Function on / off token displaying in function balanceOf for definit token holder .", "title": "", "metadata": ""}
{"_id": "817e202dbea87726b3e162e918fe30dd", "text": "Revert a transfer in case of error .", "title": "", "metadata": ""}
{"_id": "a94aa04acecb065d6aba9aebbdaa2d6e", "text": "Return the account balance of some account .", "title": "", "metadata": ""}
{"_id": "6273bb12d24ff72596a10bff623f7c3c", "text": "Sets a block not for rent .", "title": "", "metadata": ""}
{"_id": "15ea07bfd7f5c59f7beb61e7493414f8", "text": "Owner my change the contracts allowed to mint .", "title": "", "metadata": ""}
{"_id": "61aa981d634c0b72d010b7c0925e0842", "text": "Buys PAY for the contract with user funds .", "title": "", "metadata": ""}
{"_id": "57bef8d126c0a0b89edfbb278ec4c588", "text": "Override of the goalReached function so that the goal take into account the token raised during the Presale .", "title": "", "metadata": ""}
{"_id": "cb9640370a23a7d0ac9a6a44a0bfef30", "text": "Set share amount explicitly by calculating difference then adding or removing accordingly .", "title": "", "metadata": ""}
{"_id": "a47abb2924d926e52291c11c6176c15b", "text": "Return cardDetailsList array .", "title": "", "metadata": ""}
{"_id": "2aadd87ba68488f6a7b819466bb7e996", "text": "bool valid .", "title": "", "metadata": ""}
{"_id": "100b23567a86c21b7ce69cf9bea7a8bf", "text": "change salesaccount address .", "title": "", "metadata": ""}
{"_id": "ccacd3a0eb88b3a167bb5ddca8a42e93", "text": "Helper routines .", "title": "", "metadata": ""}
{"_id": "9fd63b9cc49ee124c7baffbb6bc25154", "text": "Allows the current owner to update a single cap .", "title": "", "metadata": ""}
{"_id": "65bf2d0c05ff2a28a2a8fdcb273b942d", "text": "Cancels a user's registration status can only be called by the owner when a user cancels their registration .", "title": "", "metadata": ""}
{"_id": "41085b0a58cd2baea167868adb188804", "text": "Adds a approver address .", "title": "", "metadata": ""}
{"_id": "ed597958b43f50d84edf088c64e130a1", "text": "Allows user to buy tokens by ether .", "title": "", "metadata": ""}
{"_id": "df849a4776fbbdcfde54045213c9afea", "text": "mint _value tokens into _to address possession .", "title": "", "metadata": ""}
{"_id": "ec43838ee934f579efe3d3cffea1f27f", "text": "Purchase a village .", "title": "", "metadata": ""}
{"_id": "7962b0a9634b7a1a17fd02be20ab01fe", "text": "Register account .", "title": "", "metadata": ""}
{"_id": "addb317f39a7fd7d9f20efe1b2523dd3", "text": "Called by any C-level role to set the contract to .", "title": "", "metadata": ""}
{"_id": "9c4aed58613025fc96c896283287f6ac", "text": "_pID spent _eth to buy keys in _round .", "title": "", "metadata": ""}
{"_id": "6eaf38714d527fd7582461a5f93c2f1e", "text": "mimicking eth_sign .", "title": "", "metadata": ""}
{"_id": "082fdfc7f2ba4705820c5d130fe30b4f", "text": "Transfer with addidition data .", "title": "", "metadata": ""}
{"_id": "c892bd376b40dd6c48bffa1ef8a945fb", "text": "Updates an array of listingHashes' status from 'application' to 'listing' or resolves a challenge if one exists .", "title": "", "metadata": ""}
{"_id": "349d809d41d549ec28a69ca452aa68fd", "text": "Returns ICO-related state information for use by API .", "title": "", "metadata": ""}
{"_id": "83e41b1336964ba187315e77b646e65d", "text": "Withdraw tokens and eth , only from owner contract .", "title": "", "metadata": ""}
{"_id": "cf43dbd6227f37a786ab07d1028068ea", "text": "Returns owner of a given Asset ( Token ) .", "title": "", "metadata": ""}
{"_id": "e5e61da79e85f91c54643b9e2f958d5e", "text": "Whether the Burn was successful or not .", "title": "", "metadata": ""}
{"_id": "c35b02bc7638362157b3d21622bb9114", "text": "ends ICO .", "title": "", "metadata": ""}
{"_id": "1f97a4278843b80b94fa76207145a973", "text": "ERC20 transfer : .", "title": "", "metadata": ""}
{"_id": "e460fedf3020bac7004db89cce4991c7", "text": "Price of one Ponzi token in wei .", "title": "", "metadata": ""}
{"_id": "8f2c32e066ee7abab7261b7a363f0c8e", "text": "This pulls the allowed tokens amount from address to another .", "title": "", "metadata": ""}
{"_id": "5b87f5236552bc7b1fc4bc9c1e527c9e", "text": "Buy tokens from contract by sending ether , with data 0xa6f2ae3a .", "title": "", "metadata": ""}
{"_id": "46a2d1db9aa90a36148018526b5c20a7", "text": "removes addresses with zero balances from the investors list .", "title": "", "metadata": ""}
{"_id": "a23affba29e998251cb9520166ec8743", "text": "Internal funciton that helps to check if the pre-sale is active .", "title": "", "metadata": ""}
{"_id": "5544fd17e077f5f45a6bb2eeb00b069a", "text": "Submit a bid .", "title": "", "metadata": ""}
{"_id": "eebd6b814d8cb73427b25573e74a847a", "text": "The tokens can never be stolen .", "title": "", "metadata": ""}
{"_id": "86abf0b06b097fef968531280d950b93", "text": "Transfers ownership of the contract to a new owner .", "title": "", "metadata": ""}
{"_id": "cbc38913836ae3c0bc416072ffd77961", "text": "sends any left over funds to the wallet .", "title": "", "metadata": ""}
{"_id": "462777d68f06a6284da7500faf387f58", "text": "Issues tokens for users who made investment .", "title": "", "metadata": ""}
{"_id": "5de122ecffd8eed0460137c37b6323dc", "text": "Withdraw all ether from the contract .", "title": "", "metadata": ""}
{"_id": "880f663bba70f4e78f7d9eb587d48075", "text": "Allows the sender to purchase tokens .", "title": "", "metadata": ""}
{"_id": "131d93d3f23a6fffec3682c59d9f3906", "text": "Throws if called by any account other than a valid member .", "title": "", "metadata": ""}
{"_id": "d7834fd09c9bfc3f99b350ce59458f18", "text": "Return current block number .", "title": "", "metadata": ""}
{"_id": "9df4fec4e0599c95eabcc3b9b43fe519", "text": "Returns count of how many cats are owned by an owner .", "title": "", "metadata": ""}
{"_id": "d10d6e2da6809aa3420b63ab0d7b04b6", "text": "in case close has been called accidentally .", "title": "", "metadata": ""}
{"_id": "e9e2d82a4174bc44904617b781aabf7e", "text": "calculate amount .", "title": "", "metadata": ""}
{"_id": "5ff6e3c45f0fb27b4acf061bfaf06be7", "text": "bet details .", "title": "", "metadata": ""}
{"_id": "500b33409d805bffc1a60e5232620e8d", "text": "changeOwnerOfMonethaUsersClaimStorage changes ownership .", "title": "", "metadata": ""}
{"_id": "126001d8122688fccec6ad2859d9d19f", "text": "Burns remaining tokens which are not sold during crowdsale .", "title": "", "metadata": ""}
{"_id": "3a8fce711c0fcd1e333553fa30d54883", "text": "Donate a skin to player .", "title": "", "metadata": ""}
{"_id": "b0632889d9289ae76ade59b0698c242f", "text": "converts the token to any other token in the standard network by following a predefined conversion path and transfers the result tokens back to the sender note that the converter should already own the source tokens .", "title": "", "metadata": ""}
{"_id": "888dd556ca7ecc3760809a0e81ad45f8", "text": "Set frozen status of account .", "title": "", "metadata": ""}
{"_id": "44c0cd7a2804704c64e4d3d45b51a97f", "text": "Adds a new horse index to the possible horses list ( BTC , ETH , LTC , . . . ) .", "title": "", "metadata": ""}
{"_id": "3d1f651bb9e47493603eb300160cfe9e", "text": "Add a new oraclize unsold tokens allocation order .", "title": "", "metadata": ""}
{"_id": "1285c841f37786b787a2473d67ec0eec", "text": "Calculates the tokens mined based on the tier .", "title": "", "metadata": ""}
{"_id": "6dddd45f9eb8ee62f062eccdfa832825", "text": "accept donations from anywhere and give credit .", "title": "", "metadata": ""}
{"_id": "80a137d37f620405784c776ecb96f8b7", "text": "Return amount allowed to spend from '_owner' by '_spender' .", "title": "", "metadata": ""}
{"_id": "1714118e81ef62c042c06d7d8a86eda0", "text": "Set the payouts manually , in case of a failed Oraclize call .", "title": "", "metadata": ""}
{"_id": "e31d13ff15979a381f5761c8a98b96b9", "text": "Function to check the Ether balance of a contributor .", "title": "", "metadata": ""}
{"_id": "8cd64a27d6b81ced428dbbd775f4bf72", "text": "Multisig member creates a proposal to send ether out of the contract .", "title": "", "metadata": ""}
{"_id": "321179cbde7c063bb0a2e7fda922f4b4", "text": "Mint deed function .", "title": "", "metadata": ""}
{"_id": "a67be1a60d77b28ca323a69197b97bf0", "text": "ERC20 overloaded functions .", "title": "", "metadata": ""}
{"_id": "f93880229254fd4bf0c7d81198ac37a1", "text": "Owner can add new restricted address or removes one .", "title": "", "metadata": ""}
{"_id": "250fcd7507718092123c2a763490f57f", "text": "Set up several information for next round .", "title": "", "metadata": ""}
{"_id": "e846fa296f1b6d5c38e88e2bbf02a3a2", "text": "Restricts method call to only the address set as reclaimableOwner .", "title": "", "metadata": ""}
{"_id": "185886f23915f832a4da658968dced43", "text": "Remove all PVP contenders from PVP queue and return all bets to warrior owners .", "title": "", "metadata": ""}
{"_id": "e095cab9896b8a85268c5508ef02acdc", "text": "Buys tokens in the crowdsale and rewards the sender .", "title": "", "metadata": ""}
{"_id": "c2807ca098eba646b3aace0ee0f02cee", "text": "the tokens on sale based on the user address .", "title": "", "metadata": ""}
{"_id": "b138365cfd23e7f6af0329205968df63", "text": "ICO Token Calculation .", "title": "", "metadata": ""}
{"_id": "320c3559c6d4f6e615aba01dbca1e75b", "text": "Internal function to burn a specific token .", "title": "", "metadata": ""}
{"_id": "cdc340eeb3dba1917c8e62746b6992ed", "text": "Function to freeze accounts .", "title": "", "metadata": ""}
{"_id": "b7cdd55510a5f24d13203c9b15913e15", "text": "Withdraws the full amount shared with the sender .", "title": "", "metadata": ""}
{"_id": "84a58529fa8ae567ff597b043071e753", "text": "Set the CAPP / USD rate for Phase two , and then start the second phase of token allocation .", "title": "", "metadata": ""}
{"_id": "69883666585a836d45815e3e7422ff48", "text": "Unregister Auditor and return unused deposit .", "title": "", "metadata": ""}
{"_id": "e6c04689b33d5c898c7e1e84f2c24f8f", "text": "Transfer with checking if it's allowed .", "title": "", "metadata": ""}
{"_id": "a736a0d3d88fd8bb069861ac7ab89e62", "text": "adds next address package to the internal white list .", "title": "", "metadata": ""}
{"_id": "4b12bed7de5fab548eb859855cc68691", "text": "Allows for easier retrieval of holder by array index .", "title": "", "metadata": ""}
{"_id": "6c0b9f9a5a98980c5e9a4be82c867918", "text": "the issue of tokens in period 2 sales .", "title": "", "metadata": ""}
{"_id": "d004d95dc3aace76509c476812381cdf", "text": "agreement expired , refunds remaining balance in escrow .", "title": "", "metadata": ""}
{"_id": "c41da370bf4987b8e375314b793c1971", "text": "Let's owner withdraw contract balance .", "title": "", "metadata": ""}
{"_id": "c88630e3f56c7820c9d6d7e35b9fa824", "text": "Calculate the current price of an auction .", "title": "", "metadata": ""}
{"_id": "ff064e8f2f3461cf6607e7be5f82999b", "text": "Obtain the next schedule entry that will vest for a given user .", "title": "", "metadata": ""}
{"_id": "374caf549774d19eeb89bda777653b0d", "text": "transfers various amounts to the holders of the stalemate cards .", "title": "", "metadata": ""}
{"_id": "5391e4f1c490129af893224be13ae616", "text": "When MIN_CAP is not reach : 1 ) backer call the approve function of the GamePlayerCoin token contract with the amount of all GamePlayerCoins they got in order to be refund 2 ) backer call the refund function of the Crowdsale contract with the same amount of GamePlayers 3 ) backer call the withdrawPayments function of the Crowdsale contract to get a refund in ETH .", "title": "", "metadata": ""}
{"_id": "cd997a84c7c6157ba69c18374e37f866", "text": "check if two address can send BSPT without fee ; .", "title": "", "metadata": ""}
{"_id": "545f9f85f7036597592f24a051263bcf", "text": "Disable affiliate for the contract .", "title": "", "metadata": ""}
{"_id": "a7f271ffcea7a917b700393b210d1e80", "text": "Updates the opsAddress propety with the new _opsAddress value .", "title": "", "metadata": ""}
{"_id": "4d6c448a5aa6cfa1671487a68daec33b", "text": "Set address of upgrade target contract and enable upgrade process .", "title": "", "metadata": ""}
{"_id": "081166e9ff735d54300a225e3f8b5f88", "text": "Initialize token grants .", "title": "", "metadata": ""}
{"_id": "535171e495cc8507c60e665980e37ca1", "text": "Transfers the Token ownership .", "title": "", "metadata": ""}
{"_id": "9c87cc96ee3f27ce32373c49d12708e8", "text": "Winners or participants from failed queries can withdraw their prize by calling this function .", "title": "", "metadata": ""}
{"_id": "ede5866ac4f2a7fc28e2d3c75b6de197", "text": "GrantableToken modifiers .", "title": "", "metadata": ""}
{"_id": "a1b5a44aab0d5db24a1bfe5a274b0411", "text": "Function to allow users to purchase tokens based on the calculated sale rate .", "title": "", "metadata": ""}
{"_id": "f21022460a51a8303d0ad00cb880071b", "text": "If _fallback is true , then for STO module type we only allow the module if it is set , if it is not set we only allow the owner for other _moduleType we allow both issuer and module .", "title": "", "metadata": ""}
{"_id": "1a80b008ed70ddf57077fa7df7a2edee", "text": "No refunds fam soz not soz .", "title": "", "metadata": ""}
{"_id": "5dfec73c51eb07211e9ce0ba6062fe7f", "text": "called by the owner to lock , triggers locked state .", "title": "", "metadata": ""}
{"_id": "d1c5530b710826db643766113d96f448", "text": "Function to extract funds as required before finalizing .", "title": "", "metadata": ""}
{"_id": "d5f0e07afb42e21fdc0637b749fea136", "text": "Returns the total number of Poniesies currently in existence .", "title": "", "metadata": ""}
{"_id": "1c0f1f66d83ca3175389a1fe6bb96327", "text": "allows admins to add users to the list manually .", "title": "", "metadata": ""}
{"_id": "551096e3ef76f1ecef666f0d125f4c59", "text": "Public Funds View - get balances held by contract on behalf of the client , or balances approved for deposit but not yet claimed by the contract .", "title": "", "metadata": ""}
{"_id": "6d67dabb7da7f1b8b48bb2e47e25cb26", "text": "Initialize contract with inital parameters .", "title": "", "metadata": ""}
{"_id": "741b1e37ab5a08ec07ac19c3191404ad", "text": "function to calculate transaction fees for given list of values and tokens .", "title": "", "metadata": ""}
{"_id": "8567db74dca15aa330ad81a4916d313c", "text": "Mints remaining tokens and finishes minting when sale is successful .", "title": "", "metadata": ""}
{"_id": "9930b4823a666f6492e824392e5149d0", "text": "Change the ETH to BLCURR rate .", "title": "", "metadata": ""}
{"_id": "a2eaefafc8cab4fec59a2efa2dc3865b", "text": "Sets the precision .", "title": "", "metadata": ""}
{"_id": "13cd73fe6a532ad0a2e4b4c1a7ca0e85", "text": "After ICO close it helps to lock tokens for pools .", "title": "", "metadata": ""}
{"_id": "467c08617888bb1b7d95c9ae208ba895", "text": "Returns the current period , or null .", "title": "", "metadata": ""}
{"_id": "82b7bf1b3b448ccb4e4004fd5f4b44a5", "text": "Opens ICO ( only owner ) .", "title": "", "metadata": ""}
{"_id": "a4f1ad778a5a4d3fb02d4f85555eadb3", "text": "Add a new company with the given name .", "title": "", "metadata": ""}
{"_id": "4f2a2014ab835bba3825f9d4b8b69051", "text": "called by the owner to burn all unsold tokens .", "title": "", "metadata": ""}
{"_id": "8e373c18d0bbd8c6661c3f859a83a30f", "text": "The number of created contractors .", "title": "", "metadata": ""}
{"_id": "6af563b1a60c7088f7a69e97098afadf", "text": "Get account number from a owner address .", "title": "", "metadata": ""}
{"_id": "5d2be002ed91347a6ab417690d9f8027", "text": "Admin failsafe for destroying the contract .", "title": "", "metadata": ""}
{"_id": "a9dd132ab6fddf35d87d603881f25306", "text": "Change the reciever of the tokens .", "title": "", "metadata": ""}
{"_id": "ad82cc65ec8edf89348f6dc31ba5baf7", "text": "Builds ERC721 token with the predictions provided by the user .", "title": "", "metadata": ""}
{"_id": "cee75bfa51be9cddfd88d139e985a02c", "text": "Changing the price by the owner of the emoji .", "title": "", "metadata": ""}
{"_id": "04ff2a74af262237641a036e5a4b8b7e", "text": "checks whether the fundraiser passed endtime .", "title": "", "metadata": ""}
{"_id": "8cdbc4f2360fa45ec8c88215cda2e55c", "text": "virtual balance of the owner of given address .", "title": "", "metadata": ""}
{"_id": "1e4d1dcf7dd610afe986a86f26856326", "text": "Allows advisors account FT tokens to be released .", "title": "", "metadata": ""}
{"_id": "ba240a2ea8cb3fed50e3b9524c3b240a", "text": "Transfer the balance _value from owner's account ( msg . sender ) .", "title": "", "metadata": ""}
{"_id": "60fe66006fb24c23d4159aa796cfd886", "text": "returns participants number ( in the list of participants ) be belonging address ( read only ) .", "title": "", "metadata": ""}
{"_id": "903404a96c8aa3c873acb2be219d92f9", "text": "Integer division of two unsigned integers , truncating the quotient .", "title": "", "metadata": ""}
{"_id": "74af4ded040ddfd7c4afe937284f7802", "text": "should be called off chain with as much gas as needed .", "title": "", "metadata": ""}
{"_id": "3fa4077aea75eadfd76e49a50e8bcbdc", "text": "public ( command ) : close masternode and send deposited ETH back to owner .", "title": "", "metadata": ""}
{"_id": "bae16d5906e35e90a764b833b3ae02d2", "text": "Save message to the blockchain and add event .", "title": "", "metadata": ""}
{"_id": "a8632c6222c3ce6947b493a81c9725d7", "text": "Updates or Inserts the id into the index at its appropriate location based on the value provided .", "title": "", "metadata": ""}
{"_id": "94ab9812c50d50869d297791ec8359f2", "text": "Process received payment .", "title": "", "metadata": ""}
{"_id": "1bb05a1d7312818710654029852ba856", "text": "Return the permissions flag that are associated with STO .", "title": "", "metadata": ""}
{"_id": "4ba06dc0d90ccc64fca7abed5b14b04f", "text": "Remove an address from an id .", "title": "", "metadata": ""}
{"_id": "1c262b3d9047607e5fe23066cd907e15", "text": "Transfer tokens from the from account to the to account not possivbe before end of ICO .", "title": "", "metadata": ""}
{"_id": "b1f36efdb71f963358f187523998ef33", "text": "should be called after crowdsale ends or to emergency stop the sale .", "title": "", "metadata": ""}
{"_id": "ea38514335807c0f2ac7ace80a4a1402", "text": "requests adoption of a cat with an ETH offer .", "title": "", "metadata": ""}
{"_id": "df83f0e49747d4a6930e2bd45be33cab", "text": "to be called by owner on 1st feb to start ICO till 1st march .", "title": "", "metadata": ""}
{"_id": "10ad77b400047ddea0ba04c52610e92e", "text": "Function called by purchasers to pull leftover wei from their purchases .", "title": "", "metadata": ""}
{"_id": "11d00373b04cf545d643c7a637dd5e63", "text": "Create new tap proposal by address out of company .", "title": "", "metadata": ""}
{"_id": "a259bb2d3c19f00324df72d5b0c50b75", "text": "Precautionary measures in case we need to adjust the referral rate .", "title": "", "metadata": ""}
{"_id": "06a9dc5b6c6bda76ce2337802789a9fd", "text": "Anyone could call this to claim the prize ( an pay gas himself ) .", "title": "", "metadata": ""}
{"_id": "66de6160cc076abd974970bfdda326c2", "text": "checks for owned tokens .", "title": "", "metadata": ""}
{"_id": "b45113beac8e9652ff4cf1cd08baa9b7", "text": "method to check how many tokens are left .", "title": "", "metadata": ""}
{"_id": "8be470328796be915b0657e1e0f8d272", "text": "this method is used for getting information about account pending orders .", "title": "", "metadata": ""}
{"_id": "ff604db9c16e4d0bb4f4e84b34ecbcff", "text": "Close a deed and refund a specified fraction of the bid value .", "title": "", "metadata": ""}
{"_id": "e00f723b47400f39240f2e34878363c5", "text": "token sale participants call this to request a refund if the sale was cancelled .", "title": "", "metadata": ""}
{"_id": "35ac0231ff80d310bd30808c8920c5db", "text": "Check the frozen bonus balance .", "title": "", "metadata": ""}
{"_id": "c86d598590eb983093ee8458caf0bf63", "text": "Will get the Direct Offers Comission Ratio .", "title": "", "metadata": ""}
{"_id": "3413a65c90229917343a610f5497d714", "text": "0-1 writes .", "title": "", "metadata": ""}
{"_id": "9227dbc110a3e164e31bbae7e8b3dd4d", "text": "send Tokens Manually .", "title": "", "metadata": ""}
{"_id": "08b068073c1acbb8a38ad1ff391e99c7", "text": "Burn burnAmount tokens for target .", "title": "", "metadata": ""}
{"_id": "95f489fc15177edcdca2c41b578e4557", "text": "Set token rate .", "title": "", "metadata": ""}
{"_id": "b3ad2565814bb21ae177c636d147e9c5", "text": "Starts the crowdsale .", "title": "", "metadata": ""}
{"_id": "ec74bf79f1b16bab5c6b34dc98f7ba5f", "text": "End of ERC20 Inteface methods .", "title": "", "metadata": ""}
{"_id": "26c1f88ac09afc855ac301398ba14ad2", "text": "Withdraw funds from contract .", "title": "", "metadata": ""}
{"_id": "7046c10b61ceb0846735a93c9344f5e2", "text": "function to get a list of top 150 users that are unapproved can only be called by owner this function would work in read mode .", "title": "", "metadata": ""}
{"_id": "b65c20072c0ceeb8271c211d29f46ecc", "text": "Function to burns a specific amount of tokens from another account that msg . sender .", "title": "", "metadata": ""}
{"_id": "8a1908d48257021ebc2a9b6f37f0e1ce", "text": "Checks if a given address is the current owner of a particular Pixel .", "title": "", "metadata": ""}
{"_id": "360d7dfcf1bbc21b682c0401492dd6a2", "text": "Send _value tokens to _to from '_from' address , the '_value' can't larger then allowance by '_from' who set to 'msg . sender' .", "title": "", "metadata": ""}
{"_id": "c19a8e6cf4a274d1ceb7cefc427a5184", "text": "If tokens left make a priveledge token sale for contributor that are already validated make a new date time for left tokens only for priveledge whitelisted .", "title": "", "metadata": ""}
{"_id": "17d9e61200a7e2af7b9e4b0dc87b6c4d", "text": "sell out cards , upgrade cards can not be sold .", "title": "", "metadata": ""}
{"_id": "09f138b9e7f501a2a02d3e0b76539d87", "text": "Append : the LockMechanism functions by owner .", "title": "", "metadata": ""}
{"_id": "df0eec16bb7b4143d36daccb993d8d07", "text": "Transfer ETH to loftVR Offline Project wallet .", "title": "", "metadata": ""}
{"_id": "a47adaf1957a11afac32701b3c4ec0dd", "text": "Get if a regsitrant is active or not .", "title": "", "metadata": ""}
{"_id": "b8cf0ad211d9315b2f6296666e32450c", "text": "Transfer token to a specified address .", "title": "", "metadata": ""}
{"_id": "2990a76669830522ee6f07e59a3c1a76", "text": "View function to check whether the game should be started .", "title": "", "metadata": ""}
{"_id": "e6f609ec2105c2f3fe570b4fe278292d", "text": "OR relation .", "title": "", "metadata": ""}
{"_id": "49887ea58fece0cc3e96d1d6c14b9fe5", "text": "Transfers the balance of the sale auction contract to the MasterpieceCore contract .", "title": "", "metadata": ""}
{"_id": "6a6448f140b10273629f4ca2493522e6", "text": "Check if game lock can be removed .", "title": "", "metadata": ""}
{"_id": "882af523f4d2c9c86acd4ac673cd3917", "text": "Interface to the web app .", "title": "", "metadata": ""}
{"_id": "9625306384f219943acefab4892dcbca", "text": "expireBid if a bid is not executed during the sale period , then the owner can mark the bid as expired .", "title": "", "metadata": ""}
{"_id": "868a0fc16cf2dbd44fa47c593189fe98", "text": "the bid is canceled by the advertiser .", "title": "", "metadata": ""}
{"_id": "e365eaafd3f50f8f3a0ede7af87ca215", "text": "Checks the amount of locked tokens .", "title": "", "metadata": ""}
{"_id": "f9f0be109b972ed6d2f6ed401aeb3735", "text": "Transfer owner rights , can use only owner ( the best practice of secure for the contracts ) .", "title": "", "metadata": ""}
{"_id": "820528d3b5dd22cc09bb48b25277d00b", "text": "( note : hard coded value appreciation is 2X from a contract price of 0 ETH to 0 . 05 ETH , 1 . 2X .", "title": "", "metadata": ""}
{"_id": "e4dcdfb19e78c8f5392fcd6f14837a9f", "text": "new limit to be enforced for future deposits .", "title": "", "metadata": ""}
{"_id": "7ade32736dc1fe74936627d76a47835f", "text": "for test purpose .", "title": "", "metadata": ""}
{"_id": "2c5345220caca00de329bb97263d3e08", "text": "Refund a specific amount of tokens .", "title": "", "metadata": ""}
{"_id": "c1ce5ac97b4fdb6c3202223fe10c3e01", "text": "Calculate token emission .", "title": "", "metadata": ""}
{"_id": "9c94f11945531e37c2aca578ff119ca7", "text": "Invoke this function to get * everyone * up to date score-wise .", "title": "", "metadata": ""}
{"_id": "d849bae7007831ac62f9194c858b4b1b", "text": "Prevent to interact if the game is not closed .", "title": "", "metadata": ""}
{"_id": "3ef0643965a8e06efb3e68ddcebb5ca6", "text": "Creates a dividend with a provided checkpoint .", "title": "", "metadata": ""}
{"_id": "9b9032012a548efafe5cc36ecbc63e1f", "text": "Owner can transfer out any ERC20 tokens .", "title": "", "metadata": ""}
{"_id": "cc49e2d08fe6abcdde6a6d043a4d5a92", "text": "Check if a given user has been delegated rights to perform transfers on behalf of the account owner .", "title": "", "metadata": ""}
{"_id": "d63a4dc9fdb2ff811d2457a5e9873dd0", "text": "validation functions for collect .", "title": "", "metadata": ""}
{"_id": "d605c8c87441529ef9bf653bb0039b1f", "text": "Transfers the balance of the marketPlace contract to the EtherLambosCore contract .", "title": "", "metadata": ""}
{"_id": "8b9033fe643a1491a83b2a0994d0affb", "text": "Helps to reduce stack depth problems for delegations .", "title": "", "metadata": ""}
{"_id": "43f12f014fb35642f1bce4530e1b3971", "text": "for now we don't use real randomness gas estimation : 57813 x 4 gwei 0 . 0002356 eth * 1132 usd / eth 0 . 27 usd .", "title": "", "metadata": ""}
{"_id": "191eeff2054df74274399dc09176ef4d", "text": "AP Ok - Propose ownership transfer .", "title": "", "metadata": ""}
{"_id": "8fcff2b8b75f6eaf02dd71bc71b099cd", "text": "Aimed to mark the smart contract as upgraded if there is a crucial bug .", "title": "", "metadata": ""}
{"_id": "502b9a16ddd9d1fbd87818f84646ce26", "text": "makes a trade from Ether to token .", "title": "", "metadata": ""}
{"_id": "fb7ceb35c9fb9e884fd3ec6a9007a67c", "text": "Buy the tokens .", "title": "", "metadata": ""}
{"_id": "b21a4a33be09486c91db536ccc52653f", "text": "Annual Interest Function .", "title": "", "metadata": ""}
{"_id": "00e8e78227d17d597fe5a23dc4c37286", "text": "Get the total token supply .", "title": "", "metadata": ""}
{"_id": "dae168f5fe298c77da2b6f92d5a7dbf8", "text": "Users must first deposit ETH into the Exchange in order to purchase Options .", "title": "", "metadata": ""}
{"_id": "e2716922cf7a3e3e02772ab60ead4e3a", "text": "only owner address can transfer ether .", "title": "", "metadata": ""}
{"_id": "81247b67d1a7fc922e7b06f71bc17251", "text": "Gets the address of the Wrapped Ether contract .", "title": "", "metadata": ""}
{"_id": "f02c7080499ad8a9513983096814c318", "text": "Transfer all ether from smartcontract to owner .", "title": "", "metadata": ""}
{"_id": "8a3e173a22ea494afc33938f73038e2a", "text": "Returns the maximum of two unsigned integers .", "title": "", "metadata": ""}
{"_id": "5555f6d65804a0984b95374d15f86a05", "text": "Helper function that checks for IEIP777TokensOperator on the recipient and calls it .", "title": "", "metadata": ""}
{"_id": "aaa2f0c8f2ab5b75d0a6b051bae6b38e", "text": "Set validity of a thing , only registrants allowed .", "title": "", "metadata": ""}
{"_id": "9f907a45a603f1da1bcbbf69058cee07", "text": "for now , keeping this internal .", "title": "", "metadata": ""}
{"_id": "f4b69838d0f33cef84e15823ae5c9600", "text": "Transfer appropriate percentage of raised amount to the company address and humanity and buy back fund .", "title": "", "metadata": ""}
{"_id": "34477d8773535f43f30df5cb26da0909", "text": "Returns RoundsManager .", "title": "", "metadata": ""}
{"_id": "0d4c0f2b33385b8d0e435dee8e39d561", "text": "Checks that a call pushing a storage destination to the buffer is expected and valid .", "title": "", "metadata": ""}
{"_id": "0ddd261e6a399eaae035c2925e920f43", "text": "ICrowdsaleFormula override .", "title": "", "metadata": ""}
{"_id": "5cb33903bdb4138b846e6f36ffcf449d", "text": "Looks at a hand of 5-cards , determines strictly the HandRank .", "title": "", "metadata": ""}
{"_id": "0375bff4f62b7099cf8d6ab3a6fad4bc", "text": "ERC20 Standard : send tokens from address from to address to .", "title": "", "metadata": ""}
{"_id": "9c2b1fee20a27e2aa5bdb78f80b44d77", "text": "Calculates amount to spend , amount left able to be spent , and number of tokens purchased .", "title": "", "metadata": ""}
{"_id": "e0a4ab6509ef96890cbf21825f034c49", "text": "freeze all env .", "title": "", "metadata": ""}
{"_id": "b680b77ee4b54b5fdca5f86b7097a42f", "text": "Returns amount of Wei invested by the specified country .", "title": "", "metadata": ""}
{"_id": "346a16920d97811efcf43ae5405ced14", "text": "Transfer the amount of money invested by the investor to his balance .", "title": "", "metadata": ""}
{"_id": "b88ead96396498fd4eef1cf55651009e", "text": "true if pre-ico crowdsale event has ended .", "title": "", "metadata": ""}
{"_id": "c1f2674bc60197d62e938c458bb3cc96", "text": "Gets the Owner Address of the Day at OwnTheDay . io .", "title": "", "metadata": ""}
{"_id": "c3677963c1467b12e9c0a842ae52f8e6", "text": "Initialize the token holders and hold amounts by contract owner .", "title": "", "metadata": ""}
{"_id": "f485f3480701ae6de9ccbdde3f7eba6e", "text": "allows the owner to update the factory contract address .", "title": "", "metadata": ""}
{"_id": "8a67dfee1f9c4f890f0de7b4eebc5766", "text": "No eth payment to the token contract .", "title": "", "metadata": ""}
{"_id": "9b54ad376392be10d2b1d689c6bf0ee0", "text": "Create a disbursement of tokens .", "title": "", "metadata": ""}
{"_id": "3fdb7c0452168b3d9e1888c3a5825ed1", "text": "General methods .", "title": "", "metadata": ""}
{"_id": "7c2f9dc6142749e950d005e0b88f4da2", "text": "The total sold of a product .", "title": "", "metadata": ""}
{"_id": "a3c74a4d661c11c53f8a42b1e315fd5a", "text": "End ICO Variables .", "title": "", "metadata": ""}
{"_id": "fad1039f0446a387ce063506960aacb8", "text": "Sends the daily mining reward to HLPMT holder .", "title": "", "metadata": ""}
{"_id": "80917445169a897c11b9f94d0cb64bba", "text": "Initiate a change of owner to _owner .", "title": "", "metadata": ""}
{"_id": "647061d132e6cb086190a7a3beab26b3", "text": "If the motion was to terminate at this instant , it would pass .", "title": "", "metadata": ""}
{"_id": "1fd080e782285f1a9e8e9483947adbef", "text": "show timelocked balance of an account .", "title": "", "metadata": ""}
{"_id": "3372e85ca4d829e5880740ffde9da2cd", "text": "This helps in creating a collectible and then transfer it _toAddress .", "title": "", "metadata": ""}
{"_id": "36c0efcf6fa98dc432b0319993ce3688", "text": "Send all tokens to founders .", "title": "", "metadata": ""}
{"_id": "8508a26fa180db2a2830883e35ab02b3", "text": "inactivate the contract .", "title": "", "metadata": ""}
{"_id": "f3e9f4c3b91c2342da63ad53e9c1f312", "text": "Update the key of a node in the list .", "title": "", "metadata": ""}
{"_id": "8a298a473782de75cbff3bd1590d0d1b", "text": "Callback called when there is a stage transition .", "title": "", "metadata": ""}
{"_id": "650a6259d6676b3c32730c621bc04817", "text": "Wait 1 hour after final contract state before allowing contract destruction .", "title": "", "metadata": ""}
{"_id": "2cfa348a6547fd079251a843a3ca3899", "text": "Requires supplied address to be a whitelisted contract .", "title": "", "metadata": ""}
{"_id": "be2beee608197dd46ad60d1ed19a9610", "text": "Verify an order that the Exchange has received involving this wallet .", "title": "", "metadata": ""}
{"_id": "9aae49a2e9fadfc64dae767d1a95f395", "text": "Set maximum bet size per block .", "title": "", "metadata": ""}
{"_id": "f430e08ad8c03c4ded31b6a497b87f29", "text": "Could be called only from withdraw address .", "title": "", "metadata": ""}
{"_id": "4293b3bdb7c1f7a0c938adb47a186d8a", "text": "Function to allow creation of new coins .", "title": "", "metadata": ""}
{"_id": "914fdcd019800eef87a6ea171848f2e8", "text": "Function to stop minting tokens irreversable .", "title": "", "metadata": ""}
{"_id": "0fcbbc26763474ae70f751e9bcef2103", "text": "This modifier allows a method to only be called by current admins .", "title": "", "metadata": ""}
{"_id": "e47b0a450ff60279bd968b7da077d2a7", "text": "Put a EtherDog up for auction .", "title": "", "metadata": ""}
{"_id": "c3bdcfad51195a92faeec79d567cf823", "text": "Start the distribution phase .", "title": "", "metadata": ""}
{"_id": "5260f252736a8ec08677c3b20495b848", "text": "Receives approved foreign tokens and exchange them to tokens .", "title": "", "metadata": ""}
{"_id": "32fc91caed31c2f5d56009f34adb6a82", "text": "The product info for a product .", "title": "", "metadata": ""}
{"_id": "34444e94ec2f8e205a1b1db19cef9016", "text": "Amend a crowdsale purchase if something is wrong with it .", "title": "", "metadata": ""}
{"_id": "a84db1bb591140a3ddd4f316790f4615", "text": "What is the latest campaign's deadline .", "title": "", "metadata": ""}
{"_id": "67623d8c077c127f52296d19b5a6860c", "text": "sends the whole balance to the investor contract , if there are still investors waiting to be paid out .", "title": "", "metadata": ""}
{"_id": "ccb576009d5b9f65d6ff31063d7adce3", "text": "chnage special promotion fee .", "title": "", "metadata": ""}
{"_id": "c5a69aed876d4dcde79f592a57d24909", "text": "check fund controls before forwarding call .", "title": "", "metadata": ""}
{"_id": "7c0e06a9be5ddcce65772109a52394fd", "text": "check the locked balance for an address .", "title": "", "metadata": ""}
{"_id": "627ac34ee1de446fcdf1ed09500fd899", "text": "WAR token info returned based on Token ID transfered ( 64 at most ) .", "title": "", "metadata": ""}
{"_id": "97648667fae58648e92ae95ed0718ef1", "text": "release ico Tokens .", "title": "", "metadata": ""}
{"_id": "bf5eeed1954737cba436dfd331f2a424", "text": "Changes required sigs for major transactions .", "title": "", "metadata": ""}
{"_id": "1a87fab80a25459e1c65d40f01cd80d7", "text": "Allow havven to issue a certain number of nomins from an account .", "title": "", "metadata": ""}
{"_id": "eb7636b2663bf4087e970aeb8741f14e", "text": "4 allowance and notify the receipient / spender .", "title": "", "metadata": ""}
{"_id": "34b761b07a4d2645105c1a65641c80cd", "text": "Override this method with token distribution strategy .", "title": "", "metadata": ""}
{"_id": "0cf4036e0257c432d4140310963696cd", "text": "Adds a proposition of a company token split to companyTokensAllocation .", "title": "", "metadata": ""}
{"_id": "333dc38d1c1fb65bfe424340fb1ade25", "text": "Defines the abstract function from BaseFundraiser to add the funds to the refundSafe .", "title": "", "metadata": ""}
{"_id": "166f281c8dac18d5b57726e058d0f509", "text": "UpdateICODateTime ( uint256 _startTime , ) .", "title": "", "metadata": ""}
{"_id": "845b20e961397c064a8ba510aade259a", "text": "function bountyFunds - Transfer bounty tokens via AirDrop .", "title": "", "metadata": ""}
{"_id": "f71449d7eb099a640182111ae02588ed", "text": "Return the rate based on the state and timestamp .", "title": "", "metadata": ""}
{"_id": "cddfa916cda860839d1f3ee16e192f8e", "text": "modifier to continue with transaction only when Sale is not paused .", "title": "", "metadata": ""}
{"_id": "8ee7805a518f300fa0615157fe5fb11a", "text": "overriding Crowdsale buyTokens mints the ownerRate of tokens in addition to calling the super method .", "title": "", "metadata": ""}
{"_id": "131e4df1df9824833a1a3bce4342c0a1", "text": "Pass the token send a value token to your account .", "title": "", "metadata": ""}
{"_id": "ca4598b2c79a18d10769f6cfb05089ba", "text": "Remove address from whiteList by whiteListOwner .", "title": "", "metadata": ""}
{"_id": "29d8f6a70622050441b24949363fb919", "text": "bonus to bettors who won .", "title": "", "metadata": ""}
{"_id": "aee413e1363caceee6d9e5a8f9bcf868", "text": "For Backwards compatibility .", "title": "", "metadata": ""}
{"_id": "648ababf4a094998e9d5af694263926a", "text": "Allows the owner to stop transfer .", "title": "", "metadata": ""}
{"_id": "1f8dff54e9559ba4916b96348eeb0817", "text": "Calculates the total tokens that have been vested for a vesting schedule , assuming the schedule is past the cliff .", "title": "", "metadata": ""}
{"_id": "8cf9843d7f4a4bb96fa27b557cba73d0", "text": "Initialize the asset level .", "title": "", "metadata": ""}
{"_id": "f8aef60a9a527e92f964fab338faac2a", "text": "pause the subscriptions .", "title": "", "metadata": ""}
{"_id": "6621070a48ae7eef33ed650bab27500b", "text": "Throws if called by any account other than either of the two arguments .", "title": "", "metadata": ""}
{"_id": "779ba50d04dcb740e3aa331fd8637e62", "text": "An uint representing the date of the last transferable tokens .", "title": "", "metadata": ""}
{"_id": "ce22597892e8d1ca5b92dcc847743b9e", "text": "Sets the reference to the Tournament token contract .", "title": "", "metadata": ""}
{"_id": "2155355d84640c511f6d8ab724eea69d", "text": "Finalize the DevvotePrefund , should be called after the refund period .", "title": "", "metadata": ""}
{"_id": "0d0e598d4331b671b70c86490d61488c", "text": "start time of the ICO , inclusive .", "title": "", "metadata": ""}
{"_id": "779b70c2f14962efb020393a00db467a", "text": "In the case of emergency stop trades and divide balance equally to all investors and allow them to withdraw it .", "title": "", "metadata": ""}
{"_id": "a230ade6f2144c9eb7aeea34578e79f1", "text": "Allows the upgradeability owner to upgrade the current implementation of the proxy and delegatecall the new implementation for initialization .", "title": "", "metadata": ""}
{"_id": "0438ae377099a4540e7883079683e9cd", "text": "Drop Prophet .", "title": "", "metadata": ""}
{"_id": "0429ffa239cf46058da258b0f483e5a8", "text": "requires that the user isnt feeding a horsey already .", "title": "", "metadata": ""}
{"_id": "27fc8061e76e7589e43551168d1a619b", "text": "base rate is 1 ether , so for 1 to 1 send in 1 ether ( toWei ) .", "title": "", "metadata": ""}
{"_id": "43d7b2865cafcc84fe9ec942f21fbefc", "text": "just a function to receive eth , only allow the bankroll to use this .", "title": "", "metadata": ""}
{"_id": "d3cf3d331a29d96930d1e8bb444a9ed8", "text": "Update world progression factor allowing for buildings to grow taller as the city expands .", "title": "", "metadata": ""}
{"_id": "deb915af08136d6b43a1b352d020458e", "text": "Update the release agent provided tokens are not already released .", "title": "", "metadata": ""}
{"_id": "04c6714dbd033632e8d6e7120cd94f86", "text": "Called by the sale contract to deposit ether for a contributor .", "title": "", "metadata": ""}
{"_id": "0eb541b7238b427061e92298cb36de91", "text": "copies the conversion fee from the old converter to the new one .", "title": "", "metadata": ""}
{"_id": "ac544c6af4780ff0b90612feb4891a9c", "text": "Computes the rank ( eth-weighted sum of approvals ) of the document at index .", "title": "", "metadata": ""}
{"_id": "59a7c19dc7f35b2bd545a6ba8bc75da8", "text": "Unhold coins .", "title": "", "metadata": ""}
{"_id": "e050856d2d0150abbc8190496eda0ff5", "text": "transaction allow / forbidden for definit token holder .", "title": "", "metadata": ""}
{"_id": "10c97c05dcdeaf8ae5be414e9691d5ba", "text": "Closes the sale , can only be called once .", "title": "", "metadata": ""}
{"_id": "a02a616431d38faf70c8db99d29c6803", "text": "stop Token sale .", "title": "", "metadata": ""}
{"_id": "cc4c7ac8c55f8743c6c2d85edf5ec2ff", "text": "returns the current price of the token being auctioned in _auction .", "title": "", "metadata": ""}
{"_id": "0155a8a04872f499495f22a3eb7e07e5", "text": "Change the Custom Token detailed information after creation .", "title": "", "metadata": ""}
{"_id": "97482b81cd548029b7c169f8e72617ff", "text": "Allow crowdsale owner to change maximal investment time treshold in pre funding stage .", "title": "", "metadata": ""}
{"_id": "dd3bbd4946c2252763b31c19887e22b7", "text": "Send raised funds to the withdrawal wallet .", "title": "", "metadata": ""}
{"_id": "367afb66297106a4778079239b803428", "text": "The controller of this contract can change the controller of the MSP token .", "title": "", "metadata": ""}
{"_id": "4bd9d4bb750b9aaa3b4a5358eceb41db", "text": "Burn a specific amount of tokens , paying the service fee .", "title": "", "metadata": ""}
{"_id": "977cde95bcaf89d932edcd458fc6f6dc", "text": "send ETH .", "title": "", "metadata": ""}
{"_id": "ab5b4730f5feb787dab088db2cb1cd11", "text": "Check identity registration status .", "title": "", "metadata": ""}
{"_id": "e6d81c53335ce53596be37a9c9484aa5", "text": "Yes there are divs generated on each buy , but not enough to justify transferring to msg . sender .", "title": "", "metadata": ""}
{"_id": "28ecd85534b5bde8c41747ad47c7aacb", "text": "Change the name attribute of the contract by the Owner .", "title": "", "metadata": ""}
{"_id": "2769f895a913943929b13085afcd2e8c", "text": "Changes dates of token distribution event .", "title": "", "metadata": ""}
{"_id": "bfa2e0558b352db6ec6243b4f6d60408", "text": "Used to thaw token transfers .", "title": "", "metadata": ""}
{"_id": "7b174ec655c6e3f60d71a6fa4dab7021", "text": "Handles payment for an Interface transaction .", "title": "", "metadata": ""}
{"_id": "d60d4b0bb5c3261af95bf5168db4ae33", "text": "Throw if at stage other than current stage .", "title": "", "metadata": ""}
{"_id": "083911b7a69645f6d862cbb5a9ca0044", "text": "withdraw EBET tokens from the contract .", "title": "", "metadata": ""}
{"_id": "a0eb6c77f7a15ff8f1ea426947141229", "text": "Getter to calculate how much user can contribute .", "title": "", "metadata": ""}
{"_id": "67c4b0afae2aa8c2e66fbdb9108528f4", "text": "Retrieve length of bonuses by amounts array .", "title": "", "metadata": ""}
{"_id": "f5c971138b181a805a504707edb86fcb", "text": "Sell BBD .", "title": "", "metadata": ""}
{"_id": "4137283ebd09fd9049b875b8c423646f", "text": "Function to change multisgwallet .", "title": "", "metadata": ""}
{"_id": "86a9ec39d196195d21953edf08bf2f05", "text": "Get all active proposals .", "title": "", "metadata": ""}
{"_id": "b7e80e320e35631b295745bf507a4ce9", "text": "If overflow happened we dicrease the weiRaised because , those will be returned to investor and it is not weiRaised .", "title": "", "metadata": ""}
{"_id": "0f6b332e4338503add7005d77f000733", "text": "Return the fiat cost ( including fee ) of purchasing n nomins .", "title": "", "metadata": ""}
{"_id": "41d4dc9e937c4237c6b97c5767416e8b", "text": "This method will can be called by the controller before the contribution period end or by anybody after the endTime .", "title": "", "metadata": ""}
{"_id": "0a5352794fee4e5fd4c832754296e6e3", "text": "Allow to airdrop with less than 15 address by owner .", "title": "", "metadata": ""}
{"_id": "3fb54dadaeca2653a16b149d2780c9b4", "text": "Modify the link of the indexth data to be url .", "title": "", "metadata": ""}
{"_id": "437af2c076802ea5e692695fdd447eb4", "text": "List of all Centurion IDs assigned to an address .", "title": "", "metadata": ""}
{"_id": "45e81ba4c1e355904bebffa1331a51f2", "text": "Return ETH raised by the STO .", "title": "", "metadata": ""}
{"_id": "b3021ca750bcb92a6a692df19ca5f9dc", "text": "Update state .", "title": "", "metadata": ""}
{"_id": "4a4099c892d01a31903abf41bc1672ab", "text": "we can create EtherDogs with different generations .", "title": "", "metadata": ""}
{"_id": "9e1c48d0b808e21e5dfd27a5730b3c5b", "text": "Returns the event topics for a 'Purchase' event .", "title": "", "metadata": ""}
{"_id": "31711fd9b17b3fabcd76b60ed06e6442", "text": "Checks if msg . sender .", "title": "", "metadata": ""}
{"_id": "5373a03ee38505d5e0aabc206351adfa", "text": "exposing chronus for DApp .", "title": "", "metadata": ""}
{"_id": "4c8b62332c9ed39af815d33b0fade258", "text": "Create new game .", "title": "", "metadata": ""}
{"_id": "9c3e9d76a68ecdb2b3d5eef2d3fa54c1", "text": "Checks input and then creates storage buffer for token initialization .", "title": "", "metadata": ""}
{"_id": "045b990e537788ace0d488a0708d0076", "text": "Add support a component .", "title": "", "metadata": ""}
{"_id": "5dee049ac763f48da8d5a159f8860ba1", "text": "for administrator function .", "title": "", "metadata": ""}
{"_id": "2708d8fee4e610ad9e36eed5faf35c9b", "text": "fee The current fee in Wei .", "title": "", "metadata": ""}
{"_id": "3587e949f0bf968c63079144e29f4765", "text": "Creates Team .", "title": "", "metadata": ""}
{"_id": "a1d7c52f2944b8b33bc2c4b040f6a1c5", "text": "Owner can set multisig address for crowdsale .", "title": "", "metadata": ""}
{"_id": "e0232aa22af7a9eb389d220e4620185a", "text": "converts ETH to Avalanche Genesis Block TOKEN and sends new Avalanche TOKEN to the sender .", "title": "", "metadata": ""}
{"_id": "050e4a445d36402c0ff375901ade5b05", "text": "Gets whether or not the specified address has ever been an admin .", "title": "", "metadata": ""}
{"_id": "661750fbb278918c2ed20cf2cbcf8cab", "text": "Get lease from card .", "title": "", "metadata": ""}
{"_id": "c28823eba5513a6eb7e0a9b869e9eee7", "text": "amount amount of token bought .", "title": "", "metadata": ""}
{"_id": "773fba4d40e272e44fd1693980144593", "text": "Calculates and returns proof-of - stake reward for provided address and time .", "title": "", "metadata": ""}
{"_id": "9ba8cf3192c4c2d2045dcb81c92ca3b7", "text": "Function to burn tokens and rise event for burn tokens in another network .", "title": "", "metadata": ""}
{"_id": "b65d9853413738e452c83a4e1a856fc6", "text": "Get price of the current tier .", "title": "", "metadata": ""}
{"_id": "2beb332cfaddbebdff0232f366d7d6fb", "text": "cancel exchange .", "title": "", "metadata": ""}
{"_id": "7afa3bc2ce35a23f4f6fc458e58808db", "text": "Returns data for an oracle by its id in the array .", "title": "", "metadata": ""}
{"_id": "d32c20938b58679f295a1b85440afb56", "text": "Set minimum accept ether .", "title": "", "metadata": ""}
{"_id": "44f13364909edcc8d776bf2df8a28a06", "text": "Function that determines randomly when the round should be ended .", "title": "", "metadata": ""}
{"_id": "583ba706541f1f6b5db1fc882331abdb", "text": "Implementation of ERC20Interface .", "title": "", "metadata": ""}
{"_id": "61f52af40d857c9f206d8c1939f133d2", "text": "Vesting initialization function .", "title": "", "metadata": ""}
{"_id": "046615257a77d00bb81b4a6ec7c37237", "text": "ends this fundraiser , selects a participant to reward , and allocates funds for the cause , the selected participant , and the contract owner .", "title": "", "metadata": ""}
{"_id": "4658f6b23a77073b4684a4840744af23", "text": "Testing function to corroborate finals data from oraclize call .", "title": "", "metadata": ""}
{"_id": "1b8d52a52a45044633157c7bae2ea7db", "text": "Returns whether the sale has ended .", "title": "", "metadata": ""}
{"_id": "9b324e66508970d2e47e21f2b687f359", "text": "string 123 . 45 to 12345 converter .", "title": "", "metadata": ""}
{"_id": "bc66b52cbee17dc72d736b7685b0ac30", "text": "Raised during Pre-sale .", "title": "", "metadata": ""}
{"_id": "2223aa77c18cc2a04e1dd8f95b502a27", "text": "Returns number of entries made in Etheraffle contract by function caller in whatever the queried week is .", "title": "", "metadata": ""}
{"_id": "33ddc5a1d70c9539932b2bf02def3014", "text": "get end state .", "title": "", "metadata": ""}
{"_id": "a6f360e3691b2f7eb8efa36c47e079e4", "text": "This function will return only the owner address of a specific Video Game .", "title": "", "metadata": ""}
{"_id": "a855096cc7aad452d332a403ba2f6572", "text": "Function to set mint and burn locks .", "title": "", "metadata": ""}
{"_id": "8b5ef2790874ad9f225df9c372bd0e74", "text": "Remove salesagent .", "title": "", "metadata": ""}
{"_id": "945ce420a786e7250c5e31a7898a7753", "text": "Returns current multipl .", "title": "", "metadata": ""}
{"_id": "f576f8325c13d2e501f90450f86dc606", "text": "Unlock a token so it can be traded .", "title": "", "metadata": ""}
{"_id": "60558a5697e5430318bfe278d17f458b", "text": "Gets the token ID at a given index of all the tokens in this contract .", "title": "", "metadata": ""}
{"_id": "58f49fb5db4d5ec925c861efd9b63e83", "text": "Operation modifier for any Other Manager .", "title": "", "metadata": ""}
{"_id": "37e86ffdc56abffccca3f39e361582a2", "text": "Bid Function which call the interncal bid function after doing all the pre-checks required to initiate a bid .", "title": "", "metadata": ""}
{"_id": "00a2214d83bda8e76b29a55d9f05033c", "text": "Deny any access except during sale period ( it's time for sale hardcap haven't reached yet ) .", "title": "", "metadata": ""}
{"_id": "1df3f832ec7fcb0af41dc86b25808811", "text": "Allows to remove a claims from the registry .", "title": "", "metadata": ""}
{"_id": "1fab334f53c9895f37ceee28d25e3647", "text": "Transfer ownership of wbtToken contract to _addr .", "title": "", "metadata": ""}
{"_id": "a0777de4b49ff15210eed09913507204", "text": "users can buy UC Coin .", "title": "", "metadata": ""}
{"_id": "841938635d34254d04073c18c500a688", "text": "requires the caller to be the master .", "title": "", "metadata": ""}
{"_id": "a6ed5d147de1e53466206b8938c511d6", "text": "Changes the admin of the proxy .", "title": "", "metadata": ""}
{"_id": "ccbc6f1f93d76e2c6bc8a172afc2e68d", "text": "Get invested ethereum .", "title": "", "metadata": ""}
{"_id": "d473b0df626d01eaa54f483f4afef3f1", "text": "logs some seeds and game results for players wishing to have their game history logged by the contract clientSeeds array containing the client seeds results array containing the results v , r , s the signature of the non-sending party ( to make sure the corrcet results are logged ) .", "title": "", "metadata": ""}
{"_id": "3490044609eb29eb08c0998d9fa1881f", "text": "Bonus Stage Three state .", "title": "", "metadata": ""}
{"_id": "d1502b8ac86df2a0f278359589584784", "text": "Any unsold tokens from ICO will be sent to owner address and burned .", "title": "", "metadata": ""}
{"_id": "9171d6162fb507b8c9473b7552c5fb75", "text": "Finish the PRE-SALE period , is required the Presale state of the contract .", "title": "", "metadata": ""}
{"_id": "f37b63d4b0130db2360867cd3d9165ee", "text": "Only owner is allowed to set the vault initial token balance .", "title": "", "metadata": ""}
{"_id": "8fc965dfb4e1d95162b67b454542e0cf", "text": "Invoke transcoding verification by calling the Verifier contract .", "title": "", "metadata": ""}
{"_id": "18fc6e43e90ec2fca94a65dbdd675efa", "text": "Mint a new KODA token .", "title": "", "metadata": ""}
{"_id": "2d20d73b06402053728cb8a9337f849a", "text": "Function to set current token price .", "title": "", "metadata": ""}
{"_id": "286623a6ee39165452408817547bd887", "text": "function that is used for whitelisting an address .", "title": "", "metadata": ""}
{"_id": "e9bbf55a24dfc35479187a1a296f2857", "text": "modifier to scope access to price keeping oracles ( scripts polling exchanges ) / / reverts if called not by oracle .", "title": "", "metadata": ""}
{"_id": "94d84188a2b8f791ff6ad35bf4dba14b", "text": "Allows to change the daily limit .", "title": "", "metadata": ""}
{"_id": "54670bb88e6320cd78bdf6256e02fe73", "text": "Returns amount of tokens available for withdraw .", "title": "", "metadata": ""}
{"_id": "71992dd37de7b760d191c90f27db909c", "text": "Allow developer to add ETH to the buy execution bounty .", "title": "", "metadata": ""}
{"_id": "95dacd5a22f90bf4ebadd23a0937a75c", "text": "Checks pre-reqs and handles user registration .", "title": "", "metadata": ""}
{"_id": "0c91999dcf6fa2ee8b3db7d722e3e9d2", "text": "Freeze token circulation .", "title": "", "metadata": ""}
{"_id": "5e512fb925b5f7525be9bfe311c0b7cc", "text": "Update of reservedWei for withdraw .", "title": "", "metadata": ""}
{"_id": "4dd24e760108de32cea609004151c68d", "text": "Change the airdrop rate .", "title": "", "metadata": ""}
{"_id": "1978c01219bb7e87f5695d55eded11b2", "text": "If the open timer has elapsed , start the crowdsale .", "title": "", "metadata": ""}
{"_id": "279254733679a950c73c4d75752bdbce", "text": "Called to reward current KOTH winner and start new game .", "title": "", "metadata": ""}
{"_id": "1f58f484e4bfd88a37c7b3fdc4e13ed2", "text": "Returns the identifier of the parent of an identifier .", "title": "", "metadata": ""}
{"_id": "1b30e6e5c47b5f5961fbb44d0d823c41", "text": "buy upgrade cards with ether / Jade .", "title": "", "metadata": ""}
{"_id": "01aef40693a67aa102d7c3d9454be01f", "text": "Distribute fee between investors .", "title": "", "metadata": ""}
{"_id": "4e657e9af5677b6792574ffec09f75b1", "text": "Check exists Contribute list .", "title": "", "metadata": ""}
{"_id": "4a2cbe138ddef6fb4027be33de1e0b66", "text": "Access modifier for contract managers only functionality .", "title": "", "metadata": ""}
{"_id": "37b7a738edd2b7171c6835560662fed9", "text": "Get all the lands owned by a specific address .", "title": "", "metadata": ""}
{"_id": "0c790364dab5440595988c1a556a8b78", "text": "player profit in gwei .", "title": "", "metadata": ""}
{"_id": "058ecd4a2bb2a502000de0005cf84ac3", "text": "Returns the info of a specific bet .", "title": "", "metadata": ""}
{"_id": "22f2e90a31d1347b36c6acb4faa8974e", "text": "PopNext keeps track of an index that loops through the array and pops the next item so that push pop doesn't necessarily return the item you pushed .", "title": "", "metadata": ""}
{"_id": "b15ac03122067369e19401b320d397f8", "text": "Overwrite due to lockup .", "title": "", "metadata": ""}
{"_id": "b0f6d16d7b74b765e4b0c4d455547516", "text": "check transfer is allowed .", "title": "", "metadata": ""}
{"_id": "86aaac7988060df9171f6ab85de71f25", "text": "if msg . value .", "title": "", "metadata": ""}
{"_id": "c1bdbcecb17d12a221073f76bc44dd78", "text": "Factories core .", "title": "", "metadata": ""}
{"_id": "113240ea6788a378b64334a6c146adef", "text": "Called by token contract after Approval .", "title": "", "metadata": ""}
{"_id": "b4c2e706f25f7f35c4ec19bea8e58b4b", "text": "to enable code export functionality .", "title": "", "metadata": ""}
{"_id": "eeab1b855b23c27d2341275284387041", "text": "withdraw all recognized tokens balances and ether to _dest .", "title": "", "metadata": ""}
{"_id": "729139c7ba803f06bfbb655495a4184a", "text": "another founder can approve specified tx and send it to destAddr .", "title": "", "metadata": ""}
{"_id": "96e4f4c7d26fdb8594d9ac28ea3b0e19", "text": "Throws if dungeon status do not allow transportation , also check for dungeon existence .", "title": "", "metadata": ""}
{"_id": "42323fc71433f1c8c660679c605d670d", "text": "Get Balance for owner ( tranfer for sale ) .", "title": "", "metadata": ""}
{"_id": "65fbeb46d53b1ca0112fb697ba8688c0", "text": "User wont be able to claim tokens back after this is called by arbitrator address .", "title": "", "metadata": ""}
{"_id": "80cb9d9263cad23cc2369bb8268f0dd2", "text": "get balance of the special address .", "title": "", "metadata": ""}
{"_id": "f3fe1da766beddf5ac7ab64f8221ad90", "text": "Gets details about voting for a tx .", "title": "", "metadata": ""}
{"_id": "f8acc0a59edf3cc7cf47cc741c6b2ee3", "text": "save every transaction that BSPT sends .", "title": "", "metadata": ""}
{"_id": "2d2897f5f8a598d762a2ec93de8dcb72", "text": "Unbond delegator's current stake .", "title": "", "metadata": ""}
{"_id": "b454a7659b05c476caf96517737f6138", "text": "release tokens for advisors .", "title": "", "metadata": ""}
{"_id": "b56fe7fe7657354bc5cb9876c5040417", "text": "setEventActive sets the private presale discount members address .", "title": "", "metadata": ""}
{"_id": "b366a2cdaa5530ede4ec46fd4a4cc2d7", "text": "Remove the blacklist member .", "title": "", "metadata": ""}
{"_id": "987ec212351212a882ed8471af3fe60c", "text": "Create lighthouse smart contract .", "title": "", "metadata": ""}
{"_id": "671a481bc760a5837eeb7781c47cfb2c", "text": "correctVotes Number of tokens voted for winning option .", "title": "", "metadata": ""}
{"_id": "dd8f477baaa5cc7ade4777268e593156", "text": "this only runs once ever .", "title": "", "metadata": ""}
{"_id": "1b17e3f4cd1381b07be8b73dbe610fea", "text": "returns amount of euro corresponding to burned neumarks .", "title": "", "metadata": ""}
{"_id": "85fa4ba7c0379913fddee01fb34a31ca", "text": "Calculate the number of Tokens available for teamAccount .", "title": "", "metadata": ""}
{"_id": "d44d6376343231d784a573852863ea5e", "text": "Check Own Balance .", "title": "", "metadata": ""}
{"_id": "4f8665c659ad3f5eaba50673ceb7745b", "text": "Bonus : private ico 40 ( min 20 eth ) 28 . 03-05 . 04 .", "title": "", "metadata": ""}
{"_id": "73f077e9b364e30af24a2fa66b00db0e", "text": "Posts a trade offering up your mon for ONLY the given mon .", "title": "", "metadata": ""}
{"_id": "5ef0f3077c9868d55c758837bccf0996", "text": "Based on division down rounding .", "title": "", "metadata": ""}
{"_id": "81a35b2a0d0794d8f01b59d5252675ec", "text": "cancel an subscription given by subId ( a forced version ) .", "title": "", "metadata": ""}
{"_id": "1dbd90bb5022b35151b6baaf81a0d7f5", "text": "Updates the challenge rewards pecentage .", "title": "", "metadata": ""}
{"_id": "61b5b9c680c5265ca6e5e601cb6b7c89", "text": "onlyOwner to close Crowdsale manually if before endTime .", "title": "", "metadata": ""}
{"_id": "4f09de1a060eeb7245907fbce0c60899", "text": "Sends tokens from icoAllocation to investor .", "title": "", "metadata": ""}
{"_id": "103994214fac48907b269872e6f8374c", "text": "in case of a failed refund or win send , user can check pending withdraw .", "title": "", "metadata": ""}
{"_id": "7abc01a7be80efaca3b1f008f584db82", "text": "Add beef judge .", "title": "", "metadata": ""}
{"_id": "510d1396c97056bffca982b70ce7fecb", "text": "Get list of managers .", "title": "", "metadata": ""}
{"_id": "070d27af8630ee58c1c430c4768f27a9", "text": "Get's a user's average dividend rate - which is just their divTokenBalance / tokenBalance .", "title": "", "metadata": ""}
{"_id": "46fd2c7867229cc35dfc0143e096d93a", "text": "true if contract is expired .", "title": "", "metadata": ""}
{"_id": "e861d8ecf2b3b0516dda71fe22f8cfaf", "text": "Modified allowing execution only if not stopped .", "title": "", "metadata": ""}
{"_id": "eb919c478bbc2a9d695b623798f1bc1a", "text": "Internal function for handling eth deposits during contract stage one .", "title": "", "metadata": ""}
{"_id": "9d0c0633862793e04073efa398ab8253", "text": "Disable SPID , zeroes out everything - - must be Rivetz .", "title": "", "metadata": ""}
{"_id": "2d6ec6ced6eaba93acc26ce5f9d97295", "text": "Redeems by allocating an ownership percentage only of requestedAssets to the participant .", "title": "", "metadata": ""}
{"_id": "2339d492bf243b706d54933723426426", "text": "dev Returns the difference of a and b .", "title": "", "metadata": ""}
{"_id": "d2c0425c72682a6b5efbfb194e174883", "text": "Creates a request to transfer the ownership of an entity which must be accepted .", "title": "", "metadata": ""}
{"_id": "9d753f12a2bb9a7995c9ffacfe7a3ff8", "text": "checks only treasury address is calling .", "title": "", "metadata": ""}
{"_id": "3d047af1adcd5dbe2cc688b0e628d866", "text": "This is a multi-value airdrop .", "title": "", "metadata": ""}
{"_id": "c7dfa324d7a957a6c58cc05a03201383", "text": "Calculate amount of vested tokens at a specifc time .", "title": "", "metadata": ""}
{"_id": "be2806e2c02a31a811dd6a84a8bae9fb", "text": "Cancel the Bet .", "title": "", "metadata": ""}
{"_id": "0918d8f0ccf1a853b21e1751944da0eb", "text": "Set the beneficiary address of this contract .", "title": "", "metadata": ""}
{"_id": "b9ebc5dbe6a67b5736dc697bb1451ac1", "text": "Calculates sum ( exp ( q / b - offset ) for q in quantities ) , where offset is set so that the sum fits in 248-256 bits .", "title": "", "metadata": ""}
{"_id": "c7dd0bbde8f4f57f1b318ee86ad9e46d", "text": "buys the token by depositing one of its reserve tokens .", "title": "", "metadata": ""}
{"_id": "7e98007ad2a259060622a1d70ded08ae", "text": "function to manual send ETH .", "title": "", "metadata": ""}
{"_id": "4a5208149271d2ec977299bcd3f20854", "text": "Grant acess to deposit heroes .", "title": "", "metadata": ""}
{"_id": "ef7feb4bd7cee4a587cc38cd0083d719", "text": "Unfreeze not more than _value tokens .", "title": "", "metadata": ""}
{"_id": "b978b8a8c0a4fed02dfff9c95bae0c82", "text": "Change crowdsale discount stage .", "title": "", "metadata": ""}
{"_id": "428d48dbeee4adecc23c6ee70a7e4275", "text": "Returns maximum ether that can be spent if percent _fee will be added .", "title": "", "metadata": ""}
{"_id": "267937375f3e1c22ee0aa9f88e83552b", "text": "Required state : Success .", "title": "", "metadata": ""}
{"_id": "7edd85daaf429ab3078ff022f937b406", "text": "create or update .", "title": "", "metadata": ""}
{"_id": "280f84d8328b5e2ca0a8fc6e350c161c", "text": "Only the manager or controller can use this method .", "title": "", "metadata": ""}
{"_id": "4177cc8f59135304133901b0b9032893", "text": "Set bit value at position .", "title": "", "metadata": ""}
{"_id": "5261c7b2c4fe5a079abf3eca920dd68f", "text": "Calculates the new price for Sale Item .", "title": "", "metadata": ""}
{"_id": "bb549ac9de2dc4c04dd3a8607c6b0b15", "text": "when set to true , prevents tokens from being transferred .", "title": "", "metadata": ""}
{"_id": "89bab249173d566c7092f90db372213d", "text": "Change the owner of the token .", "title": "", "metadata": ""}
{"_id": "c630d0720c1fb7f5b19e1377fb6e57d8", "text": "Set the data associated with multiple plots .", "title": "", "metadata": ""}
{"_id": "22ae714248d5f74e329d2be838a07653", "text": "allow access to our structs via functions with convenient return values .", "title": "", "metadata": ""}
{"_id": "9cd407561a2fb370f3be2032580f3e6b", "text": "Token distribution to Platform .", "title": "", "metadata": ""}
{"_id": "5f65d6e455e05e99f941f25ef653cfd1", "text": "To enable vesting of B type EXH Token .", "title": "", "metadata": ""}
{"_id": "d6f7f2f3f10fa6ba46cd53a590533f62", "text": "Prepend element to begin of list .", "title": "", "metadata": ""}
{"_id": "5a994dec7e6b22e6674860c15475dbdf", "text": "Returns the current rate 1 ETH equates to including the bonus amount .", "title": "", "metadata": ""}
{"_id": "c28b04529a65c8a71c6b5de3223f472c", "text": "Function to check the amount of tokens that _tokenOwner has .", "title": "", "metadata": ""}
{"_id": "0cc2ffb2c1ea0d00664850424318b332", "text": "transfer ownership of the contract .", "title": "", "metadata": ""}
{"_id": "6e4344f1688637b6fe4a44c7485b1c65", "text": "Library meta .", "title": "", "metadata": ""}
{"_id": "ffb631a95258fcf31c15971d23b6624b", "text": "This function will return all of the details of the Dragon Ball Z heroes .", "title": "", "metadata": ""}
{"_id": "7c53419dbc05a6f0c176c68570346d75", "text": "Remove an address owned by a holder .", "title": "", "metadata": ""}
{"_id": "12ddcea4155c7881a5e847af9b07bf3b", "text": "works the same as default bid method .", "title": "", "metadata": ""}
{"_id": "64f344d6c19d8aac78309b80bed6c59c", "text": "Return MaxSupply .", "title": "", "metadata": ""}
{"_id": "4cfff8695a14186529080a5a28571a6c", "text": "given genes of kitten 1 2 , return a genetic combination - may have a random factor .", "title": "", "metadata": ""}
{"_id": "922789aaa974245ae7b81522df735ad7", "text": "Returns the current rate with bonus percentage of the tokens .", "title": "", "metadata": ""}
{"_id": "612598bea6508d29028f7220be85c79e", "text": "Checks that a given warrior can participate in PVE battle .", "title": "", "metadata": ""}
{"_id": "39655f741b14d418aad7cfcdcf02e29d", "text": "Enable or disable transfers .", "title": "", "metadata": ""}
{"_id": "19b0cef350c58b13da6f364cef25579c", "text": "ERC998ERC721 Bottom Up Composable .", "title": "", "metadata": ""}
{"_id": "fb19ad8b240cccc3fb4cf1e7f3becb2c", "text": "Function wrapper around the _Withdrawal event so that it can be used by contracts .", "title": "", "metadata": ""}
{"_id": "3d23634f24634dd5b74b538fc1589ba6", "text": "A getter to find the longest commitTime out of the owner and all the delegates for a specified pledge .", "title": "", "metadata": ""}
{"_id": "9f3e70ed37f7ccb3d34d70256440c6b3", "text": "A simple alias to totalVestedAccountBalance : provides ERC20 balance integration .", "title": "", "metadata": ""}
{"_id": "211e35a50be277fae8545258e433ae47", "text": "changeTotalSupply is the function used to variate the variable totalAllocatedTokens .", "title": "", "metadata": ""}
{"_id": "4f11dee4b8dbe2bce734aa41082f4042", "text": "set lockup for strategic investor .", "title": "", "metadata": ""}
{"_id": "6946b93322aacb2183c11d72d9078a19", "text": "Remove extra owner .", "title": "", "metadata": ""}
{"_id": "4cc24efb6268029c4811a4509d266c3b", "text": "Update token to the new upgraded token .", "title": "", "metadata": ""}
{"_id": "fd724f4c6733692c58b6292833cbdabe", "text": "Function which will return the ODD and EVEN bets .", "title": "", "metadata": ""}
{"_id": "729ab9597ec42f7cee42d6e0f9d64604", "text": "check for changes in balance in order to track amount of locked tokens .", "title": "", "metadata": ""}
{"_id": "8a097b64337ab2a1043672363b0ebf85", "text": "Determines mint total based upon how many seconds have passed .", "title": "", "metadata": ""}
{"_id": "9508e6d398dbecb366dba8fca890f904", "text": "Calculates the current purchase price for the given stock share .", "title": "", "metadata": ""}
{"_id": "0a59b218622157f3426171591a8e7512", "text": "Allow addresses to buy token for another account .", "title": "", "metadata": ""}
{"_id": "f1a90057bc874f79f77d8cb3cafda9aa", "text": "A method to exchange preDGZ tokens to DGZ tokens .", "title": "", "metadata": ""}
{"_id": "a7891a74fedf634d0efe85ee5b0c4fb6", "text": "Approve the address for a given token .", "title": "", "metadata": ""}
{"_id": "c5a384bf4f6c3e9d131365852ff70e75", "text": "crowdsale must be open and we do not accept contribution sent from contract because we credit tokens back it might trigger problem , eg , from exchange withdraw contract .", "title": "", "metadata": ""}
{"_id": "036ea30599ce42e4051edd6931f3d4b5", "text": "Attack function .", "title": "", "metadata": ""}
{"_id": "ebd2977ece1360e245f629927bfd07f5", "text": "Data Storage Management .", "title": "", "metadata": ""}
{"_id": "65810e9283cebb043f3bb4a434adb8e8", "text": "add new property under this BSPT .", "title": "", "metadata": ""}
{"_id": "cc60a60b0f15590b06644f4e85374dd6", "text": "Adds an affiliate to the list .", "title": "", "metadata": ""}
{"_id": "cb53ae3ded8842db7cd3ffdc630b5b78", "text": "Check Allowance : Constant .", "title": "", "metadata": ""}
{"_id": "314b97620ef619efdb6ad0c8130751f0", "text": "A helper to notify if underflow occurs for subtraction .", "title": "", "metadata": ""}
{"_id": "5e7ee723bb8b285de8b0958b85aef8f0", "text": "function for sign deal by seller ( in start and before buyer ) .", "title": "", "metadata": ""}
{"_id": "302ecaf76330820da192c2c174e8af0e", "text": "get deposit balance and frozen amount by using the deposit address .", "title": "", "metadata": ""}
{"_id": "a72b4f4e60920a6523af6cc95c72b640", "text": "Changes the fee on takes .", "title": "", "metadata": ""}
{"_id": "858701ec5ff4fd4ac1a396ad7a647968", "text": "This updates / transfers the member address .", "title": "", "metadata": ""}
{"_id": "73255b4c8a0231ec5ac5bd931aabfb4d", "text": "Unpauses the balancer .", "title": "", "metadata": ""}
{"_id": "842b948fe6064003ad79d770f0fe6dcc", "text": "Creates or updates a deposit that is available for withdrawal after the specified number of weeks .", "title": "", "metadata": ""}
{"_id": "cf40b289c766f7d11d95bb6cc30bfbe3", "text": "Transfers ownership to newOwner , given that the sender is the owner .", "title": "", "metadata": ""}
{"_id": "059abe65c959395e6cab78330f00f98a", "text": "Method called by anyone to withdraw funds to countries wallet after locking period .", "title": "", "metadata": ""}
{"_id": "be4f833f83262f5306584e9a9defe556", "text": "When token is released to be transferable , prohibit new token creation .", "title": "", "metadata": ""}
{"_id": "8a3c08a83123660a8913a8a81e2c0552", "text": "we get cooldown .", "title": "", "metadata": ""}
{"_id": "3685603e1edd9fa48071e535c254800c", "text": "Check the amount of wei received by beneficiary .", "title": "", "metadata": ""}
{"_id": "c7559f1b139b7dd28a19653107f9f500", "text": "give a new user an id , intrnal .", "title": "", "metadata": ""}
{"_id": "7ff3a5af92cef328978d1bb4a630106b", "text": "Method called by owner to change the wallet address .", "title": "", "metadata": ""}
{"_id": "be1ec325d64040d01bac66b8d9f2d793", "text": "BK Ok - Only new proposed owner can accept ownership .", "title": "", "metadata": ""}
{"_id": "f082f92a7eac56087d1531db36054c92", "text": "Burning tokens ie removing tokens from the formal total supply .", "title": "", "metadata": ""}
{"_id": "2405db24a94fbb14bff58f7f14ac0401", "text": "account for paused / unpaused-state .", "title": "", "metadata": ""}
{"_id": "af8c9b6e927bd267b802e3133763962a", "text": "return the number of the current window .", "title": "", "metadata": ""}
{"_id": "c8fee3b8b1fd4fc2b6faab38464a881a", "text": "Gets the player address given a color on the board .", "title": "", "metadata": ""}
{"_id": "64dfd8c97e9794d4a0526f7575b770d9", "text": "sum of all remaining vestings balance ( only the released part ) released - withdrawed .", "title": "", "metadata": ""}
{"_id": "0e1b1c9b32f7d65af60c82a267f126a0", "text": "Display Kelvin project and token information .", "title": "", "metadata": ""}
{"_id": "376a9833b47f872837763e9f597e2693", "text": "Returns all the relevant information about a certain cutie .", "title": "", "metadata": ""}
{"_id": "09d16858e6071def7154047448b669ed", "text": "Maximum current purchase amount in Phase 2 .", "title": "", "metadata": ""}
{"_id": "fbe064fa3925b755c9a054a0a0043193", "text": "Investors can allow owner to make transfer transactins on their behalf to enjoy zero transaction fee .", "title": "", "metadata": ""}
{"_id": "17e534521bcf661da80738f23b431295", "text": "amount for given wei calculation based on rate modifier percentage .", "title": "", "metadata": ""}
{"_id": "190e9565adaee4fb1524fe51483a49b6", "text": "Returns the address of the currently assigned renter and end time of the rent period of a given plot .", "title": "", "metadata": ""}
{"_id": "023d5db79a54ab0a672c29bd137065b6", "text": "Ensures the updated sellprice is below the here defined moving maximum .", "title": "", "metadata": ""}
{"_id": "2ade47500bc3c88f2edbd1ac401529f8", "text": "dev Function to check the amount of token rhan an owner allowed to a spender .", "title": "", "metadata": ""}
{"_id": "f36a31498fb9f0fb0803c0ee6f4da392", "text": "Sets extra 5 bonus for those addresses who send back a promo token .", "title": "", "metadata": ""}
{"_id": "db1bd7d083ea65a6a12cc5a54328b882", "text": "Allow target from sending receiving tokens .", "title": "", "metadata": ""}
{"_id": "6ae8f41d1ce444fa1912be9fa8672466", "text": "Audit the reserve balances , in the base token and in ether .", "title": "", "metadata": ""}
{"_id": "7f0d67123825e7c95fa81d853a67a8b5", "text": "Decrease approval .", "title": "", "metadata": ""}
{"_id": "cb89f74c89000c91e41574eb1b86f40a", "text": "Get the availability of a specific room .", "title": "", "metadata": ""}
{"_id": "82f3090b5e3506470b44d9b815734f7b", "text": "allows endTime to be modified .", "title": "", "metadata": ""}
{"_id": "c2e4a1a42d733c5855fdccc31b772f31", "text": "Batch add users .", "title": "", "metadata": ""}
{"_id": "1e10c5b022a98188faec4650605a0e20", "text": "validates connector weight range .", "title": "", "metadata": ""}
{"_id": "f834bfc0ff6ea69d72cee8c620f60e87", "text": "deploys a new CDPer instance sets owner of CDPer to caller .", "title": "", "metadata": ""}
{"_id": "497decf9596cca87359d32ce003a41dd", "text": "total supply uint .", "title": "", "metadata": ""}
{"_id": "bb023e758096ff8d6aafd0c761e5fcdc", "text": "must be a normal address .", "title": "", "metadata": ""}
{"_id": "508358f57473f02ece9704e9685a27ca", "text": "del image .", "title": "", "metadata": ""}
{"_id": "10ab107eee0361737c839411324569dd", "text": "Checks whether a monster is currently pregnant .", "title": "", "metadata": ""}
{"_id": "edb3379f17f3bddee33de033701c08e0", "text": "Distribute tokens from presale address to an address .", "title": "", "metadata": ""}
{"_id": "88677ae337c5edc7048746a4ba4613d7", "text": "string The resulting string from combinging the base and value .", "title": "", "metadata": ""}
{"_id": "00f21fd1651344f52ccf11989907f0f6", "text": "Delists the given mon from all posted trades .", "title": "", "metadata": ""}
{"_id": "1ceca7e9837b5642be6d9c3d27693fa5", "text": "To be called by the pitboss .", "title": "", "metadata": ""}
{"_id": "cdb91852b071d5ded5f0723f2411c438", "text": "Transfers the collected fees to the owner .", "title": "", "metadata": ""}
{"_id": "6e4d8b00983c13a7bbfdd8ab6be72b64", "text": "approve the offer .", "title": "", "metadata": ""}
{"_id": "2a1b3075593cb66608c73dcaf4bc0fce", "text": "Second signatory consent for contract pause state change , triggers the change .", "title": "", "metadata": ""}
{"_id": "c12e645e713b7948b6f0e9f98920d539", "text": "Authorizes ICO end and burn of remaining tokens .", "title": "", "metadata": ""}
{"_id": "5a863ffcca585c456fd4bc9707587940", "text": "This method is used to get the current amount user can receive for 1ETH - - Used by frontend for easier calculation .", "title": "", "metadata": ""}
{"_id": "911dff5769e8b2fcb4681fd460266bad", "text": "Method to transfer all remanining tokens left to owner left with the sales contract after the sale has ended .", "title": "", "metadata": ""}
{"_id": "524e301d3a70154ab302e092175f1b6f", "text": "Set medium lock price .", "title": "", "metadata": ""}
{"_id": "e09f76965d938b3bc151ca0e97216ac4", "text": "Send ether to the fund collection wallet override to create custom fund forwarding mechanisms .", "title": "", "metadata": ""}
{"_id": "dbd4ab6be717ada71bc577d0a9611929", "text": "don't allow transfers before the required wait-time and don't allow transfers to the contract addr , it'll just kill tokens .", "title": "", "metadata": ""}
{"_id": "065fa34a960e967c5249f8583ee8edcf", "text": "new art hash info .", "title": "", "metadata": ""}
{"_id": "0051d44aded3e4ce3ba72ad923437ed9", "text": "Returns the address currently assigned ownership of a given Pony .", "title": "", "metadata": ""}
{"_id": "fd7031742cc3ba752f68d504dfd76648", "text": "Change ability to transfer tokens by users .", "title": "", "metadata": ""}
{"_id": "d99b783eb065ae6008aaa72b491f2a3c", "text": "move Eth to tote liquidator wallet .", "title": "", "metadata": ""}
{"_id": "4d8284c46dbb1eec9f24051c6a7d7da4", "text": "sell a token .", "title": "", "metadata": ""}
{"_id": "260dbebf29c296b4c23766f6875d47ad", "text": "Minter Functions .", "title": "", "metadata": ""}
{"_id": "6be908a8d2ffbd93bce7681d910e1e5a", "text": "Allow for the possibility for contract owner to start crowdsale .", "title": "", "metadata": ""}
{"_id": "123fc3a6a3244fec21dae4e503f67ab2", "text": "Send _amount amount of tokens from address _from to address _to .", "title": "", "metadata": ""}
{"_id": "07d31786a0eee92e55656f2252462c9b", "text": "Economy boost : this is called by functions below that will buy a city from someone else it will draw ECONOMY_BOOST_TRADE CITYs from the UN funds and split them in the relevant country .", "title": "", "metadata": ""}
{"_id": "1df5d1e9c626e3cbbac6a5ef6b696f79", "text": "Change basic ICO parameters .", "title": "", "metadata": ""}
{"_id": "365348d1b750507a676cf43e023f9f40", "text": "Contract Initialization Sequence definition end Contract behavior funtions definition start .", "title": "", "metadata": ""}
{"_id": "0884fb07db06d46e628a3cd3f545ae02", "text": "called by arbiter when winner is decided * pass in high num for winnerbal for tie games .", "title": "", "metadata": ""}
{"_id": "893201766cd84bc34fd5f71aafe0c8b3", "text": "Transfers a Wonder to another address .", "title": "", "metadata": ""}
{"_id": "0ba51a007991c7ac86942db22d3582c7", "text": "Get the quantity of havvens associated with a given schedule entry .", "title": "", "metadata": ""}
{"_id": "6a5377b7dbe51bd7677116eb3a118c24", "text": "Send T4T tokens to the wallet .", "title": "", "metadata": ""}
{"_id": "b750cfb9c6a5887d415684e2d7f00369", "text": "Allow the owner to set maxWagerWei .", "title": "", "metadata": ""}
{"_id": "b0525e2e7aa6ebd1bd9d8fd004d0b3c8", "text": "activate / deactivate a specific person .", "title": "", "metadata": ""}
{"_id": "0eb337ba650c631486742463e05f1e52", "text": "Throws if called by any account other than the blacklister .", "title": "", "metadata": ""}
{"_id": "6f39749cc4e6fcc0903346c790027ee9", "text": "function to get the price of the token returns how many token units a buyer gets per wei .", "title": "", "metadata": ""}
{"_id": "4f0a1531da3206b429f905e5ccfc8e94", "text": "Calculate current bonus tier quotient .", "title": "", "metadata": ""}
{"_id": "fd3cb74c9861a5abc0a2c8a404cd9ebc", "text": "Grant bounty tokens to an address .", "title": "", "metadata": ""}
{"_id": "e4b666da653b1f23fbb95003edc8da65", "text": "timeout where piece will be returned to original owner if people dont sign .", "title": "", "metadata": ""}
{"_id": "a0dbd2869c4e488171685569ff557e85", "text": "Function for handle token issues .", "title": "", "metadata": ""}
{"_id": "6a98aac11ff04faeaad129dfaff58318", "text": "add a role to an address .", "title": "", "metadata": ""}
{"_id": "4bbbeaa1276d6053c994f2e3ecd35334", "text": "Grant another address the right to transfer a specific Rabbit via transfeFrom ( ) .", "title": "", "metadata": ""}
{"_id": "507215148e8f512b1e547cb4038f5bff", "text": "Set new bridge height .", "title": "", "metadata": ""}
{"_id": "38e316a399fecb57b42a9220987225ad", "text": "Check Balance : Constant .", "title": "", "metadata": ""}
{"_id": "9227ba745f72f936457678b0348eaea1", "text": "Have a pregnant LinglongCat give birth ! .", "title": "", "metadata": ""}
{"_id": "3c5413876d1161f9a668fab0909f7aa3", "text": "Method is needed for recovering tokens accidentally sent to token address .", "title": "", "metadata": ""}
{"_id": "abed0ccaa598831f41bd4b311cbd5603", "text": "onlyLiquidPledging authorizes payments from this contract , if autoPay true the transfer happens automatically else the owner must call confirmPayment ( ) for a transfer to occur ( training wheels ) ; either way , a new payment is added to payments .", "title": "", "metadata": ""}
{"_id": "6e71b5ab832bbf691ebb161a349d29f0", "text": "Send oraclize query .", "title": "", "metadata": ""}
{"_id": "0ac17a8ec12863ea977ae790bfa1959f", "text": "Sets the publication fee that's charged to users to publish items .", "title": "", "metadata": ""}
{"_id": "addc1ab4fea06bc70a0552b6c123f1a7", "text": "Put a panda up for auction to be sire .", "title": "", "metadata": ""}
{"_id": "f0ea05c58d6b1027c25ef1f8ffc10206", "text": "Restarts everything after swap .", "title": "", "metadata": ""}
{"_id": "323f331ea389ac767f778b833b93c426", "text": "internal function for hashing bytes .", "title": "", "metadata": ""}
{"_id": "83e31f177c4a9ea9da40ea4964e97020", "text": "Return true if we can run finalizeCrowdsale ( ) properly .", "title": "", "metadata": ""}
{"_id": "556cfe7590dd4ab3ec6928935663934c", "text": "allows to change the platform fee percentage .", "title": "", "metadata": ""}
{"_id": "68abc6d00455f6721d9d71d888dcef17", "text": "Internal function that redirects recieved funds to wallet .", "title": "", "metadata": ""}
{"_id": "ab5243b015c807a55c471590f880e7a7", "text": "Escrows the ERC-20 Token , assigning ownership to this contract .", "title": "", "metadata": ""}
{"_id": "c7626e06f317fd821821c155ac1e1654", "text": "Transfer requested amount of tokens from Gate to Proxy address .", "title": "", "metadata": ""}
{"_id": "b1e8433006876e7f684743920a586359", "text": "Unsubscribes user from trade hooks .", "title": "", "metadata": ""}
{"_id": "5a2b0161460072eb72cbe89d440eab29", "text": "A contract attempts to get the tokens .", "title": "", "metadata": ""}
{"_id": "91557f9f83fcdb1bae8dca20b3d0686e", "text": "cumulative score .", "title": "", "metadata": ""}
{"_id": "4a0398838ec8e8494787c90f94a0ffc7", "text": "Redeem smart tokens , get back reserve ( ETH / MET ) token .", "title": "", "metadata": ""}
{"_id": "e1b71b0c77e9007cdf93445041ee1e63", "text": "initialize all wallets like team , advisors , bounty etc only by owner .", "title": "", "metadata": ""}
{"_id": "bf9eda32b6b97a08aa21060469f9b043", "text": "Length of partner allocations per period .", "title": "", "metadata": ""}
{"_id": "3add757fade17ec03d498e0818579f61", "text": "Allows the owner to set a sale window which will allow the sale ( aka buyTokens ) to receive contributions between _startTime and _endTime .", "title": "", "metadata": ""}
{"_id": "53088a8d44947219893260273eff4315", "text": "Generate new tokens .", "title": "", "metadata": ""}
{"_id": "e4f394bbe7569a86b90d1caddfb2b3bf", "text": "The reward is calculated by the formula : ( numberOfBlocks ) * ( effectiveBlockReward ) * ( commitment . value ) .", "title": "", "metadata": ""}
{"_id": "1fe27147910aa673f5e9b265a3823dce", "text": "Minimal requirement .", "title": "", "metadata": ""}
{"_id": "21e809dd4246ded89dbf9a9ce40681b8", "text": "Emits an event if an entity resolution took place .", "title": "", "metadata": ""}
{"_id": "9cc2cf0499327ea0bff2574f6be63fe2", "text": "UnLock Address .", "title": "", "metadata": ""}
{"_id": "62dc9aa25793348280aa93843d4a94fc", "text": "Leaving a community prevents that community from crediting or debiting your AVIV and VIP balances .", "title": "", "metadata": ""}
{"_id": "ccdf6355e919966eae91c74da8e4c786", "text": "Sets the starting timestamp for a stage .", "title": "", "metadata": ""}
{"_id": "4dd16153dc4eaf5da0d43e0bc5bce21c", "text": "Function to exchange KSCPoint to KStarCoin .", "title": "", "metadata": ""}
{"_id": "060f54453583247d0960ea9ef617c7be", "text": "Query the available balance of an address ERC-20 Standard .", "title": "", "metadata": ""}
{"_id": "3cd7ff9a711f6b8f797faabf6e7ce513", "text": "Calculate typed hash of given data ( compare eth_signTypedData ) .", "title": "", "metadata": ""}
{"_id": "c45dd7b29bb5d02292caf5e637cc2e84", "text": "Increments a sender's bid for a given Auction .", "title": "", "metadata": ""}
{"_id": "0b1fe8b1034fb93a063834195aef6ecf", "text": "Transfer and stamp tokens from a mint in one step .", "title": "", "metadata": ""}
{"_id": "5c0f14b740d0d6ddc2f33206df71892a", "text": "Get the GOT price in WEI during the auction , at the time of calling this function .", "title": "", "metadata": ""}
{"_id": "a9622b84b3fe6b45d7c500e00ab2bd54", "text": "administrator can manually disable the ambassador phase .", "title": "", "metadata": ""}
{"_id": "0f6c8ff3225d757770195c035b649e37", "text": "copied from sample contract - recovery procedure : give _password to nextOfKin so they can access your funds if something happens ( password hint : bd of c1 ) .", "title": "", "metadata": ""}
{"_id": "6084a63bcd36abe056243f601de1f83e", "text": "freeze ? Prevent target from sending receiving tokens .", "title": "", "metadata": ""}
{"_id": "cca7e46619083e38a4ac00f1984b29df", "text": "Close the channel .", "title": "", "metadata": ""}
{"_id": "9345f0a2d609f3a4e815529ac423d674", "text": "Access only to the COO-functionality .", "title": "", "metadata": ""}
{"_id": "0c040565e93d4093a09e14a63c9f53f5", "text": "Allows an owner to cancel the process of transfering proxy to new IdentityManager .", "title": "", "metadata": ""}
{"_id": "82bf68fba157d272869e539d6d5e427b", "text": "Allow us to bring in winners from the previous contract this replaces .", "title": "", "metadata": ""}
{"_id": "229b1b13491f386263c615a59640574c", "text": "Assigns ownership of a specific Property to an address .", "title": "", "metadata": ""}
{"_id": "d37338bf6f26d9e7ce922afa7d0e9abb", "text": "minimun one token to transfer or only all rest .", "title": "", "metadata": ""}
{"_id": "9ebdf09b5d8a41044db7d1c0aa1611bb", "text": "Called when the receiver of transfer is contract .", "title": "", "metadata": ""}
{"_id": "a6c5fe0ce422d707eab7e970250fbde8", "text": "proxyPayment ( ) allows the caller to send ether to the PreTokenSale and have the tokens created in an address of their choosing .", "title": "", "metadata": ""}
{"_id": "f6313862c52216851d0f47b7faa7382e", "text": "Called by the owner of the contract to modify the sale state .", "title": "", "metadata": ""}
{"_id": "13d07d9c341a15532a5142c8c2111828", "text": "total number of tokens in exsitence .", "title": "", "metadata": ""}
{"_id": "f00145a057cf9ee1c79e5016e1eca8bb", "text": "This is the main function to update the mappings when a transfer happens .", "title": "", "metadata": ""}
{"_id": "02fece45c4c9d890afcdade3666da8f1", "text": "Uninitialized state , before init is called .", "title": "", "metadata": ""}
{"_id": "fa48f7b26d6fa0c1cbdd6493c3368bba", "text": "voting long enought to go to next phase .", "title": "", "metadata": ""}
{"_id": "480b2baaa88c1475521c9ae5f27ee997", "text": "Check if won in lottery .", "title": "", "metadata": ""}
{"_id": "cbf103b779699baf7b0c37344bd5d396", "text": "Returns number of pixels set by given address .", "title": "", "metadata": ""}
{"_id": "715e85037d10061181a7c442358b5306", "text": "set token rates .", "title": "", "metadata": ""}
{"_id": "584e6d27345382c8ccbc462199a45bdf", "text": "It's concievable that a malicious user could construct a contact with a payable function which expends all the gas in transfering ETH to it .", "title": "", "metadata": ""}
{"_id": "4453bb5a0ab36b816f18f219321ec01c", "text": "Return tokens price list .", "title": "", "metadata": ""}
{"_id": "03c1a8f058b5bce1656e5344e62228b4", "text": "state controller can change the cap .", "title": "", "metadata": ""}
{"_id": "0dcd67b71bc04b581b36f69bc9921a11", "text": "Release the tokens to the public .", "title": "", "metadata": ""}
{"_id": "65c825302b35ccc9f19aa47e38d27f3f", "text": "Calculate player profit .", "title": "", "metadata": ""}
{"_id": "cd7857876f2c0ce80c042e61807d80bb", "text": "Allow donors to withdraw their donations .", "title": "", "metadata": ""}
{"_id": "9061a4745ebac32378bc8fbd592ea225", "text": "end the token generation event and deactivates all functions can only be called after end time burn all remaining tokens in this contract that are not exchanged .", "title": "", "metadata": ""}
{"_id": "85f543e0257a50ec207efdd010ffb306", "text": "Creates new tokens for the given receiver .", "title": "", "metadata": ""}
{"_id": "3423234b47b8beddfc2cea47b1c705e4", "text": "Get details of a specific lock associated with an address can be used to iterate through the locks of a user .", "title": "", "metadata": ""}
{"_id": "77833c104c3d20c2825a5cfc144a2f99", "text": "cashing out the money that a tank has earned .", "title": "", "metadata": ""}
{"_id": "0356456d6d04994051f7f17ca5693c04", "text": "Owner initates the transfer of the token to another account .", "title": "", "metadata": ""}
{"_id": "2e7242490f222a06ce560fc52a070368", "text": "The function for obtaining smart contract funds in ETH .", "title": "", "metadata": ""}
{"_id": "4d931b21c530e4475fd2c0a34f0f91d4", "text": "Transfer tokens from ICO address to another address .", "title": "", "metadata": ""}
{"_id": "878d0ed765e94a72bb265f7a1fe07228", "text": "withdraw ( amount , count , mgCaffeine ) .", "title": "", "metadata": ""}
{"_id": "fde3e478596f9bbb15f7348b84508a78", "text": "prints a birthday message and then becomes impossible to execute after 23 hours .", "title": "", "metadata": ""}
{"_id": "cbf3fc8c6b5f32ec4c8c4a93fc7e6b2f", "text": "override transferFrom token for a specified address to add onlyWhenTransferEnabled and validDestination .", "title": "", "metadata": ""}
{"_id": "3578ecb8fc7535aadb391adf2e09aaa5", "text": "Set Attachment Time Period ( this restricts user from continuously trigger detachment ) .", "title": "", "metadata": ""}
{"_id": "83ad80d1459d8f650e5fa82dca39d566", "text": "Return Etherium all investors .", "title": "", "metadata": ""}
{"_id": "6361567868176240e26ddc2462b5a0bd", "text": "change rate function .", "title": "", "metadata": ""}
{"_id": "4f3b944d6648252462ac290781fae5c3", "text": "setGrowth can accept values within range from 20 to 100 of growth per month ( based on 30 days per month assumption ) .", "title": "", "metadata": ""}
{"_id": "fb3f51d1294d5a9bc31d3e10758fd314", "text": "Sets the global tokenURIPrefix for use when returning token metadata .", "title": "", "metadata": ""}
{"_id": "53a86a36ce91361579d6f4ddeb877363", "text": "Generates amount tokens that are assigned to owner .", "title": "", "metadata": ""}
{"_id": "76c73b701d14c47d7435d9651296ffe1", "text": "Claim token , which will transfer bought token amount to buyer .", "title": "", "metadata": ""}
{"_id": "76490178328d3f8ec4a5d4a4d493ace8", "text": "Limits before after we go public .", "title": "", "metadata": ""}
{"_id": "74247d9c3b7ef71ac61d0809298119ae", "text": "check if input day is present in locked days .", "title": "", "metadata": ""}
{"_id": "b71e4b57c0cb12c017004d80d9416544", "text": "sowed returns the current number of sowed potatoes owned by a farmer , taking into consideration those that are currently growing .", "title": "", "metadata": ""}
{"_id": "d6e9c7ecb4b8b804f13cf3d2cc2a82ab", "text": "Compute the amount of AFW token that can be purchased .", "title": "", "metadata": ""}
{"_id": "e7ad63b2c36f2af46597c5f2ee576e5b", "text": "Function to get balance of an address .", "title": "", "metadata": ""}
{"_id": "23f2ee07ceaac4a623dc167967909306", "text": "Overrides parent by storing balances instead of issuing tokens right away .", "title": "", "metadata": ""}
{"_id": "228402cb7be155aa39658293c261ac73", "text": "Get input of specified player .", "title": "", "metadata": ""}
{"_id": "3ee2b24d13832f48d63ef348f479690b", "text": "The ICO ( Initial Claes Offering ) function .", "title": "", "metadata": ""}
{"_id": "170cedccf4f2530914e9a1b4bda81636", "text": "returns time left .", "title": "", "metadata": ""}
{"_id": "47ef2b2a7c1040d78690fddb75cad8e4", "text": "Modified allowing execution only if stopped .", "title": "", "metadata": ""}
{"_id": "faac9cb2a1f90012f862956d1f3f6413", "text": "Counts number of contacts created by this factory .", "title": "", "metadata": ""}
{"_id": "ead7d523104b4e9b7ea0888edcc90bbd", "text": "Function for user to bet on team idx .", "title": "", "metadata": ""}
{"_id": "1fe9ab8606991fb8bfc70bcf931740f8", "text": "Start new tgr stage .", "title": "", "metadata": ""}
{"_id": "d5ba5d0ad1c0a0e87005e3226f505445", "text": "_holderAddress Token holder account address .", "title": "", "metadata": ""}
{"_id": "bcfa88d612a76169706747bfff7fa045", "text": "To check if Claimable .", "title": "", "metadata": ""}
{"_id": "88658489df4bb7daf9b30a0399cec4f8", "text": "Checks that a given Ponie is able to breed .", "title": "", "metadata": ""}
{"_id": "66b6fc4c2369c8e42010f30019876ecb", "text": "update the investor .", "title": "", "metadata": ""}
{"_id": "c986cfb7c7c8f5a5dece911735a4b806", "text": "Retrieve the jackpot amount .", "title": "", "metadata": ""}
{"_id": "2797550baeeed9c8493818d534b89159", "text": "Transfer tokens from one address to another if transfer is open .", "title": "", "metadata": ""}
{"_id": "ea3e42c8c2244252a72fcd1dede1d2d4", "text": "doubles the bet of the game with the given id if the correct amount is sent and the player did not double the hand yet .", "title": "", "metadata": ""}
{"_id": "76628cce2f588e34ba5b31e30cd0add3", "text": "get the bet numbers of a specific choice .", "title": "", "metadata": ""}
{"_id": "bba12d44312de449087252bb4f10c141", "text": "Approves another address to claim for the ownership of any tokens owned by this account .", "title": "", "metadata": ""}
{"_id": "ad31333795f3253c0ed0e570f3949562", "text": "'freeze ? Prevent Allow' 'account' from sending and receiving tokens .", "title": "", "metadata": ""}
{"_id": "cb98330df7c4c9c1cee8e664ffd813d8", "text": "Enables the ability of anyone to transfer their tokens .", "title": "", "metadata": ""}
{"_id": "221ccaea8c28bbea4cc779c0d37155d5", "text": "Constructor is called only once and can not be called again .", "title": "", "metadata": ""}
{"_id": "ee194b8c8f73f44ddef027af90240360", "text": "returns the number of connector tokens defined .", "title": "", "metadata": ""}
{"_id": "99162d46f9a76aa0a6d4d79abba2aff5", "text": "Get count of how many tokens an address has .", "title": "", "metadata": ""}
{"_id": "286a613f429e41b51619e9bb403ceacd", "text": "Increases the amount a given account can spend on behalf of the sender's account .", "title": "", "metadata": ""}
{"_id": "1197005a8f18e745dfbe4ca224b93dbf", "text": "return the time at which last global audit was done .", "title": "", "metadata": ""}
{"_id": "c15600d8a4fb04ea4dff4dfec1d22ffa", "text": "Buy Slogn tokens .", "title": "", "metadata": ""}
{"_id": "d287fd01a46fd855a49f0833663fef98", "text": "Remove contract .", "title": "", "metadata": ""}
{"_id": "f08fec7c38a89be9b067757fd8984cdc", "text": "Emergency Stop or Start ICO .", "title": "", "metadata": ""}
{"_id": "753dd65295b79e56146018f73bb2b731", "text": "Only who is allowed to distribute the GOT to the participant ETH addresses ( specified during the contract deployment ) .", "title": "", "metadata": ""}
{"_id": "2a00788381d96681f4f2b1d781558d6c", "text": "Get all a blob's flags .", "title": "", "metadata": ""}
{"_id": "d25ccea20353b59df18ba31fbe833d28", "text": "Bonuses for larger purchases ( in hundredths of percent ) .", "title": "", "metadata": ""}
{"_id": "bbad64f434d031972060ea21e2d65ff7", "text": "Function to facilitate detachment when contract is paused .", "title": "", "metadata": ""}
{"_id": "45ab99292edbd363a4540b2bd8e26239", "text": "mapping ( address uint ) public accountLevels ; .", "title": "", "metadata": ""}
{"_id": "dbf464965033e11b024dfc1d8045c6b0", "text": "Buy item with ETH .", "title": "", "metadata": ""}
{"_id": "d3dc2405bacf3f5f7c65cff9048a21cf", "text": "Accept ownership request , works only if called by new owner .", "title": "", "metadata": ""}
{"_id": "81bf22e6ed762e76ab14b4b73c49f349", "text": "callback for oraclize .", "title": "", "metadata": ""}
{"_id": "cd25f8c516bb7a3434173c9f0ad371c3", "text": "Withdraw funds to owners .", "title": "", "metadata": ""}
{"_id": "2503f2c994f8f15d4ce2fde72922780a", "text": "Send Contracts Ethereum to address owner .", "title": "", "metadata": ""}
{"_id": "6e975c46fa36b23253dbd7df337a7559", "text": "Extend parent behavior requiring beneficiary to be in whitelist .", "title": "", "metadata": ""}
{"_id": "f03a4068129ff638a64044111851e4c9", "text": "under no condition should you let anyone control two BOARD accounts .", "title": "", "metadata": ""}
{"_id": "0d4745d0aa5f027d4ac0cb5fe751d57d", "text": "Bonus Period 2 - - - Bonus 0-9 SMS - 3 10-49 SMS - 5 50-99 SMS - 10 100 SMS - 15 - - - Time - - - ( 11 days 9 hours 59 minutes 59 seconds ) .", "title": "", "metadata": ""}
{"_id": "2b603d780cba77ad81c2694db496edb7", "text": "Get all channels that an address participates in .", "title": "", "metadata": ""}
{"_id": "614dd990eac0621dbd976eb10d370cbb", "text": "Signature Bounty Drop batch by single amount .", "title": "", "metadata": ""}
{"_id": "b8b181014602a3d88911c01ead7f005a", "text": "execute a bid .", "title": "", "metadata": ""}
{"_id": "b621ecae749658d58054e27ef213ca22", "text": "update mapping .", "title": "", "metadata": ""}
{"_id": "4faa2c61ef44e1626a70ea857c193db6", "text": "Change the next milestone .", "title": "", "metadata": ""}
{"_id": "bd5a16fc1713fd93d7d6de35234f3f36", "text": "This function is not meant to be used .", "title": "", "metadata": ""}
{"_id": "021caaed17ca1a9aa51f628afd9802aa", "text": "Mint new tokens .", "title": "", "metadata": ""}
{"_id": "39dccf730b1d6d9c1902dcaaaad6a20c", "text": "if want to issue or remove tokens from circulation .", "title": "", "metadata": ""}
{"_id": "50ce13625efb0733e34c6610c8b46641", "text": "Resets the reclaim address to address ( 0 ) .", "title": "", "metadata": ""}
{"_id": "3c4f54c7f710386cdd2dba0c0efb7524", "text": "in total 2 . 5 .", "title": "", "metadata": ""}
{"_id": "b3cce4f4fab5542f94bb8c8ff9301134", "text": "Restrict to the state of enough Ether being gathered .", "title": "", "metadata": ""}
{"_id": "ffca8797ca1579b6c92750affe70d6ce", "text": "It calls parent BasicToken . transfer ( ) .", "title": "", "metadata": ""}
{"_id": "4561742e5279f0f1f8839bfb8dca4f20", "text": "Enables the transfer of tokens for everyone .", "title": "", "metadata": ""}
{"_id": "3681a124a658246b935e6e4c57b87ba0", "text": "batch send the current balance to the new version contract .", "title": "", "metadata": ""}
{"_id": "fa8b2b35101eaebf605c6a569fbb36d7", "text": "Function PAYABLE to pay a request in ether .", "title": "", "metadata": ""}
{"_id": "d702720ff9f8a33f727cb43c138b6e65", "text": "It is possible that funds were sent to this address before the contract was deployed .", "title": "", "metadata": ""}
{"_id": "88ba9fc41499e5a8dd1482c07de2f46a", "text": "Modifier to prepend to functions adding the additional conditional requiring caller of the method to be the etheraffle address .", "title": "", "metadata": ""}
{"_id": "4a437ddc85c96ce760b3a54985e45b0f", "text": "enables third-party contracts to mint mokens .", "title": "", "metadata": ""}
{"_id": "966edd0bfa9a9a69776b6ad5b01c2ec9", "text": "Approves a spender to spend an amount of your tokens on your behalf .", "title": "", "metadata": ""}
{"_id": "f10ba7fd8ff42287140fb29424517e86", "text": "SetFFSettings ( address vFounderTokensA , address vFoundationTokensA , uint vFounderTokensAllocation , uint vFoundationTokensAllocation ) .", "title": "", "metadata": ""}
{"_id": "d03515b2cc588015deaba66de24d477b", "text": "allow owner to remove ETH .", "title": "", "metadata": ""}
{"_id": "aee13fcb31e1cd8f26ccb4f7ca14e5b1", "text": "Crowdsale Helpers .", "title": "", "metadata": ""}
{"_id": "b769ef6a5c884f9d88946b317c00b01c", "text": "Returns address of MX contract from MX record associated with an ENS node .", "title": "", "metadata": ""}
{"_id": "942e2ac9e1de612181deb0641e61c4e8", "text": "get total coins sold per current round .", "title": "", "metadata": ""}
{"_id": "f6b9c8a321c17bb80d036c660cf20660", "text": "Round One Sale Period .", "title": "", "metadata": ""}
{"_id": "d5098bf4830939a9ca990102d899ee9e", "text": "For the trustee to add an address as a holder .", "title": "", "metadata": ""}
{"_id": "4516eb898c3ccc6853dbbe33edad0323", "text": "Multi-transaction of tokens .", "title": "", "metadata": ""}
{"_id": "966d5d251d0d9964987fcdc3aebb2237", "text": "Creates the token automatically ( inherited from zeppelin Crowdsale ) .", "title": "", "metadata": ""}
{"_id": "c5fccdd56d5e010bf3f2ff445295a54b", "text": "check contribution amount and time .", "title": "", "metadata": ""}
{"_id": "5e6c657957713f6f5a89737481d9c8b3", "text": "The basic entry point to participate the crowdsale process .", "title": "", "metadata": ""}
{"_id": "7bc8f2c416b90b84544ba83c7efd2185", "text": "Trigger emergency token pause .", "title": "", "metadata": ""}
{"_id": "0196d1f9c6c1177ab0d0f445a2d8b1ea", "text": "Buys aToken in exchnage for wei at the current ask price .", "title": "", "metadata": ""}
{"_id": "3c16e67dd605f4e04eb0e1fb0058e674", "text": "Updates contributors rewardTokens .", "title": "", "metadata": ""}
{"_id": "61bf5fd3613721fc749fd9b6ecb88940", "text": "Obtain total number of tokens in existence .", "title": "", "metadata": ""}
{"_id": "4feccb15b5a3e2d3041928cb30d38c77", "text": "Refund ether back to the investor in returns of proportional amount of SRN back to the Sirin s wallet .", "title": "", "metadata": ""}
{"_id": "43a409b15a843c3ccd68fae2bb290c66", "text": "Developer ( owner ) can open game .", "title": "", "metadata": ""}
{"_id": "2080312eb225dc40a34cd9ebada7e0e6", "text": "Allow the owner of address aproducer . address ( ) .", "title": "", "metadata": ""}
{"_id": "b82e48f62b3dccbc8e0cfdd0a1cc7497", "text": "Compute the final winner .", "title": "", "metadata": ""}
{"_id": "8f6cc9bdeebc023a3d742a6b536dece7", "text": "query locked tokens .", "title": "", "metadata": ""}
{"_id": "06cf890aa25310a592793135f9caa705", "text": "Copies the allowances of a batch of addresses from the legacy contract .", "title": "", "metadata": ""}
{"_id": "6bc560575de22b8252b18b7f367c9512", "text": "checks if it's time to make payouts .", "title": "", "metadata": ""}
{"_id": "8e859d6ecbf5ab0f3995df476f1e3914", "text": "dev edit functions below .", "title": "", "metadata": ""}
{"_id": "f35bb57c4fac098bf6effc025972d181", "text": "we can create promo monsters , up to a limit .", "title": "", "metadata": ""}
{"_id": "73ea1144f1191d70b6348bc388f639c9", "text": "bytes32 : The latest version of the application .", "title": "", "metadata": ""}
{"_id": "993c4f04d262afbabc1f1a8a4a712b69", "text": "Pixels are represented using 4-bits .", "title": "", "metadata": ""}
{"_id": "fa371352b921fbbf3526d00110673d27", "text": "Loser payout .", "title": "", "metadata": ""}
{"_id": "a77814472be1d05ab13ff974d7bf6bbf", "text": "Setter for the income percentage in the first coldwallet ( not setting this the second wallet will receive all income ) .", "title": "", "metadata": ""}
{"_id": "211e49e616775c43dac793124ee2a299", "text": "unfreeze frozen amount .", "title": "", "metadata": ""}
{"_id": "fe35bf77b2e058ad632be0f889b6556c", "text": "bonus shares .", "title": "", "metadata": ""}
{"_id": "f4076d58eead2efd6acb2642fc6d496f", "text": "called by the owner to stop minting .", "title": "", "metadata": ""}
{"_id": "cafc9c7b3cb5329d3f3e4fac1384b4de", "text": "Unhalt the contribution period .", "title": "", "metadata": ""}
{"_id": "a452783e2c7b65d71d62025514b2653f", "text": "Used by contribution front-end to obtain contributor's properties .", "title": "", "metadata": ""}
{"_id": "3e9136bebbdf6169b5a6d1db15b9343c", "text": "lets the owner close the contract if there are no player funds on it or if nobody has been using it for at least 30 days .", "title": "", "metadata": ""}
{"_id": "2c7a198225d630a4d844f28b9cb880ec", "text": "Admin function to update the location at index .", "title": "", "metadata": ""}
{"_id": "c49ac56e8fb26cec9ef79012fbe28979", "text": "Add a valid trader address .", "title": "", "metadata": ""}
{"_id": "7b2a6614a65a6ab5a680a1cb64c08306", "text": "function when someone gambles a . k . a .", "title": "", "metadata": ""}
{"_id": "0d4b028f825c82953134db73b97c1980", "text": "do multiple transaction in on call .", "title": "", "metadata": ""}
{"_id": "474daef27d938b1489948b4775754e96", "text": "return the amount of better offers for a token pair .", "title": "", "metadata": ""}
{"_id": "65f355aefbdd93221f1cc989440c7b7b", "text": "Calculate virtual balance of the owner of given address taking into account materialized flag and total number of real tokens already in circulation .", "title": "", "metadata": ""}
{"_id": "cdb2504a03d24e2d422a89a1d0a536e1", "text": "Allows resetting the entire bid decryption / appending process in case a mistake was made and it is not possible to continue appending further bids .", "title": "", "metadata": ""}
{"_id": "cf3cf33ed76ecc5d073b05971adf0d18", "text": "Check that we can release the token .", "title": "", "metadata": ""}
{"_id": "3de909d2f03fad113e47b5d4bcc3d3fc", "text": "tx3 : either player , knowing the reveal , can generate the game this tx calculates random , generates game events , and transfers tokens back to winners in order to make game costs fair , the frontend should randomly select one of the two players and give them the reveal to generate the game in a bit you could give it to the other player too . . . .", "title": "", "metadata": ""}
{"_id": "0f115eb9022bdaf1f4f4f5287a631d67", "text": "Swap this card for reward .", "title": "", "metadata": ""}
{"_id": "a1924e033db0b7f90d392baffa0070ee", "text": "Get no .", "title": "", "metadata": ""}
{"_id": "5d1a5b196040408ff6ee314e54439cb2", "text": "Set subscription end date - - can only be done by Rivetz .", "title": "", "metadata": ""}
{"_id": "d0ca9719220a3a37b81bff4baac34226", "text": "Set up new ESCB Dev .", "title": "", "metadata": ""}
{"_id": "771d793692605a0bca293e5bc6aafb2e", "text": "implementation of low level token purchase function .", "title": "", "metadata": ""}
{"_id": "cebdf49ba718a2702b177f12330d4cbc", "text": "Set the Exp given to the player when clearing this dungeon .", "title": "", "metadata": ""}
{"_id": "5c895bdeb5636da828758ad42d32db87", "text": "Refund ether to the investors in case of under Soft Cap end .", "title": "", "metadata": ""}
{"_id": "84a733fb916b0648d37ce8e7dc39c8f8", "text": "Withdrawal balance on successfull finish .", "title": "", "metadata": ""}
{"_id": "7c7a0196dd3d89f0fb41d8cf8349d6ce", "text": "UNAUTHORIZED if called not by one of partowners or contract's owner .", "title": "", "metadata": ""}
{"_id": "146071f0ba9f206c7869354ea0c628af", "text": "Returns all the relevant information about a specific girl .", "title": "", "metadata": ""}
{"_id": "3b8711e9a062b0d018d4d56583ac9724", "text": "Modifier that allow only the Crowdsale contract to be sender .", "title": "", "metadata": ""}
{"_id": "8df38e0303e32955d49d0efa0a14b745", "text": "switch to pause phrase here .", "title": "", "metadata": ""}
{"_id": "535656e3fe29c40447bb5e2f54a90bd5", "text": "function for checking if crowdsale is finished .", "title": "", "metadata": ""}
{"_id": "41143b5bd9a44f07645e4dc4fb0e68dd", "text": "This is used in the first case scenario , this will force the state to refunding .", "title": "", "metadata": ""}
{"_id": "168f0f15ed424a228276fc7a31579d3b", "text": "check if the contract is deprecated .", "title": "", "metadata": ""}
{"_id": "5103130d20603b4e2c2789c40b553c20", "text": "ownership can be transferred to provided newOwner .", "title": "", "metadata": ""}
{"_id": "f89cd1f4ab8edd076993adacd0ed2a92", "text": "Returns the cap of a specific user .", "title": "", "metadata": ""}
{"_id": "a6a07dcdacb135bc34473015e4e8c303", "text": "set beneficiary - the account receiving platform fees .", "title": "", "metadata": ""}
{"_id": "a2096324ff7ac64393f280d9dbeb6b7b", "text": "Checks if a given address is the current owner of a particular Kitty .", "title": "", "metadata": ""}
{"_id": "eb993fb71c3d5b2098d23503d412cbfc", "text": "Sets the token price in US .", "title": "", "metadata": ""}
{"_id": "3c44679e91e75a0f4a04ff220dcb81f4", "text": "Set the Etheraffle multisig contract address , in case of future upgrades .", "title": "", "metadata": ""}
{"_id": "96292ec357e6c7fa8a4592f3702256a4", "text": "this function is triggered manually by owner after all pixels sold .", "title": "", "metadata": ""}
{"_id": "579b75b020d94dfd8279b89bb1f66c0d", "text": "Public Book View .", "title": "", "metadata": ""}
{"_id": "17a78364e5421e0ef032bf1ae225491b", "text": "Check last token on sale .", "title": "", "metadata": ""}
{"_id": "73d06ec29b6beb88dbd9f157ebde47db", "text": "Revokes previously issued vesting grant .", "title": "", "metadata": ""}
{"_id": "e52706c0969de065ebcf36c7fcd127df", "text": "If the soft cap has not been reached and the sale is over investors can reclaim their funds .", "title": "", "metadata": ""}
{"_id": "a0ebae01c9e73e25280c85906abbf60b", "text": "Transfer ownership to _newOwner .", "title": "", "metadata": ""}
{"_id": "13b02c35b73a9d12f7bc79e465b6b5b6", "text": "Add address to the list of addresses that ever had non-zero token balance .", "title": "", "metadata": ""}
{"_id": "f4162b81e10b6f371dfd1b6f1d1867a1", "text": "Modifies self to contain everything from the first occurrence of needle to the end of the slice .", "title": "", "metadata": ""}
{"_id": "c8f27d657809ce6704efd5ccacf92a73", "text": "Sets the new dividend percentage for unclaimed plots .", "title": "", "metadata": ""}
{"_id": "dde1d1f04002c7de9b119a112496d1db", "text": "This function is used to do bulk transfer token to contributor after successful audit manually .", "title": "", "metadata": ""}
{"_id": "91e2e05064798e5b0d8cc5c8a7223972", "text": "Returns correct stage , even if a function with timedTransitions modifier has not yet been called yet .", "title": "", "metadata": ""}
{"_id": "e279d5620bdac0d440c02a9c6c646121", "text": "Judge whether you can withdraw money .", "title": "", "metadata": ""}
{"_id": "e029d5eeb060f7493e7d3263a886a085", "text": "Handle lucky pot .", "title": "", "metadata": ""}
{"_id": "73ea743f81966fbd0c10e9d777097302", "text": "Change the betting price if Ether would surge .", "title": "", "metadata": ""}
{"_id": "87a72a9457a5377a6f5bd68ee33d812a", "text": "change rate of public sale .", "title": "", "metadata": ""}
{"_id": "5cdc7e99effdb70fa114def60be0579f", "text": "Unique address .", "title": "", "metadata": ""}
{"_id": "966acc2540de665ab0a17d99c938b724", "text": "Helper function to do rounded division .", "title": "", "metadata": ""}
{"_id": "851a877fa808158e45cfd1d6bc7b3970", "text": "Example : 0 . 00007115 BTC will be setPrice ( BTC , 7115 , 8 ) .", "title": "", "metadata": ""}
{"_id": "cc9c5e03be0eeeac826d2920c177de99", "text": "Public constant functions .", "title": "", "metadata": ""}
{"_id": "b8162b4a9f648228a13120e7e5a515dd", "text": "Get total expectedAmount of a request .", "title": "", "metadata": ""}
{"_id": "d411d426644ac453ae50942c0e4e6038", "text": "withdraw all of the Ether .", "title": "", "metadata": ""}
{"_id": "87b30248356abc4e6bf8736ac2cec1b6", "text": "each angel can only be on ONE sponsored battleboard at a time .", "title": "", "metadata": ""}
{"_id": "811c130bdf36dc3f1b598d3ec9787dc3", "text": "calculates wmount of EGL we get , given the wei and the rates we've defined per 1 eth .", "title": "", "metadata": ""}
{"_id": "5ac2aa89b8779bf5594fc297f3dceabe", "text": "Creates a new color with the given name and assigns it to the contract .", "title": "", "metadata": ""}
{"_id": "22fc375e4f1afc76932f4b39bfc835c9", "text": "Function to issue tokens for investors who paid in ether .", "title": "", "metadata": ""}
{"_id": "c2c45c2709b8048f37bb828d15f934a1", "text": "generates randomized IVs for a new monster .", "title": "", "metadata": ""}
{"_id": "fd0b1171b9986cc64201d2d499640041", "text": "transfer ownership of this Publisher record .", "title": "", "metadata": ""}
{"_id": "9dcc80323c73425a7deee3daa58d45f1", "text": "withdraw NAC and ETH for top investor execute by investor .", "title": "", "metadata": ""}
{"_id": "2ed4d741064471dd2b42f2118be6d193", "text": "Gives bounty reward to user .", "title": "", "metadata": ""}
{"_id": "a49c0ed8c6bc91aa63f0e094f66b1674", "text": "Returns total number of issuances after filters are applied .", "title": "", "metadata": ""}
{"_id": "c605096bd78607ba10f9761dc5acbe90", "text": "Set address withdaw wallet .", "title": "", "metadata": ""}
{"_id": "b2ba053535fa39244f2a48eff5c9e8f7", "text": "Set end time for each tier .", "title": "", "metadata": ""}
{"_id": "815f67ac02d62554f8d13d478077062e", "text": "Transfers the balance of the sale auction contract to the MonsterCore contract .", "title": "", "metadata": ""}
{"_id": "1bf0e8576da2408746e8366800f74180", "text": "public ( command ) : send ETH ( requiredBalanceForMasternodeInEther ) to contract to become a masternode .", "title": "", "metadata": ""}
{"_id": "f2d1f41cc94b21c2345095fce35ce29c", "text": "return token if case when need to redeploy auction contract .", "title": "", "metadata": ""}
{"_id": "354d22301e2d663e186c474d9e571d03", "text": "Check how many tokens investor can claim .", "title": "", "metadata": ""}
{"_id": "68b4af69a19f77f783362c00b0248839", "text": "Get History .", "title": "", "metadata": ""}
{"_id": "d75e2b4520762eb240272abe614ee162", "text": "Public Order View - get full details of an order .", "title": "", "metadata": ""}
{"_id": "0f70e587745265979613ccea6ffd6e71", "text": "If caller is one of wallet owners Function note his confirmation for transaction number i .", "title": "", "metadata": ""}
{"_id": "29487cd423bc17db47af3c14ee8c053c", "text": "Calls the tokenFallback function of the token receiver .", "title": "", "metadata": ""}
{"_id": "10bfa2643e20b72b59b95803aa87c8da", "text": "Setup the disbursements and tokens for sale .", "title": "", "metadata": ""}
{"_id": "144e6d7a2ddceec313260bd6e180384c", "text": "this closes it when we want to close - rather than waiting - this is BAD .", "title": "", "metadata": ""}
{"_id": "4f3186d23074ecf5de00e01fd9443ea7", "text": "sends a query to oraclize in order to get random numbers in 'inseconds' seconds .", "title": "", "metadata": ""}
{"_id": "71cffcd02ab5a06f4f1e67a499530d46", "text": "To Find Users Token Ammount and Box number .", "title": "", "metadata": ""}
{"_id": "14623a7c0dd2a0874a41bd6d1bc3ab81", "text": "Gets the total winning votes for reward distribution purposes .", "title": "", "metadata": ""}
{"_id": "0fd5d8a7818adc9748237a2909c5212d", "text": "define the other cards which might play in defining the winner .", "title": "", "metadata": ""}
{"_id": "a53f53d687b044742f5762d563d9e7f7", "text": "returns the name ETHMOJI .", "title": "", "metadata": ""}
{"_id": "780ede68421e327a3c17ac715d3ab4bb", "text": "This function is used to both transfer the authority and update the mode .", "title": "", "metadata": ""}
{"_id": "d7185452dcc6bc70a3c03ae2aaf9e5a1", "text": "Is the fundraiser active ? .", "title": "", "metadata": ""}
{"_id": "840aca0cd7579bf6c162dd4a8a374df8", "text": "Calculates amount of tokens by cents .", "title": "", "metadata": ""}
{"_id": "2958b0ecd85571fe3d89311b1b2fad67", "text": "Pause Round B .", "title": "", "metadata": ""}
{"_id": "355d852df03b1d8ec21b225de927fb14", "text": "Withdraw the wei to team wallet .", "title": "", "metadata": ""}
{"_id": "566acdb67996d3004a307e6233c770e5", "text": "balance returns the current balance of wallet .", "title": "", "metadata": ""}
{"_id": "5dfd719acb0feee52ae34195f6e6b7d7", "text": "The auction contract variables are defined in EtherDogBase to allow us to refer to them in EtherDogOwnership to prevent accidental transfers .", "title": "", "metadata": ""}
{"_id": "36a82ddd1b3d01f0b5fea156b0b9f4cb", "text": "Allows owner to resume puchases during the landsale .", "title": "", "metadata": ""}
{"_id": "5bd3c35bc7d809fbc296302b04165bfc", "text": "No delay , can only be called once - after that the standard registry process with a delay must be used .", "title": "", "metadata": ""}
{"_id": "85351c514572889f08fb0f71d92fd857", "text": "To check whether address is whitelist or not .", "title": "", "metadata": ""}
{"_id": "09e9937beebea400632a88448223c3eb", "text": "return the information about each charger in queue contract .", "title": "", "metadata": ""}
{"_id": "660b43fc00a1aba76470ef11d7581954", "text": "Get the remaining amount of token user can receive .", "title": "", "metadata": ""}
{"_id": "1e0baa65ee54474f635b5383b769e7e9", "text": "Prevent accounts that are blocked for transferring their tokens , from calling approve ( ) .", "title": "", "metadata": ""}
{"_id": "6e58e302ec0e0144b734ba4f3234ec5f", "text": "Adjust the token value before the ICO .", "title": "", "metadata": ""}
{"_id": "823a74d1ca08b923131210271693b8ee", "text": "Verify investors .", "title": "", "metadata": ""}
{"_id": "02b3c710fc666bd7ffd85cc56632389a", "text": "Some magic you won't understand .", "title": "", "metadata": ""}
{"_id": "774d220a545e8cd4a8a0a921937e133f", "text": "allocate tokens for the early investors .", "title": "", "metadata": ""}
{"_id": "a4b0dc03201404c9cd9c3537a3895689", "text": "Function to pay back in ERC20 token a request to the payees .", "title": "", "metadata": ""}
{"_id": "7eac718257ff90508b59d898d38fd9a9", "text": "Securely transfers the ownership of a given asset from one address to another address , calling the method onNFTReceived on the target address if there's code associated with it .", "title": "", "metadata": ""}
{"_id": "4fb6561d18a1bc918ebfd85da79f283d", "text": "unix timestamp for current moment in time .", "title": "", "metadata": ""}
{"_id": "21255ffbc2750efbd1c609dc44b3225e", "text": "Update accounting .", "title": "", "metadata": ""}
{"_id": "7fd349025ddd7919097196343f7e2b98", "text": "set contribution dates .", "title": "", "metadata": ""}
{"_id": "79a1b5059d97977aacb163104d57e3d7", "text": "withdraw DTH when a shop add by admin is delete .", "title": "", "metadata": ""}
{"_id": "328edba8c3ed0c01f5fd73928a402d62", "text": "Overload to set the board status when we only have a boardId .", "title": "", "metadata": ""}
{"_id": "f38c588805fc31ae6cc3c2e096219762", "text": "Process purchase .", "title": "", "metadata": ""}
{"_id": "3e9f0bdbed06278dbe9643e6a69f8c27", "text": "Burn DAO tokens in exchange for Spork tokens .", "title": "", "metadata": ""}
{"_id": "bb05af466ec8e157b74b3efdb000592f", "text": "Get referrer balance .", "title": "", "metadata": ""}
{"_id": "6440c60fad8c1df4c8e7e5da7b0a6da0", "text": "Returns the current price of a sale item .", "title": "", "metadata": ""}
{"_id": "e4bcc938e8119a2ad1b74e5043b0bca0", "text": "distributes eth based on fees to com , aff , and p3d fees_ 0 J3Ddatasets . TeamFee ( 50 , 0 ) ; .", "title": "", "metadata": ""}
{"_id": "9aa42c2d0c00b71f65cc62612ac8ffc9", "text": "withdraw tokens from the contract .", "title": "", "metadata": ""}
{"_id": "eadf845000feb88bf5333eecabe5bb91", "text": "Calculates ICO bonus tokens .", "title": "", "metadata": ""}
{"_id": "99a5c511f00be890e7a3d908f2fc218c", "text": "Transfer multiple deeds owned by another address , for which the calling address has previously been granted transfer approval by the owner .", "title": "", "metadata": ""}
{"_id": "296c2bb1324275e5bc126475e3133249", "text": "Called at the end of the crowdsale when it is eneded .", "title": "", "metadata": ""}
{"_id": "36e5e6095649194d70bdb3b60256b440", "text": "should be called by crowdSale when crowdSale is finished .", "title": "", "metadata": ""}
{"_id": "f1016512416df3d6c9fe258584df2a7b", "text": "Creates a new Token Auction .", "title": "", "metadata": ""}
{"_id": "6b6411b2e56d473e25d281d4b4a0bb58", "text": "The address of the controller is the only address that can call a function with this modifier , also the burner can call but also the target of the function must be the burner .", "title": "", "metadata": ""}
{"_id": "612a13871331e7efc0c4fb57a36b1a40", "text": "Public Order Placement - create order and try to match it and / or add it to the book .", "title": "", "metadata": ""}
{"_id": "0fca155942866f762d6e57d541f681fa", "text": "Create a new timelock to replace the old one .", "title": "", "metadata": ""}
{"_id": "af3c035f615077f7386758adc3f7d795", "text": "set completed butts .", "title": "", "metadata": ""}
{"_id": "8ba69e168b407d0d8413453a2a1e65a7", "text": "invariant : acc_Premium + acc_RiskFund + acc_Payout + acc_Balance + acc_Reward + acc_OraclizeCosts 0 .", "title": "", "metadata": ""}
{"_id": "6de6aefdc57c5d30b0b02aa7e523966a", "text": "To be called when ICO is closed , burns the remaining tokens but the D-WALLET FREEZE VAULT ( 1000000000 ) and the ones reserved for the bounty program ( 24000000 ) .", "title": "", "metadata": ""}
{"_id": "4511a884c62610600d5ae880e41922ec", "text": "Increase house stake by msg . value .", "title": "", "metadata": ""}
{"_id": "d2e0d278574afc3fd67ccdffceec9b1f", "text": "Check transfer ability and sender address before transfer .", "title": "", "metadata": ""}
{"_id": "48c4db6c20798b321c90fb181eaf20c8", "text": "decides if round end needs to be run new round started .", "title": "", "metadata": ""}
{"_id": "cc0b08c1c3b1d9cde4e8f3d35af6756e", "text": "Creates ERC20 standard token .", "title": "", "metadata": ""}
{"_id": "977527120c0e481b17413a0f5fcf69fa", "text": "check the total of vested tokens still locked for a particular address .", "title": "", "metadata": ""}
{"_id": "4154f4e92cb8bc59c7b4e88bc2ae77a1", "text": "true if ether was successfully withdrawn , false otherwise .", "title": "", "metadata": ""}
{"_id": "03866703cf1dbab80ed259444998621a", "text": "For wallet Angel Sales .", "title": "", "metadata": ""}
{"_id": "4a10a26f0a9a6c906630d2a563220c80", "text": "Computes total bonuses amount by value .", "title": "", "metadata": ""}
{"_id": "6b115539f3b8e3e09b275205edd7a450", "text": "Initializes contract with initial supply tokens to the creator of the contract .", "title": "", "metadata": ""}
{"_id": "b265b58d93101a1e0c6509b103fc6d90", "text": "withdraw ETH from contract .", "title": "", "metadata": ""}
{"_id": "77804d0ffd4781ead9e2b84373842d03", "text": "amount of vested token .", "title": "", "metadata": ""}
{"_id": "2ac9dc7ca4fdd06dbed2d732fe2e6d1c", "text": "Transferencias desde direcciones a nombre de terceros ( concesiones ) .", "title": "", "metadata": ""}
{"_id": "c0e8a8b97e0426d431f8a837d5aecfb5", "text": "get reput return reputation data from teller .", "title": "", "metadata": ""}
{"_id": "14049cf2e2879ed45c4f8d47447b76de", "text": "Burn Dony by User .", "title": "", "metadata": ""}
{"_id": "8ff288cf926a123ac04f53be90f1c684", "text": "Calculate the current dividends associated with the caller address .", "title": "", "metadata": ""}
{"_id": "0c7a238fe2691aedcae0beffb70d2067", "text": "Total amount of token .", "title": "", "metadata": ""}
{"_id": "b9b2014e3431a3f99917cf3f624f06c2", "text": "prevents contracts from interacting with gscam .", "title": "", "metadata": ""}
{"_id": "af973d17855ca555d95ff3e624acbab9", "text": "unfroze tokens if some left unsold from ico .", "title": "", "metadata": ""}
{"_id": "eb032d58e3d1f5ea9e79bb04b5980cd9", "text": "creates a new swap .", "title": "", "metadata": ""}
{"_id": "e32cb8790523baf8bb6bc0f5d38d6821", "text": "Remove an administrator .", "title": "", "metadata": ""}
{"_id": "4607bde840faf8cf169bfdc88c0e182b", "text": "Updating the player's time periods left , according to the current time - board last update time .", "title": "", "metadata": ""}
{"_id": "dc7c000bc13ae99b4822cc7a8f1ada68", "text": "add an exchanger role to an address .", "title": "", "metadata": ""}
{"_id": "5499ec3ff25eddd9ff34f21937d64260", "text": "Transfer donations or accidentally received Ethereum .", "title": "", "metadata": ""}
{"_id": "ff30fa368531457978cdd8bbf7c2cc9d", "text": "initiated from Signals ( passing the ownership to a oracle to handle a script is recommended ) .", "title": "", "metadata": ""}
{"_id": "fc725fe5258f9fe0ca974fed69fef3c0", "text": "allows to set the address of the provider for the Favor this can be done by the requester or the C4F system once the provider accepts , the providerLock flag disables changes to this .", "title": "", "metadata": ""}
{"_id": "ac321682dd5a65e375c9457a5e334713", "text": "Extend parent behavior to update user contributions .", "title": "", "metadata": ""}
{"_id": "f6eb797b51b899596caeb615fd620cde", "text": "allow owner to set call data to be sent along to fundraiser target address .", "title": "", "metadata": ""}
{"_id": "c287d488c2df01db07b5ef237022997e", "text": "This is used to send tokens and execute code on other smart contract , this method is disabled if emergencyLock is activated .", "title": "", "metadata": ""}
{"_id": "0b3c7d285bc64f020381cd93959a3a31", "text": "Cancel the order , returning all funds to the owner .", "title": "", "metadata": ""}
{"_id": "7e181b2c56ed6fa46f8389442466275e", "text": "Allows the Owner to run any emergency updates on the time line .", "title": "", "metadata": ""}
{"_id": "133c7c8209859ee733e4179871562bc5", "text": "Allows the owner to propose the minting of tokens .", "title": "", "metadata": ""}
{"_id": "bdf3be7e22e0bce5fe760817d3edeb9a", "text": "Checks if the supplied address is able to perform transfers .", "title": "", "metadata": ""}
{"_id": "e0912245341bcf1a73cf9fdd4eee2a84", "text": "send fixed value to multi addresses .", "title": "", "metadata": ""}
{"_id": "4999c1b9f7d21062d472137488c9809f", "text": "This modifier can be used on functions with external calls to prevent reentry attacks .", "title": "", "metadata": ""}
{"_id": "a582c5543198268d184789006f01f462", "text": "Function which calculate tokens for every month ( 6 months ) .", "title": "", "metadata": ""}
{"_id": "e0736895d4cd622cb0140dbb1f7daf62", "text": "This can be called to manually issue new tokens from the bonus reward .", "title": "", "metadata": ""}
{"_id": "5a4f0925a2dc2c92cf0bd449d1fce385", "text": "Remove _account from the whitelist .", "title": "", "metadata": ""}
{"_id": "a42d4f77aefc28d8e7ee1f1725d4ae8a", "text": "Overridden method used to allow different rates for private / pre sale .", "title": "", "metadata": ""}
{"_id": "bef9c7c068a694603afdeae02dd54886", "text": "For claimant : returns an array of promotion IDs that an address claimed .", "title": "", "metadata": ""}
{"_id": "ab7f6d050a02ea8d00c27e526728428a", "text": "update public data .", "title": "", "metadata": ""}
{"_id": "47a6102d053443897672ebad3abf8332", "text": "Set the price to pre-sale .", "title": "", "metadata": ""}
{"_id": "a32b8455236ea6948035f53d70331aa4", "text": "Burn unsold tokens from the ICO balance .", "title": "", "metadata": ""}
{"_id": "2a61a78d6547c8918c67e445177e3181", "text": "Sets a tweedentity .", "title": "", "metadata": ""}
{"_id": "9b33482ad4edc8133aed0d6478c8cfc8", "text": "Returns the storage location of the number of tokens sold .", "title": "", "metadata": ""}
{"_id": "1a8d4482de09be36c6102a69880ed200", "text": "For the UI to properly display the winner's pot .", "title": "", "metadata": ""}
{"_id": "4ed3be1933507c63196104eeb91237dd", "text": "get the token balance inside this contract .", "title": "", "metadata": ""}
{"_id": "ccd3f9e4575708e039f1e620018ac817", "text": "Change owner of tokens after end of PreSale .", "title": "", "metadata": ""}
{"_id": "696446ef22478a7223cbec3ff43ed83c", "text": "Bounty to eththrowaway4 .", "title": "", "metadata": ""}
{"_id": "0a80679205c74658fbe5cd2d1a556da6", "text": "transfer a list of amounts of tokens to a list of accounts , and then freeze the tokens .", "title": "", "metadata": ""}
{"_id": "a7b8bf2aae0a0079626fa0e52c420e38", "text": "Owner withdraws Ether in contract .", "title": "", "metadata": ""}
{"_id": "60c35c5bc00b7916d82fef70b256c64f", "text": "updates the rate .", "title": "", "metadata": ""}
{"_id": "d1f97f48a13e05322773b44313fea87a", "text": "Owner may burn own tokens .", "title": "", "metadata": ""}
{"_id": "44d46ddd05a486bcd6a8e5077ea17e1d", "text": "Get current total token sale .", "title": "", "metadata": ""}
{"_id": "c10873094a637fe2404abd2f799802af", "text": "used to change the fee of the subscription cost .", "title": "", "metadata": ""}
{"_id": "383341b62dcc8f373b7688c732c86895", "text": "Returns auction info for an token on auction .", "title": "", "metadata": ""}
{"_id": "f920e7c2e17de31d5b3dd8c02a5eb272", "text": "Deprecates the engine , locks the creation of new loans .", "title": "", "metadata": ""}
{"_id": "812269a95c6aaa90a34cddbf9cf173f0", "text": "Dump divs and dump ETH into bankroll .", "title": "", "metadata": ""}
{"_id": "28106992b7a2dc536617b181d8ad061f", "text": "Get address of contract owner who performed contract creation and initialisation .", "title": "", "metadata": ""}
{"_id": "ab0633414c87e821a83c609fdec50197", "text": "Transfer P3D tokens .", "title": "", "metadata": ""}
{"_id": "57a60374709177f9f9c03ad320163164", "text": "Transfer the balance from token owner's account to to account - Owner's account must have sufficient balance to transfer - 0 value transfers are allowed - only owner is allowed to send tokens to any address - not owners can transfer the balance only to owner's address .", "title": "", "metadata": ""}
{"_id": "cbc20d0a1b9e93f093f2f08c53f5efd6", "text": "show how many nanograms of DGX is in the Marketplace's inventory .", "title": "", "metadata": ""}
{"_id": "4dde05800636c329d55354d0cc4d9c57", "text": "Access modifier for authority-only functionality .", "title": "", "metadata": ""}
{"_id": "56650109a7ca4559420780946cb441d8", "text": "payout of the accepted deposits to the pre-designated address , available once it's all over .", "title": "", "metadata": ""}
{"_id": "f242c2f11a9472c6577d6934453a0351", "text": "gets how many tokens an address owners .", "title": "", "metadata": ""}
{"_id": "25b996ad5f35e5b3d0f8df3dcbbb07c6", "text": "Check if condition hold , if not , log an exception and revert .", "title": "", "metadata": ""}
{"_id": "39bafe1c1ad4120b477c7fc547b1130f", "text": "the crowdsale rate .", "title": "", "metadata": ""}
{"_id": "603abd56779008a3375cd8170bdee83b", "text": "Holder Functions .", "title": "", "metadata": ""}
{"_id": "984a9a83cd7d687f195c6288811600c0", "text": "Allows owner to execute a confirmed transaction .", "title": "", "metadata": ""}
{"_id": "c8340a090abf34e3244e969702b5d641", "text": "UI Helpers .", "title": "", "metadata": ""}
{"_id": "96fd501f05b30225f104e06c6ea127a8", "text": "update release amount for single day according to dividend rule in https : / / coincool . cool .", "title": "", "metadata": ""}
{"_id": "715eb5efbdb47cf30aacfee2e07259b2", "text": "Allow the owner or admins of the contract to assign a new allocation .", "title": "", "metadata": ""}
{"_id": "ebfa085d4b264a7d883b76dc866adf37", "text": "Token Distribution .", "title": "", "metadata": ""}
{"_id": "3bef52ba4d33d17587116040280a5daa", "text": "Function to stop payments .", "title": "", "metadata": ""}
{"_id": "6c75968cb33f6c3a2044ae9cfd63ce84", "text": "send fees to all contract owners .", "title": "", "metadata": ""}
{"_id": "802ace0a0da6055d0e0a0a82727b934e", "text": "Allows for deposit of ETH and CHI at the same time ( to avoid temporary imbalance in the market ) .", "title": "", "metadata": ""}
{"_id": "cc4c7a5d210ae64df21c964be7b7afd8", "text": "Retrieves the name of _addr , if any .", "title": "", "metadata": ""}
{"_id": "d8ef672b6c6acf719f95f30bce238a41", "text": "Define how many wonderful Kitten Coins contributors will receive for participating the selfdrop .", "title": "", "metadata": ""}
{"_id": "f5520bef652ce1980caa351995a0d015", "text": "Adds a requester to the whitelist .", "title": "", "metadata": ""}
{"_id": "94366ee415d91e9b01e0c6ced7c9081f", "text": "whether given address is a contract or not based on bytecode .", "title": "", "metadata": ""}
{"_id": "09c091709fd39cb4ae03f5bab85d00f1", "text": "Updates multiple reserved token listings .", "title": "", "metadata": ""}
{"_id": "165851d39d7a35961dfffc1d1b62645b", "text": "approve investors in bulk .", "title": "", "metadata": ""}
{"_id": "9078020b1f159cc5407cd35fa0722840", "text": "active - true if TokenDistribution is going on , false otherwise .", "title": "", "metadata": ""}
{"_id": "6a6be4bc0093195d46853ee165c4af93", "text": "Allow the CFO to withdraw balance available to this contract .", "title": "", "metadata": ""}
{"_id": "0d87f12c73b7c3a87a831b8bcbd8963f", "text": "In case the amassador quota is not met , the owner can manually disable the ambassador phase .", "title": "", "metadata": ""}
{"_id": "3ee4d065f694f425b917195eb1117fb2", "text": "Release time-locked tokens for any vested address .", "title": "", "metadata": ""}
{"_id": "a1b6ef455415510d0780645ddd5a4df9", "text": "disable if enabled .", "title": "", "metadata": ""}
{"_id": "ac4580d8e9bf05a7ee79da02459f915d", "text": "Prevent Freezing ( Once system is ready to be locked ) .", "title": "", "metadata": ""}
{"_id": "679a5d181ceaa2887fd483317597ce65", "text": "Create a new instance of an app linked to this kernel and set its base implementation if it was not already set .", "title": "", "metadata": ""}
{"_id": "67f9f62ccaa986f2245a191c669c7e2c", "text": "unconfirms payment made via investment id .", "title": "", "metadata": ""}
{"_id": "4d1421149aceaa87e707c9046ce6bc62", "text": "Modifier for accessibility to define new hero types .", "title": "", "metadata": ""}
{"_id": "e01e2d42b514decfd42cd29d1f8b652e", "text": "Creator / Owner can Locked / Unlock smart contract .", "title": "", "metadata": ""}
{"_id": "82d7fe8a36effa34e3b9388c085acaa3", "text": "getRate used to get the price of each token on weekly basis .", "title": "", "metadata": ""}
{"_id": "f9cfcf3eea63d7c9965efa7fee03ab2e", "text": "_addModule handles the attachment ( or replacement ) of modules for the ST .", "title": "", "metadata": ""}
{"_id": "f249ff86b6e242c806215bdf5f80b1cf", "text": "Registers an Asset residing in a chain .", "title": "", "metadata": ""}
{"_id": "c86eb280c465e892bbee817a968c93eb", "text": "returns who has the biggest dick .", "title": "", "metadata": ""}
{"_id": "4a9889ebb4c9bb7887e7000797f17939", "text": "When transfering tokens decrease assuranvePayments for sender and increase for reciever .", "title": "", "metadata": ""}
{"_id": "dbc6c14596071759b3aad11d1982ee06", "text": "function for the opportunity to gift parrots before the start of the game .", "title": "", "metadata": ""}
{"_id": "761cbc92e4f6e18c5b412047d9fb88cb", "text": "Manually back VISTAcoin owner address .", "title": "", "metadata": ""}
{"_id": "5a058a0723b635431bbb4aea9e96583a", "text": "register user function .", "title": "", "metadata": ""}
{"_id": "7f90d9f891d653c914d3e73ed068e26f", "text": "Get function signature from _data .", "title": "", "metadata": ""}
{"_id": "f71efba1b937f29c4d3867afeda52991", "text": "Validation of a token transfer , used with BTC purchase .", "title": "", "metadata": ""}
{"_id": "8600b81c837c65015c873dd92c005f35", "text": "Update prenup text , but only if both partners have previously agreed to update the prenup .", "title": "", "metadata": ""}
{"_id": "335cba3fa904f0e00cb88b64f1d39854", "text": "get a address of all deployed matches .", "title": "", "metadata": ""}
{"_id": "ce2e73afe23daf8d98b2f29eb18f58fc", "text": "resume contract .", "title": "", "metadata": ""}
{"_id": "87af1c23be16d8e926adc3deb9cda417", "text": "Function to finish this sale .", "title": "", "metadata": ""}
{"_id": "8e0af42deffd15f0bc2decbdb2eaca80", "text": "Get list of transaction IDs in defined range .", "title": "", "metadata": ""}
{"_id": "ea79efd5f43ca1e6ae0e3f00db56dd91", "text": "Approve should be called when allowed _spender 0 .", "title": "", "metadata": ""}
{"_id": "29572a8d04298546e59c0a37661a0f2b", "text": "indx : The index address for the registry application - contains getters for the Registry , as well as its init funciton .", "title": "", "metadata": ""}
{"_id": "a33599cac6d1f20a2d8532eb9de523d2", "text": "get current round details .", "title": "", "metadata": ""}
{"_id": "e7f5c17ebc57de75b041debb1a580a2a", "text": "! Setup the address for new contract ( to migrate coins to ) .", "title": "", "metadata": ""}
{"_id": "cfedf9db89e537aabebeefc5ac0db4ae", "text": "Check if asset is in the state passed by parameter .", "title": "", "metadata": ""}
{"_id": "7a99e9bf6dd10c29da47637d9d6d87fb", "text": "Withdraw the contributed Ether stored in this contract if the funding goal has been reached .", "title": "", "metadata": ""}
{"_id": "9c5d15907d7a5a2b1bb74ab41185db91", "text": "Make transfer of tokens available to everyone .", "title": "", "metadata": ""}
{"_id": "065afbe507caac51664d49d3c9a0c6f8", "text": "lock transfer during the ICO .", "title": "", "metadata": ""}
{"_id": "f52ccd2daced6a88bb96f1c061e63e44", "text": "Will get the Maximum of addresses to be used for making it rain .", "title": "", "metadata": ""}
{"_id": "9ad747d3654bc1d508fc9c1e2479bce5", "text": "This is function , is needed to change address feeAccount .", "title": "", "metadata": ""}
{"_id": "bb8d58e3068eeb731c9d94265678b1aa", "text": "function to calculate the total no of tokens with bonus multiplication .", "title": "", "metadata": ""}
{"_id": "9d8b6c01b5e400493f73dbdaba4fbacf", "text": "Burn From .", "title": "", "metadata": ""}
{"_id": "7537fe7305800a1ff385ebfa1294ef1d", "text": "update beneficiarry adress only by contract owner .", "title": "", "metadata": ""}
{"_id": "b0be99b757726f946b6b827825f87710", "text": "Get complete information about a country token .", "title": "", "metadata": ""}
{"_id": "9a622942e98b49f786230b9b0b143c20", "text": "sets the global registration fee .", "title": "", "metadata": ""}
{"_id": "092720d9a3fcd1f51d0351dcf7aa4b2a", "text": "Computes the next gen0 auction starting price , given the average of the past 5 prices + 50 .", "title": "", "metadata": ""}
{"_id": "53226d8feb1c6753c788ad255499214f", "text": "drain ether called by only owner .", "title": "", "metadata": ""}
{"_id": "5b07ce130bd4b71d46630ed47b189be7", "text": "Emergency Pause and Release is called by Owner in case of Emergency .", "title": "", "metadata": ""}
{"_id": "a799de68accebd05d0c67be76e500399", "text": "Buy unlimited access to a freelancer vault .", "title": "", "metadata": ""}
{"_id": "ba6bb8eb47dfa541f848ca888f25a0c4", "text": "Getters Spaceship Upgrades .", "title": "", "metadata": ""}
{"_id": "9559a19c8c15de47a7038cc89c9cdc9b", "text": "Returns the maximum amount of funds the ICO can receive .", "title": "", "metadata": ""}
{"_id": "68033cda28775e779f32ffea1c4371a9", "text": "takes enum .", "title": "", "metadata": ""}
{"_id": "1d946c3f8935e34ee897293762d9a5f7", "text": "Transfers a loan to a different lender , the caller must be the current lender or previously being approved with the method approveTransfer ; only loans with the Status . lent .", "title": "", "metadata": ""}
{"_id": "343996ffef1f24575c6a04cc171d34eb", "text": "Updates the data for a specific plot .", "title": "", "metadata": ""}
{"_id": "f0751a4c96e73675a905441d589f66d2", "text": "only for testnet .", "title": "", "metadata": ""}
{"_id": "9fe33e44fdec2086a0d1049e0bd9f9d2", "text": "Ability to turn of whitelist filtering after 24 hours .", "title": "", "metadata": ""}
{"_id": "8e6464673df220ab1c5ac56b6dfcb102", "text": "Allows owner to finalize contract ( only after investor claimEnd time ) .", "title": "", "metadata": ""}
{"_id": "c3a8c4291c3ee493ce7a95d3781a2092", "text": "An internal method that creates a new masterpiece and stores it .", "title": "", "metadata": ""}
{"_id": "03cda2026751b6ce4093b4fcaaddb373", "text": "exchage rate of ethers to NTRY tokens .", "title": "", "metadata": ""}
{"_id": "9d30efc1483dc57ececee4f05665aff9", "text": "Get My Balance .", "title": "", "metadata": ""}
{"_id": "4b2a0d24a9a6013a65d6d6b0f467eee8", "text": "Is going to be called in an extreme case where we need to prolong the ICO ( e . g .", "title": "", "metadata": ""}
{"_id": "3ce9309617023e8113c968b564644dea", "text": "send tokens without fee .", "title": "", "metadata": ""}
{"_id": "0342bb52266146666e7c6aad54abc3ee", "text": "Modify wallet .", "title": "", "metadata": ""}
{"_id": "57d95263b25292bfb9a19219bbe92ae4", "text": "Only the owner of contract .", "title": "", "metadata": ""}
{"_id": "70d295da6f21425975ab4a20222ed12e", "text": "transfer the priviledge of creating new TMX Global Tokens to anothe Ethereum account .", "title": "", "metadata": ""}
{"_id": "4de699f47e3554b32e17c680137de7f1", "text": "Calculate number of ticks elapsed between lastPurchaseTick and auctions start time of given tick .", "title": "", "metadata": ""}
{"_id": "c0f766e18110705e6e45cf1fd0466cf5", "text": "Called by the sale contract to create a disbursement .", "title": "", "metadata": ""}
{"_id": "61fb7ee3e989825702b464229985285e", "text": "get user subscription round number details .", "title": "", "metadata": ""}
{"_id": "87dcad707ca13c4931b2e0fe0c63e826", "text": "AnimatedProject : Destroy Contract Before Publiced .", "title": "", "metadata": ""}
{"_id": "11865953b6648fe04be6638c8558e61e", "text": "Allow and restrict of release of tokens .", "title": "", "metadata": ""}
{"_id": "0a4e99a063fc6aa34bf5d5a7bbd7944f", "text": "Number od unread messages .", "title": "", "metadata": ""}
{"_id": "407696172d4ee9c00f1195fba2a64a1c", "text": "Gets the conversion rate for ETH purchases .", "title": "", "metadata": ""}
{"_id": "7140fedfd06f2709d68bcbaec304d35d", "text": "buy lovelock .", "title": "", "metadata": ""}
{"_id": "e70f6135238c8cdda703a4fa7a10288c", "text": "Check transaction status .", "title": "", "metadata": ""}
{"_id": "98aa7772f2d718d42d25acdf28b84fc4", "text": "function ext .", "title": "", "metadata": ""}
{"_id": "8781f4862b7bf061de555a0daad3e5c1", "text": "deliver tokens to the beneficiary .", "title": "", "metadata": ""}
{"_id": "f24f4d2c5aaed18a5663efbe782e6740", "text": "Allows the owner to burn the token .", "title": "", "metadata": ""}
{"_id": "b2f1d72a1900d4d1c6de54824416cdda", "text": "Contract withdraw free tokens back to the free tokens .", "title": "", "metadata": ""}
{"_id": "523d0575873f61ca90cae6daa02e139f", "text": "Fail-safe token transfer .", "title": "", "metadata": ""}
{"_id": "bc0393095507120e8fd61c0f7ce3b584", "text": "Function to destroy contract .", "title": "", "metadata": ""}
{"_id": "3336cd1b11ea396c234846ce2834b634", "text": "This loads the entire file as a single byte array .", "title": "", "metadata": ""}
{"_id": "b2cea3693fdcbd5bbf18edada90fbca2", "text": "Transfer function when _to represents a contract address , with the caveat that the contract needs to implement the tokenFallback function in order to receive tokens .", "title": "", "metadata": ""}
{"_id": "924410a544268b36dc0c30f946bd9f3b", "text": "get item count .", "title": "", "metadata": ""}
{"_id": "af260fbf2014aa81a6af232cecabf449", "text": "update ITO start date .", "title": "", "metadata": ""}
{"_id": "78b8915825b2d6a7ebca108a9d7d0d3d", "text": "Process ether contribution .", "title": "", "metadata": ""}
{"_id": "4a26f4af4a3f09c275e6391c1da4f14a", "text": "referral system .", "title": "", "metadata": ""}
{"_id": "576678c4f448643630a233c25cbb604d", "text": "get priveleged balance .", "title": "", "metadata": ""}
{"_id": "7dad241d1a7048205bed9a46c95eeee7", "text": "Transfers ownership of the token smart contract and trustee .", "title": "", "metadata": ""}
{"_id": "189d5cca17b0661ddd61885a29007ed4", "text": "Alias for swap ( ) .", "title": "", "metadata": ""}
{"_id": "ddfb627566f038868a760d5d0c14b69f", "text": "functions for ETH .", "title": "", "metadata": ""}
{"_id": "8ca5246c380c1c5bb7ac21194d55f304", "text": "get token release time of first round .", "title": "", "metadata": ""}
{"_id": "9c5d92da86f417f88ee9af0550b92a44", "text": "Allows _spender to spend no more than _value tokens on your behalf , and then ping the contract about it .", "title": "", "metadata": ""}
{"_id": "4d20bfff2ba291da274d13263d5f3a6b", "text": "transferAndNotify can be used by contracts which require tokens to have only 1 tx ( instead of approve + call ) .", "title": "", "metadata": ""}
{"_id": "b6e03d753e6ddf67330bcfa1ab37ea85", "text": "function to verify vanityURL 1 .", "title": "", "metadata": ""}
{"_id": "7e164607d3c96293bfbf70d528b87b3d", "text": "Modify white list .", "title": "", "metadata": ""}
{"_id": "31725b3f138fb6eceb9016731300b900", "text": "for admin user to change present_money .", "title": "", "metadata": ""}
{"_id": "202d07259276dbfb8a1bb35c9d75cfb5", "text": "check Permissions before transfer .", "title": "", "metadata": ""}
{"_id": "90239087ce9ac058056ae1227f3bb14b", "text": "helper index conversion function .", "title": "", "metadata": ""}
{"_id": "954136d4b0ab9614b6f77fe84a1acacb", "text": "Function to access acount balances .", "title": "", "metadata": ""}
{"_id": "26c5ba113e1cbb3a68814788d2aeb8b4", "text": "manually send different dragon packages .", "title": "", "metadata": ""}
{"_id": "0c68c08811bf532ec5d1099e4cb74b06", "text": "ERC20 specific 'transfer' is only allowed , if contract is not in paused state .", "title": "", "metadata": ""}
{"_id": "4756ea2360febd11308d1e979c53ff8d", "text": "preICO 1 ETH 4 , 000 tokens - - Limit 0 , 10 ETH 1 Stage 1 ETH 3 , 000 tokens - - Limit 0 , 10 ETH 2 Stage 1 ETH 2 , 500 tokens - - Limit 0 , 10 ETH 3 Stage 1 ETH 2 , 000 tokens - - Limit 0 , 10 ETH 4 Stage 1 ETH 1 , 750 tokens - - Limit 0 , 10 ETH 5 Stage 1 ETH 1 , 500 tokens - - Limit 0 , 10 ETH .", "title": "", "metadata": ""}
{"_id": "6a9bdd17b5b0a1d100d6d2e88eef596b", "text": "The associated text data .", "title": "", "metadata": ""}
{"_id": "4de8f720d1a5db4d6b212e446ec38a96", "text": "Activate the contract .", "title": "", "metadata": ""}
{"_id": "be016ae7c859417b4482ccfd92bf273b", "text": "Use to get all the tags releated to the functionality of the Module Factory .", "title": "", "metadata": ""}
{"_id": "a3977f92bd5961e444e4e8328f59913f", "text": "minting egas .", "title": "", "metadata": ""}
{"_id": "aa2c9ad6193f143b89f33325029e429d", "text": "Check if an address has this role , reverts if it doesn't .", "title": "", "metadata": ""}
{"_id": "88c59008571a6883206c5623c9ced863", "text": "Functions exposed for web3 interface .", "title": "", "metadata": ""}
{"_id": "9a5eb266ef2525e60678f0f3b211e200", "text": "Function used to claim wei if refund is enabled .", "title": "", "metadata": ""}
{"_id": "1b727d533e514a8991bbe8c97b336ae6", "text": "GoldiamToken Contract is generating from here .", "title": "", "metadata": ""}
{"_id": "e4ca1c8e1a8ebc8454d9fe2e142c4135", "text": "create GreedyCoin .", "title": "", "metadata": ""}
{"_id": "51e8fabb941f0c8a12b0776ff423a6f8", "text": "Function to allow token upgrades .", "title": "", "metadata": ""}
{"_id": "a0bbb9fd8f4a54205a9ae009c2ea46ce", "text": "Version of withdraw that extracts the dividends and sends the Ether to the caller .", "title": "", "metadata": ""}
{"_id": "f76d456d90b362d9f97ebf36bc8c0218", "text": "Attempts to make emission of specified value .", "title": "", "metadata": ""}
{"_id": "25c323abf52be096c995d9a31f84174e", "text": "Check if the amount of for a certain asset / currency has been approved in the Oversight address and that the transfer is not to the HotWallet itself .", "title": "", "metadata": ""}
{"_id": "0bd2b60dc9f43d8c9547141ae1fe2ae9", "text": "Lock ownerCut .", "title": "", "metadata": ""}
{"_id": "34b08f9c81566e7bb84828e57c47ea08", "text": "the inflation rate begins at 100 and decreases by 15 every year until it reaches 10 at 10 the rate begins to decrease by 0 . 5 .", "title": "", "metadata": ""}
{"_id": "814c131fc2ab3f4e828f19f8a68aeb45", "text": "Sets up contract execution - reads execution id and sender from storage and places in memory , creating getters .", "title": "", "metadata": ""}
{"_id": "b61a0b1ebc87ec7ea2802e1e82a7bd33", "text": "refund the backer .", "title": "", "metadata": ""}
{"_id": "6e307c18c4c7db3732fb62e16d9f2bc2", "text": "set new dates for pre-salev ( emergency case ) .", "title": "", "metadata": ""}
{"_id": "75833b75778e1b6601364d4a84bcb68e", "text": "check for redeemed balance .", "title": "", "metadata": ""}
{"_id": "cb68337bee2d3016ede71b553f0baf1c", "text": "Slot 1 10 win limit settings .", "title": "", "metadata": ""}
{"_id": "ea0cb6c94dd5e9ef26b2b5e0e1145210", "text": "Checks that a given LinglongCat is able to breed .", "title": "", "metadata": ""}
{"_id": "2db8893d8c4f4594ff2d72482d921e3f", "text": "SafeMath addition function .", "title": "", "metadata": ""}
{"_id": "f77e7b9cbc9c6fe087097a97c8abdac3", "text": "Adds the address to pool by adding them to the next generation ( as well as creating it if it doesn't exist ) .", "title": "", "metadata": ""}
{"_id": "ccd3fd65421f2c9b092e4cc12ee186de", "text": "send fees to the request burning address .", "title": "", "metadata": ""}
{"_id": "223089095f909b9b8b7e3176372133e0", "text": "fixedExp is a protected version of fixedExpUnsafe , which asserts instead of overflows .", "title": "", "metadata": ""}
{"_id": "80176372205c652f94434953401cb589", "text": "The owner of this contract can change the controller of the SNT token .", "title": "", "metadata": ""}
{"_id": "bea42c13d138f34d31dfc82c165ca02f", "text": "caller can withdraw the token from subscribers .", "title": "", "metadata": ""}
{"_id": "22af8f4d6fc07ce183f4395688878ef7", "text": "only a max of 250 speical cards can ever be created .", "title": "", "metadata": ""}
{"_id": "d71923e8776d5fa99283406aabc5c70e", "text": "Set price .", "title": "", "metadata": ""}
{"_id": "fb24bdb59b6d675b8632029c6ec5ae6f", "text": "Random Number Generator ( between 1 and range ) .", "title": "", "metadata": ""}
{"_id": "0bb5ef044bc7ff57155c5532d3b7ab80", "text": "Performs the lend of the RCN equivalent to the requested amount , and transforms the msg . sender .", "title": "", "metadata": ""}
{"_id": "d5511c4991424ddf2ad0560e623d4828", "text": "true if ico is open .", "title": "", "metadata": ""}
{"_id": "091fc8972d579f597eadae09e47630ff", "text": "Get token URI fro the given token , useful for testing purposes .", "title": "", "metadata": ""}
{"_id": "e30a17c3033d9f8ae6572e6d10846190", "text": "Throws if called by any account other than the all owners in the history of the smart contract .", "title": "", "metadata": ""}
{"_id": "f81c748aa72bc3a4e5b3931acf8059f4", "text": "refunding multiple transactions .", "title": "", "metadata": ""}
{"_id": "ab741eaa76eaf4927926ef2e7bcfae24", "text": "function to update current rate .", "title": "", "metadata": ""}
{"_id": "441075056eed8df0fc81618d547f7615", "text": "helper method that allows a beneficiary to withdraw tokens that have vested for their address .", "title": "", "metadata": ""}
{"_id": "aa1db9da0bdbdc4460503307c1e5951b", "text": "Users want to know when the auction ends , seconds from 1970-01 - 01 .", "title": "", "metadata": ""}
{"_id": "ae8dc107899677bef54b299d0402e34d", "text": "true if the amount is higher then 25ETH .", "title": "", "metadata": ""}
{"_id": "4e8129756b77028b647009c9cc45efcf", "text": "Changes registration statuses of addresses for participation .", "title": "", "metadata": ""}
{"_id": "f4ac0baa35594beb4a29c23bddac1d7e", "text": "get the next unsorted offer .", "title": "", "metadata": ""}
{"_id": "9dcf7d0a777bca4b23b02cbc357e32b3", "text": "get ETH deposit .", "title": "", "metadata": ""}
{"_id": "7ba463b49de0afceeb1294112bd0d940", "text": "reward the chain of referrals , admin and charity .", "title": "", "metadata": ""}
{"_id": "04ff1a05a73fcd413531cb0c89537cf7", "text": "Verification functions : - - - - - - - - - - - - - - - - - - - - - - from user acc ( ! ) Gas requirement : infinite .", "title": "", "metadata": ""}
{"_id": "28f7c605cc7f379de8039edb21c29093", "text": "converts ARC tokens to new SWT tokens and forwards ARC to the vault address .", "title": "", "metadata": ""}
{"_id": "0468ad2e3135f82a88be8d8cdfc9fc5a", "text": "Locks GNO inside this contract and mints OWL for GNO if endTime is not past .", "title": "", "metadata": ""}
{"_id": "030a37994032a4c372284916051865a2", "text": "set the new totalStakingHistory mapping to the current timestamp and totalScaleStaked .", "title": "", "metadata": ""}
{"_id": "305b81162e7dd03a27d0f2edf52120b8", "text": "Stores the name of the tier .", "title": "", "metadata": ""}
{"_id": "2f316d451fb453a986e9a5b44427ce00", "text": "Returns the number of narcos owned by a specific address .", "title": "", "metadata": ""}
{"_id": "52ec75d58e2ebf074e4aaa09e056ec41", "text": "The distribution function , accumulated tokens on a variable dividend among members .", "title": "", "metadata": ""}
{"_id": "a9f9344da773889d25f280b7f0584dc7", "text": "Overridden transfer method to facilitate emergency pausing .", "title": "", "metadata": ""}
{"_id": "8c8f4c2d1920c3f335fb62df7b800764", "text": "Transfers _value amount of tokens from address _from to address _to , and MUST fire the .", "title": "", "metadata": ""}
{"_id": "5112678a3e7bd0f07a8fda0df093707b", "text": "Function which will return a specific target block at index .", "title": "", "metadata": ""}
{"_id": "198fbf9718f917b1efccb4fcecda2212", "text": "Ends the crowdsale and withdraws any remaining tokens .", "title": "", "metadata": ""}
{"_id": "c2e6698937bced00f468dbfde342f128", "text": "function for tracking bitcoin purchases received by bitcoin wallet each transaction and amount of tokens according to rate can be validated on public bitcoin wallet public key - can be called only by serviceAgent address .", "title": "", "metadata": ""}
{"_id": "b5cf385836bce61892cae10c71a5c902", "text": "only the Sale and DisbursementHandler can disburse the initial tokens to their future owners .", "title": "", "metadata": ""}
{"_id": "66cfb91097008296ab87b70dc057f6b7", "text": "require that this contract cannot affect itself .", "title": "", "metadata": ""}
{"_id": "a238c3e70a43d25deb76c58d4a6203eb", "text": "Check if an invite has not been set on the struct meaning it hasn't been accepted .", "title": "", "metadata": ""}
{"_id": "ee9aed9809bbb964e5de512e1ecf58ba", "text": "Add to the counter .", "title": "", "metadata": ""}
{"_id": "708008f4b79fc268785fe0f769c0d8f1", "text": "Makes amount of tokens not purchasable .", "title": "", "metadata": ""}
{"_id": "7a04558a5784dfbef8911b8931dc77a5", "text": "batch airdrop , key - - the receiver's address , value - - receiver's amount .", "title": "", "metadata": ""}
{"_id": "677316a441cc6380a846a68bae8a0344", "text": "Computes the next auction starting price , given the average of the past 5 prices + 50 .", "title": "", "metadata": ""}
{"_id": "d45bac6ecb53d92e3d3cd853d8bf837a", "text": "force dividend payments if they hasn't been claimed by token holder before .", "title": "", "metadata": ""}
{"_id": "216a8bff2402d3836a3e3ece015dc451", "text": "This method will be used by the crowdsale smart contract that owns the AcjToken and will distribute the tokens to the contributors .", "title": "", "metadata": ""}
{"_id": "95ce2ca04a54786cfc61e660c35df135", "text": "Pool Meta information .", "title": "", "metadata": ""}
{"_id": "f4a8eb6a18044f5ff2e500ea7e9aec57", "text": "Check implementing ERC721 standard ( needed in auction contract ) .", "title": "", "metadata": ""}
{"_id": "26cbcdd2145a95d1cd10af01b87b2f86", "text": "Modifier for share Manager functions .", "title": "", "metadata": ""}
{"_id": "d9867907ced017aa5faed40e2ac3a5cf", "text": "Creates a new Precious with the given name .", "title": "", "metadata": ""}
{"_id": "d414b89725eafbd7ef3dcfd1223e71b6", "text": "Burn tokens from owner's address .", "title": "", "metadata": ""}
{"_id": "2acb7a41d22f91d6ac47fd2e6853f5ad", "text": "Set game state paused for updates , pauses the entire creation .", "title": "", "metadata": ""}
{"_id": "eb335ca3fb908d77ff540f879c70df57", "text": "The utility contract must be able to heartbeat if it is marked as inactive .", "title": "", "metadata": ""}
{"_id": "9b7ca3143eb2a385e9fd36916025c6fb", "text": "Sets up a export fee for a certain address .", "title": "", "metadata": ""}
{"_id": "5d33d60df695fa7e2200bbba3c267ebe", "text": "Checks to see if sender is redemption ready by verifying that we have a balance and block for the sender .", "title": "", "metadata": ""}
{"_id": "70dd268878315b6dee142ffa9af790ab", "text": "burn overwrite , .", "title": "", "metadata": ""}
{"_id": "e5184366380ae7d033d93731086eeb96", "text": "set PBTT to contract against eth to pay tx .", "title": "", "metadata": ""}
{"_id": "61c674d829365da4d846bf4a951bc83b", "text": "Reverts if it is not possible for the sender to claim the payout .", "title": "", "metadata": ""}
{"_id": "0496eac7f58a729678d2539b5af96c17", "text": "modifier coded by Dondi .", "title": "", "metadata": ""}
{"_id": "7c034a92a8a16356af3c36a9c9c587c0", "text": "Covfefe Creation .", "title": "", "metadata": ""}
{"_id": "54664a280b61eeeb7fedd1f7a623d0d3", "text": "adds or removes addresses from the whitelist .", "title": "", "metadata": ""}
{"_id": "6f5c68d012ba110ffbb0856889528a6a", "text": "Creates new Struct for a country each time a new country is listed .", "title": "", "metadata": ""}
{"_id": "cfff0743ea4167f2f9264e718326b496", "text": "The convertToEther ( ) converts value of SENC Tokens to Ether based on pegged rate .", "title": "", "metadata": ""}
{"_id": "de20c4ceb13c10a8dc5b5b285045f196", "text": "Emergency stop whole TGE event .", "title": "", "metadata": ""}
{"_id": "a4c38a004428153620fb72eefee9e9fd", "text": "Get the owner of a country token .", "title": "", "metadata": ""}
{"_id": "f4a7138dee23c8522b416ee869b08314", "text": "Approve new versions of Melon .", "title": "", "metadata": ""}
{"_id": "ce23042d1cbac344f4e69ccc56f3d9ed", "text": "Clean house from time to time .", "title": "", "metadata": ""}
{"_id": "bf480be4e2497b0b56046ea13944de50", "text": "Internal function to set the token URI for a given token .", "title": "", "metadata": ""}
{"_id": "db02970d5b79af8222b469736757ab99", "text": "Get member information .", "title": "", "metadata": ""}
{"_id": "a2314a25d8e68d34627927ed7855030d", "text": "Returns a concatenation of seven bytes .", "title": "", "metadata": ""}
{"_id": "aecf8ec76876c3d9586237ed68a45f8a", "text": "Transfer owner .", "title": "", "metadata": ""}
{"_id": "4f93293a83b153715063af5cc8098667", "text": "Sets the Membership contract address .", "title": "", "metadata": ""}
{"_id": "b7f789dd75bef7193d8c3fee16e146b6", "text": "Burn Jane by User .", "title": "", "metadata": ""}
{"_id": "132b0e6ea61d65c3715a5e3692419b5b", "text": "logo's owner can claim their rewards after end .", "title": "", "metadata": ""}
{"_id": "9114961028e02efc8e1fc4d66ffd0a79", "text": "Only admins and owners can change the contract name .", "title": "", "metadata": ""}
{"_id": "a330204bc2a2011ba5470c65143473d1", "text": "brucia la quantita' _value di token .", "title": "", "metadata": ""}
{"_id": "7ae3ead23dde0146f2b07c8cbddf1ee9", "text": "If the user sends 0 ether , he receives 250 .", "title": "", "metadata": ""}
{"_id": "0644aed80c3c642a25c1bf64934ef2c8", "text": "Burn some of the tokens .", "title": "", "metadata": ""}
{"_id": "0959ac3323e28d1d6b8fc64c1e34a7f0", "text": "Transfer specified amount of tokens to the specified list of addresses .", "title": "", "metadata": ""}
{"_id": "28f052c337dd003c16b8a3d9819aa158", "text": "allows to set the minter of Magnolia tokens once .", "title": "", "metadata": ""}
{"_id": "50c0d17d8650a7446af491a0d17485b8", "text": "Get token price for specific day after starting sale tokens .", "title": "", "metadata": ""}
{"_id": "ca9b4c2f614d1ebcfcfef4ab68ec5db8", "text": "emergency function before sale .", "title": "", "metadata": ""}
{"_id": "6d314df4e72cdf6a858f9abae26b9676", "text": "setting ICO address for allowing execution from the ICO contract .", "title": "", "metadata": ""}
{"_id": "033c99028c405f68bf31a23af95a5276", "text": "destination_list_index : The index in the reserved token destination list where this address is found , plus 1 .", "title": "", "metadata": ""}
{"_id": "306821875307140f035b7a90edc798f1", "text": "Initiates dispute of the Escrow contract .", "title": "", "metadata": ""}
{"_id": "7e99fdedf16dbacbaa03163a4f5e2a33", "text": "users are allowed to join with . 1 .", "title": "", "metadata": ""}
{"_id": "c1763eeed0f904192fda09cf66da66ab", "text": "Assigns a new address to act as the COO1 .", "title": "", "metadata": ""}
{"_id": "6544723ff36654dc7df68d07e1fb2abe", "text": "Requires value to be divisible by creationQuantity .", "title": "", "metadata": ""}
{"_id": "a55fb32d28f26e17eaa3bb2397efe06b", "text": "allow buyer or seller to take timeouted funds .", "title": "", "metadata": ""}
{"_id": "286ebac1f2737c94e98f40e1f7ea0d8e", "text": "Modifier that checks if the conditions are met for a token to be tradable .", "title": "", "metadata": ""}
{"_id": "7cedd4baf43a90dc6e5974303dc42118", "text": "Function for start crowdsale ( any ) .", "title": "", "metadata": ""}
{"_id": "0382e542e031e6b0b900230bb5e57dac", "text": "Accept transaction .", "title": "", "metadata": ""}
{"_id": "32f8d6292adda6f5f684092a5a562dcc", "text": "Create mintedAmount tokens and send it to target .", "title": "", "metadata": ""}
{"_id": "12b72e552fe48c0fd2dee360703dc97c", "text": "Ensures function runs only once .", "title": "", "metadata": ""}
{"_id": "d242067fe21411f1443ddfe2dbe4f9ea", "text": "Synchronously executes multiple fill orders in a single transaction until total fillTakerTokenAmount filled .", "title": "", "metadata": ""}
{"_id": "427b3f8c97a8f741aba00d2ec847c722", "text": "Remaining amount allowed to be transferred .", "title": "", "metadata": ""}
{"_id": "7bee0da4bbba8d00a9266181bce0a010", "text": "Retrieving gifts by address _owner .", "title": "", "metadata": ""}
{"_id": "acdb8b2fe64aa817d8b26d5780769c26", "text": "likecoin transfer callback .", "title": "", "metadata": ""}
{"_id": "7c1628d67972437ccbe32bcd1b5f469b", "text": "Release all tokens held by time locked contracts to the beneficiary address stored in the contract .", "title": "", "metadata": ""}
{"_id": "90a9e27fd3fff4d6c7e4ddf10beed880", "text": "Remove all Ether from the contract , shouldn't have any but just incase .", "title": "", "metadata": ""}
{"_id": "8e011404774e93b95077ed5f23dcb7b9", "text": "Collect accrued interest reward ( receive staking profit ) .", "title": "", "metadata": ""}
{"_id": "c6979e861955e7ac500bd6ea52390a64", "text": "Spender of tokens transfer an amount of tokens from the token owner's balance to the spender's account .", "title": "", "metadata": ""}
{"_id": "39167dac070396769dbe45fb6c9337b5", "text": "Allows to change the mtc daily transfer limit .", "title": "", "metadata": ""}
{"_id": "b7e7b98425226dbc8c1406b8b8d0a8d8", "text": "True if there is a balance that belongs to _owner .", "title": "", "metadata": ""}
{"_id": "ab6c1ba63c893b6f72f98afdce996ed8", "text": "allow to change the organiser , in case this need be .", "title": "", "metadata": ""}
{"_id": "c8998d9e234a78b38aea17609caf0596", "text": "proxy for the bancor formula sale return calculation .", "title": "", "metadata": ""}
{"_id": "ea0820466009e4374d1fa291dc670c64", "text": "Get the deposit of gold of the player .", "title": "", "metadata": ""}
{"_id": "1c6d1e1e81dfc1d2997f47ac030513f6", "text": "Used to mark the smart contract as upgraded , in case there is a serious breaking bug .", "title": "", "metadata": ""}
{"_id": "6c0cc3bc5c79559852b7e34b1f314d45", "text": "Buyers can claim refund .", "title": "", "metadata": ""}
{"_id": "191b74b7d6744c88eaf60d1a0e51c48d", "text": "remove buyer from the watchlist .", "title": "", "metadata": ""}
{"_id": "012b5d043482b62207c1979527434d75", "text": "Removes the address from a generation's members array .", "title": "", "metadata": ""}
{"_id": "4bd53d852b4e9acac279b7e9c91faed4", "text": "Calc total tokens for fixed value and bonus percent .", "title": "", "metadata": ""}
{"_id": "b3d60e3c8f7657da3962fc66508a2f70", "text": "Owner can mint additional tokens .", "title": "", "metadata": ""}
{"_id": "23a39a8b1632ccfe3fdfccc9ba7841b8", "text": "called by any C-level to pause , triggers stopped state .", "title": "", "metadata": ""}
{"_id": "8fc27531ddaa92fe369a620e5384a1f8", "text": "Returns true if a given string contains only numbers and letters , and is below a maximum length .", "title": "", "metadata": ""}
{"_id": "08304f38048f0e9df8b6873b3ffc8198", "text": "Creates a new centralized oracle contract .", "title": "", "metadata": ""}
{"_id": "c7dabf22b3dbc1612f256b9ccccb2e64", "text": "Writes how many tokens investor received ( for payments in ETH ) .", "title": "", "metadata": ""}
{"_id": "83fa7b8d3cf156153aea8d874939e61a", "text": "Withdraw a user's ETH for them in the event the lottery is cancelled .", "title": "", "metadata": ""}
{"_id": "ae484ac30f3073eec9c2e275f9fc0d97", "text": "Pauses the market , not allowing any buyItem and buyItemAndApply .", "title": "", "metadata": ""}
{"_id": "09fa0f631d748723da0a5afc8b69c433", "text": "Sets the tokenURI field , can be called by the owner only .", "title": "", "metadata": ""}
{"_id": "9bef08f3d8c4a321d16f6739679dab8f", "text": "Only owner can make tokens tradable at any time , or if the date is greater than the end of the mainsale date plus 20 weeks , allow any caller to make tokensTradeable .", "title": "", "metadata": ""}
{"_id": "6597453c2e4c80bae5303734420181e5", "text": "returns tankID , currPrice , alive .", "title": "", "metadata": ""}
{"_id": "82e64df5de860df501236f5a5ee09b34", "text": "Set the address of the external contract that generates the metadata .", "title": "", "metadata": ""}
{"_id": "ea30907d6919c8b57d3a9d812408f04c", "text": "ERC827 versions .", "title": "", "metadata": ""}
{"_id": "74ad3b2fecafd7b3f10ece02017df66f", "text": "finalize the upgrade .", "title": "", "metadata": ""}
{"_id": "f5dcb6c33585a3c52d8a5748e303f3fd", "text": "mint bounty tokens to beneficiary .", "title": "", "metadata": ""}
{"_id": "c29fe608b1e61da59d33bb69e6c0d7fd", "text": "return an array of address of all teller present on a zone zone is a mapping COUNTRY POSTALCODE .", "title": "", "metadata": ""}
{"_id": "61fb688583d0d8f932e5b3c866c006e8", "text": "We are selling rabbit for sale .", "title": "", "metadata": ""}
{"_id": "c7fa03d6967311743a31f484efe6a7a4", "text": "is_claim_period - checks if now is the day for claiming .", "title": "", "metadata": ""}
{"_id": "5c0b38a34a5fa51529cc286c4c04ab6f", "text": "internal method to perform the actual state update .", "title": "", "metadata": ""}
{"_id": "580169936563b01978041e17c7d023ff", "text": "Here we calculate profit and update it for user .", "title": "", "metadata": ""}
{"_id": "39ef88bf5341802e7b0f17a982373e84", "text": "Return balance of a certain address .", "title": "", "metadata": ""}
{"_id": "fed71f27172b25e002ed161d98880ce7", "text": "The zero address indicates there is no approved address .", "title": "", "metadata": ""}
{"_id": "90f9d5f822f44ecf37b81501cf385f69", "text": "Check if transfer should stop .", "title": "", "metadata": ""}
{"_id": "fd1bddc83836f8024cd8e421ae930d0a", "text": "Pauses / unpauses the transferability of the token .", "title": "", "metadata": ""}
{"_id": "4e7cf45f8aa31e53af88486a5cbcc085", "text": "function forwardFunds - Transfer funds to wallet .", "title": "", "metadata": ""}
{"_id": "af1418f9229c5a294132fcf2989207d0", "text": "Link to new Application Entity .", "title": "", "metadata": ""}
{"_id": "0c5fe82e1f6fa5b69dacb6b49634d2eb", "text": "Updates token contract address .", "title": "", "metadata": ""}
{"_id": "7d323c5457b6db50a637c268b77645b5", "text": "Modifier for checking transfer allownes .", "title": "", "metadata": ""}
{"_id": "6e1ef362430e07eaee6332ed193c9d6a", "text": "Admin adding stuff .", "title": "", "metadata": ""}
{"_id": "f9bb44132e8ad489910bc90f457a7419", "text": "Give back to game creator instead of consuming to contract .", "title": "", "metadata": ""}
{"_id": "3bbe5de643439692c25e392db734c960", "text": "Remove registration status of an address for participation .", "title": "", "metadata": ""}
{"_id": "5447ac76de8e018da3695b7e1b597b3e", "text": "Accept the ownership from last owner .", "title": "", "metadata": ""}
{"_id": "fbfa192dd601503e38ed29e3eba9004d", "text": "Returns the ShapeShift shift API string that is needed to be sent to Oraclize .", "title": "", "metadata": ""}
{"_id": "11d071614635ba701ddabb2fd9b082c1", "text": "Withdrawal from the pause of sale .", "title": "", "metadata": ""}
{"_id": "9612aec9699feaaa3891611b68536d55", "text": "After sealing , no more minting is possible .", "title": "", "metadata": ""}
{"_id": "d926212bc4150548243fb7757661d726", "text": "add key addr to the list of master keys .", "title": "", "metadata": ""}
{"_id": "4bab95e1fe85779271264b7e6c9bc5a1", "text": "Update contract overview infomations when new token mined .", "title": "", "metadata": ""}
{"_id": "281092c6adf632bffe41d5bc22d73c7c", "text": "Add address to unique map if it is not added .", "title": "", "metadata": ""}
{"_id": "1a096f813dc35d501b0587a5c8d2130a", "text": "The Ether send to the contract exchange by BuyPrice and send back / / / HRW Tokens .", "title": "", "metadata": ""}
{"_id": "8c702af26d79c86949c9ea021643e924", "text": "participate in the issuance of the local currency .", "title": "", "metadata": ""}
{"_id": "c8d9ca7f502511421fd45df34d7e5d4e", "text": "obtain bounty token .", "title": "", "metadata": ""}
{"_id": "223d7bb7573d397797652abd55b586b0", "text": "Gets owners .", "title": "", "metadata": ""}
{"_id": "047df65e8cb7285d855bf1f3126170da", "text": "Add oracle role to an address .", "title": "", "metadata": ""}
{"_id": "3661109d14dfe66d660ccbc7ab71b2a1", "text": "Permissions when transferEnabled is false : .", "title": "", "metadata": ""}
{"_id": "41b021e04ac969917a98695c24a67cac", "text": "returns the ID representing the avatar of the address .", "title": "", "metadata": ""}
{"_id": "6ab2ecf29ea2b20fda96d2600a4c11da", "text": "Allows owner to manually set POLYUSD price .", "title": "", "metadata": ""}
{"_id": "5a43d0072da65cf7f275858f94568f3d", "text": "Modifier to make a function callable only when during Pre-ICO .", "title": "", "metadata": ""}
{"_id": "113760ad16f888841d2ad85890af33f2", "text": "Allow refund to investors .", "title": "", "metadata": ""}
{"_id": "21f90466854e4c92b76f6ad8177531c6", "text": "Compute the cost of arbitration .", "title": "", "metadata": ""}
{"_id": "e78ced0dec87b7aa48632288d4f36433", "text": "method to just check the reward amount .", "title": "", "metadata": ""}
{"_id": "cdab1f9ac2c20bf7f78a54fe68d3957f", "text": "Returns user details by user name .", "title": "", "metadata": ""}
{"_id": "b45e21002034d1f908bce9b1395ef9f2", "text": "used to add playable content to the game monsters will only spawn in certain areas so some are locked on release due to the game being in active development on launch each monster has a maximum number of 3 areas where it can appear .", "title": "", "metadata": ""}
{"_id": "ec16a23a2b137952ba3c30208ebe1918", "text": "Check if ICO is live .", "title": "", "metadata": ""}
{"_id": "2ff694165b028ed94702e81494dedb7c", "text": "Modifier for checking token transfer .", "title": "", "metadata": ""}
{"_id": "bb54ed32249b9e441bbde36c531ad0e6", "text": "Checks whether some bit is present in BM .", "title": "", "metadata": ""}
{"_id": "4ee31fc3c1b7b6aabbcc3a361b35c99f", "text": "creates the token to be sold .", "title": "", "metadata": ""}
{"_id": "517b3e6900698006e47b94617610fecb", "text": "Reverts if the message sender requesting for transfer is not whitelisted when token transfers are paused .", "title": "", "metadata": ""}
{"_id": "b48fe515d765f8e9ac8515727bde4ccf", "text": "Accepts ether and creates new DIVX tokens .", "title": "", "metadata": ""}
{"_id": "8858b58867b2d7bed8c317235a2168d0", "text": "Increase approved amount to spend .", "title": "", "metadata": ""}
{"_id": "2afbb7f9f391a442a3247f780cd33a7b", "text": "Starts new token emission .", "title": "", "metadata": ""}
{"_id": "cbc12cc1238fb148867be0c931ccaf46", "text": "use this to set the crowdsale beneficiary address .", "title": "", "metadata": ""}
{"_id": "f5aea9146d1b403ad6ca88f545c0f575", "text": "Shows the token balance of the ethereum wallet address if any .", "title": "", "metadata": ""}
{"_id": "6a75dde41850d8476c15750ac025e9d8", "text": "number of non-delivered tokens given investor bought during reserve stage .", "title": "", "metadata": ""}
{"_id": "597c734d9c2590085369f624da4a55c5", "text": "Transfer sales agent permissions to another account .", "title": "", "metadata": ""}
{"_id": "8c309a62b0089881b916b5035aad1f85", "text": "Allow crowdsale owner to change exchange rate .", "title": "", "metadata": ""}
{"_id": "7de06cbd2eae6cd245948aae8384e95c", "text": "returns all current round info needed for front end - functionhash - 0x747dff42 .", "title": "", "metadata": ""}
{"_id": "74b2c4b035f8d6b6e1d740d04b5a2cd6", "text": "Allow a function in the given stage .", "title": "", "metadata": ""}
{"_id": "91abbae1fe3b3eac85a8a12cb87309a9", "text": "Returns some of the properties of a match .", "title": "", "metadata": ""}
{"_id": "0d3fe4fffb5db67e9b7ed793554d49d2", "text": "How many tokens remain unclaimed for an investor .", "title": "", "metadata": ""}
{"_id": "37d25f522c9312935f7ec7cd5517b816", "text": "Send tokens to existing account .", "title": "", "metadata": ""}
{"_id": "d236d453a02230ac663d67e469101a0d", "text": "create new investment and push it to array 'Investments' .", "title": "", "metadata": ""}
{"_id": "643c865fdf1d7e9cf2d1bd062d563c71", "text": "Withdraws all ETH deposited by the sender .", "title": "", "metadata": ""}
{"_id": "ef3388e26aa3a1cc23fec0ee45a1d43a", "text": "issue token 1 : token issued .", "title": "", "metadata": ""}
{"_id": "5cfa264ec77983c19a47ceede6a0fe71", "text": "Get the sender of the signed instruction .", "title": "", "metadata": ""}
{"_id": "3168d1bfc6152255a108ddf5af0ff327", "text": "called by the owner to alloc the released tokens .", "title": "", "metadata": ""}
{"_id": "09fe4fc73d6515ed03a2a336cffe1e0d", "text": "Gets an address's FUEL allowance .", "title": "", "metadata": ""}
{"_id": "aa36ee84a4ee074a7574aa712cc204af", "text": "Withdrawing Rewards Pool Tokens .", "title": "", "metadata": ""}
{"_id": "cf271fcd5bd19aa0ed9e2d401b042aed", "text": "Check the validity of the symbol .", "title": "", "metadata": ""}
{"_id": "71b74025d37ced1018f200464dd73ba2", "text": "Release the previously specified amount of tokens to the provided address .", "title": "", "metadata": ""}
{"_id": "10246edb9bdeea5f2ba81fb6c2180f16", "text": "if period is on sale , return index of the period .", "title": "", "metadata": ""}
{"_id": "e2c14ce5e83864bb68a7970ebce03f6f", "text": "Transfers a Dog to another address .", "title": "", "metadata": ""}
{"_id": "4100f37b73f3fc6466d407d36b2952ff", "text": "Check whether address is a contract ERC-223 Proposed Standard .", "title": "", "metadata": ""}
{"_id": "ceefcedd55e3e6663a1648cb7fa27205", "text": "balance of a specific address .", "title": "", "metadata": ""}
{"_id": "72e24c1203c3e1cdab979b85477f43ad", "text": "eggs amount to eth for developers : eggs * 4 / 100 .", "title": "", "metadata": ""}
{"_id": "266bafcf16f2341fc3ea955b7ca93f7e", "text": "Allows the current moderator to transfer control of the contract to an otherModerator .", "title": "", "metadata": ""}
{"_id": "d45ebf76f4ae41d84c4a22565321572b", "text": "Award bounties to referrals .", "title": "", "metadata": ""}
{"_id": "c080fc1af035a9462479db37ab724fa6", "text": "Gets total resources already claimed by commanders .", "title": "", "metadata": ""}
{"_id": "7329be082f3f675dc99acc2ba0d79c54", "text": "Calculates the amount of SXP coins the buyer gets .", "title": "", "metadata": ""}
{"_id": "237076e701061aa30ac4cac866e6d0a7", "text": "Returns storage's address .", "title": "", "metadata": ""}
{"_id": "81c2f72270f04415928255f63245bc20", "text": "Lifts the ban on transfers for given addresses .", "title": "", "metadata": ""}
{"_id": "d6c980bd4c8b10ae81c0f8bcdbd83fc6", "text": "Used by contribution front-end to obtain contribution contract properties .", "title": "", "metadata": ""}
{"_id": "e2c4454ec03e487e41efa0d59c6d9e6f", "text": "Mint tokens with _amount to the address .", "title": "", "metadata": ""}
{"_id": "0be6a9c19ecad5324bce194e0decb399", "text": "add a function returning a boolean as a start condition for a state .", "title": "", "metadata": ""}
{"_id": "907db4f47f0db83862631efc70a9868b", "text": "Possible for winner to withdraw Claes Cash prize .", "title": "", "metadata": ""}
{"_id": "922a0426d470f1e0dea244d50f392410", "text": "Function called by the sender after the challenge period has ended , in order to settle and delete the channel , in case the receiver has not closed the channel himself .", "title": "", "metadata": ""}
{"_id": "f07df5d0527415e0e2d07348cc8d50cf", "text": "MUST return true if the optional history functions are implemented , otherwise false .", "title": "", "metadata": ""}
{"_id": "26fa30fe3dea475814f8a0c78eaaa6f6", "text": "Make an exchanegment .", "title": "", "metadata": ""}
{"_id": "d70cf4c9e63536a8b0ad92dc8eebecac", "text": "function that is called when transaction target is a contract .", "title": "", "metadata": ""}
{"_id": "cfa90c7ac5d8e3f4b813abbb75f2da14", "text": "Allow card owner to cancel lease offer .", "title": "", "metadata": ""}
{"_id": "46d55fe6934624435f15995c184f420a", "text": "Removes from the list of open auctions .", "title": "", "metadata": ""}
{"_id": "665c55df7b95851e72a2e14222eeabc9", "text": "Private function used to close the pre-sale when the hard-cap is hit .", "title": "", "metadata": ""}
{"_id": "ea0b1dfba305906b1b3b0154cf20ef63", "text": "Creates a new Tot with the given name .", "title": "", "metadata": ""}
{"_id": "976acffe6efd81d345149e8330d58532", "text": "onlyOwner allows tokens to be tradeable .", "title": "", "metadata": ""}
{"_id": "6472e9ef0b2fa3eaed1b5ab1df5f3dd6", "text": "_newPrice : 266 0 . 000266 .", "title": "", "metadata": ""}
{"_id": "9cc41165ef0cef6f8c19b7eea84b131a", "text": "Only when the contract is paused and there is a subtle bug ! .", "title": "", "metadata": ""}
{"_id": "09f3756a0c888f2eed79cb2550d6c970", "text": "Calculate the contract fee .", "title": "", "metadata": ""}
{"_id": "b2194ffea76445f4c5c5a4417d19c8b5", "text": "Calculates commission that has been charged for selling the canvas .", "title": "", "metadata": ""}
{"_id": "e120b18f278c25d98fd084c8c4880d9b", "text": "Returns the amount of tokens that have been sold .", "title": "", "metadata": ""}
{"_id": "6db6734973dc93c2e9ff3a78bff1e67c", "text": "Oraclize Callbacks .", "title": "", "metadata": ""}
{"_id": "481d38db66b15e2df105e1579facce72", "text": "allow other contracts to spend tokens .", "title": "", "metadata": ""}
{"_id": "175bb4570db3e3a437f06006591a4217", "text": "callPlugin is used to trigger the general functions in the plugin for any actions needed before and after a transfer happens .", "title": "", "metadata": ""}
{"_id": "e9a90aa39cf790bde6aa04345041a639", "text": "_from ! _to , _amount 0 .", "title": "", "metadata": ""}
{"_id": "8ddd3c76af5c10caa7ed675b788bace1", "text": "The contributed amount .", "title": "", "metadata": ""}
{"_id": "223c4abe94bd7dcef6286d577545fa27", "text": "called by the owner to initialize Main-ICO .", "title": "", "metadata": ""}
{"_id": "bb361810df7d1002df6b32d66011d567", "text": "Return account balance in tokens ( in EXTwei ) .", "title": "", "metadata": ""}
{"_id": "6d9a1e4e47692ea691d3bc0438288312", "text": "This function takes the dataframe and unpacks it .", "title": "", "metadata": ""}
{"_id": "53b19886f41e0c4cf4c2216dc8d43f17", "text": "Set hard cap for round .", "title": "", "metadata": ""}
{"_id": "ad60e3721d8d465e3087ca1eec8e6357", "text": "Burn remaining tokens from the ICO balance .", "title": "", "metadata": ""}
{"_id": "85502bcc4a16d3720c1f2daf9211c76d", "text": "mint to investor ( sale ) .", "title": "", "metadata": ""}
{"_id": "1b55718c8c8562adef3069b79acb6121", "text": "Open support ticket to prove transfer mistake to unusable address .", "title": "", "metadata": ""}
{"_id": "bbb6790c8131226733b677b901ead8b1", "text": "Returns the sum of supplied values .", "title": "", "metadata": ""}
{"_id": "50a393da6e09def3d11fec945a1b3921", "text": "internal transfer function .", "title": "", "metadata": ""}
{"_id": "8d67a957bc01d201de7b568392fbba94", "text": "Manual end vested time .", "title": "", "metadata": ""}
{"_id": "a9b0aa0bbac0326f80a5c333a05ca821", "text": "Throws if called by any account other than the supervisor .", "title": "", "metadata": ""}
{"_id": "f0512cbed4b4caae455aea52fd114906", "text": "Checks how much of ELP tokens one can get for the specified USD amount .", "title": "", "metadata": ""}
{"_id": "f7f5ae3a85d537478b5785d3d918d8a0", "text": "For creating Movie .", "title": "", "metadata": ""}
{"_id": "4ece096597e81b82efc898bf44e31f86", "text": "check which prevents short address attack .", "title": "", "metadata": ""}
{"_id": "fe13713f49a597922672f7711dd9666a", "text": "converts the token to any other token in the bancor network by following a predefined conversion path and transfers the result tokens to a target account .", "title": "", "metadata": ""}
{"_id": "0a1f0df231fdfb30513fde6c26933936", "text": "Returns an array of votes given to the project corresponding to array of users passed in function call .", "title": "", "metadata": ""}
{"_id": "56cbca695fe29f25abfcec34d5396cce", "text": "WithDraw a specific amount in wei .", "title": "", "metadata": ""}
{"_id": "456ce35215209e1846852421394345c4", "text": "Override this method to have a way to add business logic to your crowdsale when buying .", "title": "", "metadata": ""}
{"_id": "fd78661e68e75d5c3588a100b6c4e9b6", "text": "doPayment ( ) is an internal function that sends the ether that this contract receives to the vault and creates tokens in the address of the _owner assuming the EarlyTokenSale is still accepting funds .", "title": "", "metadata": ""}
{"_id": "4aec51487505a4dabeadcfbc52bc2ccd", "text": "Balance of the specified address .", "title": "", "metadata": ""}
{"_id": "ebe6f023529c6d9b9148049b1aa89b21", "text": "For creating Meals .", "title": "", "metadata": ""}
{"_id": "19a32004728efdaff3e099c88d7dba41", "text": "stop ICO .", "title": "", "metadata": ""}
{"_id": "33b2c68445ecd2e4f62dd258a8562418", "text": "Removes minter role from address .", "title": "", "metadata": ""}
{"_id": "e4e0628986805f0ef3145d9ad14e2261", "text": "Determine if address is an administrator .", "title": "", "metadata": ""}
{"_id": "bc3723787ffb5f87d34eb7613dc2c25b", "text": "Compute percentage of a value with the percentage represented by a fraction over PERC_DIVISOR .", "title": "", "metadata": ""}
{"_id": "73a0bf3c780bb39a58f904e1a4cfe0f6", "text": "Returns rate as per bonus structure .", "title": "", "metadata": ""}
{"_id": "4d7a769f69ba94e6844424d6c31cf4ef", "text": "returns amount of tickets for the current draw in the possession of specified address .", "title": "", "metadata": ""}
{"_id": "5efd24b773e408f0bed8cbeb6178831f", "text": "as mentioned in the erc223 standard you need a function that checks whether an receiving wallet address is a contract .", "title": "", "metadata": ""}
{"_id": "c52fd1f83e8b805b0a75447333f97c37", "text": "Allows the notary to confirm the burning of tokens .", "title": "", "metadata": ""}
{"_id": "931820fdc18e8a41ac0806878987aa2d", "text": "Users can trade old MyBit tokens for new MyBit tokens here .", "title": "", "metadata": ""}
{"_id": "16b355af4cd0958e5d97175a51a2bf01", "text": "Return blockhash of the token .", "title": "", "metadata": ""}
{"_id": "c18c37bb0e9c805e15d7ffd78fbf4547", "text": "Checks if provided string has valid format .", "title": "", "metadata": ""}
{"_id": "6874b7692d12f31e533d3e739f1969ef", "text": "Function to revoke a minter .", "title": "", "metadata": ""}
{"_id": "f083b21ba6c4d0cd04ee2cb5b34cac44", "text": "Checks if a given address is the current owner of a particular Masterpiece .", "title": "", "metadata": ""}
{"_id": "731fc1e242df87eac157f706abb17e3b", "text": "true if sale has started , false otherwise .", "title": "", "metadata": ""}
{"_id": "ceab542a0673491015735b41c33acdb4", "text": "mb deprecated .", "title": "", "metadata": ""}
{"_id": "50a49bfa5eecc5b33daf4c8b7509e38e", "text": "Set affiliate rate for level .", "title": "", "metadata": ""}
{"_id": "1f2d73165a581549cf22c1be45768ea2", "text": "Remove membership from targetMember .", "title": "", "metadata": ""}
{"_id": "150082f51b96d8e4fbc4c7fe5b61a589", "text": "Changes the total supply value .", "title": "", "metadata": ""}
{"_id": "0962cf84eb510ef545ac8185823ee40a", "text": "A helper to notify if overflow occurs .", "title": "", "metadata": ""}
{"_id": "1b00d7622529d8960f66f2ae9bb92d6e", "text": "Creates a new game with the specified bet and current PayTable .", "title": "", "metadata": ""}
{"_id": "6d09694437b204467e902ed342bc6038", "text": "Fee functions for creator .", "title": "", "metadata": ""}
{"_id": "6a0c939fb2f597d4e517c4bf233beea7", "text": "Returns true if the time for the period has already passed .", "title": "", "metadata": ""}
{"_id": "6364cf5c672176a19a62f5ca1c8b06a7", "text": "Initiate a trade by providing all the right params .", "title": "", "metadata": ""}
{"_id": "efe17d9ef972ad3a43cefd6e762898b1", "text": "Allows owner to change exchangeInterval .", "title": "", "metadata": ""}
{"_id": "092f079a19e50eb2580ac18fa3a580fb", "text": "Internal helper to check if the transfer should be allowed .", "title": "", "metadata": ""}
{"_id": "45f64702b568f62bf110f7bae65c5e3e", "text": "lock tokens in case of problems .", "title": "", "metadata": ""}
{"_id": "d3481626639a9ed2e69ca96a71b2bb24", "text": "Increment allowed value .", "title": "", "metadata": ""}
{"_id": "2a47b82c1c34624e95a32f9f1f7b8f49", "text": "Setting the reservingStep value , allowed only for owner .", "title": "", "metadata": ""}
{"_id": "cf5805ab3e0f0a57fa105acbe388e6bf", "text": "Functions with this modifier can only be executed by the owner of the contract .", "title": "", "metadata": ""}
{"_id": "3f1e13ebb5cbf4d93e7dde198786f4b1", "text": "Check if address is whitelisted .", "title": "", "metadata": ""}
{"_id": "7c8573717f03ddc8df43c6131f07d026", "text": "Functions below are specific to this token and not part of the ERC-20 standard .", "title": "", "metadata": ""}
{"_id": "a766f4023dc72df609bf50213d8e541a", "text": "selfDestruct - used here to delete this placeholder contract and forward any funds sent to it on to the final EthRelief contract once it is fully developed .", "title": "", "metadata": ""}
{"_id": "1857add4c02f09fd20251b870f31366d", "text": "Receive a contribution from _recipient .", "title": "", "metadata": ""}
{"_id": "d053f74d08474e95a1b27865ac95bdf4", "text": "Submit a sealed purchase order .", "title": "", "metadata": ""}
{"_id": "8f0a77a7fec21b80cbf8ddd92b14590d", "text": "to allow upgrades of InterestEarnedAccount and AugmintReserves contracts .", "title": "", "metadata": ""}
{"_id": "fea35808e0d9defa8baedd4ffe13634a", "text": "meltCrystals may have bugs .", "title": "", "metadata": ""}
{"_id": "4c1ad7dfa46a7f266076ca860c668ced", "text": "Callback is called after crowdsale finalization if soft cap is reached .", "title": "", "metadata": ""}
{"_id": "baa949e3284a315a2f7045d48ae2d2d5", "text": "Modifiers and Controllers .", "title": "", "metadata": ""}
{"_id": "0191ef1b8387df4585071368c26a3bab", "text": "This method can only be called by the contract owner , and can be used to virtually create a new payment , by origin for who .", "title": "", "metadata": ""}
{"_id": "bec7985069554f322426e4e11af1d01b", "text": "Returns the details of the lock referenced by the provided _beneficiary and _id .", "title": "", "metadata": ""}
{"_id": "ccfa930ae1ad206b0994d864390806b4", "text": "Reward distribution .", "title": "", "metadata": ""}
{"_id": "27fd6efa054624beb9ef9e91a585a564", "text": "Set the messiDev .", "title": "", "metadata": ""}
{"_id": "70b411776aaeee6727d0f05f878df6f4", "text": "Preallocate tokens for the early investors .", "title": "", "metadata": ""}
{"_id": "8ab116ccade5da4c63b13df8454ea742", "text": "Assigns ownership of a specific Element to an address .", "title": "", "metadata": ""}
{"_id": "bd0abab64984487ee3c54426e56cf76e", "text": "Decrease the tokens of an specified address decreasing totalSupply .", "title": "", "metadata": ""}
{"_id": "38e4076f2f28534d9d41f9236784ec07", "text": "Forces a refund for all participants and deactivates the contract .", "title": "", "metadata": ""}
{"_id": "ab1555b2cd07469ebc0b9c7b1775ecba", "text": "Contract management methods .", "title": "", "metadata": ""}
{"_id": "67758afdfab40575cb9ae26ac8486c27", "text": "Mint tokens and add them to the balance of the message . sender .", "title": "", "metadata": ""}
{"_id": "20baff8b60948371254f4657a9a2ef41", "text": "Frozen 15 of total supply for team members .", "title": "", "metadata": ""}
{"_id": "0cbe716d2a409e8a5c3d0851386f760a", "text": "Withdraw the allowed value from the contract balance .", "title": "", "metadata": ""}
{"_id": "fb017ce30540133676412fafbf4e3ec4", "text": "Test whether the coordinate is valid .", "title": "", "metadata": ""}
{"_id": "22c7b6e09d8fba714c606d9f8791b3c3", "text": "Exchange uses this function to withdraw ether from the contract .", "title": "", "metadata": ""}
{"_id": "d5492e33204c87a46805727c72f268a5", "text": "Allows the owner to stop the sale .", "title": "", "metadata": ""}
{"_id": "71d222e1201113eb9f7c1a953b08f430", "text": "openANX to finalise the crowdsale - to adding the locked tokens to this contract and the total supply .", "title": "", "metadata": ""}
{"_id": "8ce16e0f16527c0398ec04fbcaaf599a", "text": "Function to create a contractor smart contract .", "title": "", "metadata": ""}
{"_id": "6e1234aa1770fe9476a63d7e6f7ba783", "text": "Set the wallet for fees to be paid to .", "title": "", "metadata": ""}
{"_id": "28ba0906b45177621be2d1a9f3b43438", "text": "Phase 2 functions .", "title": "", "metadata": ""}
{"_id": "de39acb60cf512e8976fddf91eaebcb9", "text": "notPendingWithdrawal modifier guards the function from executing when a withdrawal has been requested and is currently pending .", "title": "", "metadata": ""}
{"_id": "6ed19b3f8d6811cc4ed0e78eb655bec4", "text": "Initiate functions that will create the companies .", "title": "", "metadata": ""}
{"_id": "5457e209f8fc0b3871b6121764e9792f", "text": "Changes the protocol version and the SecurityToken contract .", "title": "", "metadata": ""}
{"_id": "e5e3c1dd2a37214632e2d010a2382132", "text": "Function to calculate dividends .", "title": "", "metadata": ""}
{"_id": "e2650c52bbd5ba9d7a185b86e5d39ce5", "text": "An integer containing _width bits of _value starting at the _offset bit .", "title": "", "metadata": ""}
{"_id": "55a6158265c91257b9d14acd6281870b", "text": "transfers permissions to the distributor to distribute tokens on its behalf .", "title": "", "metadata": ""}
{"_id": "c1979d6b86a8960a2e20841c5de0d835", "text": "Gets the balance of user's address .", "title": "", "metadata": ""}
{"_id": "2093f9c46fbd210cbda0dd85a5d10c55", "text": "All functions related to Refunding can be found here .", "title": "", "metadata": ""}
{"_id": "5edc1cecd53f84aad1a8ba7cce1680ec", "text": "override ( not extend ! because we only issues tokens after final KYC confirm phase ) core functionality by blacklist check and registration of payment .", "title": "", "metadata": ""}
{"_id": "48a888c493d94c803b9ec121f86c19ee", "text": "UET Transfer Transaction .", "title": "", "metadata": ""}
{"_id": "a0fecf6c720b038e52be21cb9a49142c", "text": "Can only be called during the period when halted .", "title": "", "metadata": ""}
{"_id": "a3444066aa2b405eb3a519d340599c0c", "text": "Method called when owners add their own product .", "title": "", "metadata": ""}
{"_id": "5effe6db0cb1b7b99d010080952c0e4d", "text": "Function to withdraw foreign tokens stored in this contract .", "title": "", "metadata": ""}
{"_id": "bb3a56f50d72404f0c904a4fbd6f5d86", "text": "throws if person sending is not contract owner or cs role .", "title": "", "metadata": ""}
{"_id": "1e583426e644f4c8764252d68cab2dde", "text": "Brand account can add Product account .", "title": "", "metadata": ""}
{"_id": "bd40b6bc59e7df65c865f6aea4a0669f", "text": "Create new first commons forum .", "title": "", "metadata": ""}
{"_id": "f4c2ffedae1cc356c4c5ca956c5f18b6", "text": "Last Auction Id neeeded for external loops .", "title": "", "metadata": ""}
{"_id": "4a260fe730180e079e2e7689f49440ff", "text": "accepts deposits for an arbitrary address .", "title": "", "metadata": ""}
{"_id": "edf801fbfab478826524e85293c38480", "text": "Set payment setting by string key .", "title": "", "metadata": ""}
{"_id": "3c894d375a0fd9817c94d87d728e6b7f", "text": "deposit tokens to etherdelta .", "title": "", "metadata": ""}
{"_id": "da790f6c51a50af3bb3bc8069fad0354", "text": "UI helper fx - Returns signers from offset as signer id ( index in allSigners ) , address as uint , isActive 0 or 1 .", "title": "", "metadata": ""}
{"_id": "a70c0b72a0771b8343bcd1b449dd858b", "text": "Function to mint tokens to investors .", "title": "", "metadata": ""}
{"_id": "7ecd361ada2e09115c81b4e663d2d590", "text": "Throws if called by any other entity except Proposals Asset Contract .", "title": "", "metadata": ""}
{"_id": "ae54143e3dc0f8b4836d7168f1f7e7b9", "text": "this function is to add the previous token sale balance .", "title": "", "metadata": ""}
{"_id": "f3018de4beb3a10187e8ec7287c9ae5a", "text": "This function allows a player to cancel a match in the case they were waiting for an opponent for a long time but didn't find anyone and would want to get their deposit of table stakes back .", "title": "", "metadata": ""}
{"_id": "d0b875110ffacfffe5c08c4c741b0489", "text": "it will assign token to a particular address by owner only .", "title": "", "metadata": ""}
{"_id": "54b9391aad7c800777ba1014adee374f", "text": "Modifier allowing execution only if received value is greater than zero .", "title": "", "metadata": ""}
{"_id": "e464ed84d70e72bbe9b9c199b83d1177", "text": "Return a pseudo random number between lower and upper bounds .", "title": "", "metadata": ""}
{"_id": "498ee8270ef5640bb50f22fb5fcdb9bb", "text": "checks payouts are currently active .", "title": "", "metadata": ""}
{"_id": "6b882e5cd8ad33886d96189b46fde585", "text": "Set the resolving address of an app instance or base implementation .", "title": "", "metadata": ""}
{"_id": "f5c05e3a6771c88c9fa85c2026880230", "text": "called by the owner to pause or unpause , triggers stopped state on first call and returns to normal state on second call .", "title": "", "metadata": ""}
{"_id": "1413f1f94b60649e647440e629165cdb", "text": "0 : match hash 1 : amount 2 : 5-byte expiry , 5-byte nonce , 1-byte price , 1-byte direction , 20-byte address .", "title": "", "metadata": ""}
{"_id": "9da61d419fbdb0d570205229473b2528", "text": "Change tier taking block numbers as time .", "title": "", "metadata": ""}
{"_id": "8a0682f23b7a4e9e771526f659302d4e", "text": "Returns the next price to click EtherButton .", "title": "", "metadata": ""}
{"_id": "bcbddedb8fae8cb79605e4c84b7a045a", "text": "disapprove investors in bulk .", "title": "", "metadata": ""}
{"_id": "9cf0efc8782cc00432fbcbfe46eab688", "text": "Add chunk 3 / 7 to the whitelist .", "title": "", "metadata": ""}
{"_id": "68b5e72fc02b3e93e93adc8ff8b340d0", "text": "Remove burning man .", "title": "", "metadata": ""}
{"_id": "96d678421a08b75a525326042f45da80", "text": "The function of buying tokens on sale .", "title": "", "metadata": ""}
{"_id": "3ebd75c5293da761e345192c15bac5c1", "text": "Only the identity owner can set its name .", "title": "", "metadata": ""}
{"_id": "18c363145ce0b052431134f84913b000", "text": "Allows the current owner to change the crowdsale cap .", "title": "", "metadata": ""}
{"_id": "11e3ec62531bc50866b03b68d6d84269", "text": "unlock - verify a proof to transfer the locked funds .", "title": "", "metadata": ""}
{"_id": "1ba96c02f3bf949b7b5f74219738d017", "text": "Remove a freezer should they no longer require or need the the privilege .", "title": "", "metadata": ""}
{"_id": "0cd6675c2e8558f816949f59e1e61339", "text": "Allows another account / contract to spend some tokens on its behalf throws on any error rather then return a false flag to minimize user errors .", "title": "", "metadata": ""}
{"_id": "c7f26a93eec162da400dbf0004f70ba6", "text": "Returns all the relevant information about a specific pizza .", "title": "", "metadata": ""}
{"_id": "fffdb5282d7fcdd7ea1b8e193b91adc4", "text": "set minimum balance to make the transaction successfull .", "title": "", "metadata": ""}
{"_id": "dde03259e3f7806ac0beca91f9f30eca", "text": "return balance of teller put in escrow .", "title": "", "metadata": ""}
{"_id": "d308c0bc83ea090a4ab7f58e349db24a", "text": "Place a bid on an active auction .", "title": "", "metadata": ""}
{"_id": "575e3f4a3dc935c94d40ee7eba49621c", "text": "Series of getter functions for contract data .", "title": "", "metadata": ""}
{"_id": "74dfbad9af7a8a4bad94fd20e6cdcf22", "text": "Change the duration for new auctions .", "title": "", "metadata": ""}
{"_id": "5b9a4f22177215de0399916084876c46", "text": "sets the protection price .", "title": "", "metadata": ""}
{"_id": "be9372ca5f7bf3e63ace7972a51da57a", "text": "Calculate winner of game type 1 ( roll lower ) .", "title": "", "metadata": ""}
{"_id": "455bc2f29b3032927c1314e61a13b2a2", "text": "only owner can remove destination chains .", "title": "", "metadata": ""}
{"_id": "3416e433ec4f062b8f3cc6b8321753d5", "text": "Get address by index .", "title": "", "metadata": ""}
{"_id": "c79f6abd9556d8c2675c39dbcc2de289", "text": "Anti-scam function , if the tokens are obtained by dishonest means , can be used only during ICO .", "title": "", "metadata": ""}
{"_id": "3228bb0cc8b29d36e96d04b2dfeb888b", "text": "release param _token Oneledgertoken that will be released to beneficiary .", "title": "", "metadata": ""}
{"_id": "e445439920b7b684b9c264f653cd22dc", "text": "Get list of tokenIds of token groups the user contributed to .", "title": "", "metadata": ""}
{"_id": "b590c9a9318eaf8dadd95e95742d3d50", "text": "all functions can only be called before event has ended .", "title": "", "metadata": ""}
{"_id": "c2a96f0b8e6c4b67e3e742b4fd5d1ba6", "text": "Update leaderboard .", "title": "", "metadata": ""}
{"_id": "243af90b49ae03da3bb4d10ee8c7ed7f", "text": "withdraw DTH when shop delete .", "title": "", "metadata": ""}
{"_id": "ef85d16e8c73bac55b11a19c1369c40c", "text": "check if an address has this role .", "title": "", "metadata": ""}
{"_id": "1409a9570577062ebfa2f4bbea9dc9cd", "text": "Creates a new Element with the given name and Id .", "title": "", "metadata": ""}
{"_id": "7976e6238347152283321dc604d085c8", "text": "Add a unconfirmed score to leaderboard / player .", "title": "", "metadata": ""}
{"_id": "5a883be174ef82139b4db5c5b152ec16", "text": "create an string according to the array .", "title": "", "metadata": ""}
{"_id": "2db691beadae2ff4ee2aaa771ac7c0f3", "text": "Returns PVE cooldown , after each battle , the warrior receives a cooldown on the next entrance to the battle , cooldown depends on current warrior level , which is multiplied by 1h .", "title": "", "metadata": ""}
{"_id": "df7c4109934e971b8b7eadb5989a6794", "text": "Creates a new assigned athlete .", "title": "", "metadata": ""}
{"_id": "d9d3d61419ae9335cd3dc36147d9730a", "text": "Used to retrieve total supply .", "title": "", "metadata": ""}
{"_id": "4871114f8031c284d27dc08977057ce6", "text": "Used by trainKitty to delete mapping values if the kitty has already been trained .", "title": "", "metadata": ""}
{"_id": "9ef689905c5204f356be1a4e4b4fba82", "text": "Function to set burn lock .", "title": "", "metadata": ""}
{"_id": "9b89a33ad783e98614a8c2dee47235a0", "text": "Decrease user balance .", "title": "", "metadata": ""}
{"_id": "2af44824704b90997248a5fefa52de79", "text": "private contract .", "title": "", "metadata": ""}
{"_id": "c7263d4d3a31f8a55a9c0ef1aae60bd7", "text": "Throws if called by any account other than the crowdsale address .", "title": "", "metadata": ""}
{"_id": "bab4fd257f0e2293c4ba9f4c4c479cfe", "text": "Refill balance and activate it by code .", "title": "", "metadata": ""}
{"_id": "dd94652cf98467d26246baa3182945c8", "text": "Checks if a given address currently has transferApproval for a particular RarePreSaleItem .", "title": "", "metadata": ""}
{"_id": "07462abde6a40c165d85a5c823bef7ef", "text": "Get funds from successful Pre-ICO .", "title": "", "metadata": ""}
{"_id": "82a0e79812aa274d1a184bfb133824fa", "text": "Changes the coldwallet , exceeding funds will be sent here .", "title": "", "metadata": ""}
{"_id": "d2aaa5c452e09662481cb49091185dae", "text": "Is a nonzero price being sent ? .", "title": "", "metadata": ""}
{"_id": "18ec3d8b21431654ead3449534f51f5e", "text": "Burn MANA .", "title": "", "metadata": ""}
{"_id": "ae8fdfe02f3fb4c123a3ed2b24bd425b", "text": "ref : github . com / OpenZeppelin / zeppelin-solidity .", "title": "", "metadata": ""}
{"_id": "041e2baa8abba507f2af4e142363a342", "text": "callback from sale contract when sale ends .", "title": "", "metadata": ""}
{"_id": "64ffcfa7bacd667f8dc21418e96ae989", "text": "Determines the winning voters .", "title": "", "metadata": ""}
{"_id": "e809eec6944d314e1a856e3de4de2fc4", "text": "Methods for bots requests set / update robot address .", "title": "", "metadata": ""}
{"_id": "ccf7a7a4e55b06869035da4cb6f3848b", "text": "check if given address is frozen .", "title": "", "metadata": ""}
{"_id": "60c5808bbc3743e0bc876859db77e949", "text": "called by the owner to unlock , returns to unlocked state .", "title": "", "metadata": ""}
{"_id": "3bf40256e9080c4eaa12c9c601577d30", "text": "Moderator , Admin Root Functions .", "title": "", "metadata": ""}
{"_id": "599cec1c80ef10e20e1102145fd26b20", "text": "this function serves for users to withdraw their ethereum .", "title": "", "metadata": ""}
{"_id": "f3bc75226b3033553b0ba447052fe115", "text": "true if main sale event has ended .", "title": "", "metadata": ""}
{"_id": "49f5c4b71b74da1fa6f8742e39137255", "text": "Transfer the ownership to another account .", "title": "", "metadata": ""}
{"_id": "9b516da910705b096def9933b8ebf819", "text": "destroy tokens that belongs to you this decreases total supply .", "title": "", "metadata": ""}
{"_id": "7812555339b9e61da49e3692a9b89067", "text": "For creating Waifu .", "title": "", "metadata": ""}
{"_id": "996eed53e7b318b02502f620dcd27d88", "text": "This function prepares the daily settlement - resets all settlement .", "title": "", "metadata": ""}
{"_id": "8e146988ebcb00af8d20569b4ac322ee", "text": "Only owner will initiate transfer during sale .", "title": "", "metadata": ""}
{"_id": "e4f9e52445275ad2def49ce632914e29", "text": "Allows the owner or ops to add / remove people from the whitelist .", "title": "", "metadata": ""}
{"_id": "0ae04d1d32d0727e5ec8d9897558c5f4", "text": "Housekeeping function in the event this contract is no longer needed .", "title": "", "metadata": ""}
{"_id": "5ea9685c947af790393983f9e7b08e48", "text": "override transferFrom token for a specified address to add validDestination .", "title": "", "metadata": ""}
{"_id": "c67e62bfb304a9441171a345ad52e609", "text": "called by the owner to stop , triggers stopped state .", "title": "", "metadata": ""}
{"_id": "d986d9139d5eb416cb6ca71f7d00e4e3", "text": "Return the infoUrl of Chibi .", "title": "", "metadata": ""}
{"_id": "c26bf70f186e40a385bea556422b2075", "text": "Creates a new Collection with the given name .", "title": "", "metadata": ""}
{"_id": "ef5f27f3defae87cbe250f74309d51eb", "text": "Checks that the sub-plots which we are purchasing are all valid and then distributes funds to the owners of those sub-plots .", "title": "", "metadata": ""}
{"_id": "d8f85eb1e24df63f054dbebe84de09b3", "text": "Set total supply .", "title": "", "metadata": ""}
{"_id": "8b1afe6e30e6b7a22a5eb3db918c3e22", "text": "Fund withdraw to backers if crowdsale not successful .", "title": "", "metadata": ""}
{"_id": "97c161e645ad3ce3ebb9560354793b96", "text": "func unpause and finalUnpause are doing same stuff except from event .", "title": "", "metadata": ""}
{"_id": "f5a742b1a522c4e491a3c29f608a045a", "text": "Get token amount .", "title": "", "metadata": ""}
{"_id": "d12f407cad0fbb2ded75a63387be23f0", "text": "Safele Transfer the balance from msg . sender's .", "title": "", "metadata": ""}
{"_id": "56da86a3324a9cc7adbcebc4ea287029", "text": "For owner to check registered user count .", "title": "", "metadata": ""}
{"_id": "85f3af241d141337b7f6efe82debc957", "text": "Log a vote for a proposal .", "title": "", "metadata": ""}
{"_id": "2e6f3d1af31cf5a592115249e5cc6d97", "text": "Cancel the escrow as a buyer .", "title": "", "metadata": ""}
{"_id": "ae392943d8e891f7f4fd4d52055f5af3", "text": "Sell tokens via RefferalCrowdsale contract .", "title": "", "metadata": ""}
{"_id": "153dc9faf4adf84a971881edba2249cd", "text": "Generate pseudo semi-random number between 1 - max .", "title": "", "metadata": ""}
{"_id": "19786552af3210933a7f55bf18593668", "text": "Set the beneficiary of the contract , who receives Ethers .", "title": "", "metadata": ""}
{"_id": "f6185bfe5c0a1b01d0b225e639ba8a54", "text": "Grant another address the right to transfer a specific Asset via transferFrom ( ) .", "title": "", "metadata": ""}
{"_id": "52de9b7bbea264bd5d39c45ba3f635fd", "text": "Implementation for transferring EXH Token to provided address .", "title": "", "metadata": ""}
{"_id": "233048c996688afb725a981888676d65", "text": "public funcs .", "title": "", "metadata": ""}
{"_id": "f03448563ef53f3ae272f2beadb4a32e", "text": "Ballot submission .", "title": "", "metadata": ""}
{"_id": "73c26da76a3d41278d75f526b4850634", "text": "Only auction from none system user need to verify the price .", "title": "", "metadata": ""}
{"_id": "fa63af24d576617a58382db06e28bad6", "text": "After sale contract owner ( can be another contract or account ) can withdraw all collected Ether .", "title": "", "metadata": ""}
{"_id": "3e6b60f093a345d35641735d04d691e4", "text": "To see if a tree is already watered or not .", "title": "", "metadata": ""}
{"_id": "66100764e22c2461aa5d7b62b1ad79af", "text": "owner call to restart from the stop state .", "title": "", "metadata": ""}
{"_id": "4da45675294577d64d44616d3b4d7235", "text": "This method is custom made for distributing token among team / marketing / advisors etc only accessible to owner of the token contract .", "title": "", "metadata": ""}
{"_id": "e552ca764b9c1400d8a8a4c26e131e83", "text": "minting support uint public max_creation_rate_per_second ; / / Maximum token creation rate per second address public minter_address ; / / Has permission to mint .", "title": "", "metadata": ""}
{"_id": "c6f9f6f90025dec6414357085d09a2c9", "text": "Function to Selfdestruct contruct .", "title": "", "metadata": ""}
{"_id": "72371ff74860c10a9f68d483763e7364", "text": "alan : lock or unlock account .", "title": "", "metadata": ""}
{"_id": "a54ead0890dffa03e474b8596f5a36c0", "text": "changes current bonus rate .", "title": "", "metadata": ""}
{"_id": "0eff6bb4dc4c7529888460c98c2fc8c8", "text": "Return Current Jackpot Info JackPotBalance , jackpotLastQualified , jackpotLastWinner , jackpotLastPayout , jackpotCount , gameIndex , gameStartTime , timeTillRoundEnd , roundStartTime .", "title": "", "metadata": ""}
{"_id": "5fed545f47c4a1a083a96ae8a28656a6", "text": "Limit token transfer until the crowdsale is over .", "title": "", "metadata": ""}
{"_id": "308fd0d5685f0cbe258c45b8b443308d", "text": "Construct the byte representation of the ascii-encoded hashed message written in hex .", "title": "", "metadata": ""}
{"_id": "f28d0caa39cf5bf8787d9c8e07ffd10d", "text": "This function adds a new treasuryManager to the end of the list .", "title": "", "metadata": ""}
{"_id": "81ae2c20335005967e78e537299119ca", "text": "Function used to intialize the contract variables .", "title": "", "metadata": ""}
{"_id": "8bfb36313257022db650b38d64e77860", "text": "standart ERC-20 function .", "title": "", "metadata": ""}
{"_id": "a290806d0027a8ea8a35b7c8321f585c", "text": "The function mintICOTokens is only usable by the chosen wallet contract to mint a number of tokens proportional to the amount of ether sent to the wallet contract .", "title": "", "metadata": ""}
{"_id": "741b85da889175568093c79f781ac41b", "text": "cancel tx .", "title": "", "metadata": ""}
{"_id": "138cd220348e0561e7177bffde64345e", "text": "Token purchase function can be called by someone else , too .", "title": "", "metadata": ""}
{"_id": "d49466bb9f504038d4d0c10d3fc0be55", "text": "Overrides parent to only allow withdraws after the pre-sale has been finalized .", "title": "", "metadata": ""}
{"_id": "345fb4746047274d16f9edcfec75b4cc", "text": "Sets the final sum of user stakes for history and profit computation .", "title": "", "metadata": ""}
{"_id": "028923ecad5c1451ccf0cc75e9fd18b4", "text": "Change the paused state of the contract .", "title": "", "metadata": ""}
{"_id": "c7e2bcefbbed880e6d5148edf8814d6f", "text": "Return allowance for other address .", "title": "", "metadata": ""}
{"_id": "2454f12f68c4c2152dfec2cca4cea1a1", "text": "set the step of the campaign from presale to public sale contract is deployed in presale mode .", "title": "", "metadata": ""}
{"_id": "399031a7cf37cf9b3cd47a8e59b66a21", "text": "Transfer Property ownership between accounts .", "title": "", "metadata": ""}
{"_id": "1a4d9d4dfcf0171b775efd14647e1bb3", "text": "get parent of block .", "title": "", "metadata": ""}
{"_id": "fdfc13e0eb926395019ad28bf5fbf1dd", "text": "Unreserves special address .", "title": "", "metadata": ""}
{"_id": "3d6194b5b88b0010967552b4f951a5dc", "text": "Determine purchase price for a given address .", "title": "", "metadata": ""}
{"_id": "7e09ad7897e76ed7b422864a22404860", "text": "set a token upgrader .", "title": "", "metadata": ""}
{"_id": "e4784cd7baa2c1eb9d4d61c7dbdd6d57", "text": "Token fallback - gets entered when users transfer tokens to this contract .", "title": "", "metadata": ""}
{"_id": "126f9a6aad5ce5a6dde0610f88992643", "text": "The finalization override - commented bellow .", "title": "", "metadata": ""}
{"_id": "43ffa8ebb76717fac347ae45f3c567bd", "text": "Depositing funds on behalf of an ICO investor .", "title": "", "metadata": ""}
{"_id": "5f8f9dd5745689ce5e6598ff67b73cd1", "text": "user buys token with ETH .", "title": "", "metadata": ""}
{"_id": "ebb647f1f91a9a7ed490b272762cfb2d", "text": "implement supportsInterface ( bytes4 ) using a lookup table .", "title": "", "metadata": ""}
{"_id": "255401ba7c17d33f37e3337921e50e7a", "text": "This method can be used by the controller to extract mistakenly .", "title": "", "metadata": ""}
{"_id": "2ef54cab4246e6a79345edae2ef3ed62", "text": "Gets the player color given an address and board .", "title": "", "metadata": ""}
{"_id": "9cba9013bce3f0a001a6f516b8845930", "text": "Whether the needed accounts have activated the sale .", "title": "", "metadata": ""}
{"_id": "b67aae4be59c2425d6605e1e56bc4c23", "text": "Claim the tokens , they can be claimed only by the owner of the contract .", "title": "", "metadata": ""}
{"_id": "7e95d83b1984a18d8dacc3ff66251e5a", "text": "Claim tokens for final reserve wallet .", "title": "", "metadata": ""}
{"_id": "6aab327d6034ef1d343a4bdfca7d94e1", "text": "Give back token to contract bypassing selling from owner account .", "title": "", "metadata": ""}
{"_id": "0d4df845fa5585417b3ed50347d05ed7", "text": "generateProofSet - function for off-chain proof derivation .", "title": "", "metadata": ""}
{"_id": "37b654f8eab6ce0602e8abe9b622cac1", "text": "Gets reference price of an asset pair .", "title": "", "metadata": ""}
{"_id": "4e66daa0fd5eb61e1493c6cc3e900a92", "text": "calculate fund wrt sale cap .", "title": "", "metadata": ""}
{"_id": "0131a6fc02ce771c97d0e8b0d91d3c5f", "text": "Anyone can transfer a pet they own by calling this function .", "title": "", "metadata": ""}
{"_id": "47b19962624a4ead315f7cb0560d8899", "text": "Distribute presale .", "title": "", "metadata": ""}
{"_id": "2be47b5a96fdba264293fcc665989c61", "text": "Get token balance of an account .", "title": "", "metadata": ""}
{"_id": "60e581173f711ac9571a8ac7f37f69ec", "text": "Get current exchange rate .", "title": "", "metadata": ""}
{"_id": "6ec479d6857aa4453ff993bb3dddc468", "text": "assign foundation supply to a contract address .", "title": "", "metadata": ""}
{"_id": "a233c9164606de8aa749246050c29908", "text": "Before calling setup , the sender must call Approve ( ) on the AOC token .", "title": "", "metadata": ""}
{"_id": "d1088d8f1f9a4e5f5891f66aac8dfda4", "text": "Update partner 2 will , only partner 2 can update .", "title": "", "metadata": ""}
{"_id": "787561c1dc1befcaac3f0a07f6ecaba5", "text": "Check if given address is frozen .", "title": "", "metadata": ""}
{"_id": "28a8e07666151c87ce2d297bd8dcb67d", "text": "Transfer tokens from sender address to gateway .", "title": "", "metadata": ""}
{"_id": "216418232d79b0aaed6fc576449ad29e", "text": "batch transfer with same amount for each address .", "title": "", "metadata": ""}
{"_id": "1eda1f55dd92abb0f97ce82bc8c02fea", "text": "Sets the maximum Value in Ether to purchase tokens .", "title": "", "metadata": ""}
{"_id": "a19d6170f506bb49b87dada422445f45", "text": "Transfer token back to owner .", "title": "", "metadata": ""}
{"_id": "6e8da44b35ac5d2a361eba2d75aa0294", "text": "Finalize the crowdsale .", "title": "", "metadata": ""}
{"_id": "4e310b90cb52967d9f2f02a2ed653c49", "text": "For transferring a cutie owned by this contract to the specified address .", "title": "", "metadata": ""}
{"_id": "1892f8906b6c9a41a2e9c4193ac6a16b", "text": "overriding MintableToken mint to add kyc logic .", "title": "", "metadata": ""}
{"_id": "b9ad32cf7be54dcc625869c4287e453f", "text": "sets the value of ether price in cents . Can .", "title": "", "metadata": ""}
{"_id": "72cb1c4c29618e2fd1ac4047ef90f8b3", "text": "Split evenly among addresses , no safemath is needed for divison .", "title": "", "metadata": ""}
{"_id": "bf9709add64001d6b3ab47980d80cb4c", "text": "Send _amount tokens to _to from _from on the condition it is approved by _from .", "title": "", "metadata": ""}
{"_id": "a59c4521c0262adfc3bb162b8d298e58", "text": "Begin the self-destruction counter of this contract .", "title": "", "metadata": ""}
{"_id": "98d8e47bbdf203c173114fb8840be0ac", "text": "get number of real contributors .", "title": "", "metadata": ""}
{"_id": "26096ee9cfced008ddd6dd470b9db139", "text": "low level get rate function override to create custom rate function , like giving bonus for early contributors or whitelist addresses .", "title": "", "metadata": ""}
{"_id": "85f1b29bbc6ae7a8c0c89add02540e41", "text": "function called when a user wants to invest in the contract after calling this function you cannot claim past rewards .", "title": "", "metadata": ""}
{"_id": "d0d0ecde2ec6a5210ef05ce63b2cb6c9", "text": "advances step of campaign to main sale .", "title": "", "metadata": ""}
{"_id": "c4b842559d902ac22e3d4c840b92bb00", "text": "checking dispute if exists .", "title": "", "metadata": ""}
{"_id": "bb964bbb00b3e422117389befda72cbc", "text": "propose an action using the calldata from this sender's last call .", "title": "", "metadata": ""}
{"_id": "44d8830e80b523c137406d2435226041", "text": "handle automatic refunds .", "title": "", "metadata": ""}
{"_id": "5a918e9086f52f25783941648a7b5922", "text": "standard functions .", "title": "", "metadata": ""}
{"_id": "6eec73d0d1d25cfdda9b48d8206ec041", "text": "time left before the crodsale ends .", "title": "", "metadata": ""}
{"_id": "1126ca6dc583cd7d61ee28daf8555e99", "text": "claims the caller's tokens , converts them to any other token in the standard network by following a predefined conversion path and transfers the result tokens to a target account note that allowance must be set beforehand .", "title": "", "metadata": ""}
{"_id": "e51f6b0c976707b350cac78d5e3ff8d7", "text": "Unlock trading .", "title": "", "metadata": ""}
{"_id": "9f8dbf70dea36a894a591f5132ef80a0", "text": "Token-transfer from msg . sender .", "title": "", "metadata": ""}
{"_id": "68454db80a874a73013ffce203f1c5f7", "text": "Send tokens to Advisors Tiqpit Solutions Wallets .", "title": "", "metadata": ""}
{"_id": "e27a4d05f8783a727d40dd0d33c34f66", "text": "Return if there is overflow of contributed eth .", "title": "", "metadata": ""}
{"_id": "4428780336034ff4c64bef76ec24a614", "text": "Returns all the relevant information about a specific villain .", "title": "", "metadata": ""}
{"_id": "ba787577c5a349052cdd7226e5fb4ec0", "text": "You don't want someone to be able to change the price and then .", "title": "", "metadata": ""}
{"_id": "726ae6cb6dceeeaac463261f5411ae75", "text": "whitelist several investors via a batch method .", "title": "", "metadata": ""}
{"_id": "cb3ae8d835f4112ea13fb7a01b55b407", "text": "The leaderboard owner can remove a player .", "title": "", "metadata": ""}
{"_id": "e30226a2f5c088dcbc30458d2fe6c505", "text": "the character id .", "title": "", "metadata": ""}
{"_id": "56a3695ef44a3b778129144315d58734", "text": "send value token to _to from msg . sender .", "title": "", "metadata": ""}
{"_id": "eeaef7c5bd496b3a5ffe94d26876db11", "text": "get the detail info of card .", "title": "", "metadata": ""}
{"_id": "ed1af9ef963702b9458daf39387dac95", "text": "owner only withdrawal function for the presale .", "title": "", "metadata": ""}
{"_id": "899be470b0e51921c999a8ebe26e929d", "text": "Manual set extra bonus for addresses .", "title": "", "metadata": ""}
{"_id": "50e7a371cc6279918b3dd69b1ce8ceb7", "text": "Withdrawal LRC with ETH transfer .", "title": "", "metadata": ""}
{"_id": "ed233cbeb36f782b3218f16a9d6e0185", "text": "Can only be called either after crowdsale time period ends , or after tokens have sold out .", "title": "", "metadata": ""}
{"_id": "c37eb2d90e7edb97f08e589901261e78", "text": "Changes the minter role to provided address .", "title": "", "metadata": ""}
{"_id": "ee3a23c166e59e1f6fabaf0ae3eed3e0", "text": "dev function for close crowdsale .", "title": "", "metadata": ""}
{"_id": "88fe9da5d925c1c452eab2f2a2b7f4af", "text": "send excess of tokens when de ico end .", "title": "", "metadata": ""}
{"_id": "aae569963167fe830fce93153abbb754", "text": "true if investors can buy with the value provided .", "title": "", "metadata": ""}
{"_id": "8c251efdf4ab38328a311eb39abe1b96", "text": "stop contract .", "title": "", "metadata": ""}
{"_id": "1b06cc80423078c5d25466df029bb4b1", "text": "When MIN_CAP is not reach : 1 ) backer call the approve function of the NewHope token contract with the amount of all NewHopes they got in order to be refund 2 ) backer call the refund function of the Crowdsale contract with the same amount of NewHopes 3 ) backer call the withdrawPayments function of the Crowdsale contract to get a refund in ETH .", "title": "", "metadata": ""}
{"_id": "436568f9a0819469d73da287370a69fd", "text": "refunding a transaction .", "title": "", "metadata": ""}
{"_id": "061f5fb3f0ceee48171d1f21a1d4b98f", "text": "Reject all ERC23 compatible tokens .", "title": "", "metadata": ""}
{"_id": "dd70731e034d66d202420c06023af6a7", "text": "this allows to disable PoS sending for some of the cycles in case we need to send custom PoS .", "title": "", "metadata": ""}
{"_id": "f572ab5edff880b44eb16b50f150d740", "text": "deposit ether to etherdelta .", "title": "", "metadata": ""}
{"_id": "22e5dc59065923aec29765a9bf4dda53", "text": "modifier to check if payments being accepted .", "title": "", "metadata": ""}
{"_id": "8df0c65058ef48d3fd11bf962d49ca30", "text": "get operation gas amounts .", "title": "", "metadata": ""}
{"_id": "932072c4d9baad1b42dbe25960166893", "text": "Calculates the bonus amount based on the contribution date .", "title": "", "metadata": ""}
{"_id": "75fb042f308b6d4718341cbc08afda47", "text": "Return the result of dividing x by y , interpreting the operands as fixed point decimal numbers .", "title": "", "metadata": ""}
{"_id": "382312fe40ec4e59eead330c0c09f822", "text": "public function to create team , can only be called by owner of smart contract .", "title": "", "metadata": ""}
{"_id": "f1ec627a4ad270d735d24d87ecb58952", "text": "how ETH is stored / forwarded on purchases .", "title": "", "metadata": ""}
{"_id": "e48fa2ea68fb2327886d01883ab28320", "text": "Commits vote using hash of choice and secret salt to conceal vote until reveal .", "title": "", "metadata": ""}
{"_id": "9d39d543678856045880fc42f4a2f40b", "text": "view current price of tokens .", "title": "", "metadata": ""}
{"_id": "c429e87c6b549abb4eae2271bb3db2ef", "text": "Get current rate from oraclize and transfer tokens .", "title": "", "metadata": ""}
{"_id": "186d45a54c822bcd9117ac04a0c5573e", "text": "Assigns ownership of a specific deed to an address .", "title": "", "metadata": ""}
{"_id": "04eb085949d280f802c5f603d04d9a6f", "text": "Allows to change the eth daily transfer limit .", "title": "", "metadata": ""}
{"_id": "c2e4f6688a1d5356f392a95d02b753a6", "text": "set new softcap ( emergency case ) .", "title": "", "metadata": ""}
{"_id": "17d9f85c324ab5cfc8b2e8f69a67f694", "text": "Drain functions in case of unexpected issues with the smart contract .", "title": "", "metadata": ""}
{"_id": "c6a164d2a73910621f9f0818b5c78d7a", "text": "Safe Math Function .", "title": "", "metadata": ""}
{"_id": "51c55f2c616bd50ecf13f1b85f6711cf", "text": "Returns true if the FT ( ERC721 ) is on sale .", "title": "", "metadata": ""}
{"_id": "386be133fce623b1ce935adf7a5303e6", "text": "Transfer bounty to target address from bounty pool .", "title": "", "metadata": ""}
{"_id": "3cf16d4dec0f3ff1f49147c0b6f8686a", "text": "Gets the totalSupply of the tokens .", "title": "", "metadata": ""}
{"_id": "8d9ccc76d9f5f7d7ced59d70c2d03bbf", "text": "Initialize a week data struct .", "title": "", "metadata": ""}
{"_id": "a4d041881d1a854a9a21f685f7b2bf2e", "text": "Make _rawValueWei into a nicer , rounder number .", "title": "", "metadata": ""}
{"_id": "e57732399ec746e37156f8e59cf55c95", "text": "Close a channel between two parties that was used bidirectionally .", "title": "", "metadata": ""}
{"_id": "28433fe803306c2faa94d4ac96a6ac36", "text": "Only the override address is allowed to change the owner address .", "title": "", "metadata": ""}
{"_id": "2579b38db719d29e18ed241427e05e49", "text": "END ICO functions .", "title": "", "metadata": ""}
{"_id": "fd42512aac1df1b9d25d002f75a4c845", "text": "calculation of recommended price .", "title": "", "metadata": ""}
{"_id": "234688c304fe877eb1d2c1eb430c4f8a", "text": "buy - on the hackathon timeframe that is the function that will be the way to buy specific tokens for startup .", "title": "", "metadata": ""}
{"_id": "c7aae4601da4e8c35efebfd3e41a1e70", "text": "Allows owner to transfer out any accidentally sent ERC20 tokens .", "title": "", "metadata": ""}
{"_id": "9bbad666074a66764fdf1c44bab7ccb1", "text": "Get the amount of vested tokens at a specific time .", "title": "", "metadata": ""}
{"_id": "8d4e216cd114539372393cd63146e584", "text": "Drain tokens that were sent here by mistake because people will .", "title": "", "metadata": ""}
{"_id": "c3a7b7c4780cc15722b21ef1c7871543", "text": "whether or not the specified address has cast a vote on the specified proposal .", "title": "", "metadata": ""}
{"_id": "6fda3b7b94e7317f2dc03b353d3eb4c1", "text": "Following constant methods are used for tests and contribution web app .", "title": "", "metadata": ""}
{"_id": "372951d4d4ce994e88a0a7c95a96600f", "text": "Transfers the loan to an address , only if the current owner is the from address .", "title": "", "metadata": ""}
{"_id": "5bd4059577813c6b23df1c5992b8e657", "text": "Modifier for checking ICO period .", "title": "", "metadata": ""}
{"_id": "39e7301f39a6422afc122265b5736822", "text": "The result of dividing x by y , throwing an exception if the divisor is zero .", "title": "", "metadata": ""}
{"_id": "eefa1a785a844486a4083cb98fa8781e", "text": "Contract Versioning / Migration .", "title": "", "metadata": ""}
{"_id": "1001c659eb0ad8a6e8c1beb76c5a4fc6", "text": "Set private sales price .", "title": "", "metadata": ""}
{"_id": "71eb23082bff306848209616e5842098", "text": "Chase the carrot .", "title": "", "metadata": ""}
{"_id": "316a448855845956c82e355d5972fe95", "text": "disable single payee in emergency .", "title": "", "metadata": ""}
{"_id": "93d229f9c341209bb377a1f5d5bab13a", "text": "After firing this function no more tokens can be created .", "title": "", "metadata": ""}
{"_id": "c3ec7aafdb82ebb413fdcc6599204bb8", "text": "Changes the beneficiary of the fundraiser .", "title": "", "metadata": ""}
{"_id": "4d0088de90839a23eec243ba5f5c0c00", "text": "to obtain number of contributors so later front end can loop through backersIndex and triggger transfer of tokens .", "title": "", "metadata": ""}
{"_id": "4195fe63fa23415c3b1a2493c582930f", "text": "Allow users to read comments .", "title": "", "metadata": ""}
{"_id": "980d450c4af9d58d54af2421c13ff048", "text": "Mint RAcoin tokens .", "title": "", "metadata": ""}
{"_id": "4cfed4b7cbfe04cd0805573652f149e1", "text": "Validates parameters and starts crowdsale called by CrowdsaleController .", "title": "", "metadata": ""}
{"_id": "dcb41b34b1ad180953fcd9d1cca5646d", "text": "Use this function to member acct from array memberAcct .", "title": "", "metadata": ""}
{"_id": "346f4812fabdbc2a349c7a0d22b90f30", "text": "Withdraw to Emergency Account after loosing access to both Owner and Resque accounts .", "title": "", "metadata": ""}
{"_id": "9036d9777a4eb339a9fb76742bb1b80b", "text": "shuts the CDP and returns all the value in the form of Dai .", "title": "", "metadata": ""}
{"_id": "f7b06348de2466cba2b49f118214a692", "text": "Transfers the ownership of a given deed ID to another address .", "title": "", "metadata": ""}
{"_id": "936dbb617326dd7020badc92c71c00bd", "text": "returns a metadata URI .", "title": "", "metadata": ""}
{"_id": "eddd0721c6b5eb843c7af8485442ecc6", "text": "public function player submit bet only if game is active bet is valid can query and set player vars .", "title": "", "metadata": ""}
{"_id": "84352d5b8c2ad7dc2e64b7a481f324e9", "text": "Self destruct just in case .", "title": "", "metadata": ""}
{"_id": "2a5007e808abce67839689fcb1c012d9", "text": "This function allows players to purchase cryptogamers from other players .", "title": "", "metadata": ""}
{"_id": "7024948bbefe92c27900170760325ed9", "text": "for erc223 tokens .", "title": "", "metadata": ""}
{"_id": "16f03466448e6e1d362af29f35fcdc16", "text": "Freeze a particular account in the case of needed .", "title": "", "metadata": ""}
{"_id": "7514fdb9dbe3034cc1cc96b5b0836f05", "text": "Sets a wallet as customer service to perform emergency removal of wrong , abused , squatted tweedentities ( due , for example , to hacking of the Twitter account ) .", "title": "", "metadata": ""}
{"_id": "9e6fe3f0e0ae6b6999bca8e887c0f196", "text": "Activation function after successful ICO .", "title": "", "metadata": ""}
{"_id": "ca7496a22d5a3dc8a107ce58d8c1a076", "text": "time-based bonus rate .", "title": "", "metadata": ""}
{"_id": "bc6db02e2cfa94ef2f5650a3f4ed0314", "text": "use to add the details of the delegate .", "title": "", "metadata": ""}
{"_id": "c177e2fa720e59f13c796737b8860f42", "text": "instructions for HODLr to sell Win tokens for ethers : 1 .", "title": "", "metadata": ""}
{"_id": "e49c45f2ab32eae6971e0069d72cdf05", "text": "Will transfer a small sample to selected address - User supply of tokens must have enough balance .", "title": "", "metadata": ""}
{"_id": "9f3015026a0a18c76234cb182fab68de", "text": "We use this function to froze a game .", "title": "", "metadata": ""}
{"_id": "655b3cf69d30433f3406b115175d92c6", "text": "internal funcs .", "title": "", "metadata": ""}
{"_id": "452856fc7376dea92abaea6059c396fe", "text": "get reserve information .", "title": "", "metadata": ""}
{"_id": "d97acd2bd5d7816166830c06deba398f", "text": "Get bonus by eth .", "title": "", "metadata": ""}
{"_id": "b4b56d72a1dd808eb7d84b3db19dddac", "text": "cost 2 . 4M .", "title": "", "metadata": ""}
{"_id": "f8ccdff2cfbe622184ea34050ed1a946", "text": "For creating State .", "title": "", "metadata": ""}
{"_id": "3873d0d291a2de154d1adc8e71d4335c", "text": "buy Bronze with ether .", "title": "", "metadata": ""}
{"_id": "a351e2b12264296b488cccfa7d800e92", "text": "Check whether crowdsale is currently active .", "title": "", "metadata": ""}
{"_id": "8f7eb0584d954cc146476c7afe37df0a", "text": "Lock token until _timeSpan second .", "title": "", "metadata": ""}
{"_id": "7303b7a21a423f325c94cd391ab428a8", "text": "Check your share of the balance .", "title": "", "metadata": ""}
{"_id": "b620271021e98b4669df362101b055dc", "text": "Distribute COMIKETCOIN to multiple addresses .", "title": "", "metadata": ""}
{"_id": "32acb540e96c42e385dd10306211ad8e", "text": "Get reward token count .", "title": "", "metadata": ""}
{"_id": "41c3b941ed625586cb4dbe581e17f3c2", "text": "Maps addresses to a boolean indicating whether or not this address has contributed .", "title": "", "metadata": ""}
{"_id": "47b0417e28d977703e202c2e20c7cc31", "text": "override to check atleast min amount eth is being paid .", "title": "", "metadata": ""}
{"_id": "45da8b73bbfd1e2ecdaa6c05fbf8ff3c", "text": "function to start the Token Sale start the token sale at _starBlock .", "title": "", "metadata": ""}
{"_id": "7f0b81d0958a8f35340a4ed94ffc85b0", "text": "To send ERC20 tokens sent accidentally .", "title": "", "metadata": ""}
{"_id": "d1051bd7bc42585044a22d1d8b497e40", "text": "This internal function skips all validation checks .", "title": "", "metadata": ""}
{"_id": "93f9e48e4ff56a0f128989f1d1e43585", "text": "admin initiates a request that the insurance fee be changed .", "title": "", "metadata": ""}
{"_id": "158b7754e15368d2515422067c105e0c", "text": "Transfers the ownership of a given unicorn ID to another address .", "title": "", "metadata": ""}
{"_id": "bf0e410d9a2282cbdbd322c9c3c66ac6", "text": "prevents contracts from interacting with ratscam .", "title": "", "metadata": ""}
{"_id": "165b98e9458289705956279ae297b4b4", "text": "get total blue cards .", "title": "", "metadata": ""}
{"_id": "45f6b99f4f1293af8bdad485db969eb0", "text": "Reverts if called when not during sale .", "title": "", "metadata": ""}
{"_id": "9bc8f421e48372df83b16a68ebab85c3", "text": "Spend value from a different account granted you have allowance to use the value amount .", "title": "", "metadata": ""}
{"_id": "202743cbe65182fc36ba3a947bb084dc", "text": "Sets exhange rate , ie amount of tokens ( 10 - 18 ZNA ) for 1 wie .", "title": "", "metadata": ""}
{"_id": "f3b5764de01ae72392cb36e7bd628ea9", "text": "Function to transfer APMAs between two given addresses .", "title": "", "metadata": ""}
{"_id": "f0f9bf9d4ab75181f87dd4986d7cecce", "text": "request asks the Potatoin foundation for a grant of one potato .", "title": "", "metadata": ""}
{"_id": "94a3607d61ce62fa2afcce4b898dc3d6", "text": "mint tokens to beneficiary .", "title": "", "metadata": ""}
{"_id": "5ea9f840205fac5d62239f6fa27e9940", "text": "function to change the coin percentage awarded to the partners can only be called from the owner wallet .", "title": "", "metadata": ""}
{"_id": "4f8d1c9ea7138f4694a535369502da12", "text": "get ether delta token balance from token address .", "title": "", "metadata": ""}
{"_id": "8e4c28a886c789a4ef3a92f950b3cf91", "text": "Sets buy price for insurance .", "title": "", "metadata": ""}
{"_id": "c201dea11980ab49e687e01cb78f730b", "text": "Overrides Crowdsale . createTokenContract , .", "title": "", "metadata": ""}
{"_id": "7705ccf4d7059bde3bc9f17d0f77f29f", "text": "Set new wallet to collect ethers .", "title": "", "metadata": ""}
{"_id": "63dde754e3fc7b7139abb35adfd07e52", "text": "called by the owner to set a new rate ( consider decimals of token ) .", "title": "", "metadata": ""}
{"_id": "a5fcb197a317cb2c4301d7196601760e", "text": "claim ( quantumReceive ) allows the user to prove some an ICT to the contract thereby thereby releasing the tokens into their account .", "title": "", "metadata": ""}
{"_id": "5110d63bd5ecbd01040774c3519659cc", "text": "User can call this function to generate new kingdoms ( within the limits of available land ) .", "title": "", "metadata": ""}
{"_id": "178075fcc066c27feec4a226fa2a2fdb", "text": "Redeems Bskt tokens in exchange for underlying tokens .", "title": "", "metadata": ""}
{"_id": "083c1442c3f5a97f3f30f477b9a7fd09", "text": "An external function that creates a new hero and stores it , only contract owners can create new token .", "title": "", "metadata": ""}
{"_id": "f52270a839d35c646af864857bbe48e9", "text": "Check that Security Token is registered .", "title": "", "metadata": ""}
{"_id": "942534baf836a6dfb7da2f2db9330407", "text": "Claiming the current acting player on the board is out of time , thus losses the game .", "title": "", "metadata": ""}
{"_id": "bd407f39fe62de66635adf194ddfb510", "text": "Internal transfer of tokens , only can be called from within this contract .", "title": "", "metadata": ""}
{"_id": "499d409c4793b7100825004c0da360b3", "text": "Send tokens to another account from a specified account .", "title": "", "metadata": ""}
{"_id": "549d3f005b4b0e95db2f958ecc36dc6a", "text": "Decreases the amount of tokens a given account can spend on behalf of the sender's account .", "title": "", "metadata": ""}
{"_id": "eee4ff6a0ebdcbd55d7b65c76f183bae", "text": "Sign out contract .", "title": "", "metadata": ""}
{"_id": "d5411ea8fad8b1ddd9b4ca2f7a23ddfe", "text": "whitelist an address .", "title": "", "metadata": ""}
{"_id": "872f2ed3294f25ced812bc91e877a26f", "text": "Get balance of _who for freezed moment freezeTheMoment ( ) .", "title": "", "metadata": ""}
{"_id": "494740656033e47b652434bfbbe2372c", "text": "true if _participant is removed successful .", "title": "", "metadata": ""}
{"_id": "369caaeebc92f8e09f5e42ac820bb8f0", "text": "Returns a sorted array of the top 100 bidders .", "title": "", "metadata": ""}
{"_id": "d0fa3b4e2b93fde136c7d1f12c04e868", "text": "Returns all the relevant information about a specific Puppy .", "title": "", "metadata": ""}
{"_id": "e3618c382e103e8cfb3fac58d00c6173", "text": "not used for this token implements ERC20 interface .", "title": "", "metadata": ""}
{"_id": "cc50530eb61b6a8422a7187a5f9753f4", "text": "new draw start .", "title": "", "metadata": ""}
{"_id": "8a200bbe7b78735a64396b28a5aa1d1e", "text": "Permits to create an approval on a contract and then call a method on the approved contract right away .", "title": "", "metadata": ""}
{"_id": "dca029f31713cbef5d8b945e0e3092e6", "text": "Stop offering the product .", "title": "", "metadata": ""}
{"_id": "ab963da4a61cd5db94f5e1bdce223cfc", "text": "a function using safemath to work with the new function .", "title": "", "metadata": ""}
{"_id": "185486183ba3cf9e65e7863088fa11d2", "text": "remove contract addr from the list of trusted contracts .", "title": "", "metadata": ""}
{"_id": "b6356776f58854656e28d2f508c95c6c", "text": "claims the caller's tokens , converts them to any other token in the bancor network by following a predefined conversion path and transfers the result tokens to a target account note that allowance must be set beforehand .", "title": "", "metadata": ""}
{"_id": "ca7b3d8a85ba85c5f34860d0b6392740", "text": "entry point for the buying of CAK tokens .", "title": "", "metadata": ""}
{"_id": "9664811d48861fccd130748881ab99e3", "text": "Authorize an address to retrieve funds from you with a custom cooldown ERC-20 Standard .", "title": "", "metadata": ""}
{"_id": "7e3d42105f2ccce2b2080604c92a565b", "text": "Add wallet address to transfer whitelist ( may transfer tokens before ICO ended ) .", "title": "", "metadata": ""}
{"_id": "490e0369d2be7711c81999a7b5015a7c", "text": "buy key use balance .", "title": "", "metadata": ""}
{"_id": "acb0625b7eee7bba89e89a7dba6c84d4", "text": "set individual preCrowd cap .", "title": "", "metadata": ""}
{"_id": "d7a9c3f3446c178b1c677efc8e95dcb7", "text": "End token offering by set the stage and endTime .", "title": "", "metadata": ""}
{"_id": "ca6d7a822d78ff4486be2d5b2a23d828", "text": "Owner will buy back WaraCoin from backers .", "title": "", "metadata": ""}
{"_id": "f520d7f424bda86d7a7db6603e446346", "text": "methods with following modifier can only be called by the manager .", "title": "", "metadata": ""}
{"_id": "76ac1096d72c0b744e8ee898d21d9efd", "text": "its stats are completely dependent on the spawn alghorithm .", "title": "", "metadata": ""}
{"_id": "d3a2056962f52b85aa157cc07fa43568", "text": "Retrieve the protected balance and hashed passphrase for a pending protected transfer .", "title": "", "metadata": ""}
{"_id": "2dacb45d2e27cff288aba781a283b5cc", "text": "Closes the refund safe .", "title": "", "metadata": ""}
{"_id": "df305b808dcdae96e505b46e0449ecd2", "text": "An internal method that tunes an existing lambo .", "title": "", "metadata": ""}
{"_id": "80603db09a4b05aed510a1d88ed98eb8", "text": "add first buyers .", "title": "", "metadata": ""}
{"_id": "5509a4144549b50b12ea73ae5dc01026", "text": "Withdraw VNET Token .", "title": "", "metadata": ""}
{"_id": "2e16e96d2a9cd8ba1abaf3d8a18b62fc", "text": "Owner can withdraw ethers sent for buying gold on Reddit .", "title": "", "metadata": ""}
{"_id": "aec52f6fc45ec62a2ef2399a2d5b2cb8", "text": "Quantity of asset held in exchange according to associated order id .", "title": "", "metadata": ""}
{"_id": "32a4d3110b099c59268daeaa52c2610b", "text": "set token name .", "title": "", "metadata": ""}
{"_id": "7f32eb0b8de2e502ab42b06c64d7e6fc", "text": "Function to pay a request in ERC20 token .", "title": "", "metadata": ""}
{"_id": "f098b5f2e574b3f9f55906f9f1ecd4b1", "text": "Allows someone to obtain the token .", "title": "", "metadata": ""}
{"_id": "61bdbd50aad85c0a9bb3d6c9e34679eb", "text": "Change target address where investment requests are forwarded .", "title": "", "metadata": ""}
{"_id": "cfb171a2ce899fd765fca6b014c28314", "text": "esta funcion es llamada por el cliente , cuando el banco central ( estado ) le otorga el dinero .", "title": "", "metadata": ""}
{"_id": "f9260a7d325c0a9a6e5e5a7d44eb446c", "text": "called by the owner to change owner of token and whitelist .", "title": "", "metadata": ""}
{"_id": "b06dd40be354b997de3a8288a104be1f", "text": "The latest N - the price will increase every Nth presses .", "title": "", "metadata": ""}
{"_id": "cad1da1c51c823ce87212de1ddfa6e6e", "text": "Sender enter to the game .", "title": "", "metadata": ""}
{"_id": "61b0dd773299b049ef66104d51f7bea1", "text": "Update which address is not validated .", "title": "", "metadata": ""}
{"_id": "e7db97729ca638861873bcdf54f57910", "text": "Set ICO Contract for this token to make sure called by our ICO contract .", "title": "", "metadata": ""}
{"_id": "f60dbcc3a8691688950d564d9c096e1e", "text": "Total amount still owed in credit to depositors .", "title": "", "metadata": ""}
{"_id": "cfe00bbafdae537402be4ff76687648a", "text": "Low-level change of balance and getters .", "title": "", "metadata": ""}
{"_id": "6ffd4dbbbc1d907d6ca094ffcb1a6d9e", "text": "Starts the game and sets everything up for the match .", "title": "", "metadata": ""}
{"_id": "9607d8df0a0793fc4e108dcde18d291e", "text": "Add a Burnup game contract address .", "title": "", "metadata": ""}
{"_id": "e60e227ec3e002bca16b58cc711e7965", "text": "Transfer players their winnings .", "title": "", "metadata": ""}
{"_id": "c6ac404f403a16a3d5f0225a14e1d299", "text": "Get the total number of tokens currently in circulation .", "title": "", "metadata": ""}
{"_id": "250af55883980eab1d0a8073d041ecdf", "text": "Pre-ICO sale starts on 31 of March , ends on 06 April 2018 1st .", "title": "", "metadata": ""}
{"_id": "dfa94ee21d81d122ab568e3741a8d968", "text": "Transfer tokens to advisors from the advisor's pool .", "title": "", "metadata": ""}
{"_id": "042b6a3ab34553d6384a9f66ed3c35ca", "text": "functions debug functions .", "title": "", "metadata": ""}
{"_id": "867ded98594a944881156e2bcb378f6c", "text": "deploy a new artwork .", "title": "", "metadata": ""}
{"_id": "c0df4e6c098c099b9c08ceefd5b917a6", "text": "withdrwaw call for refunding balance acumilated by payee .", "title": "", "metadata": ""}
{"_id": "11e3565292c25ef20b83e7477062e27f", "text": "get early bonus for Investor .", "title": "", "metadata": ""}
{"_id": "ee4521c4a615acd76f51c69e55392850", "text": "Called by any C-level role to pause the contract .", "title": "", "metadata": ""}
{"_id": "62e2f5ff5651c47280efd89158b0c70c", "text": "Modifier to only allow the execution of certain functions restricted to the owners .", "title": "", "metadata": ""}
{"_id": "f1578327b635273150fc75232845a0fc", "text": "Purchase meme from previous owner .", "title": "", "metadata": ""}
{"_id": "a78d7899ce195885da36626ada1a792d", "text": "to be called when ICO is closed , burns the remaining tokens but the owners share ( 50 000 000 ) and the ones reserved for the bounty program ( 10 000 000 ) .", "title": "", "metadata": ""}
{"_id": "5b48f1bf0593ff3c71c69cff8267e07f", "text": "Check if owner or if contract is open .", "title": "", "metadata": ""}
{"_id": "f19fe53d59c76e1fd000389a559920eb", "text": "Function to set the project manager .", "title": "", "metadata": ""}
{"_id": "8b7c6d1bb90f97cebbfe5abc1f63dc37", "text": "ERC20 Standard method to return spending allowance .", "title": "", "metadata": ""}
{"_id": "12b38b07af05db26891396b7ac5f31f4", "text": "withdraw withdraws tokens to the sender withdraw can be called at most once per redemption period .", "title": "", "metadata": ""}
{"_id": "860d4d1957377c11f2f2878d91dd2858", "text": "Claim buyer funds for one auction .", "title": "", "metadata": ""}
{"_id": "0f6cc09f0fabe1e67b488e844fe8716c", "text": "Manual sell .", "title": "", "metadata": ""}
{"_id": "6a09e3cb6ce0a762206137465ee79481", "text": "Tracks a stock split .", "title": "", "metadata": ""}
{"_id": "7d901279428620c6b536ba0ef73afb03", "text": "State transitions for names : .", "title": "", "metadata": ""}
{"_id": "4e54b3aeb1008d46139ab6226fc2b209", "text": "returns the n-th NFT ID from a list of owner's tokens .", "title": "", "metadata": ""}
{"_id": "7ffdf69d97479f90aa71fc80da17aa0e", "text": "only the admin is allowed to unlock accounts .", "title": "", "metadata": ""}
{"_id": "6aa7c33a92260a7bf2b19de9038f3878", "text": "Function to remove existing manager .", "title": "", "metadata": ""}
{"_id": "2c3cedb0fe1688ef8349c8aa24a5f86c", "text": "Checks if a given address currently has transferApproval for a particular Lambo .", "title": "", "metadata": ""}
{"_id": "08b34d5393a56df73506235f25824a52", "text": "Drop SyndiCoins .", "title": "", "metadata": ""}
{"_id": "e21b9bce7e01e5ae215269831cd8c441", "text": "Lock funds for dividends payment .", "title": "", "metadata": ""}
{"_id": "ccf8daa09351368c62bdc067db732d8e", "text": "Changes owner address to a new address .", "title": "", "metadata": ""}
{"_id": "aca58eeced8c67b272f9b440e65c1874", "text": "stop IGO .", "title": "", "metadata": ""}
{"_id": "2ee3ff1d738a78eacfa9eca3abb76717", "text": "Gets list of players owned by a person .", "title": "", "metadata": ""}
{"_id": "979b9b0585c5c35d38e692189231b6b5", "text": "ERC20 members .", "title": "", "metadata": ""}
{"_id": "63538e39225d455ceb906347311cdcf4", "text": "SECTION : Modifier .", "title": "", "metadata": ""}
{"_id": "9e9542b84e7224318be43f91ef56a677", "text": "This function claims multiple previously unclaimed tiles in a single transaction .", "title": "", "metadata": ""}
{"_id": "d7ebeef2992cca955f96b069dfa695ff", "text": "admin initiates a request to transfer ownership of the TrueUSD contract and all AddressLists to newOwner .", "title": "", "metadata": ""}
{"_id": "303517f2cd1945e37d08886031951b17", "text": "democ getters .", "title": "", "metadata": ""}
{"_id": "41764472cee40c964362b514f9aa7d79", "text": "Release the funds for expanding project .", "title": "", "metadata": ""}
{"_id": "64d313cee633d780994f3f48284c0021", "text": "Dynamically set the price of Stake in USD cents , which depends on current timestamp ( price grows with time ) .", "title": "", "metadata": ""}
{"_id": "e469c1f5659e7948ea6b3d5c079323c6", "text": "Claiming Logic Implementation .", "title": "", "metadata": ""}
{"_id": "e329026377b9ad9e13b9b206db61e60f", "text": "Increase the amount of eUSD tokens that an owner allowed to a spender .", "title": "", "metadata": ""}
{"_id": "5815d800181920e6281e3cb320c8cbe1", "text": "add and delete certificator .", "title": "", "metadata": ""}
{"_id": "c9d0ed83c711391657866abf24cc11fb", "text": "the owner's address is 0x79Ed9508dD940925384C439a3aff10B278604Fe2 .", "title": "", "metadata": ""}
{"_id": "21f53811d9c9cabd0d2f44f5fe2f1215", "text": "Burn away the specified amount of ProjectX tokens .", "title": "", "metadata": ""}
{"_id": "4e5324fa7e69b2332dfce0037850c5eb", "text": "Set the new rate .", "title": "", "metadata": ""}
{"_id": "1c463019ab25c8dfddb9a9c6ddfdfc65", "text": "Allows for a transfer of tokens to _to .", "title": "", "metadata": ""}
{"_id": "814ee35409ff2f88d9da15452d597de3", "text": "withdrawal all the earning of the game .", "title": "", "metadata": ""}
{"_id": "46fe4a11b633b78f06d370f3a37c8acd", "text": "Function to get the latest manifest registration based on registrant address .", "title": "", "metadata": ""}
{"_id": "f0c74cfc7c7c2287b9014c00ee273a51", "text": "Fills a sell order by synchronously executing exchange buy orders .", "title": "", "metadata": ""}
{"_id": "d0ab5e71d79cf601ed2d5d550e9e656f", "text": "The owner can clawback any ethers after a date in the future , so no ethers remain trapped in this contract .", "title": "", "metadata": ""}
{"_id": "41e5a70f0e4a247fac5557bb5bef8acf", "text": "internal function to calculate how much to give to owner of contract .", "title": "", "metadata": ""}
{"_id": "419bc3832f6b884549b6ad7e04cc0762", "text": "Make sure this board still has balance .", "title": "", "metadata": ""}
{"_id": "d9dbad314988970a66d0ffd7a9bb2189", "text": "Queries the price of a token .", "title": "", "metadata": ""}
{"_id": "ea9b5c815cce4b37bed15adaa2f5ff33", "text": "give _spender approve _amount .", "title": "", "metadata": ""}
{"_id": "eadb28b0fbf9b1c4d96b43ecaf83c742", "text": "Replace the contract owner with a new owner .", "title": "", "metadata": ""}
{"_id": "659c15423f3c4304bd9f4c14c4ec2e76", "text": "en caso de pasar true como parametro revisa las deudas aun no aprobadas .", "title": "", "metadata": ""}
{"_id": "8f370de43327f433c1fe17f41c183ea0", "text": "Function used in Reward contract to know address of token holder .", "title": "", "metadata": ""}
{"_id": "5cdccbeb2ecd54816043102573f79f0c", "text": "Update the rate RLC per ETH , computed externally by using the ETHBTC index on kraken every 10min .", "title": "", "metadata": ""}
{"_id": "159242fd1ea17d45f4f779f9fde74a1b", "text": "Delete star .", "title": "", "metadata": ""}
{"_id": "dda235f012b30abff69a4449018c2e38", "text": "Allows the current owner to transfer control of the contract to a new owner .", "title": "", "metadata": ""}
{"_id": "3840690fbee81404b19b233245ddfafa", "text": "End the presale event , preventing any further token purchases .", "title": "", "metadata": ""}
{"_id": "28de3cfbd5ffd88384d6e8c9a9be754a", "text": "get list of forecast by token .", "title": "", "metadata": ""}
{"_id": "3df9fed9e66fca4e233e44287fb1c040", "text": "Kill Function .", "title": "", "metadata": ""}
{"_id": "6881735a2ab31b455b6612b7949ce0c9", "text": "Current Vesting stage for life wallet .", "title": "", "metadata": ""}
{"_id": "b00f80e8ea4b723bc0317adec2d16057", "text": "get name for specified address and namespace , .", "title": "", "metadata": ""}
{"_id": "287a08e3848da55731fc1c2ba5157e40", "text": "Transfers a Centurion to another address .", "title": "", "metadata": ""}
{"_id": "1529121cc81725422509531d1ab847fe", "text": "check how many candies one can claim by now ; .", "title": "", "metadata": ""}
{"_id": "6faef3331659c529d0db07340e9f0a45", "text": "Allows the owner to manually mint some SHP to an address if something goes wrong .", "title": "", "metadata": ""}
{"_id": "e719fc66096058f1dc290656841eac1b", "text": "maps a given number to the new range ( old range 10000 ) .", "title": "", "metadata": ""}
{"_id": "94761ab749f4c4f6ed177e964636ffb5", "text": "Registers a presale order .", "title": "", "metadata": ""}
{"_id": "601d5e2e55e9c5b85efc76592489ad72", "text": "CertiK Smart Labelling , for more details visit : https : / / certik . org .", "title": "", "metadata": ""}
{"_id": "3e041a7fc5d141a609c53d93303339c1", "text": "onlyRecipient Marks a milestone as DONE and ready for review .", "title": "", "metadata": ""}
{"_id": "9370fec0e971d163a147e3008f7e30f9", "text": "For creating a Creator .", "title": "", "metadata": ""}
{"_id": "81049f372fedd70fa47e9b08c4573ec5", "text": "allows us to migrate to anew contract .", "title": "", "metadata": ""}
{"_id": "af85c48116a1264ebd9052ed1d8d9dfe", "text": "Transfer the ownership to another address .", "title": "", "metadata": ""}
{"_id": "e8bb8b07123dadc495d7e92abf83230d", "text": "Edits milestone by given id and new parameters .", "title": "", "metadata": ""}
{"_id": "add7772465db921ec2f66731b34e21fa", "text": "Set internal allocation _buyer The adress of the buyer _tokenAmount Amount Allocated tokens + 18 decimals .", "title": "", "metadata": ""}
{"_id": "3a5d41acefe05401840ea2bbff14b8fd", "text": "These two functions are for easier external interaction via api . etherscan . io : .", "title": "", "metadata": ""}
{"_id": "c67ec1655f6fd0cb39481585b50d7a34", "text": "for quick overview of approved Tokens .", "title": "", "metadata": ""}
{"_id": "00a2c8f65d89f85df9dc13ef63483ee0", "text": "An address can become a new seller only in case it has no tokens .", "title": "", "metadata": ""}
{"_id": "f83242cecdce7c5e3f4b63b9a44adb56", "text": "clearDeposits - internal function to send ether .", "title": "", "metadata": ""}
{"_id": "3ef421f1d2053e66a9d127ef99767d96", "text": "Performs payout based on winning team .", "title": "", "metadata": ""}
{"_id": "73dff350efb732a52cc44cf6b540d8ab", "text": "function to change the end time and start time of the ICO can only be called by owner wallet .", "title": "", "metadata": ""}
{"_id": "4d547eb00b289860f3ca61cc0f744980", "text": "To transfer tokens to a contract address .", "title": "", "metadata": ""}
{"_id": "ea0bcc1df21a7f4cdd777a732dc11e0d", "text": "Bonus calculation for transaction .", "title": "", "metadata": ""}
{"_id": "7e7a40673f63bbfe0728f55b5acb952f", "text": "transfer allocations msg . sender .", "title": "", "metadata": ""}
{"_id": "dfbacf57010d50710ab3643e99e55cc6", "text": "called by the owner to locke , triggers locked state .", "title": "", "metadata": ""}
{"_id": "a152ad78f0d2eeed3f7428a24a31a812", "text": "Get the name of the token this contract governs ownership of .", "title": "", "metadata": ""}
{"_id": "f4ee496ec81a6440ca941b2991ae7f1e", "text": "Function for getting the tokens for unlock .", "title": "", "metadata": ""}
{"_id": "b9610bafbac97598dd49ea132b203568", "text": "update address for name , or create new name - address mapping .", "title": "", "metadata": ""}
{"_id": "ec3aea833ad914536798931da5b5e6c0", "text": "date : Date of stage in unix timestamp format . , .", "title": "", "metadata": ""}
{"_id": "1e6745976c0a471ecf0437aa118a5b48", "text": "in case of balance surplus .", "title": "", "metadata": ""}
{"_id": "1a762f0b69ac52f0726e5e9b641fc1f6", "text": "We will have some 'peculiar' list of documents for each deals .", "title": "", "metadata": ""}
{"_id": "bf31ebe6edf28945dc2f3a35de387558", "text": "How much would you get if you claimed right now .", "title": "", "metadata": ""}
{"_id": "f3ea01225ba15d44cafc7f3659f5fd9e", "text": "Public Functions - Non ERC721 specific .", "title": "", "metadata": ""}
{"_id": "e213b67b7fdad4d27dce69a282cb2fbf", "text": "ban / prevent a user from participating in the ICO for violations of TOS , and deallocate any tokens they have allocated if any refunds are necessary , they are handled offline .", "title": "", "metadata": ""}
{"_id": "effddcab9fee7c9a103252252e92beac", "text": "level can only be 0 and 25 .", "title": "", "metadata": ""}
{"_id": "70c1718257e4b729cbad1a6b513ffba3", "text": "withdraw Funds only if funded , as owner .", "title": "", "metadata": ""}
{"_id": "9411839ed26ad8f32d148dd70cc9da1f", "text": "get price of a base .", "title": "", "metadata": ""}
{"_id": "5a21c55c6f35b6532291fa78fc353aa3", "text": "update the ETH / COIN rate .", "title": "", "metadata": ""}
{"_id": "532632aca3d2155632a84d75a962223f", "text": "Checks if there are any pre-tde contributors that have not recieved their tokens .", "title": "", "metadata": ""}
{"_id": "21b355231e33fe878b387d2ba027fdf5", "text": "Returns the balance of a given address .", "title": "", "metadata": ""}
{"_id": "1326123e5db6bb43b2f6088d35c87074", "text": "Register UBetCheck to the chain .", "title": "", "metadata": ""}
{"_id": "0a919fdea2715d3589c3f8603e8e6752", "text": "To get all the tree IDs of one user .", "title": "", "metadata": ""}
{"_id": "eb41e2d00e54856281ea7e91e889b2d9", "text": "Used in case data entry clerk makes an error crediting address .", "title": "", "metadata": ""}
{"_id": "2d02b43cd6e5effa13d6931f51355172", "text": "Accepts ether and creates new kwh tokens .", "title": "", "metadata": ""}
{"_id": "0f509f451a0cc34aadc74020e2bdd809", "text": "Private Methods .", "title": "", "metadata": ""}
{"_id": "9c6e8d28fe0eeeab987ac37aff2f6065", "text": "Functions for refunds claim tokens .", "title": "", "metadata": ""}
{"_id": "c0f9685018f066276e4ec517850d2c94", "text": "Get tokenId for a given handle .", "title": "", "metadata": ""}
{"_id": "b0da603774db6cfba1bb0bb581062e84", "text": "ICO contract configuration function new_ETH_EUR is the new rate of ETH in EUR ( from which to derive tokens per ETH ) newEndBlock is the absolute block number at which the ICO must stop .", "title": "", "metadata": ""}
{"_id": "2816d60d974b2265df896f3471360ff3", "text": "If phase exists for the given date return true .", "title": "", "metadata": ""}
{"_id": "f824feb5e8f322e37dc323c8d0b0e8fd", "text": "Issue tokens to private investors .", "title": "", "metadata": ""}
{"_id": "89f3459220917258cf731b92c945a705", "text": "hgtRates in whole tokens per ETH max individual contribution in whole ETH .", "title": "", "metadata": ""}
{"_id": "b00ffdda6ac3107aa3b1706029b2f1d9", "text": "The effective committee room .", "title": "", "metadata": ""}
{"_id": "ba44600f0deb881959c7a29f53f2b04d", "text": "Public function for getting the number of tokens _weiAmount contributed would purchase .", "title": "", "metadata": ""}
{"_id": "3885baec18a248e08438c7fc1e31c7b5", "text": "Retrieve information about registered Auditor .", "title": "", "metadata": ""}
{"_id": "776170007d3285ea84d0847a7b4fc9bf", "text": "This is mainly an helper function to finalize but can be used if finalize has issues with the loop .", "title": "", "metadata": ""}
{"_id": "9c211f6c01195ebe3fd249b18984a1cb", "text": "Get info about specific group .", "title": "", "metadata": ""}
{"_id": "e5158f28d69b4c7c1a9f3b301ac6b52a", "text": "Gets the total number of approvers .", "title": "", "metadata": ""}
{"_id": "cd604602383ac7b51ad7052708fdab94", "text": "Public functions start here .", "title": "", "metadata": ""}
{"_id": "6326d5f1ad01b6c1e3da78175a08cbf5", "text": "Get total stakes amount and number of stakers for specific country .", "title": "", "metadata": ""}
{"_id": "7bcb1d18948bf38109e089a95b2e4ee2", "text": "Contract owner functions .", "title": "", "metadata": ""}
{"_id": "29314b723b5015c47424701eb9cc5c9d", "text": "sum of all vestings balance ( regardless of released or not ) each vesting is amount - withdrawed .", "title": "", "metadata": ""}
{"_id": "cdb803b9ea3fda8db0fb424d9afd8cba", "text": "Check _address' authorization , boolean function .", "title": "", "metadata": ""}
{"_id": "c950f295293717d1725519c4cd23f7f1", "text": "true if transfer operation is allowed .", "title": "", "metadata": ""}
{"_id": "172aac8eee04f62036c1de442cb62d86", "text": "To check if Contract is not yet initialized .", "title": "", "metadata": ""}
{"_id": "64a2665471b625a2da112b3e60ff6fb7", "text": "the full amount invested in each option .", "title": "", "metadata": ""}
{"_id": "ea72660444401661a0b9e5693e58fd66", "text": "Checks if the crowdsale is a success .", "title": "", "metadata": ""}
{"_id": "3e91638ab694bfe1d2855754325c06b8", "text": "add a new member and give him / her some token .", "title": "", "metadata": ""}
{"_id": "4cb4720a44a9f721afd0b933e60e5723", "text": "try to close window period .", "title": "", "metadata": ""}
{"_id": "334b79bdc17d7b6cde4744f8256a86fd", "text": "Create _amount new tokens and transfer them to _to .", "title": "", "metadata": ""}
{"_id": "d5a0aef3e79eb528e462a16e326e2089", "text": "Permit another address the right to transfer a specific Wonder via transferFrom ( ) .", "title": "", "metadata": ""}
{"_id": "b503ab9f7304a5ef35ede4e7129d7295", "text": "Allows us to view the token balance of the account .", "title": "", "metadata": ""}
{"_id": "c600618a15f90c6f08076b613ccc876a", "text": "Function to create a request as payer .", "title": "", "metadata": ""}
{"_id": "0531bdbe8c58dfa488abdbc8e3237f1a", "text": "Gets the token given a token ID .", "title": "", "metadata": ""}
{"_id": "d42a3861660b17d760479cd66543900f", "text": "Buys tokens from system ( mint ) for sender .", "title": "", "metadata": ""}
{"_id": "bc063ce62b36d70a649faf1bf921de17", "text": "Owner can transfer out any accidentally sent Caerus tokens .", "title": "", "metadata": ""}
{"_id": "a89ca23fa158dbe7436070da0d107d64", "text": "Shows who is the admin for this contract .", "title": "", "metadata": ""}
{"_id": "e4948153e0fe37565c6a74e520d0b03c", "text": "removes a member who exceeds the cap .", "title": "", "metadata": ""}
{"_id": "5818c18ccb0a8f4398d62af29043f88b", "text": "function to change the price rate for phase 1 can only be called from owner wallet .", "title": "", "metadata": ""}
{"_id": "728a2d31cedcadfef6bb84a183c03f8f", "text": "Update collecting wallet address .", "title": "", "metadata": ""}
{"_id": "819ca4b7988e3973279a710642ea5743", "text": "Ensure state consistency after modifying lockedTokenBalance or promisedTokenBalance .", "title": "", "metadata": ""}
{"_id": "7f44b4bdd92485ddbeb8fe1f2d8c8a87", "text": "Checks if tokens are locked .", "title": "", "metadata": ""}
{"_id": "22771ee505527222399aa429d4878901", "text": "Checks if target address is a contract .", "title": "", "metadata": ""}
{"_id": "5d6b09381152e03360b88351e58f9e08", "text": "Not allowing a particular ethereum wallet address to send or receive tokens in case of blacklisting reactively .", "title": "", "metadata": ""}
{"_id": "ff18ad8ed0969179feee32e9d9d51a7e", "text": "Set the reference to cutie ownership contract .", "title": "", "metadata": ""}
{"_id": "78997160147e507598bb87efa678785a", "text": "Check that address can allocate tokens .", "title": "", "metadata": ""}
{"_id": "e36f1306885277f17fd1840603bfa701", "text": "orderAddresses 0 makerAddress orderAddresses 1 makerToken orderAddresses 2 takerAddress orderAddresses 3 takerToken orderValues 0 makerAmount orderValues 1 takerAmount orderValues 2 expiration orderValues 3 nonce .", "title": "", "metadata": ""}
{"_id": "74960cbf8d8313142a59e33a1fb06e77", "text": "Allow the Provide platform robot to update the payments escrow wallet contract address .", "title": "", "metadata": ""}
{"_id": "52d4d50aecb2c40b7c6c2945295a3d9f", "text": "Recompute and return the given account's average balance information .", "title": "", "metadata": ""}
{"_id": "65aec2d1e454d5de9f7fd91bc0239c10", "text": "Assigns ownership of a specific Painting to an address .", "title": "", "metadata": ""}
{"_id": "3aac2d92a974413c178ca453a373f01b", "text": "tokens purchase .", "title": "", "metadata": ""}
{"_id": "97b7a4dbfb38aeb01e413d4b0b3e98c6", "text": "+ transfer .", "title": "", "metadata": ""}
{"_id": "939a2bc38f4767b4e85058913d42b49e", "text": "return releaseable amount for beneficiary in case of straight type of release .", "title": "", "metadata": ""}
{"_id": "41104e5a4c84f4e0c067450e41eb019e", "text": "distributes eth based on fees to gen and pot .", "title": "", "metadata": ""}
{"_id": "31466acf3421fe0db0716398aa7cebdc", "text": "Sets the token allowance provider address .", "title": "", "metadata": ""}
{"_id": "c3ebb69f1ecb29f11c78545c2dfced1b", "text": "Fix for the ERC20 short address attack http : / / vessenes . com / the-erc20 - short-address - attack-explained .", "title": "", "metadata": ""}
{"_id": "0726eed0e6730c5e0833256ad9580aec", "text": "During the public ICO users can buy TUC tokens by sending ETH to this method .", "title": "", "metadata": ""}
{"_id": "10e938b398ada099e9ce1adf71b88e55", "text": "Only Owner ; Same sized input arrays .", "title": "", "metadata": ""}
{"_id": "0fade378a29f938c599e1e70b6ffe1ec", "text": "Create mintAmount tokens and send it to target .", "title": "", "metadata": ""}
{"_id": "5a2b0bce2ba839f396fa01385b5266e7", "text": "Fill Card struct .", "title": "", "metadata": ""}
{"_id": "65f6d945b17559da32cfb8cf6ab9b10b", "text": "Pause the auction and temporarily disable bidding .", "title": "", "metadata": ""}
{"_id": "90d1985000300dd53c1dcf0311b995b0", "text": "transfer tokens only allowed after sale has ended .", "title": "", "metadata": ""}
{"_id": "61ff2ad4cee73382c2e5cda9a3a1ab69", "text": "Investors should call this function in order to receive refund in case crowdsale is not successful .", "title": "", "metadata": ""}
{"_id": "dbd52a3568d02d9aef882207f6f50115", "text": "call this to authorize participants to this pre-ico sale .", "title": "", "metadata": ""}
{"_id": "4a7cf15acb9017680668560f5ed8688f", "text": "Checks whether the period in which the crowdsale is open has elapsed .", "title": "", "metadata": ""}
{"_id": "6fc109f5656942b86d81b11523cb6e0b", "text": "cashBack will be used in case of failed ICO .", "title": "", "metadata": ""}
{"_id": "59ea9a9e96b1585e4e912361e9097717", "text": "Get all minted identifiers ; .", "title": "", "metadata": ""}
{"_id": "5e878a079ed6f06116fbc8588897078d", "text": "Return the final answer to the specified question , or revert if there isn't one .", "title": "", "metadata": ""}
{"_id": "4826338b21ef6689f705725a51477886", "text": "Cancel all pending bets to modify the bet options .", "title": "", "metadata": ""}
{"_id": "163573c80daebe76b4124d9c02780175", "text": "Pause the contract by only the owner .", "title": "", "metadata": ""}
{"_id": "ffb27b4fb57739f845b9dab37e461fc5", "text": "add user to usersList .", "title": "", "metadata": ""}
{"_id": "95541f20c117298042912881db91b1a7", "text": "Generates token allocations for multiple recipients .", "title": "", "metadata": ""}
{"_id": "039a4531d03ae0b9fc167a209f01834b", "text": "Closes presale .", "title": "", "metadata": ""}
{"_id": "f95808a408cee7e5a22deed448c1a582", "text": "Split user bet in some pieces : - 55 go to bank - 20 go to contract developer : ) - 12 go to sponsor - 10 go to stock for future restores - 3 go to referral ( if exists , if not - go into stock ) .", "title": "", "metadata": ""}
{"_id": "8820c2853fa14c97422c063a20ccef7b", "text": "Throws if contract not initialized .", "title": "", "metadata": ""}
{"_id": "dfb23f37052f61877ece962dd1be2474", "text": "trying to accompish using already existing variables to determine stage - prevents manual updating of the enum stage states .", "title": "", "metadata": ""}
{"_id": "1de7d71cd4d377e2b89cf97a56ff0a61", "text": "Reinvest Halo3D Shrimp Farm dividends .", "title": "", "metadata": ""}
{"_id": "016c635642a72f7ded8eafe14183e3e9", "text": "Returns id of token owned by given address ( encoded as an integer ) .", "title": "", "metadata": ""}
{"_id": "6d458879fed2cfd70432bca6235e11c7", "text": "Anyone can transfer their own angel by sending a transaction with the address to transfer to from the address that owns it .", "title": "", "metadata": ""}
{"_id": "68fffc3c1985a79c6a6fb21b131c6710", "text": "Deploys Originals 000 through 032 .", "title": "", "metadata": ""}
{"_id": "1651ce68c689eb391e4fc5cb0d4273d7", "text": "sum of vestings balance and unlocking coin balance .", "title": "", "metadata": ""}
{"_id": "f63d947b6f534be9dfc7b0c041d7bcc4", "text": "set a new contract for recieve the tokens ( for update contract ) .", "title": "", "metadata": ""}
{"_id": "02a0c6c44667b08bbb3cdf8d23c3f41c", "text": "The balance should be available .", "title": "", "metadata": ""}
{"_id": "45dc0a04a70eb87bddd9f30dfe6c854a", "text": "total investment done by ethereum address .", "title": "", "metadata": ""}
{"_id": "ad8f31869780d2da09781ae3c47d06ad", "text": "balanceOf returns the current number of potatoes owned by a particular account , taking into consideration those that already rotted away .", "title": "", "metadata": ""}
{"_id": "80bb1883667006d5f4a6a3f73f88cca5", "text": "Revoke vested tokens .", "title": "", "metadata": ""}
{"_id": "ac080bcaedb838bba66af9e07896fa26", "text": "Withdraw from shared expense allocation .", "title": "", "metadata": ""}
{"_id": "59b539053611a684e134f1ca77df9b10", "text": "Updates the percentage portion of consolation rewards a player get when meeting the faith requirement .", "title": "", "metadata": ""}
{"_id": "4e4a1bb2f58509b292e17f21e1f1d023", "text": "Batch token transfer .", "title": "", "metadata": ""}
{"_id": "1f05138964d1c30245f9bf7fee38a987", "text": "Internal function to create a request .", "title": "", "metadata": ""}
{"_id": "455f0580e09047e7074f962e3ac0c49e", "text": "Allows owner to add a new token to the registry .", "title": "", "metadata": ""}
{"_id": "04585c01a466103cb82e5a2573ad6263", "text": "Compute the amount of TRA token that can be purchased .", "title": "", "metadata": ""}
{"_id": "84b2e208959790582bc973f8a078e81c", "text": "allow to extract ether from contract .", "title": "", "metadata": ""}
{"_id": "c347f31d97f6a3c390d2a68009977e51", "text": "Starts the distribution of savings , it should be called after lock ( ) , once all of the bonus tokens are send to this contract , and multiMint has been called .", "title": "", "metadata": ""}
{"_id": "7b902bf4942e33666513112bac71f41e", "text": "addInvestorBonusInPercent is used for sending bonuses for big investors in .", "title": "", "metadata": ""}
{"_id": "fe7cbff992d749ebc19b38133719c65b", "text": "withdraw Other ERC20 .", "title": "", "metadata": ""}
{"_id": "a211f538a97f15d9917c54974fcf01ee", "text": "Note : This function returns a boolean value indicating whether the transfer was successful .", "title": "", "metadata": ""}
{"_id": "80938de4b588696069bb5a9e2e0ef864", "text": "Allows the owner of tokens to approve another to spend tokens on his or her behalf .", "title": "", "metadata": ""}
{"_id": "228e8ea15a3738a816791c9a61d05896", "text": "Get the owner of an item .", "title": "", "metadata": ""}
{"_id": "b17db1489c1c8a59f38eca533e43d706", "text": "Transfer token for a specified address when not paused .", "title": "", "metadata": ""}
{"_id": "b0f492d73c16eefb897711c622c3e225", "text": "Distributed tokens to the partners who have participated during the pre-sale .", "title": "", "metadata": ""}
{"_id": "6784fdc7cf43712054d8eb6cc486003d", "text": "Update the CNY / BTC rate to record purchases in CNY .", "title": "", "metadata": ""}
{"_id": "6192f71e3b5c6e8b898044d6de45d0e3", "text": "whitelist an address so it's able to transfer before the overall trading is opened .", "title": "", "metadata": ""}
{"_id": "bf88e6ea448281a6ff8b079241587e89", "text": "Enable affiliate for the contract .", "title": "", "metadata": ""}
{"_id": "88ee548c6bbc8bbe860069e50e19eb43", "text": "Allows a Taker to fill an offchain Option order created by a Maker .", "title": "", "metadata": ""}
{"_id": "f666c45c72839949381f3b5bcc25dde2", "text": "Token Contract transfer .", "title": "", "metadata": ""}
{"_id": "31831649d8a0a3f1fcecb2171c762587", "text": "Put a monster up for auction to be sire .", "title": "", "metadata": ""}
{"_id": "e20ac4272085550e63dea2e11dea0cbe", "text": "Issue unsold token to owner address .", "title": "", "metadata": ""}
{"_id": "6d3fc5fb689f72f86cb49eebd1848621", "text": "Only producer allowed .", "title": "", "metadata": ""}
{"_id": "8dd57670789f8550bc8692d8a4e808ae", "text": "converts token to any other token in the bancor network by following a predefined conversion paths and transfers the result tokens to a target account .", "title": "", "metadata": ""}
{"_id": "5ed6c771b5490201a72cc7634f3869b5", "text": "dev Function to mint tokens param _to The address that will receive the minted tokens .", "title": "", "metadata": ""}
{"_id": "7c97859fb30ef3c1a2f6b9ceb0e35983", "text": "true if sale is due when the last phase is finished .", "title": "", "metadata": ""}
{"_id": "0b8e687e7aa2018def15f9be83571e5d", "text": "the bytes .", "title": "", "metadata": ""}
{"_id": "371488dfca066dbc21537c19d4e70039", "text": "Can only be called by the prepurchaser .", "title": "", "metadata": ""}
{"_id": "1a33efffa5e6dba434c7febf6b3e21f9", "text": "Allow a user to withdraw any havvens in their schedule that have vested .", "title": "", "metadata": ""}
{"_id": "eeff980ad47a60985b5452a65a8ec5f8", "text": "Simpler call signature that uses msg . sender .", "title": "", "metadata": ""}
{"_id": "bb4624b01ebeda544e6e64ed4b6fcfac", "text": "Only to be called by Owner of this contract .", "title": "", "metadata": ""}
{"_id": "6ab5566a1cc9482f73a6df4864cb96f5", "text": "returns the number of convertible tokens supported by the contract note that the number of convertible tokens is the number of connector token , plus 1 ( that represents the smart token ) .", "title": "", "metadata": ""}
{"_id": "9b3d36d718adfa08c0df62b2986d88f3", "text": "Replace element on list .", "title": "", "metadata": ""}
{"_id": "ce4a82707db49a1171c4281d79c901c5", "text": "Sets EventsHstory contract address .", "title": "", "metadata": ""}
{"_id": "ce43b24b380e1b3633b76b6575138fb9", "text": "expand allowed addresses with new one .", "title": "", "metadata": ""}
{"_id": "d0fdebdf046b41ade4034636e7723255", "text": "Is window open ( first month after each genesis anniversary ) .", "title": "", "metadata": ""}
{"_id": "fb3cd04f7773877de177af5f00cda639", "text": "return the next worse offer in the sorted list the worse offer is the higher one if its an ask , a lower one if its a bid offer , and in both cases the newer one if they're equal .", "title": "", "metadata": ""}
{"_id": "9a26cd6705163d03ece51eaf5f0f85ea", "text": "fail safe for balance transfer .", "title": "", "metadata": ""}
{"_id": "66efb1abb82d3dc401d9a518ca4e7ab9", "text": "Accepts the vote of coordinator for upcoming emission : which amount he or she is agree to emit .", "title": "", "metadata": ""}
{"_id": "0de3ff6979ea351f9585fd07f5ef6ed0", "text": "buy a casino without any agreement .", "title": "", "metadata": ""}
{"_id": "9e9240fd8d30bfbe6c7c4aa9fb4476f7", "text": "Function which records bids .", "title": "", "metadata": ""}
{"_id": "bc0ad3c205bb050ea64bde1d46450d63", "text": "distributes eth based on fees to gen and pot fees_ 0 J3Ddatasets . TeamFee ( 50 , 0 ) ; .", "title": "", "metadata": ""}
{"_id": "ca5748e50e2eb87f0ae9af9e142f51a9", "text": "Check freezing balance .", "title": "", "metadata": ""}
{"_id": "1f3975edd6f653661299047a3fe4ac56", "text": "Returns the length of the balances array for a swap .", "title": "", "metadata": ""}
{"_id": "e0f1b60782ea19819b83edcff463f0d0", "text": "validates a token address - verifies that the address belongs to one of the changeable tokens .", "title": "", "metadata": ""}
{"_id": "6d5c4fdb0119f9d8b16e4cc27c467582", "text": "Change Minimum contribution .", "title": "", "metadata": ""}
{"_id": "6c7349652a83f6389737fc551a18eeb7", "text": "Last resort to return ether .", "title": "", "metadata": ""}
{"_id": "413ad535b763661cb8035848e2ad3449", "text": "Create a new sponsoring contract .", "title": "", "metadata": ""}
{"_id": "b513dbba531c6cbc26afbd2079d999ee", "text": "Calculate price for tokens .", "title": "", "metadata": ""}
{"_id": "eea11124d69fd1f09f8753d93d75275e", "text": "Total Supply of Coin will be 21 Million only .", "title": "", "metadata": ""}
{"_id": "a711417477c7b0fd17f86862e6fa7d1a", "text": "End PreSale .", "title": "", "metadata": ""}
{"_id": "b24114d4f1cac8f1b2e6ad56fc5dfe29", "text": "ERC20 backwards compatible transferFrom .", "title": "", "metadata": ""}
{"_id": "9d837c83521bc8b191c50e4ac2fb8907", "text": "Get current component support .", "title": "", "metadata": ""}
{"_id": "242cdeffc7173ae4892a3bf99be90465", "text": "Checks if transaction meets individual cap requirements .", "title": "", "metadata": ""}
{"_id": "da8bbca524b2bfa7a99596e3941b0793", "text": "Returns true if the NFT is on auction .", "title": "", "metadata": ""}
{"_id": "150a654454a69084f52c32dc6619487e", "text": "If the Oraclize didn't return the result in 30 mins during the last 24 hours , owner can announce the winner manually .", "title": "", "metadata": ""}
{"_id": "f2d5f0789c4ff089d42487877b59191b", "text": "Shows how much metadollars _spender can spend from _owner address .", "title": "", "metadata": ""}
{"_id": "167680bd34ed11b7e2c70bb5adf9619b", "text": "Used to create new tokens and increase total supply .", "title": "", "metadata": ""}
{"_id": "02e9f09318b83d1fdd63ae123f9e811d", "text": "Check the creator balance of a certain address .", "title": "", "metadata": ""}
{"_id": "e91ddb76d798d04f4cec45779deb4be0", "text": "Converts the Ether accrued as dividends back into PNS tokens without having to withdraw it first .", "title": "", "metadata": ""}
{"_id": "4076b72eafd9c79801651b47458bda1c", "text": "returns the owner of the Escrow contract .", "title": "", "metadata": ""}
{"_id": "59adf80f459b6b2155dd65b4a8fe7c2a", "text": "Manual override for total supply in case any issues arise .", "title": "", "metadata": ""}
{"_id": "39150fb75aae6ea6bddb3814e28102b3", "text": "Set the wdrawBfr time - the time a winner has to withdraw their winnings before the unclaimed prizepool is rolled back into the global prizepool .", "title": "", "metadata": ""}
{"_id": "6df301416d0900fd9e64fa920aa37c56", "text": "random number from 0 to ( _modulus - 1 ) .", "title": "", "metadata": ""}
{"_id": "4da79672e1a178773d3947b6df1f3d1b", "text": "Devidends Functions start here .", "title": "", "metadata": ""}
{"_id": "babdadde495fe409b29a84f1a2a4fcad", "text": "Regulation Access Modifiers .", "title": "", "metadata": ""}
{"_id": "34a4fb9eae90fe8824766a1ed6999681", "text": "map an address to its application address .", "title": "", "metadata": ""}
{"_id": "7d95bb31af00afcf082f4795e9f7e3f3", "text": "General setters .", "title": "", "metadata": ""}
{"_id": "2a57162368578f9aba2a90dc0745d72e", "text": "Stop the sale .", "title": "", "metadata": ""}
{"_id": "eb6eb1185837d814ff7cae73b7e19592", "text": "Sells tokens in exchange for Ether , exchanging them 1 : 1 .", "title": "", "metadata": ""}
{"_id": "0202dda906a6e4fd80aa51dcc3aaad11", "text": "return winner list .", "title": "", "metadata": ""}
{"_id": "44a57b2304edd500531fb3fbacfacdaa", "text": "Replaces the animal with the given id with the last animal in the array .", "title": "", "metadata": ""}
{"_id": "4267df4a17fc58c2d7016f790bae0837", "text": "Get list of all registered dsp .", "title": "", "metadata": ""}
{"_id": "d8d49713356173d87f76077f419d62b1", "text": "Update the maximum cap of this wallet .", "title": "", "metadata": ""}
{"_id": "9bc98c00d12ce2d72ebf0718b1cccb88", "text": "Calculate the amount of ETH the contract requires on a BUY .", "title": "", "metadata": ""}
{"_id": "aaaab50e8ede8eb907181478515379ea", "text": "Get the free claim allowance of an address .", "title": "", "metadata": ""}
{"_id": "6816f4b39a3ac1ac4723502ce0f4dc71", "text": "tokenPrice - current Token price .", "title": "", "metadata": ""}
{"_id": "a2c28f716072d175898c3264f8754992", "text": "Whitelist function .", "title": "", "metadata": ""}
{"_id": "a167e69834decaee5d545de439080fb5", "text": "Allows _spender to spend no more than _value tokens .", "title": "", "metadata": ""}
{"_id": "974b0b5151c315ee3e1580706eae7113", "text": "Adcd . .", "title": "", "metadata": ""}
{"_id": "d1817561f614b201e7ae446459ddc95d", "text": "owner only functions .", "title": "", "metadata": ""}
{"_id": "4efde4adaccc672633a56200fa9c7bc1", "text": "Cancel active game without playing .", "title": "", "metadata": ""}
{"_id": "87d992939bb5b72ffb6955eb9a900568", "text": "Multiplies two signed integers , throws on overflow .", "title": "", "metadata": ""}
{"_id": "3a561f8e723af3eb170018703183c592", "text": "how many tokens are reservedfor owner as comission .", "title": "", "metadata": ""}
{"_id": "47f5a7c3bd7d29fdf6b7b98d8367e6c9", "text": "This function Burns a specific amount of tokens .", "title": "", "metadata": ""}
{"_id": "d7f77fe4a31b176c4f94ed20f3b2d052", "text": "connect to crowdsaleContract , can be use once .", "title": "", "metadata": ""}
{"_id": "e0501a9807f11ba5d05a359935ddd722", "text": "ensures that we didn't reach the bitcoin suisse ether cap .", "title": "", "metadata": ""}
{"_id": "708e929cc280c774fa2ae91851a82dae", "text": "Contract Balance .", "title": "", "metadata": ""}
{"_id": "a0c63a1f69cd79a1ded70d298fcd04b4", "text": "Set max number of registered transcoders .", "title": "", "metadata": ""}
{"_id": "d0d6be044484725ed995998c94023705", "text": "Cancel finish minting request , can be call only by owner which created this finish minting request .", "title": "", "metadata": ""}
{"_id": "2991947c9783141bb8068971b9e72438", "text": "Validates the bet , or refunds the user .", "title": "", "metadata": ""}
{"_id": "da3b402fe2a99cfebff7d8573f37e4ae", "text": "Set admin account .", "title": "", "metadata": ""}
{"_id": "152e7c1bfbb6278178a559a8b929c728", "text": "time based on blocknumbers , assuming a blocktime of 15s .", "title": "", "metadata": ""}
{"_id": "c29497a1bf16a0172cbd3113cd41fa75", "text": "True if the transfer succeeded .", "title": "", "metadata": ""}
{"_id": "53931243a042514938a408244e6e9f20", "text": "Release the token .", "title": "", "metadata": ""}
{"_id": "47267ae4999525127ab64cfcb5e13a42", "text": "ICO Status overview .", "title": "", "metadata": ""}
{"_id": "631c024c03e2e942f2d23622dbc94b83", "text": "To stop the ICO .", "title": "", "metadata": ""}
{"_id": "eea6860ffe55f5995f291c12596089a8", "text": "Function which activates the crowdsale .", "title": "", "metadata": ""}
{"_id": "3d998b159cee60659d61b7977c5ee1bc", "text": "Hide offer from the unsorted order book ( does not cancel offer ) .", "title": "", "metadata": ""}
{"_id": "7acf15a38ad0c3458bf31bcbed8ed651", "text": "Create new document that is represented by its hash .", "title": "", "metadata": ""}
{"_id": "94a487d34f92fd7358b001886fba30f5", "text": "Only allow transfer to authorized recipients .", "title": "", "metadata": ""}
{"_id": "d5ca3724f14e59cc7bd2810e191417af", "text": "Internal function that performs the actual transfer ( cannot be called externally ) .", "title": "", "metadata": ""}
{"_id": "98e477056b6b1628c7b7c93e35427a81", "text": "Mint a certain number of tokens that are locked up .", "title": "", "metadata": ""}
{"_id": "dd5bfb75759c7ad1557e459ee7798420", "text": "function to send all contract ether to 'distributionAddress' .", "title": "", "metadata": ""}
{"_id": "6e66de8bc5f5134ca1786d4d73b2ec17", "text": "State 1 rules .", "title": "", "metadata": ""}
{"_id": "23ed7f0d389c9cb65cc32d0b411efd32", "text": "Change the address of the registryAdmin , who has the privilege to create new accounts .", "title": "", "metadata": ""}
{"_id": "e15bb816743f3660ba157d62fa2092eb", "text": "Cancels previously made buy offer .", "title": "", "metadata": ""}
{"_id": "6219ceebcfbb50e7b78f7550cc44f62d", "text": "Add a grant for tokens with a vesting schedule .", "title": "", "metadata": ""}
{"_id": "ab6440cae0e66f3b7733cdeb94ae2ed6", "text": "Function to check if crowdsale has started yet .", "title": "", "metadata": ""}
{"_id": "10b6ea5c3fc2669c08f7da6932b06af2", "text": "Utility Holders methods : set , remove , is .", "title": "", "metadata": ""}
{"_id": "b9d51f3586f602df83221214610953ef", "text": "The onlyController modifier only allows the tokenController to call the function .", "title": "", "metadata": ""}
{"_id": "615e275521ccff75c349cbc9612af3af", "text": "Function to allow cloning orders in case of upgrade .", "title": "", "metadata": ""}
{"_id": "7939b0a407213fd51a2029a89ea7905d", "text": "allows transfer of token to new owner .", "title": "", "metadata": ""}
{"_id": "0778c904b2089b7ef92fcdfd8f433cbe", "text": "Public Order Placement - continue placing an order in 'NeedsGas' state .", "title": "", "metadata": ""}
{"_id": "34bd5de1c48f710e42630904c35cf59f", "text": "collect the fee to owner's address , only owner .", "title": "", "metadata": ""}
{"_id": "705835314536bff08a2bb309641a82f4", "text": "Checks whether a given order was valid .", "title": "", "metadata": ""}
{"_id": "9ec7fbcb6bbd17d5367a70bde55d1d7f", "text": "ERC20 stubs .", "title": "", "metadata": ""}
{"_id": "d4f567b8b62c7306251438bff292b732", "text": "return nonce using function .", "title": "", "metadata": ""}
{"_id": "4c0b7517de12ca96fadde29b268cee6c", "text": "Only send ETC .", "title": "", "metadata": ""}
{"_id": "cad499ba9786e9b35a6f61761f7a172f", "text": "Approves a wallet address to spend on behalf of the sender .", "title": "", "metadata": ""}
{"_id": "34e4d51f12747aa37a482da73bfb5c76", "text": "true if tokens were sent successfully , false otherwise .", "title": "", "metadata": ""}
{"_id": "f8279521cd62789532ddab702653a274", "text": "Real Balance View .", "title": "", "metadata": ""}
{"_id": "07724af898e90d8100ba843cad03dd5a", "text": "Owner can refund the wrong transfered erc20 .", "title": "", "metadata": ""}
{"_id": "3d7371e871e6baf3f9a286854d05083c", "text": "Internal transfers can only be invoked through this contract .", "title": "", "metadata": ""}
{"_id": "e40441dc1d7c14605adf08eb87f50ba7", "text": "adding bonus .", "title": "", "metadata": ""}
{"_id": "ffee62f61b824460b6c43da6c3efe2ba", "text": "Calculates the affiliate amount for a specific amount .", "title": "", "metadata": ""}
{"_id": "afac75f04c293b242c41a5c5c383d095", "text": "Modifier to make a function callable only by owner or sale agent .", "title": "", "metadata": ""}
{"_id": "a28cd3df0087db5a8a410df86c5e576e", "text": "Transfer bounty tokens to target address .", "title": "", "metadata": ""}
{"_id": "4d3dcf4305d5aad18b62c6241eec2b46", "text": "gets API used for tests .", "title": "", "metadata": ""}
{"_id": "fa31048071fe3b57a89eb5e7bf9aa56e", "text": "this forces abi to give us the whole array .", "title": "", "metadata": ""}
{"_id": "3d8c47f263880cd55f3eb6609b27f748", "text": "Start this October 27 .", "title": "", "metadata": ""}
{"_id": "2aa84ca5b3369cf0e03a1396fa318505", "text": "The amount of diamond caps scanned so far .", "title": "", "metadata": ""}
{"_id": "6796ede2b2042dbe5d3d71fd4dd82545", "text": "Sends all ETH contributions to lovely Lemon owner .", "title": "", "metadata": ""}
{"_id": "0a8d879a474b64b17c63f83b32375c08", "text": "Deactivates the raffle after the next game .", "title": "", "metadata": ""}
{"_id": "a4bd4e94fa641ef85b028efd086db018", "text": "A public method that creates a new asset and stores it .", "title": "", "metadata": ""}
{"_id": "78302720f86d8f0aa976c7a6cfb32541", "text": "User Love Locks .", "title": "", "metadata": ""}
{"_id": "621b01b1e589e14d8739c2094d057586", "text": "Contract informations .", "title": "", "metadata": ""}
{"_id": "e0a5cd66bf7adf636e59cbeac8b4764e", "text": "Setter for alpha .", "title": "", "metadata": ""}
{"_id": "a519d7f30a119ccad8c17fcf42436b37", "text": "Get user balance by address .", "title": "", "metadata": ""}
{"_id": "f2d0e4170c33e5415a91810e6f89cf85", "text": "Migration support address migrationMaster ; .", "title": "", "metadata": ""}
{"_id": "15800a0130aa01e5b139b95d677158b6", "text": "Withdraws the total amount of ETH raised to the owners address .", "title": "", "metadata": ""}
{"_id": "a1df9bacc26773651f2827bc2374ba7f", "text": "high and low words of x * y .", "title": "", "metadata": ""}
{"_id": "599b76520f3114b24bca21f914bb3ce7", "text": "Deny any access before all sales will be finished .", "title": "", "metadata": ""}
{"_id": "2b2673605f0c18cddcb585e26fa150e6", "text": "Once only function .", "title": "", "metadata": ""}
{"_id": "6fbfaaf691971a8d27769cfa19f66b5f", "text": "Market orders .", "title": "", "metadata": ""}
{"_id": "b20cc96543cc80507fd6fecb1eee82b8", "text": "constant methods .", "title": "", "metadata": ""}
{"_id": "f536b664305f376c6e5156379e8f27b2", "text": "Break into Tut's tomb and steal all his treasure earnings .", "title": "", "metadata": ""}
{"_id": "599c1a82f6441b815660a7dd9b05ec67", "text": "This function claims a chunk in the screen grid .", "title": "", "metadata": ""}
{"_id": "50336fff2a298bb3a1a4c94ecef8eb5e", "text": "it will call when crowdsale unsuccessful if crowdsale completed .", "title": "", "metadata": ""}
{"_id": "c5744db3be0eecc0cb2585b246e2f9e0", "text": "allow transfer of ownership to another address in case shit hits the fan .", "title": "", "metadata": ""}
{"_id": "152dbc153f74b7ae300bac49b05a964c", "text": "Internal comparison between strings , returning 0 if equal , 1 otherwise .", "title": "", "metadata": ""}
{"_id": "892b4ab208575482fa68eb40550251f9", "text": "registers multiple users at the same time .", "title": "", "metadata": ""}
{"_id": "a49045271cf4e0dc57f69e148befd560", "text": "Disables burning on the token contract .", "title": "", "metadata": ""}
{"_id": "323a032aca81c7d64170f3d34674c629", "text": "add the ether address to whitelist to enable transfer of token .", "title": "", "metadata": ""}
{"_id": "25a9f13cb7bbe5d0e51b6b3fd9ccc989", "text": "Function to participate in contribution period .", "title": "", "metadata": ""}
{"_id": "a76d161256279c63bb4e8dfa4ff53bbd", "text": "Called by an advertiser when he / she would like to get a refund .", "title": "", "metadata": ""}
{"_id": "0d9b3660c08a989e5fb5ddaec1fd481a", "text": "get rabbit price .", "title": "", "metadata": ""}
{"_id": "9eb097f6d97bc55e41220e37ba71d9ef", "text": "Overridden transferFrom method to facilitate emergency pausing .", "title": "", "metadata": ""}
{"_id": "d0b7b8cf0d6020dfc02d7c38ec22277b", "text": "check that freeTransfer is true or that the owner is involved or both sender and recipient are in the same whitelist .", "title": "", "metadata": ""}
{"_id": "e0ead9e63a31536191c113f6f890dc50", "text": "freeze system' balance .", "title": "", "metadata": ""}
{"_id": "0816bf47eb97a46289c8d4f41b673543", "text": "Compute the Resilium bonus according to the investment period .", "title": "", "metadata": ""}
{"_id": "c1ab33126897458e9272312c6a5ba8cc", "text": "invoke onApprove function before actual transfer function is executed .", "title": "", "metadata": ""}
{"_id": "4789e3a22d24163041b321075225bd07", "text": "change owner address .", "title": "", "metadata": ""}
{"_id": "871befbeaf5892174c624c4e90a68a25", "text": "Get all bets that have been made .", "title": "", "metadata": ""}
{"_id": "1e514d48981dc5a21d9dfdc12f0dfdca", "text": "ability for controller to step down .", "title": "", "metadata": ""}
{"_id": "513e6d5257bc7d5f11d1027abbda40f7", "text": "this function returns bool of owenrship over the token .", "title": "", "metadata": ""}
{"_id": "6035cfec31eb26b1801133749cd35075", "text": "Set the outcome of the match .", "title": "", "metadata": ""}
{"_id": "e349ccb1b6a18af99765617174ccaa5f", "text": "This method is for to be called only for the owner .", "title": "", "metadata": ""}
{"_id": "207851d2cdd83168705b496ddbaf4f16", "text": "update a person's relation .", "title": "", "metadata": ""}
{"_id": "04e3585fbcebf305d8efe179609d5e14", "text": "Getter and Setter for risks .", "title": "", "metadata": ""}
{"_id": "4c2d3ced5dca46ac637883556ed27ab9", "text": "modifier to check if the sale is ended .", "title": "", "metadata": ""}
{"_id": "5da722d00321ca254e5fc711e4289e2b", "text": "ERC20 backwards compatible transfer .", "title": "", "metadata": ""}
{"_id": "2aa64730e89e5a7174def136d2aab522", "text": "Add a contract address to the list of active contracts .", "title": "", "metadata": ""}
{"_id": "499cd78c60531734f7a380f451311403", "text": "web3js sendIBANTransaction interface .", "title": "", "metadata": ""}
{"_id": "5b22508da6726d999edd4e5cbfd5310a", "text": "Used to bet on the winner of the Tournament 1 : Check if bets are still open 2 : Check if the bet is more than 0 . 1 ETH 3 : Check if the id of the team is correct ( possible value 1 to 24 ) param uint id The identifier of the team to bet on .", "title": "", "metadata": ""}
{"_id": "05b919648e50a3d1701f93215db7744c", "text": "Initialize the current round .", "title": "", "metadata": ""}
{"_id": "ee41b6692ebb3451027d5448517fb47f", "text": "ETH Owner receive secret .", "title": "", "metadata": ""}
{"_id": "7889c7df697b539fd740109907244aed", "text": "check the address is human or contract .", "title": "", "metadata": ""}
{"_id": "51402d24da02f4df35d95dca6d5913a1", "text": "Set rate , i . e .", "title": "", "metadata": ""}
{"_id": "d76e858c359f2ed6b48539469d887d8d", "text": "to get the withdrawal address .", "title": "", "metadata": ""}
{"_id": "db84a9f4ffdc2ba1ea4d411dd0722bbb", "text": "Creates a new promo City with the given name , country and price and assignes it to an address .", "title": "", "metadata": ""}
{"_id": "9b130df03a6fd7fd142e7c417f404c91", "text": "Luck is determined as follows : .", "title": "", "metadata": ""}
{"_id": "af0352405b58c845acfb8eac8c929e68", "text": "receives donations in ETH .", "title": "", "metadata": ""}
{"_id": "329ad924c3a9fb4550477f8538be5118", "text": "Unpause token .", "title": "", "metadata": ""}
{"_id": "c2cd781bac4a59c2594b4c3085b47b7d", "text": "Allow for burning of tokens in the future .", "title": "", "metadata": ""}
{"_id": "bcaf229b5b789f55a216ea16276acc61", "text": "Returns whether a user has withdrawn money or not .", "title": "", "metadata": ""}
{"_id": "a90463d3cf9c6f23ffd151e2df0c12cc", "text": "To be used in case the default gas price is too low .", "title": "", "metadata": ""}
{"_id": "a9ef94128783cba44cfaa68b3a5e663c", "text": "This function allows the owner to change the gas limit any time during the fundraiser .", "title": "", "metadata": ""}
{"_id": "b46ebfbe0bbce04ebeae0492f322275b", "text": "Change the amount of Patron tokens a donor receives .", "title": "", "metadata": ""}
{"_id": "0981bfa15db71197781101fe959db637", "text": "tokens are only issued in exchange for a unique proof of contribution .", "title": "", "metadata": ""}
{"_id": "396145fd8f2a6018bdcfe315a7d32fcb", "text": "Donation amount has to be between 0 . 02 and 0 . 03 ETH regardless the donation amount , 250 LOCAs will be send .", "title": "", "metadata": ""}
{"_id": "6661a1107893a7d016294ffe553fae69", "text": "Token transfer from from to _to ( permission needed ) .", "title": "", "metadata": ""}
{"_id": "fa841c64564521d5f46cf8dd4292c5c6", "text": "Main Artwork Share Purchasing Function .", "title": "", "metadata": ""}
{"_id": "13cc1b01cf4cbae8f257d26bf2be260e", "text": "Determine if a blob is updatable .", "title": "", "metadata": ""}
{"_id": "81f37d0049acce8fe091e7720d7d3883", "text": "set golden card token .", "title": "", "metadata": ""}
{"_id": "56370351d575acb54b76fced91f3a544", "text": "Performs a transition after function execution .", "title": "", "metadata": ""}
{"_id": "b07c01bf830d81061d13e222c2c4701c", "text": "Unfreezing part of bonus tokens by owner .", "title": "", "metadata": ""}
{"_id": "48214c5014214ebc60bae3962a75ed6a", "text": "Create an illiquidBalance which cannot be traded until admin make it liquid .", "title": "", "metadata": ""}
{"_id": "93c6c4f02a3a0821f744e2efcb449630", "text": "allows the owner to discontinue the token sale early and claim the contents of the vault .", "title": "", "metadata": ""}
{"_id": "d522ba32d230a8a346393988e0e4af07", "text": "Add a new address to the board .", "title": "", "metadata": ""}
{"_id": "f479e2bd24d0d9545389e88962178644", "text": "Sets frozen to freeze for account target .", "title": "", "metadata": ""}
{"_id": "eb7696a37067034c0b6d35f6f6bfd28d", "text": "Calculate dev fee in game .", "title": "", "metadata": ""}
{"_id": "c42dad86f098ae4226d374df86caa62e", "text": "General addresses can purchase tokens during funding .", "title": "", "metadata": ""}
{"_id": "78ecdc5b9255e881f56287fcd025a803", "text": "Translate wei to Stakes .", "title": "", "metadata": ""}
{"_id": "225ec2a422fa44d44b5d69cb0c41fea3", "text": "bidding function , people use this to buy ships .", "title": "", "metadata": ""}
{"_id": "e30641b303eb48a29369c1c93d34147e", "text": "Set Artcoin token and escrow address .", "title": "", "metadata": ""}
{"_id": "b75a9810011f7203ca78b62db772f8c8", "text": "Update pool cap for tier 1 .", "title": "", "metadata": ""}
{"_id": "f3ec96dd789711bc03c33206d1fd3e47", "text": "Checks if a given address is the current owner of a particular Panda .", "title": "", "metadata": ""}
{"_id": "231b5eac9080bdb0aa6fb743ecee0c7b", "text": "Override this method with token limitation strategy .", "title": "", "metadata": ""}
{"_id": "b7464b55abdee075d0f5e593083b9e7c", "text": "overriding BurnableToken burn to make disable it for public use .", "title": "", "metadata": ""}
{"_id": "24e4d4731eb50863a0efbfdda7a753c5", "text": "set jackpotComplete to true and transfer 20 percent share of jackpot to owner .", "title": "", "metadata": ""}
{"_id": "38f029fd311548cf1182430830ba99a9", "text": "Add or remove supported tokens .", "title": "", "metadata": ""}
{"_id": "e1d578ccdc7793bd2c4ff96e75969a78", "text": "allows checking of the daily and total amount of unlocked tokens .", "title": "", "metadata": ""}
{"_id": "10df5b1fac32bf4c3988dfb136b55742", "text": "Withdraw ART .", "title": "", "metadata": ""}
{"_id": "f7c94c7d7f5e9e87f6795d263b707f00", "text": "uint128 functions .", "title": "", "metadata": ""}
{"_id": "5741639d478cf368dce50b142ce68d3d", "text": "transfer helper .", "title": "", "metadata": ""}
{"_id": "861e0611bd5a813e95d9f7367d5956d2", "text": "Sets the owner of the sector .", "title": "", "metadata": ""}
{"_id": "cc79b52560d8ac8d48a887036d0c2eb9", "text": "give all them money to val or tom .", "title": "", "metadata": ""}
{"_id": "b1a37b5465904dbd185b626191d00394", "text": "there is no way to revert that .", "title": "", "metadata": ""}
{"_id": "152fd36ab3396a20e660002818a2575a", "text": "Function to allow contractors to withdraw ethers .", "title": "", "metadata": ""}
{"_id": "1997ac1537b8a66b8960f9258d8192e5", "text": "The key derived from certificate identifier .", "title": "", "metadata": ""}
{"_id": "771321bd2f3442a02c35b427da4d025e", "text": "Allows the owner to change the brokerImp .", "title": "", "metadata": ""}
{"_id": "213f06828d17df14f359adccb2fe803a", "text": "wallet fee .", "title": "", "metadata": ""}
{"_id": "77b957b5fcdbd387020359b1058957ac", "text": "Sets the address getting the proceedings from fishing in the aquarium .", "title": "", "metadata": ""}
{"_id": "5b7bf3334d97e1bce832eb53fb4423ed", "text": "Returns the current storage action .", "title": "", "metadata": ""}
{"_id": "711bfe540ceece630925ed00983f9304", "text": "Set current ICO price in wei for one token .", "title": "", "metadata": ""}
{"_id": "7dff908cfc2ca838beba20096d0b49c2", "text": "Restricts call only when this version is up to date upgradedVersion is not set to a new address or in other words , equal to 0 .", "title": "", "metadata": ""}
{"_id": "427fdbc8ad4cd5a199e695cb4498cb22", "text": "Used by server if player does not end game session .", "title": "", "metadata": ""}
{"_id": "2bc4d3d64c70bfcde3652eb2cd4a0a67", "text": "claims the caller's tokens , converts them to any other token in the bancor network by following a predefined conversion path and transfers the result tokens back to the sender note that allowance must be set beforehand .", "title": "", "metadata": ""}
{"_id": "ce9b365d3756c4f955b36ecbff12d272", "text": "Wrapper of token . transfer .", "title": "", "metadata": ""}
{"_id": "b234d44ba807cf307c3614300fc2a332", "text": "Remove the contract owner permanently .", "title": "", "metadata": ""}
{"_id": "4e14ab5325bb9196cf8c8702a41a5191", "text": "Check if _address is authorized for _authorization .", "title": "", "metadata": ""}
{"_id": "fb335bee8d61e1467b5ecb0ce33d0113", "text": "Redeem tokens .", "title": "", "metadata": ""}
{"_id": "89ecf72cc4932aa7d3b1941b5f001c97", "text": "Modifier to only allow the collection of bet payouts when winner is determined , ( or withdrawals if the bet is canceled ) .", "title": "", "metadata": ""}
{"_id": "b43b7079569c347f4015661831cc0e2f", "text": "there are around 40 addresses in PRESALE_ADDRESSES list .", "title": "", "metadata": ""}
{"_id": "400c25023ef3f78919326505d774da5a", "text": "Prevents from self-attack .", "title": "", "metadata": ""}
{"_id": "28c886763fcd2e19c9f4e2b97e7e6730", "text": "Fires an event , proving that we said a player corresponds to a given ID .", "title": "", "metadata": ""}
{"_id": "c20cee0705be006ac94de500f4205d49", "text": "anyone could recharge deposit .", "title": "", "metadata": ""}
{"_id": "0ce5174771691b875348cdfe540520d0", "text": "check how many Nuru Tokens a spender is allowed to spend from an owner .", "title": "", "metadata": ""}
{"_id": "df4a535f14dd50cc3572a7d8e0b83b31", "text": "ETH / USD price .", "title": "", "metadata": ""}
{"_id": "93427563c9aef3e4996bdcc6eee96a9c", "text": "Unlock the crowd sale .", "title": "", "metadata": ""}
{"_id": "2dc5b273ab11287bf402f3ea49d9866d", "text": "This is the main function implementing IPayoutCalculator .", "title": "", "metadata": ""}
{"_id": "3088dc180c5dc637548136797f98f525", "text": "Allows the owner to change the price of the token .", "title": "", "metadata": ""}
{"_id": "b7669acbb85b2f7066fc6560d24b0d38", "text": "Private helpers .", "title": "", "metadata": ""}
{"_id": "388e1ebc7feb6b736553bf130c89cd32", "text": "Set start time of Pre ICO .", "title": "", "metadata": ""}
{"_id": "938b6d49378ae4f28aa6874877e221eb", "text": "Imports from source token .", "title": "", "metadata": ""}
{"_id": "c183e7770baf4762047cc20b11921240", "text": "Function to calculate the amount of tokens that can be vested at this moment .", "title": "", "metadata": ""}
{"_id": "f5267af9660e97e8d77ebb2ff96eaa58", "text": "Owner can destroy .", "title": "", "metadata": ""}
{"_id": "60e5b69a03722bb244ba4a4ffe2c6e8e", "text": "Returns estimate of log2 ( x ) given x .", "title": "", "metadata": ""}
{"_id": "1fa7dc8fe81c9588ee3e5364d6dee6eb", "text": "Function to send profits and unsold tokens to beneficiary .", "title": "", "metadata": ""}
{"_id": "c9aeaadbced67435aa0be08a28f1b723", "text": "Accept ETH during crowdsale .", "title": "", "metadata": ""}
{"_id": "6a3d6a148b8be9766c98f7a54d4a3c8e", "text": "Maintains list of investors with failed KYC validation .", "title": "", "metadata": ""}
{"_id": "25ef4c141530e021af53713e75f2c8f4", "text": "Reverts if the address doesn't have this role .", "title": "", "metadata": ""}
{"_id": "71b2c646f78e15ce3047a06b413f3d9d", "text": "Append element to end of list .", "title": "", "metadata": ""}
{"_id": "c077d2065b2b7185d65882339675911c", "text": "Allows user to buy a team from the old owner .", "title": "", "metadata": ""}
{"_id": "8d3cb717488daa56a586c3cb24dc5d35", "text": "Owner can claim reserved tokens on the end of crowsale .", "title": "", "metadata": ""}
{"_id": "be10b777b5343fe446441135cc8fabd4", "text": "Transparency in action keeps actors honest .", "title": "", "metadata": ""}
{"_id": "1ada24cb426b4ccbcc3b92df415fb9ce", "text": "Function to buy tickets .", "title": "", "metadata": ""}
{"_id": "92d5fe36d6edbf1e546200a51a1276a2", "text": "Restricted function to allow pretoken signers to fix if pretoken owner lost keys .", "title": "", "metadata": ""}
{"_id": "4f316069e8a63dad67fc2b37b8fa1d99", "text": "Do purchase process .", "title": "", "metadata": ""}
{"_id": "a82f20db4a4d7b1aac3b76e406716416", "text": "Updates the master rewards percentage .", "title": "", "metadata": ""}
{"_id": "9e121c8d091864d327bba2320f370f97", "text": "Get exchange rate based on time and amount .", "title": "", "metadata": ""}
{"_id": "aa3f3552ed9352f0d681471b4bbd65bc", "text": "finish bonus if needed ( if bonus system not efficient ) .", "title": "", "metadata": ""}
{"_id": "42e20ce0ca7e5004f6bb31841cb7b8c7", "text": "We're overriding the fund forwarding from Crowdsale .", "title": "", "metadata": ""}
{"_id": "e6d52f230705961dc7a5f41796f1af9a", "text": "If the crowdsale target has not been reached , or the crowdsale has not finished , don't allow the transfer of tokens purchased in the crowdsale .", "title": "", "metadata": ""}
{"_id": "fc2e529cdaba110516fc8baa5185f305", "text": "Split the challenge function into multiple parts because of stack too deep error .", "title": "", "metadata": ""}
{"_id": "741e82cc3b67a05822ab15c892f2f96b", "text": "Balance of a particular account .", "title": "", "metadata": ""}
{"_id": "14f6df35d4b22e57aa0b09806fcca296", "text": "extract an address in a bytes .", "title": "", "metadata": ""}
{"_id": "4a905a1cf80213d0ff5d9f87e299526c", "text": "transfer timelocked tokens .", "title": "", "metadata": ""}
{"_id": "ae9146e8dd613ccd2a35a8a8be0dd698", "text": "Accept the nomination to be owner .", "title": "", "metadata": ""}
{"_id": "320e5e4826339ea6a423ee4ddd7e827a", "text": "Actually perform the safeTransferFrom .", "title": "", "metadata": ""}
{"_id": "168883a2a42f7decd7a79a9bf84b9dd5", "text": "Burns a specific amount of tokens from the target address and decrements allowance .", "title": "", "metadata": ""}
{"_id": "a8516cceb18185de775e30d568e2b1d2", "text": "check if the given account is not frozen .", "title": "", "metadata": ""}
{"_id": "2de8cd7e57b8e35b891d945540d312ae", "text": "send Wolk into contract in exchange for eth , at an exchange rate based on the Bancor Protocol derivation and decrease totalSupply accordingly .", "title": "", "metadata": ""}
{"_id": "dcff48b6eceed7924a82bd8dcc27b28d", "text": "Can only be called during the period when not paused ( 2a ) .", "title": "", "metadata": ""}
{"_id": "70978db99a5761a382ea1cfc0212686b", "text": "selfDestruct - used here to delete this placeholder contract and forward any funds sent to it on to the final disbursal contract once it is fully developed .", "title": "", "metadata": ""}
{"_id": "44014ce9c0afc01bad66680d0bc11ac5", "text": "Both _hand and _draws store the first card in the rightmost position .", "title": "", "metadata": ""}
{"_id": "5386d79ae884636adfacc9d1481455dd", "text": "Get the block the auction ends on .", "title": "", "metadata": ""}
{"_id": "831823bd6f9727580ac626a98761c46c", "text": "Assigns ownership of a specific Panda to an address .", "title": "", "metadata": ""}
{"_id": "fba5dbdadb535f735cbcdf5fbca7dde2", "text": "Last presser .", "title": "", "metadata": ""}
{"_id": "7f628c18a3c4a2b68740509448874679", "text": "Returns the creationQuantity .", "title": "", "metadata": ""}
{"_id": "4b6cba413f39cc4ccc205e9bb79a6182", "text": "Grant another address the right to transfer a specific token via transferFrom ( ) .", "title": "", "metadata": ""}
{"_id": "b97fbbe0afe7ac4639ce3132176d0661", "text": "change the beneficary address .", "title": "", "metadata": ""}
{"_id": "717be07fdc6d5c5fa7daa9d31731bad4", "text": "Transfers the same amount of tokens to up to 200 specified addresses .", "title": "", "metadata": ""}
{"_id": "02669ec47bd8a5895485214bbbe54320", "text": "View function that shows current token price value .", "title": "", "metadata": ""}
{"_id": "3089bdb12e4dc3836250b14c8d97db6f", "text": "call to clean up the contract after all tokens were assigned .", "title": "", "metadata": ""}
{"_id": "ca8e1d4f2448e2ab4efeeb4feba441a7", "text": "should be called after crowdsale ends , to do .", "title": "", "metadata": ""}
{"_id": "d988311f8b63e1de89ab263c43b2c461", "text": "Sets allowance to the spender from our address .", "title": "", "metadata": ""}
{"_id": "a2de3bf557de8614dffa9dc13ecdb4eb", "text": "Removes a user from our list of admins but keeps them in the history audit .", "title": "", "metadata": ""}
{"_id": "1db41b7e2e494e0d504e86749308bd40", "text": "updateFulfillment ( ) : Submit updated data for a given fulfillment .", "title": "", "metadata": ""}
{"_id": "eb2badbba4aa43de7936aeed65e2ff24", "text": "Burns the amount of tokens .", "title": "", "metadata": ""}
{"_id": "2e999e066abf27576893f68c63bf9b0d", "text": "The rate used in _phase multiplied by the corresponding volume multiplier .", "title": "", "metadata": ""}
{"_id": "b3643e6b1d650c468c86a98a075f3799", "text": "Checks if a handle is available .", "title": "", "metadata": ""}
{"_id": "ef7dc9d7d012b91acf7f6fabcda8b01e", "text": "The initialization method for the token .", "title": "", "metadata": ""}
{"_id": "833ddebe5e8a555e87830cc01f9fb75b", "text": "Pause crowdsale in case of any problems .", "title": "", "metadata": ""}
{"_id": "0f456a3e747cd0ddca554c4bf20a8247", "text": "get funds from the mixer .", "title": "", "metadata": ""}
{"_id": "f9f951061b05de31a1d8adbfcdadd5b3", "text": "createProduct creates a new product in the system .", "title": "", "metadata": ""}
{"_id": "2b99f798f58cf4b752bf7b5a88270e0c", "text": "Returns whether a owner has claimed their tokens .", "title": "", "metadata": ""}
{"_id": "27c1c23b2dec7f93698cd0ba8a817317", "text": "Propose new versions of Melon .", "title": "", "metadata": ""}
{"_id": "5b865a63b2d8c57f748adadd3fcdcf62", "text": "Is this product renewable ? .", "title": "", "metadata": ""}
{"_id": "37ed4df31cfdb746c822c0b55d0b20ee", "text": "Function for updating the balance and double checks allocated EDU tokens .", "title": "", "metadata": ""}
{"_id": "f8888b075a0d5f6824394528344bfad9", "text": "Returns true if given address in ICO whitelist .", "title": "", "metadata": ""}
{"_id": "016229f190967d33b22dafe80f52770b", "text": "This function is used to transfer token to contributor after successful audit .", "title": "", "metadata": ""}
{"_id": "38a99a92fbc9cc10e114d51670d01043", "text": "Get the contract constant _decimals .", "title": "", "metadata": ""}
{"_id": "53f82396721c7db7020fed4b9e604ab6", "text": "Delete an exisiting certificate .", "title": "", "metadata": ""}
{"_id": "d4c14e1240d65a7ecc73e815a5992648", "text": "Load presale purchases from the contract keeps track of them .", "title": "", "metadata": ""}
{"_id": "8990bffdcac88413abfea03722eec345", "text": "Approve the given address for the transfer of the given token .", "title": "", "metadata": ""}
{"_id": "70d44f1571692a6fbfe023d18ab2defc", "text": "Gets the system ETH and PXL prices .", "title": "", "metadata": ""}
{"_id": "a2db9788adf45a442b49750c5fd4610e", "text": "Keccak256 order hash , part one .", "title": "", "metadata": ""}
{"_id": "b13fd7010fe77d0cf0a6e2100237d7f5", "text": "to be called by owner after an year review .", "title": "", "metadata": ""}
{"_id": "eefc8dd885ab384f5d7eb82081d79ff3", "text": "Only a certain address can use this modified method .", "title": "", "metadata": ""}
{"_id": "f35c4f08c973a3ece93d30fa30238ede", "text": "Returns the previous value in the set .", "title": "", "metadata": ""}
{"_id": "387a8f2e84b61fe1fb68615f2243a385", "text": "Internal logic to update a whitelist .", "title": "", "metadata": ""}
{"_id": "410b66d4bfc2a4f4da88adebd6edd5a2", "text": "stage - active stage .", "title": "", "metadata": ""}
{"_id": "2b3f3f62d8831bde39626f66b041c886", "text": "Initialize token attribution , only allowed to call once .", "title": "", "metadata": ""}
{"_id": "f0b6dd4ebeb4c7b08cc82fcc9ac106e5", "text": "Get a whitelisted user .", "title": "", "metadata": ""}
{"_id": "9a9803597c4d78064f295cb7ba864c60", "text": "function to withdraw all funds to the owner wallet can only be called from owner wallet .", "title": "", "metadata": ""}
{"_id": "4dff1dd29f823df885548ef3f42f9e42", "text": "set tournament entrance fee cut , can be set only if tournament queue is empty .", "title": "", "metadata": ""}
{"_id": "d03f47d1b61e1258c45b0f9c035a4c05", "text": "Function to record user withdrawal .", "title": "", "metadata": ""}
{"_id": "61a53ed0eed88d10d92d3f5776a9027f", "text": "Returns auction info for an NFT on auction .", "title": "", "metadata": ""}
{"_id": "21c4912602ae16d25fee4e2c198c0c83", "text": "ERC20 code .", "title": "", "metadata": ""}
{"_id": "8b6370332a521fd6f845509817acabe8", "text": "This is helper function usefull when debugging contract or checking state on Etherscan .", "title": "", "metadata": ""}
{"_id": "563c874102f2f0a7076296dfd31270b9", "text": "Contract owner or Multisig can clawback ether after refund period is finished .", "title": "", "metadata": ""}
{"_id": "7d60f3e8aad67759b5a7b6404d101d01", "text": "safemath addition .", "title": "", "metadata": ""}
{"_id": "56eb950b03870a7e22cd91793e017d26", "text": "require that the query time is too slow , bet has not been paid out , and either contract owner or player is calling this function .", "title": "", "metadata": ""}
{"_id": "0f09e36ebd4a88a266d5acdc2c8d5387", "text": "amount of BST required to buy BSPT .", "title": "", "metadata": ""}
{"_id": "44410c33a987f8dea0cfab0e57308adb", "text": "add an address as one of the multiOwners .", "title": "", "metadata": ""}
{"_id": "7e37f2c07ecbdbebc8ba710641ce1c6b", "text": "The ability to quickly check pre-ICO ( only for Round 1 , only 1 time ) .", "title": "", "metadata": ""}
{"_id": "78b4cf426cc4f7744240a4f3d1c15769", "text": "Add information about the investment at the Ico stage .", "title": "", "metadata": ""}
{"_id": "18a9d5506eb3e183f372ece9361ddd1a", "text": "Allows the current owner to change token symbol .", "title": "", "metadata": ""}
{"_id": "505b14020ceecb5c180e6aa516793b8a", "text": "probe the current state of the competition so player can start playing right away ( need to commit a tx too to ensure its play will be considered though ) .", "title": "", "metadata": ""}
{"_id": "3a9ec6dd7f0d2bc212db8460b9fa709c", "text": "Get the hero's entire infomation .", "title": "", "metadata": ""}
{"_id": "c37313211ab4faa10cd81b5cb6c36112", "text": "we override the token transfer functions to block transfers before startTransfersDate timestamp .", "title": "", "metadata": ""}
{"_id": "4349cb194ea27b447835fe8713d790ed", "text": "The functional modifier rejects the interaction if contract isn't finalized .", "title": "", "metadata": ""}
{"_id": "a33e954c7c0acafd4731bca6c900dd13", "text": "accounts and amounts sent to dao , rounded down only txn 100 tokens .", "title": "", "metadata": ""}
{"_id": "646b4d88176a31878ddd172f47d618c5", "text": "Wallet Functions .", "title": "", "metadata": ""}
{"_id": "8606b7f4b12f396d5e74677cae5dd4a1", "text": "Transfer _value APPC tokens from sender's account msg . sender .", "title": "", "metadata": ""}
{"_id": "a392739bfb85f1f03dad2eda54b7b69f", "text": "Performs payout to owners .", "title": "", "metadata": ""}
{"_id": "2be580d05305ade89542ae7c20d2e402", "text": "create a new gene and put it up for sale , this operation takes place on the server .", "title": "", "metadata": ""}
{"_id": "72db94de5f84f4dff35e0bd08bfab49e", "text": "Overriden token value function .", "title": "", "metadata": ""}
{"_id": "3a7d6e2e384dadcf3dce911960343d70", "text": "Adds an auction to the list of open auctions .", "title": "", "metadata": ""}
{"_id": "ec0a2973606055f20052407152b5da7d", "text": "Replaces the character with the given id with the last character in the array .", "title": "", "metadata": ""}
{"_id": "7557238d1b2400a1a0b57587401863b4", "text": "Function to pay out .", "title": "", "metadata": ""}
{"_id": "c08adb11dd012c2c8cf1db5f5aec4e24", "text": "Get last address .", "title": "", "metadata": ""}
{"_id": "543354c7f2a7f9a15a6e468887f6a73f", "text": "overriding Crowdsale validPurchase .", "title": "", "metadata": ""}
{"_id": "9e0679faff3c8d6abda50da38bbf23ad", "text": "Updates the ETH / USD conversion rate as long as the public sale hasn't started .", "title": "", "metadata": ""}
{"_id": "e39eabf69783c02e964bcf1995484605", "text": "Leave token balance as is .", "title": "", "metadata": ""}
{"_id": "6c4f1366d74aa07989cb6293258fa5ad", "text": "Check the current value stored on the Oracle contract .", "title": "", "metadata": ""}
{"_id": "549725b58a093cf832080d2ab9217bf5", "text": "get simus' locked amount of token .", "title": "", "metadata": ""}
{"_id": "df0ac5898fa893a85714923efc29f727", "text": "deactivate the contract .", "title": "", "metadata": ""}
{"_id": "f8d2495740b09194dc33a0e7f1897e02", "text": "Send _value amount of tokens from address _from to address _to these standardized APIs for approval : .", "title": "", "metadata": ""}
{"_id": "0cdb4b70597df1d72eb9c096d63e0e13", "text": "Called by the observed token smart-contract in order to notify the token observer when tokens are received .", "title": "", "metadata": ""}
{"_id": "b4c116668fbea725187e35c13306d15b", "text": "sell tokens .", "title": "", "metadata": ""}
{"_id": "1ce3d32ee1dd11c119e3e2ec33f90adb", "text": "Manager may drain the ETH on the contract .", "title": "", "metadata": ""}
{"_id": "c40c571c76064f49ef9f5e0a9fb500fa", "text": "Get total distribution in Wei .", "title": "", "metadata": ""}
{"_id": "6f839afd734be335a92e4ef6eaae5dab", "text": "Allow the game to start once outside of active times .", "title": "", "metadata": ""}
{"_id": "29e2872a84c5631ab5c0fd0bd6d18bea", "text": "given a token supply , reserve , CRR and a deposit amount ( in the reserve token ) , calculates the return for a given change ( in the main token ) .", "title": "", "metadata": ""}
{"_id": "1aed9bf7c13feb1317bd9c3a477e166c", "text": "called by investors to purchase tokens .", "title": "", "metadata": ""}
{"_id": "536d6621b92ccce12a14a29b0b5ec2a1", "text": "Retreive account ID associated with a user's address .", "title": "", "metadata": ""}
{"_id": "40b18b7456ce4eb56967eb626ab2c614", "text": "Add whitelist .", "title": "", "metadata": ""}
{"_id": "de07ed6298fcdbe1a63a60c456511c13", "text": "clear all data associated with a motionID for hygiene purposes .", "title": "", "metadata": ""}
{"_id": "1871b69a4df3793b193b74be196bdce2", "text": "Suspend this ICO .", "title": "", "metadata": ""}
{"_id": "512ca478aa002b4582016fc68c645531", "text": "omega contract takes care of all neccessary checks so assume that this is correct ( ! ) .", "title": "", "metadata": ""}
{"_id": "6a6e67d5fd909c540beb4d4f315252ad", "text": "Card creation .", "title": "", "metadata": ""}
{"_id": "eb6a23ad7cf519004b0ebd0d4f3f0c6c", "text": "Reserves a place for investor .", "title": "", "metadata": ""}
{"_id": "47fa2cd886ada0a299a717d8308c5138", "text": "change clouds per eth .", "title": "", "metadata": ""}
{"_id": "30881596996e53613b8cabb68c1165ff", "text": "returns the total length of ads , used for looping over the ads in the homepage . js .", "title": "", "metadata": ""}
{"_id": "fae26258a6a8630064c86fc3758b9ef7", "text": "get info by forecast .", "title": "", "metadata": ""}
{"_id": "7f85cc298de0f185227ddaeff17af650", "text": "Point Game .", "title": "", "metadata": ""}
{"_id": "5d0975a092d3a6b566c11553c98e35e0", "text": "Deposits tokens on behalf of users .", "title": "", "metadata": ""}
{"_id": "15cc23b1cb21d311330a473bf3c7149f", "text": "Allows anyone to transfer the ABLE tokens once trading has started .", "title": "", "metadata": ""}
{"_id": "6916e9e30ade1c3d488771b6af7ac211", "text": "Assigns a new address to act as the Bursar .", "title": "", "metadata": ""}
{"_id": "d46f43a742a705e2c3c70e0c6ccc4e58", "text": "Slices a string according to specified delimiter , returning the sliced parts in an array .", "title": "", "metadata": ""}
{"_id": "b5b1320d458eb0d10494eafc5513c3ce", "text": "the total win of all hands .", "title": "", "metadata": ""}
{"_id": "7197d71f5b2fba39f56777bc3110179e", "text": "function to return the members that could remove an animal from egg phase .", "title": "", "metadata": ""}
{"_id": "921ad886593c5c9fddad4a6888231ca2", "text": "set the limit of ETH in cents , oraclize data greater than this is not accepted .", "title": "", "metadata": ""}
{"_id": "b14a335055f571dabeb97a9c4cd3d05e", "text": "Assigns ownership of a specific City to an address .", "title": "", "metadata": ""}
{"_id": "ea51c47931380413e1c5f762f1383232", "text": "OraclizeAddrResolverI constant public OAR oraclize_setNetwork ( ) ; .", "title": "", "metadata": ""}
{"_id": "16c2edcae1e6a3edfa91eb0255bd29cc", "text": "Modifier that allows only the contractor propose set the token price or withdraw .", "title": "", "metadata": ""}
{"_id": "07eb9ae9490428361e91a62d49c56b30", "text": "Returns the balance of this contract .", "title": "", "metadata": ""}
{"_id": "2c60654ea2a9370417aa790b4fa7415b", "text": "Function used to attach the module in security token .", "title": "", "metadata": ""}
{"_id": "881e13344fe98316b1b77a0a1423527c", "text": "Allows the owner to set the tokens sold , based on the number of presale purchases .", "title": "", "metadata": ""}
{"_id": "850c348430c918c1df5d25000cedfd06", "text": "freeze account .", "title": "", "metadata": ""}
{"_id": "2c41e86fb657382660c149d893d74654", "text": "modifier to allow collection only when the collection is ON .", "title": "", "metadata": ""}
{"_id": "92f7d35519399e1961c942a9493c046b", "text": "Locks the current controller address forever .", "title": "", "metadata": ""}
{"_id": "e4eaabd3319a0a83759dc2c267e3e539", "text": "Notifies the controller about an approval allowing the controller to react if desired .", "title": "", "metadata": ""}
{"_id": "4dcf0210e19ead498517af3c3d22fcba", "text": "Change token name , Owner only .", "title": "", "metadata": ""}
{"_id": "1c25eb0747d626ea5d0c892e777f1563", "text": "Used to intialize the variables of the contract .", "title": "", "metadata": ""}
{"_id": "756619928aecdf9244912627802fa65c", "text": "damageType : 0 physical 1 magic 2 water 3 earth 4 fire .", "title": "", "metadata": ""}
{"_id": "fc46dabee4bd296b4e2c15e50a1462a1", "text": "deposit to NLF funds in tokenFallbackExchange .", "title": "", "metadata": ""}
{"_id": "60fb5c2109c73cebd992bd98e5555bee", "text": "get asset count .", "title": "", "metadata": ""}
{"_id": "eb243f1f7ff62d247d6e7a0b7819ebc4", "text": "Set the token transfer fee .", "title": "", "metadata": ""}
{"_id": "864914de2beea9cfe630d0dd9d9df071", "text": "Removes the given token address from the approved sources .", "title": "", "metadata": ""}
{"_id": "2eda0443246ef211817487690a428b30", "text": "Returns the minimum goal of the ICO .", "title": "", "metadata": ""}
{"_id": "56aa2d059ea3ad8d699352b260dcdc47", "text": "overriding release function .", "title": "", "metadata": ""}
{"_id": "f846214105fa6ab7bafa59dc7af083a1", "text": "Erases 75 of the remaining token balance when owner calls finalize ( ) or crowdsale reaches the max cap .", "title": "", "metadata": ""}
{"_id": "93ef448af8f7cf57cd6f9329f2b74dda", "text": "Getting operator _operator for _tokenHolder .", "title": "", "metadata": ""}
{"_id": "956da70a0f5f4b351c171cdacc00073d", "text": "Is ico closed .", "title": "", "metadata": ""}
{"_id": "fe2c0b82fbf66fd02b87a85ef3de2f09", "text": "Setter for rng .", "title": "", "metadata": ""}
{"_id": "384185f6c9b6a7bf9ef9f281d4ec0ce2", "text": "Helper function that checks for ERC777TokensRecipient on the recipient and calls it .", "title": "", "metadata": ""}
{"_id": "93110a42d030b291edda2549706883b3", "text": "Allow user to reset urls if he wants nothing to show on the board .", "title": "", "metadata": ""}
{"_id": "b27c3fcf0a4a8eda62734e1f708e5657", "text": "Give owner ability to burn some tokens amount at ICO contract .", "title": "", "metadata": ""}
{"_id": "236019157605798ba5a5478633ead9f8", "text": "Checks if an account is the PlatformManager .", "title": "", "metadata": ""}
{"_id": "1c18856fec1052227b07656ec866267b", "text": "Investor can withdraw part of his / her investment .", "title": "", "metadata": ""}
{"_id": "ffb52d123919a591df00c6611abe2da0", "text": "Freeze token circulation - splitProfits internal .", "title": "", "metadata": ""}
{"_id": "ead55118a69060c58b9e6f746f10c790", "text": "ico maintenance .", "title": "", "metadata": ""}
{"_id": "3091055f610adf57c541a5ddfca20a46", "text": "This is the main function of the game .", "title": "", "metadata": ""}
{"_id": "952fe090a1243e2c17e2c10a7e20485d", "text": "the symbol of this token .", "title": "", "metadata": ""}
{"_id": "dd42247b19e30cc61e730fa134f235cf", "text": "Collateral pending liquidation .", "title": "", "metadata": ""}
{"_id": "a6a72f7e2a706575ec4d9b24ccd55533", "text": "Throw if the current transfer proposal's deadline is in the past .", "title": "", "metadata": ""}
{"_id": "ba0e947294b50f4f09d9f94db1114c2c", "text": "Total supply .", "title": "", "metadata": ""}
{"_id": "0532b75021022c5d6e9777024137a2b0", "text": "Start ICO and track start time .", "title": "", "metadata": ""}
{"_id": "949eaa5fc61eb9c571353798ee29a82c", "text": "if dosend is set to false then the calling function MUST send the fees .", "title": "", "metadata": ""}
{"_id": "239d04d713d364c5c4be557d066f4215", "text": "returns the total cost to renew a product for a number of cycles .", "title": "", "metadata": ""}
{"_id": "d19759f9fe25fd4ff9808c7cbde361b2", "text": "accept payment from e4row contract .", "title": "", "metadata": ""}
{"_id": "1815fc4a004cf3ab8ae447fd34bc6705", "text": "Seller sign .", "title": "", "metadata": ""}
{"_id": "1132e854641659e4204319f83dc229d8", "text": "Exponentiation two numbers , throws on overflow .", "title": "", "metadata": ""}
{"_id": "f47c8165e3b648e2e065fc2ca3c04e6b", "text": "This is an ethereum withdraw for the tank .", "title": "", "metadata": ""}
{"_id": "be8ae46e4c57d1d46772c693b08ae671", "text": "Allow to change the tokenExchangeRate .", "title": "", "metadata": ""}
{"_id": "ac0fe1b5066fd66a2bf7aa2d7da1a84f", "text": "Set the minimum amount in wei that can be invested per each purchase .", "title": "", "metadata": ""}
{"_id": "2a969db9b2257a40e2d19af74e1f2386", "text": "Change owning address of the token contract , specifically for minting .", "title": "", "metadata": ""}
{"_id": "1ca94e95bede1f53e615f2aab70c8a01", "text": "Validates token balance .", "title": "", "metadata": ""}
{"_id": "6d23b3b9190750505aa53f5e1c061123", "text": "Return unsold tokens to beneficiary address .", "title": "", "metadata": ""}
{"_id": "b56fe51a0ae8e30de334d2404ddba451", "text": "once an address is flagged as SCAM it can be forgiven by the flagger unless the scammer already started to pay its debt .", "title": "", "metadata": ""}
{"_id": "11f02c9a780af5d0e44aff7b4c29cafd", "text": "Allow addresses to buy tokens .", "title": "", "metadata": ""}
{"_id": "2c7553794e1adb33badc18bdc1b134c0", "text": "This function handles deposits of Ethereum based tokens into the contract , but allows specification of a user .", "title": "", "metadata": ""}
{"_id": "e8724a43d45ea30cd492748558e95cc4", "text": "Assigns a new address as the COO .", "title": "", "metadata": ""}
{"_id": "b114cab74f7feca2b51e791104e3b30d", "text": "Whitelist a game on all token bankrolls .", "title": "", "metadata": ""}
{"_id": "c5778074db79fb8601af7681243d5547", "text": "Devs will upload balances snapshot of blockchain via this function .", "title": "", "metadata": ""}
{"_id": "964c76d463de2ea27ce8de309b484a93", "text": "how many tokens have been distributed .", "title": "", "metadata": ""}
{"_id": "596ff1cc74e7f8cc33cba1e1d312c329", "text": "Mint more xD .", "title": "", "metadata": ""}
{"_id": "25efa4610f8d14165acea9904fd8aa4d", "text": "Point provided Identities to the desired things array index in the lookup hash table idToThing .", "title": "", "metadata": ""}
{"_id": "54cdd43669c867985515862de4451b8f", "text": "Internal registation method .", "title": "", "metadata": ""}
{"_id": "d043fa2af46dd1e9ad56867c49b35f4b", "text": "returns CHUNK_SIZE loans starting from some offset .", "title": "", "metadata": ""}
{"_id": "157f5ce5024e7c4b266f7d837270c9e5", "text": "creating a removeWhiteList would be too onerous .", "title": "", "metadata": ""}
{"_id": "7d36f1083b6fd5436eb19a2df1eba948", "text": "No assertion on color 16 since the frontend will default to white otherwise .", "title": "", "metadata": ""}
{"_id": "03a92eb02da52b016a0379d27e1fe0a9", "text": "function to make lowercase .", "title": "", "metadata": ""}
{"_id": "dd328e68ed5267513dfc0971cf7e2250", "text": "tokenRaised and tokenIssued control functions base functions .", "title": "", "metadata": ""}
{"_id": "ce722fd1e0644ab6185379da7e26aa79", "text": "Add new endorsement to a winery operation .", "title": "", "metadata": ""}
{"_id": "b4c69c6ad8cdcd0a91a961ea2967f2f1", "text": "called by the owner to set a new rate .", "title": "", "metadata": ""}
{"_id": "794713631f4fe718759545bc2cd41c00", "text": "Token API .", "title": "", "metadata": ""}
{"_id": "b66d14fa401a31caaa858758cc23d175", "text": "Add function avoids overflow .", "title": "", "metadata": ""}
{"_id": "ca83f34d568648da9bf0c0605a103571", "text": "Transfer tokens from approve ( ) pool to the buyer .", "title": "", "metadata": ""}
{"_id": "d1531d7404dbb99a776dcda548c7968e", "text": "simple onlyowners function modifier .", "title": "", "metadata": ""}
{"_id": "bce6fbe33af5ee200d6b01e4d02da288", "text": "Gets the latest Btc Euro rate .", "title": "", "metadata": ""}
{"_id": "1d78b166b95753a33e673783346f5cc2", "text": "Set the cooldownEndTime for the given Monster , based on its current cooldownIndex .", "title": "", "metadata": ""}
{"_id": "83230d0f2b29d8f700a676fae3f44ecc", "text": "Public Querying API .", "title": "", "metadata": ""}
{"_id": "ddee76f761c41e7dcdd873b128bca56c", "text": "This function just transfers tokens to beneficiary address .", "title": "", "metadata": ""}
{"_id": "8b75120d8991cf4b7dfb00cbbf35c963", "text": "For wallet PE Sales .", "title": "", "metadata": ""}
{"_id": "3a582f5a873fc4c07963ae5e689cf888", "text": "ShowChargeCount ( ) looking for the user total charge times .", "title": "", "metadata": ""}
{"_id": "3143b680c25d639177bbc005ea328f77", "text": "Pays an affiliate if they are valid and present in the transaction data .", "title": "", "metadata": ""}
{"_id": "63c4f9c6c1078a8ebd4cbd9cbb7858d4", "text": "Issues tokens for users who made direct ETH payment .", "title": "", "metadata": ""}
{"_id": "c9bda5591edeb6903efd1d603d797e7e", "text": "Allows a token holder to burn tokens .", "title": "", "metadata": ""}
{"_id": "a384e0504a439f70401703eff268aabe", "text": "Allow operators to update whitelist contracts in bulk .", "title": "", "metadata": ""}
{"_id": "1f72635e7043fdfc36a0317b6272cda1", "text": "count summ with bonus .", "title": "", "metadata": ""}
{"_id": "019d6abe687272ed22dfafa564502f68", "text": "allows contract owner to claim their mint .", "title": "", "metadata": ""}
{"_id": "f26ca7a32ac41454efb4fa538d565f9b", "text": "function to get amount , which invested by depositor .", "title": "", "metadata": ""}
{"_id": "0fdeb2fde826858d01da8133ec0981b0", "text": "Computes owner's cut of a sale .", "title": "", "metadata": ""}
{"_id": "56507fb349d3cf336801d87c041c604b", "text": "Moving date after the pause .", "title": "", "metadata": ""}
{"_id": "b89dfe23de20cf877d4eba1a01db1b43", "text": "dev function for withdraw any amount from amountRaised ( active only if minimumTarget is reached ) .", "title": "", "metadata": ""}
{"_id": "e8921e087434945ca0195eb67aabb378", "text": "withdraw the tokens from the deposit address with charge fee .", "title": "", "metadata": ""}
{"_id": "60d652ec258ccc8af142bb45d2796fab", "text": "Unfreeze account , make transfers from this account available .", "title": "", "metadata": ""}
{"_id": "5f75aeca5c8d0b0e58d0e264778cb808", "text": "ERC20 transferFrom , modified such that an allowance of MAX_UINT represents an unlimited amount .", "title": "", "metadata": ""}
{"_id": "6a66412860d69fe826c07e0a1b94e160", "text": "To distribute the presale and ICO tokens and increase the total supply accordingly .", "title": "", "metadata": ""}
{"_id": "4d2a1c4c3a1b563ad2414e1434384563", "text": "Spend ETH to acquire tokens .", "title": "", "metadata": ""}
{"_id": "209ee172191988aff02b0e3f06a1bffe", "text": "12 transfer contract Ownership to newOwner and transfer all balanceOf oldOwner to newOwner .", "title": "", "metadata": ""}
{"_id": "128101c811f30c4c28de9281c76ec53e", "text": "Adds a new worker .", "title": "", "metadata": ""}
{"_id": "97a0e89f34d921752de5edfd2f580555", "text": "For creating Grey .", "title": "", "metadata": ""}
{"_id": "b0407e07d3298d21a9558a4700107b58", "text": "Initializing the round .", "title": "", "metadata": ""}
{"_id": "b0e4ca3db1ef3231eda7e687e6bc9882", "text": "Emergency methods .", "title": "", "metadata": ""}
{"_id": "88db7206b44c4229eee371bd2b6590f5", "text": "get all GreedyCoins of msg . sender .", "title": "", "metadata": ""}
{"_id": "d8db9971d77a4c2ca906a264625aec37", "text": "Compute the tradeable amounts of the two verified orders .", "title": "", "metadata": ""}
{"_id": "94d98927bb529ae982ece76d8ba5b633", "text": "Allows a user to transfer control of existing proxy to this contract .", "title": "", "metadata": ""}
{"_id": "93177ccf7ac678b3914876a362d2659c", "text": "Throw if the blob is not transferable .", "title": "", "metadata": ""}
{"_id": "32b0cd333c58f60a542db59e2054d354", "text": "Get list of all registered publishers .", "title": "", "metadata": ""}
{"_id": "10b6d91730b5a4d526c6c8bc6faf1f48", "text": "Returns number of allowances tokens for given address .", "title": "", "metadata": ""}
{"_id": "dc9da2770947a732a093a5025b1f2bb5", "text": "View function to see that last time that the rate was updated .", "title": "", "metadata": ""}
{"_id": "7869d8d34843dc55a16cdd062ebb0121", "text": "Get a certain number of blocks in descending order .", "title": "", "metadata": ""}
{"_id": "01c9956d9e64f213377700bc70dbbb0f", "text": "ERC721 functions ; .", "title": "", "metadata": ""}
{"_id": "0f52ef8bce8272e0409fa9259cf4bdae", "text": "Get the payload offset .", "title": "", "metadata": ""}
{"_id": "80eb010df62934ff82067472602cd500", "text": "Failsafe transfer tokens for the team to given account .", "title": "", "metadata": ""}
{"_id": "7bed2f997d84afb39a5589a22aef802b", "text": "set promo token .", "title": "", "metadata": ""}
{"_id": "52d484c7e75fb91aedbda046df7f1d50", "text": "Checks if _operator is an approved operator for _owner .", "title": "", "metadata": ""}
{"_id": "9400ce26a8a0d7b1da86b25117d87ab8", "text": "public function locks / unlocks tokens on a recurring cycle .", "title": "", "metadata": ""}
{"_id": "77f67d65acf377d3e751548f1fc6c6b7", "text": "Finalizes sale generating the tokens for Genaro Dev .", "title": "", "metadata": ""}
{"_id": "95430c885254757e5d9778abc7b54f5a", "text": "This method will generally be called by the AIX token contract to acquire AIXs .", "title": "", "metadata": ""}
{"_id": "75391fb163096f1d33df414cd89561f8", "text": "use to exchange other token .", "title": "", "metadata": ""}
{"_id": "6f0d155151486a7cdde057f5bcbdcee5", "text": "anyone can try to finalize after the max block count or bets in the round are all revealed .", "title": "", "metadata": ""}
{"_id": "e8064fcfbadaf7079862a8c4f7ddf86c", "text": "overrides HasNoTokens extractTokens to make it possible to extract any tokens after migration or before that any tokens except etheal .", "title": "", "metadata": ""}
{"_id": "b7112c42a0ce895ba5e4ea818b8622fa", "text": "Allows to update to new ENS resolver .", "title": "", "metadata": ""}
{"_id": "4256e0c47654401e5d54ec54fab9ff77", "text": "Locks tokens for an address for the default number of days .", "title": "", "metadata": ""}
{"_id": "d0a89d79734071af468bdeb838fe637a", "text": "Verify if the sender is owner .", "title": "", "metadata": ""}
{"_id": "34fc8f3098571d852993901fd501941a", "text": "external function that gives possibility to invest in queue or concret charger .", "title": "", "metadata": ""}
{"_id": "66321c68c255c146eda01cd5b8d6c8ca", "text": "Allows the owner of the ICO to extend the deadline of the current ICO stage .", "title": "", "metadata": ""}
{"_id": "1521e116288a7229ba9f0aebe7835757", "text": "in the light of our sanity allow a utility to whole number of tokens and 1 / 10000 token transfer .", "title": "", "metadata": ""}
{"_id": "83b77f23ec7108bd96550fbd20744e02", "text": "Thanks to TechnicalRise .", "title": "", "metadata": ""}
{"_id": "75bbe2e8e2a3bfdd7baef78a4d3da6ba", "text": "Proxy transfer SMART token .", "title": "", "metadata": ""}
{"_id": "56e8898daf95c15a8f412ec74ef833ec", "text": "Enable or disable lock .", "title": "", "metadata": ""}
{"_id": "376d0884d967087ef865832f7dab4a34", "text": "attach module managing subscriptions .", "title": "", "metadata": ""}
{"_id": "06e37d846f261fca0840873d1825f668", "text": "deals one more card to the player .", "title": "", "metadata": ""}
{"_id": "eae672f3091cb1f83ee04b5e40354338", "text": "recipientContainer can transfer undefined funds to itself and terminate the Contract after finalDate .", "title": "", "metadata": ""}
{"_id": "ca7a61dc8b6c50eaaa4736d07de0a46b", "text": "add new release record for beneficiary .", "title": "", "metadata": ""}
{"_id": "caab86c3b65c6af6a090f5ed680c15ea", "text": "Put Chibi up for fusion , this will not destroy your Chibi .", "title": "", "metadata": ""}
{"_id": "8d727c6f37a82c7367904772e6d5d205", "text": "award prize to winner , and developer already took 10 from individual transactions .", "title": "", "metadata": ""}
{"_id": "65f728c7ee2ef129886bef57b92d1f60", "text": "distributes the given amount among the players depending on the number of fishes they possess .", "title": "", "metadata": ""}
{"_id": "5c33c0f4bf5c26265dcf6303dd3fe4e9", "text": "Wraps up the crowdsale .", "title": "", "metadata": ""}
{"_id": "01e06a4e5c6be511c8e7aa64c1e1a51e", "text": "set lock position .", "title": "", "metadata": ""}
{"_id": "b3794555f7f770b2e380e3ab357e24f2", "text": "Adds an address to the whitelist of Verifiers .", "title": "", "metadata": ""}
{"_id": "27986f3646607e6d195c04b2a8bc6e7b", "text": "Checks if the specified address is a transfer agent .", "title": "", "metadata": ""}
{"_id": "d0e32df5d48752dde9fff41910e623a5", "text": "Function to declare additionals .", "title": "", "metadata": ""}
{"_id": "700db25dd09b69ec84b43141efdd469b", "text": "ERC20 transferFrom function , modified to only allow transfers once the sale has been finalized .", "title": "", "metadata": ""}
{"_id": "2b8a884d52b7d516092a101016aeafb7", "text": "The Manager freezes the tokens for the Team .", "title": "", "metadata": ""}
{"_id": "085d1945768608a4cd867f150d70e806", "text": "Copies 'len' bytes from 'bts' into a new array , starting at the provided 'startIndex' .", "title": "", "metadata": ""}
{"_id": "269f28d96d3009768ffc61b36e654c1c", "text": "( Done as part of migration ) Claims ownership of token contract .", "title": "", "metadata": ""}
{"_id": "7fc793ee91e83ec27890b6e722be4564", "text": "Retrieve if transaction was successful .", "title": "", "metadata": ""}
{"_id": "37ca26865e24c60a3d0298e0ef9cafcc", "text": "Sets a new game starter dividend percentage .", "title": "", "metadata": ""}
{"_id": "b2fdd9ebaf8beb81e78452bab4bc4040", "text": "Get uuid of account taht transfer tokens to specified address .", "title": "", "metadata": ""}
{"_id": "abbaad126b2c52ca7fc75e4d0f231774", "text": "Create a cryptocurrency conversion using Oracalize and custom Shapeshift return address .", "title": "", "metadata": ""}
{"_id": "620a81c587f0c3b2a4c6a04402a5644a", "text": "Contract constructor sets initial owners and required number of confirmations .", "title": "", "metadata": ""}
{"_id": "67e51d2d8767be09849f4359079f6803", "text": "Set the address which should receive the vested team and advisors tokens plus airdrop shares on finalization .", "title": "", "metadata": ""}
{"_id": "b47878fcf53dbd6e1d7aa6470888d797", "text": "Modifier to make a function callable only when the address is not in black list .", "title": "", "metadata": ""}
{"_id": "3ab41f6421c2eaae2bb91587766e6852", "text": "Returns true if the NFT is on sale .", "title": "", "metadata": ""}
{"_id": "26a63c3c375f4fbded244dc195306f30", "text": "Extend parent behavior requiring purchase to respect the funding's lower cap .", "title": "", "metadata": ""}
{"_id": "79c565ff329ca88b3d3dbfe120d3ce31", "text": "How much one must pay to create a new kingdom ( in finney ) .", "title": "", "metadata": ""}
{"_id": "8f01a3a55a17ee14017a9ffce42f4c57", "text": "validates a reserve token address - verifies that the address belongs to one of the reserve tokens .", "title": "", "metadata": ""}
{"_id": "32b8e5dc92487aa78c12e39daed4f341", "text": "commit funds for the current window .", "title": "", "metadata": ""}
{"_id": "dc4c1a01d992f0545486d9de684bb363", "text": "Tells the address of the current implementation .", "title": "", "metadata": ""}
{"_id": "72456579bfc0c548c690573baf7cf7b3", "text": "Set presales price .", "title": "", "metadata": ""}
{"_id": "4196837ac6afb90f5cfba3cb98886d62", "text": "Count of proposals in archive .", "title": "", "metadata": ""}
{"_id": "9cca307defa08222c1cf4ea70e2f3765", "text": "Update key value from the previous state to new .", "title": "", "metadata": ""}
{"_id": "80f8cd5713e6bac0a2894de753336786", "text": "Overriding basic ERC-20 specification that lets people transfer / approve tokens .", "title": "", "metadata": ""}
{"_id": "c46a918b2a993cd36c307010c0e61d6e", "text": "Allow developer to add ETH to the buy execution ico .", "title": "", "metadata": ""}
{"_id": "d9f19a7568e68049b9669d65df4a326e", "text": "Update Thing's data .", "title": "", "metadata": ""}
{"_id": "f34f93468073e5fe34ef78f1a9e1dc14", "text": "mint SMR tokens for SMRE holder .", "title": "", "metadata": ""}
{"_id": "86f26c76e0e053715691031ac7c22be6", "text": "Returns the number of unique contributors to a crowdsale .", "title": "", "metadata": ""}
{"_id": "74eddeb8d1ad1fc2582c21b094a9874c", "text": "a bid is accepted by a publisher for a given ad slot .", "title": "", "metadata": ""}
{"_id": "93ab8df1b15507dcf0fbc16307c747d2", "text": "Allows the owner to change the symbol of the contract .", "title": "", "metadata": ""}
{"_id": "912e003e6c1c42d53469cd51cb38e13f", "text": "Change startTime to start ICO manually .", "title": "", "metadata": ""}
{"_id": "0589138c25be07b12e7ee6b929fe74cd", "text": "Match two orders , ensuring validity of the match , and execute all associated state transitions .", "title": "", "metadata": ""}
{"_id": "25696b057f3bf3a8c1fba474ada85511", "text": "get bounty for the people .", "title": "", "metadata": ""}
{"_id": "8603e35a6066ceed786ca3b945c40e57", "text": "give bonus to all partners , and the owners can withdraw it soon .", "title": "", "metadata": ""}
{"_id": "3e6860654ca73fb0d4bcc7ba173a17da", "text": "error : canTransfer ( msg . sender , .", "title": "", "metadata": ""}
{"_id": "84f5920f8c9c5700022d3887d59b54c8", "text": "Operation modifiers for limiting access .", "title": "", "metadata": ""}
{"_id": "99019eaf695ea947d114d45dbea2e964", "text": "add address to whitelist .", "title": "", "metadata": ""}
{"_id": "b0a0520d8cf9303ed53be876479822e7", "text": "Modifier for super-owner 's functions of the contract .", "title": "", "metadata": ""}
{"_id": "b9ab700248b3d2fc553e153536e5161a", "text": "Change the real unicorn contract location .", "title": "", "metadata": ""}
{"_id": "e047ed77e7a23096c2b9d612d17dc97b", "text": "set the cap on the contract if the crowdsale hasn't started .", "title": "", "metadata": ""}
{"_id": "aa8919a5ebb82a72338b11afae05b6fd", "text": "returns balances of active holders .", "title": "", "metadata": ""}
{"_id": "f96bf62077dc94a6294c6591d1be4bf6", "text": "shifts a bytes32 left by n positions .", "title": "", "metadata": ""}
{"_id": "411ed71b92b9ea51e6c247d15e71b02a", "text": "unsign function .", "title": "", "metadata": ""}
{"_id": "078aff4de0d3cb05ee99a70823fd6898", "text": "Function to update KYC list .", "title": "", "metadata": ""}
{"_id": "4ade35b4c519d8e999e6f49b4603c715", "text": "Regular end game session .", "title": "", "metadata": ""}
{"_id": "18e0e039b59c96a0832b63e5ce0764b1", "text": "Withdraw DRPS tokens from the proxy and reduce the owners weight accordingly .", "title": "", "metadata": ""}
{"_id": "ae2b10b5493e2ed35cd5441683417897", "text": "Returns the timestamp of last update by address .", "title": "", "metadata": ""}
{"_id": "a16f33ed7c627df15f8b4ca35955ec79", "text": "Function returns the number of investors .", "title": "", "metadata": ""}
{"_id": "791ebb2fcbeed143f97fb5cf1e8010cb", "text": "get the M5 logic contract address .", "title": "", "metadata": ""}
{"_id": "b0cae3f8ed9d632c97510300ed88ad67", "text": "check for allowence of transfer .", "title": "", "metadata": ""}
{"_id": "223ceeefe2619f87379f2f8798b0173b", "text": "Add an user address to the whitelisted ones .", "title": "", "metadata": ""}
{"_id": "50a47694dbb4be44619428a0e7cdcd3c", "text": "Returns the length of a given string .", "title": "", "metadata": ""}
{"_id": "b1bf1dd80900ce126c0f9cd6d9176578", "text": "Ckeck that owners tokens is allowed to send to spender .", "title": "", "metadata": ""}
{"_id": "25c94c26f133eb4156ed095d8be259c3", "text": "Get timestamp of the level startup .", "title": "", "metadata": ""}
{"_id": "0d2ad9bcf9e2e1c015180ba9022f01c2", "text": "Low level purchase .", "title": "", "metadata": ""}
{"_id": "e6644c08c6b3b7a390ada0c907d58058", "text": "send everything to the new ( fixed ) ico smart contract .", "title": "", "metadata": ""}
{"_id": "078450b82d7b560838357e04a6f081a0", "text": "Transfers or burns tokens .", "title": "", "metadata": ""}
{"_id": "813630d4b68bc56590ce1031b8c09b49", "text": "Internal balance function , used to calculate the dynamic reserve value .", "title": "", "metadata": ""}
{"_id": "378ca846ff004a1ea55ee21091474984", "text": "Write board metadata for migration as contract owner only .", "title": "", "metadata": ""}
{"_id": "40a31d93b1043f95ef111b51f4441a6d", "text": "bool Whether the approval was a success ( see ERC20's approve ) .", "title": "", "metadata": ""}
{"_id": "609f7419c388fb6d5e64db029bc15b67", "text": "Allows the current supervisor to transfer control of the contract to a newSupervisor .", "title": "", "metadata": ""}
{"_id": "ac6f238e52fed9a5b4221a65c44d007a", "text": "This contract only defines a modifier and a few useful functions .", "title": "", "metadata": ""}
{"_id": "a1659eb9ddc552872b900593571a35cf", "text": "Setting functions .", "title": "", "metadata": ""}
{"_id": "a0c90f960e622372d2af8ced582121b9", "text": "Creates a new property with the given details and creates an auction for it .", "title": "", "metadata": ""}
{"_id": "5398c81e11b7485610b47f71faa8ad87", "text": "Function to whitelist partner address .", "title": "", "metadata": ""}
{"_id": "e378c9e07187e88d649c74a5f550cc0d", "text": "change token price per 1 ETH .", "title": "", "metadata": ""}
{"_id": "54671c2171a665ccc1115955e8b0dc72", "text": "allow on manual addition of contributors .", "title": "", "metadata": ""}
{"_id": "6dc4355d0025af3b931bca7c0ca6371f", "text": "the gravatar at position 0 of gravatars is fake it's a mythical gravatar that doesn't really exist dani will invoke this function once when this contract is deployed but then no more .", "title": "", "metadata": ""}
{"_id": "0f26b002f16a12c9962a6a3f98cdd426", "text": "called by owner , add preIcoAccount .", "title": "", "metadata": ""}
{"_id": "25bcde3d6fef96e5089217645ed76c53", "text": "Mints new tokens for the bounty campaign .", "title": "", "metadata": ""}
{"_id": "9f25c1624a64822e2be72961259a07f8", "text": "Owner can withdraw the current balance .", "title": "", "metadata": ""}
{"_id": "6ec89dfa8d5e118ae4fb24b831b89d17", "text": "SER amount per 1 ETH for the current moment in time .", "title": "", "metadata": ""}
{"_id": "a651d4cc1abc1fdf59adf4d952823c39", "text": "checks if a given address is the current owner of a particular pet .", "title": "", "metadata": ""}
{"_id": "4ae86dd23ea3fb5cf4bc7d64645f4fcc", "text": "Allows the supervisor to take control of the contract .", "title": "", "metadata": ""}
{"_id": "9c20ff9ddef299a4757cf477b251c2bc", "text": "Increase total supply by _val .", "title": "", "metadata": ""}
{"_id": "4539b06c9c19c69638907f0ad77d3e95", "text": "admin initiates a request to transfer ownership of a contract from trueUSD to this TimeLockedController .", "title": "", "metadata": ""}
{"_id": "6b3c86b834f65465547027f977867c6c", "text": "swap executor .", "title": "", "metadata": ""}
{"_id": "18306c93893f1e522c61219295069c0e", "text": "Sets new min .", "title": "", "metadata": ""}
{"_id": "cd3b2c469d980a07aed60f6b3b4069a6", "text": "function to compare two strings for equality .", "title": "", "metadata": ""}
{"_id": "de416120119aeaf46b9509e2f6ab45fc", "text": "Allows merchant or Monetha to initiate exchange of funds by withdrawing funds to deposit address of the exchange .", "title": "", "metadata": ""}
{"_id": "dc6742028151dea44e3bd87680021e6c", "text": "Converts a number tokens into an Ether value .", "title": "", "metadata": ""}
{"_id": "1f9a0c1814e6c8ed75b852a633f71120", "text": "Number of tokens that are still locked .", "title": "", "metadata": ""}
{"_id": "a7b24a62c5fa09bd7bbe77a28e783144", "text": "bulkTransfer tokens to a list of specified addresses , not an ERC20 function .", "title": "", "metadata": ""}
{"_id": "155c0cb8a127930a59a49a068dc60611", "text": "Token bankroll token-allocate function .", "title": "", "metadata": ""}
{"_id": "e5631454e30e5f14ebf5771171f4f7a7", "text": "To eliminate tokens and adjust the price of the FEE tokens .", "title": "", "metadata": ""}
{"_id": "a17a0ebb3b702f10fa1646610e017b73", "text": "Only admin can fix how many seconds per blocks are currently observed .", "title": "", "metadata": ""}
{"_id": "fbd4583e7c4994c76fcfccdf7c92d231", "text": "public function in case of a failed refund or win send .", "title": "", "metadata": ""}
{"_id": "a8dcd1b362ea27c96c8219324cfda4de", "text": "Change the protocol fee recipient ( owner only ) .", "title": "", "metadata": ""}
{"_id": "a8b105172bf8b076eb61dfa926290a7a", "text": "true if the transaction can buy tokens within cap nonzero .", "title": "", "metadata": ""}
{"_id": "b2eee5b0e79c03e1e422f93e899f40e6", "text": "Returns a pointer to the execution storage buffer .", "title": "", "metadata": ""}
{"_id": "98bbcf07a043d9e5f9cf2711af50f2cc", "text": "Examples of multiplierOnWin ( ) return values : 10 000 indicates 1x returned .", "title": "", "metadata": ""}
{"_id": "baf2e6c4d48094f5298da773f466425a", "text": "set wild card token .", "title": "", "metadata": ""}
{"_id": "00d433ec92a3154816b07c8f627fca35", "text": "Sets the total max amount in token for the accounts to hold , any exceeding funds will be sent to the coldWallet .", "title": "", "metadata": ""}
{"_id": "d7148f06ac194acee228082d37658230", "text": "Backup function in case of ETH price fluctuations .", "title": "", "metadata": ""}
{"_id": "f87a53fbdf7634727c1995ffc1c632a4", "text": "function to start new ICO round can only be called from owner wallet .", "title": "", "metadata": ""}
{"_id": "db4b322ae8303b779843fdfef4192e50", "text": "Allow other contract to spend some tokens in your behalf .", "title": "", "metadata": ""}
{"_id": "436c95c02c04847ef318b695891001f5", "text": "The associated multihash .", "title": "", "metadata": ""}
{"_id": "a77f5dc70165aa9ead3d98e93119a3b2", "text": "modifier to determine if the crowdsale is active .", "title": "", "metadata": ""}
{"_id": "144b79761958645591851b0286d4cc3d", "text": "returns number of participant ( in the list of participants ) by belonging address and adding to the list , if not found .", "title": "", "metadata": ""}
{"_id": "74c93312e8c926fdd368b6736b7ed8e3", "text": "Modifier for only onlyOwner .", "title": "", "metadata": ""}
{"_id": "e1903e6c7d4d8a89b42527e7e54f0151", "text": "displays number of uniq investors .", "title": "", "metadata": ""}
{"_id": "dcff6840d117e4b9be1a4dacb5e57768", "text": "Withdraws affiliate earnings .", "title": "", "metadata": ""}
{"_id": "6edd644ee69e71b1d29edf9cfbadb9bf", "text": "checkbet on column bet type : column input : 0 first , 1 second , 2 third .", "title": "", "metadata": ""}
{"_id": "ead6cffa8b9c6992178a2e86fda6d6ff", "text": "check if an address has this role / / reverts .", "title": "", "metadata": ""}
{"_id": "b15d8c21215b52d1f8d77c1c634e5514", "text": "Allowing owner to transfer the money rasied to the wallet address .", "title": "", "metadata": ""}
{"_id": "57b916487333d889b3617611e8579584", "text": "The contract has no constructor .", "title": "", "metadata": ""}
{"_id": "1175f860e0f7cafd7a9bfb2d099d6c5a", "text": "function to add a minor owner can only be called by the major / actual owner wallet .", "title": "", "metadata": ""}
{"_id": "382ce20fc50fb34ec3bfcd6cf20df933", "text": "Approve the specified address to spend the specified amount of tokens on behalf of the msg . sender .", "title": "", "metadata": ""}
{"_id": "541a864ab523a1688227d6e17f5766a0", "text": "Add information about the investment at the PreIco stage .", "title": "", "metadata": ""}
{"_id": "223b2e07aa87b3c195af00b54e72cfc1", "text": "Income should go here .", "title": "", "metadata": ""}
{"_id": "c54534074f0f26647c0b1ea25ac937c5", "text": "Helpers : Cool way to manage big array with limited gas .", "title": "", "metadata": ""}
{"_id": "ab6992c1a18419cb70705a2efe45fdff", "text": "Set Params For Sale .", "title": "", "metadata": ""}
{"_id": "9789fad0adde2b5bc728028900c474f5", "text": "increase total number of tokens in existence .", "title": "", "metadata": ""}
{"_id": "b69758b7769b4c02df8fa73c4ba5be2e", "text": "Checks if a order can be traded .", "title": "", "metadata": ""}
{"_id": "264e7e8610702385ea8d1b5c2b614843", "text": "set the defcon level , 5 is unpaused , 1 is EVERYTHING is paused .", "title": "", "metadata": ""}
{"_id": "aa6cdd55b0a0b3581549f101da588c27", "text": "Assigns a new address to act as the GM .", "title": "", "metadata": ""}
{"_id": "863b9f994761bbeb4bcb5104bb391b79", "text": "Throws if called when minting is finished .", "title": "", "metadata": ""}
{"_id": "e00843fc40bcd922b647b940b5290819", "text": "Internal , updates the profit value .", "title": "", "metadata": ""}
{"_id": "3a517461e7019ad05df2f9c44e8b37fc", "text": "Number of voters .", "title": "", "metadata": ""}
{"_id": "9129172969cd5ec7910354d43dbc67d3", "text": "Function for adding tokens to specified account .", "title": "", "metadata": ""}
{"_id": "ed02689f62cd051804502d16536c095e", "text": "set the product completion date for release of dev tokens .", "title": "", "metadata": ""}
{"_id": "2e61cff615ce01a5abc83a43377074ef", "text": "Returns true if it is possible to invest .", "title": "", "metadata": ""}
{"_id": "5d4ae3b8c4d003f82195f791e7a8519a", "text": "The owner can change the maintainer .", "title": "", "metadata": ""}
{"_id": "c0b2da303e22e113346983c582fc49ae", "text": "Owner can delist by setting amount 0 .", "title": "", "metadata": ""}
{"_id": "246052e67c24c5b4c54b6066a2e98431", "text": "Extend the round time , if provided by the script .", "title": "", "metadata": ""}
{"_id": "9cf968feda5e4866d78388f55de619af", "text": "use to check the permission on delegate corresponds to module contract address .", "title": "", "metadata": ""}
{"_id": "ef3ffc67f22526edc7143da4fcaa6a30", "text": "Checks if a given address currently has transferApproval for a particular Rabbit .", "title": "", "metadata": ""}
{"_id": "2a30e5b2cebf474c026d7c216a76378a", "text": "Internal function to forward funds to multisig wallet .", "title": "", "metadata": ""}
{"_id": "869911eb3ab9fc52d7b5d255ac62163e", "text": "Allows a beneficiary to verify if he is already registered .", "title": "", "metadata": ""}
{"_id": "b7b565520adee22cacaa36e09796ff75", "text": "Bid actions .", "title": "", "metadata": ""}
{"_id": "a81543b2f687ab9065ce5eb4be14aea7", "text": "Add a tier with a given discount and available supply .", "title": "", "metadata": ""}
{"_id": "8f58ff37cdce0c1d31ed09fd8571d89e", "text": "END Import related methods .", "title": "", "metadata": ""}
{"_id": "f309f24aae58304b65c1e0097981bfea", "text": "add a record to the END of the list .", "title": "", "metadata": ""}
{"_id": "fa159336a96bb1ba1f9a23b66ba2616f", "text": "Retrieve the unique identifier for the node .", "title": "", "metadata": ""}
{"_id": "24d3dc8775f3a4aa9ff6d74816e9ee14", "text": "Check if the contract is not active .", "title": "", "metadata": ""}
{"_id": "2ba9bf643e126f61fb6c15a6370b8f26", "text": "This function is used by the owner to authorize many addresses in a single call .", "title": "", "metadata": ""}
{"_id": "1752b681f4b0f685245fa748ec30191a", "text": "Disables further use of any privileged functions like freezing tokens .", "title": "", "metadata": ""}
{"_id": "d696d7d827cc448d4d553b9e1cf2ee30", "text": "Claim all bought HQX for all approved addresses .", "title": "", "metadata": ""}
{"_id": "c470a4de5067c1a523b0afce8c38d6e9", "text": "extract an address from a bytes at a given position .", "title": "", "metadata": ""}
{"_id": "2879e216b4b7f9a7585ba49d02ca7133", "text": "An internal method that creates a new Puppy and stores it .", "title": "", "metadata": ""}
{"_id": "93af1e2cc3c3d0134f72b975f1b701d8", "text": "administrative use to correct any token transaction errors .", "title": "", "metadata": ""}
{"_id": "d2baeb49f95656f742df53325d43eb14", "text": "Places votes with preferred candidate required after any adjustments to tokenBalance or vote preference .", "title": "", "metadata": ""}
{"_id": "0e010cfee3d6aa241531e65ec886138d", "text": "Returns the current status of the crowdsale .", "title": "", "metadata": ""}
{"_id": "a65f58d2d9b4a92f0451f43592c8f46f", "text": "transfers presale token amounts to contributors .", "title": "", "metadata": ""}
{"_id": "8bc252e3f5db98e9bc714cfe8d505ed1", "text": "Calculate the amount of ready tokens of a holder .", "title": "", "metadata": ""}
{"_id": "22ec419b93d3a56a1871886b480c1810", "text": "transfer tokens which are not subject to vesting .", "title": "", "metadata": ""}
{"_id": "a1516b94ff873cf2df641c59daad2305", "text": "release the locked tokens owned by an account , which only have only one locked time and don't have release stage .", "title": "", "metadata": ""}
{"_id": "d975df96dd6028680d9e4f5cc0b565b6", "text": "Submit a presigned approval .", "title": "", "metadata": ""}
{"_id": "7d2109cc8d4ef99a6a30662c2438bb5b", "text": "Returns the address associated to a user-id .", "title": "", "metadata": ""}
{"_id": "0ba671946b620584b6216562b714834a", "text": "Calculates the maximum amount of vested tokens .", "title": "", "metadata": ""}
{"_id": "e52a186c1cb73a7d1e20cfc09416070d", "text": "draw card .", "title": "", "metadata": ""}
{"_id": "3d62a6103927a600165e11d51cb3e530", "text": "get Ids of all deeds .", "title": "", "metadata": ""}
{"_id": "18a6e2b5c57bef011cd3593a9d01394c", "text": "Returns real dividends , including negative values .", "title": "", "metadata": ""}
{"_id": "03a636cb080b59f5e34d288475e53902", "text": "Finds the socket if given an Ethereum Address .", "title": "", "metadata": ""}
{"_id": "b914b6716319210357356325af157e44", "text": "Returns asset description .", "title": "", "metadata": ""}
{"_id": "a745ac7a49d4dd734d91b96794a2695f", "text": "judge if the event has already been authorized .", "title": "", "metadata": ""}
{"_id": "23c2d942da5a1f4689a99448f8b19138", "text": "Sell all of tokens for all ether of this smartcontract .", "title": "", "metadata": ""}
{"_id": "1ff2f5601c80f6e9d469c2a452603365", "text": "Use this function to set memberId for the member .", "title": "", "metadata": ""}
{"_id": "9edaa962c67baadc728724298ca20ed2", "text": "allocate syndicate shares up to the limit .", "title": "", "metadata": ""}
{"_id": "b0a82abec532d3dc59fb1c3bd90cf0fb", "text": "remove single address from whitelist .", "title": "", "metadata": ""}
{"_id": "d533398b98aea9021ae359065815e829", "text": "A new user attacks a tile claimed by someone else , trying to make it theirs through battle .", "title": "", "metadata": ""}
{"_id": "07eefc33062c52848f89a21d66ad0927", "text": "Returns the total number of tokens available for sale .", "title": "", "metadata": ""}
{"_id": "391dd318bd568c64892536365ee2fc80", "text": "only brand is authorized .", "title": "", "metadata": ""}
{"_id": "a654b6907276072a85a1667ff11ecde1", "text": "Checks a seller offer from the seller side .", "title": "", "metadata": ""}
{"_id": "266bc353ffa02bae7236def038d7aabe", "text": "Function to clone a proposal from the last contractor .", "title": "", "metadata": ""}
{"_id": "42efd4b3b60a9be501213c3f520687cf", "text": "One-way swap function , swaps NDC to purchasable tokens .", "title": "", "metadata": ""}
{"_id": "0b3c3c83bdec6b96a45ed2c87f5f6438", "text": "Set flags for given address .", "title": "", "metadata": ""}
{"_id": "590ee65e15b7bf996d0f7757d69b9f8f", "text": "Official games services .", "title": "", "metadata": ""}
{"_id": "ab7291dbbede35f79b44107a3a11183a", "text": "Query the number of tokens for which an address is locked .", "title": "", "metadata": ""}
{"_id": "c08002b9219c5e72a4d47020c0b32a9f", "text": "It will be possible to refund only if min ( soft ) cap is not reached and refund requested during 3 months after presale finished .", "title": "", "metadata": ""}
{"_id": "7138f1f7920a29470e20207551eb7567", "text": "sends ETH to CTB team .", "title": "", "metadata": ""}
{"_id": "425d871145b5046231583875c41ec1d4", "text": "Owner only .", "title": "", "metadata": ""}
{"_id": "811e7eee460c312c1d71a05677514647", "text": "function betOnLow_High bet type : lowhigh input : 0 for low input : 1 for low .", "title": "", "metadata": ""}
{"_id": "fcb4983bb8ef6502e75c1fb588723109", "text": "if ledger gets corrupt for unknown reasons , have a way to correct it : .", "title": "", "metadata": ""}
{"_id": "3d8ab052ca3120366fee25c0cc6b302e", "text": "Sets address that resolves hashes for fishing can only be called by the owner .", "title": "", "metadata": ""}
{"_id": "47bc40c7b2c574ad07859a7d307484da", "text": "Returns rest .", "title": "", "metadata": ""}
{"_id": "bc511101616055d6d440fb383c513eb6", "text": "send _value tokens to _to address from _from address if allowance allows .", "title": "", "metadata": ""}
{"_id": "44c72298a5919fcd24041805d316fc6c", "text": "Invest in USD .", "title": "", "metadata": ""}
{"_id": "ce8044925c22225bce97f9a9f504f111", "text": "Returns the data associated with the latest ERC20 transaction request in the form of a touple .", "title": "", "metadata": ""}
{"_id": "4e97072a6f7e4e983399372a009a6b2a", "text": "Allow crowdsale owner to change starts at in pre funding phase .", "title": "", "metadata": ""}
{"_id": "43c02d2fbb2cd39b48b95d8909d9f376", "text": "list the current sale price of a planet .", "title": "", "metadata": ""}
{"_id": "a49ff8b3b7369049e2be9bf7ff30203a", "text": "Price of MET at nth minute during initial auction .", "title": "", "metadata": ""}
{"_id": "5cc6c6514e6613bc56f21c2dd52c5327", "text": "Called by the hirer or contractor to request mutual cancellation once job has started .", "title": "", "metadata": ""}
{"_id": "23998618a8f1032604ae4f5638e658fc", "text": "For auction creator to retrieve ETH 1 day after auction ends .", "title": "", "metadata": ""}
{"_id": "0e1dfeef79882d035866e67bced32d6a", "text": "Funtion to determine the number of the current round .", "title": "", "metadata": ""}
{"_id": "994eac2f64966e56c5de407de4ea08f4", "text": "Refund to all address .", "title": "", "metadata": ""}
{"_id": "1cf27fa978c5a137f0352c6013940082", "text": "Set the contract that can call release and make the token transferable .", "title": "", "metadata": ""}
{"_id": "e64af9cc93ae3877acad526f87372780", "text": "Transfer the balance from owner's account to advisor's account .", "title": "", "metadata": ""}
{"_id": "0a45b6b0bc1add8f5594af45f518baff", "text": "Modifier to check whether the msg . sender .", "title": "", "metadata": ""}
{"_id": "c949c8f46e236fd006e8b439da1cbe30", "text": "setting this to 0 would just force all bets through oraclize , and setting to MAX_UINT_256 would never use oraclize .", "title": "", "metadata": ""}
{"_id": "8392b5a20a3bf7f9ebbcb02a5007db66", "text": "Calculates bonuses based on current stage .", "title": "", "metadata": ""}
{"_id": "410dd989b059faa58fc477f01d38af76", "text": "Add emission provider .", "title": "", "metadata": ""}
{"_id": "41ec4477ed8c628493a9cef8d0de0eca", "text": "Generates new ACO tokens during the ICO , after which the minting period will terminate permenantly .", "title": "", "metadata": ""}
{"_id": "a1e85ed83f1a7b18203f5ed364440fa8", "text": "Starts the redeeming phase of the contract .", "title": "", "metadata": ""}
{"_id": "d9249837112764bdfa08dc87a7db47f9", "text": "Return money to customer .", "title": "", "metadata": ""}
{"_id": "64deb0ce3d58484e56b9a62dc61700f8", "text": "Returns attached token .", "title": "", "metadata": ""}
{"_id": "ba365c703de2164a3336773223e903a5", "text": "Helper function which stores in memory an array which is passed in , and .", "title": "", "metadata": ""}
{"_id": "5d324222b65323b223b2859b9b0d4c44", "text": "gen0 monsters profit from shiny boost while shiny gen0s have potentially even higher IVs ! further increasing the rarity by also doubling the shiny chance ! .", "title": "", "metadata": ""}
{"_id": "576bdd075249aaf3281a72ba724e1111", "text": "Throws if called after crowdsale was finalized .", "title": "", "metadata": ""}
{"_id": "2c771338b524b3c76e080dc62360e253", "text": "Returns the count of all tokens in existence .", "title": "", "metadata": ""}
{"_id": "08b8cec8e47fcb566440fb0048978568", "text": "Shows the remaining tokens in the contract i . e .", "title": "", "metadata": ""}
{"_id": "d6f34cdeba7e83efd1db43bb940c13f0", "text": "Returns a new slice containing the same data as the current slice .", "title": "", "metadata": ""}
{"_id": "90d5f662d286a30fd9742215695ac88b", "text": "Sender deposits amount to channel .", "title": "", "metadata": ""}
{"_id": "999ee780f3b11faac28e210fbf6e78cb", "text": "Starmid exchange .", "title": "", "metadata": ""}
{"_id": "e023fc2d7fb74afec9f04c57820a6810", "text": "CHI buying function .", "title": "", "metadata": ""}
{"_id": "ca635144b7ac3cc86fb5d7b220e2b30c", "text": "Withdraw accumulated balance , called by payee .", "title": "", "metadata": ""}
{"_id": "381bb11321d329a9d6726cce9b9130d1", "text": "Only contract owner can burns a specific amount of tokens that he owns .", "title": "", "metadata": ""}
{"_id": "3a10b100da324fdb46acaaca77dea001", "text": "Allows the sender to register itself as a beneficiary for the airdrop .", "title": "", "metadata": ""}
{"_id": "7f607b860cc80695fb631aaeedc971f5", "text": "Total tokens on user address .", "title": "", "metadata": ""}
{"_id": "cd18219e7b215fd29f1881bb52f9c943", "text": "Withdraw the amount of token that is remaining in this contract .", "title": "", "metadata": ""}
{"_id": "bb9d25a830265e82e4e1b99a7906d44d", "text": "Remove white list contract after STE will be distributed .", "title": "", "metadata": ""}
{"_id": "f6138139b3cb47fad7dbb7f23466fb47", "text": "Computational cost .", "title": "", "metadata": ""}
{"_id": "60d66a2a9168808a12598ae9587adf22", "text": "Transfer _amount from msg . sender . address ( ) .", "title": "", "metadata": ""}
{"_id": "5b4d443ad2923289b99eaecfd45b3831", "text": "returns the conversion fee amount for a given return amount .", "title": "", "metadata": ""}
{"_id": "31b239e3410bb94f92cbf6a58fdca6ed", "text": "Respond to the survey .", "title": "", "metadata": ""}
{"_id": "e55b0cbc7236f000ecb5e5bdd09d570a", "text": "Returns the loan metadata , hashed with keccak256 .", "title": "", "metadata": ""}
{"_id": "339464a1fe5a1e37cea5218757602967", "text": "create a poll and store the address of the poll in this contract .", "title": "", "metadata": ""}
{"_id": "5ca12c2e607cca630827191d182e2914", "text": "Buy tokens , called internally from the catcher .", "title": "", "metadata": ""}
{"_id": "f87763f531749ec42248460de5c28941", "text": "Allows anyone to create a vault access .", "title": "", "metadata": ""}
{"_id": "50348dc7625dd17d4e95477807239636", "text": "Summon a hero .", "title": "", "metadata": ""}
{"_id": "0b546ae632fe423400beced4ccad050a", "text": "For Player .", "title": "", "metadata": ""}
{"_id": "d86be85f8771a39319dec2d4d22bcd68", "text": "Function to transfer tokens between addresses , only for Owner subOwner .", "title": "", "metadata": ""}
{"_id": "b8bc79a907a013036b95abed573cbf1e", "text": "Start or pause tradable to Transfer token .", "title": "", "metadata": ""}
{"_id": "be590b95abdf0449478b7c1b092d1f7c", "text": "The owner can suspend the sale if the HardCap has been achieved .", "title": "", "metadata": ""}
{"_id": "141600367b1655285996227e99e6df8e", "text": "Function to remove an address to the controllers .", "title": "", "metadata": ""}
{"_id": "3a7251832a63222138b56c5f6eb0f87c", "text": "get user course list .", "title": "", "metadata": ""}
{"_id": "c1a3762e646317bffdd4689d2f049653", "text": "true if presale is active .", "title": "", "metadata": ""}
{"_id": "d3e011cfa042cb82504dbc4f5afadc75", "text": "uint Vote count .", "title": "", "metadata": ""}
{"_id": "20351d08f2c8a0207acb0e37e8f91510", "text": "function call after ICO ends .", "title": "", "metadata": ""}
{"_id": "6e9a095e0597647a4383caafd8caf5f8", "text": "Allows setting hero data for a hero .", "title": "", "metadata": ""}
{"_id": "5433923e9c23588c4d0853f2fb649b55", "text": "getTemplateDetails is a constant function that gets template details .", "title": "", "metadata": ""}
{"_id": "cdfb76e73e65298cde1f28faae165058", "text": "Allows the owner to withdraw all unsold tokens to his wallet .", "title": "", "metadata": ""}
{"_id": "568d52736f50c15cbc9933a414395fae", "text": "reject waiting token .", "title": "", "metadata": ""}
{"_id": "30af78257d3e521b4e0c4bda1cc127e1", "text": "withdraw function to send token addresses or eth amounts to a list of receivers .", "title": "", "metadata": ""}
{"_id": "ac9ab24d0216dcd9ead3e6fe5142fcd3", "text": "SellEth average gas cost : 123173 .", "title": "", "metadata": ""}
{"_id": "b7a9220ca49e35ed7036b1ad70ff4f68", "text": "Returns how many wei an investor has invested .", "title": "", "metadata": ""}
{"_id": "8dbe46b47f3e941b9704b5d776bf6282", "text": "Splits the amount specified among shareholders equally .", "title": "", "metadata": ""}
{"_id": "de065386ebae8286d62bb119dd8c7708", "text": "Set address of upgrade target process .", "title": "", "metadata": ""}
{"_id": "bd62eaac8c34f4dcba5d3621ea08e381", "text": "burn all tokens assigned to '_address' .", "title": "", "metadata": ""}
{"_id": "5c676cd6b58d5c645b51cf64030ede99", "text": "Approve spender to spend the tokens ie approve allowance .", "title": "", "metadata": ""}
{"_id": "b988f684b0c41dfb17b77fbe1168d045", "text": "Transfer Enabled .", "title": "", "metadata": ""}
{"_id": "a0993e25cfe9c03d256c03c53e90a4b2", "text": "Sets parameters of the CrowdSale .", "title": "", "metadata": ""}
{"_id": "15d4b24802634c733623e4948b62c489", "text": "Insert node b beside existing node a in direction d .", "title": "", "metadata": ""}
{"_id": "38274dcd858a8c04215175145d521399", "text": "withdraw the commission .", "title": "", "metadata": ""}
{"_id": "88afd33d85ca92bc4a5af68d957079de", "text": "set Min Contribution .", "title": "", "metadata": ""}
{"_id": "bf9833c7b03e0cfaf410609a9bce343f", "text": "Only for functions that return bool success before any changes made .", "title": "", "metadata": ""}
{"_id": "b1a27711b294ff1ec3185e2ab3d70c03", "text": "knights are only entering the game completely , when they are teleported to the scene .", "title": "", "metadata": ""}
{"_id": "a4c403ef97b2c7b2e585b9a196a40104", "text": "updates the balance and updates the total invested amount .", "title": "", "metadata": ""}
{"_id": "39b1ca324c47a2d0d33146952b9f83c3", "text": "internal privats .", "title": "", "metadata": ""}
{"_id": "db710d79ad53ece16fad38b81e1022f0", "text": "total supply ( modified for etherscan display ) .", "title": "", "metadata": ""}
{"_id": "4138685581464c8a10cbb1d2121a9bd2", "text": "functions below give information about the game in Ethereum Wallet .", "title": "", "metadata": ""}
{"_id": "45bc58f18fbefeaac2278e899d66ec30", "text": "set end date .", "title": "", "metadata": ""}
{"_id": "cbffa3708fab403c7eddcf78987122a9", "text": "Stage time and conditions control .", "title": "", "metadata": ""}
{"_id": "344fdb3856c3256b4d16e9c6d7bd426c", "text": "owner can change price .", "title": "", "metadata": ""}
{"_id": "5ef264114253a44662af38f6b624c4e5", "text": "Transfer _amount of tokens ( must be sent as floating point number of token and decimal parts ) to _address from address _from without autoapproving .", "title": "", "metadata": ""}
{"_id": "9160426adae4075bce606e5475949550", "text": "distribute funds to all activities .", "title": "", "metadata": ""}
{"_id": "e9f92ff05580371500d0a09a9d6bc1e0", "text": "from 'manager' account only ( ! ) Gas requirement : infinite .", "title": "", "metadata": ""}
{"_id": "1d2f91662e6b5ec978a99dca6991a8db", "text": "filter normal Buyers in list buyer deposited .", "title": "", "metadata": ""}
{"_id": "57f71b8535a646478fc3d8f2337777f8", "text": "A modifier that provides a pre-check as to whether the sender is the owner .", "title": "", "metadata": ""}
{"_id": "d79d3954b31a3c298e267bc0b5852061", "text": "called by the owner to pause , returns to paused state .", "title": "", "metadata": ""}
{"_id": "61516446a4bb8cb97ec6c4195175a70f", "text": "Disable freezing for contract .", "title": "", "metadata": ""}
{"_id": "ccbcca51daa40dba69d4e549468faea1", "text": "Enable refund after sale .", "title": "", "metadata": ""}
{"_id": "e9808d8074ca6ef1b854e7fe78bcd51a", "text": "This function withdrawing all of developer's cut which is left in the contract by purchase .", "title": "", "metadata": ""}
{"_id": "cfd31d4412fc1d5b359c11b17f87ab8f", "text": "function for setting an ad for sale .", "title": "", "metadata": ""}
{"_id": "560f74ea30c758879f23a5d46fbbabf2", "text": "Set the STO contract by the issuer .", "title": "", "metadata": ""}
{"_id": "0a9a68d0c474d7242d07ac73fd4609ca", "text": "Overriden to add finalization logic .", "title": "", "metadata": ""}
{"_id": "5ec7199637bc1f7c4d04cd404cf826e4", "text": "TokenERC20 ( initialSupply , tokenName , tokenSymbol ) public .", "title": "", "metadata": ""}
{"_id": "349553584a8d328712996fbfc9b53885", "text": "functions for the mini me token .", "title": "", "metadata": ""}
{"_id": "a46e0061f0070f0139e588733f312830", "text": "Premium for buying TITS at the begining of ICO .", "title": "", "metadata": ""}
{"_id": "5ff05b3ce61a7554d893418750c8072d", "text": "Mint RHEM tokens .", "title": "", "metadata": ""}
{"_id": "11f45a9070eb3f08eb20da137a672793", "text": "Verify that address is signed with correct private key for verification public key assigned to transfer .", "title": "", "metadata": ""}
{"_id": "3b2d1f12bc86a8ea83b458506f916790", "text": "Returns list of transaction IDs in defined range .", "title": "", "metadata": ""}
{"_id": "5adcafaf20486f8d512762bfeb4a806e", "text": "transfer the ownership to other - Only the owner can operate .", "title": "", "metadata": ""}
{"_id": "c2c0fc6ec7f0b118a6d1112cb6170195", "text": "Check balance of an address .", "title": "", "metadata": ""}
{"_id": "16f13293cbbb71b5e876db26300522a9", "text": "Allows _spender to spend no more than _value coins from your account .", "title": "", "metadata": ""}
{"_id": "42e94db1731d3c22c31063b3caba7b07", "text": "If there is no existing kingdom called _kingdomName , create a record mapping that name to kingdom no .", "title": "", "metadata": ""}
{"_id": "c59a514bec4ec16e7e4735ed63ccbee9", "text": "takes in genes and returns raceId race is first loci after version .", "title": "", "metadata": ""}
{"_id": "e5f6283ee09ff1ad443ce830114fc237", "text": "Purchase CryptoColor from previous owner .", "title": "", "metadata": ""}
{"_id": "8cc14734d5e42cbc06c30f9cb3686bd5", "text": "Returns true if all purchases are finished .", "title": "", "metadata": ""}
{"_id": "776cbff75cf4bf54ccca3fecec8c9e6f", "text": "Account address of the next token holder .", "title": "", "metadata": ""}
{"_id": "57afd5ee0ee18ddc40ad94171952b0b3", "text": "For creating item .", "title": "", "metadata": ""}
{"_id": "ab29c19fc9910a1a5ddf5c6523699a01", "text": "Burns a specific token .", "title": "", "metadata": ""}
{"_id": "f097841bc4d202beca83f3c21dc0fa16", "text": "Add a sale period with its default rate .", "title": "", "metadata": ""}
{"_id": "0abf4d46da574c204253efda213dc705", "text": "Creates a vesting contract that vests its balance of any ERC20 token to the _beneficiary , gradually in a linear fashion until _start + _duration .", "title": "", "metadata": ""}
{"_id": "755a28a9204984001587cc1e6a72e799", "text": "ERC-20 related .", "title": "", "metadata": ""}
{"_id": "fb048d98968104cf0ddc6463bf4e3114", "text": "Ensure phase 1 is in progress .", "title": "", "metadata": ""}
{"_id": "741350a0588df9a4858f452b4a25faf4", "text": "Send to multiple addresses using two arrays which includes the address and the amount .", "title": "", "metadata": ""}
{"_id": "8858f027ee69e5278814efe72569e684", "text": "Allow an address to participate in the crowd sale up to some limit .", "title": "", "metadata": ""}
{"_id": "82cdbe039ed8d855ac0130bfa6ef6d98", "text": "Garantee index and token are valid value .", "title": "", "metadata": ""}
{"_id": "e29cff3648f18c7e348ce1a71cf8b4be", "text": "Update the global minimum contribution .", "title": "", "metadata": ""}
{"_id": "b2deb33be0cba398d73efa7e86398ffd", "text": "Set the crowdsale Agent .", "title": "", "metadata": ""}
{"_id": "609aed7b2f91a0e3156d948c36710ce4", "text": "One-way swapFor function , swaps NDC for purchasable token for a given spender .", "title": "", "metadata": ""}
{"_id": "99667536fdf851ee598d69ce04060341", "text": "Sets the color of the pixels in an area , left to right and then top to bottom .", "title": "", "metadata": ""}
{"_id": "1fa4f3648db278d6df3d6a2af26a360c", "text": "Calculate the current price for buy in amount .", "title": "", "metadata": ""}
{"_id": "424ab5c1fd26d926a0f4846552eaa785", "text": "Receiving STA from miners - during and after ICO .", "title": "", "metadata": ""}
{"_id": "60c69a29374873829e0ed1b8df3057ae", "text": "Takes in array of hashed data points of the entire dataset , submission and evaluation times .", "title": "", "metadata": ""}
{"_id": "7029597cfaa3b82da661db145307ef45", "text": "Throws if stopped is false .", "title": "", "metadata": ""}
{"_id": "1642c9cb43192809c3bb48cb51320ae9", "text": "return array of address of all shop .", "title": "", "metadata": ""}
{"_id": "f75b822fcbf744210f6678c5313c1629", "text": "Update the address of the data and logic layer .", "title": "", "metadata": ""}
{"_id": "da14323086c5663f08c144bf3ecd0a01", "text": "Full Refund of Current Round ( if needed ) .", "title": "", "metadata": ""}
{"_id": "aa2ebf493f9864068c065387701c74e5", "text": "mint ICO Left Token .", "title": "", "metadata": ""}
{"_id": "2a1312bebf8eadcf1d45eff49a0df1e6", "text": "throws if person sending is not authorised or sends nothing or we are out of time .", "title": "", "metadata": ""}
{"_id": "57b47d39e39db092665dc0996889240e", "text": "Transfers tokens from msg . sender .", "title": "", "metadata": ""}
{"_id": "e8b8049fce5413f047421d0205613123", "text": "Selling from the available tokens ( on owner wallet ) that we collected after each sale end .", "title": "", "metadata": ""}
{"_id": "4abfeb868ecbffb2292397dacbec2979", "text": "get meta information .", "title": "", "metadata": ""}
{"_id": "ca01f37323bb5bf436c7460820020634", "text": "creates a new converter with the given arguments and transfers the ownership and management to the sender .", "title": "", "metadata": ""}
{"_id": "3a5ab2284c6531f4259f95aa5ebd3d67", "text": "Buy the block with somebody owned already .", "title": "", "metadata": ""}
{"_id": "707915fcefb3b804a4d1c6103d61bd58", "text": "Only allow the team to execute these commands .", "title": "", "metadata": ""}
{"_id": "e6dbd442d75265fa3545e05a1ea2345d", "text": "Token must be released to execute .", "title": "", "metadata": ""}
{"_id": "433787f1ab088cc51007ccc2be36a822", "text": "Updates the required amount of faith to get a portion of the consolation rewards .", "title": "", "metadata": ""}
{"_id": "a1b635ea59933bb0ee63f5a150dfbbd3", "text": "removes tokens from an account and decreases the token supply can only be called by the contract owner ( if robbers detected , if will be consensus about token amount ) .", "title": "", "metadata": ""}
{"_id": "9632358a23865f303ff878204c45c8a6", "text": "Use these getter functions to access the internal variables in an inherited contract .", "title": "", "metadata": ""}
{"_id": "0bb52cc50840203893b0ebf803a69a09", "text": "overriding Crowdsale buyTokens to add extra tokenCap logic .", "title": "", "metadata": ""}
{"_id": "9642a2e4f280dac6fb6c7c03406c6e19", "text": "The allocated eth balance .", "title": "", "metadata": ""}
{"_id": "aa99999af29e15047e079dfae7d43255", "text": "An external method that creates a new avatar and stores it .", "title": "", "metadata": ""}
{"_id": "e4d9a3bde771796a3326a447fb0db034", "text": "Check if Ethergotchi should be excluded from migration .", "title": "", "metadata": ""}
{"_id": "33768a3e8e96cc4bb8341c996a2760bf", "text": "called by the owner to unpause , returns to normal state , Start .", "title": "", "metadata": ""}
{"_id": "9fb6eb11b447e28ce87f9a6e96c5832f", "text": "called to pay the investor .", "title": "", "metadata": ""}
{"_id": "8d63c0ba3db64ef97e826385dfaf5f5e", "text": "Check if presale has ended .", "title": "", "metadata": ""}
{"_id": "9e8b9b895c8e0c813a6392bce1bac394", "text": "Preallocate a locked-up portion of tokens .", "title": "", "metadata": ""}
{"_id": "00b5fd385f897d78369ee9701ecce84d", "text": "Storage seed for a script executor's execution permission mapping .", "title": "", "metadata": ""}
{"_id": "bc7dd0a73f5ccbd754566c0b3f246e41", "text": "main function to buy tokens .", "title": "", "metadata": ""}
{"_id": "29820b77d0b59c1468eb858c15244727", "text": "Admin function to set the price of submitting a location .", "title": "", "metadata": ""}
{"_id": "3d4517c0a30cea83bff3a03615cf6ac1", "text": "issueSecurityTokens is used by the STO to keep track of STO investors .", "title": "", "metadata": ""}
{"_id": "9a4f48e01e357f163c6c9eb46f1c088c", "text": "How many investment remained ? Maximum investment is poolCapUSD .", "title": "", "metadata": ""}
{"_id": "6424ab7b4bc14e4c8095d341f057a8dd", "text": "amount of euro collected .", "title": "", "metadata": ""}
{"_id": "673b1b03b5851440ca890a99d1b7d213", "text": "( uint8 CurrentEntityState , uint8 EntityStateRequired ) .", "title": "", "metadata": ""}
{"_id": "84a5e25a863950c87247c46e418ff159", "text": "Computes the next miner auction starting price , given the average of the past 5 prices * 2 .", "title": "", "metadata": ""}
{"_id": "090d6fce696097ce6b50d001912e94f7", "text": "set manager's address .", "title": "", "metadata": ""}
{"_id": "06a114e3585e750c73ee28e608d8688c", "text": "Withdraws PAY claimed by the user .", "title": "", "metadata": ""}
{"_id": "449946883709dd4d8d79c5a08372312c", "text": "Remaining tokens third party spender has to send .", "title": "", "metadata": ""}
{"_id": "05825d8204443d5a339173b9b24609cf", "text": "Create a new mission .", "title": "", "metadata": ""}
{"_id": "09996f047711405320535b7e5e4887d5", "text": "Checks if owner addresss is calling .", "title": "", "metadata": ""}
{"_id": "77d5d038d22fa70a21c18549df367c14", "text": "gets a line in the composition for viewing purposes and to prevent having to get the whole composition at once .", "title": "", "metadata": ""}
{"_id": "033e73fdbc6c45faa4fa54c0bcdc15b3", "text": "special functions for ICO .", "title": "", "metadata": ""}
{"_id": "75ef742f4ae227e9fe7cff344be1f833", "text": "Change the feeTake amount .", "title": "", "metadata": ""}
{"_id": "ac9a5dc59c8e36b9613b5133acb5da46", "text": "Queries the owner of the token .", "title": "", "metadata": ""}
{"_id": "15707e4da5c70311c730d8f46d0a5cca", "text": "Change the feeRebate amount .", "title": "", "metadata": ""}
{"_id": "33b44296f0835c9fb50d0ca7d7e74b1b", "text": "Returns the original sender from memory .", "title": "", "metadata": ""}
{"_id": "21a9c363a33b96a3d59833e7ebb5bed0", "text": "Requires the hard cap to be respected given the desired amount for buyin .", "title": "", "metadata": ""}
{"_id": "0c373b95febb37681efeafe63a539215", "text": "After calling the deploy function the crowdsale rules become immutable .", "title": "", "metadata": ""}
{"_id": "2dbe71f9a325a3d727f0532bf7d662f4", "text": "Internal method that makes sure that the given signature corresponds to a given data and is made by signer .", "title": "", "metadata": ""}
{"_id": "9612c40488f226e71525ff18b02adbcf", "text": "Function transfers token for a specified address .", "title": "", "metadata": ""}
{"_id": "c4e150b71a073db9944bebb092e8e252", "text": "Check if address is a valid destination to transfer tokens to - must not be zero address - must not be the token address - must not be the owner's address - must not be the admin's address - must not be the token offering contract address - must not be the beneficiary address .", "title": "", "metadata": ""}
{"_id": "cdc08f4c75d64fda30b550df7d82828f", "text": "Allows the owner to change minimum payment .", "title": "", "metadata": ""}
{"_id": "3c0bd8d6e9e5175a51d492616367a7d7", "text": "Proceeds with the contract .", "title": "", "metadata": ""}
{"_id": "f2b1605aa00a9578defe8430712f20f4", "text": "the StandardToken created .", "title": "", "metadata": ""}
{"_id": "9026ba33fa99608cdc484e09eecfea2b", "text": "Basic entry point for buy insurance .", "title": "", "metadata": ""}
{"_id": "765255595bce1d75cc2e99f9b7c1fcf2", "text": "Set the halted tag when the emergent case happened .", "title": "", "metadata": ""}
{"_id": "3f800a9a4d20809737a47d95491f0c4e", "text": "Return the current number of unsold tokens .", "title": "", "metadata": ""}
{"_id": "de767e2f931c2d71d96d744ee776c0c8", "text": "add a new token into the token list , only admins .", "title": "", "metadata": ""}
{"_id": "7b42c662f7ffac7e29e8c504b990631a", "text": "Notifies the controller about a transfer , for this Campaign all transfers are allowed by default and no extra notifications are needed .", "title": "", "metadata": ""}
{"_id": "f46771c7fc75e2bd4b0750c6313b5742", "text": "Returns the links of a node as a tuple .", "title": "", "metadata": ""}
{"_id": "1df746af4d692d7fb46bd07bead99e81", "text": "called to mint bonus tokens to founders .", "title": "", "metadata": ""}
{"_id": "15ad6ca5624e0a2b2fb0873792ec2bef", "text": "Get number of addresses .", "title": "", "metadata": ""}
{"_id": "eb80a56f3a1340f712ca5fac1bfbd322", "text": "Drop last leader from board and return his / her funds .", "title": "", "metadata": ""}
{"_id": "4b93a0e4c104f9963c81ae128d2a7a59", "text": "STEP 6 : callback from the RNG provider - find the winner based on the generated random number .", "title": "", "metadata": ""}
{"_id": "b0400d8b74d17a837adb8bd3dc305d84", "text": "Returns balance to owner .", "title": "", "metadata": ""}
{"_id": "f02acc5b5d1c7d89a0d9e034820976b2", "text": "Compute the minimum activated pinakions in alpha .", "title": "", "metadata": ""}
{"_id": "75918e7c2eb84b2bb1ae3df080fdc102", "text": "Convert bytes32 to string .", "title": "", "metadata": ""}
{"_id": "1155e7657abb5a68dc6aacc5b5842ab5", "text": "Check Genuine of owner .", "title": "", "metadata": ""}
{"_id": "24b4adcd785d2c5440e772dd584198b2", "text": "Of course , calls to internal functions use the internal calling convention , which means that all internal types can be passed and memory types will be passed by reference and not copied .", "title": "", "metadata": ""}
{"_id": "fa87c8d1c681084f36c6b1a99981f129", "text": "The external function to set the hero genes by its ID , only contract owners can alter hero state .", "title": "", "metadata": ""}
{"_id": "7578d11e1cf3034f440a01f6c37bada7", "text": "Remember you need pre-approval for this - nice with ApproveAndCall .", "title": "", "metadata": ""}
{"_id": "b540404cb3d157f03cb2258d58675442", "text": "Get an address's TTT allowance .", "title": "", "metadata": ""}
{"_id": "cab6f53e023d5a410d06dba0617fb587", "text": "Getter to find Delegate w / the Pledge ID the Delegate index .", "title": "", "metadata": ""}
{"_id": "b6ef6ef62cfb783176fbf368120333f4", "text": "Close allowance for AiraEthBot .", "title": "", "metadata": ""}
{"_id": "9bd8cb8a7db92a58978967eccefbd90f", "text": "Modifier to make a function only callable by CEO or CFO .", "title": "", "metadata": ""}
{"_id": "bead34d332dd1f10ce8fb9dcf07bc359", "text": "Stake Reward Function .", "title": "", "metadata": ""}
{"_id": "3086085b8ded03f9feacfbec23d8b6cf", "text": "changes needed for refactoring enchanted items have a recommended bid which increases your likelihood of obtaining the item .", "title": "", "metadata": ""}
{"_id": "7ba8ee900d7bff4aefc2a4bbe383e33f", "text": "Calculate the current game's base timeout .", "title": "", "metadata": ""}
{"_id": "f23dd7b07a4a28dbb4e934bf2d748e74", "text": "Allows for msg . sender .", "title": "", "metadata": ""}
{"_id": "eb5db0e41349dd7a550c7bef3ba70a59", "text": "Creates SER tokens .", "title": "", "metadata": ""}
{"_id": "617b9bf8e56519667c526913c5884f71", "text": "Allocate interest .", "title": "", "metadata": ""}
{"_id": "bf76464c4f2fc1a9d03577e123d805ad", "text": "Deposits , Withdrawals , Balances .", "title": "", "metadata": ""}
{"_id": "12789bfebafee4e95b5a755ebfa5c205", "text": "unverified investors can withdraw their money only after the VREO Sale ended .", "title": "", "metadata": ""}
{"_id": "820b83ff75faad00cd15c801a178e9f5", "text": "Allows participants to claim refund for all their purchased tokens .", "title": "", "metadata": ""}
{"_id": "8c931cc858bc1bcfbf254ad6ec9a7458", "text": "admin function to transfer in the GETX according to the rate the admin should transfer policyTokenBalanceFromEther to this pool later .", "title": "", "metadata": ""}
{"_id": "6d8b4655451fcd5191c3228ccf2bb350", "text": "Request arbitration , freezing the question until we send submitAnswerByArbitrator .", "title": "", "metadata": ""}
{"_id": "affd8a7b038b3c6cd30422904dc37f88", "text": "moves the promise to the new state and updates the locked / pending totals accordingly .", "title": "", "metadata": ""}
{"_id": "4f5f190f28168eca8cebd4687f59eb91", "text": "This is called on the initial buy card , user to user buy is at buyCard ( ) .", "title": "", "metadata": ""}
{"_id": "a68e36a76d61bcdb910955e6d98258e8", "text": "Redistribute proceeds from token purchase .", "title": "", "metadata": ""}
{"_id": "83b994d6afe77a9850db03e56f6f8df9", "text": "return current contract balance .", "title": "", "metadata": ""}
{"_id": "fd1c7f4a1c3c53056903ddf236a73456", "text": "Is window close .", "title": "", "metadata": ""}
{"_id": "ff253c1f1574196c386278428c4602bf", "text": "The initialization method that creates a new mintable token .", "title": "", "metadata": ""}
{"_id": "740e9436b3892de7499a26cab33586c2", "text": "batch transfer for ERC20 token . ( the .", "title": "", "metadata": ""}
{"_id": "94b77f99768177a4168d9811d485d0d6", "text": "Facilitates the assignment of investor addresses and amounts ( only before contract is finalized ) .", "title": "", "metadata": ""}
{"_id": "4b160d67d1a31edd61b6554a85f24bac", "text": "Modifier that checks that the contract is paused .", "title": "", "metadata": ""}
{"_id": "45d2c6c8d5f9ef68954c7cf1e04c3991", "text": "Get the time a specified DIN record was last updated .", "title": "", "metadata": ""}
{"_id": "71403e57725758518a66df3baf8a616c", "text": "Function to remove discount .", "title": "", "metadata": ""}
{"_id": "c3a8a41bc4419f65eddc1e7cfe0a67cc", "text": "Send money of the pool to the winner ( public ) .", "title": "", "metadata": ""}
{"_id": "feb4c53fd33fb6461e8be52c68027b77", "text": "Mail method that contains tokensale logic .", "title": "", "metadata": ""}
{"_id": "091d77b681f1a0becd883be06adcdd9c", "text": "Transfers the deed to the current registrar , if different from this one .", "title": "", "metadata": ""}
{"_id": "500a18688eaad87418e6827d813a6754", "text": "Remove buyers from the reinforced whitelist .", "title": "", "metadata": ""}
{"_id": "cac450b1ed14f35ba088568d87e1cbfa", "text": "Allow the owner to payout outstanding wagers on others' behalf .", "title": "", "metadata": ""}
{"_id": "4f892ff74162299a331c01f31e8f4c62", "text": "send ether to the fund collection wallet .", "title": "", "metadata": ""}
{"_id": "b02b1bf3882fb00341d7e6bc8fff87f9", "text": "ERC20 Updated decrease approval process ( to prevent double-spend attack but remove need to zero allowance before setting ) .", "title": "", "metadata": ""}
{"_id": "9a6a9d0bb05c2b6af04f942c00b92c60", "text": "Used only by the wizard to check his commission .", "title": "", "metadata": ""}
{"_id": "fa5e17344b779c37eeb11818148c8cbc", "text": "Override validation of an incoming purchase .", "title": "", "metadata": ""}
{"_id": "ef16b58824fa89d48936f0e8ae898657", "text": "Verifies a confirming owner has not confirmed already .", "title": "", "metadata": ""}
{"_id": "2e774703232029920d14e1930554befb", "text": "Show the name of the identity in string ( for Etherscan read-only function ) .", "title": "", "metadata": ""}
{"_id": "b574a3da7f3c00664b51a90ccc5418ce", "text": "Function to burns a specific amount of tokens .", "title": "", "metadata": ""}
{"_id": "0709734d852b3e77736a634d73f714fc", "text": "it will change the ending date of ico and access by owner only .", "title": "", "metadata": ""}
{"_id": "fc98b9668a78f43a48a20b8f3b229bf8", "text": "This function is used to stop using the service .", "title": "", "metadata": ""}
{"_id": "34b92210a145d44f872958376624645c", "text": "Converts ETH dividends to PoWTF tokens .", "title": "", "metadata": ""}
{"_id": "db911aa6d630b809c3cd001e9aea85fe", "text": "sets percentage for bounty's wallet .", "title": "", "metadata": ""}
{"_id": "a6fd73188115518d8ef06bdd2583f663", "text": "Transfer to multiple addresses to a different number of tokens .", "title": "", "metadata": ""}
{"_id": "674698089fc5e87b6dfcff6a02bfd8df", "text": "buy a planet .", "title": "", "metadata": ""}
{"_id": "d7c2459c6ef0ff2c293f835c822fc06d", "text": "Decrease the amounts of tokens that an owner allowed to a spender .", "title": "", "metadata": ""}
{"_id": "23d9135dc8421f1bb5db52d755793be6", "text": "Add new payer by payer .", "title": "", "metadata": ""}
{"_id": "f9933150d1c6323556745561ef55001c", "text": "Returns a number between 1 and 100 ( inclusive ) .", "title": "", "metadata": ""}
{"_id": "1c64c51036067682e75b1c5a13a72b65", "text": "Returns number of tokens in circulation .", "title": "", "metadata": ""}
{"_id": "e126f269a0a8008bf24d82e986e5c161", "text": "Function to verify that all the requirements to transfer are satisfied .", "title": "", "metadata": ""}
{"_id": "f60e1a9303186ee3db1c8a139f5bd282", "text": "Reset the starting and ending times for the next round .", "title": "", "metadata": ""}
{"_id": "b86247d064ca953ebab644783a8824bb", "text": "Function to set new admin address .", "title": "", "metadata": ""}
{"_id": "3e87fabf08eb284d73ca33b03270e0c7", "text": "Checks if the sale is Live .", "title": "", "metadata": ""}
{"_id": "8034eee4f32e71b7e8cd6e3d6f788847", "text": "send waiting tokens to customer's balance .", "title": "", "metadata": ""}
{"_id": "3a430daf5427ef3c49af1cdc64724b23", "text": "What's my girth ? .", "title": "", "metadata": ""}
{"_id": "ab8c7c6afecc66311202be259f05bd54", "text": "Distribute ether to holder s according to ratio .", "title": "", "metadata": ""}
{"_id": "1099c75747f310af9ab07194802e566c", "text": "Allows EGR holders to vote on the poposed transfer of ownership .", "title": "", "metadata": ""}
{"_id": "5782125ebe312554275db2cc5e894b39", "text": "Pause the crowdsale .", "title": "", "metadata": ""}
{"_id": "5c1c5eb3d09ba8f161b5e5eb995ef203", "text": "Buy in staking pool , transfer ethereum in the contract , pay 2 fee .", "title": "", "metadata": ""}
{"_id": "4101ebfd826fd2fe0c9bfc3f857aed35", "text": "Public methods outside lottery flow .", "title": "", "metadata": ""}
{"_id": "2ca9b1b84229d0164917da1deeede478", "text": "useful for Dapp , to get array using loop .", "title": "", "metadata": ""}
{"_id": "c03cd9f93e3dfd3ef2da016a466ceb0f", "text": "triggers some state changes based on current time .", "title": "", "metadata": ""}
{"_id": "9a741a369929d1533b40243ae1e97a03", "text": "Proxy transfer HC token .", "title": "", "metadata": ""}
{"_id": "d46649886d8f66bf90dca44a37662479", "text": "Allocate tokens to an early contributor from the early contributor share .", "title": "", "metadata": ""}
{"_id": "bad40a2ed00acb1e1c9aef0d98f936dc", "text": "Returns the ERC20 token balance of a given account .", "title": "", "metadata": ""}
{"_id": "6f161b32a68aec3a6983053950ab9679", "text": "Get the total count of tokens purchased in all the Sale periods .", "title": "", "metadata": ""}
{"_id": "986920f83f19334f59feea02f555768c", "text": "Generates _amount tokens to be assigned to _tokenHolder .", "title": "", "metadata": ""}
{"_id": "8421efc531f641dc2ef837c24222b2df", "text": "public entry point for the _checkOrder function .", "title": "", "metadata": ""}
{"_id": "4c92d5ea45887aa9e1eaab2fedef492c", "text": "Place an unsealed purchase order immediately .", "title": "", "metadata": ""}
{"_id": "5c3b0e6cc484729a5c535d97cf72afc8", "text": "Calculate how much user can contribute .", "title": "", "metadata": ""}
{"_id": "c5c15729097264ab9ad77b0124eaecd0", "text": "Callable only by Zlots .", "title": "", "metadata": ""}
{"_id": "890b4c912e4c5ee859ecdca38863d83f", "text": "internal implementation for transfer with recounting rewards .", "title": "", "metadata": ""}
{"_id": "183ab77a4aeaac5caade94676547af97", "text": "transfer the token with id _partId to buying address .", "title": "", "metadata": ""}
{"_id": "92daea0d3c85ed1c95cda83fd7fbc977", "text": "Ensures the sender is a transfer agent , or that the tokens are unlocked .", "title": "", "metadata": ""}
{"_id": "c6da3a743e32f8efc06311b22be58aad", "text": "Return total active stake for a round .", "title": "", "metadata": ""}
{"_id": "70be228252ac2caa604b7c34852bbfa7", "text": "Get functions .", "title": "", "metadata": ""}
{"_id": "d8bb4af98b0b87d025ae3a1241f107d8", "text": "Only assigned proxy is allowed to call .", "title": "", "metadata": ""}
{"_id": "462a500a11d8ee25ae904f91a73beff5", "text": "Get HopefulId from registrant address .", "title": "", "metadata": ""}
{"_id": "f7c22fad921648edd2a68d949800a6d5", "text": "Check ordering as well , since ordering assumptions are made in _callback and elsewhere .", "title": "", "metadata": ""}
{"_id": "202c285e3d2cc83b7b0d152c5dc2ff42", "text": "Set the address of the holder of bounty tokens .", "title": "", "metadata": ""}
{"_id": "370dd5bc347be9eacb16ba3769b3dd3b", "text": "Prohibition if the current state was not before .", "title": "", "metadata": ""}
{"_id": "b4a8c8a863bc1473f8f36db10c420f3f", "text": "Check balance of token of each phase .", "title": "", "metadata": ""}
{"_id": "bcd6bf169c82c46c3152af5f256155b4", "text": "Override MintableTokenn . finishMinting ( ) .", "title": "", "metadata": ""}
{"_id": "2cc1ce8045ce226f989051995a1a382f", "text": "removes tokens from an account and decreases the token supply can be called by the contract owner to destroy tokens from any account or by any holder to destroy tokens from his / her own account .", "title": "", "metadata": ""}
{"_id": "084ea5b8f220872031afae54b04d5527", "text": "Returns the holder's withdrawable balance of ether .", "title": "", "metadata": ""}
{"_id": "d0156569132069d7dab1869ed1b6690b", "text": "Function to return the soldiers count of an army .", "title": "", "metadata": ""}
{"_id": "91d9a34568c67c702f37cfd7a9cbe05e", "text": "Minimal query for battle contract .", "title": "", "metadata": ""}
{"_id": "5d977ee191de7c49aabcb3c451230006", "text": "Basic Token Functions .", "title": "", "metadata": ""}
{"_id": "bb3f0fad8c87794000a918a12026e8b7", "text": "setting 'crowdsaleContract' variable .", "title": "", "metadata": ""}
{"_id": "56688907109567047094ba8c2483f62e", "text": "Pause Round C .", "title": "", "metadata": ""}
{"_id": "09c23ca3f710d3131ae08161e37dc6eb", "text": "It is possible to hand over hiddenOwner s authority .", "title": "", "metadata": ""}
{"_id": "068b7592564c56fef4b768f1894e20b0", "text": "Checks whether the period in which the pre-sale is open has already elapsed and whether pre-sale cap has been reached .", "title": "", "metadata": ""}
{"_id": "d076ff888edd4b7aeed4e94b8f82c932", "text": "the keys that one could buy at a stage using _eth .", "title": "", "metadata": ""}
{"_id": "2f2b4c35605ba9a8645d6bd68c48835d", "text": "true if all unsold tokens are allocated .", "title": "", "metadata": ""}
{"_id": "ed30caee43e1355ded2a51584de160d2", "text": "Keeping track of addresses in an array is useful as mappings are not iterable .", "title": "", "metadata": ""}
{"_id": "482e48819ffb2ac13f43d4e456c1b27a", "text": "Assigns a new address to act as the Banker .", "title": "", "metadata": ""}
{"_id": "c393ee0afd4bc64114b8bc60c5f8911d", "text": "owner balance will be increased by _value .", "title": "", "metadata": ""}
{"_id": "0e38572357c8ac931945d595a6bef704", "text": "Transfer given number of token from the signed defined by digital signature to given recipient .", "title": "", "metadata": ""}
{"_id": "5f5fd8391fcc1d2e098ee812a4820be0", "text": "Remove authorized users .", "title": "", "metadata": ""}
{"_id": "9c9869bb252760cd5421672af5ae884e", "text": "Check whether an address is a regular address or not .", "title": "", "metadata": ""}
{"_id": "9c72e02c4ccf6405ffd8feaa1560685f", "text": "change transfer status for WorldFarmCoin token .", "title": "", "metadata": ""}
{"_id": "590e21e2dc9a24df0e2acb3f2d72097f", "text": "Access-modifier for CFO-only functionality .", "title": "", "metadata": ""}
{"_id": "8f34abe1fb6271b35ed4d9729e747ec1", "text": "Same as setSale , but must be called from the current active sale and doesn't need multisigning ( it's done in the finishSale call anyway ) .", "title": "", "metadata": ""}
{"_id": "cbfebf811a24fa40edaa64dfa11f5144", "text": "does not require that crowdsale hasEnded ( ) to leave safegaurd in place if ETH rises in price too much during crowdsale .", "title": "", "metadata": ""}
{"_id": "b32282bccc31113096233fd5c0257fd7", "text": "The total amount of tokens .", "title": "", "metadata": ""}
{"_id": "cd3bf753ecb39586dbd17814b5d5735b", "text": "Perform the initial token distribution according to the Drone Madness crowdsale rules .", "title": "", "metadata": ""}
{"_id": "5c583edaa43bd2b15509074333362ff1", "text": "Sends ordered tokens to investors after ICO end if soft cap is reached tokens can be send only if ico has ended .", "title": "", "metadata": ""}
{"_id": "259215fdd6d3075ce35444c41800d742", "text": "Start accepting payments .", "title": "", "metadata": ""}
{"_id": "4fa4541e3c7e291026c2f033c584d5c2", "text": "Allow the current owner to change the owner of the crowdsale .", "title": "", "metadata": ""}
{"_id": "7e02ec4ade055ec7574c5898ed82b590", "text": "Whether the crowdsale and token are configured , and the sale is ready to run .", "title": "", "metadata": ""}
{"_id": "2f002cd582121801167ea1bfa5b15980", "text": "Transfer with short address attack protection .", "title": "", "metadata": ""}
{"_id": "76a83a55fc0c05575744e27c95d79749", "text": "ed trade .", "title": "", "metadata": ""}
{"_id": "4d163a6d0fa227b1e880d84214f3ac9a", "text": "Close pre ICO and transfer all unsold tokens to main sale wallet .", "title": "", "metadata": ""}
{"_id": "a3016de05bef7cad090c3f026832fd3d", "text": "initiator can withdraw the remaining balance only if : .", "title": "", "metadata": ""}
{"_id": "52a33998c85375f9120beeb2f65526ab", "text": "change owner of ethworld content .", "title": "", "metadata": ""}
{"_id": "f3e1ed1c26486108c6c2902c550cbcfd", "text": "Function to check if crowdsale is complete ( have we eigher hit our max , or passed the crowdsale completion block ? ) .", "title": "", "metadata": ""}
{"_id": "1a7a9856194168a0a059a9fb1f659e55", "text": "This is called by anyone when a new MonarchyGame should be started .", "title": "", "metadata": ""}
{"_id": "85b0b3530bfd0a59b9be7c928700e4d4", "text": "Verify that address is signed with correct verification private key .", "title": "", "metadata": ""}
{"_id": "12f877210fae32d40a50f460f37cdc4e", "text": "converts the token to any other token in the BNC network by following a predefined conversion path note that when converting from an ERC20 token ( as opposed to a smart token ) , allowance must be set beforehand .", "title": "", "metadata": ""}
{"_id": "ac85e08b79cd07801d159b121e5467f4", "text": "Attempt to pay the winners , if any .", "title": "", "metadata": ""}
{"_id": "87d3cfca61e5285ecc8b03f9aaf3c273", "text": "This is the initialisation function for a new legal contract .", "title": "", "metadata": ""}
{"_id": "81a0a66d1d066b0400a8dea688f011db", "text": "Address of the price setter .", "title": "", "metadata": ""}
{"_id": "81fb2d4cf9661a6eaf800265e6e7b517", "text": "if accidentally other token was donated to Project Dev .", "title": "", "metadata": ""}
{"_id": "5e4d851953e52f3354e2bbb8222e3441", "text": "The finalize ( ) should only be called after donation hard cap reached or the campaign reached the final day .", "title": "", "metadata": ""}
{"_id": "0cdc1405018dbe32d2041be468163736", "text": "The external function that creates a new dungeon and stores it , only contract owners can create new token , and will be restricted by the DUNGEON_CREATION_LIMIT .", "title": "", "metadata": ""}
{"_id": "d3f3a5055d4d666924c6767cdbb8c45a", "text": "Withdraw unusold tokens .", "title": "", "metadata": ""}
{"_id": "8316d809e96778145e2fb507fa0cafb6", "text": "create simple unlocked deposit , required by some services .", "title": "", "metadata": ""}
{"_id": "59a85a346c227e53de8f6f81fadf085e", "text": "Adds cashier account responsible for manual token issuance .", "title": "", "metadata": ""}
{"_id": "0c2626c008ad1cc1388587a84b156036", "text": "Change the private contribution , in ether , wei units .", "title": "", "metadata": ""}
{"_id": "d641d1abc98cb174edae1182556e062d", "text": "Realase the tokens from the three hot hours .", "title": "", "metadata": ""}
{"_id": "92442c3b6878c8023037510f9467f6dc", "text": "Place a Sketch up for sale , but only to a specific buyer .", "title": "", "metadata": ""}
{"_id": "0cb5618104fe85de035e8e523c8c5094", "text": "Transfer the adminship of the contract .", "title": "", "metadata": ""}
{"_id": "2e1cb5b37f0a3709a7243495a1d55cfc", "text": "function to resume token sale .", "title": "", "metadata": ""}
{"_id": "fee825c9c01b6528ffb747a6f72b8d54", "text": "change fee for clone token .", "title": "", "metadata": ""}
{"_id": "72691c7da1da8a9b61321da929e29ec9", "text": "the index of a random dragon .", "title": "", "metadata": ""}
{"_id": "d79f32ff4beaa6d3462e8f3f54fcf196", "text": "Mintes fresh token for a private investor .", "title": "", "metadata": ""}
{"_id": "b447f5f415b232291b201baf2dfb44cf", "text": "Upgrade the contract for the given contract identifier to a newer version .", "title": "", "metadata": ""}
{"_id": "397e374f4daf831a3ed2a93b2cefcd16", "text": "Removes account from blacklist .", "title": "", "metadata": ""}
{"_id": "144bdbd7d363187c93938aa01fc8ada4", "text": "Allows the current owner or operators to add operators .", "title": "", "metadata": ""}
{"_id": "2dc8dced6b1ab894f7eba01891f26411", "text": "Number of POOH tokens currently in the Lottery pool .", "title": "", "metadata": ""}
{"_id": "684e9c68ef67d5713a4867cfe299fac1", "text": "modifier to enforce only global operator function access .", "title": "", "metadata": ""}
{"_id": "216711c7c6c24e01ea4377ca03e149b1", "text": "Return balance from sender .", "title": "", "metadata": ""}
{"_id": "d36afa24d5361f9279f83418df37a4c2", "text": "The owner can update the rate ( TTC to ETH ) .", "title": "", "metadata": ""}
{"_id": "82077563c99d0e6bb67eacafa28133fe", "text": "send balance of contract on wallet .", "title": "", "metadata": ""}
{"_id": "1a4df6e7a57ca64f14f103a427d09471", "text": "Make payment to inititate loan .", "title": "", "metadata": ""}
{"_id": "655c3de7e4b639fc1de39039dae1bda0", "text": "Adds a trusted client .", "title": "", "metadata": ""}
{"_id": "6b7cf90e9dc2f7f093858662925a84ea", "text": "Perform a user to user buy transaction .", "title": "", "metadata": ""}
{"_id": "a9b7254884b0f3ed054ac33d3841e771", "text": "Approving an address to tranfer tokens .", "title": "", "metadata": ""}
{"_id": "c8ccaca7ffd8f68ecf7a57bd9ba3a4a5", "text": "crowdsale_tiers : A list of each tier of the crowdsale .", "title": "", "metadata": ""}
{"_id": "cf986e03a995fe6a60828a47e3d182e4", "text": "Change the recipient of staking fees to newStaker .", "title": "", "metadata": ""}
{"_id": "b0726a732bbeb8a91c348865a5b61448", "text": "Override method to ensure that contract properly configured before it is unpaused .", "title": "", "metadata": ""}
{"_id": "997d20131367e6bcd201ac024a2ad842", "text": "Setup volume multipliers .", "title": "", "metadata": ""}
{"_id": "091697da934be3a85f7a7e3c828473b5", "text": "Checks if sender is NOT owner of item .", "title": "", "metadata": ""}
{"_id": "d5d5a4e4caffbb3780759ff855075f0f", "text": "spend ACE Equity Tokens from another Ethereum account that approves you as spender .", "title": "", "metadata": ""}
{"_id": "3b3c31e25b47699aa9ddf7774042489f", "text": "set contract owner .", "title": "", "metadata": ""}
{"_id": "c5f157f94e4d73940a822994c923fa0f", "text": "Only verified addresses .", "title": "", "metadata": ""}
{"_id": "d60c559def170db01633220e9e3b04a2", "text": "Invest in this contract in order to have tokens purchased on your behalf when the buyTokens ( ) contract is called without a throw .", "title": "", "metadata": ""}
{"_id": "375947de24ada68b9ab9b425aa96f5df", "text": "This function is used by subcontracts when an error is detected and the value needs to be returned to the transaction originator .", "title": "", "metadata": ""}
{"_id": "f7af08a7c786e0c481084d6ae6fe20c2", "text": "To create EXH Token and assign to transaction initiator .", "title": "", "metadata": ""}
{"_id": "9e111f7cfb50c634bd61455720535fd8", "text": "give a rabbit to a specific user .", "title": "", "metadata": ""}
{"_id": "bbcfed26d422e7cdc0a73714f8561a07", "text": "Batch TransferFrom with the same to from address .", "title": "", "metadata": ""}
{"_id": "547cf676b10cf00be92f64c86fcce40c", "text": "Associates this token with a specified sale agent .", "title": "", "metadata": ""}
{"_id": "98192d58225e887226d42e13e1bcdf33", "text": "Modify method to only allow calls if the token is valid .", "title": "", "metadata": ""}
{"_id": "24360c65434a29e510b39ed481d21ee2", "text": "Function to specify how much _spender is allowed to transfer on _owner's behalf .", "title": "", "metadata": ""}
{"_id": "ddd9d448a76433ff767c0ff22d71066e", "text": "Add a contributor to the whitelist .", "title": "", "metadata": ""}
{"_id": "74b6445ce82d04cd69aa8e40ec0dcf6f", "text": "Compute hash for property before write into storage .", "title": "", "metadata": ""}
{"_id": "77dc883e65d94cd1f5ededa555fd5f3b", "text": "return the smaller of the two inputs ( a or b ) .", "title": "", "metadata": ""}
{"_id": "31d149940a2399d6d433be5a7fa9378f", "text": "returns the number of tokens that a promised by have not been locked ( pending confirmation from recipient ) .", "title": "", "metadata": ""}
{"_id": "072bcb0646ae7ef04e83ddfe926d9b5d", "text": "Modifier that will execute internal code block only if the sender is an authorized signer on this wallet .", "title": "", "metadata": ""}
{"_id": "48fe9c39c4ddea9f49d031753155bc1e", "text": "set composition price for a token .", "title": "", "metadata": ""}
{"_id": "da480919455f87f69cf552fdb813af3c", "text": "Drain the remaining tokens of the crowdsale to the TeamWallet account .", "title": "", "metadata": ""}
{"_id": "c25c12afbe9842b8040f90c3642855a0", "text": "Get the number of assetInfo .", "title": "", "metadata": ""}
{"_id": "d44687173fb983e470c9330b6795bbd6", "text": "Ensure origin address can claim payment amount on channel identified by channelId .", "title": "", "metadata": ""}
{"_id": "4ccb1cb2d9c5868f5476b0d53debbc11", "text": "Withdraws tokens from foundation reserve .", "title": "", "metadata": ""}
{"_id": "8a59445e70dc3e34b25c421f5a90f8ec", "text": "The function can be called only by agent .", "title": "", "metadata": ""}
{"_id": "d7caa353d4849c03a7c384d5cfa94327", "text": "disable transfer for upgrade or emergency events .", "title": "", "metadata": ""}
{"_id": "922e96de6752fa6a03ffdf3fcdc334ec", "text": "add liquidity to contract for investor liquidation .", "title": "", "metadata": ""}
{"_id": "abbbbcc6bd4f9bd25a65ff377dc97462", "text": "Main sale .", "title": "", "metadata": ""}
{"_id": "87f0fc665ecc1b63ce605217b5fa28a6", "text": "Called by the owner , to end the current phase and mark as burnable .", "title": "", "metadata": ""}
{"_id": "1417deb11af1bc37bcd42cbdfe4f26ad", "text": "Token burn function to be called at the time of token swap .", "title": "", "metadata": ""}
{"_id": "45abe4a0da29d2e1458eb476ff3f8d38", "text": "This function checks if the address is a contract or wallet .", "title": "", "metadata": ""}
{"_id": "cd89160bab1e5956b4c6d43c73374eee", "text": "Gives best estimate for market price of a token in ETH of any price oracle on the Ethereum network .", "title": "", "metadata": ""}
{"_id": "a04e1dcb9bc8d1a2cb45ceaa018e4c1c", "text": "true if investor is whitelisted .", "title": "", "metadata": ""}
{"_id": "0475d97f24ebd2960e35a0ba7752f9d0", "text": "reset reward tokensfor the new duration .", "title": "", "metadata": ""}
{"_id": "2c10c2c2c50dbfe72f0f9d823a9494d0", "text": "Set the paused status of the raffles .", "title": "", "metadata": ""}
{"_id": "edcaabb0e8668062c3f0fc3780382ccc", "text": "take win money or money for canceling game .", "title": "", "metadata": ""}
{"_id": "bb2a66ace0c6138cca703de17e712332", "text": "Adapted Crowdsale hasStarted .", "title": "", "metadata": ""}
{"_id": "c4dde7efd609fadec5eb17d4e643624f", "text": "internal for returning status of arbitrary entries .", "title": "", "metadata": ""}
{"_id": "32e003128deb7ce5dfe8a379a26ea73c", "text": "Update the contents of your square , the first 3 personalizations for a square are free then cost 100 finney ( 0 . 01 .", "title": "", "metadata": ""}
{"_id": "38690a08a600d8d243fe208e2b80b3f6", "text": "modifier to check if a target address has a particular entry .", "title": "", "metadata": ""}
{"_id": "ff5f8b62e9266f1aaac2e51556cb6a57", "text": "When MIN_CAP is not reach : 1 ) backer call the approve function of the TIX token contract with the amount of all TIXs they got in order to be refund 2 ) backer call the refund function of the Crowdsale contract with the same amount of TIX 3 ) backer call the withdrawPayments function of the Crowdsale contract to get a refund in ETH .", "title": "", "metadata": ""}
{"_id": "b3087a32e38ae3d130812756aff1d93a", "text": "next round we set a new staking perioud .", "title": "", "metadata": ""}
{"_id": "5789373113b987372130c5dfdebefddb", "text": "100 _rate 200 price of NAC for investor win _rate / 100 price of NAC for investor loss 2 - _rate / 100 .", "title": "", "metadata": ""}
{"_id": "ab09a3a6bb92c4ea373e0d87675228ad", "text": "we will use this to distribute tokens owned in other contracts e . g .", "title": "", "metadata": ""}
{"_id": "ae17ba2283d0222540f50f22c4af85a2", "text": "Return balance of an account .", "title": "", "metadata": ""}
{"_id": "73398065300a87a370eec74fb66aefb5", "text": "This function can be auto-generated by the script 'PrintFunctionGeneralExp . py' .", "title": "", "metadata": ""}
{"_id": "5c323b260795cac7405785f9b4a7c9b3", "text": "Yes there are tiny amounts of divs generated on buy , but not enough to justify transferring to msg . sender .", "title": "", "metadata": ""}
{"_id": "18229472288f9b75f49ff33237760edb", "text": "Assigns ownership of a specific Rabbit to an address .", "title": "", "metadata": ""}
{"_id": "0aecf48965bdaf178f3bb9304378ccbd", "text": "Only allows addresses can call this function .", "title": "", "metadata": ""}
{"_id": "ff19e3da93089fdaa4d4c9e83e22903c", "text": "Provide allowance information .", "title": "", "metadata": ""}
{"_id": "92ecf7a903e00e86e298788b4d0f97ab", "text": "Cancel a order .", "title": "", "metadata": ""}
{"_id": "33119efa26baab4719f0dc36c3701e6e", "text": "Revoke tokens from incompleted KYC investors' addresses .", "title": "", "metadata": ""}
{"_id": "ea91dbaa97a23bda4d86caafd08ee9cc", "text": "buy patent .", "title": "", "metadata": ""}
{"_id": "64e87f30d341f2e8b6c3b8de62667174", "text": "must return true if crowdsale is active ( i . e .", "title": "", "metadata": ""}
{"_id": "123b6142bf1f589a62b5447c77cf4200", "text": "converts the token to any other token in the bancor network by following a predefined conversion path and transfers the result tokens back to the sender note that the converter should already own the source tokens .", "title": "", "metadata": ""}
{"_id": "91dfb4db51b37aef9d77c203b66a98f9", "text": "Get a leader at position .", "title": "", "metadata": ""}
{"_id": "5cb3003f52f63b4e091dfb9f93233860", "text": "Set token contract where mints will be done ( tokens will be issued ) .", "title": "", "metadata": ""}
{"_id": "72ad05f25cb4684945bcd31fdf9cc5b5", "text": "Add a new payee to the contract .", "title": "", "metadata": ""}
{"_id": "9df75e4bc3d30b8799adb9368b19a3a3", "text": "Allows users to sign up with their own address .", "title": "", "metadata": ""}
{"_id": "6887bba4fdef689824c2039961b634fb", "text": "Allows owner to claim the remaining tokens .", "title": "", "metadata": ""}
{"_id": "4ce4469ade3acb2a654d3e9c8f0d59be", "text": "Determine if the Oracle was queried .", "title": "", "metadata": ""}
{"_id": "978110459e11e6792670418e3c4ac73d", "text": "Function Reactivates contract ( after change of settings for instance or a refound ) .", "title": "", "metadata": ""}
{"_id": "cd1460acb59bcdb1362e074e52e319dc", "text": "Checks user is holder .", "title": "", "metadata": ""}
{"_id": "6db513e268d2530582359c0b26d279ee", "text": "Buy tickets for the Lottery by passing in an array of ticket numbers ( starting at 1 not 0 ) .", "title": "", "metadata": ""}
{"_id": "e93d3a143305c165d16d6153603403e1", "text": "Sets the URL where the oracleData can be retrieved .", "title": "", "metadata": ""}
{"_id": "c0442161e152a1aa6a06c1fbd979af22", "text": "Transfer value BP tokens from sender 'from' to provided account address to .", "title": "", "metadata": ""}
{"_id": "f483c8a54978cbd6e426d016adfe9839", "text": "Check is valid msg value .", "title": "", "metadata": ""}
{"_id": "b7d495a1f80de465a342eae452c98287", "text": "Withdraw ether and tokens to escrow .", "title": "", "metadata": ""}
{"_id": "d3d1e8e6226bfcc7b30a0c7d3671f6dc", "text": "Return tickets left in the contract .", "title": "", "metadata": ""}
{"_id": "f3354df1a02f7979ac95b6a0da9460a3", "text": "end token minting on finalization , mint tokens for dev team and reserve wallets .", "title": "", "metadata": ""}
{"_id": "739891caf97c33d86a06d42a8ad277a5", "text": "Get all signs of deal by _dealNumber .", "title": "", "metadata": ""}
{"_id": "71d7da6a0a6505c69f5a1451321d286a", "text": "Returns list of admins .", "title": "", "metadata": ""}
{"_id": "ab4b0123b6bc4262b1e8cd9e0e9aa9a1", "text": "Internal interface .", "title": "", "metadata": ""}
{"_id": "737252a4cd51cd518b91d3294774a70a", "text": "Owner can pause the contract ( Goes to paused state ) .", "title": "", "metadata": ""}
{"_id": "73bf93aa45a0e036f937f68cef348bd5", "text": "Confirm the pair of addresses as two distinct owners of this contract .", "title": "", "metadata": ""}
{"_id": "3fd87994888ac9b4bf4c90abb721c2ce", "text": "Get the token balance of the specified address .", "title": "", "metadata": ""}
{"_id": "9c533f6a235a3f1af3120cdc3adcda73", "text": "Withdraws all the ether from the contract to the owner account .", "title": "", "metadata": ""}
{"_id": "36c5ed4764aa53d92eca33ce325b14f6", "text": "change exchange rate update price everyday .", "title": "", "metadata": ""}
{"_id": "25a3fbdc174ed607f8d9a0cb6ab73a16", "text": "Set LockedTokens contract address .", "title": "", "metadata": ""}
{"_id": "d9cdf20d3efcbff9cf3699fe628e97b0", "text": "Find out the amount of rewards in ETH and tokens .", "title": "", "metadata": ""}
{"_id": "82a82652e9bc896b92f4f3470edd094a", "text": "tx 3 : of a game , player one approves counter stack and transfers everything in .", "title": "", "metadata": ""}
{"_id": "ad685b47ec25cd1aabfc82d879e3b3fb", "text": "Return the total amount of token user received .", "title": "", "metadata": ""}
{"_id": "f4c6e70a4dcea7dc0d2600d4b94d557b", "text": "Management list manegement .", "title": "", "metadata": ""}
{"_id": "23a1c0db91bf048ad26e7bab3fd50fe0", "text": "Method to check whether refund process has been initiated or not by the contract .", "title": "", "metadata": ""}
{"_id": "b69d1b95048c6a7d9af2d818c98c0180", "text": "Returns whether the specified token is owned .", "title": "", "metadata": ""}
{"_id": "de92240369f79afccb4c722879d444f1", "text": "read the total amount of DGX purchased today .", "title": "", "metadata": ""}
{"_id": "64a65154a6fb8b5192a4260c2111d2e8", "text": "Gets the token name .", "title": "", "metadata": ""}
{"_id": "ad13471314e6d421c302d8e1b87b1276", "text": "Retrieve a safeguarded value to the ETH address that calls this method .", "title": "", "metadata": ""}
{"_id": "12c4b61a9888170e4f33c4795f58a983", "text": "Social bridges are required even in trustless environments .", "title": "", "metadata": ""}
{"_id": "1248a371074291f0b88d07f9a432ed75", "text": "add an authorizer to the authorizers mapping .", "title": "", "metadata": ""}
{"_id": "4335d263ed10d65abf7158fa698fee07", "text": "schedule unsold tokens allocation using oraclize .", "title": "", "metadata": ""}
{"_id": "f7b8018b3e476844d84664c2735ee72d", "text": "Will return N bought tokens to the contract - User supply of tokens must have enough balance .", "title": "", "metadata": ""}
{"_id": "c4351311b8d0c383740fbc027c0ca405", "text": "add a contract to whitelist .", "title": "", "metadata": ""}
{"_id": "0e0c0532a3d20c76ab575c17239768fb", "text": "Return a collectible's details .", "title": "", "metadata": ""}
{"_id": "7f803ab4dbff1eddb9bf738d4c036025", "text": "The number of resolutions .", "title": "", "metadata": ""}
{"_id": "0f0483e0110b472695a389b922ef33b8", "text": "Start this to initiate crowdsale - will run for 60 days .", "title": "", "metadata": ""}
{"_id": "88dc8513c38241e9d31d5d8d7136acc8", "text": "set rate of Token per 1 ETH .", "title": "", "metadata": ""}
{"_id": "5c6cb90a10f3ef0da294eb2deece2b81", "text": "Function used by the client to check the proposal before submitting .", "title": "", "metadata": ""}
{"_id": "b109a878795f3611063970255f65ed2f", "text": "Calculate and assign the dividend payable for the new plot claim .", "title": "", "metadata": ""}
{"_id": "4859507c1a5be261d4c97da4998002c6", "text": "Issues a refund to a given address .", "title": "", "metadata": ""}
{"_id": "8abf6888345e75206a5fe721f987cd03", "text": "Set the rate of ETH - EUR .", "title": "", "metadata": ""}
{"_id": "b5f6233b189a5a5652a53e7aee538238", "text": "Set the overall maximum amount in wei that can be invested by user .", "title": "", "metadata": ""}
{"_id": "e534d74f904d983c60334973ccab2fd4", "text": "everyone is able to withdraw his own money if no softcap .", "title": "", "metadata": ""}
{"_id": "1e5a7e718b865fd629e3c052b62f1376", "text": "authorize a address to call game functions and set configs .", "title": "", "metadata": ""}
{"_id": "28f91de8de8faf0aeda93d65992e9635", "text": "Handles transfer to a contract ERC-223 Proposed Standard .", "title": "", "metadata": ""}
{"_id": "9616679374c244e1eab1ab88f0c99f61", "text": "Send compensation to latest monarch ( or hold funds for them if cannot through no fault of current caller ) .", "title": "", "metadata": ""}
{"_id": "7e3e9a1f3e7fa46cceed66fb1e828986", "text": "gives the ability to freeze an account .", "title": "", "metadata": ""}
{"_id": "188bd449da69ca5ee4b7e24c1fb5cded", "text": "caculate fund and seed value .", "title": "", "metadata": ""}
{"_id": "b42ad209590e18f2fa7c42d29c7eeaba", "text": "Sends all remaining Kitten Coins to owner , just in case of emergency .", "title": "", "metadata": ""}
{"_id": "81496e4fafdb82186ad582766668f1f7", "text": "remove artwork by random number ( a string , number list ) .", "title": "", "metadata": ""}
{"_id": "6cac12f40f8cf6595a294a411a09ecaa", "text": "Calculate amount of tokens for received ETH .", "title": "", "metadata": ""}
{"_id": "2c824653a24265f940cc98a56eb9da70", "text": "Makes sure a method is only called from the HotWallet .", "title": "", "metadata": ""}
{"_id": "a8e5bdcf2e023fdb9dc5815040b9200d", "text": "Owner can change personal message of his days .", "title": "", "metadata": ""}
{"_id": "b25d1dc22061515bfd4d98a0c9a282b6", "text": "Send ERC20 tokens to multiple contracts using two arrays which includes the address and the amount .", "title": "", "metadata": ""}
{"_id": "db8bd5cc88bc1ac792edc2c9627e01ff", "text": "prevents contracts from interacting with fomo3d .", "title": "", "metadata": ""}
{"_id": "09521f47bb356b0cf881e5615ca0e48a", "text": "This is a modifier for functions to check if the sending user address is the same as the admin user address .", "title": "", "metadata": ""}
{"_id": "06bfbc9393ff66f6c452a3772ab30838", "text": "Returns the topics for a transfer agent status update event .", "title": "", "metadata": ""}
{"_id": "e12188a84a8540649183f9843470c60b", "text": "Those functions are useful to modify some values in the game .", "title": "", "metadata": ""}
{"_id": "e87cb6d088206979b36e603abdde3343", "text": "For a given account , returns how many Wei they haven't yet been credited .", "title": "", "metadata": ""}
{"_id": "f89090a39b030c832d8a27aa3144eee5", "text": "Freeze or unfreeze account , can be run only by owner .", "title": "", "metadata": ""}
{"_id": "34c2738b994f2a117b0c31e0a65521b3", "text": "Add an address to the whitelist or update the rate of an already added address .", "title": "", "metadata": ""}
{"_id": "f7befd3d3aa014d00e0cd5352df6ef19", "text": "The number of tokens that are burned , unissued , or otherwise not in circulation .", "title": "", "metadata": ""}
{"_id": "aaf5d624f393b2b7147d6a8120f15216", "text": "Set the minimum buy amount in wei .", "title": "", "metadata": ""}
{"_id": "ed8cf90194e0da3ac7f99dd6d1548b12", "text": "Transfer token to user account .", "title": "", "metadata": ""}
{"_id": "1a683f9d43bd8eefc8080c22688eb89d", "text": "Modify team address to receive team tokens allocation .", "title": "", "metadata": ""}
{"_id": "975864defcc08623ba89795933a5de05", "text": "Arena contract and vending machine contract must be able to mint coins .", "title": "", "metadata": ""}
{"_id": "c93c9e0a80b85894b909ed5f1781b199", "text": "Create a new handle if the handle is valid and not owned .", "title": "", "metadata": ""}
{"_id": "7a29cfb0d8aacedd60de48cc4ef25b54", "text": "Set the Golds given to the player when clearing this dungeon .", "title": "", "metadata": ""}
{"_id": "f4016e8d0d22c159f91bdb8f4c534ff9", "text": "Withdraw all Ether in this contract .", "title": "", "metadata": ""}
{"_id": "74662967696783e69d6ca03655cc5f70", "text": "specified in wei .", "title": "", "metadata": ""}
{"_id": "ebc1f6d9fabac347a0cef5a6c035ed8e", "text": "This has to be called before preAllocation .", "title": "", "metadata": ""}
{"_id": "7a1ea93377db729564e4fc891ca29667", "text": "Function to set rate of ETH and update token price .", "title": "", "metadata": ""}
{"_id": "b8333f0f469ac4629227e34b0d7abe2a", "text": "Returns the next value in the set .", "title": "", "metadata": ""}
{"_id": "10a25445c72c279b3740202ddf2da224", "text": "Access modifier for Doge functionality .", "title": "", "metadata": ""}
{"_id": "bf8e913aa0606c04cb2bc661a6e259f4", "text": "Only the gateway interface can lock current app after a successful code upgrade proposal .", "title": "", "metadata": ""}
{"_id": "1dc6095b6c75bec2b67dec6da555b903", "text": "Random helper .", "title": "", "metadata": ""}
{"_id": "06eedc576afa27bc0510f0e7075f1126", "text": "Check game status .", "title": "", "metadata": ""}
{"_id": "5d09ce5bada7efbe33b24d8a1a737e85", "text": "This function is used to revoke the claim of lockMe .", "title": "", "metadata": ""}
{"_id": "87449984f83ca76ccb82464f4d8601d9", "text": "Put a permanently owned company on sale again .", "title": "", "metadata": ""}
{"_id": "0f60706d83e167ca704d228e22535bc5", "text": "Get oraclize funding order by order id .", "title": "", "metadata": ""}
{"_id": "557216d14f6b2378b4dfade0c40b7d84", "text": "Internally used to set a flag in a shrinked board array ( used to save gas costs ) .", "title": "", "metadata": ""}
{"_id": "0939c87d17b5c7a56b02ef6ae0c91a0f", "text": "removes a given address from the player array .", "title": "", "metadata": ""}
{"_id": "e3cd6f3c19782d6ed6bc77f48350b334", "text": "marks deliverable as fulfilled .", "title": "", "metadata": ""}
{"_id": "b9db881f562d26d0d5d2bf7e6d000b9e", "text": "get user available vesting amount , total amount - received amount .", "title": "", "metadata": ""}
{"_id": "8b4481798cd20d7d7acadd3d95337ad6", "text": "Set the airdrop contract address .", "title": "", "metadata": ""}
{"_id": "d6e34605d06abcd313522b5189cf2d90", "text": "Get current amount of tokens on Vault address .", "title": "", "metadata": ""}
{"_id": "30e4ecf0f4b71d3f24d30e11af686154", "text": "sets the token that is to be used for this Lottery .", "title": "", "metadata": ""}
{"_id": "e9dd3bb8db31abddf60297793baf8dd1", "text": "Checks that a given puppy is able to breed .", "title": "", "metadata": ""}
{"_id": "3aff7fe2658be7535a2ecb360e02a865", "text": "Send the jackpot if no activity in 24 hours and claimant was the last person to generate activity .", "title": "", "metadata": ""}
{"_id": "edc90c21f53204887db6fc967714c555", "text": "checking gas price .", "title": "", "metadata": ""}
{"_id": "6e87e441c22a129cdbed888a17b36216", "text": "true if buyers can buy at the moment .", "title": "", "metadata": ""}
{"_id": "800382d9ee3c760bc1b64f960eac36bb", "text": "Set a manual price .", "title": "", "metadata": ""}
{"_id": "7ee2ef98ea5165fe8c91ccc1a4689816", "text": "Ritorna il numero di token che un delegato pu\u00f2 ancora inviare .", "title": "", "metadata": ""}
{"_id": "72064ac84dc589097dd550a861644f67", "text": "Returns a bool indicated whether a given userName has been claimed ( either exactly or as any case-variant ) .", "title": "", "metadata": ""}
{"_id": "3b4c8afc1e1555990ba77188a18da3a1", "text": "Ceate a new emoji for the first time .", "title": "", "metadata": ""}
{"_id": "b55c9b21da17c746b7f05a74a9d9034f", "text": "Allows the owner to change the exchange rate of the current phase .", "title": "", "metadata": ""}
{"_id": "d08f7bd6749f403b45dcce8075f56484", "text": "Gets max profit .", "title": "", "metadata": ""}
{"_id": "341229ed070376d088c1e16dea619748", "text": "Add a Loopring protocol address .", "title": "", "metadata": ""}
{"_id": "e48db97bec540fd1edc124c4c199d638", "text": "Transfer from _from to _to _value tokens .", "title": "", "metadata": ""}
{"_id": "d6e5263b4c025a0ed4a8a68bdf6458ff", "text": "Allows msg . sender .", "title": "", "metadata": ""}
{"_id": "3fcb102547623c1b854f205dd3694663", "text": "Throw if sender has a DCP balance of zero .", "title": "", "metadata": ""}
{"_id": "5016efdd95a4f9c637ff75403e3e9c47", "text": "Allow owner to force rate update .", "title": "", "metadata": ""}
{"_id": "b71916e6832c844218c2ae4eebea1d1e", "text": "Ensures that b is greater than a to handle negatives .", "title": "", "metadata": ""}
{"_id": "4f02e00b83624e4ac35c899a021b498b", "text": "getEventEnd - return the end of the event time .", "title": "", "metadata": ""}
{"_id": "72a515e76c121a350f1495656a6becf1", "text": "if the game times out without either player generating the game , ( the frontend should have selected one of the players randomly to generate the game ) the frontend should give the other player the secret to drain the game secret - reveal - commit .", "title": "", "metadata": ""}
{"_id": "42bf184a48058168c0db362e372ff5e8", "text": "This function for transfer tokens one by one .", "title": "", "metadata": ""}
{"_id": "adf6e32936ca9a6edf990b54f6501169", "text": "draw functions for everyone .", "title": "", "metadata": ""}
{"_id": "c2acb398aba6525e6af2d3acd0bb0775", "text": "To buy a tree paying ether .", "title": "", "metadata": ""}
{"_id": "f02709ffde0f3aa34c62ebb31e073db2", "text": "Overriding pause ( ) such that we use the fuse functionality .", "title": "", "metadata": ""}
{"_id": "5769f0d1694deb7f4812c7dc053f7042", "text": "Keep in mind that internally stage count is started from 0 while user receives it incremented , i . e .", "title": "", "metadata": ""}
{"_id": "bc09bd07ebe20d945515e543fcbd0e2b", "text": "change the tokenDetails .", "title": "", "metadata": ""}
{"_id": "f3115f5c02620f88508b4ab28cd66823", "text": "validates a connector token address - verifies that the address belongs to one of the connector tokens .", "title": "", "metadata": ""}
{"_id": "373664b3ca8e934b14416200a2cd6ef3", "text": "Allow owner to withdraw funds to his wallet anytime in between the sale process .", "title": "", "metadata": ""}
{"_id": "1c53d4ce0b50fb4a9d311be926bbc301", "text": "This can be done if a bid is accepted , but expired .", "title": "", "metadata": ""}
{"_id": "02cf401e8969648a5d2d2a999ae97733", "text": "uint constant minBankTime 1 days ; .", "title": "", "metadata": ""}
{"_id": "7bef543b7b7c5a972db6709103b3dde6", "text": "Function to do final transactions .", "title": "", "metadata": ""}
{"_id": "0befdc4c8c319fcb0f551947f31e02fd", "text": "A clean and efficient way to generate random and make sure that it will remain the same accross the executing nodes of random value .", "title": "", "metadata": ""}
{"_id": "6207310292a96ed5ad5c17194ee679ab", "text": "Returns the current ICO round information .", "title": "", "metadata": ""}
{"_id": "e74a470e8e6f2e3b336c6fc399e3ef53", "text": "that doesn't mean that you cant migrate from Ethereum - Goldmint blockchain that means that you will get no reward .", "title": "", "metadata": ""}
{"_id": "cacf6973c14d9e51e1321e8b1020e6f7", "text": "Updates max gas price for crowdsale transactions .", "title": "", "metadata": ""}
{"_id": "cdc88d21c5eeee745fa3fb659e90f61f", "text": "this bank won't live forever , so this will handle the exit ( or extend its life ) .", "title": "", "metadata": ""}
{"_id": "d4dcb8a17f0e7149a706ac633e83894d", "text": "Pay dividends to parents of a deed .", "title": "", "metadata": ""}
{"_id": "af718709e531f51f2784d6cb8ad74809", "text": "15 open / close user to sell token .", "title": "", "metadata": ""}
{"_id": "d77351a96b56f982edbee9d4cca2a49b", "text": "Decreases the approval of the spender .", "title": "", "metadata": ""}
{"_id": "54d8ffffa4302a259270aef81071a925", "text": "Sets contract which is responsible for token pools accounting .", "title": "", "metadata": ""}
{"_id": "19967f1f6045aad68445fee0ac815701", "text": "The owner of this contract can change the controller of the PLS token .", "title": "", "metadata": ""}
{"_id": "532f606557fa59b3e65420cc99a07324", "text": "Decide the state of the project .", "title": "", "metadata": ""}
{"_id": "e4ea3067dc49a0a1ff7fa839642bc5e1", "text": "buyer needs to confirm the transfer .", "title": "", "metadata": ""}
{"_id": "dfba277d921a46918848f4bb67836eb9", "text": "Called by the owner , to extend deadline ( usually for special phase mode ) .", "title": "", "metadata": ""}
{"_id": "ef951bee50bcb6f42d32b87ac5384d39", "text": "Execute a multi-signature token transfer from this wallet using 2 signers : one from msg . sender .", "title": "", "metadata": ""}
{"_id": "e4ab6edef59afaa2deec857cc678ad29", "text": "send token to multiple users in single time .", "title": "", "metadata": ""}
{"_id": "4978b34a37e83812fdb101d3c7dbcbd6", "text": "Remove manager .", "title": "", "metadata": ""}
{"_id": "f39fa628835e93ed05faf4a0c1a2d478", "text": "Get information pertaining to the last game .", "title": "", "metadata": ""}
{"_id": "12f1197bb6882f8a713f21b1ed7c939d", "text": "callback function - oracle sends amount of eUSD tokens to mint .", "title": "", "metadata": ""}
{"_id": "99d424594289708a52e595668c2f1254", "text": "Private constant functions .", "title": "", "metadata": ""}
{"_id": "c5ca14956a88394d77db32f3963393c8", "text": "ERC-20 approve spender .", "title": "", "metadata": ""}
{"_id": "bebe7ca5c91df33db8265b6aad9b3812", "text": "Burn Tokens .", "title": "", "metadata": ""}
{"_id": "aed20b7f1b64f09c3939c391dec955a5", "text": "copied from GnosisSafe https : / / github . com / gnosis / gnosis-safe - contracts / blob / master / contracts / GnosisSafe . sol .", "title": "", "metadata": ""}
{"_id": "9530c08ff07764b5326e3f1b86312927", "text": "Returns all the relevant information about a specific team .", "title": "", "metadata": ""}
{"_id": "e0a3b9384f3cb93b01108d3ddc32cc27", "text": "Use the recovery address to send all funds to the nominated address and self-destruct this vault .", "title": "", "metadata": ""}
{"_id": "2747a6ab27985623e2f381c29d20b615", "text": "Finalizes crowdfund .", "title": "", "metadata": ""}
{"_id": "62a8c4fff274fbc2995a2832dc217ff6", "text": "Creates a new Athlete with the given name .", "title": "", "metadata": ""}
{"_id": "a2e1c172c951c1c9a031a4f8afe36b00", "text": "Only owner can kill me .", "title": "", "metadata": ""}
{"_id": "a514c5ab29adc185d407bcc3896c9d40", "text": "the campaign state machine enforcement .", "title": "", "metadata": ""}
{"_id": "36eef27d1907b35ab150340cae1daedf", "text": "Calculate amount of premium bonuses .", "title": "", "metadata": ""}
{"_id": "eda17bafbb9278f9d4cc251c1b1c48e3", "text": "Returns how many tokens left for sale .", "title": "", "metadata": ""}
{"_id": "b0a8d17ea9deaa31005dad8b84824624", "text": "Same functionality as delegateProxy , just asserts the return value .", "title": "", "metadata": ""}
{"_id": "564ed0ef97ddb9751217cc76caf64124", "text": "Add chunk 4 / 7 to the whitelist .", "title": "", "metadata": ""}
{"_id": "8aa2392e7997412098c3bed4ebb21233", "text": "Minimum investment is 2 ether which will be kept in the contract and the depositor will earn interest on it remember to check your gas limit .", "title": "", "metadata": ""}
{"_id": "1b5b98e2a0c5f15e30dc12a2af8156e2", "text": "Function to increase capOfTotalSupply in the next phase of KStarCoin's ecosystem .", "title": "", "metadata": ""}
{"_id": "51615f315fe7e32fd3b3bb8275258102", "text": "Calculates the monthly period , starting after the startBlockTimestamp , periodAt will return 0 for all timestamps before startBlockTimestamp .", "title": "", "metadata": ""}
{"_id": "5a51c1aedffb616ed27a54cf543cc217", "text": "In between the offering and the network .", "title": "", "metadata": ""}
{"_id": "ae54c4502c0b64e1008b479fc08f0727", "text": "processes the contribution checks campaign state , time window and minimal contribution throws if one of the conditions fails .", "title": "", "metadata": ""}
{"_id": "0ce7454f7eafe8e99f175de2b28ee20b", "text": "Create a new ballot with ( _numProposals ) different proposals .", "title": "", "metadata": ""}
{"_id": "6ed1f82a8487e06e2c347ebb590a9ec1", "text": "Function to check the amount of tokens that an owner allowed_ to a spender .", "title": "", "metadata": ""}
{"_id": "f2da517122a0ba45a897edfaae78fc88", "text": "list supporting documents of an asset , from a specific document .", "title": "", "metadata": ""}
{"_id": "7460ddbdad7f058b17a46e98ebb3f406", "text": "backers refund their ETH if the crowdsale was cancelled or has failed .", "title": "", "metadata": ""}
{"_id": "27955128e9d50cc22c7de1d6c61b137c", "text": "Allows contract owner to terminate a vesting schedule , transfering remaining vested tokens to the registered address and refunding owner with remaining tokens .", "title": "", "metadata": ""}
{"_id": "55f1041a8d95956a810e8086eab8527f", "text": "Due to cost a lot of gas , Consolation Prize random numbers will be done on server side .", "title": "", "metadata": ""}
{"_id": "b881aca4a7aeaaf802dede9dc3b10a9c", "text": "Revokes a prior confirmation from sender , call with tx ID .", "title": "", "metadata": ""}
{"_id": "124d4bae07565c3a9fcf8889e4059477", "text": "Checks if a given address currently has transferApproval for a particular Warrior .", "title": "", "metadata": ""}
{"_id": "8a378659ad1de4e60c8bb597118a90d8", "text": "Function to check the amount of tokens for address .", "title": "", "metadata": ""}
{"_id": "e465b0f888faf4eda6f4cfd8363b7121", "text": "Verifies a Merkle proof proving the existence of a leaf in a Merkle tree .", "title": "", "metadata": ""}
{"_id": "a05d712382f92d00dca723c0737e7ec2", "text": "internal function can called by this contract only .", "title": "", "metadata": ""}
{"_id": "0cfe9ffac1694808b82221947067982c", "text": "SHL lock time retrieval function .", "title": "", "metadata": ""}
{"_id": "3fe40b64a27e6163010a377b6909c7dc", "text": "Accepts ether and creates new BAT tokens .", "title": "", "metadata": ""}
{"_id": "6b97b4c5a3702b45dcd13ad283da19fa", "text": "returns the number of tokens allocated to this contract .", "title": "", "metadata": ""}
{"_id": "5a663274553e954b2bec1ad5004c1649", "text": "Get the class's name .", "title": "", "metadata": ""}
{"_id": "da9a96d153dfeab8ecd155c8d90c4bc2", "text": "Change whether an address is authorized to use a specific contract or not .", "title": "", "metadata": ""}
{"_id": "30d1b15adcde4ba4e343b9eed0b52b9b", "text": "owner can step down and assign some other address to this role .", "title": "", "metadata": ""}
{"_id": "f345be6c070e2282778e5cef8e75d3c8", "text": "approve Gift id from msg . sender .", "title": "", "metadata": ""}
{"_id": "68eacb692cab9640f04404e6d1429d42", "text": "Transfer a Dog owned by another address , for which the calling address has previously been granted transfer approval by the owner .", "title": "", "metadata": ""}
{"_id": "84b348d85409d2c68045bb9465523caa", "text": "If a motion has concluded , or if it lasted its full duration but not passed , then anyone may close it .", "title": "", "metadata": ""}
{"_id": "88aeebac9344ac08d3fd4b6e0f5a1dde", "text": "ERC20 interface : delegate transfer rights of up to _value new tokens from msg . sender .", "title": "", "metadata": ""}
{"_id": "327f7db953494b165193a0a7b060442f", "text": "Changes required sigs to change wallet parameters .", "title": "", "metadata": ""}
{"_id": "e1807b407b03426d35b5541013d65ab9", "text": "Deposit ether into escrow .", "title": "", "metadata": ""}
{"_id": "466644459bc64b5280122d61cae7e960", "text": "Internal createPermission for access inside the kernel ( on instantiation ) .", "title": "", "metadata": ""}
{"_id": "2588e31b05b39ffe7730e5e52a4d6c11", "text": "step 2 : owner can always cancel .", "title": "", "metadata": ""}
{"_id": "20580f6269fc6c9ce0c91a724262f717", "text": "issue the tokens for Reserved .", "title": "", "metadata": ""}
{"_id": "4e444ffa62475a78128eb89e8a2a52a0", "text": "Access modifier , which restricts functions to only the finance role .", "title": "", "metadata": ""}
{"_id": "e887c8789a8ef9666cbd82ec07e6a9dc", "text": "Creates a new Library with the given language and name and owner address and starting price .", "title": "", "metadata": ""}
{"_id": "57a869f5b5e0dcb7229db4a1aeb15d9b", "text": "convert uint To String .", "title": "", "metadata": ""}
{"_id": "175ab5c2100032356b4f5e087d6d903b", "text": "Transfer _amount from _caller to _to .", "title": "", "metadata": ""}
{"_id": "05924014333957778cce70ca6378e72a", "text": "The owner can set a contract as a trusted contract .", "title": "", "metadata": ""}
{"_id": "fd1f9843949271fbf43e184859cf8648", "text": "Return Minter interface .", "title": "", "metadata": ""}
{"_id": "271afd873f77d8a614f5c7ac15c720ff", "text": "Close game settlement rewards .", "title": "", "metadata": ""}
{"_id": "df34cc2b95eba399fc4021a697315fd0", "text": "Modifier to make a function callable only when account not frozen .", "title": "", "metadata": ""}
{"_id": "894191fca60fb87eefaea64b13f0e149", "text": "Increases end time by specified amount of seconds .", "title": "", "metadata": ""}
{"_id": "f63ff7051eb04460c65fed72eec67c86", "text": "erc20 part .", "title": "", "metadata": ""}
{"_id": "9a609341254703d475a2839cfad0e4d4", "text": "distributes the given amount among the surviving characters .", "title": "", "metadata": ""}
{"_id": "75ec47995cf3e026185aefb4259818a6", "text": "Returns how many Original checklist items we've added .", "title": "", "metadata": ""}
{"_id": "d0da51db10bd624eca82dc38ea122469", "text": "Get all channels .", "title": "", "metadata": ""}
{"_id": "8818ddaec98567d31f24ef6668ec0a0c", "text": "Find the _claimed_ plots surrounding a plot .", "title": "", "metadata": ""}
{"_id": "0836c901c4e8cebee3d0cad8b9a8b235", "text": "Sets the user_contract address .", "title": "", "metadata": ""}
{"_id": "55687b62cac3cbb5671bccfb4bbe1458", "text": "Claim all bought tokens for all addresses .", "title": "", "metadata": ""}
{"_id": "db18a53a9941881a9a2b69fac9515dd4", "text": "Helps to generate Collectibles / Tokens / Asset and transfer to ETH Cards , which can be redeemed using our web-app . The .", "title": "", "metadata": ""}
{"_id": "7a97329a066729c3738f5dcb47e5fc63", "text": "Transfer the SMS balance from SMS's contract address to an investor's wallet account .", "title": "", "metadata": ""}
{"_id": "caff6a242cac61a8916b0937b7933499", "text": "buy tokens for T4T tokens .", "title": "", "metadata": ""}
{"_id": "4be81c5f10894e66f60bab882f76ab2a", "text": "Get the amount of tokens that a holder allowed other holder to spend .", "title": "", "metadata": ""}
{"_id": "1299d49e1a0cd69f25917781e5d2bb6c", "text": "Return an addresse's current unpaid interest amount in ILOT .", "title": "", "metadata": ""}
{"_id": "efd47b77d1d1a0cfc629e6e20a4ce8a7", "text": "ICO contract configuration function newEthICOMinimum is the minimum amount of funds to raise newEthICOMaximum is the maximum amount of funds to raise silencePeriod is a number of blocks to wait after starting the ICO .", "title": "", "metadata": ""}
{"_id": "bb0ab67677c7158f68358886bc550bd9", "text": "Mint tokens for private investors before crowdsale starts .", "title": "", "metadata": ""}
{"_id": "def392a1555b9e94d94d4095a92652c3", "text": "Transfer the specified amount of FreeLOT to the specified address .", "title": "", "metadata": ""}
{"_id": "85b490619e5fe0a73144903c180c2d59", "text": "get Abel Address .", "title": "", "metadata": ""}
{"_id": "180a353f6ea67f42c165469bff4bbecc", "text": "ERC20 interface : returns the amount of new tokens belonging to _owner that _spender can spend via transferFrom .", "title": "", "metadata": ""}
{"_id": "bfcccee057e719ad7270b407fd09f0e2", "text": "Legacy API signature .", "title": "", "metadata": ""}
{"_id": "cb78f859d92a1b66604ef5d0336c3cca", "text": "no one can update metadata .", "title": "", "metadata": ""}
{"_id": "3a0f2387f7775aa61c456899df50ac65", "text": "Sender exit from the game .", "title": "", "metadata": ""}
{"_id": "182f0cb673ec40c85bf549b755c8899c", "text": "Get the balance of an address .", "title": "", "metadata": ""}
{"_id": "862ab3b517ad7bb7056383461072df73", "text": "end call can be requested by caller if recipient did not published it .", "title": "", "metadata": ""}
{"_id": "20e3356f4f8bd97e940a7efe07e81614", "text": "set base infomation by coo .", "title": "", "metadata": ""}
{"_id": "f03bf1d63da439852619cd4f039d0c02", "text": "Sale period start at StartBlock until the sale Start ( startSale ) .", "title": "", "metadata": ""}
{"_id": "533d2e2012ff4f25b1916a2f379b77b5", "text": "The owner of the contract can use this function to modify the price of the contract .", "title": "", "metadata": ""}
{"_id": "de7b3a06507a18423d98e0fd5143f3c3", "text": "This is for manual testing of multisig wallet interaction .", "title": "", "metadata": ""}
{"_id": "5e61723aa06f6ab604548981d64f9ea1", "text": "Add batch to whitelist .", "title": "", "metadata": ""}
{"_id": "12fee0a9734bd34cc1b0dc080eba1794", "text": "end of ERC223 receiver implementation set up a new ico round .", "title": "", "metadata": ""}
{"_id": "92b6b2abdd19cda6273583af31852934", "text": "Check if token sale address is not set .", "title": "", "metadata": ""}
{"_id": "ebf26c0576038aa43b548ccea3d346c5", "text": "Call functions .", "title": "", "metadata": ""}
{"_id": "5a2f0a92c7a2a10cf61fa140929c971c", "text": "Public token functions .", "title": "", "metadata": ""}
{"_id": "e9ca7450d0ffb583bcb137d40fed9c8d", "text": "Function called ONLY by a whitelisted game .", "title": "", "metadata": ""}
{"_id": "122209daa12b552e3c0c3e7e29d37633", "text": "Functions to migrate from previous contract .", "title": "", "metadata": ""}
{"_id": "a8ef93e17d8fb824135b4431a8309ede", "text": "Allow founder to end the Private sale .", "title": "", "metadata": ""}
{"_id": "7cc70a238fd894dc229e5532b68b7f03", "text": "Outgoing transfer for AIRA .", "title": "", "metadata": ""}
{"_id": "a1a8acb14e0e17db30921fda27e00739", "text": "Receive administrator privileges .", "title": "", "metadata": ""}
{"_id": "46e6e9595f3319e718b43ac01ee05ce3", "text": "become the new master ( and specify payout address ) .", "title": "", "metadata": ""}
{"_id": "a86e04567865a012680778e3a1c2640c", "text": "Administrator can mint additional tokens .", "title": "", "metadata": ""}
{"_id": "c44701597913aa28193b868882bcab2a", "text": "Get all veted tokens .", "title": "", "metadata": ""}
{"_id": "892101ba1d8274c9757ff87eeeb84a42", "text": "Kills the contract and sends funds to owner .", "title": "", "metadata": ""}
{"_id": "ea3070b96e3624b1943d06a04d218568", "text": "Halt the contribution period .", "title": "", "metadata": ""}
{"_id": "24c086924f0729799cbec303f1091068", "text": "This means that if the owner calls this function , the function is executed and otherwise , an exception is thrown .", "title": "", "metadata": ""}
{"_id": "65e1fac958b985de3bbad4f9c3547ada", "text": "Set new fee numerator .", "title": "", "metadata": ""}
{"_id": "fddf1dd9478595366593b4da877a9627", "text": "Check name and message length .", "title": "", "metadata": ""}
{"_id": "604db153cfce50564457e7aa3ccbb5f2", "text": "Permanently delete some number of coins that are in the caller's account .", "title": "", "metadata": ""}
{"_id": "4ed72981534f486b1fca0e0df8a62609", "text": "Modify method to only allow calls from the owner of the contract .", "title": "", "metadata": ""}
{"_id": "a8311a67f4988e5c53d85b2cb2360c2f", "text": "transfers napkins to people .", "title": "", "metadata": ""}
{"_id": "e0e5dc3c94a47b4fd67452dab128c718", "text": "Very dangerous action , only when new contract has been proved working .", "title": "", "metadata": ""}
{"_id": "16cdd78b3f6cb322b61d5b606bb17082", "text": "The claimTokens ( ) function handles the contribution token claim .", "title": "", "metadata": ""}
{"_id": "924fd7c43421ec17b82736c65600e9cd", "text": "Deletes a Blok token grant .", "title": "", "metadata": ""}
{"_id": "c4ab5fe455c34f1470aa3d963fed2898", "text": "admin can remove the allocated tokens .", "title": "", "metadata": ""}
{"_id": "7ec25c847ef6327b6703c8bff5373e31", "text": "Modifier to only allow the execution of certain functions when betting is closed .", "title": "", "metadata": ""}
{"_id": "442f2b5abcdaac54d2d247c843d1d207", "text": "Check if current round is initialized .", "title": "", "metadata": ""}
{"_id": "a376da48474e660bec85282fab678dde", "text": "helper method that allows owner to mark allocation as done .", "title": "", "metadata": ""}
{"_id": "de9f6a5f525d9b504868f493bdee0727", "text": "Logs an error , and optionally refunds user the _bet .", "title": "", "metadata": ""}
{"_id": "34a7e901c6a869cb1acd0fa0fc6fa0b5", "text": "returns the connector's virtual balance if one is defined , otherwise returns the actual balance .", "title": "", "metadata": ""}
{"_id": "f448fe646aed07b89eec763e9676efda", "text": "Gets all champs for sale .", "title": "", "metadata": ""}
{"_id": "fd7e5aa27e4f85fce7e953dbdf843a4e", "text": "Restricted functions ( owner only ) .", "title": "", "metadata": ""}
{"_id": "c3400d9f828f46506b54d924ea237416", "text": "Lets us calculate what a participants score would be if they ran updateScore .", "title": "", "metadata": ""}
{"_id": "c438b57bcbf1ffd169c1158c7c5422e7", "text": "Get the current issuer address from storage .", "title": "", "metadata": ""}
{"_id": "bf5c974b7c8e7907c9486def8e5fb71f", "text": "at the end of ico burn unsold tokens .", "title": "", "metadata": ""}
{"_id": "5ed619c19f8e9627b420808cac1ba77c", "text": "Current Vesting stage for finance wallet .", "title": "", "metadata": ""}
{"_id": "5868c517e77b0d3d0aaa4714ce76c949", "text": "mitigate short address attack .", "title": "", "metadata": ""}
{"_id": "b984ba4ab1303792fa72d1b3cc57d1af", "text": "The function preICOSwapRate ( ) returns the current exchange rate between consulteum tokens and Ether during the pre-ICO token swap period .", "title": "", "metadata": ""}
{"_id": "c95c24480e66b8600528e12c4b06f1e2", "text": "Get the balance for a particular token holder .", "title": "", "metadata": ""}
{"_id": "9774cf379a325f9f76fff38ef5d084f4", "text": "This function increments round to next : - it sets new currentLimit ( round ) using sequence : 1e14 , 2e14 , 4 * currentLImit - 2 * prevLimit .", "title": "", "metadata": ""}
{"_id": "06060e6a4b606398d310ab3536f3c122", "text": "Upgrades the implementation to the requested version .", "title": "", "metadata": ""}
{"_id": "7bddbface35e3a2b891779a3d04a5a56", "text": "Tenderly remove hand from FinderHyper and place on another FinderHyper .", "title": "", "metadata": ""}
{"_id": "c359b24ae29134b03c1e3bbc0503576c", "text": "Set _tokenAddress as the token address to be used in the auction .", "title": "", "metadata": ""}
{"_id": "47a78986191ae582052c2ff7953e22b7", "text": "will open the trading for everyone .", "title": "", "metadata": ""}
{"_id": "716c92dc612c930d0e00df13622ad0d5", "text": "Only allow some actions after the crowdsale is over .", "title": "", "metadata": ""}
{"_id": "6b0d389d0bd93e2fa9752f7b49fba471", "text": "Caller makes a deposit into their channel balance .", "title": "", "metadata": ""}
{"_id": "0ab7d1cf0ce80f6a3667cd862ca47cd4", "text": "Authenticated contract only .", "title": "", "metadata": ""}
{"_id": "d3c2ded1fed12596798cb17340a284de", "text": "Mints token Rewards to Forecasting contract called by CrowdsaleController .", "title": "", "metadata": ""}
{"_id": "0b9bd8326b84ad7ce10116ffeda7154c", "text": "Creates order struct from value arrays .", "title": "", "metadata": ""}
{"_id": "d6710a6e0ac928cf8da45f8033c3090f", "text": "Function called by the sender after the challenge period has ended , in case the receiver has not closed the channel .", "title": "", "metadata": ""}
{"_id": "804b5bc83b9c11ce7cecaa40a7449a41", "text": "modified pausable / trustee seller contract .", "title": "", "metadata": ""}
{"_id": "9c86f4009b20e53c85fbc255285c5a4f", "text": "Take Ether instead of tokens .", "title": "", "metadata": ""}
{"_id": "88243f6fab77f874a28e7d55e66bea6c", "text": "Batch exection of regularTransfer ( ) function .", "title": "", "metadata": ""}
{"_id": "177681505feae3ded06f867cc6982dc8", "text": "Crowdsale Stage Management .", "title": "", "metadata": ""}
{"_id": "58c180be820d219bf43e0da3119e58be", "text": "check if user is verified .", "title": "", "metadata": ""}
{"_id": "a7f08a9d8d507ba21c14f424e4dc6794", "text": "send value token to to from from .", "title": "", "metadata": ""}
{"_id": "c8954c7fd349ca845803643a3da1f31f", "text": "Finalize presale , calculate token price , track finalize time .", "title": "", "metadata": ""}
{"_id": "a60943fed319784bb024d0cd84a67a73", "text": "only possible to decrease ownerCut ! .", "title": "", "metadata": ""}
{"_id": "b6cc743a6c60d3c8bc253434cfd95b02", "text": "Return the address of a blocks owner .", "title": "", "metadata": ""}
{"_id": "b56eff36a9772722ce8ef0e3f921629e", "text": "To transfer tokens by proxy .", "title": "", "metadata": ""}
{"_id": "f79517fd05a7055ec2673f9b2c57c0cb", "text": "close presale and transfer token ownership to the presale contract .", "title": "", "metadata": ""}
{"_id": "c6b2bbef1c295bae71113acdb397ae89", "text": "Modifier for important owner only functions .", "title": "", "metadata": ""}
{"_id": "5afd1a5a3e7f1d5cca8db451e8120540", "text": "token amount calculation .", "title": "", "metadata": ""}
{"_id": "1dba3c6b9690b69155d07be15b86f7a4", "text": "Check the symbol of the token ERC-20 Standard .", "title": "", "metadata": ""}
{"_id": "f2632933b92979a6f7d4fef7607af106", "text": "Withdraw tokens for receiver_ after crowdsale ends .", "title": "", "metadata": ""}
{"_id": "652fb2a4b625ae4943bcbcbad00d4f91", "text": "Calculates partial value given a numerator and denominator .", "title": "", "metadata": ""}
{"_id": "3245320fe87cd10980d61ac89c14da18", "text": "Returns the maximum amount of wei that the foundation can claim .", "title": "", "metadata": ""}
{"_id": "ce1cd39f2db62448022213360e804d78", "text": "Deposit ETH .", "title": "", "metadata": ""}
{"_id": "4209d5b27b62351bfa55e0256ed06e12", "text": "Interaction with other contracts .", "title": "", "metadata": ""}
{"_id": "c09cdd4169f892b00b16eb13c39ef27e", "text": "Function to transfer any ERC20 token to owner address which gets accidentally transferred to this contract .", "title": "", "metadata": ""}
{"_id": "7b3680d90be29d099541732c6d933f92", "text": "Administrative functions .", "title": "", "metadata": ""}
{"_id": "f52e995742fa0e79ecdab5a4216bc14c", "text": "Getters getSpaceshipProduct .", "title": "", "metadata": ""}
{"_id": "d25ae5c5844d8bca7be4b1f5d59de374", "text": "Add one user into white list .", "title": "", "metadata": ""}
{"_id": "5cb0888645dc327c5f86a7d8f7849774", "text": "Close a long position , this will : - sell the bancor for ETH - deduct interest , this will go to the house metamask 3 . 8 . 6 .", "title": "", "metadata": ""}
{"_id": "8661662e58a0c3d4050e4b7444349cb8", "text": "Burn Owner .", "title": "", "metadata": ""}
{"_id": "e658a4013e9986e156249f8a778c2aae", "text": "send ether to the fund collection wallet override to create custom fund forwarding mechanisms . . .", "title": "", "metadata": ""}
{"_id": "4aa993dd799e861cdb8368805925cff5", "text": "_amount , _freezeAmount in MeshX .", "title": "", "metadata": ""}
{"_id": "006da1bacae287d867282dc41dbef26f", "text": "Unfreeze the account .", "title": "", "metadata": ""}
{"_id": "930da7af747e412826b4ddb827fac0cc", "text": "Burn away the specified amount of Ant Coins .", "title": "", "metadata": ""}
{"_id": "8e1779785f7d3f76bbb3f06337808302", "text": "Transfers value tokens to to address from from .", "title": "", "metadata": ""}
{"_id": "7dfbb7220a5c6bf46b7c54361d6e19d5", "text": "Advertise your animal for selling in exchange for ethers .", "title": "", "metadata": ""}
{"_id": "ca1cbad6e87144442fdb7c372372d4c3", "text": "Log major life events .", "title": "", "metadata": ""}
{"_id": "54e51f006a679801a774e45d9e0e4758", "text": "Sets the rates in crowdsale .", "title": "", "metadata": ""}
{"_id": "a296b6fb9e5c73711f106ade7d1c0c99", "text": "It doesn't really close the stage .", "title": "", "metadata": ""}
{"_id": "079a211540a2f5d7e80a34df2165f32c", "text": "Set start time of ICO .", "title": "", "metadata": ""}
{"_id": "d0b590060225e08a48a67e59697a62e2", "text": "Has not been locked yet .", "title": "", "metadata": ""}
{"_id": "ea057d8f6cfc8def7fdb52082f45c474", "text": "the private helper function for transfering ownership .", "title": "", "metadata": ""}
{"_id": "abc59ab08909b88506e9a1ec799f7135", "text": "Check if a pair of nodes is a valid insertion point for a new node with the given key .", "title": "", "metadata": ""}
{"_id": "af4762022474c9d5e71f43bbfa11e628", "text": "Call CRB token to mint champion tokens .", "title": "", "metadata": ""}
{"_id": "b66a50979dc6428d1981dc5bca82385c", "text": "an integer for getting the discount value of the base discounts .", "title": "", "metadata": ""}
{"_id": "31e3075c30dd781ca616e6e8b91e7b87", "text": "Overrides parent to calculate how much extra wei was sent , and issues a refund .", "title": "", "metadata": ""}
{"_id": "39dd59a469d3eca421df1847b317476b", "text": "Allow someone transfer TAI tokens from your address ____________________________________________________________________________________ .", "title": "", "metadata": ""}
{"_id": "ca3fcd3d4aabf0448f9910d43fe6c007", "text": "Confirm the transaction .", "title": "", "metadata": ""}
{"_id": "56d02d41297630d25ba8a9ff1cc19654", "text": "deliverable fulfilled .", "title": "", "metadata": ""}
{"_id": "99635e17c015c1fbd8471fdb30b2ecca", "text": "Contribution through BTCs ( Bitcoin Suisse only ) can only be called before the crowdsale started .", "title": "", "metadata": ""}
{"_id": "51758363b4a3e748a13f1b7aa3abd96f", "text": "Ensure sender is depository .", "title": "", "metadata": ""}
{"_id": "ecd88f316bd594476790711928fb989d", "text": "Returns de ETH cap of the current currentStage .", "title": "", "metadata": ""}
{"_id": "3ffbef074d62a90b8f03e786a7d61598", "text": "this method only returns the base powerlevel of a monster which will be used in more advanced fighting calculations later on .", "title": "", "metadata": ""}
{"_id": "15e8116fa91c3361e861ed9fd2d0e273", "text": "updates balances with Profit Losses when there is a withdraw / deposit of investors .", "title": "", "metadata": ""}
{"_id": "20ba04f2831e61e1bee26573c6a7919e", "text": "Only stopping for bonus distribution .", "title": "", "metadata": ""}
{"_id": "9d3a495e013bf182cb444134564ced4a", "text": "airdrop tokens for a specified addresses .", "title": "", "metadata": ""}
{"_id": "c99c800ffa5f4cf5ec685071511c8f8a", "text": "exchange amount of this token to target token .", "title": "", "metadata": ""}
{"_id": "16cc3696e7b75c6fb7ab38b1524a0661", "text": "Function used by the client to send ethers .", "title": "", "metadata": ""}
{"_id": "39ee87896a5291ac648f05c5791dc5ec", "text": "only ower exec , distribute dividends .", "title": "", "metadata": ""}
{"_id": "f04face81456f1ddf4756a5534c69673", "text": "Used in HoloSale to get reserved tokens per funder and per day .", "title": "", "metadata": ""}
{"_id": "4b97bc4ffdb32c289958bcb06aca3432", "text": "Function token transfer .", "title": "", "metadata": ""}
{"_id": "3fe13685b68fbf06c2ee7c2e19afbf91", "text": "Stop crowding , cannot re-start .", "title": "", "metadata": ""}
{"_id": "2105cfdc2f1506dfb6d9020ca271a07e", "text": "Change freeze .", "title": "", "metadata": ""}
{"_id": "a007c7c92395a33756596ae06330d912", "text": "management of the repositories .", "title": "", "metadata": ""}
{"_id": "aae5a0f1da46a81a2fe2269176ddf68e", "text": "Execute all ERC20 token / Ether transfers associated with an order match ( fees and buyer seller transfer ) .", "title": "", "metadata": ""}
{"_id": "bd3fc02e24d62d38f92de2ee7075d707", "text": "Returns the current Balance of Main Sale .", "title": "", "metadata": ""}
{"_id": "9d899ccd9602900de3619149be1684ae", "text": "Freeze ALL token transfers .", "title": "", "metadata": ""}
{"_id": "88ef778b1be966d7eb95e41ab094d3fa", "text": "Set a blob to not be transferable .", "title": "", "metadata": ""}
{"_id": "047453f8deb49f553da0b0096fa4cdc7", "text": "set a new Fx representative .", "title": "", "metadata": ""}
{"_id": "5aff3fd6eb0a5842a745be68c024397f", "text": "Core methods .", "title": "", "metadata": ""}
{"_id": "932e39a993a4bf61560268098a0f290c", "text": "Only allow execution of a contract function if the work order is complete .", "title": "", "metadata": ""}
{"_id": "2e0d024929652309c4e95939b0545522", "text": "issueBounty ( ) : instantiates a new draft bounty .", "title": "", "metadata": ""}
{"_id": "7ce4b743a11ab4ee0420976415f8afe9", "text": "These set of functions allow changing of founder and company addresses .", "title": "", "metadata": ""}
{"_id": "32675e66bbcb0e1fbf50b4060d119618", "text": "verifies that the gas price is lower than 50 gwei .", "title": "", "metadata": ""}
{"_id": "f506fc954bc41a2df3ca0307a4472fd6", "text": "update a person's DOD .", "title": "", "metadata": ""}
{"_id": "36bb3b22f467e99d948e08b5525d2c40", "text": "function to set the mate advertisement price can only be called from owner wallet .", "title": "", "metadata": ""}
{"_id": "b982f9323a4099f045ef176260967d9f", "text": "multiplies two values safely and returns result .", "title": "", "metadata": ""}
{"_id": "beb740b1e6c8dc1e9723e663126a3591", "text": "ERC20 additional functions .", "title": "", "metadata": ""}
{"_id": "74abdf18578dca4948aba72d81f29daa", "text": "In case something goes wrong above , enable the users to withdraw their tokens .", "title": "", "metadata": ""}
{"_id": "b968ef81fcc8bf9f04b36ec888965b28", "text": "Setting crowdsale , crowdsale address can be 0x0 .", "title": "", "metadata": ""}
{"_id": "5b9abf04dcf95fa938b12d7963f6ac48", "text": "Admin Trasfer .", "title": "", "metadata": ""}
{"_id": "9e5f3920946ec4cca3109a7444559f7f", "text": "function for free Bets .", "title": "", "metadata": ""}
{"_id": "ca0e9dbbb721fbf4bb441ce2192abb26", "text": "Set blacklist .", "title": "", "metadata": ""}
{"_id": "9e6e95b1309a3e49a4df5b6cf41fe6c5", "text": "Retrieve the node id of the next node in the tree .", "title": "", "metadata": ""}
{"_id": "e1ebb22d492b2bf53b65708931f37f6b", "text": "The owner can update the rate ( EBSC to ETH ) .", "title": "", "metadata": ""}
{"_id": "89d3d0163263e35b91adbcd0f49e8132", "text": "return current price of an asset .", "title": "", "metadata": ""}
{"_id": "226debd168fe475f64de0b53ee7f0a3e", "text": "Returns number of instantiations by creator .", "title": "", "metadata": ""}
{"_id": "b92ee32351155762e1fa1c4eb023148c", "text": "charge fees . fee .", "title": "", "metadata": ""}
{"_id": "79f99d703e0c940baaca4d0b042dfb00", "text": "Allow the CFO to capture the free balance available in the auction contracts .", "title": "", "metadata": ""}
{"_id": "31e9286632881720f984de869b4f51c2", "text": "Set phase : index and values .", "title": "", "metadata": ""}
{"_id": "a0f39ee0d02321cf55943649bc0a4100", "text": "function called from MoatFund . sol .", "title": "", "metadata": ""}
{"_id": "442ec4533c7533f8a5a83365ef2960a1", "text": "refund To Owner .", "title": "", "metadata": ""}
{"_id": "5d0c3869582cdcc85b5957bcfe23f9f0", "text": "Create the token on the fly , owner is the contract , not the contract owner yet .", "title": "", "metadata": ""}
{"_id": "87ae710b4d0891366899673c8b9f656f", "text": "allow another Ethereum account to spend TMX Equity Tokens from your Account .", "title": "", "metadata": ""}
{"_id": "aa2a1da928f40c8a7f6fe9f3ae6f6b24", "text": "Salvage tokens from this .", "title": "", "metadata": ""}
{"_id": "40d3a8b1e9ea4953deca1b53cd998160", "text": "get lockedaccount .", "title": "", "metadata": ""}
{"_id": "7d6b6fcf149562799c73d3863e38b0cb", "text": "Returns boolean for whether crowdsale has ended .", "title": "", "metadata": ""}
{"_id": "7fe50a071756983e50eb519f29e8421c", "text": "Same ERC20 behavior , but require the token to be unlocked .", "title": "", "metadata": ""}
{"_id": "f4488e63e8854948852684c1c65ef2cf", "text": "Emergency situations only .", "title": "", "metadata": ""}
{"_id": "827a2b4fb7da8103e3ee9b214b3d89b9", "text": "Function adding of new verification address .", "title": "", "metadata": ""}
{"_id": "8d3e1bbb4a060ff6689b1c843a499182", "text": "Must be called only in special cases .", "title": "", "metadata": ""}
{"_id": "6a592d797c7dc6e209b7a047379abdd4", "text": "Overrides original mint function from MintableToken to limit minting over cap .", "title": "", "metadata": ""}
{"_id": "4a226385a1f2980e80fad4b4358552be", "text": "Remaining tokens for sales will be locked by contract in 2 years .", "title": "", "metadata": ""}
{"_id": "33cede4ba46f80a4309afe10a613e716", "text": "Checks input and then creates storage buffer for sale initialization .", "title": "", "metadata": ""}
{"_id": "8f9f69cca2ffb738515b568e59c2d48b", "text": "Create an account instantly .", "title": "", "metadata": ""}
{"_id": "26d6551edd331c35af6867c387b94d6f", "text": "book OVIS partner sale tokens .", "title": "", "metadata": ""}
{"_id": "fe4455b40d64886922668540060658ac", "text": "check if hard cap goal is reached in USD .", "title": "", "metadata": ""}
{"_id": "5a72d49fc2dd6b115b69cc6caf1e70d0", "text": "Check whether a provided plaintext secret hashes to a provided hash .", "title": "", "metadata": ""}
{"_id": "fbbedf4f8177ee9a90dff56df7f84760", "text": "Burns specified investor tokens .", "title": "", "metadata": ""}
{"_id": "efc6672338c116e406c81840c7290909", "text": "Set the price of the token .", "title": "", "metadata": ""}
{"_id": "77a96d380d4289486459f351ebfb45f3", "text": "Retrieve the checksum assigned assigned to particular resource .", "title": "", "metadata": ""}
{"_id": "686e6730cdf15be90026ebb25c593b34", "text": "Allow users to buy tokens for newBuyPrice eth and sell tokens for newSellPrice eth .", "title": "", "metadata": ""}
{"_id": "0db70a3e7406890c200a3805ff07eba8", "text": "Sets current bonus ( ) .", "title": "", "metadata": ""}
{"_id": "9fe0593e44752bf8ffe67296b0667eef", "text": "Returns if avatar of the given hash exists .", "title": "", "metadata": ""}
{"_id": "71dd0e9f0105493fb74d04339933b3ad", "text": "Internal function for getting an address from tokenFallback data bytes .", "title": "", "metadata": ""}
{"_id": "7c4599a68df4b0b492fb67304221654a", "text": "Admin may refund a submission to a user .", "title": "", "metadata": ""}
{"_id": "4c52686c6484ee319d87dbecf84e1bb2", "text": "this closes it when we want to close - rather than waiting .", "title": "", "metadata": ""}
{"_id": "2cfe244ab58a056f09ba77fa06898e84", "text": "Enable or disable approval for a third party ( operator ) to manage all your asset .", "title": "", "metadata": ""}
{"_id": "61c15aef6f409ef414044d10669b43f0", "text": "Number of non-zero entries in whitelist .", "title": "", "metadata": ""}
{"_id": "50422b447816ece116e658b2b9411a19", "text": "Lock the special address .", "title": "", "metadata": ""}
{"_id": "24c04600ae67348840b3600a1697f929", "text": "Setup function sets external contracts' address .", "title": "", "metadata": ""}
{"_id": "7c7e04049e2a4c288b54ab8b21b23573", "text": "admin can set anyone as owner , even empty .", "title": "", "metadata": ""}
{"_id": "9509e3b7613cad5ae084f9e78ff7f383", "text": "Checks the allowance of an account against another one .", "title": "", "metadata": ""}
{"_id": "382efd6f1ecae22328b7751d1abb3d0e", "text": "we can call this function to check the status of both crowdsale and blocklord .", "title": "", "metadata": ""}
{"_id": "1220c5f7d1c7eaf9e63acfd53cf8be95", "text": "Transfer token for a specified address with pause and freeze features for owner .", "title": "", "metadata": ""}
{"_id": "be9ce813bc00722db53b76ee90212611", "text": "function calculate how many tokens will be send to investor in preIco .", "title": "", "metadata": ""}
{"_id": "dc9ad2252ba42aa0820090762758fa60", "text": "Set the upgrade master .", "title": "", "metadata": ""}
{"_id": "fbd98823d9420d4add7954ead86acd80", "text": "This will not throw error on wrong input , but instead consume large and unknown amount of gas .", "title": "", "metadata": ""}
{"_id": "57fa292ed976a9f016f600548f725aaa", "text": "Only allow some actions before the crowdsale starts .", "title": "", "metadata": ""}
{"_id": "b272d66127e4cb0f4529cb9febf4d7c3", "text": "event OnSetLock ( bool indexed _oldGlobalLocked , bool indexed _newGlobalLocked ) ; .", "title": "", "metadata": ""}
{"_id": "a23167edae436dd423f9d15c437d01f5", "text": "check how many Ace Tokens a spender is allowed to spend from an owner .", "title": "", "metadata": ""}
{"_id": "502a0cdb40a382b54cc48f654a4c6126", "text": "In case one of us dissapears , we need to replace them .", "title": "", "metadata": ""}
{"_id": "17f8cf6cf7d52ef9a9713759d14485c4", "text": "adding a city will mint ECONOMY_BOOST citycoins ( country must exist ) .", "title": "", "metadata": ""}
{"_id": "47ca425bcc92a66f354371091f831c6c", "text": "Open the crowdsale .", "title": "", "metadata": ""}
{"_id": "621e0a1a816f90a23584e14a4191ce5e", "text": "Cancels an auction .", "title": "", "metadata": ""}
{"_id": "e0693b04eae517e5bba9d87c0d8bf524", "text": "Sets new beneficiary to receive funds .", "title": "", "metadata": ""}
{"_id": "0fe8302b2b6e80080dbee0ad4cc4c906", "text": "Close crowdsale , only for owner .", "title": "", "metadata": ""}
{"_id": "e52e99d3258953a515d61abb7750a22a", "text": "modifier to allow token transfer only when '_sender' is icoAgent or crowdsale has ended .", "title": "", "metadata": ""}
{"_id": "05bf5e518221fe9a0b4cf864c4e76ad9", "text": "ERC20 Functions .", "title": "", "metadata": ""}
{"_id": "0a39fd8f2b2512ad1777989d8e839c80", "text": "this function allows to mint coins up to totalSupply , so if coins were burnt it adds room for minting since natural loss of coins is expected the overall amount in use will be less than totalSupply .", "title": "", "metadata": ""}
{"_id": "bbdcb59a27c05f0af540478623af0d9b", "text": "Return information for the current window .", "title": "", "metadata": ""}
{"_id": "a395ae430d2339cf79516ecfe7b0db30", "text": "internal ( read only ) : unnecessary - just for enduser lookylooky .", "title": "", "metadata": ""}
{"_id": "da55991bba5dcec413cb942db8ccbd0b", "text": "Function to pay back Ether .", "title": "", "metadata": ""}
{"_id": "8b8e4f61c7fb811856794b011d2aa96a", "text": "set crowdsale phase .", "title": "", "metadata": ""}
{"_id": "cfe37a93cc47a79834b54eb79a53ead8", "text": "Security and funds section .", "title": "", "metadata": ""}
{"_id": "90faa8b5ab35742613b760f1be177a3b", "text": "Method for setting USD to Ether rate from Poloniex .", "title": "", "metadata": ""}
{"_id": "72530209bd076cab4680452208f7d25b", "text": "end time of the pre-ICO .", "title": "", "metadata": ""}
{"_id": "d8ffbef4db9815f4d1b0ede27eb025bb", "text": "Allow message contract to spend some tokens in your behalf .", "title": "", "metadata": ""}
{"_id": "4e37c365a631bb1873f20bacdf4592fa", "text": "Only owner or smart contract of the same owner in chain .", "title": "", "metadata": ""}
{"_id": "b32473898dad9b063a3ccd9af2117364", "text": "Update a row of image data for a Property , triggering potential payouts if it succeeds .", "title": "", "metadata": ""}
{"_id": "5bc53776c54ed570a2743651e52a434f", "text": "Function to burn tokens _value The amount of tokens to burn .", "title": "", "metadata": ""}
{"_id": "d70fa5b32bd9ae4db61d45409c20f7dc", "text": "Activates voting .", "title": "", "metadata": ""}
{"_id": "f2516c645d4785689bc49150451a1ed1", "text": "Add Meaning .", "title": "", "metadata": ""}
{"_id": "556dce6a34e680d4f6c22d1fd806ac06", "text": "owner can withdraw all collected funds .", "title": "", "metadata": ""}
{"_id": "8e34fb5c53c40512ef775b06ebf97ad1", "text": "Function that returns the ( dynamic ) price of selling a single token .", "title": "", "metadata": ""}
{"_id": "cdfae5f0e089274632a3eb142c2052e0", "text": "Returns true if there is a transaction pending .", "title": "", "metadata": ""}
{"_id": "9541f70f165b667c86021060a02c7fce", "text": "buy animals of a given type as many animals as possible are bought with msg . value , .", "title": "", "metadata": ""}
{"_id": "c900aacb3f2b61bd7f3d7fa55cd6482d", "text": "Math operations with safety checks that throw on error .", "title": "", "metadata": ""}
{"_id": "239de43ca42038924479b9d9d4a2f52e", "text": "Return amount of bonus tokens ( in EXTwei ) .", "title": "", "metadata": ""}
{"_id": "23aa88112e98c1d8e0298f73858053d9", "text": "Accepts ethers from investor and sends back HDL tokens .", "title": "", "metadata": ""}
{"_id": "be4a4a0fdf6ebf81785285e59f46320c", "text": "to set ico sale values if needed .", "title": "", "metadata": ""}
{"_id": "3110036cc5413f1f499c92b291e13c46", "text": "Function to receive ERC223 tokens .", "title": "", "metadata": ""}
{"_id": "d011c9af4657b11798654030b9ac0e84", "text": "When tokenSaleMin is not reach : 1 ) donors call the refund function of the GATCrowdFundingToken contract .", "title": "", "metadata": ""}
{"_id": "91e1b645f6199712e4655cf601dab051", "text": "closes round automatically .", "title": "", "metadata": ""}
{"_id": "f0ce82b1f6dff096d017848431338f43", "text": "Returns true if given address is the contract address , otherwise - returns false .", "title": "", "metadata": ""}
{"_id": "daf2bcd8a9bea844226d4c32f4143e19", "text": "Issue tokens and return if there is overflow .", "title": "", "metadata": ""}
{"_id": "7d46ac17f6af917a4d9fd29b064b993c", "text": "A helper function for the default function , allowing contracts to interact .", "title": "", "metadata": ""}
{"_id": "9583be05eae73f029ca7b2688037bbe8", "text": "Function to set transfer locks .", "title": "", "metadata": ""}
{"_id": "d8be60b948d4a246f3616ff3674994a6", "text": "check is TLP2 is active ? .", "title": "", "metadata": ""}
{"_id": "83871f4b9fa3e63e6dd0581dd84cea69", "text": "Forwards the amount from the contract to the vaults , 67 of the amount to vault1 and 33 to vault2 .", "title": "", "metadata": ""}
{"_id": "21f8682c0c7a5e8b610b181f3530f770", "text": "Get received token of specified address .", "title": "", "metadata": ""}
{"_id": "24a3ec0ca68bb2e9791d3b3a1092ff95", "text": "V\u00e9rifier si la vente est valid\u00e9e .", "title": "", "metadata": ""}
{"_id": "9beaf9e27a9cd6ae2dc89a4d0e37b3fd", "text": "Calculate eggs to buy simple .", "title": "", "metadata": ""}
{"_id": "a6a7ed6d0011f4b6c10dc8d3c3b4691f", "text": "returns the owner of a pixel .", "title": "", "metadata": ""}
{"_id": "49f541d4c5b27158b7e53dbf2ba67e00", "text": "Gets the USD amount for specified wei amount .", "title": "", "metadata": ""}
{"_id": "13ddedfdaa6eb88c654a1b4b0b3b599c", "text": "Address _from is msg . sender .", "title": "", "metadata": ""}
{"_id": "07447747014fcdc181e01f993285d80c", "text": "distributes eth based on fees to com , aff , and up .", "title": "", "metadata": ""}
{"_id": "6d76a4f699955abee8f184718e02a933", "text": "Close vault only if goal was reached .", "title": "", "metadata": ""}
{"_id": "157e4450c172ef77eef7192ca80ee9e8", "text": "- return true on success false otherwise .", "title": "", "metadata": ""}
{"_id": "ce99d3309db30792ab3f606a2c3f4758", "text": "Removes moderator from the contract .", "title": "", "metadata": ""}
{"_id": "6e42489a6c6b1feb2c78e4d0ea6fe4aa", "text": "Sets the taker fee .", "title": "", "metadata": ""}
{"_id": "d37c43eaed04aaa83530c891f2131425", "text": "Minting of tokens by owner .", "title": "", "metadata": ""}
{"_id": "3240be21fef77a55f2b563aaccb08e07", "text": "Delete all tokens owned by sender and return unpaid dividends and 90 of initial investment .", "title": "", "metadata": ""}
{"_id": "8699b8fefef32c07e714ed8aa7f89737", "text": "Owner to add precommitment funding token balance before the crowdsale commences .", "title": "", "metadata": ""}
{"_id": "f85d0aa187d159e1eb7ab93da6a4a841", "text": "Transfer a deed owned by this contract to another address .", "title": "", "metadata": ""}
{"_id": "ec3245542b13714400147bad4f14f7e9", "text": "Send _value tokens to _to .", "title": "", "metadata": ""}
{"_id": "dfd52434cc44b969839381a39126651c", "text": "End crowdsale manually .", "title": "", "metadata": ""}
{"_id": "0de1cec5624c238e381004114dba92f3", "text": "Transfer initiated by spender .", "title": "", "metadata": ""}
{"_id": "2f42a5f39aab05604a33ce50743f993d", "text": "We validate the new amount doesn't surpass maximum contribution cap .", "title": "", "metadata": ""}
{"_id": "fdc4321b2b44c7aeaba562ea83b45046", "text": "Creates a new promo Emoji with the given name , with given _price and assignes it to an address .", "title": "", "metadata": ""}
{"_id": "388382a6c013291f8a457003fc629061", "text": "authorise an account to participate .", "title": "", "metadata": ""}
{"_id": "c358c209a291cfaa53139afa9007ca84", "text": "Bounty pool makes up 2 from all tokens bought .", "title": "", "metadata": ""}
{"_id": "6fd876998dda1b467f2c308f74c1aa46", "text": "Allows anyone to transfer the Strike tokens once trading has started .", "title": "", "metadata": ""}
{"_id": "e63cfa46f2ec156df8274afb8f843b5a", "text": "function to temporarily pause token sale if needed .", "title": "", "metadata": ""}
{"_id": "a0649423d7aacf88de959b317803551a", "text": "Cast or change your vote .", "title": "", "metadata": ""}
{"_id": "ef3ee32f312137ff1f0c5973bc6b0a20", "text": "Update the order structs .", "title": "", "metadata": ""}
{"_id": "d2f96de89b5b89c4631f953d5942564e", "text": "Unregister _observer as an observer .", "title": "", "metadata": ""}
{"_id": "d9d3a1507ce8cc24b50eef74a1c051d9", "text": "approves a spender to spend an amount .", "title": "", "metadata": ""}
{"_id": "1694660cd67b22c55ef9491597f2b9ac", "text": "check number of bets in block ( to prevent miner cheating and keep max reward per block 5ETH ) .", "title": "", "metadata": ""}
{"_id": "039f09538b736a1409051848d1166f03", "text": "disable setup mode .", "title": "", "metadata": ""}
{"_id": "9bdf5299f160bef5db4a5f876116834c", "text": "takes ethers from zebiwallet to smart contract .", "title": "", "metadata": ""}
{"_id": "82018c72572f8f9bd65dee0523c60ff2", "text": "Mints new ETF tokens .", "title": "", "metadata": ""}
{"_id": "1f51a4046a8f2b5eafa8c7a74406cb24", "text": "Owner can move tokens to any address .", "title": "", "metadata": ""}
{"_id": "e0138499169f47ef14918cc37b77f891", "text": "Allows the suggested owner to accept ownership role .", "title": "", "metadata": ""}
{"_id": "ac64b6ab47ff11cc3c4f71b61722d8c7", "text": "Only allows current delegates .", "title": "", "metadata": ""}
{"_id": "700be89c7ff1142b350c0b1d30e1982f", "text": "get AMToken contract address .", "title": "", "metadata": ""}
{"_id": "b18b3fe08df0e9cc672d9fb367f430ee", "text": "Returns funds that should be sent to beneficiary .", "title": "", "metadata": ""}
{"_id": "7f913618c92c6b71b6a1ba72eb11e164", "text": "Sale is executed in stages / tranches .", "title": "", "metadata": ""}
{"_id": "baa74c4b6616f57bec18fd4652b85513", "text": "Modifies convention data by setting a new value for a given index field .", "title": "", "metadata": ""}
{"_id": "af1b27c0a929a86c3d46c982c784d3fc", "text": "Either sale closed or 24 Dec 2017 passed .", "title": "", "metadata": ""}
{"_id": "ad66172920b5c491d2d7253eac294286", "text": "Adds to the contract balance tracking var .", "title": "", "metadata": ""}
{"_id": "b0ae712a2acb36e2e30962fbfd0fe021", "text": "Reclaim all ERC20Basic compatible tokens .", "title": "", "metadata": ""}
{"_id": "da1d26ec8db1fbfa8b2cdc7498153da2", "text": "Owner : Withdraw excess funds which don't belong to ETF Token holders .", "title": "", "metadata": ""}
{"_id": "7e2f43fb21dc1e17988a24dae854623a", "text": "This function allow to get bonus tokens for a buyer and for referral .", "title": "", "metadata": ""}
{"_id": "5a49ce69c99024516edbca72642b433d", "text": "To register a Cabal , you must - implement CabalInterface - open-source your Cabal on Etherscan or equivalent .", "title": "", "metadata": ""}
{"_id": "c96d256bf356d9adc96c721b1d80c9f6", "text": "Checking that we do not exceed the investment cap .", "title": "", "metadata": ""}
{"_id": "1aec4ddbcf73a60d7cf766c69685e890", "text": "Check cap for pool address in tier 1 and 2 .", "title": "", "metadata": ""}
{"_id": "fe315466b644fddcc01b07dbb8df8cfa", "text": "Returns the address of the manager .", "title": "", "metadata": ""}
{"_id": "cb69fe4fc332aaa4d9b18baf60712ecf", "text": "change the owner of the contract from this contract address to another one .", "title": "", "metadata": ""}
{"_id": "1b5f3af0ae08b5ec21f50f4eae5e595e", "text": "Transfer a section and an IPO token to the supplied address .", "title": "", "metadata": ""}
{"_id": "59e0813e4b24fb558a5c10549fd5e690", "text": "Sets address to transfer tokens to upon crowdsale finalization .", "title": "", "metadata": ""}
{"_id": "ac519c5395a4a9b1c86f540675b75086", "text": "Split floor related details out of getDungeonDetails , just to avoid Stack Too Deep error .", "title": "", "metadata": ""}
{"_id": "ff5661095fe5f18055ecc494716c0f84", "text": "get current user total granted token amount .", "title": "", "metadata": ""}
{"_id": "da91300c812d6fa5789ebdc16edfe73b", "text": "called by owner to enable / disable contribution .", "title": "", "metadata": ""}
{"_id": "136d64beaffc32c027737d062bb433ae", "text": "Set the gas relevant price parameters for the Oraclize calls , in case of future needs for higher gas prices for adequate transaction times , or incase of Oraclize price hikes .", "title": "", "metadata": ""}
{"_id": "5b00ba2ba19df7f09dd98e7518bf7312", "text": "After sealing , no more filling is possible .", "title": "", "metadata": ""}
{"_id": "43d82a3354834193cf0d783d928dc9de", "text": "this is where you can wager one of your addresses for a certain amount .", "title": "", "metadata": ""}
{"_id": "8fc7eac899d66695733f0192f6fd6200", "text": "holder id .", "title": "", "metadata": ""}
{"_id": "965c5a8da9cd5aa807766dc52d4db27c", "text": "Check if contract is open .", "title": "", "metadata": ""}
{"_id": "e70856ae3951479b3a84296e95a5313d", "text": "Check crowdsale state and calibrate it .", "title": "", "metadata": ""}
{"_id": "eb9bc0ddd5973b81f85508bb22b1eed4", "text": "Migrate details of previous contract cat owners addresses and cat balances to new contract instance .", "title": "", "metadata": ""}
{"_id": "2eff263db7b1ad29990112f16cbffd0c", "text": "also records the token issued time .", "title": "", "metadata": ""}
{"_id": "8352556a0f46eacc172e0691a2ee933f", "text": "Allow the owner to set cost .", "title": "", "metadata": ""}
{"_id": "60248da9ec851099102b550f6b067d2e", "text": "return the num games as reported from the e4row contract .", "title": "", "metadata": ""}
{"_id": "eac541adadd216319989d6a3eac32d73", "text": "Set to moving after crowdsale has opened .", "title": "", "metadata": ""}
{"_id": "5b58389eada73a6e064f5ab2bcd3c486", "text": "forbid specified address from sending receiving tokens .", "title": "", "metadata": ""}
{"_id": "589cc5ac636c20131be122770722a5bd", "text": "Set admin account to manage contract .", "title": "", "metadata": ""}
{"_id": "61affc968e7440bf7ff0fdc880a13b9a", "text": "callback from sale contract when the sale begins .", "title": "", "metadata": ""}
{"_id": "993957df8b69020d44105fd0c94acc3f", "text": "Allow card owner to edit his card informations .", "title": "", "metadata": ""}
{"_id": "3f7d8a0c1593a8c2f25db64bab69ec18", "text": "Grants approval to another user to sire with one of your EtherDogs .", "title": "", "metadata": ""}
{"_id": "8b53c2041ee1802df04dcf0d93b370a9", "text": "Allows allowed third party to transfer tokens from one address to another .", "title": "", "metadata": ""}
{"_id": "267006126f9a5a36b6844e41a0b11103", "text": "Transfers tokens to a recipient and freezes it .", "title": "", "metadata": ""}
{"_id": "58bbc80fe4b17e537525579b4a5074d8", "text": "Calculates the variable fees depending on the amount , thresholds and rates set .", "title": "", "metadata": ""}
{"_id": "6d4326572559212ab7f36dc3db1c5157", "text": "Calculates the amount paid to the short and long parties per token .", "title": "", "metadata": ""}
{"_id": "bd5d87c6abdea526079deae0d3248504", "text": "Set the PriceSetter address , which has access to set one Ponzi token price in wei .", "title": "", "metadata": ""}
{"_id": "ad2b494833a7a297941cb7fe8f9799b7", "text": "allow burning of tokens only by authorized users .", "title": "", "metadata": ""}
{"_id": "7f6c1cac6b84daa97b8297444961b635", "text": "Gets the EscrowDeposit based on the input id .", "title": "", "metadata": ""}
{"_id": "cb1df6e226a239247975e1ca532dd9c6", "text": "This function disables token transfers for everyone .", "title": "", "metadata": ""}
{"_id": "9e39149531492e4e92644a1be665cf57", "text": "find who owns that jingle and at what position is it in the owners arr .", "title": "", "metadata": ""}
{"_id": "ea948bb92168929e19e85e19ac87af4d", "text": "Determines whether the Buyer is the Maker or the Taker for a given Option .", "title": "", "metadata": ""}
{"_id": "1d3ae85d452183d9b6e1b83929285c7e", "text": "modifier that throws if spender address is not allowed to transfer and the trading is not enabled .", "title": "", "metadata": ""}
{"_id": "3a89ccc33caea6c104c90e995f4b3bb4", "text": "funciones transferencias .", "title": "", "metadata": ""}
{"_id": "203570095eae01e1972d7eb0334ea9f8", "text": "We use the following functions to pause and unpause the game .", "title": "", "metadata": ""}
{"_id": "238c947c60140ca3bec3b45ab1ffd57f", "text": "Can be used by player if server does not answer to the end game session request .", "title": "", "metadata": ""}
{"_id": "12f80a657f55d1df3b6ee8203cd996fe", "text": "Finalize the presale by specifying the XNK token's contract address .", "title": "", "metadata": ""}
{"_id": "8e20071e9073fc7822f68d885860922a", "text": "Refund an investor when he sends a withdrawal transaction .", "title": "", "metadata": ""}
{"_id": "209a9960abaf947261c2aa6e9fcca07d", "text": "Owner functions and setters for parameter vars .", "title": "", "metadata": ""}
{"_id": "fd5f7bb577692f5c7f356da0d286611a", "text": "Or the game could be automatically solved a few moments later by the owner , charging a 'solverFee' .", "title": "", "metadata": ""}
{"_id": "58bb7bda8e2c427457e3814335407a12", "text": "Calculates the payout of each dividend recipient in the event of a share sale .", "title": "", "metadata": ""}
{"_id": "837cec780ef53bca29bc3165f19cc819", "text": "Return the numbers of items in the list per status .", "title": "", "metadata": ""}
{"_id": "69a535ae396f219d2685674c7fdcb4a8", "text": "Withdraw untraded tokens 1M at a time .", "title": "", "metadata": ""}
{"_id": "42a0017dd3878da944f1000a523ad296", "text": "for convenience : .", "title": "", "metadata": ""}
{"_id": "2077744c764e7e940a901ca97edcd7b7", "text": "set upgrade .", "title": "", "metadata": ""}
{"_id": "6e6c396004ba0f46dbcbfdbdaffddff6", "text": "withdraw allows the owner of the contract to withdraw all ether collected by bell ringers .", "title": "", "metadata": ""}
{"_id": "6c6f9c01ad95b86eb2c162eb99dd717d", "text": "send ether to Fiduxa main collection wallet safety measure : we send to the contract creator address only .", "title": "", "metadata": ""}
{"_id": "54da1486f06ed67197dc786ae5cabe7d", "text": "private methods .", "title": "", "metadata": ""}
{"_id": "40d7bb3f6181636e63cab76402f2718c", "text": "funtion to claim stake reward .", "title": "", "metadata": ""}
{"_id": "6b15a9b2b6cf8ada288b245efc17d4d0", "text": "Drain Any Ether in contract to owner .", "title": "", "metadata": ""}
{"_id": "6d0a0f00aa3f3d56ba1a295d212fbccc", "text": "Subtracts two unsigned integers , throws on overflow ( i . e .", "title": "", "metadata": ""}
{"_id": "0e3765e4e77b6b26dff5b9999e864ded", "text": "Address where funds are collected .", "title": "", "metadata": ""}
{"_id": "6364988c1d0dcf723b853f60a605ac12", "text": "check if user and casino agree on the number of cards .", "title": "", "metadata": ""}
{"_id": "33c6f6894d38f3c30dddc18bda6de1cb", "text": "This function allows users to purchase Video Game Item .", "title": "", "metadata": ""}
{"_id": "e052834f463149d7fd341350d06de320", "text": "Allow addition of freezers to allow future contracts to use the role .", "title": "", "metadata": ""}
{"_id": "c228d3cdc48c0da268d02e636abf52bc", "text": "Change the cut that Bitwords takes .", "title": "", "metadata": ""}
{"_id": "e2c2e76ca8b6568f8bd74646d94985c2", "text": "re-entrance attack can freeze all dividends calculation .", "title": "", "metadata": ""}
{"_id": "082a633cb641e36e0f6636b3816b06d8", "text": "Common internal pay function .", "title": "", "metadata": ""}
{"_id": "d3350b29963b6cfb79f95177f2555267", "text": "send tokens throws on any error rather then return a false flag to minimize user errors in addition to the standard checks , the function throws if transfers are disabled .", "title": "", "metadata": ""}
{"_id": "a9d9e0227fdedcc1f1e2bb51bdda7b16", "text": "Function that enables / disables transfers of token .", "title": "", "metadata": ""}
{"_id": "963d37e03f6bdc02e86005e1fd35662b", "text": "Validate that the hash of a provided address was signed by the ECDSA public key associated with the specified Ethereum address .", "title": "", "metadata": ""}
{"_id": "f77f66d6979c7f531173a1d193650431", "text": "Gets the Owner Name of the Day at OwnTheDay . io .", "title": "", "metadata": ""}
{"_id": "47056d20f6457548b1a86de96b98e5f3", "text": "withdraw NDC and TPT tokens .", "title": "", "metadata": ""}
{"_id": "95717b53038b21f9544fb8ae7becec67", "text": "ensure a device is validated for registration .", "title": "", "metadata": ""}
{"_id": "9673e84443451f22125c39f2c664f528", "text": "set the handle of the token contract .", "title": "", "metadata": ""}
{"_id": "807d67da8a3aee40fb17bb3f93313e9b", "text": "usdPerKEther 1 , 000 , 000 capEth USD 10 , 000 , 000 / 1 , 000 10 , 000 presaleEth 4 , 561 . 764705882353 .", "title": "", "metadata": ""}
{"_id": "8c8946c48b3c3ed265c7f70166897c50", "text": "Used to look up balance of a person .", "title": "", "metadata": ""}
{"_id": "fb0d96907601772addc481cb55bc7ab4", "text": "Perform crowdsale finalization .", "title": "", "metadata": ""}
{"_id": "7789e4400f0d099ec41e750d286a5d80", "text": "one can buy holds from anyone who set up an price , and u can buy price higher than he setup .", "title": "", "metadata": ""}
{"_id": "7831d74118c10cb6afe600b4cdd620db", "text": "Checks if a given address currently has transferApproval for a particular token .", "title": "", "metadata": ""}
{"_id": "ad653f115fab1437a93e0dc9a8dec2b1", "text": "Triggers some state changes based on current time .", "title": "", "metadata": ""}
{"_id": "912850571585e1ab41b78a03f1d2c6a5", "text": "just for me .", "title": "", "metadata": ""}
{"_id": "b97e65f7742992a9499a15cb097f42f3", "text": "The function initializes the bundle of accounts with a release date .", "title": "", "metadata": ""}
{"_id": "d4c026339678f24c16ab581f1c490b37", "text": "Check transfering transaction valid .", "title": "", "metadata": ""}
{"_id": "b2931a545cdcc59a84cfbe3aaa96fa83", "text": "This function returns the total number of coins available on the blockchain .", "title": "", "metadata": ""}
{"_id": "9d06e5ffbbe32be3e06f1d547936f215", "text": "Gets the balance of the specified address include freezing tokens .", "title": "", "metadata": ""}
{"_id": "6ba77c77e4370dd4596e76b48dacf5c9", "text": "Buy tokens with limit maximum average price .", "title": "", "metadata": ""}
{"_id": "3f36148ef63dd2baad02d0f8846c6979", "text": "Funzione interna di transfer , in uso solo allo Smart Contract .", "title": "", "metadata": ""}
{"_id": "ee239604997b98ab60eb3ff041d7f48f", "text": "Update Multiple Users Reward Amount .", "title": "", "metadata": ""}
{"_id": "dcbd85c401233127f2040c495dec69fa", "text": "Executes script by delegatecall into a contract .", "title": "", "metadata": ""}
{"_id": "70d5bcae9ac275820a0eb335644fecdb", "text": "Updates the rush time challenge rewards percentage .", "title": "", "metadata": ""}
{"_id": "913a51d7ebdafe8e60f382613bff4995", "text": "Allows the owner to take back the tokens that are assigned to the sale contract .", "title": "", "metadata": ""}
{"_id": "c2e48130aaeaa5ec1b30c78f357a3b6f", "text": "Assures that the provided address is a valid destination to transfer tokens to .", "title": "", "metadata": ""}
{"_id": "73bf487a1b4ad1d2814b0ba88982c546", "text": "Withdraw Remaining Resource Tokens .", "title": "", "metadata": ""}
{"_id": "523411370e1c5d0ee9b6aa2f4c079b84", "text": "Get BOPT balance for provided address .", "title": "", "metadata": ""}
{"_id": "622542c2e72474e21034ac3b08d6bdf4", "text": "Allows participants to buy tokens .", "title": "", "metadata": ""}
{"_id": "d5cbe131eaed147e4f170308081d1800", "text": "onlyOwnerOrOperator set maxProfitAsPercentOfHouse .", "title": "", "metadata": ""}
{"_id": "ed4c3d582f2e54e511a50cfd1a91278f", "text": "changeBountyfulfillmentAmount ( ) : allows the issuer to change a bounty's fulfillment amount .", "title": "", "metadata": ""}
{"_id": "e2e79b33fec9142172c08e168b03ef1b", "text": "override StandardToken transfer ensures the minting has finished or the message sender is the token owner .", "title": "", "metadata": ""}
{"_id": "48480090dd8bce693160e1079162e7a4", "text": "Returns the first slice of a split .", "title": "", "metadata": ""}
{"_id": "894c9b0e0e84b71f1c4bc4fd683f24fd", "text": "Function to check that if Investor already voted for a particular task or not , if voted : true , else : false .", "title": "", "metadata": ""}
{"_id": "6536ac5d2ec9905cfe3949fcf7ad3953", "text": "stock methods .", "title": "", "metadata": ""}
{"_id": "d7ecfb4632885a773df5d9ac0fd5611e", "text": "Setter functions for crowdsale parameters .", "title": "", "metadata": ""}
{"_id": "8e7ea2ef1bfc9fba5303b13f09fe68d6", "text": "Override so that minting cannot be accidentally terminated .", "title": "", "metadata": ""}
{"_id": "0994ca950c4a57090cdcaf0f6d2629d6", "text": "colors FFFFFF , E4E4E4 , 888888 , 222222 , FFA7D1 , E50000 , E59500 , A06A42 , E5D900 , 94E044 , 02BE01 , 00E5F0 , 0083C7 , 0000EA , E04AFF , 820080 .", "title": "", "metadata": ""}
{"_id": "33e02c99cfe79d836613fcbc15677f60", "text": "Wrapper of token . transferFrom .", "title": "", "metadata": ""}
{"_id": "994b423230067ccd7f51f307f88a1ddc", "text": "Crowdsale Closed .", "title": "", "metadata": ""}
{"_id": "c59d32b96613bcb3f16386d314209c75", "text": "Disable whitelisting .", "title": "", "metadata": ""}
{"_id": "01fa44b5263efe24013f7c4580f0c07d", "text": "Change the manager .", "title": "", "metadata": ""}
{"_id": "b5fef1909d58a15555a6070c5fca46f2", "text": "Will always fail if called .", "title": "", "metadata": ""}
{"_id": "3d5664bea06723b5853613ed0dc6a57c", "text": "level down ! ! ! gene remains identical ! ! ! notes identical ! ! ! .", "title": "", "metadata": ""}
{"_id": "7671e0ac6200d5d0aa8b2010db2e5d4d", "text": "Function to check whether the current supply exceeds capOfTotalSupply .", "title": "", "metadata": ""}
{"_id": "e7ab0e0418e2ca10a65b0b9c80910afc", "text": "Force end of game if player does not respond .", "title": "", "metadata": ""}
{"_id": "71cc1ece5ecd54100ebf9a609c766f19", "text": "Creates a new gen0 cutie with the given genes and creates an auction for it .", "title": "", "metadata": ""}
{"_id": "6ddc0cabe5a44a47622aad6ef6ee6fc0", "text": "Finish Crowdsale .", "title": "", "metadata": ""}
{"_id": "3a0ea4ee99ae4839ae2d4912e6e9b539", "text": "Helps in fetching information regarding a Voucher assetId : The actual ERC721 Asset ID sequenceId : Index w . r . t .", "title": "", "metadata": ""}
{"_id": "165712267d5e9f86ef702a9e437a10bc", "text": "Get remaining wildcards .", "title": "", "metadata": ""}
{"_id": "214d5dce238a7d263fda1ee5fd08cd2c", "text": "Mints the token being sold by taking the percentage of the token supply being sold in this sale along with the valuation , derives all necessary values and then transfers owner tokens to the owner .", "title": "", "metadata": ""}
{"_id": "ed3a2f292a3243bf83a820d58ca3ba0f", "text": "Executes the sale for a published NTF .", "title": "", "metadata": ""}
{"_id": "3b064fc12045c78a6866b344bfa17ab4", "text": "Change the transaction fees charged on transfer / mint / burn .", "title": "", "metadata": ""}
{"_id": "15662a0bae371c9540a596653720ab3d", "text": "A private function to lists a Bytes collection starting from some _current_item ( which could be included or excluded ) , in the forwards or backwards direction .", "title": "", "metadata": ""}
{"_id": "c24c58356d72f104d1b2ae39b22ed3c9", "text": "modify Bonus .", "title": "", "metadata": ""}
{"_id": "57425bc065ef91a12ddc63144358c2d6", "text": "Set new beneficiary for ICO .", "title": "", "metadata": ""}
{"_id": "b9d4eff44c84f8705467cb3fb42cebd7", "text": "Start the pause ( by the pauseMaster , ONCE only ) .", "title": "", "metadata": ""}
{"_id": "8a98d60b78f9112f5e4417f6c4105e9f", "text": "Sets winning event outcome .", "title": "", "metadata": ""}
{"_id": "16aaa108b6fb7d1f16a157513be3da9b", "text": "Withdraw ( for cold storage wallet ) a bid that was overbid and platform owner share .", "title": "", "metadata": ""}
{"_id": "29866b5bdd97ffbf0fb33f04adeb207a", "text": "completion of operation with safe-keys .", "title": "", "metadata": ""}
{"_id": "30af4591a34e568af2cc0c2f92a47a9b", "text": "Check that double the update interval has passed since last successful price update .", "title": "", "metadata": ""}
{"_id": "e0d10d715e7cc761545d774587614415", "text": "Returns Token creator address .", "title": "", "metadata": ""}
{"_id": "b836b0c50143c1e6de2d83dac595b2b9", "text": "Total supply tokens for periods preICO 1 , 000 , 000 tokens 1 Stage 7 , 000 , 000 tokens 2 Stage 13 , 000 , 000 tokens 3 Stage 19 , 000 , 000 tokens 4 Stage 25 , 000 , 000 tokens 5 Stage 30 , 000 , 000 tokens .", "title": "", "metadata": ""}
{"_id": "db286a14a12d3a3916f3b9964068a68f", "text": "The slam-the - button escape hatch .", "title": "", "metadata": ""}
{"_id": "d12ff224e02090652eb731b02cec9cca", "text": "Removes bit from bitmask checks if already set .", "title": "", "metadata": ""}
{"_id": "cd0fbfa2b7bac1360c4c2b99ac3bfa45", "text": "We use this function to withdraw the house cut from a game .", "title": "", "metadata": ""}
{"_id": "8c5ec095dbfd5601f31c6742db79b35a", "text": "allows maxContribution to be modified .", "title": "", "metadata": ""}
{"_id": "872b827ccf27b727d0edba2b48eb6943", "text": "Add chunk 6 / 7 to the whitelist .", "title": "", "metadata": ""}
{"_id": "73f8737aeab02996a89e93b174ebbac2", "text": "Provides a registered oracle's metadata , looked up by address .", "title": "", "metadata": ""}
{"_id": "3430fe059c9a17300348a2a8096564cf", "text": "Decrease the amount of tokens that an owner allowed to a spender approve should be called when allowed _spender 0 .", "title": "", "metadata": ""}
{"_id": "004dd17d141759b4a0659478d6c9b341", "text": "add graphics card for owner of contract .", "title": "", "metadata": ""}
{"_id": "6e149e6f43e30f4482ad2caa2764a801", "text": "Pays out dividends to tokens holders of record , based on 500 , 000 token payment .", "title": "", "metadata": ""}
{"_id": "aac0fa1e4a8081f99f5b5d046d4899eb", "text": "cost to enter battle .", "title": "", "metadata": ""}
{"_id": "21d35c2050ada156f294e4f4bb56ded0", "text": "Freeze tokens .", "title": "", "metadata": ""}
{"_id": "f179d3a2c7273c622ce8ddef1a896fcf", "text": "Functions with this modifier check the validity of msg value value must greater than equal minimumBuyPrice total deposit must less than equal maximumBuyPrice .", "title": "", "metadata": ""}
{"_id": "5579d3a4a1245df843da1524335245d9", "text": "Advisors tokens accrual .", "title": "", "metadata": ""}
{"_id": "d9ac13a5e311160cfd90a6e0217cd24d", "text": "General getters .", "title": "", "metadata": ""}
{"_id": "2f71495a2678a267705a3e91bd8dec25", "text": "Transfer _value token to _to from msg . sender , .", "title": "", "metadata": ""}
{"_id": "428fbc979dedd99dbe827a2a129bff77", "text": "Sets the exchange rate from ETH to token .", "title": "", "metadata": ""}
{"_id": "a5b00352e3473caa85214474aa5e138c", "text": "Returns holder id for the specified address .", "title": "", "metadata": ""}
{"_id": "b0aec6b86e72e818ac52c683403ff36c", "text": "Makes a purchase of a product .", "title": "", "metadata": ""}
{"_id": "f86ca4858145b045907effd2fd224b97", "text": "Deletes the minter role to provided address .", "title": "", "metadata": ""}
{"_id": "a4625844918d019c2dcef26a46379744", "text": "Exchange msg . value .", "title": "", "metadata": ""}
{"_id": "77e515c992dbdc0f8faba37b102fb159", "text": "Check bnb contribution time , amount and hard cap overflow .", "title": "", "metadata": ""}
{"_id": "94bdf98ae71dfd2d7102f21537e8ac0b", "text": "sets percentage for team's wallet .", "title": "", "metadata": ""}
{"_id": "627a0bc0b96060de82e017851a244427", "text": "isManager modifier .", "title": "", "metadata": ""}
{"_id": "b4f1c6dccbf2b9d5efadf7e388e4dc94", "text": "required to be able to migrate to a new FundRequestContract .", "title": "", "metadata": ""}
{"_id": "c082cc7e5331d05c08ef3a102eaab296", "text": "Overrides finishMinting function from RBACMintableTokenMixin to prevent finishing minting before finalization .", "title": "", "metadata": ""}
{"_id": "f2529723d10cf22220c316ac083969fb", "text": "Returns the total number of Lambos currently in existence .", "title": "", "metadata": ""}
{"_id": "95ea25e8e09f35ec27bb11da084b0278", "text": "Assigns ownership of a specific Grey to an address .", "title": "", "metadata": ""}
{"_id": "1285f12fe25b58b852d463f96c49ac34", "text": "This is the main function to process incoming ETH contributions .", "title": "", "metadata": ""}
{"_id": "025ed76bb2b7f82e6629f1c832a45044", "text": "view balance of contract .", "title": "", "metadata": ""}
{"_id": "a1cdc24f6e08803b778a06fa73a7940e", "text": "To trigger payout two out of three administrators call this function , funds will be transferred right after verification of third signer call .", "title": "", "metadata": ""}
{"_id": "e3b8ab5f939ef68d3315be2fae7cbd81", "text": "Send ether to the sale collection wallets .", "title": "", "metadata": ""}
{"_id": "c6bf7d8aaef4feddaa5fb9ddb6ee14aa", "text": "This will make the tokens transferable .", "title": "", "metadata": ""}
{"_id": "fe370890e5cd8f6e3e4547625be18aca", "text": "maximum investments to be accepted during pre-ICO .", "title": "", "metadata": ""}
{"_id": "9402b197d6853e9f727cb0b978390787", "text": "if owner wants to transfer contract ether balance to own account .", "title": "", "metadata": ""}
{"_id": "78c9f93e3f16d3385e9ae4dcc1d99b89", "text": "Check sum of the tokens for sale in the tranches in the crowdsale time .", "title": "", "metadata": ""}
{"_id": "71394b3488c84ece7bb0dc659fdfc027", "text": "Sets the address of another contract to handle the requests of this contract , it can be used to deprecate this Oracle .", "title": "", "metadata": ""}
{"_id": "d9077f0e8b88423ab5e1af0a884f3b08", "text": "Get the account balance of another account with address _queryaddress .", "title": "", "metadata": ""}
{"_id": "4b8974518bbcdac7cbe7b08d38ebaf94", "text": "New epoch can be started if : - Current round is 9 - Curen epoch 10 - Voting is over .", "title": "", "metadata": ""}
{"_id": "cab51d07e67495ed7056afa3282a7140", "text": "Changes state , owner only .", "title": "", "metadata": ""}
{"_id": "e8ff1d3ecaf8e227a84bb7cd1ccb1005", "text": "End Admin Functions .", "title": "", "metadata": ""}
{"_id": "e2533be52d70aab2dee14970318059f7", "text": "Resolves game based on . iHand .", "title": "", "metadata": ""}
{"_id": "ac4047fa697abd93abd69d39d27b7bef", "text": "Registers an application as the admin under the provider and registry exec id .", "title": "", "metadata": ""}
{"_id": "261ee19566503c3aa7cdde0e18049b9a", "text": "Used to update all the parameters of the economy in one go .", "title": "", "metadata": ""}
{"_id": "f058e01ac3364b3fedab60c2c2847b16", "text": "State changing public methods .", "title": "", "metadata": ""}
{"_id": "3500d990881f7f238b1214b09170e9f0", "text": "current bets .", "title": "", "metadata": ""}
{"_id": "7b51b40de2a5fa1d654ee26f558b13ca", "text": "Battle functions .", "title": "", "metadata": ""}
{"_id": "2bbfb351df0a5709d12b22095faba32a", "text": "Checking whether the rights to address ignore the Pause of exchange .", "title": "", "metadata": ""}
{"_id": "cd6d8ab10239dbedd92b55a5aae8e900", "text": "Mint the specified amount of timelocked tokens .", "title": "", "metadata": ""}
{"_id": "c9de7336b5a60acf52643de247d2a66e", "text": "Ensure sender is auditor .", "title": "", "metadata": ""}
{"_id": "ab4bc2d9f6168569170d8088425b4bd1", "text": "integer representing the index of the current sale round .", "title": "", "metadata": ""}
{"_id": "ca93ee5bf9f2098ed489bffe3838592b", "text": "Sall a token from a contract .", "title": "", "metadata": ""}
{"_id": "414c1e6437c41b3c60667659ea0dd2b9", "text": "sets direct mint agent .", "title": "", "metadata": ""}
{"_id": "47585cce0a77cb6fd9bc291cc711e80e", "text": "Returns info whether address can use the token or not .", "title": "", "metadata": ""}
{"_id": "0533fb623d9a70a68b33f29e72673c52", "text": "Updates the canClaimPresaleTokens propety with the new _canClaimTokens value .", "title": "", "metadata": ""}
{"_id": "1259f05b8162b8de74ceb022c88f1d72", "text": "calculates ( _baseN / _baseD ) ( _expN / _expD ) .", "title": "", "metadata": ""}
{"_id": "fd81a1f832ce6711770f0d251304ee29", "text": "requires a proposal to be active .", "title": "", "metadata": ""}
{"_id": "1d83f25734bce23a46f4eec9f1b2bfbe", "text": "Accepts ether and creates new KDT tokens .", "title": "", "metadata": ""}
{"_id": "7ca7fa46dc3dea274c874b2d4143ee1f", "text": "Expose Vars .", "title": "", "metadata": ""}
{"_id": "863f7377ccbda213091fe0b97e696256", "text": "checkbet on lowhigh bet type : lowhigh input : 0 low , 1 high .", "title": "", "metadata": ""}
{"_id": "ab487eb168cb1a49207fdb5ea97b0691", "text": "This modifier check whether the contract should be in a locked or unlocked state , then acts and updates accordingly if necessary .", "title": "", "metadata": ""}
{"_id": "25edf1da436c3505ea1e62e0b04bcd5f", "text": "Get profits .", "title": "", "metadata": ""}
{"_id": "d186ba88058852fcc6ece669938c5822", "text": "Returns the cap per a user .", "title": "", "metadata": ""}
{"_id": "5d022e764d4ae9ecfd647fe5c09a1cbf", "text": "Give to target ident ability for self token manipulation without sending .", "title": "", "metadata": ""}
{"_id": "7fc3053c42bd11f1db6a9747b9ee1ce7", "text": "updates the stake of an address .", "title": "", "metadata": ""}
{"_id": "f45b566365151b4894f44f47633f250d", "text": "Claim all remaining tokens for this investor .", "title": "", "metadata": ""}
{"_id": "5229c4de7173b1253bdd6f03bda697bc", "text": "Only owner address can set owner address .", "title": "", "metadata": ""}
{"_id": "513d67101e3442a58f8fb3aaf75fc90b", "text": "Price count .", "title": "", "metadata": ""}
{"_id": "eb27a54b6ae79f226970601942f8f801", "text": "Checks if caller is BondingManager .", "title": "", "metadata": ""}
{"_id": "08fab6288e83a31e4f93edb27a82d812", "text": "Backup withdraw , in case ETH gets in here .", "title": "", "metadata": ""}
{"_id": "511a25c061b54f995152b7e6501fa427", "text": "function that can be called only by deposit creator due to security reasons and will withdraw the amount of ERC20 tokens .", "title": "", "metadata": ""}
{"_id": "679522cc074c7951aab2bab74012dc88", "text": "throws if called by any account other than the pauser .", "title": "", "metadata": ""}
{"_id": "05ef4995cadfb9ed09fec327ebb40f4a", "text": "Initializes the contract and allocates all initial tokens to the owner .", "title": "", "metadata": ""}
{"_id": "81117a28d64c4b257159cd1d627ba4dd", "text": "Transfers the same amount of tokens to up to 100 specified addresses .", "title": "", "metadata": ""}
{"_id": "87249bed186801bfe221d67cf2bda91d", "text": "A user has passed KYC verification , store them on the blockchain in the order it happened .", "title": "", "metadata": ""}
{"_id": "b3e14cb8be0c6f37384b2a6ad30e3827", "text": "Allows the current owner to update multiple rates .", "title": "", "metadata": ""}
{"_id": "15354e3d6f93dbc6522600e891e7d4ef", "text": "Get security token address by ticker name .", "title": "", "metadata": ""}
{"_id": "4546adc5ae538d7544602ece7d8a6a83", "text": "buy buy_lovelock_withLOV .", "title": "", "metadata": ""}
{"_id": "8431334edba6f35b394e9b9a7c093a60", "text": "The owner can turn off accepting new ether .", "title": "", "metadata": ""}
{"_id": "86b1dc696104d8fa7cb4d0c595499d7e", "text": "Expanding of the functionality .", "title": "", "metadata": ""}
{"_id": "a77d7f45810c4b0bbd3e78a931d1ef67", "text": "Get the number of tokens bought at the presale price for an address .", "title": "", "metadata": ""}
{"_id": "fa7d39713aa7956c2cb92537ccdead8c", "text": "Destroys value child contracts and updates s_tail .", "title": "", "metadata": ""}
{"_id": "b94abdeba546f40359a75856755520bf", "text": "Count of contracts in list .", "title": "", "metadata": ""}
{"_id": "2a06b80ba8eebb55f65c0b8b1f5620ed", "text": "Fallback function which is called by tokens contract after transferring tokens to this wallet .", "title": "", "metadata": ""}
{"_id": "e3ca20eabfe7aaec8955c3251ec9c5ca", "text": "Checks whether the period in which the crowdsale is open has already elapsed .", "title": "", "metadata": ""}
{"_id": "bcc9615bc3e94354de115efaca250aaf", "text": "end sale .", "title": "", "metadata": ""}
{"_id": "87f00af37f0aca613098c825df303569", "text": "Find the msg . sender's .", "title": "", "metadata": ""}
{"_id": "136507b2bbb57c5934cde11f2e39e57e", "text": "Standard ERC20 balanceOf function .", "title": "", "metadata": ""}
{"_id": "6e14ab062d532b13cf3b2c13d5c817af", "text": "Function called by apps to check ACL on kernel or to check permission statu .", "title": "", "metadata": ""}
{"_id": "d63f936acacd60218df5eff829cf929d", "text": "Use to correct any token transaction errors .", "title": "", "metadata": ""}
{"_id": "faa3b237c433ca2f3c53e585b8c4f8e0", "text": "add addresses to whitelist .", "title": "", "metadata": ""}
{"_id": "a6ef2ae1e93990f6a9b8c0ccef186387", "text": "Permit msg . sender .", "title": "", "metadata": ""}
{"_id": "80198636738077e323f2b2c250b43e8d", "text": "Add a beneficiary for the airdrop .", "title": "", "metadata": ""}
{"_id": "aeda78a8e4ecda6cbb23e35a0c3f0ae2", "text": "Finish ownership transfer .", "title": "", "metadata": ""}
{"_id": "b7b7605019252f21727c65245dc17fa8", "text": "checks if the address provided is approved for a given token .", "title": "", "metadata": ""}
{"_id": "715a338b6aebcd3b6e1fedeb1f960010", "text": "Called by the owner of the contract to start the Public sale .", "title": "", "metadata": ""}
{"_id": "5a91a284c5f60f3a1ebe3ab0be8c3206", "text": "batch send coins .", "title": "", "metadata": ""}
{"_id": "2d13ae29ebb069098e359ce51d5553ee", "text": "called by the owner to set lock state , triggers stop / continue state .", "title": "", "metadata": ""}
{"_id": "c46cf06593f11d428ae0b918eba516f1", "text": "Checks if the specified address is authorized to log events .", "title": "", "metadata": ""}
{"_id": "fef4ab2c1c4d4b76b50d28cccb098590", "text": "Overrides parent to perform custom finalization logic .", "title": "", "metadata": ""}
{"_id": "5a624159e67bd4b37776c307aabe1507", "text": "Returns a list of all Player IDs assigned to an address .", "title": "", "metadata": ""}
{"_id": "7ebee1ba56548ee4f112da9c3b98a25e", "text": "Self-report the time it took you to solve ( or not ) .", "title": "", "metadata": ""}
{"_id": "136079cd9a5d344737d43a404cd95f22", "text": "allows the owner to abort the contract and retrieve all funds .", "title": "", "metadata": ""}
{"_id": "e8c3b9bc122f923b79d6121afb625634", "text": "Mark address as airdropped .", "title": "", "metadata": ""}
{"_id": "f067c5d3063044172302da17533d633c", "text": "enable if diabled .", "title": "", "metadata": ""}
{"_id": "92f72b5ceca51e47f6d06783d6733597", "text": "fund retrieval related functions .", "title": "", "metadata": ""}
{"_id": "22b6943f6344fe3833456d45e6e8639d", "text": "Allows moderator to transfer tokens from one address to another .", "title": "", "metadata": ""}
{"_id": "fcb373b612de4679ec42f3fd8854d4e7", "text": "Publish allows for setting the link , image , and NSFW status for the ad unit that is identified by the idx which was returned during the buy step .", "title": "", "metadata": ""}
{"_id": "46acaf4506bbde766b328e85cb6ccab9", "text": "Will transfer all ether in this account to the contract owner .", "title": "", "metadata": ""}
{"_id": "d39c0134c8d7c8a6f9739fde50fa3ad5", "text": "to get the time bonus Percentage based on the no .", "title": "", "metadata": ""}
{"_id": "2ef0ef1447f9be7f7951289c2d3bae3d", "text": "who owns the creature ( not necessarily auction winner ) .", "title": "", "metadata": ""}
{"_id": "11f60052313604c7901529b76228dc58", "text": "Set the dividend contract address , and gas required to run the receive ether function .", "title": "", "metadata": ""}
{"_id": "0b6121c4d57416e158b315ac2b9c0bd8", "text": "Returns the approved allowance from an owners account to a spenders account .", "title": "", "metadata": ""}
{"_id": "0f8df3d9cbc912352237c4d34ffefe51", "text": "emoves a co-owner of a contract .", "title": "", "metadata": ""}
{"_id": "5449f0b26ced4e67ec72e5990eb82175", "text": "semi-public function - only oraclize can call .", "title": "", "metadata": ""}
{"_id": "6cd110c70b8856025852587332c3fa17", "text": "Create new group ( only owner ) .", "title": "", "metadata": ""}
{"_id": "30958d11c7d0895f086b907c5ebb1030", "text": "Sets the starting timestamp for a state as a startCondition .", "title": "", "metadata": ""}
{"_id": "3a24eae078977f2865233906d0b41a71", "text": "Register accepted contribution .", "title": "", "metadata": ""}
{"_id": "8419c564450030219bc1579ea740ed07", "text": "False in case profit distribution round has completed .", "title": "", "metadata": ""}
{"_id": "e606ec3951f462917665136ebc0583fa", "text": "Founders can take non-claimed funds after 19 Dec .", "title": "", "metadata": ""}
{"_id": "3726bd2d5dcc7976fef3a63b20b77322", "text": "true if fee and unaccounted ether was successfully withdrawn , false otherwise .", "title": "", "metadata": ""}
{"_id": "3933b991a927c72afbb3a7461453caa2", "text": "Calculates the hash of a ceiling .", "title": "", "metadata": ""}
{"_id": "d18ec5ea820642fed79e61090482f1d3", "text": "set the rule for special role .", "title": "", "metadata": ""}
{"_id": "ad6998a24f42a9cf4824c596fea50006", "text": "Token balance of _address .", "title": "", "metadata": ""}
{"_id": "bb2c8212c9dc406733289136a502b0ab", "text": "this will burn NSPs stuck in contracts .", "title": "", "metadata": ""}
{"_id": "1f9c6f156a2010d0b3d67ed1bda48590", "text": "Sets start and end dates for pre-sale phase_i .", "title": "", "metadata": ""}
{"_id": "692513fd601aa3774067f91092371767", "text": "getBounty ( ) : Returns the details of the bounty .", "title": "", "metadata": ""}
{"_id": "bddd039941e086637ec0656a2d570405", "text": "Allows the owner of the contract to distribute to other contracts .", "title": "", "metadata": ""}
{"_id": "26256f9d606c85696f1653ef2cae43d2", "text": "Confirms that enough tokens are available to distribute to all addresses .", "title": "", "metadata": ""}
{"_id": "ba1a5f654b4c0992c973ce444479c468", "text": "Contract owner can open the crowdsale .", "title": "", "metadata": ""}
{"_id": "1641ed176a88a5858c64e552821d6a51", "text": "Return true if crowdsale event has ended .", "title": "", "metadata": ""}
{"_id": "ee13002025c653f70e3c893f317f49b0", "text": "Give ( toVoter ) the right to vote on this ballot .", "title": "", "metadata": ""}
{"_id": "97fcb39c086a950fb591a03642b82f40", "text": "endCall can be called by caller only if he requested endCall more than endCallRequestDelay ago .", "title": "", "metadata": ""}
{"_id": "e26a1d5c1045693d53c5ce6a64aa48c2", "text": "exhaust after battle .", "title": "", "metadata": ""}
{"_id": "e0a1b91338c847ba02516ccec9486297", "text": "Internal : Test if a request exists when you know transactee and deposit .", "title": "", "metadata": ""}
{"_id": "3be78e5c1bf41e8230c633c22cb46bf4", "text": "Function confirm autofund .", "title": "", "metadata": ""}
{"_id": "87ebcbaca6146da4be55f8efd74322a3", "text": "method to check how many tokens have been sold out till now out of 450 . 5 Million .", "title": "", "metadata": ""}
{"_id": "4edc65144fd39044d1e7ae5933fde9a6", "text": "Buys tokens with Ether , exchanging them 1 : 1 .", "title": "", "metadata": ""}
{"_id": "a2356fbf58cc54d04ccaaf65b4328592", "text": "defines a new reserve for the token can only be called by the owner while the changer is inactive .", "title": "", "metadata": ""}
{"_id": "6cf05381e3a268c5cfac424539b06a6a", "text": "Send ETH with affilate code .", "title": "", "metadata": ""}
{"_id": "778eb733490df39f2ec5a0d934fab049", "text": "Count of bonuses in list .", "title": "", "metadata": ""}
{"_id": "8af1ad0fad07f33ac0f8f04d70b93daa", "text": "Transfer _value SETH tokens from sender's account msg . sender .", "title": "", "metadata": ""}
{"_id": "5606245984725c3dd3561190854e07f7", "text": "Returns LivepeerToken interface .", "title": "", "metadata": ""}
{"_id": "34b462311be5c2699b31dce146bfa7d5", "text": "This is the tricky method which creates the new type tank .", "title": "", "metadata": ""}
{"_id": "b11d88a211e3de649169ab6a9f4e6a63", "text": "Used to mark the smart contract as upgraded .", "title": "", "metadata": ""}
{"_id": "dea89447cde1dc8140d98983d6a84a88", "text": "Resist White list for to fund .", "title": "", "metadata": ""}
{"_id": "e4196dd456f08d624ee256edd45f8779", "text": "This is the way to refill your token balance by ethers .", "title": "", "metadata": ""}
{"_id": "0e170310793ceb2fc5af05ddf496e0a9", "text": "Data access functions .", "title": "", "metadata": ""}
{"_id": "24275dcff19d29354f4df67cfe80c1f7", "text": "Revoke vote for transaction .", "title": "", "metadata": ""}
{"_id": "567ae044afb1148dd54d0a6f12dcacc4", "text": "event loginfo ( string title , string info ) ; .", "title": "", "metadata": ""}
{"_id": "dea94cece4ae0e51526a5fe5edc79180", "text": "User Custom Fees .", "title": "", "metadata": ""}
{"_id": "6c40486ef795c22e2ff3285256d93cfe", "text": "Bulk send tokens ( same amount ) .", "title": "", "metadata": ""}
{"_id": "6e48fac3afe9c40017191189b880030d", "text": "Get the amount of remaining tokens to spend .", "title": "", "metadata": ""}
{"_id": "6b5fa3a296897fcdf2539382d67b26bc", "text": "change fee .", "title": "", "metadata": ""}
{"_id": "696f482aee7f2ba97e1fe84ccf893a7a", "text": "moves the promise to the new state as long as it's permitted by the state transition matrix .", "title": "", "metadata": ""}
{"_id": "61ed486fe9a1e1b53479fb4abdd52116", "text": "Internal function to withdraw tokens by final price .", "title": "", "metadata": ""}
{"_id": "9082ecf15c0bd917d14aa206ec2d17ce", "text": "onlyArbitrator Cancels the entire campaign voiding all milestones vo .", "title": "", "metadata": ""}
{"_id": "cd9f7dcba24a0883803baa488f668abb", "text": "Allows the owner to change the token price of the current phase .", "title": "", "metadata": ""}
{"_id": "73c4ff5457605a6ec7d1798c829c25e3", "text": "Permanently burn tokens .", "title": "", "metadata": ""}
{"_id": "5b447429d498baf8f3a59e2f53854f75", "text": "Sets a store to be used by the manager .", "title": "", "metadata": ""}
{"_id": "d5c7c468190018d0d231a7d803cec21b", "text": "external functions for players .", "title": "", "metadata": ""}
{"_id": "5a4c328ee5faec480cb5be53d24c623c", "text": "only callable after voting deadline , distributes the prizes , fires event ? .", "title": "", "metadata": ""}
{"_id": "2e5a462f0db9cd6fc8b8c44de1b0630b", "text": "Change active .", "title": "", "metadata": ""}
{"_id": "f3254faea2291f15d8c0af7bfd279794", "text": "Creates a new blob .", "title": "", "metadata": ""}
{"_id": "abdf279b904224fd888afb04c7df7cb8", "text": "Transfer the same token number to multiple addresses .", "title": "", "metadata": ""}
{"_id": "d59ec752559925174b05e6beb70e7ce9", "text": "migrate tokens to the new token contract .", "title": "", "metadata": ""}
{"_id": "f4f78adadf1c7d6a5fe465b3118e97ed", "text": "Create new forecast .", "title": "", "metadata": ""}
{"_id": "ac1992076ee335a1d63239c33ad07691", "text": "allow user to change their choice before a timestamp .", "title": "", "metadata": ""}
{"_id": "00f95fa8be710d74fe4861851f5e45ff", "text": "Used to burn unspent tokens in the contract .", "title": "", "metadata": ""}
{"_id": "8b56824d55e57651852a1ee03b852336", "text": "Same ERC20 behavior , but reverts if not transferable .", "title": "", "metadata": ""}
{"_id": "38cca2fade113b1a6c62d14f1536adf3", "text": "Remove Beercoins from the system irreversibly .", "title": "", "metadata": ""}
{"_id": "15a3427cc439b0b76bddebb7dddbe9ea", "text": "set the rate for non-whitelisted affiliates .", "title": "", "metadata": ""}
{"_id": "37bd8a885e299fb89933fd61369b4e59", "text": "move generated Units to sold array generate siblings and put it there .", "title": "", "metadata": ""}
{"_id": "d5c74c61d43f974799282e53eed49784", "text": "Checks that a given monster is able to breed ( i . e .", "title": "", "metadata": ""}
{"_id": "205c6acc31581f0b6d7adfc69dc15b88", "text": "Returns fee for transferral of _amount from _from to _to .", "title": "", "metadata": ""}
{"_id": "3b4e9686d56c12c3aac76b252211d412", "text": "Sets a new identity .", "title": "", "metadata": ""}
{"_id": "69af84f52273e97b1c643e3277d145a6", "text": "in case the client wants to display how long until they are vested .", "title": "", "metadata": ""}
{"_id": "66dea4c5cf1b632651188a4556c38834", "text": "Internal function that mints an amount of the token and assigns it to an account .", "title": "", "metadata": ""}
{"_id": "ec2e808b405dec04b6eb675b1316e522", "text": "which means the following function name has to match the contract name declared above .", "title": "", "metadata": ""}
{"_id": "b84c7cca6530fe2cd358231b3e2206d3", "text": "Compensate the presale investors at the addresses provider based on their contributions during the presale .", "title": "", "metadata": ""}
{"_id": "0ec85f52ca549fe46031af8ac1767935", "text": "Function that allows the owner to set the upgrade agent .", "title": "", "metadata": ""}
{"_id": "0f0cc06877b0aa71fc4259805f3bc82a", "text": "Finalise change of ownership to newOwner .", "title": "", "metadata": ""}
{"_id": "28dcc72a84a7706d9cfd146d8bea8471", "text": "Calculates how many tokens a user should get with a given Ether bid .", "title": "", "metadata": ""}
{"_id": "d1b6b11b22552145ab2425c91be8490e", "text": "User is purchasing defense .", "title": "", "metadata": ""}
{"_id": "f9e7530a5e3723c22040508fd112e798", "text": "multisig Address of Multisig Wallet contract .", "title": "", "metadata": ""}
{"_id": "537aebf79981c0456b1451559e76c0d3", "text": "Used for iteration .", "title": "", "metadata": ""}
{"_id": "448929bc3e09d09fe53e8cd4a447b719", "text": "Allows the anyone to read the current cap .", "title": "", "metadata": ""}
{"_id": "28c436e2bc83e4513a16d900e1bb8ee2", "text": "Upgrade function transferring all this contract's ether via the standard receive ether function in the proposed new disbursal contract .", "title": "", "metadata": ""}
{"_id": "b1768e3595a2714d4b4b991d2c073a18", "text": "Assigns ownership of a specific Tuber to an address .", "title": "", "metadata": ""}
{"_id": "c865bd688b743e1b1dddadc40530a94f", "text": "1-64 matches .", "title": "", "metadata": ""}
{"_id": "34219b88467ee620e1c97739d291b7aa", "text": "bool Supported .", "title": "", "metadata": ""}
{"_id": "79bd0d8b73ece17074f770ea9d6998da", "text": "Allows the current owner to transfer control of the contract to a newDao .", "title": "", "metadata": ""}
{"_id": "9fdc80171323f5e34e397976ffa746fd", "text": "Get Tile information at X , Y position .", "title": "", "metadata": ""}
{"_id": "cbbbb955184c90450ab3f432f61acafc", "text": "The contract owner can lock and prevent any future domain ownership transfers .", "title": "", "metadata": ""}
{"_id": "854b7b0e6e7051bff2c92533c99227da", "text": "Releases team supply .", "title": "", "metadata": ""}
{"_id": "3ef3eb7ce8a415f796fa9656ce7de2d4", "text": "Buy a car .", "title": "", "metadata": ""}
{"_id": "1f0af2957023867308d469da3aa145d7", "text": "Get the attributes ( equipments + stats ) of a hero from its gene .", "title": "", "metadata": ""}
{"_id": "02a3dad83c03d0bbb210d6b98f52e2a3", "text": "function to determine if an account has voted in any current ballot .", "title": "", "metadata": ""}
{"_id": "db561f5b4037e86688f9c750a6f0b67d", "text": "External function to burn a specific token .", "title": "", "metadata": ""}
{"_id": "8acba89a5acbf50b0c49e24523a359a3", "text": "Transfer tokens from account to account .", "title": "", "metadata": ""}
{"_id": "b53434fd530b7beedc0f8b6065de48d8", "text": "function to withdraw ETH from smart contract .", "title": "", "metadata": ""}
{"_id": "7fdfbcfa2a152751e4889be5c8624146", "text": "Mints many tokens to an address with their tokenURIs and tokenHashes .", "title": "", "metadata": ""}
{"_id": "0d4eea111f44e8d63cd0b00bd445bae2", "text": "Public Management - set address of base and reward tokens .", "title": "", "metadata": ""}
{"_id": "39b31c92ba7f7fb610e6d35daa96bbab", "text": "This method can be called by authorized persons only , and can issue a refund of the fee to the origin address who paid the fee for who .", "title": "", "metadata": ""}
{"_id": "2fcffa99ff0fab0ce1fd82a0a1ac34b7", "text": "nCore tokens are not transferrable .", "title": "", "metadata": ""}
{"_id": "655292c6cb3d518e86612862e8127b97", "text": "Register the address as a superinvestor address .", "title": "", "metadata": ""}
{"_id": "04d98294df6c42f5ed708800ccd58479", "text": "Gets the total amount of tokens for a given address .", "title": "", "metadata": ""}
{"_id": "3db7b1b686378ca8dd5c189f2f2d8ea9", "text": "Multiplies the given number by 10 * * decimals .", "title": "", "metadata": ""}
{"_id": "0e8c5ccb150a9d24b4d0a58f80b05fa4", "text": "Set the ticket price of the raffle .", "title": "", "metadata": ""}
{"_id": "0e8be036c2b819977a89836cd2f8dc96", "text": "Generate tokens .", "title": "", "metadata": ""}
{"_id": "f85e0c5ca818745df96fbdd3344d964e", "text": "no ETH should be sent with the transaction .", "title": "", "metadata": ""}
{"_id": "fcc23bab1931966fbf9b832a09683c09", "text": "internal token purchase function .", "title": "", "metadata": ""}
{"_id": "1c7b5f4f0cbb7383a83b2b0add4bac66", "text": "Invest received ether in target crowdsale .", "title": "", "metadata": ""}
{"_id": "2b7349db430b335551faeb7db3a8cb03", "text": "verifies that the gas price is lower than the universal limit .", "title": "", "metadata": ""}
{"_id": "0610b0826d9b6f55d0ce10ac63b7014e", "text": "Update the CNY / ETH rate to record purchases in CNY .", "title": "", "metadata": ""}
{"_id": "30afd8238966bb0a65f1cd7f799b8edf", "text": "Releases Red team supply after locking period is passed .", "title": "", "metadata": ""}
{"_id": "c4fbac15d66023eb441bc6c163e0bb1a", "text": "An allowance should be available .", "title": "", "metadata": ""}
{"_id": "1c391a5b9a7c890114f6a1f42e1926b3", "text": "get team data ( name , total bets , bettor count ) .", "title": "", "metadata": ""}
{"_id": "5c71c4b792a53a064e2795d9d9ce2c58", "text": "Storage seed for a function selector's implementation address .", "title": "", "metadata": ""}
{"_id": "7a9b6c41f017f0d189d83cfb205d6ba1", "text": "Function to check the amount of tokens that an owner allowed to a spender .", "title": "", "metadata": ""}
{"_id": "6aa39b52a14b4de3918bef27cc1cadab", "text": "announce winner .", "title": "", "metadata": ""}
{"_id": "f6bc48162ac1e0ded3c72a7e062bfe54", "text": "Here the owner can reclaim the tokens from a participant if the token is not released yet .", "title": "", "metadata": ""}
{"_id": "6ab5550a1ce237a810682b40fb266664", "text": "returns the commission rate for a sale .", "title": "", "metadata": ""}
{"_id": "39b8ee41d32277d66517b21c4cc32193", "text": "Function called by the sender , receiver or a delegate , with all the needed signatures to close the channel and settle immediately .", "title": "", "metadata": ""}
{"_id": "153155b2469c217679d50610df067ad8", "text": "Called by an advertiser when he / she would like to make a refund request .", "title": "", "metadata": ""}
{"_id": "6e4ba63b44891bf2753d4aa5976dcabc", "text": "Perform the sell of tokens , send ETH to the seller , and reduce the net amount bought .", "title": "", "metadata": ""}
{"_id": "b68a040d3a19ee1e89038bdbfb46d0b3", "text": "initialize the contract during erc223 / erc677 transfer of all of the tokens form the pair .", "title": "", "metadata": ""}
{"_id": "61eb6564895d5ba457e890ca00ebc235", "text": "ICO cabinets function .", "title": "", "metadata": ""}
{"_id": "bb48372d84d134387425442f29887179", "text": "Create refund crowdsale .", "title": "", "metadata": ""}
{"_id": "063db332e76ccb7ddb81fa67169f691e", "text": "Allows the cfo to capture the balance .", "title": "", "metadata": ""}
{"_id": "d6fe0a5741068b435a8b51f20f2e1366", "text": "Transfers _value amount of tokens from address _from to address _to .", "title": "", "metadata": ""}
{"_id": "72b3920d33f105f49cf66e68739da211", "text": "Returns the number of Kitties owned by a specific address .", "title": "", "metadata": ""}
{"_id": "75a82400c15e19a8c0fe84a4fe7e1736", "text": "Function from which everyone can bet .", "title": "", "metadata": ""}
{"_id": "e388c55640231c5614e115642c18060d", "text": "Allows the seller to change the price of this listing .", "title": "", "metadata": ""}
{"_id": "0f88f15aa6b537fb2e32a16397ce5ff3", "text": "buys msg . sender .", "title": "", "metadata": ""}
{"_id": "23b5ae351013dac56e99af20010d7a47", "text": "Access modifier for Owner functionality .", "title": "", "metadata": ""}
{"_id": "a7317be5e82f580933a2fa9048313fcf", "text": "Calculate tokens amount and refund amount at purchase procedure .", "title": "", "metadata": ""}
{"_id": "24951f1fb39c977c699e62b6f8721a74", "text": "Create 2500 Promo Eggs - Can only be called once .", "title": "", "metadata": ""}
{"_id": "429f753299cca07a370bee32f5916d1e", "text": "Returns the location of the version before the current version .", "title": "", "metadata": ""}
{"_id": "3c90797bf18fbbce8a0af53c52d9b6eb", "text": "Escrows the token and assigns ownership to this contract .", "title": "", "metadata": ""}
{"_id": "ecf2f42992416e52dedb10b685ec206b", "text": "Manual transfer for investors who paid from payment cards .", "title": "", "metadata": ""}
{"_id": "14cd993a2b5a51958c61d7a75d92c7cb", "text": "Safe division .", "title": "", "metadata": ""}
{"_id": "fa40446f530a8b88b5b3f1804a205664", "text": "dev Function to stop minting new tokens .", "title": "", "metadata": ""}
{"_id": "4f7d007fec323a987eb342a2f535b36e", "text": "Returns the contract balance of the sender for a given token .", "title": "", "metadata": ""}
{"_id": "55372433151ca8ac497be5411e5d0406", "text": "Withdraws commission sum to the owner .", "title": "", "metadata": ""}
{"_id": "ba476a6aba4b5f9bc0a8ec3d6dc3bdbf", "text": "show for display purpose amount of tokens which can be bought at given moment .", "title": "", "metadata": ""}
{"_id": "f127ce0d886b23b96e9460f92f2e0090", "text": "Internal function for handling eth refunds during stage two .", "title": "", "metadata": ""}
{"_id": "0792bc1d40d6144224c4936ea36fc5f1", "text": "Beercoin's decimal places .", "title": "", "metadata": ""}
{"_id": "1766ea38ca10dd3149e7dfa2adc041e4", "text": "to verify if action is not performed out of the campaign range .", "title": "", "metadata": ""}
{"_id": "3157290fd9b4cdf4a51b8f3efe7d8a4c", "text": "When MIN_CAP is not reach : 1 ) backer call the approve function of the DARFtoken token contract with the amount of all DARFtokens they got in order to be refund 2 ) backer call the refund function of the Crowdsale contract with the same amount of DARFtokens 3 ) backer call the withdrawPayments function of the Crowdsale contract to get a refund in ETH .", "title": "", "metadata": ""}
{"_id": "f663f5ee58e0bda17fac93e271c7e8e2", "text": "shouldn't happen , just in case .", "title": "", "metadata": ""}
{"_id": "4df3516f4f20415938f45ba269f1a00e", "text": "write functions .", "title": "", "metadata": ""}
{"_id": "f92f4dfd2af938439be1e389e2ab4c1c", "text": "Donate with intent .", "title": "", "metadata": ""}
{"_id": "59e0aaebca52f36252f7a1eecbbc9dfa", "text": "Accepts ether and creates new SME tokens .", "title": "", "metadata": ""}
{"_id": "879b310f6611ca1cdc0bba32ae54fc3c", "text": "update heart count .", "title": "", "metadata": ""}
{"_id": "54284dcc07006d75d035acc4860f94de", "text": "Withdraw remaining CHI from the contract .", "title": "", "metadata": ""}
{"_id": "8a10243543922bc81de0b0fa9f8b6ed9", "text": "is participant rewarded in specified round .", "title": "", "metadata": ""}
{"_id": "dbd0c0ec0a4992ddb2747d7b8050e9dc", "text": "calculates the number of tokens purchased based on the amount of wei spent and the price of tokens .", "title": "", "metadata": ""}
{"_id": "5e113abeb8e8ce7705b8237ae72026f3", "text": "Generate a recipient's token allocation .", "title": "", "metadata": ""}
{"_id": "867da5e2f39bbfb01c716797b4b353d5", "text": "Stop running VAULT .", "title": "", "metadata": ""}
{"_id": "ae3217d9ca6542cf8d402b037ec5359d", "text": "Adds participant for the current week .", "title": "", "metadata": ""}
{"_id": "652f1b529292c01bcf7659414e866039", "text": "Get the balance of an specified address .", "title": "", "metadata": ""}
{"_id": "7541c92abc2c2a448bc68776ec8eb427", "text": "Transfers a variable amount of tokens to up to 100 specified addresses .", "title": "", "metadata": ""}
{"_id": "ced57402ee8900bab90221c6dfd28553", "text": "Returns the bet title .", "title": "", "metadata": ""}
{"_id": "66f0ab5a4a624c6d4110230a97fcc718", "text": "Contrary to most ERC20 implementations , require that recipient is existing member .", "title": "", "metadata": ""}
{"_id": "d100c8a3f99bc6a71fc5d24444cc07a2", "text": "This is a private function and is only being called from trade ( ) .", "title": "", "metadata": ""}
{"_id": "8d0625c460da3496ce1d6e3d686dfa94", "text": "Return list of bounty addresses .", "title": "", "metadata": ""}
{"_id": "3df073372b8f78d13f0e209963d0ab24", "text": "The EVM is a big-endian , byte addressing machine , with 32bytes / 256bits words .", "title": "", "metadata": ""}
{"_id": "0752332fbb8d925eb5f42ec54f40c03b", "text": "Update BET price .", "title": "", "metadata": ""}
{"_id": "5b4f4d9ea12154d0f56173fdbbba9920", "text": "local development .", "title": "", "metadata": ""}
{"_id": "36115354db2e5b4d675efd8d6270cc32", "text": "Removes an auction from the list of open auctions .", "title": "", "metadata": ""}
{"_id": "588fb5089aec262ca4f836f7802bd85f", "text": "Expensive ; not to be called by smart contract .", "title": "", "metadata": ""}
{"_id": "b0d7736d02586eb11d1f2b85dd79f45e", "text": "Whitelist manegement .", "title": "", "metadata": ""}
{"_id": "2b1a352996e2be559119eee58e37fb8c", "text": "Add HQX by referral program .", "title": "", "metadata": ""}
{"_id": "81db841de652c27c9e1415c1b204631c", "text": "function to update token name and symbol .", "title": "", "metadata": ""}
{"_id": "a3d77618470df47aef5ba7b7f2a27ca1", "text": "This function is only intended to run once .", "title": "", "metadata": ""}
{"_id": "abe269a2512e84f5539acf0ddfd4e376", "text": "Admin function to update price for an entire release of cats still available for claiming .", "title": "", "metadata": ""}
{"_id": "3988f01115fc4bde6c460a7afaa9cf02", "text": "getUserOrders allows parties to get an array of all orderId's open for a given user .", "title": "", "metadata": ""}
{"_id": "de73ae041473d016ab0ce84a60315e1e", "text": "Notify the contract that the arbitrator has been paid for a question , freezing it pending their decision .", "title": "", "metadata": ""}
{"_id": "3063065437afb43b781ed9ab63d24898", "text": "Maker can call this method to create a new HODLwin2Eth contract with the maker being the owner of this new contract .", "title": "", "metadata": ""}
{"_id": "a0679fda700d5e7783ba6e147010379b", "text": "Add multiple bidder addresses to whitelist .", "title": "", "metadata": ""}
{"_id": "7c7adc0c7e22523f8153403558ecf605", "text": "this function will send any unsold tokens to the null TokenBurn contract address once the crowdsale is finished , anyone can publicly call this function ! .", "title": "", "metadata": ""}
{"_id": "9ed3a1a2a829cc0642a463911349d701", "text": "override to add a checker .", "title": "", "metadata": ""}
{"_id": "b5c445d0936bc1a5ee0344ea2edfb7e8", "text": "Modifier to make a function callable only when the contract is not closed .", "title": "", "metadata": ""}
{"_id": "33047d1e51fae64075e36b69ff14ebb4", "text": "Burns all caller tokens .", "title": "", "metadata": ""}
{"_id": "b4e295b606398c30b3178f4ce14417d0", "text": "Returns the Ether amount remaining until the hard-cap .", "title": "", "metadata": ""}
{"_id": "9dc67ad3ecdadfcbdcfa541dba8bde66", "text": "Creazione dei token .", "title": "", "metadata": ""}
{"_id": "49966d74803a8313036894f8a8a4106f", "text": "buy for ethereum .", "title": "", "metadata": ""}
{"_id": "35ab55ab6c33c56e155f2a17fbc86d12", "text": "set market details .", "title": "", "metadata": ""}
{"_id": "56d1ca5befb9867c73252ce9e53f7db1", "text": "logs that agreement was accepted by platform user .", "title": "", "metadata": ""}
{"_id": "5c3b7d323f531507daa08c40ea1bffd6", "text": "Play central banker and set the fractional reserve ratio , from 1 to 1000000 ppm .", "title": "", "metadata": ""}
{"_id": "fc3e9db4607df5b2b42b87fe04c47699", "text": "Set the score parameter that once reached would eliminate / revoke validators with scores greater than _scoreMax from the list of authorized validators .", "title": "", "metadata": ""}
{"_id": "8dc4a30993d19c49fd93e5bc21bbb781", "text": "Retrieve the encrypted key to decrypt a resource referenced by an accepted proposal .", "title": "", "metadata": ""}
{"_id": "16dbb7317c1c9769e7fc15f95060e9f5", "text": "votes on contract proposal .", "title": "", "metadata": ""}
{"_id": "efef3a1b658060e9f8262c52277c3a01", "text": "Transfers releasable funds from vesting to beneficiary ( caller of this method ) .", "title": "", "metadata": ""}
{"_id": "b0d8dd22891f2da669555e9684c3599a", "text": "Register an approvation made by a borrower in the past .", "title": "", "metadata": ""}
{"_id": "2999a80b8c083a1397a3e1ee4fe4bc91", "text": "returns the number of contributors in the list of contributors .", "title": "", "metadata": ""}
{"_id": "4e5268c958e1dd28ecb3d5f970e1f49f", "text": "Deconstruct server-side byte data to structured data .", "title": "", "metadata": ""}
{"_id": "27e04ba86d85c9ee1d1818dffa449cb2", "text": "change admin only admin can perform this function .", "title": "", "metadata": ""}
{"_id": "02b00ed7b90f89a888fe812a5ff519f4", "text": "Request a Number . . .", "title": "", "metadata": ""}
{"_id": "bec0394086790481594ff6f1f676db89", "text": "HazzaToken Contract .", "title": "", "metadata": ""}
{"_id": "48f67417e6b7dbfd54b05dc7b5d311ea", "text": "returns the adjacent positions for a given position .", "title": "", "metadata": ""}
{"_id": "0c2187d4ffe841f8b9046ab7182bb74a", "text": "makes single preapproved payment to service provider .", "title": "", "metadata": ""}
{"_id": "f2ce7d319420153faab52447b2983a90", "text": "This is a internal function which should be called from user-implemented external burn function .", "title": "", "metadata": ""}
{"_id": "61803cfb4650a51b117c95e961b7ceab", "text": "Internal Token Handling - validation completed by callers .", "title": "", "metadata": ""}
{"_id": "5d3a152bb8a67bfd4caf6d565a6b05c3", "text": "returns the owner at the top of the tree of composables .", "title": "", "metadata": ""}
{"_id": "98b47119704dc58b4c5c9619faab8595", "text": "Get Current Cargo Hold of AssetId ( item names ) .", "title": "", "metadata": ""}
{"_id": "7fc7c526606b58dd4dae378988d7c958", "text": "Initiliase the stagecount to 0 .", "title": "", "metadata": ""}
{"_id": "94d614b1a7e716af1519792d38e35ff0", "text": "internal func .", "title": "", "metadata": ""}
{"_id": "5fa77dc78725f2ea5fdcd7cd6f3b91f8", "text": "Transfers ownership of a subnode keccak256 ( node , label ) to a new address .", "title": "", "metadata": ""}
{"_id": "ab58348d8fb78cb2eaf7183d0f44f01e", "text": "set bonus of the game .", "title": "", "metadata": ""}
{"_id": "75fdafc05a341d25a0f599a3585de005", "text": "given some voter and token address , get the delegation id - failover to global on 0 address .", "title": "", "metadata": ""}
{"_id": "bff6cf189115426a0a2a04789be8bde6", "text": "Approve and then comunicate the approved contract in a single tx .", "title": "", "metadata": ""}
{"_id": "8a3a57af1d41fefa4aac28c5e8c0bb4e", "text": "An internal function of a hero train with dungeon , it determines whether whether a training is successfully , and the resulting genes .", "title": "", "metadata": ""}
{"_id": "7cefb71650cc750c6c5e29af7a341e8f", "text": "various getter / setter methods .", "title": "", "metadata": ""}
{"_id": "205e6926432735fab49e361505083163", "text": "This method provides the buyer some protections regarding which day the buy order is submitted and the maximum price prior to applying this payment that will be allowed .", "title": "", "metadata": ""}
{"_id": "416468011b9e219a6f4c6fb102e409ef", "text": "Returns a list of all Lambo IDs assigned to an address .", "title": "", "metadata": ""}
{"_id": "a3e689582c45e0c66b37b36bf593604f", "text": "Burn Remaining Tokens .", "title": "", "metadata": ""}
{"_id": "2fa34f2c598db6fce94fbb1b54458257", "text": "Convert an unsigned integer to a unsigned fixed-point decimal .", "title": "", "metadata": ""}
{"_id": "33ab08e4a68efd755bdc13c45a701389", "text": "Internal to pass Token .", "title": "", "metadata": ""}
{"_id": "36a034e9f1976bd67fc430e7f77755a0", "text": "The perktree is represented in a uint8 32 representing a binary tree see the number of perks active buy a new perk 0 : Prestige level - starts at 0 ; next row of tree 1 : offensive moves 2 : defensive moves next row of tree 3 : melee attack 4 : turret shooting 5 : defend arm 6 : body dodge next row of tree 7 : mech melee 8 : android melee 9 : mech turret 10 : android turret 11 : mech defence 12 : android defence 13 : mech body 14 : android body next row of tree 15 : melee electric 16 : melee steel 17 : melee fire 18 : melee water 19 : turret electric 20 : turret steel 21 : turret fire 22 : turret water 23 : defend electric 24 : defend steel 25 : defend fire 26 : defend water 27 : body electric 28 : body steel 29 : body fire 30 : body water .", "title": "", "metadata": ""}
{"_id": "181e83f096efea93344b539ea3ce90a5", "text": "We use this function to start a new battle .", "title": "", "metadata": ""}
{"_id": "ea4664ffa5bb82686c15b704be9ad21b", "text": "Require msg . sender .", "title": "", "metadata": ""}
{"_id": "c92f390ffbe486f5121d7286987c5e99", "text": "Utility function that allows to change the rescueAccount address .", "title": "", "metadata": ""}
{"_id": "7e7e7057689d06895e91464378cbd30f", "text": "called by the user to unpause at ICO end or by owner , returns token to unlocked state .", "title": "", "metadata": ""}
{"_id": "b7f5d438bc16c965683a61b829b2870d", "text": "For claimant : Returns the number of promotions claimed by a specific address .", "title": "", "metadata": ""}
{"_id": "af36d44e26abada013cdaaad7a717a8c", "text": "param1 bool return true if _price price of license .", "title": "", "metadata": ""}
{"_id": "770eed5e877ed7f6c2234e35bdbfe9c3", "text": "Allows the current owner to set an authorization .", "title": "", "metadata": ""}
{"_id": "72abac856de3caedbc6209c20fe022c0", "text": "Used to approve someone to send funds on your behalf .", "title": "", "metadata": ""}
{"_id": "95dd86a35cc9743a2e3e1d81fa344ccf", "text": "watches for balance in a token contract .", "title": "", "metadata": ""}
{"_id": "4d9ef94e07e3dcae2fdf1d391b12f2a3", "text": "event Retained ( address ) ; .", "title": "", "metadata": ""}
{"_id": "b6bc83bf5b6392f9da24cce14ede0588", "text": "Modifier to make a function callable only when the contract redemption is paused .", "title": "", "metadata": ""}
{"_id": "da4002e44a05e3b127dbcdd9c5e96096", "text": "Allow for staking of GLX tokens from crowdsale participants only works if tokens from token distribution are not sold out .", "title": "", "metadata": ""}
{"_id": "6732adf7bc0fb8b6ce381ff30de70f01", "text": "Add address to Contributors .", "title": "", "metadata": ""}
{"_id": "e8f4160685f29e1dcc73a7bdcc33048c", "text": "Transfer remains to owner in case if impossible to do min invest .", "title": "", "metadata": ""}
{"_id": "915a693beb3fecbb0992173497890bd4", "text": "when vesting is revoked it sends back remaining tokens and updates internalBalance .", "title": "", "metadata": ""}
{"_id": "5b0c0eee059fe1f3b30b6f297aa3a074", "text": "Allow callers to withdraw token in one go from all of its subscribers .", "title": "", "metadata": ""}
{"_id": "162f837a63b474b53ca5772d576b870f", "text": "Processes token transfers and subsequent change in voting power .", "title": "", "metadata": ""}
{"_id": "ad0591b741f75ee9ce794d6a847db751", "text": "Transfers contract's ownership .", "title": "", "metadata": ""}
{"_id": "24d8d8eb495697344d52c8f7cdd2ae30", "text": "Internal transfer , only can be called by this contract value in wei , with 18 zeros .", "title": "", "metadata": ""}
{"_id": "9fe33eab98a46df1f02ff6dc65934c21", "text": "Add spender to authorize for spending specified amount of EXH Token .", "title": "", "metadata": ""}
{"_id": "1399c41386b7c451a5c88898c90bd960", "text": "Does a require check if _beneficiary address is approved .", "title": "", "metadata": ""}
{"_id": "1ae618a17cdf943b9aa4aeacd944cd16", "text": "Administrative function to change the owner of the contract .", "title": "", "metadata": ""}
{"_id": "c38b9f0a2748e33fd14f092c696b5fe3", "text": "Throw if the current transfer proposal's deadline is in the future .", "title": "", "metadata": ""}
{"_id": "2d99a00ef9ce49555582680e9a9cc390", "text": "Allows users to buy tokens .", "title": "", "metadata": ""}
{"_id": "3b5e0509642b33637b786907c2598930", "text": "Claim API helpers .", "title": "", "metadata": ""}
{"_id": "87f41390596de8d7e2e4f48fb4127c12", "text": "Hash of the avatar .", "title": "", "metadata": ""}
{"_id": "f8bc0daea04f59bdb68007b534d37af1", "text": "_ercVersion is like : erc20 erc223 .", "title": "", "metadata": ""}
{"_id": "3135a7246c189bd66c7b7cda07c9f1bc", "text": "Safety Methods .", "title": "", "metadata": ""}
{"_id": "aa4158e3fd2c4076d9bf20e4ee0fe716", "text": "Allows token issuer to unlock token transfer for an address .", "title": "", "metadata": ""}
{"_id": "223e81419cf3db7435768fb9335ad40b", "text": "uses qType to handle the last called query type .", "title": "", "metadata": ""}
{"_id": "dccd5e955c3140125c17971a5bf2162d", "text": "Should not be used in non constant functions ! .", "title": "", "metadata": ""}
{"_id": "77fb0ed3bf63b686f18f680e7119b018", "text": "receive amount of tokens from exchange and transfer to specified address .", "title": "", "metadata": ""}
{"_id": "2c157888257134494587777fb8a778d8", "text": "Records a presale purchase .", "title": "", "metadata": ""}
{"_id": "f6fd3c29e3cddaa53ab6751a0d796729", "text": "Allows the owner to unpause the LMDA token .", "title": "", "metadata": ""}
{"_id": "b00aab55e997b0506eba4e4ca74fb61a", "text": "enables fee update - must be between 0 and 100 ( ) .", "title": "", "metadata": ""}
{"_id": "b2a9866c4b2832407e816dafef864312", "text": "Adapted from memcpy ( ) by arachnid ( Nick Johnson email protected ) .", "title": "", "metadata": ""}
{"_id": "36b19053c85e5c32a0ae68ab2122a401", "text": "function to assign a new CEO .", "title": "", "metadata": ""}
{"_id": "2f5ab9a22559cfd397d17b9a0c5dd9d6", "text": "Settles the p + e bribe with the jurors .", "title": "", "metadata": ""}
{"_id": "af8496e76979cf71f571f7a07629ad18", "text": "Transfrom string to uint for obtaining a new ETH / USD quote price from oraclizer .", "title": "", "metadata": ""}
{"_id": "00ac84ec01fe59c961bbe05de3f5d1c0", "text": "Flush the currently pending Ether to Croupier .", "title": "", "metadata": ""}
{"_id": "0a05d9e294a5ff0972fddd95c92e08bf", "text": "Returns the storage location of crowdsale's ending sale rate .", "title": "", "metadata": ""}
{"_id": "00d531b57cc8b6d6121af620b116033c", "text": "user freeze free balance .", "title": "", "metadata": ""}
{"_id": "8191a0548d035fd387cfec61baa51b8e", "text": "Only way to give PoHwhale ETH is via by using fallback .", "title": "", "metadata": ""}
{"_id": "6aa74f3a4b6e0317d69d18c68dee2eb5", "text": "change the price .", "title": "", "metadata": ""}
{"_id": "bf87d21661236a6b33d6d08c550ac255", "text": "Returns the owner of the given Tulip .", "title": "", "metadata": ""}
{"_id": "4716d2bb835696b49424e367672b527f", "text": "this is the 'grab red pocket' function .", "title": "", "metadata": ""}
{"_id": "03ec72e767d39a8d1eafa58ffc967cd2", "text": "Get info about a blob .", "title": "", "metadata": ""}
{"_id": "5beb27d9ffa7e68a986fcdf9d73c800e", "text": "Determines the number of tokens to awarded to the winning party in a challenge .", "title": "", "metadata": ""}
{"_id": "723ff577e6043b17ab6d3b6f79a78ad5", "text": "give an account access to this role .", "title": "", "metadata": ""}
{"_id": "0e38903bb3c6245dc6d43dc1c1753a19", "text": "Finalization task , called when owner calls finalize ( ) .", "title": "", "metadata": ""}
{"_id": "f5e40747c1189ba3b0a2e7f1e15bd86b", "text": "ERC998ERC721 Top Down Composable .", "title": "", "metadata": ""}
{"_id": "7b42dbd9a325c9c56b8ea553138adecc", "text": "sets new conversion rate .", "title": "", "metadata": ""}
{"_id": "f752db2b97a7a6277dc0a07adbc20a2a", "text": "add single address to whitelist .", "title": "", "metadata": ""}
{"_id": "a7a41d1ed47946027735788cb2e0a5bf", "text": "refund ico method .", "title": "", "metadata": ""}
{"_id": "18b2cd951cb70a9c45ee6328986cb5f4", "text": "Transfers ownership of a node to a new address .", "title": "", "metadata": ""}
{"_id": "19bce9eecfbda25cb668760cc2199cda", "text": "actually rent a block to a willing tenant .", "title": "", "metadata": ""}
{"_id": "a5b383fc0d519b0f846570742eb29ab8", "text": "Get the price of your glorious HODLing ! .", "title": "", "metadata": ""}
{"_id": "8f7e43e3dcd2621f7559f2510f8cdc10", "text": "delays the time of closing .", "title": "", "metadata": ""}
{"_id": "7ded5443050be353f93936ee2d6bceb2", "text": "Sets a new end date as long as end date hasn't been reached .", "title": "", "metadata": ""}
{"_id": "3ed4c9e379424402707a7419b19507ba", "text": "TODO : Internal .", "title": "", "metadata": ""}
{"_id": "d0618c29d3f10cede7be7a53c357e7cb", "text": "Get the current hardCap for the current SaleState .", "title": "", "metadata": ""}
{"_id": "7f663ce62221186a67b635637cddac0d", "text": "could use kill ( ) straight-up , but want to test gas on live chain .", "title": "", "metadata": ""}
{"_id": "5be67834d1ce19e98a6817c85eb3e441", "text": "Set allowance for another address .", "title": "", "metadata": ""}
{"_id": "ee384ec593a5e27d186c7b79d3bde7b3", "text": "Start genesis .", "title": "", "metadata": ""}
{"_id": "108ad241f630cd9edd6b619bc8de5bb7", "text": "Creator / Owner can unlocked it once and it can never be locked again .", "title": "", "metadata": ""}
{"_id": "35d1d51083b525d7e1fc9bf1490c5f2b", "text": "wallet update .", "title": "", "metadata": ""}
{"_id": "65a0b46477b17e77da1df5f04d4d38d7", "text": "Contract functions : .", "title": "", "metadata": ""}
{"_id": "b4f5402dd22042565c4828cc2f957689", "text": "Called when an address wants to submit bid to the sale .", "title": "", "metadata": ""}
{"_id": "418e267eff9f9950a7066f5097b6154e", "text": "Called by a token holding address , this method migrates the tokens from an older version of the contract to this version .", "title": "", "metadata": ""}
{"_id": "577b000c3a5717b81b8589839487e4e9", "text": "Sender initiates settling of the contract .", "title": "", "metadata": ""}
{"_id": "bc4405252bb010f200dff587bac0e1e1", "text": "Throws if called the contract has not yet suicided .", "title": "", "metadata": ""}
{"_id": "2d1fb233f6158695588ae128bb2c2615", "text": "add item from manufacturer .", "title": "", "metadata": ""}
{"_id": "ad115d14a3e752173a305c8189a6ce00", "text": "Withdraw balance .", "title": "", "metadata": ""}
{"_id": "c8e60fa2765e57436537618ac0c58afa", "text": "updates the average amount of gas consumed by a game gas the new avg gas .", "title": "", "metadata": ""}
{"_id": "bd0f01c7f9128b7a8051512b8826584e", "text": "allows owner to adjust minInvestment and weiPerABIO in case of extreme jumps of Ether's dollar-value .", "title": "", "metadata": ""}
{"_id": "14f22099fcb7b0974049a301ca7882a6", "text": "add a specific person .", "title": "", "metadata": ""}
{"_id": "20d453f8a7dab6725f12d4cd5717a95c", "text": "Commonly transfer tokens .", "title": "", "metadata": ""}
{"_id": "9bcb5b4bdbdc368812ea7bd8f43ced80", "text": "claimTokens calls updateUserClaim function of MonethaUsersClaimStorage contract to update user's token claim status and assign tokens to user .", "title": "", "metadata": ""}
{"_id": "fd0c91d0e3f6d42e74b78ff254231fdf", "text": "Only after crowdsale .", "title": "", "metadata": ""}
{"_id": "594efd5b248a460c221b0fc31046ffed", "text": "if something went wrong .", "title": "", "metadata": ""}
{"_id": "fa7668c95acb368e9b5926fa837fcb23", "text": "Redefinition of the method of the returning status of the Exchange pause .", "title": "", "metadata": ""}
{"_id": "5ee2e748e726a376f4ff31f866807998", "text": "Add the last 2 ambassadors from the invite contest because they both offline in the time the contract is deployed .", "title": "", "metadata": ""}
{"_id": "971479a0ef2b9fcc101229392f92831a", "text": "modifer to check if the contract given is white listed or not .", "title": "", "metadata": ""}
{"_id": "4d4b3ad9af264e31f4fbb113802ff17c", "text": "bool Success .", "title": "", "metadata": ""}
{"_id": "76d49353962fcf59234f0690bc6dff40", "text": "Convert swap from multisig to htlc mode .", "title": "", "metadata": ""}
{"_id": "338300966e8f7eea5df946f43231287a", "text": "Get address by index from map of unique addresses .", "title": "", "metadata": ""}
{"_id": "87aaad57db648957053144ed2f49a9ce", "text": "Function to claim any token stuck on contract tokens is the amount to transfer tokens to the owner .", "title": "", "metadata": ""}
{"_id": "f279e71c292927f5d77caaf25de084bb", "text": "Function called when any of the parties wants to close the channel and settle ; receiver needs a balance proof to immediately settle , sender triggers a challenge period .", "title": "", "metadata": ""}
{"_id": "5d2f1487c6d16d722db1b8ff44397fcc", "text": "Owner Withdrawal .", "title": "", "metadata": ""}
{"_id": "c5708f94038ba0e9631ef01efdc9de87", "text": "Checks whether or not it is valid to create a PAYS action request .", "title": "", "metadata": ""}
{"_id": "5c3e5d34666d82e92f857cdcfb81dc4d", "text": "Completes the process of transferring ownership to a new owner .", "title": "", "metadata": ""}
{"_id": "9bd9b5e0495ec1129427f485b6d07267", "text": "Computes the payout amount for the current _feeBips .", "title": "", "metadata": ""}
{"_id": "3b5a554be27209a0ba9797ddf1373b40", "text": "are they part of a community .", "title": "", "metadata": ""}
{"_id": "448a6932c7a1e7631cede56e12496372", "text": "Get what's in stake for a specific round .", "title": "", "metadata": ""}
{"_id": "ab41b19161bda26d1a728f6b7cbd4056", "text": "view the private sale end date and time .", "title": "", "metadata": ""}
{"_id": "5e39bc47bf6f4a8646b80a5db8a37277", "text": "Assigns ownership of a specific Dog to an address .", "title": "", "metadata": ""}
{"_id": "b40dab73211ae2a56cc6b68b13415934", "text": "Upgrade the game logic .", "title": "", "metadata": ""}
{"_id": "3d4d4648c3e59963f7eb686fa784912f", "text": "User Actions .", "title": "", "metadata": ""}
{"_id": "e5ca7a1348fd9dd425ab3d5a73103226", "text": "Get base asset info .", "title": "", "metadata": ""}
{"_id": "9b839f4ba05c9a6c5041818626ebe7c2", "text": "Gets address of SupportManager .", "title": "", "metadata": ""}
{"_id": "623c1f61b32a4591a05c95dde3112545", "text": "Check required of tokens in the tranche .", "title": "", "metadata": ""}
{"_id": "30893344b59623e137b47650bdfac944", "text": "save some gas by making only one contract call .", "title": "", "metadata": ""}
{"_id": "b2d79aed04a25a5577b98d26c18ca55f", "text": "the balance of KYC waiting to be approved .", "title": "", "metadata": ""}
{"_id": "90fbc3388ba8f4374aa404928609f582", "text": "Add wallet to tickets if amount matches .", "title": "", "metadata": ""}
{"_id": "3dd32d26e022104cd0765c9825bbf59f", "text": "returns 10 ads beginning from startindex .", "title": "", "metadata": ""}
{"_id": "c29adaa24bdc6a8e63a51234abb97770", "text": "Issue refunds .", "title": "", "metadata": ""}
{"_id": "7dfae8c2459ba5687c58423c045a9451", "text": "Saftey Checks for Multiplication Tasks .", "title": "", "metadata": ""}
{"_id": "a2533cfdd6ca4d11682d364243178911", "text": "invest wbt token function .", "title": "", "metadata": ""}
{"_id": "5d591725fa1a7e03010b18c7e9331fb3", "text": "This function to be used if the target is a contract address .", "title": "", "metadata": ""}
{"_id": "fe075edace12cc133f59276fad869ef0", "text": "Return true if date in phase with given number .", "title": "", "metadata": ""}
{"_id": "72a75dfaa6daf9d5e1c530d0c1d298aa", "text": "Allows execution by the managers only .", "title": "", "metadata": ""}
{"_id": "8236e6476c3d47819b097d01da2ee785", "text": "transfer ownership for auction winners in case they want to trade the creature before release .", "title": "", "metadata": ""}
{"_id": "9dbeca2759f527d82853a386722c93c3", "text": "Activate Gabicoin if that's posible .", "title": "", "metadata": ""}
{"_id": "26171c4042b993199890a48a9657d1bd", "text": "For ICO and project details visit http : / / careerxon . com .", "title": "", "metadata": ""}
{"_id": "5195c25494ba94a020bfcc14b0c132b3", "text": "verifies if a contract that has been deployed is a Human Standard Token .", "title": "", "metadata": ""}
{"_id": "d1223fa534aae4ce500018b564508d86", "text": "Places buy offer for the canvas .", "title": "", "metadata": ""}
{"_id": "719d996eec5685bbe458f787093ef7f3", "text": "Mint DataTrading tokens and aproves the passed address to spend the minted amount of tokens .", "title": "", "metadata": ""}
{"_id": "a6eced0766d293097f2599f3dbf318eb", "text": "Internal method for claiming tokens for specific approved address .", "title": "", "metadata": ""}
{"_id": "77e56fd52174c49893b3c63037a35629", "text": "Update the dividend of hodler .", "title": "", "metadata": ""}
{"_id": "44ab686d668ffbe6b03af09a67339501", "text": "disables / enables token issuance can only be called by the contract owner .", "title": "", "metadata": ""}
{"_id": "2a808afc61b1dd9b6c7c0395db59d1fe", "text": "amount of token allocated .", "title": "", "metadata": ""}
{"_id": "3c3afe0c487544a28345771610d9121f", "text": "adds the gas cost of the tx to the given value .", "title": "", "metadata": ""}
{"_id": "fef5cb49412400981afba53ac77fce4a", "text": "returns a dynamic array of the ids of all tokens which are owned by ( _owner ) .", "title": "", "metadata": ""}
{"_id": "296e867f1090941cf246d667958dc294", "text": "Withdraw out the balance of the contract to the given withdraw wallet .", "title": "", "metadata": ""}
{"_id": "963411b6e168571294f461aceadac0e4", "text": "Transfer tokens from the sale contract to a recipient .", "title": "", "metadata": ""}
{"_id": "92d8299fcfe041bb9d5a2a4d794c3ef2", "text": "The way to get current token price .", "title": "", "metadata": ""}
{"_id": "161f5ea77f9b54f13ce7254ee894064f", "text": "Throws if _tokenId exists .", "title": "", "metadata": ""}
{"_id": "330b2a6911ab8025706fdff8b4bad25f", "text": "these events can be turned on to make up for Solidity's horrifying logging situation event logUint ( address add , string text , uint256 value ) ; event simpleLogUint ( string text , uint256 value ) ; .", "title": "", "metadata": ""}
{"_id": "f90753cf91bdb64eee35f7df995b1903", "text": "Try create new player .", "title": "", "metadata": ""}
{"_id": "a7055e47844ca94cd5b65da842156104", "text": "Transfer _amount of tokens ( must be sent as floating point number of token and decimal parts ) to _address with preliminary approving amount + fee from transaction sender .", "title": "", "metadata": ""}
{"_id": "a00d2879bb4ff5773f005d46a84dfe48", "text": "Calculate results of a purchase .", "title": "", "metadata": ""}
{"_id": "7b3ff0c94cf38dc99029df6ac5703b4a", "text": "Finish token minting , enable transfers and transfer token ownership .", "title": "", "metadata": ""}
{"_id": "9808af5039c75b10ee8b3e595e091872", "text": "Owner can start new token sale , to mint missing tokens by using this function , but not more often than once per month .", "title": "", "metadata": ""}
{"_id": "50ca2eb4a8246dc57bfb5436487873f4", "text": "Function to lock tokens for some period of time .", "title": "", "metadata": ""}
{"_id": "3bfed6d57aa9d85dd72293eb89d0264e", "text": "function in contract 'ContractReceiver' .", "title": "", "metadata": ""}
{"_id": "51eb1fb4140d5936131033236454fb33", "text": "Mint coins .", "title": "", "metadata": ""}
{"_id": "39a032c98a86c3c3db5737791dc6e9dd", "text": "True iff adding x and y will not overflow .", "title": "", "metadata": ""}
{"_id": "43c6fea32b2b97ab08c65c479e8df65e", "text": "bid for an pixel auction .", "title": "", "metadata": ""}
{"_id": "0f75b7e7e01c4bbc5227ffd88524d813", "text": "Investors tokens accrual .", "title": "", "metadata": ""}
{"_id": "8a901545f4bb5fb5489a4e23e8729204", "text": "Get current tier tokens rate .", "title": "", "metadata": ""}
{"_id": "00408a83161b3d1a88ddc1ed3e5a3c67", "text": "onlyOwner Changes the maximum number of seconds securityGuard can delay a payment .", "title": "", "metadata": ""}
{"_id": "3133357c26f15ce346a4b65aacd05dfa", "text": "Reinvest Proof Shrimp Farm dividends .", "title": "", "metadata": ""}
{"_id": "ed609c39329c809269d14b05f520be9c", "text": "( uint8 CurrentRecordState , uint8 RecordStateRequired , uint8 EntityStateRequired ) .", "title": "", "metadata": ""}
{"_id": "1af693467f51989e3ef6b92cafe25619", "text": "for balance of a account .", "title": "", "metadata": ""}
{"_id": "a5e573d1c8be13005a11a277cded234e", "text": "Compute the amount of TGC token that can be purchased .", "title": "", "metadata": ""}
{"_id": "70ec98e3e082d68bd8b34ebb95aaa9a1", "text": "Executes script by delegatecall into a deployed contract ( exec ( ) function ) .", "title": "", "metadata": ""}
{"_id": "118bfc5e2d30e5cbb0aae53d77df7726", "text": "Change the owner of a contract .", "title": "", "metadata": ""}
{"_id": "4c555d06911d07efbb23fc6434426b4b", "text": "Reads from storage and returns information about the current crowdsale tier .", "title": "", "metadata": ""}
{"_id": "df63607b147741ec01bab007a23729ff", "text": "set migration agent ( new token address with MigrationAgent interface ) .", "title": "", "metadata": ""}
{"_id": "6310cd33dd7766f43815de34fa1297c3", "text": "Manually remove approved game .", "title": "", "metadata": ""}
{"_id": "3a01b98895cf880c068639e09b1c7cd1", "text": "Balance View .", "title": "", "metadata": ""}
{"_id": "7e04985add10671f2a070e5bcee479fc", "text": "get the upgrade status .", "title": "", "metadata": ""}
{"_id": "0c5d27b33affa66035e67dca3c4fa018", "text": "Functions with this modifier can only be executed by users except owners .", "title": "", "metadata": ""}
{"_id": "0f6bf0fc330b1c91edbcab18798676c6", "text": "Owner can mint new tokens .", "title": "", "metadata": ""}
{"_id": "46ed0f6ba182da52f95d9143f86d4b8e", "text": "Allow owner to suicide the contract after a year .", "title": "", "metadata": ""}
{"_id": "07d99450f449fa36f040929ad5c7ea84", "text": "check the alloced .", "title": "", "metadata": ""}
{"_id": "522da33856cd5871ff365751c2317ba3", "text": "Credit to Rob Hitchens : https : / / stackoverflow . com / a / 42739843 .", "title": "", "metadata": ""}
{"_id": "1d9fce6c980154ddb54560bf1dcb5240", "text": "a - b .", "title": "", "metadata": ""}
{"_id": "dd7b6c192c2f1ab1e693c217f1658dbd", "text": "Others Functions of the contract .", "title": "", "metadata": ""}
{"_id": "8e1a426be043e9cd177ff3963043af96", "text": "Function to call from other contracts to ensure that this is the proper contract .", "title": "", "metadata": ""}
{"_id": "ecf8544da417f5e5f96dacf35c8a7fb7", "text": "This function calculates the payout of the swap .", "title": "", "metadata": ""}
{"_id": "82f52c7214d385203bea338b2be8336a", "text": "Approve scans of multiple users and grant Beercoins .", "title": "", "metadata": ""}
{"_id": "1e796ee3a6144a2b8b4c7334b678a22e", "text": "function to withdraw LegalContingencyFunds funds to the owner wallet can only be called from owner wallet .", "title": "", "metadata": ""}
{"_id": "e4e7656f3e9fea1bfa0921c8b79fbd53", "text": "Calculate the number of bonus tokens to send the buyer .", "title": "", "metadata": ""}
{"_id": "f2c42d65e33acae4356fa82986d964e6", "text": "Mint many new tokens .", "title": "", "metadata": ""}
{"_id": "10a1eca814321a8026f4ad475700f750", "text": "adds new area to world .", "title": "", "metadata": ""}
{"_id": "289ea084217d18a88cbb1c165363881c", "text": "Implements the KYCBase senderAllowedFor function to enable a sender to buy tokens for a different address .", "title": "", "metadata": ""}
{"_id": "674bff7b91ef1c0ad9fa2f5f1330c7b6", "text": "Fee Discounts , Rebates .", "title": "", "metadata": ""}
{"_id": "60b7f9b86fe792887ab9449be9d2fcb9", "text": "Finish ICO and emit tokens for bounty company , partners and team .", "title": "", "metadata": ""}
{"_id": "1811ae420a77faac6864a1f255a3e7f1", "text": "Cancels orders that were not expected to settle immediately , i . e .", "title": "", "metadata": ""}
{"_id": "9cecaaa201282647ce599a76b03c7b2a", "text": "Allocate tokens to team members .", "title": "", "metadata": ""}
{"_id": "0b57e6c393c6e9f5ce6fe74d9c655ab4", "text": "this is the core logic for any buy / reload that happens while a round is live .", "title": "", "metadata": ""}
{"_id": "2d5865bffabfac36e46538e2f4170fd7", "text": "computes the difference of the win balance relative to the last known state and adds it to the player's balance .", "title": "", "metadata": ""}
{"_id": "1b9f80753a1990a88eb35701f8dc321b", "text": "Throws if paused is false .", "title": "", "metadata": ""}
{"_id": "2a583adcd41a729d92f26754352a1e5e", "text": "Hammer check modifier .", "title": "", "metadata": ""}
{"_id": "898a3a72f88fd9bb78193a01a11e1fe9", "text": "The owner can withdraw ethers only if the minimum funding level has been reached and pre-sale is over .", "title": "", "metadata": ""}
{"_id": "5816cf70832695accfd3c1e93a41f10a", "text": "Transfer of tokens from the trusted address _from to the address _to in the number _value .", "title": "", "metadata": ""}
{"_id": "8389af7a050c29183d70d99f1494d89c", "text": "User Functions .", "title": "", "metadata": ""}
{"_id": "5c99ad00b46b4bea1fbbc041bc1d0dac", "text": "Lock transfer for contributors during the ICO .", "title": "", "metadata": ""}
{"_id": "1dcbd179a1d5ff842346b82bd8d1949b", "text": "get price of certain token for UI purposes .", "title": "", "metadata": ""}
{"_id": "03f9509c7a6fffda35121393c1630275", "text": "change rules .", "title": "", "metadata": ""}
{"_id": "39badac298ad710718ada884d1565957", "text": "Fetches the share IDs connected to the given stock .", "title": "", "metadata": ""}
{"_id": "3fe12505f39dad05e78ecd628ee20a56", "text": "If there are still Nexiums or Ethers on the contract after 100 days after the end of the crowdfunding .", "title": "", "metadata": ""}
{"_id": "aa2fb272fbeb808619f403faf1b6eac7", "text": "Buy unclaimed plots .", "title": "", "metadata": ""}
{"_id": "e2dfc3dd866c7f5b66f85b946765b4ee", "text": "This function closes further contributions to the contract , advancing it to stage two .", "title": "", "metadata": ""}
{"_id": "325579956d20a4195fa7839826efb4e0", "text": "sets the token that the presale will use .", "title": "", "metadata": ""}
{"_id": "ad3d0ff9cc332f51416e436ece925cee", "text": "Return a numeric code about the upgradability of a couple wallet-uid in a certain app .", "title": "", "metadata": ""}
{"_id": "e59b95e3326e6a5de9833accf3aff022", "text": "Returns the current Bonus .", "title": "", "metadata": ""}
{"_id": "0321889489fc368b4c8af94062dae0da", "text": "owner selfdestruct contract * * * BE CAREFUL ! EMERGENCY ONLY before self destruct , execute ownerTokenTransfer ( ) to GET TOKEN OUT .", "title": "", "metadata": ""}
{"_id": "2d9cd1fbc0023d26a188ddb9d8ae6ee6", "text": "calculates how much tokens will beneficiary get for given amount of wei .", "title": "", "metadata": ""}
{"_id": "d2ec7bed69aee55ec4e3fb67b65f9197", "text": "Modifier to make a function callable only when there are unfrozen tokens .", "title": "", "metadata": ""}
{"_id": "ca91632c7f2aa67c4509c8d3c53dac2b", "text": "It is assumed that we will have called doRectanglesOverlap before calling this method and we will know they overlap .", "title": "", "metadata": ""}
{"_id": "dcbc2b2f917da010799fe8806292d444", "text": "Creates a new virtual entity and a connection in one transaction .", "title": "", "metadata": ""}
{"_id": "f83e2f82930e60e8bd267b3bdfed3cd3", "text": "This function is used to change user's own name .", "title": "", "metadata": ""}
{"_id": "14076e6559a2d1237f7c0504a61d781d", "text": "Difficulty adjustment .", "title": "", "metadata": ""}
{"_id": "d85df7320f6dc5adc22759e4aebaf9bb", "text": "Associate a string , which represents an EOS address , to the Ethereum address of the entity interacting with the contract .", "title": "", "metadata": ""}
{"_id": "4fbfc0828fdf78c2d7f28e4e34f37a4d", "text": "Unread messages as array of message numbers .", "title": "", "metadata": ""}
{"_id": "9edf44c1bbe3d8f1eef069ebb0d3378e", "text": "Utility function for calculate available tokens and cost ethers .", "title": "", "metadata": ""}
{"_id": "85f9924f63ee0fde19b2e6959b267bdd", "text": "Donate tokens from the sender's balance into the fee pool .", "title": "", "metadata": ""}
{"_id": "8253d825616f45cde6ce9c873ebe68a2", "text": "End time ( as required by Eidoo's ICOEngineInterface ) .", "title": "", "metadata": ""}
{"_id": "aaeffe285d41e354f927f6c78b39859b", "text": "Check if job exists .", "title": "", "metadata": ""}
{"_id": "ea39340f6958a01f5d96ccb19511a8c3", "text": "Extract 128-bit worth of data from the bytes stream .", "title": "", "metadata": ""}
{"_id": "982b4bb53979045ab3c4d1fa80944d94", "text": "True if it is appropriate to choose the winner , false otherwise .", "title": "", "metadata": ""}
{"_id": "c0bcfaa65bf4a3d86e1546f6820c0bfa", "text": "Creates a new Card with the given slug .", "title": "", "metadata": ""}
{"_id": "3d649b8c22e592a7cf55f0ea92837442", "text": "transfer tokens from given address to another address .", "title": "", "metadata": ""}
{"_id": "6f5e1acd3541b68b3488f19972889235", "text": "create new listing data .", "title": "", "metadata": ""}
{"_id": "bf0562179389888c4ade6b651fe3cff9", "text": "Executed when a purchase has been validated and is ready to be executed .", "title": "", "metadata": ""}
{"_id": "06b2b912c9bbf13570b47d4c7983e49d", "text": "Receives a donation in ETH .", "title": "", "metadata": ""}
{"_id": "c18d4a22804b3936785162806a8e3a94", "text": "Adds an array of addresses to the whitelist , all with the same optional custom rate .", "title": "", "metadata": ""}
{"_id": "0876cc3941e08b40c8f8349750987ac6", "text": "Extend parent behavior to update user contributions so far .", "title": "", "metadata": ""}
{"_id": "6557b8a0ab471a7f6edc96248f663230", "text": "Purchase a library directly from the contract for the calculated price which ensures that the owner gets a profit .", "title": "", "metadata": ""}
{"_id": "381166650a415f9418ca1f2ee6841074", "text": "Set backend Api address .", "title": "", "metadata": ""}
{"_id": "f5e11551a425bf4171374fb9976dde8f", "text": "Throws if player does not own the hero .", "title": "", "metadata": ""}
{"_id": "0a0e56aaefab16aebbb2c7a796ce2904", "text": "Getter to determine if address is in investorList .", "title": "", "metadata": ""}
{"_id": "8c48b580a242b5148fc9919b1948d3da", "text": "set Wild card token .", "title": "", "metadata": ""}
{"_id": "beeee39aecbfc0aeb6b803038f0d58c8", "text": "Transfer tokens from one address to another or burns them if _to is this contract or zero address .", "title": "", "metadata": ""}
{"_id": "4dee998683e8989b2db4a260519376d2", "text": "Creates a new Tuber with the given name .", "title": "", "metadata": ""}
{"_id": "74b6bfd55da41cfe75aaffb391fc1e42", "text": "Handler for trading tokens into and out of the Option at the given Strike Price .", "title": "", "metadata": ""}
{"_id": "8a356893003e2f56400d8f490711879b", "text": "Function transactions On now validate for definit address .", "title": "", "metadata": ""}
{"_id": "48690bc6a805c45b9ddf2b3bbb212ab6", "text": "Withdraw the sender's contributed Ether in case the goal has not been reached .", "title": "", "metadata": ""}
{"_id": "eddbbb43ef9ea9d2953e98c2c75718f9", "text": "Amount of dividends currently in the Lottery pool .", "title": "", "metadata": ""}
{"_id": "1abbe445388f83f41d75e657fbe92764", "text": "Allow an Option's Buyer to exercise the Option , trading amountTraded of assetTraded to the Option for amountLocked of assetLocked .", "title": "", "metadata": ""}
{"_id": "0f7e23280d07794ab83bf426f8e6ab79", "text": "TakePrize , can be called by everyone if contract is open .", "title": "", "metadata": ""}
{"_id": "ba588b304791d236619084eae0ca977d", "text": "Calls into ERC20 Token contract , invoking transferFrom .", "title": "", "metadata": ""}
{"_id": "8efd7ee046f8b663239822b90aa941d8", "text": "Updates a Project's info to change the address , name , url , or commitTime , it cannot be used to change a plugin or a parentProject , and it must be called by the current address of the Project .", "title": "", "metadata": ""}
{"_id": "6d59dfe9f65eeae8a2ca370ea396e91c", "text": "Burn token from one address .", "title": "", "metadata": ""}
{"_id": "a7937d76d7c95115b6f27d4e57ead9f0", "text": "forwarding a transaction .", "title": "", "metadata": ""}
{"_id": "cec4c57149ef2fc128a1971ea5d3bbc5", "text": "Increase permission for transfer .", "title": "", "metadata": ""}
{"_id": "9f4e48afcf6b450f4bdeb0eafcafb299", "text": "Members can always sell to the contract at 1 BERP 0 . 001 ETH .", "title": "", "metadata": ""}
{"_id": "078cf0aad6ed5b0b848420065fccdf35", "text": "and then communicate the contract in a single tx .", "title": "", "metadata": ""}
{"_id": "5371138f1b9f905156363ce4172e46f9", "text": "Allow the sender to unset its existent identity .", "title": "", "metadata": ""}
{"_id": "4a8ca9fe0c5512384042f3dadfb6efa2", "text": "a private function to lists an indexed Bytes collection starting from some _current_item ( which could be included or excluded ) , in the forwards or backwards direction .", "title": "", "metadata": ""}
{"_id": "aa7123c6f2a2bb4fba56783f7e9d3e71", "text": "gives full ownership of this wallet to _dest removing older owners from wallet .", "title": "", "metadata": ""}
{"_id": "6a7ecf0e26993c8da7137f6113084f83", "text": "helper method that allows owner to allocate tokens to an address .", "title": "", "metadata": ""}
{"_id": "bb65530853c7201647492d6a7fcbff19", "text": "Send ERC20 tokens to multiple contracts using a byte32 array which includes the address and the amount .", "title": "", "metadata": ""}
{"_id": "3114eaf65656fda92a4b4dd71d72f5e7", "text": "Facilitates the assignment of investor addresses and amounts ( only before claiming phase starts ) .", "title": "", "metadata": ""}
{"_id": "6d5ad95bba40632eb7d34054fefc448b", "text": "Function for user can destory GNUG , exchange back to off-chain points . That .", "title": "", "metadata": ""}
{"_id": "9d187d5150f882c9aedaba8b4c3d38f4", "text": "Mod Functions .", "title": "", "metadata": ""}
{"_id": "d01519a729e05ddb0bcb21bd106e64d0", "text": "Internal implementation of payout ( ) .", "title": "", "metadata": ""}
{"_id": "f5707eaf861f2b388072f0f72a5ca127", "text": "Allow the beneficiary to change its address .", "title": "", "metadata": ""}
{"_id": "9d9de4cf60453c6eff8056621f73b346", "text": "Prove that beneficiary is able to sign transactions and start the crowdsale .", "title": "", "metadata": ""}
{"_id": "630f6017e90f589aa809b43175c3d682", "text": "Collect service / affiliate fee for a sell .", "title": "", "metadata": ""}
{"_id": "e8737e6bd0cfa3d0657bbb708dcc507b", "text": "Returns the pending amount up to the last time of the interest update .", "title": "", "metadata": ""}
{"_id": "c9111b812781a8d21cb9d223a7689a78", "text": "Products management start here .", "title": "", "metadata": ""}
{"_id": "a8c9c5520e9d7ff4f72e1906e3307463", "text": "iteratively distributes SMR according to SMRE possession to all SMRE holders and pools .", "title": "", "metadata": ""}
{"_id": "bdfd19690dc6bf344b1cc71ee528c4ca", "text": "Enable the Pause of exchange .", "title": "", "metadata": ""}
{"_id": "a1f165f402dffdd2904a3e12cd5958ee", "text": "Creates a new market contract .", "title": "", "metadata": ""}
{"_id": "54053a78b5210ae1acd38e13fd125b34", "text": "Returns the amount a spender is allowed to spend for a particular address .", "title": "", "metadata": ""}
{"_id": "55972259b4c5e28cb411f73501dc435f", "text": "This method can be called the distribution cap is reached only .", "title": "", "metadata": ""}
{"_id": "5c53668a63c4108bcd4e631b831d90f0", "text": "Setup the disbursements and the number of tokens for sale .", "title": "", "metadata": ""}
{"_id": "746f0a03a64048e8e724d6f5431fc8c9", "text": "in case of manual withdrawal .", "title": "", "metadata": ""}
{"_id": "de3e9a85124c2a3380d9011e8776925c", "text": "query remaining time this should not be used , query endTime once and then calculate it in your frontend it's helpful when you want to debug in remix .", "title": "", "metadata": ""}
{"_id": "646e66a33ae21220b8b2d268b28a7816", "text": "Create a game that may be joined only by the address provided .", "title": "", "metadata": ""}
{"_id": "83096137f47886c0771facf190368db4", "text": "for debug .", "title": "", "metadata": ""}
{"_id": "598118ac280da11c15bfc255564143e0", "text": "This function will return only the owner address of a specific pokemon .", "title": "", "metadata": ""}
{"_id": "581f3e3ddc3fd9d2c15ab022d45321b7", "text": "Creates a new Gem with the given name .", "title": "", "metadata": ""}
{"_id": "dcfe44502aa337d2e307d8954f7cea6c", "text": "function betOnOdd_Even bet type : parity input : 0 for even input : 1 for odd .", "title": "", "metadata": ""}
{"_id": "de2d69eb48ff5df645c097f30ad3a627", "text": "Update the address of the generator contract , can only be called by the CEO .", "title": "", "metadata": ""}
{"_id": "247dd13baf1b1cdb40bb30d6acb91ae6", "text": "function which is called when transaction target is a contract .", "title": "", "metadata": ""}
{"_id": "1a44785a16d7effe4255f11c8d98dc1f", "text": "gen limit handle .", "title": "", "metadata": ""}
{"_id": "5ce77d16def02ab0bdf0e0ca424c9ff7", "text": "Give ( voter ) the right to vote on this ballot .", "title": "", "metadata": ""}
{"_id": "8d32365a5dbb3cfff445479a9b0c110d", "text": "Mint new locked tokens , which will unlock progressively .", "title": "", "metadata": ""}
{"_id": "a22ff37be110f39532a17761068fc04c", "text": "Withdraw collected service fees .", "title": "", "metadata": ""}
{"_id": "a086cfc0c30a4cd57e23506beec76327", "text": "Stores the minimum number of tokens a user must purchase for a given tier .", "title": "", "metadata": ""}
{"_id": "b77c08fb7deaaf29541061dcd744e5cb", "text": "This modifier allows only owner of the token and holder of the token call a function .", "title": "", "metadata": ""}
{"_id": "ec6ab5d10dc82ccedc5f77d9ce531bab", "text": "Use to claim EOS Classic from the calling address .", "title": "", "metadata": ""}
{"_id": "4c228799f01b567c1284e06294139239", "text": "Adds a new phase .", "title": "", "metadata": ""}
{"_id": "9d02984260505c8660a301a1d08b5898", "text": "function to set the max buy limit in 1 transaction can only be called from owner wallet .", "title": "", "metadata": ""}
{"_id": "509b5932cf5fddc908dc1cbfa172f28d", "text": "Internally used to move to the next turn , by switching sides and updating the board last update time .", "title": "", "metadata": ""}
{"_id": "915f792061e215eb2be4d5eeb5eeada0", "text": "Sell tokens to specified address .", "title": "", "metadata": ""}
{"_id": "a54f121fe524de417261671b64f8c6e0", "text": "This function allows the contract owner to buy protection for an unprotected that they already own .", "title": "", "metadata": ""}
{"_id": "08be67bb263712bc9b3a9663f7447f0b", "text": "Function record bet called by all others betting functions .", "title": "", "metadata": ""}
{"_id": "ba31e99e9ec69760cf2ebf37eb46729d", "text": "Temp function for change start times for debuging .", "title": "", "metadata": ""}
{"_id": "dd2bf52dcc4fd7b5e5100eb69bc478d4", "text": "This function returns the amount of remaining ethers allowed to invested .", "title": "", "metadata": ""}
{"_id": "8753bee3b7b267b909a28458ab3baa39", "text": "Sets a wonder as approved for transfer to another address .", "title": "", "metadata": ""}
{"_id": "7a895ac9c104002bc1e4e92625bf8817", "text": "internal function to update player override id .", "title": "", "metadata": ""}
{"_id": "d0535e2ce1bd4cfb1a17f0f422f25ac0", "text": "Checks balance of Address .", "title": "", "metadata": ""}
{"_id": "1fe821b36bf07f926c59d6858ef22c04", "text": "End locking state .", "title": "", "metadata": ""}
{"_id": "122a7885ac6cd1d6bc687b69ef6d341b", "text": "delay The current rating delay time in seconds .", "title": "", "metadata": ""}
{"_id": "4cda524eb21498cacbb69d11210dad0c", "text": "Allow users to change name , image URL , tag and home URL .", "title": "", "metadata": ""}
{"_id": "009de628862cd663b154bd05fece5139", "text": "Change the owner of the contract .", "title": "", "metadata": ""}
{"_id": "136acb9146960900310b2e57675aff05", "text": "Same as transferViaSignature , but for approve .", "title": "", "metadata": ""}
{"_id": "e6872ee2532e2461c3f2e213cfc5e818", "text": "check claim entitlement of any wallet .", "title": "", "metadata": ""}
{"_id": "6accc9229810b1f8d6c2c04f54140dd5", "text": "Creates a new Car with the given name .", "title": "", "metadata": ""}
{"_id": "b8d1976003cb34cfdc55e2acf3190b04", "text": "Get the i-th skin an account owns , for off-chain usage only .", "title": "", "metadata": ""}
{"_id": "1ed1723cccd2d688e93923d4acbe02d8", "text": "Transfer the balance from the sender's address to the address _to .", "title": "", "metadata": ""}
{"_id": "e7ddfc87394f5649e180e039e4c55a92", "text": "Permission check - registrant or greater .", "title": "", "metadata": ""}
{"_id": "4525b97a6073c1f2c7469b6202f677b7", "text": "change owner .", "title": "", "metadata": ""}
{"_id": "f72a60d0125e0d0c570e69a91070f08c", "text": "check if main sale is running .", "title": "", "metadata": ""}
{"_id": "d59a34fec9d5d4478c37dea6f348f351", "text": "Checks the amount of tokens left in the allowance .", "title": "", "metadata": ""}
{"_id": "b381c49e5e121d356aeed8401099f270", "text": "Returns the total number of holders of this currency .", "title": "", "metadata": ""}
{"_id": "2fda7b65c2554864e17cc7baaf9b4764", "text": "Sets the reference to the plugin contract .", "title": "", "metadata": ""}
{"_id": "148cf884e144ddad48edb17471440bfe", "text": "Set ParamsPreSale .", "title": "", "metadata": ""}
{"_id": "1da3dad2dbbb78ebf341995cbdec7c49", "text": "to multisig wallet .", "title": "", "metadata": ""}
{"_id": "6e9fbcb3cf0e2235fe9444093bee34ee", "text": "Set the mining leader .", "title": "", "metadata": ""}
{"_id": "4729b32c7b6f9fb36d9d5e89e74c0385", "text": "get the TokenTimelock contract address for an owner .", "title": "", "metadata": ""}
{"_id": "d8ec1c42af4a06eecc7544d55f4a7f2e", "text": "Standard transfer ( ) but with check of frozen status .", "title": "", "metadata": ""}
{"_id": "e680df12bcae67f2c41d413a2127eb2b", "text": "Call ERC677 tokenFallback for ERC677Recipient contract .", "title": "", "metadata": ""}
{"_id": "cc42c79b582111f41c6c20b769a7661d", "text": "Function to return money to one customer , if mincap has not been reached .", "title": "", "metadata": ""}
{"_id": "763bc288374ffdc98f0a2c3d5892cd4c", "text": "Covfefe Duel System .", "title": "", "metadata": ""}
{"_id": "e3766376055ba18aa198c1ccffd5e534", "text": "Transfer 0 . 3 .", "title": "", "metadata": ""}
{"_id": "349474b37897bc5a91214d006dec7d80", "text": "Set address of next upgrade target contract and enable upgrade process .", "title": "", "metadata": ""}
{"_id": "edc564f5ef452a63b858bb5ba38cfadc", "text": "The onlyOwner external function to call when joining the next tournament .", "title": "", "metadata": ""}
{"_id": "28c4cdc06f17b8e68583ceeda02efadd", "text": "Copyright ( c ) 2016 Smart Contract Solutions , Inc .", "title": "", "metadata": ""}
{"_id": "44011c09f492cf79f9f4ad0d9ff3cee0", "text": "Ensure phase 2 is in progress .", "title": "", "metadata": ""}
{"_id": "7bda73eef5d040338f690e9259307c4e", "text": "Delete wallet from wallets list .", "title": "", "metadata": ""}
{"_id": "1dac5f44b3163ae8068901cc22250505", "text": "Function to grant new permission to the manager .", "title": "", "metadata": ""}
{"_id": "75368761034b232d4f2fd818c02a607e", "text": "uint Returns a of bonification to apply .", "title": "", "metadata": ""}
{"_id": "dd3b613e2e4303719b7a9c68a4e3d485", "text": "Pause token transfer .", "title": "", "metadata": ""}
{"_id": "a0f779e1c8fc7167e8e4324265aed56b", "text": "Gets the token id for the specified UUID .", "title": "", "metadata": ""}
{"_id": "d30922a519f38c29a7c22391f5b8c007", "text": "Checks if a given address is the current owner of a particular Artwork .", "title": "", "metadata": ""}
{"_id": "4dd35b279f0e37681539a485d300fdc2", "text": "Allows a depositor to withdraw his contribution if the reservation was canceled .", "title": "", "metadata": ""}
{"_id": "505176bf1d27b195ba1622bbc160a543", "text": "To change the EthPriceFeed contract if needed .", "title": "", "metadata": ""}
{"_id": "d5145eb3ea76365dbaa77f152dac6f50", "text": "Returns the percentage which was rounded when dividing .", "title": "", "metadata": ""}
{"_id": "5b700840888c08dcf09c017aea1dba96", "text": "Assigns or removes an address to act as a CFO .", "title": "", "metadata": ""}
{"_id": "f0e0c61d82e626f39ff2ea54ee77248f", "text": "Updates the fee contribution multiplier required for calling transport ( ) .", "title": "", "metadata": ""}
{"_id": "cd74810473e6816d55bce6eff85a53be", "text": "whitelister accounts .", "title": "", "metadata": ""}
{"_id": "22c716280664241903b182fc42c947d4", "text": "set to whiteListAgent address .", "title": "", "metadata": ""}
{"_id": "9c88e04575f8a6aff8726fc884c84fe3", "text": "Show allowance .", "title": "", "metadata": ""}
{"_id": "ffcfce73ffbbd70cd64c2de64f506dbb", "text": "Issue tokens to normal investors in presales .", "title": "", "metadata": ""}
{"_id": "4e0a7e43940fc324f1db08ec05fbfa67", "text": "allow owner to finalize the presale once the presale is ended .", "title": "", "metadata": ""}
{"_id": "62d07356b867a49e7a87109cac15545b", "text": "Specified address is transfer manager .", "title": "", "metadata": ""}
{"_id": "0c5de78c5c39f08d325a16488958670a", "text": "Getting Data .", "title": "", "metadata": ""}
{"_id": "42a22bf76f761a9881724a67a1b2e7d6", "text": "bidding function , people use this to buy tanks .", "title": "", "metadata": ""}
{"_id": "e31513e7f2a1a8bd31ca72ba59395f2e", "text": "Stores the sale's whitelist .", "title": "", "metadata": ""}
{"_id": "c818e4895b5b33acd9d5d17f67163979", "text": "Function which set the money manager .", "title": "", "metadata": ""}
{"_id": "80c894d15855bf4fc034196fac628f9e", "text": "return a list of ids that _auditor has staked in .", "title": "", "metadata": ""}
{"_id": "cc4a5d2ee3973b2ea9fc80b7e2436050", "text": "allowance function checks the amount of tokens allowed by an owner for a spender to spend .", "title": "", "metadata": ""}
{"_id": "120c1d0ac4a08f03e7e0c84f53a8706c", "text": "Create mintedAmount tokens and send it to _target .", "title": "", "metadata": ""}
{"_id": "ba8a6edbe5c1f9b4b921a80bb7e3baf7", "text": "This function is used to mint additional tokens only admin can invoke this function .", "title": "", "metadata": ""}
{"_id": "c1dda1972791716aec415f56748d98bc", "text": "allow fundWallet to remove ether from contract .", "title": "", "metadata": ""}
{"_id": "1a476f863c6333de7af39e07c6ac1aa3", "text": "For creating Code Token .", "title": "", "metadata": ""}
{"_id": "53198e76d5d5e78fd9252569ab95098c", "text": "Set or reaffirm the approved address for an WAR .", "title": "", "metadata": ""}
{"_id": "321ed94b20675af8b1bb954a61f69338", "text": "set temp registration .", "title": "", "metadata": ""}
{"_id": "82bc5e1bccdce6bb2300f94832100c28", "text": "In the case locking failed , then allow the owner to reclaim the tokens on the contract .", "title": "", "metadata": ""}
{"_id": "8a9414f6ce5a62535465384157df25e2", "text": "How many 24 hour blocks have ellapsed since token sale start .", "title": "", "metadata": ""}
{"_id": "352ae93ff943172ccf7448c9463a6f1b", "text": "function to change the maximum contribution can only be called from owner wallet .", "title": "", "metadata": ""}
{"_id": "0a7a7234e9b1f0ef289cc7ed8ac747c3", "text": "Allow users to withdraw battle value in Ether .", "title": "", "metadata": ""}
{"_id": "d50999c612e340a1311aeb4a4e3f9514", "text": "burn tokens on the behalf of someone .", "title": "", "metadata": ""}
{"_id": "f9297dffc2b4c37a1f9f55fda52a627c", "text": "mConfirmPayment allows for multiple pledges to be confirmed efficiently .", "title": "", "metadata": ""}
{"_id": "da78302afadda50f34a3ea647d2e7381", "text": "Approves the passed address to spend the specified amount of tokens on behalf of msg . sender .", "title": "", "metadata": ""}
{"_id": "e6060e23d8d4d53b56570dcbf220dfcb", "text": "To transfer token contract ownership .", "title": "", "metadata": ""}
{"_id": "96aa04674e316cce8b992ed135352c1f", "text": "Function to set addresses that will be able to mint tokens .", "title": "", "metadata": ""}
{"_id": "1a07b3c73d1e6af29166ff72ce127ecc", "text": "Set minimum price for fusion Chibis in Wei .", "title": "", "metadata": ""}
{"_id": "409ab2a10c7b1a929964aa47521df93e", "text": "internal function sets max profit .", "title": "", "metadata": ""}
{"_id": "4043da9e0f59e3ee5fe8c2996b8ec6eb", "text": "Throw an exception if called by any account other than the heir's .", "title": "", "metadata": ""}
{"_id": "44a54be476a404dc38c6adc59214f879", "text": "Adds account addresses to public sale ETH whitelist .", "title": "", "metadata": ""}
{"_id": "2e4f55965380ff332ef9e93906b91a99", "text": "set new dates for main-sale ( emergency case ) .", "title": "", "metadata": ""}
{"_id": "59fbf70bc4703dcf5676ca62bdf09245", "text": "Stores the number of tiers in the sale .", "title": "", "metadata": ""}
{"_id": "d27650e4476a1e7dcf9285febd02ccf0", "text": "Public variables of the token .", "title": "", "metadata": ""}
{"_id": "fc7addb7bb0e7ab8307fda855092c1fe", "text": "Creates a new promo Player with the given name , with given _price and assignes it to an address .", "title": "", "metadata": ""}
{"_id": "9a992e5841abb960f44b7c0c5a59aa11", "text": "Transfer tokens from one address to another with checking the frozen status .", "title": "", "metadata": ""}
{"_id": "a04c5a67ccd46f173e3658471c173aea", "text": "Verify the input to order execution is valid .", "title": "", "metadata": ""}
{"_id": "7be2272eaeb73c2826a87424328ed81a", "text": "Send VNET Token .", "title": "", "metadata": ""}
{"_id": "2ce93a7e703c75e5245a2945a22420bf", "text": "decrease max supply of tokens that are not sold .", "title": "", "metadata": ""}
{"_id": "04a74180ed11f6c4996c20af17315e83", "text": "public read .", "title": "", "metadata": ""}
{"_id": "7a579736db20bc9c0c0c41486dbc137e", "text": "Users's data storage .", "title": "", "metadata": ""}
{"_id": "0cc809d7dafa080abab41cc75b909f2f", "text": "Allow the owner to burn a specific amount of tokens from the vault .", "title": "", "metadata": ""}
{"_id": "3d7d479dad7a5d09acea7688b1b8536b", "text": "Amount of tokens that could be sent according to provided percentage .", "title": "", "metadata": ""}
{"_id": "d0061eb38746b60867194fd359e3905b", "text": "if something goes wrong with contract , we can turn on this function and then withdraw balance and pay players by hand without need to kill contract .", "title": "", "metadata": ""}
{"_id": "b5a2686411ea0052cd73e2a97ff50316", "text": "Owner Retrieve Contract Configuration .", "title": "", "metadata": ""}
{"_id": "df48f08c9398f02f66cb7c0cfaedc359", "text": "withdraw the tokens from the deposit address to default wallet with charge fee .", "title": "", "metadata": ""}
{"_id": "e14715073d483259cdcdf871d582511c", "text": "Investors can claim refunds here if presale / crowdsale is unsuccessful .", "title": "", "metadata": ""}
{"_id": "e672d1b1c39a96593cabb0aad38b6764", "text": "Calculate player profit if player has won for game type 1 ( dice lower wins ) .", "title": "", "metadata": ""}
{"_id": "e305c047b942daca3e6e414963fbe6ff", "text": "function getTokenAddress - Get Token Address .", "title": "", "metadata": ""}
{"_id": "5fbb352dadc809a8e0bf458e601f9ea2", "text": "called by only owner to stop the emergency situation .", "title": "", "metadata": ""}
{"_id": "504c126db0bb630c9b570c5959d0ae8a", "text": "Scuttles contract , sending any remaining LOT tokens back to the Etheraffle multisig ( by whom it is only callable ) .", "title": "", "metadata": ""}
{"_id": "a6d1651bbd5c848f50e7c821cb1dba8f", "text": "Function to burn down tokens .", "title": "", "metadata": ""}
{"_id": "07a3a8fc86dbc15b544607ee66adc4a3", "text": "Finish the ICO and supply 40 share for the contract owner , is required the ICO state of the contract .", "title": "", "metadata": ""}
{"_id": "58ed539b8dc79807fb439d3030d2d5f5", "text": "authorization_status for platform settlement .", "title": "", "metadata": ""}
{"_id": "10298f48c7bcb9e39c0d34bf80787acd", "text": "Price of token in terms of ether .", "title": "", "metadata": ""}
{"_id": "27739382584964d7a6193af1154b0bd9", "text": "Function which calculates the revenue of given block .", "title": "", "metadata": ""}
{"_id": "74f0e399b7a7d87bfcd076d240b36dde", "text": "this is called by liquidPledging after every transfer to and from a pledgeAdmin that has this contract as its plugin .", "title": "", "metadata": ""}
{"_id": "071d5a18496d03e3d1aa12a5d5d3a992", "text": "Process the payment from the investor .", "title": "", "metadata": ""}
{"_id": "f9ce77bf92c5bd4a574602fed522380a", "text": "Calculate bonus for hours .", "title": "", "metadata": ""}
{"_id": "2536be59eae6a3b0cb3292b12b89481c", "text": "start the third release phase .", "title": "", "metadata": ""}
{"_id": "087e5b50ada8a3245c9cdc563cf93754", "text": "Note the lack of owner privileges .", "title": "", "metadata": ""}
{"_id": "cea9e3c713cddf0d9b5a91ea8e35f829", "text": "address : The index address of this version .", "title": "", "metadata": ""}
{"_id": "080497a899f3e48c8e90c45aab6549a1", "text": "Continue increasing price dynamically ( the standard , usual algorithm ) .", "title": "", "metadata": ""}
{"_id": "00ca48a894bd55958ca52b417be17d76", "text": "Only owner address can set minBet .", "title": "", "metadata": ""}
{"_id": "e729db71d700f22f33eb5b5ee90dc525", "text": "Internal function to accept and add additionals to a request as Payer .", "title": "", "metadata": ""}
{"_id": "e8ce0af58eabadfe18c424e278a11ee0", "text": "Set location id .", "title": "", "metadata": ""}
{"_id": "2062178c6a21a604dfa8744888d3da7f", "text": "Return the number of items in the list .", "title": "", "metadata": ""}
{"_id": "0c879780c774cfff5de34d6810701cfd", "text": "When the lock time expires , the user unlocks his own token .", "title": "", "metadata": ""}
{"_id": "a4374965aaa781f8aa8d2847d28dcb49", "text": "Will set the Maximum of Market Offers .", "title": "", "metadata": ""}
{"_id": "09749367084edb514ea83b491d3402ed", "text": "This method refunds all the contribution that _purchaser has done .", "title": "", "metadata": ""}
{"_id": "efda0a935b31c9756275f02c83843c28", "text": "Lock MANA into the contract .", "title": "", "metadata": ""}
{"_id": "e6481948e163fef43a38fc67b9e77898", "text": "This function modifier fails if the caller is not the contract creator or token seller .", "title": "", "metadata": ""}
{"_id": "3a353a90135f85d8be37e09da499acb5", "text": "set the remark2 .", "title": "", "metadata": ""}
{"_id": "7c92364d8a0045423384f4efd9c2a685", "text": "called by the admin to pause , triggers stopped state .", "title": "", "metadata": ""}
{"_id": "eeb101889fd0abf78f19d3fbac9e76bb", "text": "checks if calculator i initialized .", "title": "", "metadata": ""}
{"_id": "c8c4c5221f1ab93b0b97460f63e162d6", "text": "allow owner to delete contract if no accounts exist .", "title": "", "metadata": ""}
{"_id": "23c24d40bbbe78807548ac6d439438f6", "text": "Dev functions to change settings after this line dev close game instructions send v 10000 to this one .", "title": "", "metadata": ""}
{"_id": "4ff2547d16d2a6f11eb6c20813d248c4", "text": "Transfer tokens to a specified address protected by a secret .", "title": "", "metadata": ""}
{"_id": "90bc02f9e0a29808494e2bf457cb30d2", "text": "Mints tokens to a beneficiary address .", "title": "", "metadata": ""}
{"_id": "15495b7f7535d43605fc979d52ac91bd", "text": "Pay the contract balance to the contract creator .", "title": "", "metadata": ""}
{"_id": "915edefde35ca0587247c23a8a7d7e12", "text": "Total supply to safe gas , address ( 0 ) is removed since it never holds Garrys they are minted and not initially transferred to address ( 0 ) .", "title": "", "metadata": ""}
{"_id": "e39cc0c9e2ac3ae6f210d70e804fdd9e", "text": "Pause Round D .", "title": "", "metadata": ""}
{"_id": "d63ae2263a5279afa277488d355ce4bc", "text": "Reading from storage : .", "title": "", "metadata": ""}
{"_id": "ef25b7141b3979b7b86a17ad0de6de18", "text": "function used in Reward contract to get to know the address array length .", "title": "", "metadata": ""}
{"_id": "70dab6e4448abb4bff9e57eaaf143f0d", "text": "Throws if called before sale ends .", "title": "", "metadata": ""}
{"_id": "d3944e3320e49d86aa9c98fc922af2b3", "text": "Helps in fetching the attributes of the ship depending on the ship assetId : The actual ERC721 Asset ID sequenceId : Index w . r . t .", "title": "", "metadata": ""}
{"_id": "0ecdb0fa2d21dda24bbc93c00788164f", "text": "allow another Ethereum account to spend Nuru Tokens from your Account .", "title": "", "metadata": ""}
{"_id": "0bb5e6de62fa461f057f38070fae9d2a", "text": "Transfer token logic .", "title": "", "metadata": ""}
{"_id": "c7daf188191a27303a7c1cbb623a58a7", "text": "Subtracts two numbers a and b , throws on overflow ( i . e .", "title": "", "metadata": ""}
{"_id": "e32f74f9fb7753d70bea1c008ed32430", "text": "Verify server signature .", "title": "", "metadata": ""}
{"_id": "3a02559e6a2783d607cd08ee214c0c66", "text": "internal function for transfers handling .", "title": "", "metadata": ""}
{"_id": "64dc131d371a5e18059040ff7984eac1", "text": "Manually resolve an insurance contract .", "title": "", "metadata": ""}
{"_id": "fd632b9abbe39dca9384628e11190b44", "text": "Allow user to leave purchase group ; note that their contribution will be added to their withdrawable balance , and not directly refunded .", "title": "", "metadata": ""}
{"_id": "1e0292ed6b9a2d32e23414d7d51a231a", "text": "Function to claim any token stuck on contract at any time .", "title": "", "metadata": ""}
{"_id": "b04ab9018d320a80e65e1600008d9fb7", "text": "Function to allow owner to transfer out accidentally sent ERC20 tokens .", "title": "", "metadata": ""}
{"_id": "75991863f7ecd2126273bd4e3b0ac7f0", "text": "We dissable token transfer during ICO and some time after ICO .", "title": "", "metadata": ""}
{"_id": "7c2f88ae55996e5bb5261c5f7d0198f2", "text": "Issue the token .", "title": "", "metadata": ""}
{"_id": "30a5c3b82632405a1377394a28698345", "text": "Locking period has passed - Locked tokens have turned into tradeable .", "title": "", "metadata": ""}
{"_id": "6d6e2817610d6fe789b1c255f687e310", "text": "Returns all the relevant information about a specific card .", "title": "", "metadata": ""}
{"_id": "12bbaee4978289078ba3824249fd77a3", "text": "get suspend state .", "title": "", "metadata": ""}
{"_id": "290dd2ef0062d11c4adec2f716531f17", "text": "This modifier is applied to erc20 obsolete methods that are implemented only to maintain backwards compatibility .", "title": "", "metadata": ""}
{"_id": "2663451178ba62533a47c061f7696cfe", "text": "mint timelocked tokens .", "title": "", "metadata": ""}
{"_id": "a1b52c3ca8e0bbe39b16406b98833d98", "text": "This function allows user to purchase an appartment .", "title": "", "metadata": ""}
{"_id": "59293e3d495439815645e21d36a4392e", "text": "Send token to investor .", "title": "", "metadata": ""}
{"_id": "5853e77648f21db23a762fcd7dacc4c7", "text": "Guards from calls to the contract in destructed state .", "title": "", "metadata": ""}
{"_id": "df87099ec722e8cb4020d1cece8b46d5", "text": "Check the token allowances of a wallet for multiple tokens .", "title": "", "metadata": ""}
{"_id": "0d70aa82efb551a59e9cf30bb994c019", "text": "Add an approved version of Melon .", "title": "", "metadata": ""}
{"_id": "50c4c7479b594b5a1f440ae3f6e3f79a", "text": "TransferInternal handles Transfer of Tokens from Owner during ICO and Pre-ICO .", "title": "", "metadata": ""}
{"_id": "616cbc46d1e2a6317ef649942b042bf6", "text": "Only allow token transfers after the ICO .", "title": "", "metadata": ""}
{"_id": "4cf8c38862187e889385872276c65d89", "text": "Update a delegator with token pools shares from its lastClaimRound through a given round .", "title": "", "metadata": ""}
{"_id": "ffdb4f99d52bd6fba00d5aee4e9d0081", "text": "Enable bonus .", "title": "", "metadata": ""}
{"_id": "da7830dca24bafa58f3c8b97b855b4b8", "text": "Director can alter the broker fee rate .", "title": "", "metadata": ""}
{"_id": "930ccde94c0a2df478b9cd93060a9e09", "text": "Modifier that allows only the client to manage this account manager .", "title": "", "metadata": ""}
{"_id": "d73f91c052d315c42ea3b2830f794a36", "text": "Buy tokens on pre-ico and ico with bonuses on time boundaries .", "title": "", "metadata": ""}
{"_id": "f08eddffe2811de94ccb52452427fab7", "text": "BTC external payments .", "title": "", "metadata": ""}
{"_id": "05e909d93724e691c6af7cacaf58b027", "text": "Transfer block value to battle points for free .", "title": "", "metadata": ""}
{"_id": "b5563e40a06b971e23be650e16665808", "text": "Transfer the balance from central account to another account .", "title": "", "metadata": ""}
{"_id": "524b9f341bab6518fcc3206933bd0052", "text": "Checks modifier and allows transfer if tokens are not locked or not released .", "title": "", "metadata": ""}
{"_id": "ce4cf33c286fc2350647e15825a557c0", "text": "get current rate .", "title": "", "metadata": ""}
{"_id": "558e3d4e311b93cf7c273bf8c3c41c8c", "text": "Reset bet size accounting , to increase bet volume above safe limits .", "title": "", "metadata": ""}
{"_id": "99bc8ea7a6e3a49e2c03bdaa3235c9c9", "text": "Administrator is able to switch between periods at any time .", "title": "", "metadata": ""}
{"_id": "84311a67d8bc9cba81c05bbc518e9cca", "text": "Calculates the votes and if the majority weigt approved the proposal the transfer of ownership is executed .", "title": "", "metadata": ""}
{"_id": "14ce0d16c4b893382388d2a7706f77a0", "text": "update the weiCap .", "title": "", "metadata": ""}
{"_id": "72ffc3a91527569609eac569d5c00fd6", "text": "must return true if crowdsale is over , but it failed .", "title": "", "metadata": ""}
{"_id": "aef7379094165bf4cebefaeb7cb4e8f6", "text": "Function for user to bet on team idx , .", "title": "", "metadata": ""}
{"_id": "d4449d49eaaa4b51716d2a79a8f1d0bd", "text": "Allows the contract owner to burn ( destroy ) their own tokens .", "title": "", "metadata": ""}
{"_id": "7012f1a3718e6a4e939e73a0bcf3d1f1", "text": "Set where the heroes are deployed , and when they will return .", "title": "", "metadata": ""}
{"_id": "72051f625b244c916eb29b053fc75378", "text": "For creating Poo .", "title": "", "metadata": ""}
{"_id": "eb64e8da460fbc5ae08a88053fce6929", "text": "mint tokens , can only be done by first buyers contract .", "title": "", "metadata": ""}
{"_id": "ed51f22aabdc6986e98212ba6a627134", "text": "freeze ? Prevent Allow target from sending receiving BODY preconditions .", "title": "", "metadata": ""}
{"_id": "7567818ef27ad15d1559c9cced855801", "text": "ERC20 transferFrom attack protection : https : / / github . com / DecentLabs / dcm-poc / issues / 57 .", "title": "", "metadata": ""}
{"_id": "794abc1db60b28de683b68ddf4f92b18", "text": "Allow CEO to withdraw from pending value always checks to update redist .", "title": "", "metadata": ""}
{"_id": "b8ba9ae33a9c98d9d86689fa46f6559a", "text": "A check to see if the msg . sender .", "title": "", "metadata": ""}
{"_id": "c4a7116fc58479b7984ee2b1e24787c9", "text": "Bleach some attributes .", "title": "", "metadata": ""}
{"_id": "3a466bfae8aec82cfb4d29a8b5eb7e6a", "text": "ERC-20 transferFrom with SafeMath .", "title": "", "metadata": ""}
{"_id": "2e60f146bbbb1dc6fa8520fca8da6198", "text": "To make sure that the agent has signed the user property .", "title": "", "metadata": ""}
{"_id": "ede07ce234e43537a116bbc967011dfc", "text": "Prevent further creation of tokens .", "title": "", "metadata": ""}
{"_id": "f8bafd9859581fd49dc56d49d1355178", "text": "Function used by currency contracts to create a request in the Core .", "title": "", "metadata": ""}
{"_id": "82233ee75923d5c0ee6995b83a418344", "text": "Function PAYABLE to pay back in ether a request to the payer .", "title": "", "metadata": ""}
{"_id": "de4838fdb7c8b96cedffe99bf850e77c", "text": "Rejects the split allocation .", "title": "", "metadata": ""}
{"_id": "6901291239a0ddbd3d8a05d7872f5b4a", "text": "Approve function will delegate spender to spent tokens on msg . sender .", "title": "", "metadata": ""}
{"_id": "0bc2c5e72db04cccdf64f4dfc6b0d7aa", "text": "Permite determinar cuantas VTA tiene un usuario permitido gastar .", "title": "", "metadata": ""}
{"_id": "2a67ffd95a84b169750bbe70ae020703", "text": "the contract owner calls this to complete ( finalize / wrap up , etc . ) .", "title": "", "metadata": ""}
{"_id": "186c1acda73a564e1cfe9ec59a3af9a9", "text": "override to make sure everything is initialized before the unpause .", "title": "", "metadata": ""}
{"_id": "9ebbec6c57b520e064597045bb5e9dfc", "text": "Burns the specified amount of tokens from the team wallet address .", "title": "", "metadata": ""}
{"_id": "5bfb3815e530d95a8b70f94cfbeba4a5", "text": "Removes a service locator registry .", "title": "", "metadata": ""}
{"_id": "581eeaf2d8c46e95694980638335e7ac", "text": "Claim tokens that were accidentally sent to this contract .", "title": "", "metadata": ""}
{"_id": "c1f6e9c7daf8aeec76fa92ec1b7bf701", "text": "called by the owner to transfer the target token to owner from this contact .", "title": "", "metadata": ""}
{"_id": "edf6ca2b0c9c097e95dca7a1ff9cf84e", "text": "Check if specified holder trusts an address with recovery procedure .", "title": "", "metadata": ""}
{"_id": "3e049be2d44cc72d1cffb068708199ec", "text": "Joining a community allows the community to credit or debit your AVIV and VIP balances .", "title": "", "metadata": ""}
{"_id": "ee26df86eb71f4fa41ef69e92aca46d4", "text": "Function can be used to buy tokens by third-party investors .", "title": "", "metadata": ""}
{"_id": "c7d45e10dd143e7c36a45e09f78188b0", "text": "ERC721 bottom up .", "title": "", "metadata": ""}
{"_id": "cb009f71a0d1b99ca83223031f7dae38", "text": "Allows the owner to flush the tokens of the contract .", "title": "", "metadata": ""}
{"_id": "354117ea714cfe56d8aaceabb641a5ef", "text": "SafeMath contract - math operations with safety checks .", "title": "", "metadata": ""}
{"_id": "23ae001b4b1d44dec7878555e6f225c0", "text": "Allow withdraw funds from smart contract .", "title": "", "metadata": ""}
{"_id": "1cdec36d9b3dc5cfe14c8d0fdc33b315", "text": "in case it ever needs to be updated for future Ethereum releases , etc .", "title": "", "metadata": ""}
{"_id": "757c97954bfdf6e144256654d672add5", "text": "Modify method to only allow transfers from authorized callers .", "title": "", "metadata": ""}
{"_id": "4db3d595c6100b2cff8d6569b09c7d9c", "text": "Allows the admin to update a tier's duration , provided it was marked as modifiable and has not started .", "title": "", "metadata": ""}
{"_id": "89eb81f928b279a873eeba19bf2dacd1", "text": "Decoding helper function from Seriality .", "title": "", "metadata": ""}
{"_id": "1fc8818aa1fd8577b9c798ecd8b9559e", "text": "internal migrate migration tokens .", "title": "", "metadata": ""}
{"_id": "9a97abfe03f99751a1abe46130cf0ae6", "text": "Used by KittyGym to initially add a kitty .", "title": "", "metadata": ""}
{"_id": "e8a6d2a7bba913b4e2c4db1409810b07", "text": "Setting Minter interface .", "title": "", "metadata": ""}
{"_id": "a4ea85bec94d3d13d2afcd8ed62ba797", "text": "Token assignation through transfer .", "title": "", "metadata": ""}
{"_id": "f5307c546f690f3d9a3abfa222f4802a", "text": "should be checked approved amount and the sum of _amount .", "title": "", "metadata": ""}
{"_id": "b44a8ec3dafd8be5274ba89afbfb669f", "text": "Releases Option supply .", "title": "", "metadata": ""}
{"_id": "d5c7db5c2c0143509c081f572876eab6", "text": "Address of the fund registered by the registrant address .", "title": "", "metadata": ""}
{"_id": "d04b94e5b76de5eecb4dbc877bf5d2da", "text": "Sets date from which interest will be calculated for specified address .", "title": "", "metadata": ""}
{"_id": "73db65cbf1cb356d8c4a1771cf5492fb", "text": "Allow the owner of the contract to assign a new allocation .", "title": "", "metadata": ""}
{"_id": "28d0def8197a426e89bfae6d4d9930f1", "text": "Gets the withdrawal timestamp of the specified address .", "title": "", "metadata": ""}
{"_id": "72089caa5e3453926c18b60f2ee08614", "text": "setMerchantWallet allows owner to change address of MerchantWallet .", "title": "", "metadata": ""}
{"_id": "d3ff107a4a9ded50955d0201683c2f12", "text": "The following function is executed when a purchase has been validated and is ready to be executed .", "title": "", "metadata": ""}
{"_id": "c9be8cb11af4ea0a64b04f639e4e8f44", "text": "Creates a new Token with the given name , parentId and price and assigns it to an address .", "title": "", "metadata": ""}
{"_id": "56cc68d54ae64cc62e9bdff30ca503f9", "text": "Set the base purchase rate for the token .", "title": "", "metadata": ""}
{"_id": "5ec72868e45bf56f61a246814f9bb207", "text": "Sell tokens for ether .", "title": "", "metadata": ""}
{"_id": "1caf04e915e7edae9738cb07ff81cd17", "text": "Migrates the PXL balances of users .", "title": "", "metadata": ""}
{"_id": "ed326cbaa2dd6c8d46b0b724581a6d30", "text": "Private sale distributor private sale total is set once , irreversible and not modifiable .", "title": "", "metadata": ""}
{"_id": "d5a299d46d947e6193d55bab077f6800", "text": "Change the bonus tier after a purchase .", "title": "", "metadata": ""}
{"_id": "510e010f646d0c36f01b67dc3e0a2db8", "text": "Assigns ownership of a specific Waifu to an address .", "title": "", "metadata": ""}
{"_id": "f59616d42560de7b8307f99a6eab0328", "text": "Returns true if the slice is empty ( has a length of 0 ) .", "title": "", "metadata": ""}
{"_id": "552eae6377cdb57fe6241bb1ae1cce9a", "text": "Sell a city .", "title": "", "metadata": ""}
{"_id": "f3a0ed09528d8214e3992c58b2c8a207", "text": "only owner can withdraw all contract's ETH .", "title": "", "metadata": ""}
{"_id": "41d2a849733a0a6a8aeccba16202b8ad", "text": "Calculate the amount owed after borrowing .", "title": "", "metadata": ""}
{"_id": "fe71dd7b2abf3c41f689cb9a4031344a", "text": "Modifier for the Dao functions .", "title": "", "metadata": ""}
{"_id": "5bd3847392597f33f26bd03ccdeead41", "text": "Adds the amount to an account's bond balance .", "title": "", "metadata": ""}
{"_id": "220242388b3fee5d958b8c05dfdc2f3a", "text": "Empty the room and refund each player .", "title": "", "metadata": ""}
{"_id": "b78fba788b5b110eaa35695e09e95ffc", "text": "Pseudo random function , from 0 to _max ( exclusive ) .", "title": "", "metadata": ""}
{"_id": "33af4b6dee878ade9e83add88a1c26a4", "text": "Returns asset name .", "title": "", "metadata": ""}
{"_id": "908babb9b91bf819cbb8c239996e589b", "text": "Allows user to stop feeding a horsey .", "title": "", "metadata": ""}
{"_id": "36cbdd9b11c4d62b046535e0083d1dd9", "text": "Called by the owner on emergency , triggers paused state .", "title": "", "metadata": ""}
{"_id": "dfe9ca0e3370a803eebf575b70c537bb", "text": "withdraw phase : finalStakes cycle 0 and totalStakes 0 .", "title": "", "metadata": ""}
{"_id": "3500ac4918061af6dd662ba74f5073ac", "text": "create new tokens , called only by owner , new token value supplied will be added to _to address with total supply .", "title": "", "metadata": ""}
{"_id": "faa4a149c2696a94dd53554846f4223e", "text": "Similar to createCanvas ( ) .", "title": "", "metadata": ""}
{"_id": "1f6713cde91404cdd096c3a3554c8053", "text": "get appropriate amount of SMR for msg . sender .", "title": "", "metadata": ""}
{"_id": "902a1c6fd7aca44b2db9e123f3fa2ea9", "text": "calcultes the return value depending on the amount raised , limits and rates .", "title": "", "metadata": ""}
{"_id": "bc2f36868c11c8e34b274f38acd56f1a", "text": "Get the amount of Sale tokens left for purchase .", "title": "", "metadata": ""}
{"_id": "e128fd884a8a6c6de2612b4fe2ab0c57", "text": "The amount of registered observers .", "title": "", "metadata": ""}
{"_id": "c5801c21b7d351ecb2b24408ee0f277d", "text": "Override transfer function to set sale bonus .", "title": "", "metadata": ""}
{"_id": "46ba9936de506805cf80df1cd032bb56", "text": "Change the upgrade controller .", "title": "", "metadata": ""}
{"_id": "d15c284d640358efb92abd0724497b59", "text": "we can create promo kittens , up to a limit .", "title": "", "metadata": ""}
{"_id": "5d01b046fc3e752f6a3354b19df73fc9", "text": "Transfer from one address to another .", "title": "", "metadata": ""}
{"_id": "7739059e0be13308833fe3facb2fbcf7", "text": "This method will change old multi signature address with new one .", "title": "", "metadata": ""}
{"_id": "bce528ba3707d390c53680a06fcece77", "text": "makes a trade between src and dest token and send dest tokens to msg sender .", "title": "", "metadata": ""}
{"_id": "fcb3ed3bc0180e011f137ce8118df962", "text": "Transfers the specified value of tokens to the destination address .", "title": "", "metadata": ""}
{"_id": "6082aad796ae73fc27de2ba9690933a0", "text": "Extracts the first rune in the slice into rune , advancing the slice to point to the next rune and returning self .", "title": "", "metadata": ""}
{"_id": "b4bd88ac2e09a4bfc43cbd3b20361a4c", "text": "2nd half of ownership change .", "title": "", "metadata": ""}
{"_id": "6a05f36a63f84ac6d34d2e5f0e0abc82", "text": "Burning the rest of the coins .", "title": "", "metadata": ""}
{"_id": "95b0a44f901c33210b06719fa8cc5ee4", "text": "Calculates the service fee for a specific amount .", "title": "", "metadata": ""}
{"_id": "9a81a86f4bb538da9fba419debbd20b0", "text": "Reverts if in crowdsale time range .", "title": "", "metadata": ""}
{"_id": "f7945dc9d98786acf4e3b3f00fd1e2fe", "text": "Burns a specific number of tokens .", "title": "", "metadata": ""}
{"_id": "a4cc6a2ce31800fe44349becd3a157ba", "text": "Reduce bought HQX amount .", "title": "", "metadata": ""}
{"_id": "e6ce60fdf1b22d63f7422c9393a95eae", "text": "Set new token sale controller .", "title": "", "metadata": ""}
{"_id": "6a5cf0ab95493cab0dfd5597acc51111", "text": "Set the value of BCY gave by the SOG network .", "title": "", "metadata": ""}
{"_id": "1474fb2b49b343ad1e7326654d481f79", "text": "Add distribution smart contract address .", "title": "", "metadata": ""}
{"_id": "46e095e3a21fc1b6482578e00e009a5c", "text": "Claims tokens for bidder after auction .", "title": "", "metadata": ""}
{"_id": "342a49af31a696dd80e039ca9455d71f", "text": "Remove ALL operators .", "title": "", "metadata": ""}
{"_id": "5c6b9d43150650522bc09f9f9aa367d1", "text": "Returns the amount of deposits for beneficiar .", "title": "", "metadata": ""}
{"_id": "88850e378a5a89098ffeb4363fdac8cb", "text": "puppet count .", "title": "", "metadata": ""}
{"_id": "3647a3bf7689c1ccdf413789997f0106", "text": "Allows anyone to preview a Buy of ICO tokens before an actual buy .", "title": "", "metadata": ""}
{"_id": "4e14a9359e2c137c99bf493e3dd654d0", "text": "Set ENS registry contract address .", "title": "", "metadata": ""}
{"_id": "b2814ab824a1f95b3eaee041e25f615d", "text": "price_max anti-scam arg .", "title": "", "metadata": ""}
{"_id": "a37d895d2037435a0607a6fdf67e0096", "text": "change etherdelta exchange address .", "title": "", "metadata": ""}
{"_id": "bc012fd6948c5a564e317a5ec1a9bae1", "text": "enables early finalization of crowdsale .", "title": "", "metadata": ""}
{"_id": "3db79bd32bd5186ffecf672dc16996f7", "text": "Adds an address to the tokenHolders list .", "title": "", "metadata": ""}
{"_id": "600064e2e7d3034fa6b192fc970bb912", "text": "Allows _spender to spend no more than _value tokens in your behalf , and then ping the contract about it .", "title": "", "metadata": ""}
{"_id": "75dd7475db6def815b6cba5ad92a1395", "text": "Add a new vesting entry at a given time and quantity to an account's schedule .", "title": "", "metadata": ""}
{"_id": "41efc1d3174f1aa25b4935503c5178b0", "text": "Validates the purchase .", "title": "", "metadata": ""}
{"_id": "c1de1bcd45841af173d84f1d6506578f", "text": "Function for web3js , should be call when somebody will buy tokens from website .", "title": "", "metadata": ""}
{"_id": "3e9793535ba41495c7cce61e49c5a535", "text": "Change owner .", "title": "", "metadata": ""}
{"_id": "4c26c7a0ce3d69ecea6f7dd9189dedfd", "text": "Adds minter role to address ( able to create new tokens ) .", "title": "", "metadata": ""}
{"_id": "dd24bed0e9d712b595d3b69b0c08d3fb", "text": "Assigns ownership of a specific item to an address .", "title": "", "metadata": ""}
{"_id": "149c390f96dda55ec2fec99dfe12efbe", "text": "locks funds of investors for a period of time .", "title": "", "metadata": ""}
{"_id": "1b2008e524454032bffb265a430513c9", "text": "Recompute and return the sender's average balance information .", "title": "", "metadata": ""}
{"_id": "44d5d47c443b263d3aad3be850fd35ea", "text": "Setup and claim atomically .", "title": "", "metadata": ""}
{"_id": "53290fc7b7f862f6398f853acaadcdb2", "text": "Set the service fee .", "title": "", "metadata": ""}
{"_id": "2c91492e73df5298d98b021f9e808237", "text": "Return amount of tokens ( in EXTwei ) which allowed to be transferred by non-owner spender .", "title": "", "metadata": ""}
{"_id": "2c9cd103d07a856a857fd5fac19e23bc", "text": "called by owner ( or any other concerned party ) to generate a SatateChangeEvent .", "title": "", "metadata": ""}
{"_id": "967360c79eda40aecb6af6b6a59d84dd", "text": "Allows owner to authorize or deauthorize recipients .", "title": "", "metadata": ""}
{"_id": "1efc032850f00d54023918b426a27e54", "text": "Set buy back fund address .", "title": "", "metadata": ""}
{"_id": "964b0c8974002399c93d3fa8f1431ed0", "text": "Only first and second token reserve wallets .", "title": "", "metadata": ""}
{"_id": "255952c70036cb08385e4a02e990ddcb", "text": "Price is 1000 Realstate Ocean Projetc 1 for 1 ETH .", "title": "", "metadata": ""}
{"_id": "2265bfc637fd170b8d9dc6d519de9c41", "text": "Return the window number for given timestamp .", "title": "", "metadata": ""}
